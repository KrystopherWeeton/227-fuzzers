; ModuleID = 'gen/ui/gfx/x/xkb.cc'
source_filename = "gen/ui/gfx/x/xkb.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.x11::Xkb" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::Xkb::KeyboardError" = type <{ %"class.x11::Error", i16, [2 x i8], i32, i16, i8, [5 x i8] }>
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"struct.x11::Xkb::NewKeyboardNotifyEvent" = type { i8, i8, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"struct.x11::Xkb::MapNotifyEvent" = type { i8, i8, i16, i32, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"struct.x11::Xkb::StateNotifyEvent" = type { i8, i8, i16, i32, i8, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"struct.x11::Xkb::ControlsNotifyEvent" = type { i8, i8, i16, i32, i8, i8, i32, i32, i32, i8, i8, i8, i8 }
%"struct.x11::Xkb::IndicatorStateNotifyEvent" = type { i8, i8, i16, i32, i8, i32, i32 }
%"struct.x11::Xkb::IndicatorMapNotifyEvent" = type { i8, i8, i16, i32, i8, i32, i32 }
%"struct.x11::Xkb::NamesNotifyEvent" = type { i8, i8, i16, i32, i8, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i32 }
%"struct.x11::Xkb::CompatMapNotifyEvent" = type <{ i8, i8, i16, i32, i8, [3 x i8], i32, i16, i16, i16, [2 x i8] }>
%"struct.x11::Xkb::BellNotifyEvent" = type <{ i8, i8, i16, i32, i8, [3 x i8], i32, i8, i8, i16, i16, [2 x i8], i32, i32, i8, [3 x i8] }>
%"struct.x11::Xkb::ActionMessageEvent" = type { i8, i8, i16, i32, i8, i8, i8, i8, i32, i32, %"struct.std::__1::array.257" }
%"struct.std::__1::array.257" = type { [8 x i8] }
%"struct.x11::Xkb::AccessXNotifyEvent" = type { i8, i8, i16, i32, i8, i8, i32, i16, i16 }
%"struct.x11::Xkb::ExtensionDeviceNotifyEvent" = type { i8, i8, i16, i32, i8, i32, i32, i16, i32, i32, i8, i8, i32, i32 }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::Xkb::UseExtensionRequest" = type { i16, i16 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.271"* }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { i8*, i8*, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { i8* }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.264", %"class.std::__1::vector.271", i64, %"class.std::__1::vector.278" }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %class.scoped_refptr.247*, %class.scoped_refptr.247*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %class.scoped_refptr.247* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { i32*, i32*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { i32* }
%"struct.x11::Xkb::UseExtensionReply" = type { i8, i16, i16, i16 }
%"struct.x11::Xkb::SelectEventsRequest" = type { i16, i32, i32, i32, i32, i32, %"class.absl::optional.292", %"class.absl::optional.292", %"class.absl::optional.297", %"class.absl::optional.297", %"class.absl::optional.302", %"class.absl::optional.302", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.307", %"class.absl::optional.307", %"class.absl::optional.312", %"class.absl::optional.312", %"class.absl::optional.317", %"class.absl::optional.317", %"class.absl::optional.317", %"class.absl::optional.317", %"class.absl::optional.322", %"class.absl::optional.322", %"class.absl::optional.327", %"class.absl::optional.327" }
%"class.absl::optional.292" = type { %"class.absl::optional_internal::optional_data.293" }
%"class.absl::optional_internal::optional_data.293" = type { %"class.absl::optional_internal::optional_data_base.294" }
%"class.absl::optional_internal::optional_data_base.294" = type { %"class.absl::optional_internal::optional_data_dtor_base.295" }
%"class.absl::optional_internal::optional_data_dtor_base.295" = type { i8, %union.anon.296 }
%union.anon.296 = type { i32 }
%"class.absl::optional.297" = type { %"class.absl::optional_internal::optional_data.298" }
%"class.absl::optional_internal::optional_data.298" = type { %"class.absl::optional_internal::optional_data_base.299" }
%"class.absl::optional_internal::optional_data_base.299" = type { %"class.absl::optional_internal::optional_data_dtor_base.300" }
%"class.absl::optional_internal::optional_data_dtor_base.300" = type { i8, %union.anon.301 }
%union.anon.301 = type { i32 }
%"class.absl::optional.302" = type { %"class.absl::optional_internal::optional_data.303" }
%"class.absl::optional_internal::optional_data.303" = type { %"class.absl::optional_internal::optional_data_base.304" }
%"class.absl::optional_internal::optional_data_base.304" = type { %"class.absl::optional_internal::optional_data_dtor_base.305" }
%"class.absl::optional_internal::optional_data_dtor_base.305" = type { i8, %union.anon.306 }
%union.anon.306 = type { i32 }
%"class.absl::optional.307" = type { %"class.absl::optional_internal::optional_data.308" }
%"class.absl::optional_internal::optional_data.308" = type { %"class.absl::optional_internal::optional_data_base.309" }
%"class.absl::optional_internal::optional_data_base.309" = type { %"class.absl::optional_internal::optional_data_dtor_base.310" }
%"class.absl::optional_internal::optional_data_dtor_base.310" = type { i8, %union.anon.311 }
%union.anon.311 = type { i32 }
%"class.absl::optional.312" = type { %"class.absl::optional_internal::optional_data.313" }
%"class.absl::optional_internal::optional_data.313" = type { %"class.absl::optional_internal::optional_data_base.314" }
%"class.absl::optional_internal::optional_data_base.314" = type { %"class.absl::optional_internal::optional_data_dtor_base.315" }
%"class.absl::optional_internal::optional_data_dtor_base.315" = type { i8, %union.anon.316 }
%union.anon.316 = type { i32 }
%"class.absl::optional.317" = type { %"class.absl::optional_internal::optional_data.318" }
%"class.absl::optional_internal::optional_data.318" = type { %"class.absl::optional_internal::optional_data_base.319" }
%"class.absl::optional_internal::optional_data_base.319" = type { %"class.absl::optional_internal::optional_data_dtor_base.320" }
%"class.absl::optional_internal::optional_data_dtor_base.320" = type { i8, %union.anon.321 }
%union.anon.321 = type { i8 }
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { i32 }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { i32 }
%"struct.x11::Xkb::BellRequest" = type { i16, i16, i16, i8, i8, i8, i16, i16, i32, i32 }
%"struct.x11::Xkb::GetStateRequest" = type { i16 }
%"struct.x11::Xkb::GetStateReply" = type { i8, i16, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32 }
%"struct.x11::Xkb::LatchLockStateRequest" = type { i16, i32, i32, i8, i32, i32, i8, i16 }
%"struct.x11::Xkb::GetControlsRequest" = type { i16 }
%"struct.x11::Xkb::GetControlsReply" = type { i8, i16, i8, i8, i8, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i32, i32, i32, i32, i32, %"struct.std::__1::array.343" }
%"struct.std::__1::array.343" = type { [32 x i8] }
%"struct.x11::Xkb::SetControlsRequest" = type { i16, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, %"struct.std::__1::array.343" }
%"struct.x11::Xkb::GetMapRequest" = type <{ i16, [2 x i8], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"struct.x11::Xkb::GetMapReply" = type { i8, i16, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.absl::optional.351", %"class.absl::optional.377", %"class.absl::optional.397", %"class.absl::optional.402", %"class.absl::optional.415", %"class.absl::optional.427", %"class.absl::optional.439", %"class.absl::optional.451", %"class.absl::optional.463" }
%"class.absl::optional.351" = type { %"class.absl::optional_internal::optional_data.352" }
%"class.absl::optional_internal::optional_data.352" = type { %"class.absl::optional_internal::optional_data_base.353" }
%"class.absl::optional_internal::optional_data_base.353" = type { %"class.absl::optional_internal::optional_data_dtor_base.354" }
%"class.absl::optional_internal::optional_data_dtor_base.354" = type { i8, %union.anon.355 }
%union.anon.355 = type { %"class.std::__1::vector.356" }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"*, %"class.std::__1::__compressed_pair.372" }
%"struct.x11::Xkb::KeyType" = type { i32, i32, i32, i8, i8, %"class.std::__1::vector.358", %"class.std::__1::vector.365" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"*, %"class.std::__1::__compressed_pair.360" }
%"struct.x11::Xkb::KTMapEntry" = type { i8, i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.x11::Xkb::KTMapEntry"* }
%"class.std::__1::vector.365" = type { %"class.std::__1::__vector_base.366" }
%"class.std::__1::__vector_base.366" = type { %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"*, %"class.std::__1::__compressed_pair.367" }
%"struct.x11::Xkb::ModDef" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.x11::Xkb::ModDef"* }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.x11::Xkb::KeyType"* }
%"class.absl::optional.377" = type { %"class.absl::optional_internal::optional_data.378" }
%"class.absl::optional_internal::optional_data.378" = type { %"class.absl::optional_internal::optional_data_base.379" }
%"class.absl::optional_internal::optional_data_base.379" = type { %"class.absl::optional_internal::optional_data_dtor_base.380" }
%"class.absl::optional_internal::optional_data_dtor_base.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { %"class.std::__1::vector.382" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"*, %"class.std::__1::__compressed_pair.392" }
%"struct.x11::Xkb::KeySymMap" = type { %"struct.std::__1::array.384", i8, i8, %"class.std::__1::vector.385" }
%"struct.std::__1::array.384" = type { [4 x i8] }
%"class.std::__1::vector.385" = type { %"class.std::__1::__vector_base.386" }
%"class.std::__1::__vector_base.386" = type { i32*, i32*, %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { i32* }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.x11::Xkb::KeySymMap"* }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, %union.anon.401 }
%union.anon.401 = type { %"class.std::__1::vector.271" }
%"class.absl::optional.402" = type { %"class.absl::optional_internal::optional_data.403" }
%"class.absl::optional_internal::optional_data.403" = type { %"class.absl::optional_internal::optional_data_base.404" }
%"class.absl::optional_internal::optional_data_base.404" = type { %"class.absl::optional_internal::optional_data_dtor_base.405" }
%"class.absl::optional_internal::optional_data_dtor_base.405" = type { i8, %union.anon.406 }
%union.anon.406 = type { %"class.std::__1::vector.407" }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"*, %"class.std::__1::__compressed_pair.410" }
%"union.x11::Xkb::Action" = type { %"struct.x11::Xkb::SAIsoLock" }
%"struct.x11::Xkb::SAIsoLock" = type { i32, i32, i32, i32, i8, i32, i32, i32 }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"union.x11::Xkb::Action"* }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.std::__1::vector.420" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"*, %"class.std::__1::__compressed_pair.422" }
%"struct.x11::Xkb::SetBehavior" = type { i8, %"union.x11::Xkb::Behavior" }
%"union.x11::Xkb::Behavior" = type { %"struct.x11::Xkb::CommonBehavior" }
%"struct.x11::Xkb::CommonBehavior" = type { i8, i8 }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.x11::Xkb::SetBehavior"* }
%"class.absl::optional.427" = type { %"class.absl::optional_internal::optional_data.428" }
%"class.absl::optional_internal::optional_data.428" = type { %"class.absl::optional_internal::optional_data_base.429" }
%"class.absl::optional_internal::optional_data_base.429" = type { %"class.absl::optional_internal::optional_data_dtor_base.430" }
%"class.absl::optional_internal::optional_data_dtor_base.430" = type { i8, %union.anon.431 }
%union.anon.431 = type { %"class.std::__1::vector.432" }
%"class.std::__1::vector.432" = type { %"class.std::__1::__vector_base.433" }
%"class.std::__1::__vector_base.433" = type { i32*, i32*, %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { i32* }
%"class.absl::optional.439" = type { %"class.absl::optional_internal::optional_data.440" }
%"class.absl::optional_internal::optional_data.440" = type { %"class.absl::optional_internal::optional_data_base.441" }
%"class.absl::optional_internal::optional_data_base.441" = type { %"class.absl::optional_internal::optional_data_dtor_base.442" }
%"class.absl::optional_internal::optional_data_dtor_base.442" = type { i8, %union.anon.443 }
%union.anon.443 = type { %"class.std::__1::vector.444" }
%"class.std::__1::vector.444" = type { %"class.std::__1::__vector_base.445" }
%"class.std::__1::__vector_base.445" = type { %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"*, %"class.std::__1::__compressed_pair.446" }
%"struct.x11::Xkb::SetExplicit" = type { i8, i32 }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.x11::Xkb::SetExplicit"* }
%"class.absl::optional.451" = type { %"class.absl::optional_internal::optional_data.452" }
%"class.absl::optional_internal::optional_data.452" = type { %"class.absl::optional_internal::optional_data_base.453" }
%"class.absl::optional_internal::optional_data_base.453" = type { %"class.absl::optional_internal::optional_data_dtor_base.454" }
%"class.absl::optional_internal::optional_data_dtor_base.454" = type { i8, %union.anon.455 }
%union.anon.455 = type { %"class.std::__1::vector.456" }
%"class.std::__1::vector.456" = type { %"class.std::__1::__vector_base.457" }
%"class.std::__1::__vector_base.457" = type { %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"*, %"class.std::__1::__compressed_pair.458" }
%"struct.x11::Xkb::KeyModMap" = type { i8, i32 }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.x11::Xkb::KeyModMap"* }
%"class.absl::optional.463" = type { %"class.absl::optional_internal::optional_data.464" }
%"class.absl::optional_internal::optional_data.464" = type { %"class.absl::optional_internal::optional_data_base.465" }
%"class.absl::optional_internal::optional_data_base.465" = type { %"class.absl::optional_internal::optional_data_dtor_base.466" }
%"class.absl::optional_internal::optional_data_dtor_base.466" = type { i8, %union.anon.467 }
%union.anon.467 = type { %"class.std::__1::vector.468" }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"*, %"class.std::__1::__compressed_pair.470" }
%"struct.x11::Xkb::KeyVModMap" = type { i8, i32 }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"struct.x11::Xkb::KeyVModMap"* }
%"struct.x11::Xkb::SetMapRequest" = type { i16, i32, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.absl::optional.489", %"class.absl::optional.377", %"class.absl::optional.397", %"class.absl::optional.402", %"class.absl::optional.415", %"class.absl::optional.397", %"class.absl::optional.439", %"class.absl::optional.451", %"class.absl::optional.463" }
%"class.absl::optional.489" = type { %"class.absl::optional_internal::optional_data.490" }
%"class.absl::optional_internal::optional_data.490" = type { %"class.absl::optional_internal::optional_data_base.491" }
%"class.absl::optional_internal::optional_data_base.491" = type { %"class.absl::optional_internal::optional_data_dtor_base.492" }
%"class.absl::optional_internal::optional_data_dtor_base.492" = type { i8, %union.anon.493 }
%union.anon.493 = type { %"class.std::__1::vector.494" }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"*, %"class.std::__1::__compressed_pair.503" }
%"struct.x11::Xkb::SetKeyType" = type { i32, i32, i32, i8, i8, %"class.std::__1::vector.496", %"class.std::__1::vector.496" }
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"*, %"class.std::__1::__compressed_pair.498" }
%"struct.x11::Xkb::KTSetMapEntry" = type { i8, i32, i32 }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.x11::Xkb::KTSetMapEntry"* }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.x11::Xkb::SetKeyType"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.x11::Xkb::GetCompatMapRequest" = type <{ i16, [2 x i8], i32, i8, i8, i16, i16, [2 x i8] }>
%"struct.x11::Xkb::GetCompatMapReply" = type { i8, i16, i32, i16, i16, %"class.std::__1::vector.522", %"class.std::__1::vector.365" }
%"class.std::__1::vector.522" = type { %"class.std::__1::__vector_base.523" }
%"class.std::__1::__vector_base.523" = type { %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"*, %"class.std::__1::__compressed_pair.525" }
%"struct.x11::Xkb::SymInterpret" = type { i32, i32, i8, i32, i8, [3 x i8], %"struct.x11::Xkb::SIAction" }
%"struct.x11::Xkb::SIAction" = type <{ i32, %"struct.std::__1::array.524", i8 }>
%"struct.std::__1::array.524" = type { [7 x i8] }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.x11::Xkb::SymInterpret"* }
%"struct.x11::Xkb::SetCompatMapRequest" = type { i16, i8, i8, i32, i16, %"class.std::__1::vector.522", %"class.std::__1::vector.365" }
%"struct.x11::Xkb::GetIndicatorStateRequest" = type { i16 }
%"struct.x11::Xkb::GetIndicatorStateReply" = type { i8, i16, i32 }
%"struct.x11::Xkb::GetIndicatorMapRequest" = type { i16, i32 }
%"struct.x11::Xkb::GetIndicatorMapReply" = type { i8, i16, i32, i32, i8, %"class.std::__1::vector.547" }
%"class.std::__1::vector.547" = type { %"class.std::__1::__vector_base.548" }
%"class.std::__1::__vector_base.548" = type { %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"*, %"class.std::__1::__compressed_pair.549" }
%"struct.x11::Xkb::IndicatorMap" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.x11::Xkb::IndicatorMap"* }
%"struct.x11::Xkb::SetIndicatorMapRequest" = type { i16, i32, %"class.std::__1::vector.547" }
%"struct.x11::Xkb::GetNamedIndicatorRequest" = type { i16, i32, i16, i32 }
%"struct.x11::Xkb::GetNamedIndicatorReply" = type <{ i8, i8, i16, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.x11::Xkb::SetNamedIndicatorRequest" = type { i16, i32, i16, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32 }
%"struct.x11::Xkb::GetNamesRequest" = type { i16, i32 }
%"struct.x11::Xkb::GetNamesReply" = type { i8, i16, i8, i8, i8, i32, i32, i8, i8, i32, i8, i8, i16, %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.575", %"class.absl::optional.397", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.587", %"class.absl::optional.600", %"class.absl::optional.575" }
%"class.absl::optional.570" = type { %"class.absl::optional_internal::optional_data.571" }
%"class.absl::optional_internal::optional_data.571" = type { %"class.absl::optional_internal::optional_data_base.572" }
%"class.absl::optional_internal::optional_data_base.572" = type { %"class.absl::optional_internal::optional_data_dtor_base.573" }
%"class.absl::optional_internal::optional_data_dtor_base.573" = type { i8, %union.anon.574 }
%union.anon.574 = type { i32 }
%"class.absl::optional.587" = type { %"class.absl::optional_internal::optional_data.588" }
%"class.absl::optional_internal::optional_data.588" = type { %"class.absl::optional_internal::optional_data_base.589" }
%"class.absl::optional_internal::optional_data_base.589" = type { %"class.absl::optional_internal::optional_data_dtor_base.590" }
%"class.absl::optional_internal::optional_data_dtor_base.590" = type { i8, %union.anon.591 }
%union.anon.591 = type { %"class.std::__1::vector.592" }
%"class.std::__1::vector.592" = type { %"class.std::__1::__vector_base.593" }
%"class.std::__1::__vector_base.593" = type { %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"*, %"class.std::__1::__compressed_pair.595" }
%"struct.x11::Xkb::KeyName" = type { %"struct.std::__1::array.594" }
%"struct.std::__1::array.594" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.x11::Xkb::KeyName"* }
%"class.absl::optional.600" = type { %"class.absl::optional_internal::optional_data.601" }
%"class.absl::optional_internal::optional_data.601" = type { %"class.absl::optional_internal::optional_data_base.602" }
%"class.absl::optional_internal::optional_data_base.602" = type { %"class.absl::optional_internal::optional_data_dtor_base.603" }
%"class.absl::optional_internal::optional_data_dtor_base.603" = type { i8, %union.anon.604 }
%union.anon.604 = type { %"class.std::__1::vector.605" }
%"class.std::__1::vector.605" = type { %"class.std::__1::__vector_base.606" }
%"class.std::__1::__vector_base.606" = type { %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"*, %"class.std::__1::__compressed_pair.607" }
%"struct.x11::Xkb::KeyAlias" = type { %"struct.std::__1::array.594", %"struct.std::__1::array.594" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.x11::Xkb::KeyAlias"* }
%"class.absl::optional.575" = type { %"class.absl::optional_internal::optional_data.576" }
%"class.absl::optional_internal::optional_data.576" = type { %"class.absl::optional_internal::optional_data_base.577" }
%"class.absl::optional_internal::optional_data_base.577" = type { %"class.absl::optional_internal::optional_data_dtor_base.578" }
%"class.absl::optional_internal::optional_data_dtor_base.578" = type { i8, %union.anon.579 }
%union.anon.579 = type { %"class.std::__1::vector.580" }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { i32*, i32*, %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { i32* }
%"struct.x11::Xkb::SetNamesRequest" = type { i16, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i16, %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.575", %"class.absl::optional.397", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.587", %"class.absl::optional.600", %"class.absl::optional.575" }
%"struct.x11::Xkb::PerClientFlagsRequest" = type { i16, i32, i32, i32, i32, i32 }
%"struct.x11::Xkb::PerClientFlagsReply" = type { i8, i16, i32, i32, i32, i32 }
%"struct.x11::Xkb::ListComponentsRequest" = type { i16, i16 }
%"struct.x11::Xkb::ListComponentsReply" = type { i8, i16, i16, %"class.std::__1::vector.634", %"class.std::__1::vector.634", %"class.std::__1::vector.634", %"class.std::__1::vector.634", %"class.std::__1::vector.634", %"class.std::__1::vector.634" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"*, %"class.std::__1::__compressed_pair.643" }
%"struct.x11::Xkb::Listing" = type { i16, %"class.std::__1::vector.636" }
%"class.std::__1::vector.636" = type { %"class.std::__1::__vector_base.637" }
%"class.std::__1::__vector_base.637" = type { i8*, i8*, %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { i8* }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.x11::Xkb::Listing"* }
%"struct.x11::Xkb::GetKbdByNameRequest" = type <{ i16, [2 x i8], i32, i32, i8, [3 x i8] }>
%"struct.x11::Xkb::GetKbdByNameReply" = type { i8, i16, i8, i8, i8, i8, i32, %"class.absl::optional.657", %"class.absl::optional.662", %"class.absl::optional.667", %"class.absl::optional.672", %"class.absl::optional.677" }
%"class.absl::optional.657" = type { %"class.absl::optional_internal::optional_data.658" }
%"class.absl::optional_internal::optional_data.658" = type { %"class.absl::optional_internal::optional_data_base.659" }
%"class.absl::optional_internal::optional_data_base.659" = type { %"class.absl::optional_internal::optional_data_dtor_base.660" }
%"class.absl::optional_internal::optional_data_dtor_base.660" = type { i8, %union.anon.661 }
%union.anon.661 = type { %"struct.x11::Xkb::GetKbdByNameReply::Types" }
%"struct.x11::Xkb::GetKbdByNameReply::Types" = type { i8, i8, i16, i32, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.absl::optional.351", %"class.absl::optional.377", %"class.absl::optional.397", %"class.absl::optional.402", %"class.absl::optional.415", %"class.absl::optional.427", %"class.absl::optional.439", %"class.absl::optional.451", %"class.absl::optional.463" }
%"class.absl::optional.662" = type { %"class.absl::optional_internal::optional_data.663" }
%"class.absl::optional_internal::optional_data.663" = type { %"class.absl::optional_internal::optional_data_base.664" }
%"class.absl::optional_internal::optional_data_base.664" = type { %"class.absl::optional_internal::optional_data_dtor_base.665" }
%"class.absl::optional_internal::optional_data_dtor_base.665" = type { i8, %union.anon.666 }
%union.anon.666 = type { %"struct.x11::Xkb::GetKbdByNameReply::CompatMap" }
%"struct.x11::Xkb::GetKbdByNameReply::CompatMap" = type { i8, i8, i16, i32, i32, i16, i16, %"class.std::__1::vector.522", %"class.std::__1::vector.365" }
%"class.absl::optional.667" = type { %"class.absl::optional_internal::optional_data.668" }
%"class.absl::optional_internal::optional_data.668" = type { %"class.absl::optional_internal::optional_data_base.669" }
%"class.absl::optional_internal::optional_data_base.669" = type { %"class.absl::optional_internal::optional_data_dtor_base.670" }
%"class.absl::optional_internal::optional_data_dtor_base.670" = type { i8, %union.anon.671 }
%union.anon.671 = type { %"struct.x11::Xkb::GetKbdByNameReply::IndicatorMaps" }
%"struct.x11::Xkb::GetKbdByNameReply::IndicatorMaps" = type { i8, i8, i16, i32, i32, i32, %"class.std::__1::vector.547" }
%"class.absl::optional.672" = type { %"class.absl::optional_internal::optional_data.673" }
%"class.absl::optional_internal::optional_data.673" = type { %"class.absl::optional_internal::optional_data_base.674" }
%"class.absl::optional_internal::optional_data_base.674" = type { %"class.absl::optional_internal::optional_data_dtor_base.675" }
%"class.absl::optional_internal::optional_data_dtor_base.675" = type { i8, %union.anon.676 }
%union.anon.676 = type { %"struct.x11::Xkb::GetKbdByNameReply::KeyNames" }
%"struct.x11::Xkb::GetKbdByNameReply::KeyNames" = type { i8, i8, i16, i32, i8, i8, i8, i32, i32, i8, i8, i32, i8, i8, i16, %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.570", %"class.absl::optional.575", %"class.absl::optional.397", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.575", %"class.absl::optional.587", %"class.absl::optional.600", %"class.absl::optional.575" }
%"class.absl::optional.677" = type { %"class.absl::optional_internal::optional_data.678" }
%"class.absl::optional_internal::optional_data.678" = type { %"class.absl::optional_internal::optional_data_base.679" }
%"class.absl::optional_internal::optional_data_base.679" = type { %"class.absl::optional_internal::optional_data_dtor_base.680" }
%"class.absl::optional_internal::optional_data_dtor_base.680" = type { i8, %union.anon.681 }
%union.anon.681 = type { %"struct.x11::Xkb::GetKbdByNameReply::Geometry" }
%"struct.x11::Xkb::GetKbdByNameReply::Geometry" = type { i8, i8, i16, i32, i32, i8, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %"struct.x11::Xkb::CountedString16" }
%"struct.x11::Xkb::CountedString16" = type { %"class.std::__1::basic_string", %class.scoped_refptr.247 }
%"struct.x11::Xkb::GetDeviceInfoRequest" = type <{ i16, [2 x i8], i32, i8, i8, i8, i8, i32, i16, [2 x i8] }>
%"struct.x11::Xkb::GetDeviceInfoReply" = type { i8, i16, i32, i32, i32, i8, i8, i8, i8, i8, i16, i16, i32, %"class.std::__1::vector.636", %"class.std::__1::vector.407", %"class.std::__1::vector.692" }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"*, %"class.std::__1::__compressed_pair.694" }
%"struct.x11::Xkb::DeviceLedInfo" = type { i32, i16, i32, i32, i32, i32, %"class.std::__1::vector.580", %"class.std::__1::vector.547" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"struct.x11::Xkb::DeviceLedInfo"* }
%"struct.x11::Xkb::SetDeviceInfoRequest" = type { i16, i8, i32, %"class.std::__1::vector.407", %"class.std::__1::vector.692" }
%"class.std::__1::allocator.697" = type { i8 }
%"struct.x11::Xkb::SetDebuggingFlagsRequest" = type { i32, i32, i32, i32, %"class.std::__1::vector.636" }
%"struct.x11::Xkb::SetDebuggingFlagsReply" = type { i16, i32, i32, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3x1111WriteBuffer5WriteINS_3Xkb6ActionEEEvPKT_ = comdat any

$_ZN3x113Xkb13SetMapRequestD2Ev = comdat any

$_ZN3x113Xkb15SetNamesRequestD2Ev = comdat any

$_ZN3x113Xkb13KeyboardErrorD0Ev = comdat any

$_ZN3x113Xkb10SetKeyTypeC2ERKS1_ = comdat any

$_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorIN3x113Xkb7KeyTypeENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb10KTMapEntryENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x116KeySymENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb6ActionENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb11SetBehaviorENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x117ModMaskENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb11SetExplicitENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb9KeyModMapENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb10KeyVModMapENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb12SymInterpretENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb12IndicatorMapENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb7KeyNameENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb8KeyAliasENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZN3x113Xkb17GetKbdByNameReply8KeyNamesD2Ev = comdat any

$_ZN3x113Xkb17GetKbdByNameReply5TypesD2Ev = comdat any

$_ZNSt3__16vectorIN3x113Xkb13DeviceLedInfoENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__19allocatorIN3x113Xkb13DeviceLedInfoEE9constructIS3_JRS3_EEEvPT_DpOT0_ = comdat any

@.str = private unnamed_addr constant [20 x i8] c"Xkb::KeyboardError{\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c".sequence = \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c".value = \00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c".minorOpcode = \00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c".majorOpcode = \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Xkb::UseExtension\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Xkb::SelectEvents\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"Xkb::Bell\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"Xkb::GetState\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Xkb::LatchLockState\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"Xkb::GetControls\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"Xkb::SetControls\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"Xkb::GetMap\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"Xkb::SetMap\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"Xkb::GetCompatMap\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Xkb::SetCompatMap\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"Xkb::GetIndicatorState\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"Xkb::GetIndicatorMap\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"Xkb::SetIndicatorMap\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"Xkb::GetNamedIndicator\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"Xkb::SetNamedIndicator\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"Xkb::GetNames\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"Xkb::SetNames\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"Xkb::PerClientFlags\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"Xkb::ListComponents\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"Xkb::GetKbdByName\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"Xkb::GetDeviceInfo\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"Xkb::SetDeviceInfo\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"Xkb::SetDebuggingFlags\00", align 1
@_ZTVN3x113Xkb13KeyboardErrorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.x11::Error"*)* @_ZN3x115ErrorD2Ev to i8*), i8* bitcast (void (%"struct.x11::Xkb::KeyboardError"*)* @_ZN3x113Xkb13KeyboardErrorD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"struct.x11::Xkb::KeyboardError"*)* @_ZNK3x113Xkb13KeyboardError8ToStringEv to i8*)] }, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3x113XkbC1EPNS_10ConnectionERKNS_19QueryExtensionReplyE = hidden unnamed_addr alias void (%"class.x11::Xkb"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*), void (%"class.x11::Xkb"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*)* @_ZN3x113XkbC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x113XkbC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE(%"class.x11::Xkb"* nocapture, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"* nocapture readonly dereferenceable(6)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %4, align 8
  %5 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1
  %6 = bitcast %"struct.x11::QueryExtensionReply"* %5 to i8*
  %7 = bitcast %"struct.x11::QueryExtensionReply"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 2 %7, i64 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3x113Xkb13KeyboardError8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.x11::Xkb::KeyboardError"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 272, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #11
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %38 = inttoptr i64 %35 to i8*
  %39 = getelementptr i8, i8* %38, i64 -24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %13, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #11
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 3
  %56 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #11
  store i32 24, i32* %55, align 8
  %57 = bitcast %"class.std::__1::basic_ostream.base"* %34 to %"class.std::__1::basic_ostream"*
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #11
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #11
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %1, i64 0, i32 1
  %61 = load i16, i16* %60, align 8
  %62 = zext i16 %61 to i64
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %59, i64 %62) #11
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #11
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #11
  %66 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %1, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %65, i64 %68) #11
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #11
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #11
  %72 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %1, i64 0, i32 4
  %73 = load i16, i16* %72, align 8
  %74 = zext i16 %73 to i64
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %71, i64 %74) #11
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #11
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #11
  %78 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %1, i64 0, i32 5
  %79 = load i8, i8* %78, align 2
  %80 = zext i8 %79 to i64
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %77, i64 %80) #11
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #11
  %83 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %83, i64* %13, align 8
  %84 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %85 = inttoptr i64 %83 to i8*
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %4, i64 %88
  %90 = bitcast i8* %89 to i64*
  store i64 %84, i64* %90, align 8
  %91 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %91, i64* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %2
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %2, %96
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #11
  %100 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %100, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #11
  %101 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_ios.base"* %101 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %102) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadErrorINS_3Xkb13KeyboardErrorEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::KeyboardError"* nocapture, %"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %10 = bitcast %"class.base::RefCountedMemory"* %9 to i8* (%"class.base::RefCountedMemory"*)***
  %11 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %10, align 8
  %12 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %11, align 8
  %13 = tail call i8* %12(%"class.base::RefCountedMemory"* %9) #11
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %7, align 8
  %16 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %17 = bitcast %"class.base::RefCountedMemory"* %16 to i8* (%"class.base::RefCountedMemory"*)***
  %18 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %18, align 8
  %20 = tail call i8* %19(%"class.base::RefCountedMemory"* %16) #11
  %21 = load i64, i64* %7, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %7, align 8
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %24 = bitcast %"class.base::RefCountedMemory"* %23 to i8* (%"class.base::RefCountedMemory"*)***
  %25 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %25, align 8
  %27 = tail call i8* %26(%"class.base::RefCountedMemory"* %23) #11
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 1
  store i16 %31, i16* %3, align 2
  %32 = load i64, i64* %7, align 8
  %33 = add i64 %32, 2
  store i64 %33, i64* %7, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #11
  %39 = load i64, i64* %7, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  store i32 %42, i32* %4, align 4
  %43 = load i64, i64* %7, align 8
  %44 = add i64 %43, 4
  store i64 %44, i64* %7, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %7, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  store i16 %53, i16* %5, align 2
  %54 = load i64, i64* %7, align 8
  %55 = add i64 %54, 2
  store i64 %55, i64* %7, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %8, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %7, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %6, align 1
  %64 = load i64, i64* %7, align 8
  %65 = add i64 %64, 22
  store i64 %65, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb22NewKeyboardNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::NewKeyboardNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::NewKeyboardNotifyEvent", %"struct.x11::Xkb::NewKeyboardNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #11
  %22 = load i64, i64* %15, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %15, align 8
  %24 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %25 = bitcast %"class.base::RefCountedMemory"* %24 to i8* (%"class.base::RefCountedMemory"*)***
  %26 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %25, align 8
  %27 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %26, align 8
  %28 = tail call i8* %27(%"class.base::RefCountedMemory"* %24) #11
  %29 = load i64, i64* %15, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %3, align 1
  %32 = load i64, i64* %15, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %15, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #11
  %39 = load i64, i64* %15, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  store i16 %42, i16* %4, align 2
  %43 = load i64, i64* %15, align 8
  %44 = add i64 %43, 2
  store i64 %44, i64* %15, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %15, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  store i32 %53, i32* %5, align 4
  %54 = load i64, i64* %15, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %15, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %15, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %6, align 1
  %64 = load i64, i64* %15, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %15, align 8
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #11
  %71 = load i64, i64* %15, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %7, align 1
  %74 = load i64, i64* %15, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %15, align 8
  %76 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %77 = bitcast %"class.base::RefCountedMemory"* %76 to i8* (%"class.base::RefCountedMemory"*)***
  %78 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %77, align 8
  %79 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %78, align 8
  %80 = tail call i8* %79(%"class.base::RefCountedMemory"* %76) #11
  %81 = load i64, i64* %15, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load i8, i8* %82, align 1
  store i8 %83, i8* %8, align 1
  %84 = load i64, i64* %15, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %15, align 8
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #11
  %91 = load i64, i64* %15, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = load i8, i8* %92, align 1
  store i8 %93, i8* %9, align 1
  %94 = load i64, i64* %15, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %15, align 8
  %96 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %97 = bitcast %"class.base::RefCountedMemory"* %96 to i8* (%"class.base::RefCountedMemory"*)***
  %98 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %98, align 8
  %100 = tail call i8* %99(%"class.base::RefCountedMemory"* %96) #11
  %101 = load i64, i64* %15, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  %103 = load i8, i8* %102, align 1
  store i8 %103, i8* %10, align 1
  %104 = load i64, i64* %15, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %15, align 8
  %106 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %107 = bitcast %"class.base::RefCountedMemory"* %106 to i8* (%"class.base::RefCountedMemory"*)***
  %108 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %107, align 8
  %109 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %108, align 8
  %110 = tail call i8* %109(%"class.base::RefCountedMemory"* %106) #11
  %111 = load i64, i64* %15, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %11, align 1
  %114 = load i64, i64* %15, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %15, align 8
  %116 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %117 = bitcast %"class.base::RefCountedMemory"* %116 to i8* (%"class.base::RefCountedMemory"*)***
  %118 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %117, align 8
  %119 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %118, align 8
  %120 = tail call i8* %119(%"class.base::RefCountedMemory"* %116) #11
  %121 = load i64, i64* %15, align 8
  %122 = getelementptr inbounds i8, i8* %120, i64 %121
  %123 = load i8, i8* %122, align 1
  store i8 %123, i8* %12, align 1
  %124 = load i64, i64* %15, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %15, align 8
  %126 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %127 = bitcast %"class.base::RefCountedMemory"* %126 to i8* (%"class.base::RefCountedMemory"*)***
  %128 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %127, align 8
  %129 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %128, align 8
  %130 = tail call i8* %129(%"class.base::RefCountedMemory"* %126) #11
  %131 = load i64, i64* %15, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %13, align 1
  %134 = load i64, i64* %15, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %15, align 8
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #11
  %141 = load i64, i64* %15, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 1
  %145 = add i64 %141, 2
  store i64 %145, i64* %15, align 8
  %146 = zext i16 %144 to i32
  store i32 %146, i32* %14, align 4
  %147 = load i64, i64* %15, align 8
  %148 = add i64 %147, 14
  store i64 %148, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb14MapNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::MapNotifyEvent"*, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 14
  %17 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 15
  %18 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 16
  %19 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 17
  %20 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 18
  %21 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 19
  %22 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 20
  %23 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 21
  %24 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 22
  %25 = getelementptr inbounds %"struct.x11::Xkb::MapNotifyEvent", %"struct.x11::Xkb::MapNotifyEvent"* %0, i64 0, i32 23
  %26 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #11
  %33 = load i64, i64* %26, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %26, align 8
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #11
  %40 = load i64, i64* %26, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = load i8, i8* %41, align 1
  store i8 %42, i8* %3, align 1
  %43 = load i64, i64* %26, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %26, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %26, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  store i16 %53, i16* %4, align 2
  %54 = load i64, i64* %26, align 8
  %55 = add i64 %54, 2
  store i64 %55, i64* %26, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %26, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  store i32 %64, i32* %5, align 4
  %65 = load i64, i64* %26, align 8
  %66 = add i64 %65, 4
  store i64 %66, i64* %26, align 8
  %67 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %68 = bitcast %"class.base::RefCountedMemory"* %67 to i8* (%"class.base::RefCountedMemory"*)***
  %69 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %68, align 8
  %70 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %69, align 8
  %71 = tail call i8* %70(%"class.base::RefCountedMemory"* %67) #11
  %72 = load i64, i64* %26, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  store i8 %74, i8* %6, align 1
  %75 = load i64, i64* %26, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %26, align 8
  %77 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %78 = bitcast %"class.base::RefCountedMemory"* %77 to i8* (%"class.base::RefCountedMemory"*)***
  %79 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %78, align 8
  %80 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %79, align 8
  %81 = tail call i8* %80(%"class.base::RefCountedMemory"* %77) #11
  %82 = load i64, i64* %26, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %7, align 1
  %85 = load i64, i64* %26, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %26, align 8
  %87 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %88 = bitcast %"class.base::RefCountedMemory"* %87 to i8* (%"class.base::RefCountedMemory"*)***
  %89 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %88, align 8
  %90 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %89, align 8
  %91 = tail call i8* %90(%"class.base::RefCountedMemory"* %87) #11
  %92 = load i64, i64* %26, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = bitcast i8* %93 to i16*
  %95 = load i16, i16* %94, align 1
  %96 = add i64 %92, 2
  store i64 %96, i64* %26, align 8
  %97 = zext i16 %95 to i32
  store i32 %97, i32* %8, align 4
  %98 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %99 = bitcast %"class.base::RefCountedMemory"* %98 to i8* (%"class.base::RefCountedMemory"*)***
  %100 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %99, align 8
  %101 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %100, align 8
  %102 = tail call i8* %101(%"class.base::RefCountedMemory"* %98) #11
  %103 = load i64, i64* %26, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = load i8, i8* %104, align 1
  store i8 %105, i8* %9, align 1
  %106 = load i64, i64* %26, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %26, align 8
  %108 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %109 = bitcast %"class.base::RefCountedMemory"* %108 to i8* (%"class.base::RefCountedMemory"*)***
  %110 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %109, align 8
  %111 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %110, align 8
  %112 = tail call i8* %111(%"class.base::RefCountedMemory"* %108) #11
  %113 = load i64, i64* %26, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %10, align 1
  %116 = load i64, i64* %26, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %26, align 8
  %118 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %119 = bitcast %"class.base::RefCountedMemory"* %118 to i8* (%"class.base::RefCountedMemory"*)***
  %120 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %120, align 8
  %122 = tail call i8* %121(%"class.base::RefCountedMemory"* %118) #11
  %123 = load i64, i64* %26, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = load i8, i8* %124, align 1
  store i8 %125, i8* %11, align 1
  %126 = load i64, i64* %26, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %26, align 8
  %128 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %129 = bitcast %"class.base::RefCountedMemory"* %128 to i8* (%"class.base::RefCountedMemory"*)***
  %130 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %129, align 8
  %131 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %130, align 8
  %132 = tail call i8* %131(%"class.base::RefCountedMemory"* %128) #11
  %133 = load i64, i64* %26, align 8
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = load i8, i8* %134, align 1
  store i8 %135, i8* %12, align 1
  %136 = load i64, i64* %26, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %26, align 8
  %138 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %139 = bitcast %"class.base::RefCountedMemory"* %138 to i8* (%"class.base::RefCountedMemory"*)***
  %140 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %139, align 8
  %141 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %140, align 8
  %142 = tail call i8* %141(%"class.base::RefCountedMemory"* %138) #11
  %143 = load i64, i64* %26, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = load i8, i8* %144, align 1
  store i8 %145, i8* %13, align 1
  %146 = load i64, i64* %26, align 8
  %147 = add i64 %146, 1
  store i64 %147, i64* %26, align 8
  %148 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %149 = bitcast %"class.base::RefCountedMemory"* %148 to i8* (%"class.base::RefCountedMemory"*)***
  %150 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %149, align 8
  %151 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %150, align 8
  %152 = tail call i8* %151(%"class.base::RefCountedMemory"* %148) #11
  %153 = load i64, i64* %26, align 8
  %154 = getelementptr inbounds i8, i8* %152, i64 %153
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %14, align 1
  %156 = load i64, i64* %26, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %26, align 8
  %158 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %159 = bitcast %"class.base::RefCountedMemory"* %158 to i8* (%"class.base::RefCountedMemory"*)***
  %160 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %159, align 8
  %161 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %160, align 8
  %162 = tail call i8* %161(%"class.base::RefCountedMemory"* %158) #11
  %163 = load i64, i64* %26, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = load i8, i8* %164, align 1
  store i8 %165, i8* %15, align 1
  %166 = load i64, i64* %26, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %26, align 8
  %168 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %169 = bitcast %"class.base::RefCountedMemory"* %168 to i8* (%"class.base::RefCountedMemory"*)***
  %170 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %169, align 8
  %171 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %170, align 8
  %172 = tail call i8* %171(%"class.base::RefCountedMemory"* %168) #11
  %173 = load i64, i64* %26, align 8
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = load i8, i8* %174, align 1
  store i8 %175, i8* %16, align 1
  %176 = load i64, i64* %26, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %26, align 8
  %178 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %179 = bitcast %"class.base::RefCountedMemory"* %178 to i8* (%"class.base::RefCountedMemory"*)***
  %180 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %179, align 8
  %181 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %180, align 8
  %182 = tail call i8* %181(%"class.base::RefCountedMemory"* %178) #11
  %183 = load i64, i64* %26, align 8
  %184 = getelementptr inbounds i8, i8* %182, i64 %183
  %185 = load i8, i8* %184, align 1
  store i8 %185, i8* %17, align 1
  %186 = load i64, i64* %26, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %26, align 8
  %188 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %189 = bitcast %"class.base::RefCountedMemory"* %188 to i8* (%"class.base::RefCountedMemory"*)***
  %190 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %189, align 8
  %191 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %190, align 8
  %192 = tail call i8* %191(%"class.base::RefCountedMemory"* %188) #11
  %193 = load i64, i64* %26, align 8
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %18, align 1
  %196 = load i64, i64* %26, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %26, align 8
  %198 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %199 = bitcast %"class.base::RefCountedMemory"* %198 to i8* (%"class.base::RefCountedMemory"*)***
  %200 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %199, align 8
  %201 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %200, align 8
  %202 = tail call i8* %201(%"class.base::RefCountedMemory"* %198) #11
  %203 = load i64, i64* %26, align 8
  %204 = getelementptr inbounds i8, i8* %202, i64 %203
  %205 = load i8, i8* %204, align 1
  store i8 %205, i8* %19, align 1
  %206 = load i64, i64* %26, align 8
  %207 = add i64 %206, 1
  store i64 %207, i64* %26, align 8
  %208 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %209 = bitcast %"class.base::RefCountedMemory"* %208 to i8* (%"class.base::RefCountedMemory"*)***
  %210 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %209, align 8
  %211 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %210, align 8
  %212 = tail call i8* %211(%"class.base::RefCountedMemory"* %208) #11
  %213 = load i64, i64* %26, align 8
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = load i8, i8* %214, align 1
  store i8 %215, i8* %20, align 1
  %216 = load i64, i64* %26, align 8
  %217 = add i64 %216, 1
  store i64 %217, i64* %26, align 8
  %218 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %219 = bitcast %"class.base::RefCountedMemory"* %218 to i8* (%"class.base::RefCountedMemory"*)***
  %220 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %219, align 8
  %221 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %220, align 8
  %222 = tail call i8* %221(%"class.base::RefCountedMemory"* %218) #11
  %223 = load i64, i64* %26, align 8
  %224 = getelementptr inbounds i8, i8* %222, i64 %223
  %225 = load i8, i8* %224, align 1
  store i8 %225, i8* %21, align 1
  %226 = load i64, i64* %26, align 8
  %227 = add i64 %226, 1
  store i64 %227, i64* %26, align 8
  %228 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %229 = bitcast %"class.base::RefCountedMemory"* %228 to i8* (%"class.base::RefCountedMemory"*)***
  %230 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %229, align 8
  %231 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %230, align 8
  %232 = tail call i8* %231(%"class.base::RefCountedMemory"* %228) #11
  %233 = load i64, i64* %26, align 8
  %234 = getelementptr inbounds i8, i8* %232, i64 %233
  %235 = load i8, i8* %234, align 1
  store i8 %235, i8* %22, align 1
  %236 = load i64, i64* %26, align 8
  %237 = add i64 %236, 1
  store i64 %237, i64* %26, align 8
  %238 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %239 = bitcast %"class.base::RefCountedMemory"* %238 to i8* (%"class.base::RefCountedMemory"*)***
  %240 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %239, align 8
  %241 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %240, align 8
  %242 = tail call i8* %241(%"class.base::RefCountedMemory"* %238) #11
  %243 = load i64, i64* %26, align 8
  %244 = getelementptr inbounds i8, i8* %242, i64 %243
  %245 = load i8, i8* %244, align 1
  store i8 %245, i8* %23, align 1
  %246 = load i64, i64* %26, align 8
  %247 = add i64 %246, 1
  store i64 %247, i64* %26, align 8
  %248 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %249 = bitcast %"class.base::RefCountedMemory"* %248 to i8* (%"class.base::RefCountedMemory"*)***
  %250 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %249, align 8
  %251 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %250, align 8
  %252 = tail call i8* %251(%"class.base::RefCountedMemory"* %248) #11
  %253 = load i64, i64* %26, align 8
  %254 = getelementptr inbounds i8, i8* %252, i64 %253
  %255 = load i8, i8* %254, align 1
  store i8 %255, i8* %24, align 1
  %256 = load i64, i64* %26, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %26, align 8
  %258 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %259 = bitcast %"class.base::RefCountedMemory"* %258 to i8* (%"class.base::RefCountedMemory"*)***
  %260 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %259, align 8
  %261 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %260, align 8
  %262 = tail call i8* %261(%"class.base::RefCountedMemory"* %258) #11
  %263 = load i64, i64* %26, align 8
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  %265 = bitcast i8* %264 to i16*
  %266 = load i16, i16* %265, align 1
  %267 = add i64 %263, 2
  store i64 %267, i64* %26, align 8
  %268 = zext i16 %266 to i32
  store i32 %268, i32* %25, align 4
  %269 = load i64, i64* %26, align 8
  %270 = add i64 %269, 2
  store i64 %270, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb16StateNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::StateNotifyEvent"*, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 14
  %17 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 15
  %18 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 16
  %19 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 17
  %20 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 18
  %21 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 19
  %22 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 20
  %23 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 21
  %24 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 22
  %25 = getelementptr inbounds %"struct.x11::Xkb::StateNotifyEvent", %"struct.x11::Xkb::StateNotifyEvent"* %0, i64 0, i32 23
  %26 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #11
  %33 = load i64, i64* %26, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %26, align 8
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #11
  %40 = load i64, i64* %26, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = load i8, i8* %41, align 1
  store i8 %42, i8* %3, align 1
  %43 = load i64, i64* %26, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %26, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %26, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  store i16 %53, i16* %4, align 2
  %54 = load i64, i64* %26, align 8
  %55 = add i64 %54, 2
  store i64 %55, i64* %26, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %26, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  store i32 %64, i32* %5, align 4
  %65 = load i64, i64* %26, align 8
  %66 = add i64 %65, 4
  store i64 %66, i64* %26, align 8
  %67 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %68 = bitcast %"class.base::RefCountedMemory"* %67 to i8* (%"class.base::RefCountedMemory"*)***
  %69 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %68, align 8
  %70 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %69, align 8
  %71 = tail call i8* %70(%"class.base::RefCountedMemory"* %67) #11
  %72 = load i64, i64* %26, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  store i8 %74, i8* %6, align 1
  %75 = load i64, i64* %26, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %26, align 8
  %77 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %78 = bitcast %"class.base::RefCountedMemory"* %77 to i8* (%"class.base::RefCountedMemory"*)***
  %79 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %78, align 8
  %80 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %79, align 8
  %81 = tail call i8* %80(%"class.base::RefCountedMemory"* %77) #11
  %82 = load i64, i64* %26, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = add i64 %82, 1
  store i64 %85, i64* %26, align 8
  %86 = zext i8 %84 to i32
  store i32 %86, i32* %7, align 4
  %87 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %88 = bitcast %"class.base::RefCountedMemory"* %87 to i8* (%"class.base::RefCountedMemory"*)***
  %89 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %88, align 8
  %90 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %89, align 8
  %91 = tail call i8* %90(%"class.base::RefCountedMemory"* %87) #11
  %92 = load i64, i64* %26, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = add i64 %92, 1
  store i64 %95, i64* %26, align 8
  %96 = zext i8 %94 to i32
  store i32 %96, i32* %8, align 4
  %97 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %98 = bitcast %"class.base::RefCountedMemory"* %97 to i8* (%"class.base::RefCountedMemory"*)***
  %99 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %98, align 8
  %100 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %99, align 8
  %101 = tail call i8* %100(%"class.base::RefCountedMemory"* %97) #11
  %102 = load i64, i64* %26, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = add i64 %102, 1
  store i64 %105, i64* %26, align 8
  %106 = zext i8 %104 to i32
  store i32 %106, i32* %9, align 4
  %107 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %108 = bitcast %"class.base::RefCountedMemory"* %107 to i8* (%"class.base::RefCountedMemory"*)***
  %109 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %108, align 8
  %110 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %109, align 8
  %111 = tail call i8* %110(%"class.base::RefCountedMemory"* %107) #11
  %112 = load i64, i64* %26, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = add i64 %112, 1
  store i64 %115, i64* %26, align 8
  %116 = zext i8 %114 to i32
  store i32 %116, i32* %10, align 4
  %117 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %118 = bitcast %"class.base::RefCountedMemory"* %117 to i8* (%"class.base::RefCountedMemory"*)***
  %119 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %118, align 8
  %120 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %119, align 8
  %121 = tail call i8* %120(%"class.base::RefCountedMemory"* %117) #11
  %122 = load i64, i64* %26, align 8
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = add i64 %122, 1
  store i64 %125, i64* %26, align 8
  %126 = zext i8 %124 to i32
  store i32 %126, i32* %11, align 4
  %127 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %128 = bitcast %"class.base::RefCountedMemory"* %127 to i8* (%"class.base::RefCountedMemory"*)***
  %129 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %128, align 8
  %130 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %129, align 8
  %131 = tail call i8* %130(%"class.base::RefCountedMemory"* %127) #11
  %132 = load i64, i64* %26, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 1
  store i16 %135, i16* %12, align 2
  %136 = load i64, i64* %26, align 8
  %137 = add i64 %136, 2
  store i64 %137, i64* %26, align 8
  %138 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %139 = bitcast %"class.base::RefCountedMemory"* %138 to i8* (%"class.base::RefCountedMemory"*)***
  %140 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %139, align 8
  %141 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %140, align 8
  %142 = tail call i8* %141(%"class.base::RefCountedMemory"* %138) #11
  %143 = load i64, i64* %26, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 1
  store i16 %146, i16* %13, align 2
  %147 = load i64, i64* %26, align 8
  %148 = add i64 %147, 2
  store i64 %148, i64* %26, align 8
  %149 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %150 = bitcast %"class.base::RefCountedMemory"* %149 to i8* (%"class.base::RefCountedMemory"*)***
  %151 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %150, align 8
  %152 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %151, align 8
  %153 = tail call i8* %152(%"class.base::RefCountedMemory"* %149) #11
  %154 = load i64, i64* %26, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = add i64 %154, 1
  store i64 %157, i64* %26, align 8
  %158 = zext i8 %156 to i32
  store i32 %158, i32* %14, align 4
  %159 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %160 = bitcast %"class.base::RefCountedMemory"* %159 to i8* (%"class.base::RefCountedMemory"*)***
  %161 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %160, align 8
  %162 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %161, align 8
  %163 = tail call i8* %162(%"class.base::RefCountedMemory"* %159) #11
  %164 = load i64, i64* %26, align 8
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = add i64 %164, 1
  store i64 %167, i64* %26, align 8
  %168 = zext i8 %166 to i32
  store i32 %168, i32* %15, align 4
  %169 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %170 = bitcast %"class.base::RefCountedMemory"* %169 to i8* (%"class.base::RefCountedMemory"*)***
  %171 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %170, align 8
  %172 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %171, align 8
  %173 = tail call i8* %172(%"class.base::RefCountedMemory"* %169) #11
  %174 = load i64, i64* %26, align 8
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = add i64 %174, 1
  store i64 %177, i64* %26, align 8
  %178 = zext i8 %176 to i32
  store i32 %178, i32* %16, align 4
  %179 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %180 = bitcast %"class.base::RefCountedMemory"* %179 to i8* (%"class.base::RefCountedMemory"*)***
  %181 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %180, align 8
  %182 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %181, align 8
  %183 = tail call i8* %182(%"class.base::RefCountedMemory"* %179) #11
  %184 = load i64, i64* %26, align 8
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = add i64 %184, 1
  store i64 %187, i64* %26, align 8
  %188 = zext i8 %186 to i32
  store i32 %188, i32* %17, align 4
  %189 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %190 = bitcast %"class.base::RefCountedMemory"* %189 to i8* (%"class.base::RefCountedMemory"*)***
  %191 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %190, align 8
  %192 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %191, align 8
  %193 = tail call i8* %192(%"class.base::RefCountedMemory"* %189) #11
  %194 = load i64, i64* %26, align 8
  %195 = getelementptr inbounds i8, i8* %193, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = add i64 %194, 1
  store i64 %197, i64* %26, align 8
  %198 = zext i8 %196 to i32
  store i32 %198, i32* %18, align 4
  %199 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %200 = bitcast %"class.base::RefCountedMemory"* %199 to i8* (%"class.base::RefCountedMemory"*)***
  %201 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %200, align 8
  %202 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %201, align 8
  %203 = tail call i8* %202(%"class.base::RefCountedMemory"* %199) #11
  %204 = load i64, i64* %26, align 8
  %205 = getelementptr inbounds i8, i8* %203, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = add i64 %204, 1
  store i64 %207, i64* %26, align 8
  %208 = zext i8 %206 to i32
  store i32 %208, i32* %19, align 4
  %209 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %210 = bitcast %"class.base::RefCountedMemory"* %209 to i8* (%"class.base::RefCountedMemory"*)***
  %211 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %210, align 8
  %212 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %211, align 8
  %213 = tail call i8* %212(%"class.base::RefCountedMemory"* %209) #11
  %214 = load i64, i64* %26, align 8
  %215 = getelementptr inbounds i8, i8* %213, i64 %214
  %216 = bitcast i8* %215 to i16*
  %217 = load i16, i16* %216, align 1
  %218 = add i64 %214, 2
  store i64 %218, i64* %26, align 8
  %219 = zext i16 %217 to i32
  store i32 %219, i32* %20, align 4
  %220 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %221 = bitcast %"class.base::RefCountedMemory"* %220 to i8* (%"class.base::RefCountedMemory"*)***
  %222 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %221, align 8
  %223 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %222, align 8
  %224 = tail call i8* %223(%"class.base::RefCountedMemory"* %220) #11
  %225 = load i64, i64* %26, align 8
  %226 = getelementptr inbounds i8, i8* %224, i64 %225
  %227 = bitcast i8* %226 to i16*
  %228 = load i16, i16* %227, align 1
  %229 = add i64 %225, 2
  store i64 %229, i64* %26, align 8
  %230 = zext i16 %228 to i32
  store i32 %230, i32* %21, align 4
  %231 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %232 = bitcast %"class.base::RefCountedMemory"* %231 to i8* (%"class.base::RefCountedMemory"*)***
  %233 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %232, align 8
  %234 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %233, align 8
  %235 = tail call i8* %234(%"class.base::RefCountedMemory"* %231) #11
  %236 = load i64, i64* %26, align 8
  %237 = getelementptr inbounds i8, i8* %235, i64 %236
  %238 = load i8, i8* %237, align 1
  store i8 %238, i8* %22, align 1
  %239 = load i64, i64* %26, align 8
  %240 = add i64 %239, 1
  store i64 %240, i64* %26, align 8
  %241 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %242 = bitcast %"class.base::RefCountedMemory"* %241 to i8* (%"class.base::RefCountedMemory"*)***
  %243 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %242, align 8
  %244 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %243, align 8
  %245 = tail call i8* %244(%"class.base::RefCountedMemory"* %241) #11
  %246 = load i64, i64* %26, align 8
  %247 = getelementptr inbounds i8, i8* %245, i64 %246
  %248 = load i8, i8* %247, align 1
  store i8 %248, i8* %23, align 1
  %249 = load i64, i64* %26, align 8
  %250 = add i64 %249, 1
  store i64 %250, i64* %26, align 8
  %251 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %252 = bitcast %"class.base::RefCountedMemory"* %251 to i8* (%"class.base::RefCountedMemory"*)***
  %253 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %252, align 8
  %254 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %253, align 8
  %255 = tail call i8* %254(%"class.base::RefCountedMemory"* %251) #11
  %256 = load i64, i64* %26, align 8
  %257 = getelementptr inbounds i8, i8* %255, i64 %256
  %258 = load i8, i8* %257, align 1
  store i8 %258, i8* %24, align 1
  %259 = load i64, i64* %26, align 8
  %260 = add i64 %259, 1
  store i64 %260, i64* %26, align 8
  %261 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %262 = bitcast %"class.base::RefCountedMemory"* %261 to i8* (%"class.base::RefCountedMemory"*)***
  %263 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %262, align 8
  %264 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %263, align 8
  %265 = tail call i8* %264(%"class.base::RefCountedMemory"* %261) #11
  %266 = load i64, i64* %26, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = load i8, i8* %267, align 1
  store i8 %268, i8* %25, align 1
  %269 = load i64, i64* %26, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb19ControlsNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::ControlsNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::ControlsNotifyEvent", %"struct.x11::Xkb::ControlsNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #11
  %22 = load i64, i64* %15, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %15, align 8
  %24 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %25 = bitcast %"class.base::RefCountedMemory"* %24 to i8* (%"class.base::RefCountedMemory"*)***
  %26 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %25, align 8
  %27 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %26, align 8
  %28 = tail call i8* %27(%"class.base::RefCountedMemory"* %24) #11
  %29 = load i64, i64* %15, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %3, align 1
  %32 = load i64, i64* %15, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %15, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #11
  %39 = load i64, i64* %15, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  store i16 %42, i16* %4, align 2
  %43 = load i64, i64* %15, align 8
  %44 = add i64 %43, 2
  store i64 %44, i64* %15, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %15, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  store i32 %53, i32* %5, align 4
  %54 = load i64, i64* %15, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %15, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %15, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %6, align 1
  %64 = load i64, i64* %15, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %15, align 8
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #11
  %71 = load i64, i64* %15, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %7, align 1
  %74 = load i64, i64* %15, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %15, align 8
  %76 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %77 = bitcast %"class.base::RefCountedMemory"* %76 to i8* (%"class.base::RefCountedMemory"*)***
  %78 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %77, align 8
  %79 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %78, align 8
  %80 = tail call i8* %79(%"class.base::RefCountedMemory"* %76) #11
  %81 = load i64, i64* %15, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = add i64 %81, 4
  store i64 %85, i64* %15, align 8
  store i32 %84, i32* %8, align 4
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #11
  %91 = load i64, i64* %15, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 1
  %95 = add i64 %91, 4
  store i64 %95, i64* %15, align 8
  store i32 %94, i32* %9, align 4
  %96 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %97 = bitcast %"class.base::RefCountedMemory"* %96 to i8* (%"class.base::RefCountedMemory"*)***
  %98 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %98, align 8
  %100 = tail call i8* %99(%"class.base::RefCountedMemory"* %96) #11
  %101 = load i64, i64* %15, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 1
  %105 = add i64 %101, 4
  store i64 %105, i64* %15, align 8
  store i32 %104, i32* %10, align 4
  %106 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %107 = bitcast %"class.base::RefCountedMemory"* %106 to i8* (%"class.base::RefCountedMemory"*)***
  %108 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %107, align 8
  %109 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %108, align 8
  %110 = tail call i8* %109(%"class.base::RefCountedMemory"* %106) #11
  %111 = load i64, i64* %15, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %11, align 1
  %114 = load i64, i64* %15, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %15, align 8
  %116 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %117 = bitcast %"class.base::RefCountedMemory"* %116 to i8* (%"class.base::RefCountedMemory"*)***
  %118 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %117, align 8
  %119 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %118, align 8
  %120 = tail call i8* %119(%"class.base::RefCountedMemory"* %116) #11
  %121 = load i64, i64* %15, align 8
  %122 = getelementptr inbounds i8, i8* %120, i64 %121
  %123 = load i8, i8* %122, align 1
  store i8 %123, i8* %12, align 1
  %124 = load i64, i64* %15, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %15, align 8
  %126 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %127 = bitcast %"class.base::RefCountedMemory"* %126 to i8* (%"class.base::RefCountedMemory"*)***
  %128 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %127, align 8
  %129 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %128, align 8
  %130 = tail call i8* %129(%"class.base::RefCountedMemory"* %126) #11
  %131 = load i64, i64* %15, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %13, align 1
  %134 = load i64, i64* %15, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %15, align 8
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #11
  %141 = load i64, i64* %15, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %14, align 1
  %144 = load i64, i64* %15, align 8
  %145 = add i64 %144, 5
  store i64 %145, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb25IndicatorStateNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::IndicatorStateNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::IndicatorStateNotifyEvent", %"struct.x11::Xkb::IndicatorStateNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %12 = bitcast %"class.base::RefCountedMemory"* %11 to i8* (%"class.base::RefCountedMemory"*)***
  %13 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %12, align 8
  %14 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %13, align 8
  %15 = tail call i8* %14(%"class.base::RefCountedMemory"* %11) #11
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %9, align 8
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #11
  %23 = load i64, i64* %9, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %3, align 1
  %26 = load i64, i64* %9, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %9, align 8
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #11
  %33 = load i64, i64* %9, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  store i16 %36, i16* %4, align 2
  %37 = load i64, i64* %9, align 8
  %38 = add i64 %37, 2
  store i64 %38, i64* %9, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #11
  %44 = load i64, i64* %9, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  store i32 %47, i32* %5, align 4
  %48 = load i64, i64* %9, align 8
  %49 = add i64 %48, 4
  store i64 %49, i64* %9, align 8
  %50 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %51 = bitcast %"class.base::RefCountedMemory"* %50 to i8* (%"class.base::RefCountedMemory"*)***
  %52 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %51, align 8
  %53 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %52, align 8
  %54 = tail call i8* %53(%"class.base::RefCountedMemory"* %50) #11
  %55 = load i64, i64* %9, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %6, align 1
  %58 = load i64, i64* %9, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %9, align 8
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = tail call i8* %63(%"class.base::RefCountedMemory"* %60) #11
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  store i32 %68, i32* %7, align 4
  %69 = load i64, i64* %9, align 8
  %70 = add i64 %69, 4
  store i64 %70, i64* %9, align 8
  %71 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %72 = bitcast %"class.base::RefCountedMemory"* %71 to i8* (%"class.base::RefCountedMemory"*)***
  %73 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %72, align 8
  %74 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %73, align 8
  %75 = tail call i8* %74(%"class.base::RefCountedMemory"* %71) #11
  %76 = load i64, i64* %9, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  store i32 %79, i32* %8, align 4
  %80 = load i64, i64* %9, align 8
  %81 = add i64 %80, 16
  store i64 %81, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb23IndicatorMapNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::IndicatorMapNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMapNotifyEvent", %"struct.x11::Xkb::IndicatorMapNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %12 = bitcast %"class.base::RefCountedMemory"* %11 to i8* (%"class.base::RefCountedMemory"*)***
  %13 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %12, align 8
  %14 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %13, align 8
  %15 = tail call i8* %14(%"class.base::RefCountedMemory"* %11) #11
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %9, align 8
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #11
  %23 = load i64, i64* %9, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %3, align 1
  %26 = load i64, i64* %9, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %9, align 8
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #11
  %33 = load i64, i64* %9, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  store i16 %36, i16* %4, align 2
  %37 = load i64, i64* %9, align 8
  %38 = add i64 %37, 2
  store i64 %38, i64* %9, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #11
  %44 = load i64, i64* %9, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  store i32 %47, i32* %5, align 4
  %48 = load i64, i64* %9, align 8
  %49 = add i64 %48, 4
  store i64 %49, i64* %9, align 8
  %50 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %51 = bitcast %"class.base::RefCountedMemory"* %50 to i8* (%"class.base::RefCountedMemory"*)***
  %52 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %51, align 8
  %53 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %52, align 8
  %54 = tail call i8* %53(%"class.base::RefCountedMemory"* %50) #11
  %55 = load i64, i64* %9, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %6, align 1
  %58 = load i64, i64* %9, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %9, align 8
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = tail call i8* %63(%"class.base::RefCountedMemory"* %60) #11
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  store i32 %68, i32* %7, align 4
  %69 = load i64, i64* %9, align 8
  %70 = add i64 %69, 4
  store i64 %70, i64* %9, align 8
  %71 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %72 = bitcast %"class.base::RefCountedMemory"* %71 to i8* (%"class.base::RefCountedMemory"*)***
  %73 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %72, align 8
  %74 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %73, align 8
  %75 = tail call i8* %74(%"class.base::RefCountedMemory"* %71) #11
  %76 = load i64, i64* %9, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  store i32 %79, i32* %8, align 4
  %80 = load i64, i64* %9, align 8
  %81 = add i64 %80, 16
  store i64 %81, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb16NamesNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::NamesNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 14
  %17 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 15
  %18 = getelementptr inbounds %"struct.x11::Xkb::NamesNotifyEvent", %"struct.x11::Xkb::NamesNotifyEvent"* %0, i64 0, i32 16
  %19 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #11
  %26 = load i64, i64* %19, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %19, align 8
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #11
  %33 = load i64, i64* %19, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1
  store i8 %35, i8* %3, align 1
  %36 = load i64, i64* %19, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %19, align 8
  %38 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %39 = bitcast %"class.base::RefCountedMemory"* %38 to i8* (%"class.base::RefCountedMemory"*)***
  %40 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %39, align 8
  %41 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %40, align 8
  %42 = tail call i8* %41(%"class.base::RefCountedMemory"* %38) #11
  %43 = load i64, i64* %19, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 1
  store i16 %46, i16* %4, align 2
  %47 = load i64, i64* %19, align 8
  %48 = add i64 %47, 2
  store i64 %48, i64* %19, align 8
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %50 = bitcast %"class.base::RefCountedMemory"* %49 to i8* (%"class.base::RefCountedMemory"*)***
  %51 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %50, align 8
  %52 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %51, align 8
  %53 = tail call i8* %52(%"class.base::RefCountedMemory"* %49) #11
  %54 = load i64, i64* %19, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  store i32 %57, i32* %5, align 4
  %58 = load i64, i64* %19, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %19, align 8
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = tail call i8* %63(%"class.base::RefCountedMemory"* %60) #11
  %65 = load i64, i64* %19, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %6, align 1
  %68 = load i64, i64* %19, align 8
  %69 = add i64 %68, 2
  store i64 %69, i64* %19, align 8
  %70 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %71 = bitcast %"class.base::RefCountedMemory"* %70 to i8* (%"class.base::RefCountedMemory"*)***
  %72 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %71, align 8
  %73 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %72, align 8
  %74 = tail call i8* %73(%"class.base::RefCountedMemory"* %70) #11
  %75 = load i64, i64* %19, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 1
  %79 = add i64 %75, 2
  store i64 %79, i64* %19, align 8
  %80 = zext i16 %78 to i32
  store i32 %80, i32* %7, align 4
  %81 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %82 = bitcast %"class.base::RefCountedMemory"* %81 to i8* (%"class.base::RefCountedMemory"*)***
  %83 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %82, align 8
  %84 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %83, align 8
  %85 = tail call i8* %84(%"class.base::RefCountedMemory"* %81) #11
  %86 = load i64, i64* %19, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = load i8, i8* %87, align 1
  store i8 %88, i8* %8, align 1
  %89 = load i64, i64* %19, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %19, align 8
  %91 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %92 = bitcast %"class.base::RefCountedMemory"* %91 to i8* (%"class.base::RefCountedMemory"*)***
  %93 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %92, align 8
  %94 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %93, align 8
  %95 = tail call i8* %94(%"class.base::RefCountedMemory"* %91) #11
  %96 = load i64, i64* %19, align 8
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  %98 = load i8, i8* %97, align 1
  store i8 %98, i8* %9, align 1
  %99 = load i64, i64* %19, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %19, align 8
  %101 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %102 = bitcast %"class.base::RefCountedMemory"* %101 to i8* (%"class.base::RefCountedMemory"*)***
  %103 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %102, align 8
  %104 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %103, align 8
  %105 = tail call i8* %104(%"class.base::RefCountedMemory"* %101) #11
  %106 = load i64, i64* %19, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = load i8, i8* %107, align 1
  store i8 %108, i8* %10, align 1
  %109 = load i64, i64* %19, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %19, align 8
  %111 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %112 = bitcast %"class.base::RefCountedMemory"* %111 to i8* (%"class.base::RefCountedMemory"*)***
  %113 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %112, align 8
  %114 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %113, align 8
  %115 = tail call i8* %114(%"class.base::RefCountedMemory"* %111) #11
  %116 = load i64, i64* %19, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = load i8, i8* %117, align 1
  store i8 %118, i8* %11, align 1
  %119 = load i64, i64* %19, align 8
  %120 = add i64 %119, 2
  store i64 %120, i64* %19, align 8
  %121 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %122 = bitcast %"class.base::RefCountedMemory"* %121 to i8* (%"class.base::RefCountedMemory"*)***
  %123 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %122, align 8
  %124 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %123, align 8
  %125 = tail call i8* %124(%"class.base::RefCountedMemory"* %121) #11
  %126 = load i64, i64* %19, align 8
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = load i8, i8* %127, align 1
  store i8 %128, i8* %12, align 1
  %129 = load i64, i64* %19, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %19, align 8
  %131 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %132 = bitcast %"class.base::RefCountedMemory"* %131 to i8* (%"class.base::RefCountedMemory"*)***
  %133 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %132, align 8
  %134 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %133, align 8
  %135 = tail call i8* %134(%"class.base::RefCountedMemory"* %131) #11
  %136 = load i64, i64* %19, align 8
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = load i8, i8* %137, align 1
  store i8 %138, i8* %13, align 1
  %139 = load i64, i64* %19, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %19, align 8
  %141 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %142 = bitcast %"class.base::RefCountedMemory"* %141 to i8* (%"class.base::RefCountedMemory"*)***
  %143 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %142, align 8
  %144 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %143, align 8
  %145 = tail call i8* %144(%"class.base::RefCountedMemory"* %141) #11
  %146 = load i64, i64* %19, align 8
  %147 = getelementptr inbounds i8, i8* %145, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = add i64 %146, 1
  store i64 %149, i64* %19, align 8
  %150 = zext i8 %148 to i32
  store i32 %150, i32* %14, align 4
  %151 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %152 = bitcast %"class.base::RefCountedMemory"* %151 to i8* (%"class.base::RefCountedMemory"*)***
  %153 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %152, align 8
  %154 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %153, align 8
  %155 = tail call i8* %154(%"class.base::RefCountedMemory"* %151) #11
  %156 = load i64, i64* %19, align 8
  %157 = getelementptr inbounds i8, i8* %155, i64 %156
  %158 = bitcast i8* %157 to i16*
  %159 = load i16, i16* %158, align 1
  %160 = add i64 %156, 2
  store i64 %160, i64* %19, align 8
  %161 = zext i16 %159 to i32
  store i32 %161, i32* %15, align 4
  %162 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %163 = bitcast %"class.base::RefCountedMemory"* %162 to i8* (%"class.base::RefCountedMemory"*)***
  %164 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %163, align 8
  %165 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %164, align 8
  %166 = tail call i8* %165(%"class.base::RefCountedMemory"* %162) #11
  %167 = load i64, i64* %19, align 8
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %16, align 1
  %170 = load i64, i64* %19, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %19, align 8
  %172 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %173 = bitcast %"class.base::RefCountedMemory"* %172 to i8* (%"class.base::RefCountedMemory"*)***
  %174 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %173, align 8
  %175 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %174, align 8
  %176 = tail call i8* %175(%"class.base::RefCountedMemory"* %172) #11
  %177 = load i64, i64* %19, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 %177
  %179 = load i8, i8* %178, align 1
  store i8 %179, i8* %17, align 1
  %180 = load i64, i64* %19, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %19, align 8
  %182 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %183 = bitcast %"class.base::RefCountedMemory"* %182 to i8* (%"class.base::RefCountedMemory"*)***
  %184 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %183, align 8
  %185 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %184, align 8
  %186 = tail call i8* %185(%"class.base::RefCountedMemory"* %182) #11
  %187 = load i64, i64* %19, align 8
  %188 = getelementptr inbounds i8, i8* %186, i64 %187
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 1
  store i32 %190, i32* %18, align 4
  %191 = load i64, i64* %19, align 8
  %192 = add i64 %191, 8
  store i64 %192, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb20CompatMapNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::CompatMapNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"struct.x11::Xkb::CompatMapNotifyEvent", %"struct.x11::Xkb::CompatMapNotifyEvent"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %14 = bitcast %"class.base::RefCountedMemory"* %13 to i8* (%"class.base::RefCountedMemory"*)***
  %15 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %15, align 8
  %17 = tail call i8* %16(%"class.base::RefCountedMemory"* %13) #11
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %11, align 8
  %20 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %21 = bitcast %"class.base::RefCountedMemory"* %20 to i8* (%"class.base::RefCountedMemory"*)***
  %22 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %21, align 8
  %23 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %22, align 8
  %24 = tail call i8* %23(%"class.base::RefCountedMemory"* %20) #11
  %25 = load i64, i64* %11, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %3, align 1
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %11, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #11
  %35 = load i64, i64* %11, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 1
  store i16 %38, i16* %4, align 2
  %39 = load i64, i64* %11, align 8
  %40 = add i64 %39, 2
  store i64 %40, i64* %11, align 8
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %42 = bitcast %"class.base::RefCountedMemory"* %41 to i8* (%"class.base::RefCountedMemory"*)***
  %43 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %43, align 8
  %45 = tail call i8* %44(%"class.base::RefCountedMemory"* %41) #11
  %46 = load i64, i64* %11, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  store i32 %49, i32* %5, align 4
  %50 = load i64, i64* %11, align 8
  %51 = add i64 %50, 4
  store i64 %51, i64* %11, align 8
  %52 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %53 = bitcast %"class.base::RefCountedMemory"* %52 to i8* (%"class.base::RefCountedMemory"*)***
  %54 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %53, align 8
  %55 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %54, align 8
  %56 = tail call i8* %55(%"class.base::RefCountedMemory"* %52) #11
  %57 = load i64, i64* %11, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %6, align 1
  %60 = load i64, i64* %11, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %11, align 8
  %62 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %63 = bitcast %"class.base::RefCountedMemory"* %62 to i8* (%"class.base::RefCountedMemory"*)***
  %64 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %63, align 8
  %65 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %64, align 8
  %66 = tail call i8* %65(%"class.base::RefCountedMemory"* %62) #11
  %67 = load i64, i64* %11, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = add i64 %67, 1
  store i64 %70, i64* %11, align 8
  %71 = zext i8 %69 to i32
  store i32 %71, i32* %7, align 4
  %72 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %73 = bitcast %"class.base::RefCountedMemory"* %72 to i8* (%"class.base::RefCountedMemory"*)***
  %74 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %73, align 8
  %75 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %74, align 8
  %76 = tail call i8* %75(%"class.base::RefCountedMemory"* %72) #11
  %77 = load i64, i64* %11, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = bitcast i8* %78 to i16*
  %80 = load i16, i16* %79, align 1
  store i16 %80, i16* %8, align 2
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, 2
  store i64 %82, i64* %11, align 8
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #11
  %88 = load i64, i64* %11, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 1
  store i16 %91, i16* %9, align 2
  %92 = load i64, i64* %11, align 8
  %93 = add i64 %92, 2
  store i64 %93, i64* %11, align 8
  %94 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %95 = bitcast %"class.base::RefCountedMemory"* %94 to i8* (%"class.base::RefCountedMemory"*)***
  %96 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %95, align 8
  %97 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %96, align 8
  %98 = tail call i8* %97(%"class.base::RefCountedMemory"* %94) #11
  %99 = load i64, i64* %11, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 1
  store i16 %102, i16* %10, align 2
  %103 = load i64, i64* %11, align 8
  %104 = add i64 %103, 18
  store i64 %104, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb15BellNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::BellNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"struct.x11::Xkb::BellNotifyEvent", %"struct.x11::Xkb::BellNotifyEvent"* %0, i64 0, i32 14
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #11
  %22 = load i64, i64* %15, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %15, align 8
  %24 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %25 = bitcast %"class.base::RefCountedMemory"* %24 to i8* (%"class.base::RefCountedMemory"*)***
  %26 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %25, align 8
  %27 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %26, align 8
  %28 = tail call i8* %27(%"class.base::RefCountedMemory"* %24) #11
  %29 = load i64, i64* %15, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %3, align 1
  %32 = load i64, i64* %15, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %15, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #11
  %39 = load i64, i64* %15, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  store i16 %42, i16* %4, align 2
  %43 = load i64, i64* %15, align 8
  %44 = add i64 %43, 2
  store i64 %44, i64* %15, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %15, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  store i32 %53, i32* %5, align 4
  %54 = load i64, i64* %15, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %15, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %15, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %6, align 1
  %64 = load i64, i64* %15, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %15, align 8
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #11
  %71 = load i64, i64* %15, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = add i64 %71, 1
  store i64 %74, i64* %15, align 8
  %75 = zext i8 %73 to i32
  store i32 %75, i32* %7, align 4
  %76 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %77 = bitcast %"class.base::RefCountedMemory"* %76 to i8* (%"class.base::RefCountedMemory"*)***
  %78 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %77, align 8
  %79 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %78, align 8
  %80 = tail call i8* %79(%"class.base::RefCountedMemory"* %76) #11
  %81 = load i64, i64* %15, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load i8, i8* %82, align 1
  store i8 %83, i8* %8, align 1
  %84 = load i64, i64* %15, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %15, align 8
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #11
  %91 = load i64, i64* %15, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = load i8, i8* %92, align 1
  store i8 %93, i8* %9, align 1
  %94 = load i64, i64* %15, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %15, align 8
  %96 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %97 = bitcast %"class.base::RefCountedMemory"* %96 to i8* (%"class.base::RefCountedMemory"*)***
  %98 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %98, align 8
  %100 = tail call i8* %99(%"class.base::RefCountedMemory"* %96) #11
  %101 = load i64, i64* %15, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 1
  store i16 %104, i16* %10, align 2
  %105 = load i64, i64* %15, align 8
  %106 = add i64 %105, 2
  store i64 %106, i64* %15, align 8
  %107 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %108 = bitcast %"class.base::RefCountedMemory"* %107 to i8* (%"class.base::RefCountedMemory"*)***
  %109 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %108, align 8
  %110 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %109, align 8
  %111 = tail call i8* %110(%"class.base::RefCountedMemory"* %107) #11
  %112 = load i64, i64* %15, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 1
  store i16 %115, i16* %11, align 2
  %116 = load i64, i64* %15, align 8
  %117 = add i64 %116, 2
  store i64 %117, i64* %15, align 8
  %118 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %119 = bitcast %"class.base::RefCountedMemory"* %118 to i8* (%"class.base::RefCountedMemory"*)***
  %120 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %120, align 8
  %122 = tail call i8* %121(%"class.base::RefCountedMemory"* %118) #11
  %123 = load i64, i64* %15, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 1
  store i32 %126, i32* %12, align 4
  %127 = load i64, i64* %15, align 8
  %128 = add i64 %127, 4
  store i64 %128, i64* %15, align 8
  %129 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %130 = bitcast %"class.base::RefCountedMemory"* %129 to i8* (%"class.base::RefCountedMemory"*)***
  %131 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %130, align 8
  %132 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %131, align 8
  %133 = tail call i8* %132(%"class.base::RefCountedMemory"* %129) #11
  %134 = load i64, i64* %15, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* %136, align 1
  store i32 %137, i32* %13, align 4
  %138 = load i64, i64* %15, align 8
  %139 = add i64 %138, 4
  store i64 %139, i64* %15, align 8
  %140 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %141 = bitcast %"class.base::RefCountedMemory"* %140 to i8* (%"class.base::RefCountedMemory"*)***
  %142 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %141, align 8
  %143 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %142, align 8
  %144 = tail call i8* %143(%"class.base::RefCountedMemory"* %140) #11
  %145 = load i64, i64* %15, align 8
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %14, align 1
  %148 = load i64, i64* %15, align 8
  %149 = add i64 %148, 8
  store i64 %149, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb18ActionMessageEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::ActionMessageEvent"*, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %15 = bitcast %"class.base::RefCountedMemory"* %14 to i8* (%"class.base::RefCountedMemory"*)***
  %16 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %16, align 8
  %18 = tail call i8* %17(%"class.base::RefCountedMemory"* %14) #11
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %12, align 8
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #11
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i8, i8* %27, align 1
  store i8 %28, i8* %3, align 1
  %29 = load i64, i64* %12, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %12, align 8
  %31 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %32 = bitcast %"class.base::RefCountedMemory"* %31 to i8* (%"class.base::RefCountedMemory"*)***
  %33 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %32, align 8
  %34 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %33, align 8
  %35 = tail call i8* %34(%"class.base::RefCountedMemory"* %31) #11
  %36 = load i64, i64* %12, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  store i16 %39, i16* %4, align 2
  %40 = load i64, i64* %12, align 8
  %41 = add i64 %40, 2
  store i64 %41, i64* %12, align 8
  %42 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %43 = bitcast %"class.base::RefCountedMemory"* %42 to i8* (%"class.base::RefCountedMemory"*)***
  %44 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %43, align 8
  %45 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %44, align 8
  %46 = tail call i8* %45(%"class.base::RefCountedMemory"* %42) #11
  %47 = load i64, i64* %12, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 1
  store i32 %50, i32* %5, align 4
  %51 = load i64, i64* %12, align 8
  %52 = add i64 %51, 4
  store i64 %52, i64* %12, align 8
  %53 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %54 = bitcast %"class.base::RefCountedMemory"* %53 to i8* (%"class.base::RefCountedMemory"*)***
  %55 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %54, align 8
  %56 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %55, align 8
  %57 = tail call i8* %56(%"class.base::RefCountedMemory"* %53) #11
  %58 = load i64, i64* %12, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = load i8, i8* %59, align 1
  store i8 %60, i8* %6, align 1
  %61 = load i64, i64* %12, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %12, align 8
  %63 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %64 = bitcast %"class.base::RefCountedMemory"* %63 to i8* (%"class.base::RefCountedMemory"*)***
  %65 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %65, align 8
  %67 = tail call i8* %66(%"class.base::RefCountedMemory"* %63) #11
  %68 = load i64, i64* %12, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = load i8, i8* %69, align 1
  store i8 %70, i8* %7, align 1
  %71 = load i64, i64* %12, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %12, align 8
  %73 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %74 = bitcast %"class.base::RefCountedMemory"* %73 to i8* (%"class.base::RefCountedMemory"*)***
  %75 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %74, align 8
  %76 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %75, align 8
  %77 = tail call i8* %76(%"class.base::RefCountedMemory"* %73) #11
  %78 = load i64, i64* %12, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = load i8, i8* %79, align 1
  store i8 %80, i8* %8, align 1
  %81 = load i64, i64* %12, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %12, align 8
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #11
  %88 = load i64, i64* %12, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %9, align 1
  %91 = load i64, i64* %12, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %12, align 8
  %93 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %94 = bitcast %"class.base::RefCountedMemory"* %93 to i8* (%"class.base::RefCountedMemory"*)***
  %95 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %94, align 8
  %96 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %95, align 8
  %97 = tail call i8* %96(%"class.base::RefCountedMemory"* %93) #11
  %98 = load i64, i64* %12, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = add i64 %98, 1
  store i64 %101, i64* %12, align 8
  %102 = zext i8 %100 to i32
  store i32 %102, i32* %10, align 4
  %103 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %104 = bitcast %"class.base::RefCountedMemory"* %103 to i8* (%"class.base::RefCountedMemory"*)***
  %105 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %104, align 8
  %106 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %105, align 8
  %107 = tail call i8* %106(%"class.base::RefCountedMemory"* %103) #11
  %108 = load i64, i64* %12, align 8
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = add i64 %108, 1
  store i64 %111, i64* %12, align 8
  %112 = zext i8 %110 to i32
  store i32 %112, i32* %11, align 4
  %113 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 0
  %114 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %115 = bitcast %"class.base::RefCountedMemory"* %114 to i8* (%"class.base::RefCountedMemory"*)***
  %116 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %115, align 8
  %117 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %116, align 8
  %118 = tail call i8* %117(%"class.base::RefCountedMemory"* %114) #11
  %119 = load i64, i64* %12, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %113, align 1
  %122 = load i64, i64* %12, align 8
  %123 = add i64 %122, 1
  store i64 %123, i64* %12, align 8
  %124 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 1
  %125 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %126 = bitcast %"class.base::RefCountedMemory"* %125 to i8* (%"class.base::RefCountedMemory"*)***
  %127 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %126, align 8
  %128 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %127, align 8
  %129 = tail call i8* %128(%"class.base::RefCountedMemory"* %125) #11
  %130 = load i64, i64* %12, align 8
  %131 = getelementptr inbounds i8, i8* %129, i64 %130
  %132 = load i8, i8* %131, align 1
  store i8 %132, i8* %124, align 1
  %133 = load i64, i64* %12, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %12, align 8
  %135 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 2
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #11
  %141 = load i64, i64* %12, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %135, align 1
  %144 = load i64, i64* %12, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %12, align 8
  %146 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 3
  %147 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %148 = bitcast %"class.base::RefCountedMemory"* %147 to i8* (%"class.base::RefCountedMemory"*)***
  %149 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %148, align 8
  %150 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %149, align 8
  %151 = tail call i8* %150(%"class.base::RefCountedMemory"* %147) #11
  %152 = load i64, i64* %12, align 8
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = load i8, i8* %153, align 1
  store i8 %154, i8* %146, align 1
  %155 = load i64, i64* %12, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %12, align 8
  %157 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 4
  %158 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %159 = bitcast %"class.base::RefCountedMemory"* %158 to i8* (%"class.base::RefCountedMemory"*)***
  %160 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %159, align 8
  %161 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %160, align 8
  %162 = tail call i8* %161(%"class.base::RefCountedMemory"* %158) #11
  %163 = load i64, i64* %12, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = load i8, i8* %164, align 1
  store i8 %165, i8* %157, align 1
  %166 = load i64, i64* %12, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %12, align 8
  %168 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 5
  %169 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %170 = bitcast %"class.base::RefCountedMemory"* %169 to i8* (%"class.base::RefCountedMemory"*)***
  %171 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %170, align 8
  %172 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %171, align 8
  %173 = tail call i8* %172(%"class.base::RefCountedMemory"* %169) #11
  %174 = load i64, i64* %12, align 8
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  %176 = load i8, i8* %175, align 1
  store i8 %176, i8* %168, align 1
  %177 = load i64, i64* %12, align 8
  %178 = add i64 %177, 1
  store i64 %178, i64* %12, align 8
  %179 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 6
  %180 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %181 = bitcast %"class.base::RefCountedMemory"* %180 to i8* (%"class.base::RefCountedMemory"*)***
  %182 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %181, align 8
  %183 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %182, align 8
  %184 = tail call i8* %183(%"class.base::RefCountedMemory"* %180) #11
  %185 = load i64, i64* %12, align 8
  %186 = getelementptr inbounds i8, i8* %184, i64 %185
  %187 = load i8, i8* %186, align 1
  store i8 %187, i8* %179, align 1
  %188 = load i64, i64* %12, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %12, align 8
  %190 = getelementptr inbounds %"struct.x11::Xkb::ActionMessageEvent", %"struct.x11::Xkb::ActionMessageEvent"* %0, i64 0, i32 10, i32 0, i64 7
  %191 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %192 = bitcast %"class.base::RefCountedMemory"* %191 to i8* (%"class.base::RefCountedMemory"*)***
  %193 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %192, align 8
  %194 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %193, align 8
  %195 = tail call i8* %194(%"class.base::RefCountedMemory"* %191) #11
  %196 = load i64, i64* %12, align 8
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %190, align 1
  %199 = load i64, i64* %12, align 8
  %200 = add i64 %199, 11
  store i64 %200, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb18AccessXNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::AccessXNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::AccessXNotifyEvent", %"struct.x11::Xkb::AccessXNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %14 = bitcast %"class.base::RefCountedMemory"* %13 to i8* (%"class.base::RefCountedMemory"*)***
  %15 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %15, align 8
  %17 = tail call i8* %16(%"class.base::RefCountedMemory"* %13) #11
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %11, align 8
  %20 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %21 = bitcast %"class.base::RefCountedMemory"* %20 to i8* (%"class.base::RefCountedMemory"*)***
  %22 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %21, align 8
  %23 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %22, align 8
  %24 = tail call i8* %23(%"class.base::RefCountedMemory"* %20) #11
  %25 = load i64, i64* %11, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %3, align 1
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %11, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #11
  %35 = load i64, i64* %11, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 1
  store i16 %38, i16* %4, align 2
  %39 = load i64, i64* %11, align 8
  %40 = add i64 %39, 2
  store i64 %40, i64* %11, align 8
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %42 = bitcast %"class.base::RefCountedMemory"* %41 to i8* (%"class.base::RefCountedMemory"*)***
  %43 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %43, align 8
  %45 = tail call i8* %44(%"class.base::RefCountedMemory"* %41) #11
  %46 = load i64, i64* %11, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  store i32 %49, i32* %5, align 4
  %50 = load i64, i64* %11, align 8
  %51 = add i64 %50, 4
  store i64 %51, i64* %11, align 8
  %52 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %53 = bitcast %"class.base::RefCountedMemory"* %52 to i8* (%"class.base::RefCountedMemory"*)***
  %54 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %53, align 8
  %55 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %54, align 8
  %56 = tail call i8* %55(%"class.base::RefCountedMemory"* %52) #11
  %57 = load i64, i64* %11, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %6, align 1
  %60 = load i64, i64* %11, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %11, align 8
  %62 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %63 = bitcast %"class.base::RefCountedMemory"* %62 to i8* (%"class.base::RefCountedMemory"*)***
  %64 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %63, align 8
  %65 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %64, align 8
  %66 = tail call i8* %65(%"class.base::RefCountedMemory"* %62) #11
  %67 = load i64, i64* %11, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = load i8, i8* %68, align 1
  store i8 %69, i8* %7, align 1
  %70 = load i64, i64* %11, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %11, align 8
  %72 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %73 = bitcast %"class.base::RefCountedMemory"* %72 to i8* (%"class.base::RefCountedMemory"*)***
  %74 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %73, align 8
  %75 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %74, align 8
  %76 = tail call i8* %75(%"class.base::RefCountedMemory"* %72) #11
  %77 = load i64, i64* %11, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = bitcast i8* %78 to i16*
  %80 = load i16, i16* %79, align 1
  %81 = add i64 %77, 2
  store i64 %81, i64* %11, align 8
  %82 = zext i16 %80 to i32
  store i32 %82, i32* %8, align 4
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #11
  %88 = load i64, i64* %11, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 1
  store i16 %91, i16* %9, align 2
  %92 = load i64, i64* %11, align 8
  %93 = add i64 %92, 2
  store i64 %93, i64* %11, align 8
  %94 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %95 = bitcast %"class.base::RefCountedMemory"* %94 to i8* (%"class.base::RefCountedMemory"*)***
  %96 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %95, align 8
  %97 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %96, align 8
  %98 = tail call i8* %97(%"class.base::RefCountedMemory"* %94) #11
  %99 = load i64, i64* %11, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 1
  store i16 %102, i16* %10, align 2
  %103 = load i64, i64* %11, align 8
  %104 = add i64 %103, 18
  store i64 %104, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x119ReadEventINS_3Xkb26ExtensionDeviceNotifyEventEEEvPT_PNS_10ReadBufferE(%"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* nocapture, %"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"struct.x11::Xkb::ExtensionDeviceNotifyEvent", %"struct.x11::Xkb::ExtensionDeviceNotifyEvent"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #11
  %23 = load i64, i64* %16, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %16, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #11
  %30 = load i64, i64* %16, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = load i8, i8* %31, align 1
  store i8 %32, i8* %3, align 1
  %33 = load i64, i64* %16, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %16, align 8
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #11
  %40 = load i64, i64* %16, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 1
  store i16 %43, i16* %4, align 2
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 2
  store i64 %45, i64* %16, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #11
  %51 = load i64, i64* %16, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i32 %54, i32* %5, align 4
  %55 = load i64, i64* %16, align 8
  %56 = add i64 %55, 4
  store i64 %56, i64* %16, align 8
  %57 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %58 = bitcast %"class.base::RefCountedMemory"* %57 to i8* (%"class.base::RefCountedMemory"*)***
  %59 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %58, align 8
  %60 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %59, align 8
  %61 = tail call i8* %60(%"class.base::RefCountedMemory"* %57) #11
  %62 = load i64, i64* %16, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  %64 = load i8, i8* %63, align 1
  store i8 %64, i8* %6, align 1
  %65 = load i64, i64* %16, align 8
  %66 = add i64 %65, 2
  store i64 %66, i64* %16, align 8
  %67 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %68 = bitcast %"class.base::RefCountedMemory"* %67 to i8* (%"class.base::RefCountedMemory"*)***
  %69 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %68, align 8
  %70 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %69, align 8
  %71 = tail call i8* %70(%"class.base::RefCountedMemory"* %67) #11
  %72 = load i64, i64* %16, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i16*
  %75 = load i16, i16* %74, align 1
  %76 = add i64 %72, 2
  store i64 %76, i64* %16, align 8
  %77 = zext i16 %75 to i32
  store i32 %77, i32* %7, align 4
  %78 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %79 = bitcast %"class.base::RefCountedMemory"* %78 to i8* (%"class.base::RefCountedMemory"*)***
  %80 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %79, align 8
  %81 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %80, align 8
  %82 = tail call i8* %81(%"class.base::RefCountedMemory"* %78) #11
  %83 = load i64, i64* %16, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 1
  %87 = add i64 %83, 2
  store i64 %87, i64* %16, align 8
  %88 = zext i16 %86 to i32
  store i32 %88, i32* %8, align 4
  %89 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %90 = bitcast %"class.base::RefCountedMemory"* %89 to i8* (%"class.base::RefCountedMemory"*)***
  %91 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %90, align 8
  %92 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %91, align 8
  %93 = tail call i8* %92(%"class.base::RefCountedMemory"* %89) #11
  %94 = load i64, i64* %16, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 %94
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 1
  store i16 %97, i16* %9, align 2
  %98 = load i64, i64* %16, align 8
  %99 = add i64 %98, 2
  store i64 %99, i64* %16, align 8
  %100 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %101 = bitcast %"class.base::RefCountedMemory"* %100 to i8* (%"class.base::RefCountedMemory"*)***
  %102 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %101, align 8
  %103 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %102, align 8
  %104 = tail call i8* %103(%"class.base::RefCountedMemory"* %100) #11
  %105 = load i64, i64* %16, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 1
  store i32 %108, i32* %10, align 4
  %109 = load i64, i64* %16, align 8
  %110 = add i64 %109, 4
  store i64 %110, i64* %16, align 8
  %111 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %112 = bitcast %"class.base::RefCountedMemory"* %111 to i8* (%"class.base::RefCountedMemory"*)***
  %113 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %112, align 8
  %114 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %113, align 8
  %115 = tail call i8* %114(%"class.base::RefCountedMemory"* %111) #11
  %116 = load i64, i64* %16, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 1
  store i32 %119, i32* %11, align 4
  %120 = load i64, i64* %16, align 8
  %121 = add i64 %120, 4
  store i64 %121, i64* %16, align 8
  %122 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %123 = bitcast %"class.base::RefCountedMemory"* %122 to i8* (%"class.base::RefCountedMemory"*)***
  %124 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %123, align 8
  %125 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %124, align 8
  %126 = tail call i8* %125(%"class.base::RefCountedMemory"* %122) #11
  %127 = load i64, i64* %16, align 8
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %12, align 1
  %130 = load i64, i64* %16, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %16, align 8
  %132 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %133 = bitcast %"class.base::RefCountedMemory"* %132 to i8* (%"class.base::RefCountedMemory"*)***
  %134 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %133, align 8
  %135 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %134, align 8
  %136 = tail call i8* %135(%"class.base::RefCountedMemory"* %132) #11
  %137 = load i64, i64* %16, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = load i8, i8* %138, align 1
  store i8 %139, i8* %13, align 1
  %140 = load i64, i64* %16, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %16, align 8
  %142 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %143 = bitcast %"class.base::RefCountedMemory"* %142 to i8* (%"class.base::RefCountedMemory"*)***
  %144 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %143, align 8
  %145 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %144, align 8
  %146 = tail call i8* %145(%"class.base::RefCountedMemory"* %142) #11
  %147 = load i64, i64* %16, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = bitcast i8* %148 to i16*
  %150 = load i16, i16* %149, align 1
  %151 = add i64 %147, 2
  store i64 %151, i64* %16, align 8
  %152 = zext i16 %150 to i32
  store i32 %152, i32* %14, align 4
  %153 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %154 = bitcast %"class.base::RefCountedMemory"* %153 to i8* (%"class.base::RefCountedMemory"*)***
  %155 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %154, align 8
  %156 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %155, align 8
  %157 = tail call i8* %156(%"class.base::RefCountedMemory"* %153) #11
  %158 = load i64, i64* %16, align 8
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  %160 = bitcast i8* %159 to i16*
  %161 = load i16, i16* %160, align 1
  %162 = add i64 %158, 2
  store i64 %162, i64* %16, align 8
  %163 = zext i16 %161 to i32
  store i32 %163, i32* %15, align 4
  %164 = load i64, i64* %16, align 8
  %165 = add i64 %164, 2
  store i64 %165, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12UseExtensionERKNS0_19UseExtensionRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::UseExtensionRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #11
  br i1 %16, label %17, label %78

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %78, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  %23 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #11
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 0, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::Xkb::UseExtensionRequest", %"struct.x11::Xkb::UseExtensionRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %46 = bitcast %"struct.x11::Xkb::UseExtensionRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #11
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %29, align 8
  %54 = bitcast i16* %45 to i8*
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %54) #11
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %60 = load i64, i64* %29, align 8
  %61 = add i64 %60, 2
  store i64 %61, i64* %29, align 8
  %62 = sub i64 2, %60
  %63 = and i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %21
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %29, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %29, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #11
  br label %78

78:                                               ; preds = %2, %17, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #2

declare void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12UseExtensionERKtS2_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Xkb::UseExtensionRequest", align 2
  %5 = bitcast %"struct.x11::Xkb::UseExtensionRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.x11::Xkb::UseExtensionRequest", %"struct.x11::Xkb::UseExtensionRequest"* %4, i64 0, i32 0
  %7 = load i16, i16* %1, align 2
  store i16 %7, i16* %6, align 2
  %8 = getelementptr inbounds %"struct.x11::Xkb::UseExtensionRequest", %"struct.x11::Xkb::UseExtensionRequest"* %4, i64 0, i32 1
  %9 = load i16, i16* %2, align 2
  store i16 %9, i16* %8, align 2
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12UseExtensionERKNS0_19UseExtensionRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::UseExtensionRequest"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::UseExtensionReply"* @_ZN3x116detail9ReadReplyINS_3Xkb17UseExtensionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 8) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::UseExtensionReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 2
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i16*
  %9 = getelementptr inbounds i8, i8* %2, i64 6
  %10 = bitcast i8* %9 to i16*
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %14 = bitcast %"class.base::RefCountedMemory"* %13 to i8* (%"class.base::RefCountedMemory"*)***
  %15 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %15, align 8
  %17 = tail call i8* %16(%"class.base::RefCountedMemory"* %13) #11
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %11, align 8
  %20 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %21 = bitcast %"class.base::RefCountedMemory"* %20 to i8* (%"class.base::RefCountedMemory"*)***
  %22 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %21, align 8
  %23 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %22, align 8
  %24 = tail call i8* %23(%"class.base::RefCountedMemory"* %20) #11
  %25 = load i64, i64* %11, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %2, align 1
  %28 = add i64 %25, 1
  store i64 %28, i64* %11, align 8
  %29 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %30 = bitcast %"class.base::RefCountedMemory"* %29 to i8* (%"class.base::RefCountedMemory"*)***
  %31 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %31, align 8
  %33 = tail call i8* %32(%"class.base::RefCountedMemory"* %29) #11
  %34 = load i64, i64* %11, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 1
  store i16 %37, i16* %6, align 2
  %38 = add i64 %34, 2
  store i64 %38, i64* %11, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #11
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %44, 4
  store i64 %45, i64* %11, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #11
  %51 = load i64, i64* %11, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i16*
  %54 = load i16, i16* %53, align 1
  store i16 %54, i16* %8, align 2
  %55 = add i64 %51, 2
  store i64 %55, i64* %11, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %12, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %11, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 1
  store i16 %64, i16* %10, align 2
  %65 = add i64 %61, 22
  %66 = sub i64 2, %61
  %67 = and i64 %66, 3
  %68 = add i64 %65, %67
  store i64 %68, i64* %11, align 8
  ret %"struct.x11::Xkb::UseExtensionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SelectEventsERKNS0_19SelectEventsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SelectEventsRequest"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca %"class.std::__1::back_insert_iterator", align 8
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.std::__1::back_insert_iterator", align 8
  %30 = alloca %"class.std::__1::back_insert_iterator", align 8
  %31 = alloca %"class.std::__1::back_insert_iterator", align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.std::__1::back_insert_iterator", align 8
  %34 = alloca %"class.std::__1::back_insert_iterator", align 8
  %35 = alloca %"class.std::__1::back_insert_iterator", align 8
  %36 = alloca i8, align 1
  %37 = alloca %"class.x11::WriteBuffer", align 8
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i16, align 2
  %41 = alloca i16, align 2
  %42 = alloca i16, align 2
  %43 = alloca i16, align 2
  %44 = alloca i16, align 2
  %45 = alloca i16, align 2
  %46 = alloca i16, align 2
  %47 = alloca i16, align 2
  %48 = alloca i16, align 2
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i16, align 2
  %52 = alloca i16, align 2
  %53 = alloca i8, align 1
  %54 = alloca i8, align 1
  %55 = alloca i16, align 2
  %56 = alloca i16, align 2
  %57 = alloca i16, align 2
  %58 = alloca i16, align 2
  %59 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %60 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %61 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %60) #11
  br i1 %61, label %62, label %570

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %570, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.x11::WriteBuffer"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %67) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %37) #11
  %68 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 2
  %69 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #11
  %70 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %38, align 1
  %72 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %37, i64 0, i32 1
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %34, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %74, align 8
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* nonnull dereferenceable(1) %38) #11
  %76 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %37, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #11
  store i8 1, i8* %39, align 1
  %79 = bitcast %"class.std::__1::back_insert_iterator"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %33, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %80, align 8
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* nonnull dereferenceable(1) %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %82 = load i64, i64* %76, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #11
  store i8 0, i8* %32, align 1
  %84 = bitcast %"class.std::__1::back_insert_iterator"* %31 to i8*
  %85 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %31, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %85, align 8
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* nonnull dereferenceable(1) %32) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %87 = load i64, i64* %76, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %85, align 8
  %89 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* nonnull dereferenceable(1) %32) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %90 = load i64, i64* %76, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %76, align 8
  %92 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 3
  %94 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #11
  %95 = bitcast %"struct.x11::Xkb::SelectEventsRequest"* %1 to i8*
  %96 = bitcast %"class.std::__1::back_insert_iterator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  %97 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %30, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %97, align 8
  %98 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %95) #11
  %99 = getelementptr inbounds i8, i8* %95, i64 1
  %100 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  %101 = load i64, i64* %76, align 8
  %102 = add i64 %101, 2
  store i64 %102, i64* %76, align 8
  %103 = bitcast i16* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %103) #11
  %104 = load i32, i32* %92, align 4
  %105 = trunc i32 %104 to i16
  store i16 %105, i16* %40, align 2
  %106 = bitcast %"class.std::__1::back_insert_iterator"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %29, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %107, align 8
  %108 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* nonnull dereferenceable(1) %103) #11
  %109 = getelementptr inbounds i8, i8* %103, i64 1
  %110 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %109) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  %111 = load i64, i64* %76, align 8
  %112 = add i64 %111, 2
  store i64 %112, i64* %76, align 8
  %113 = bitcast i16* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %113) #11
  %114 = load i32, i32* %68, align 4
  %115 = trunc i32 %114 to i16
  store i16 %115, i16* %41, align 2
  %116 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %117, align 8
  %118 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* nonnull dereferenceable(1) %113) #11
  %119 = getelementptr inbounds i8, i8* %113, i64 1
  %120 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  %121 = load i64, i64* %76, align 8
  %122 = add i64 %121, 2
  store i64 %122, i64* %76, align 8
  %123 = bitcast i16* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %123) #11
  %124 = load i32, i32* %93, align 4
  %125 = trunc i32 %124 to i16
  store i16 %125, i16* %42, align 2
  %126 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  %127 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %127, align 8
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* nonnull dereferenceable(1) %123) #11
  %129 = getelementptr inbounds i8, i8* %123, i64 1
  %130 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %129) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %131 = load i64, i64* %76, align 8
  %132 = add i64 %131, 2
  store i64 %132, i64* %76, align 8
  %133 = bitcast i16* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %133) #11
  %134 = load i32, i32* %69, align 4
  %135 = trunc i32 %134 to i16
  store i16 %135, i16* %43, align 2
  %136 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  %137 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %137, align 8
  %138 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %133) #11
  %139 = getelementptr inbounds i8, i8* %133, i64 1
  %140 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* dereferenceable(1) %139) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  %141 = load i64, i64* %76, align 8
  %142 = add i64 %141, 2
  store i64 %142, i64* %76, align 8
  %143 = bitcast i16* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %143) #11
  %144 = load i32, i32* %94, align 4
  %145 = trunc i32 %144 to i16
  store i16 %145, i16* %44, align 2
  %146 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %147, align 8
  %148 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %143) #11
  %149 = getelementptr inbounds i8, i8* %143, i64 1
  %150 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* dereferenceable(1) %149) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %151 = load i64, i64* %76, align 8
  %152 = add i64 %151, 2
  store i64 %152, i64* %76, align 8
  %153 = load i32, i32* %92, align 4
  %154 = load i32, i32* %68, align 4
  %155 = load i32, i32* %93, align 4
  %156 = or i32 %155, %154
  %157 = xor i32 %156, -1
  %158 = and i32 %153, %157
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %194, label %161

161:                                              ; preds = %66
  %162 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 4, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %166, !prof !3

165:                                              ; preds = %161
  call void @llvm.trap() #11
  unreachable

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %168 = load i8, i8* %167, align 4, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %171, !prof !3

170:                                              ; preds = %166
  call void @llvm.trap() #11
  unreachable

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %173 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %174 = bitcast i16* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %174) #11
  %175 = load i32, i32* %172, align 4
  %176 = trunc i32 %175 to i16
  store i16 %176, i16* %45, align 2
  %177 = bitcast %"class.std::__1::back_insert_iterator"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  %178 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %23, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %178, align 8
  %179 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* nonnull dereferenceable(1) %174) #11
  %180 = getelementptr inbounds i8, i8* %174, i64 1
  %181 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %180) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #11
  %182 = load i64, i64* %76, align 8
  %183 = add i64 %182, 2
  store i64 %183, i64* %76, align 8
  %184 = bitcast i16* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %184) #11
  %185 = load i32, i32* %173, align 4
  %186 = trunc i32 %185 to i16
  store i16 %186, i16* %46, align 2
  %187 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #11
  %188 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %188, align 8
  %189 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %184) #11
  %190 = getelementptr inbounds i8, i8* %184, i64 1
  %191 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %190) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #11
  %192 = load i64, i64* %76, align 8
  %193 = add i64 %192, 2
  store i64 %193, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %184) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %174) #11
  br label %194

194:                                              ; preds = %66, %171
  %195 = phi i64 [ %152, %66 ], [ %193, %171 ]
  %196 = and i32 %158, 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %231, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %200 = load i8, i8* %199, align 4, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %203, !prof !3

202:                                              ; preds = %198
  call void @llvm.trap() #11
  unreachable

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %205 = load i8, i8* %204, align 4, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %208, !prof !3

207:                                              ; preds = %203
  call void @llvm.trap() #11
  unreachable

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %210 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %211 = bitcast i16* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %211) #11
  %212 = load i32, i32* %209, align 4
  %213 = trunc i32 %212 to i16
  store i16 %213, i16* %47, align 2
  %214 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #11
  %215 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %215, align 8
  %216 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* nonnull dereferenceable(1) %211) #11
  %217 = getelementptr inbounds i8, i8* %211, i64 1
  %218 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %217) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #11
  %219 = load i64, i64* %76, align 8
  %220 = add i64 %219, 2
  store i64 %220, i64* %76, align 8
  %221 = bitcast i16* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %221) #11
  %222 = load i32, i32* %210, align 4
  %223 = trunc i32 %222 to i16
  store i16 %223, i16* %48, align 2
  %224 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #11
  %225 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %225, align 8
  %226 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %221) #11
  %227 = getelementptr inbounds i8, i8* %221, i64 1
  %228 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %227) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #11
  %229 = load i64, i64* %76, align 8
  %230 = add i64 %229, 2
  store i64 %230, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %221) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %211) #11
  br label %231

231:                                              ; preds = %194, %208
  %232 = phi i64 [ %195, %194 ], [ %230, %208 ]
  %233 = and i32 %158, 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %274, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %237 = load i8, i8* %236, align 4, !range !2
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %239, label %240, !prof !3

239:                                              ; preds = %235
  call void @llvm.trap() #11
  unreachable

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %242 = load i8, i8* %241, align 4, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %245, !prof !3

244:                                              ; preds = %240
  call void @llvm.trap() #11
  unreachable

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %247 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %248 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #11
  %249 = load i32, i32* %246, align 4
  store i32 %249, i32* %49, align 4
  %250 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #11
  %251 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %251, align 8
  %252 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %248) #11
  %253 = getelementptr inbounds i8, i8* %248, i64 1
  %254 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %253) #11
  %255 = getelementptr inbounds i8, i8* %248, i64 2
  %256 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %255) #11
  %257 = getelementptr inbounds i8, i8* %248, i64 3
  %258 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %257) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #11
  %259 = load i64, i64* %76, align 8
  %260 = add i64 %259, 4
  store i64 %260, i64* %76, align 8
  %261 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #11
  %262 = load i32, i32* %247, align 4
  store i32 %262, i32* %50, align 4
  %263 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #11
  %264 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %264, align 8
  %265 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %261) #11
  %266 = getelementptr inbounds i8, i8* %261, i64 1
  %267 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %266) #11
  %268 = getelementptr inbounds i8, i8* %261, i64 2
  %269 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %268) #11
  %270 = getelementptr inbounds i8, i8* %261, i64 3
  %271 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %270) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #11
  %272 = load i64, i64* %76, align 8
  %273 = add i64 %272, 4
  store i64 %273, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #11
  br label %274

274:                                              ; preds = %231, %245
  %275 = phi i64 [ %232, %231 ], [ %273, %245 ]
  %276 = and i32 %158, 16
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %315, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %280 = load i8, i8* %279, align 4, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %283, !prof !3

282:                                              ; preds = %278
  call void @llvm.trap() #11
  unreachable

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %285 = load i8, i8* %284, align 4, !range !2
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %288, !prof !3

287:                                              ; preds = %283
  call void @llvm.trap() #11
  unreachable

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %290 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %291 = bitcast i32* %289 to i8*
  %292 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #11
  %293 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %293, align 8
  %294 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %291) #11
  %295 = getelementptr inbounds i8, i8* %291, i64 1
  %296 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %295) #11
  %297 = getelementptr inbounds i8, i8* %291, i64 2
  %298 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %297) #11
  %299 = getelementptr inbounds i8, i8* %291, i64 3
  %300 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %299) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #11
  %301 = load i64, i64* %76, align 8
  %302 = add i64 %301, 4
  store i64 %302, i64* %76, align 8
  %303 = bitcast i32* %290 to i8*
  %304 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #11
  %305 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %305, align 8
  %306 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %303) #11
  %307 = getelementptr inbounds i8, i8* %303, i64 1
  %308 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %307) #11
  %309 = getelementptr inbounds i8, i8* %303, i64 2
  %310 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %309) #11
  %311 = getelementptr inbounds i8, i8* %303, i64 3
  %312 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %311) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #11
  %313 = load i64, i64* %76, align 8
  %314 = add i64 %313, 4
  store i64 %314, i64* %76, align 8
  br label %315

315:                                              ; preds = %274, %288
  %316 = phi i64 [ %275, %274 ], [ %314, %288 ]
  %317 = and i32 %158, 32
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %356, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %321 = load i8, i8* %320, align 4, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %323, label %324, !prof !3

323:                                              ; preds = %319
  call void @llvm.trap() #11
  unreachable

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %326 = load i8, i8* %325, align 4, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %329, !prof !3

328:                                              ; preds = %324
  call void @llvm.trap() #11
  unreachable

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %331 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %332 = bitcast i32* %330 to i8*
  %333 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #11
  %334 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %334, align 8
  %335 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %332) #11
  %336 = getelementptr inbounds i8, i8* %332, i64 1
  %337 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %336) #11
  %338 = getelementptr inbounds i8, i8* %332, i64 2
  %339 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %338) #11
  %340 = getelementptr inbounds i8, i8* %332, i64 3
  %341 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %340) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #11
  %342 = load i64, i64* %76, align 8
  %343 = add i64 %342, 4
  store i64 %343, i64* %76, align 8
  %344 = bitcast i32* %331 to i8*
  %345 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #11
  %346 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %346, align 8
  %347 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %344) #11
  %348 = getelementptr inbounds i8, i8* %344, i64 1
  %349 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %348) #11
  %350 = getelementptr inbounds i8, i8* %344, i64 2
  %351 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %350) #11
  %352 = getelementptr inbounds i8, i8* %344, i64 3
  %353 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %352) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #11
  %354 = load i64, i64* %76, align 8
  %355 = add i64 %354, 4
  store i64 %355, i64* %76, align 8
  br label %356

356:                                              ; preds = %315, %329
  %357 = phi i64 [ %316, %315 ], [ %355, %329 ]
  %358 = and i32 %158, 64
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %393, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %362 = load i8, i8* %361, align 4, !range !2
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %365, !prof !3

364:                                              ; preds = %360
  call void @llvm.trap() #11
  unreachable

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %367 = load i8, i8* %366, align 4, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %369, label %370, !prof !3

369:                                              ; preds = %365
  call void @llvm.trap() #11
  unreachable

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %372 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %373 = bitcast i16* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %373) #11
  %374 = load i32, i32* %371, align 4
  %375 = trunc i32 %374 to i16
  store i16 %375, i16* %51, align 2
  %376 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #11
  %377 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %377, align 8
  %378 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %373) #11
  %379 = getelementptr inbounds i8, i8* %373, i64 1
  %380 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %379) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #11
  %381 = load i64, i64* %76, align 8
  %382 = add i64 %381, 2
  store i64 %382, i64* %76, align 8
  %383 = bitcast i16* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %383) #11
  %384 = load i32, i32* %372, align 4
  %385 = trunc i32 %384 to i16
  store i16 %385, i16* %52, align 2
  %386 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #11
  %387 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %387, align 8
  %388 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %383) #11
  %389 = getelementptr inbounds i8, i8* %383, i64 1
  %390 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %389) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #11
  %391 = load i64, i64* %76, align 8
  %392 = add i64 %391, 2
  store i64 %392, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %383) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %373) #11
  br label %393

393:                                              ; preds = %356, %370
  %394 = phi i64 [ %357, %356 ], [ %392, %370 ]
  %395 = trunc i32 %158 to i8
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %424

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %399 = load i8, i8* %398, align 4, !range !2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %402, !prof !3

401:                                              ; preds = %397
  call void @llvm.trap() #11
  unreachable

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %404 = load i8, i8* %403, align 4, !range !2
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %407, !prof !3

406:                                              ; preds = %402
  call void @llvm.trap() #11
  unreachable

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1, i32 0
  %409 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #11
  %410 = load i32, i32* %408, align 4
  %411 = trunc i32 %410 to i8
  store i8 %411, i8* %53, align 1
  %412 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412) #11
  %413 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %413, align 8
  %414 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412) #11
  %415 = load i64, i64* %76, align 8
  %416 = add i64 %415, 1
  store i64 %416, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %54) #11
  %417 = load i32, i32* %409, align 4
  %418 = trunc i32 %417 to i8
  store i8 %418, i8* %54, align 1
  %419 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #11
  %420 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %420, align 8
  %421 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #11
  %422 = load i64, i64* %76, align 8
  %423 = add i64 %422, 1
  store i64 %423, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #11
  br label %424

424:                                              ; preds = %407, %393
  %425 = phi i64 [ %423, %407 ], [ %394, %393 ]
  %426 = and i32 %158, 256
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %451, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %430 = load i8, i8* %429, align 1, !range !2
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %432, label %433, !prof !3

432:                                              ; preds = %428
  call void @llvm.trap() #11
  unreachable

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %435 = load i8, i8* %434, align 1, !range !2
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %437, label %438, !prof !3

437:                                              ; preds = %433
  call void @llvm.trap() #11
  unreachable

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0
  %440 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  %441 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %441) #11
  %442 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %442, align 8
  %443 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %439) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %441) #11
  %444 = load i64, i64* %76, align 8
  %445 = add i64 %444, 1
  store i64 %445, i64* %76, align 8
  %446 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #11
  %447 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %447, align 8
  %448 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %440) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %446) #11
  %449 = load i64, i64* %76, align 8
  %450 = add i64 %449, 1
  store i64 %450, i64* %76, align 8
  br label %451

451:                                              ; preds = %424, %438
  %452 = phi i64 [ %425, %424 ], [ %450, %438 ]
  %453 = and i32 %158, 512
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %478, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %457 = load i8, i8* %456, align 1, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %460, !prof !3

459:                                              ; preds = %455
  call void @llvm.trap() #11
  unreachable

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %462 = load i8, i8* %461, align 1, !range !2
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %464, label %465, !prof !3

464:                                              ; preds = %460
  call void @llvm.trap() #11
  unreachable

465:                                              ; preds = %460
  %466 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0
  %467 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0
  %468 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %468) #11
  %469 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %469, align 8
  %470 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %466) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %468) #11
  %471 = load i64, i64* %76, align 8
  %472 = add i64 %471, 1
  store i64 %472, i64* %76, align 8
  %473 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %473) #11
  %474 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %474, align 8
  %475 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %467) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %473) #11
  %476 = load i64, i64* %76, align 8
  %477 = add i64 %476, 1
  store i64 %477, i64* %76, align 8
  br label %478

478:                                              ; preds = %451, %465
  %479 = phi i64 [ %452, %451 ], [ %477, %465 ]
  %480 = and i32 %158, 1024
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %515, label %482

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %484 = load i8, i8* %483, align 4, !range !2
  %485 = icmp eq i8 %484, 0
  br i1 %485, label %486, label %487, !prof !3

486:                                              ; preds = %482
  call void @llvm.trap() #11
  unreachable

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %489 = load i8, i8* %488, align 4, !range !2
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %491, label %492, !prof !3

491:                                              ; preds = %487
  call void @llvm.trap() #11
  unreachable

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0
  %494 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %495 = bitcast i16* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %495) #11
  %496 = load i32, i32* %493, align 4
  %497 = trunc i32 %496 to i16
  store i16 %497, i16* %55, align 2
  %498 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #11
  %499 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %499, align 8
  %500 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %495) #11
  %501 = getelementptr inbounds i8, i8* %495, i64 1
  %502 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %501) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #11
  %503 = load i64, i64* %76, align 8
  %504 = add i64 %503, 2
  store i64 %504, i64* %76, align 8
  %505 = bitcast i16* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %505) #11
  %506 = load i32, i32* %494, align 4
  %507 = trunc i32 %506 to i16
  store i16 %507, i16* %56, align 2
  %508 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #11
  %509 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %509, align 8
  %510 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %505) #11
  %511 = getelementptr inbounds i8, i8* %505, i64 1
  %512 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %511) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #11
  %513 = load i64, i64* %76, align 8
  %514 = add i64 %513, 2
  store i64 %514, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %505) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %495) #11
  br label %515

515:                                              ; preds = %478, %492
  %516 = phi i64 [ %479, %478 ], [ %514, %492 ]
  %517 = and i32 %158, 2048
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %552, label %519

519:                                              ; preds = %515
  %520 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %521 = load i8, i8* %520, align 4, !range !2
  %522 = icmp eq i8 %521, 0
  br i1 %522, label %523, label %524, !prof !3

523:                                              ; preds = %519
  call void @llvm.trap() #11
  unreachable

524:                                              ; preds = %519
  %525 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %526 = load i8, i8* %525, align 4, !range !2
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %528, label %529, !prof !3

528:                                              ; preds = %524
  call void @llvm.trap() #11
  unreachable

529:                                              ; preds = %524
  %530 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %531 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %532 = bitcast i16* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %532) #11
  %533 = load i32, i32* %530, align 4
  %534 = trunc i32 %533 to i16
  store i16 %534, i16* %57, align 2
  %535 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %535) #11
  %536 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %536, align 8
  %537 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %532) #11
  %538 = getelementptr inbounds i8, i8* %532, i64 1
  %539 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %538) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %535) #11
  %540 = load i64, i64* %76, align 8
  %541 = add i64 %540, 2
  store i64 %541, i64* %76, align 8
  %542 = bitcast i16* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %542) #11
  %543 = load i32, i32* %531, align 4
  %544 = trunc i32 %543 to i16
  store i16 %544, i16* %58, align 2
  %545 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545) #11
  %546 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %546, align 8
  %547 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %542) #11
  %548 = getelementptr inbounds i8, i8* %542, i64 1
  %549 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* dereferenceable(1) %548) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #11
  %550 = load i64, i64* %76, align 8
  %551 = add i64 %550, 2
  store i64 %551, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %542) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %532) #11
  br label %552

552:                                              ; preds = %515, %529
  %553 = phi i64 [ %516, %515 ], [ %551, %529 ]
  %554 = sub i64 0, %553
  %555 = and i64 %554, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  store i8 0, i8* %36, align 1
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %567, label %557

557:                                              ; preds = %552
  %558 = bitcast %"class.std::__1::back_insert_iterator"* %35 to i8*
  %559 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %35, i64 0, i32 0
  br label %560

560:                                              ; preds = %560, %557
  %561 = phi i64 [ 0, %557 ], [ %565, %560 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #11
  store %"class.std::__1::vector.271"* %72, %"class.std::__1::vector.271"** %559, align 8
  %562 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %35, i8* nonnull dereferenceable(1) %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #11
  %563 = load i64, i64* %76, align 8
  %564 = add i64 %563, 1
  store i64 %564, i64* %76, align 8
  %565 = add nuw nsw i64 %561, 1
  %566 = icmp eq i64 %565, %555
  br i1 %566, label %567, label %560

567:                                              ; preds = %560, %552
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  %568 = load %"class.x11::Connection"*, %"class.x11::Connection"** %59, align 8
  %569 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %568, %"class.x11::WriteBuffer"* nonnull %37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %143) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %123) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %103) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %67) #11
  br label %570

570:                                              ; preds = %2, %62, %567
  %571 = phi %"class.x11::Connection::FutureImpl"* [ %569, %567 ], [ null, %62 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %571
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SelectEventsERKNS0_10DeviceSpecERKNS0_9EventTypeES6_S6_RKNS0_7MapPartES9_RKN4absl8optionalINS0_9NKNDetailEEESF_RKNSB_INS0_9StatePartEEESJ_RKNSB_INS0_7ControlEEESN_RKNSB_IjEESQ_SQ_SQ_RKNSB_INS0_10NameDetailEEESU_RKNSB_INS0_8CMDetailEEESY_RKNSB_IhEES11_S11_S11_RKNSB_INS0_9AXNDetailEEES15_RKNSB_INS0_9XIFeatureEEES19_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"class.absl::optional.292"* nocapture readonly dereferenceable(8), %"class.absl::optional.292"* nocapture readonly dereferenceable(8), %"class.absl::optional.297"* nocapture readonly dereferenceable(8), %"class.absl::optional.297"* nocapture readonly dereferenceable(8), %"class.absl::optional.302"* nocapture readonly dereferenceable(8), %"class.absl::optional.302"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional.307"* nocapture readonly dereferenceable(8), %"class.absl::optional.307"* nocapture readonly dereferenceable(8), %"class.absl::optional.312"* nocapture readonly dereferenceable(8), %"class.absl::optional.312"* nocapture readonly dereferenceable(8), %"class.absl::optional.317"* nocapture readonly dereferenceable(2), %"class.absl::optional.317"* nocapture readonly dereferenceable(2), %"class.absl::optional.317"* nocapture readonly dereferenceable(2), %"class.absl::optional.317"* nocapture readonly dereferenceable(2), %"class.absl::optional.322"* nocapture readonly dereferenceable(8), %"class.absl::optional.322"* nocapture readonly dereferenceable(8), %"class.absl::optional.327"* nocapture readonly dereferenceable(8), %"class.absl::optional.327"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %30 = alloca %"struct.x11::Xkb::SelectEventsRequest", align 4
  %31 = bitcast %"struct.x11::Xkb::SelectEventsRequest"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 0
  %33 = load i16, i16* %1, align 2
  store i16 %33, i16* %32, align 4
  %34 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 1
  %35 = load i32, i32* %2, align 4
  store i32 %35, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 2
  %37 = load i32, i32* %3, align 4
  store i32 %37, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 3
  %39 = load i32, i32* %4, align 4
  store i32 %39, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 4
  %41 = load i32, i32* %5, align 4
  store i32 %41, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 5
  %43 = load i32, i32* %6, align 4
  store i32 %43, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.absl::optional.292"* %7 to i64*
  %46 = bitcast i8* %44 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.absl::optional.292"* %8 to i64*
  %50 = bitcast i8* %48 to i64*
  %51 = load i64, i64* %49, align 4
  store i64 %51, i64* %50, align 4
  %52 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.absl::optional.297"* %9 to i64*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %53, align 4
  store i64 %55, i64* %54, align 4
  %56 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.absl::optional.297"* %10 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 4
  %60 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.absl::optional.302"* %11 to i64*
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.absl::optional.302"* %12 to i64*
  %66 = bitcast i8* %64 to i64*
  %67 = load i64, i64* %65, align 4
  store i64 %67, i64* %66, align 4
  %68 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.absl::optional"* %13 to i64*
  %70 = bitcast i8* %68 to i64*
  %71 = load i64, i64* %69, align 4
  store i64 %71, i64* %70, align 4
  %72 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.absl::optional"* %14 to i64*
  %74 = bitcast i8* %72 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 4
  %76 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.absl::optional"* %15 to i64*
  %78 = bitcast i8* %76 to i64*
  %79 = load i64, i64* %77, align 4
  store i64 %79, i64* %78, align 4
  %80 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.absl::optional"* %16 to i64*
  %82 = bitcast i8* %80 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  %84 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.absl::optional.307"* %17 to i64*
  %86 = bitcast i8* %84 to i64*
  %87 = load i64, i64* %85, align 4
  store i64 %87, i64* %86, align 4
  %88 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.absl::optional.307"* %18 to i64*
  %90 = bitcast i8* %88 to i64*
  %91 = load i64, i64* %89, align 4
  store i64 %91, i64* %90, align 4
  %92 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.absl::optional.312"* %19 to i64*
  %94 = bitcast i8* %92 to i64*
  %95 = load i64, i64* %93, align 4
  store i64 %95, i64* %94, align 4
  %96 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.absl::optional.312"* %20 to i64*
  %98 = bitcast i8* %96 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.absl::optional.317"* %21 to i16*
  %102 = bitcast i8* %100 to i16*
  %103 = load i16, i16* %101, align 1
  store i16 %103, i16* %102, align 4
  %104 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.absl::optional.317"* %22 to i16*
  %106 = bitcast i8* %104 to i16*
  %107 = load i16, i16* %105, align 1
  store i16 %107, i16* %106, align 2
  %108 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.absl::optional.317"* %23 to i16*
  %110 = bitcast i8* %108 to i16*
  %111 = load i16, i16* %109, align 1
  store i16 %111, i16* %110, align 4
  %112 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.absl::optional.317"* %24 to i16*
  %114 = bitcast i8* %112 to i16*
  %115 = load i16, i16* %113, align 1
  store i16 %115, i16* %114, align 2
  %116 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.absl::optional.322"* %25 to i64*
  %118 = bitcast i8* %116 to i64*
  %119 = load i64, i64* %117, align 4
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.absl::optional.322"* %26 to i64*
  %122 = bitcast i8* %120 to i64*
  %123 = load i64, i64* %121, align 4
  store i64 %123, i64* %122, align 4
  %124 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.absl::optional.327"* %27 to i64*
  %126 = bitcast i8* %124 to i64*
  %127 = load i64, i64* %125, align 4
  store i64 %127, i64* %126, align 4
  %128 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %30, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %129 = bitcast %"class.absl::optional.327"* %28 to i64*
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %129, align 4
  store i64 %131, i64* %130, align 4
  %132 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SelectEventsERKNS0_19SelectEventsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SelectEventsRequest"* nonnull dereferenceable(176) %30)
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %31) #11
  ret %"class.x11::Connection::FutureImpl"* %132
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb4BellERKNS0_11BellRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::BellRequest"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca i8, align 1
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.x11::WriteBuffer", align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %27 = load %"class.x11::Connection"*, %"class.x11::Connection"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %27) #11
  br i1 %28, label %29, label %174

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %174, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.x11::WriteBuffer"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %23) #11
  %35 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  %39 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %24, align 1
  %41 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %23, i64 0, i32 1
  %42 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %43, align 8
  %44 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %24) #11
  %45 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %23, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #11
  store i8 3, i8* %25, align 1
  %48 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %49, align 8
  %50 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  %51 = load i64, i64* %45, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #11
  store i8 0, i8* %18, align 1
  %53 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  %54 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %54, align 8
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %56 = load i64, i64* %45, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %54, align 8
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %59 = load i64, i64* %45, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %45, align 8
  %61 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 3
  %63 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 5
  %64 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 7
  %65 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %1, i64 0, i32 9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #11
  %66 = bitcast %"struct.x11::Xkb::BellRequest"* %1 to i8*
  %67 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %68, align 8
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %66) #11
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %72 = load i64, i64* %45, align 8
  %73 = add i64 %72, 2
  store i64 %73, i64* %45, align 8
  %74 = bitcast i16* %61 to i8*
  %75 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %76, align 8
  %77 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %74) #11
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  %79 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %80 = load i64, i64* %45, align 8
  %81 = add i64 %80, 2
  store i64 %81, i64* %45, align 8
  %82 = bitcast i16* %35 to i8*
  %83 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %84, align 8
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %82) #11
  %86 = getelementptr inbounds i8, i8* %82, i64 1
  %87 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  %88 = load i64, i64* %45, align 8
  %89 = add i64 %88, 2
  store i64 %89, i64* %45, align 8
  %90 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %91, align 8
  %92 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %62) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  %93 = load i64, i64* %45, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %45, align 8
  %95 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %96, align 8
  %97 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  %98 = load i64, i64* %45, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %45, align 8
  %100 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %101, align 8
  %102 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  %103 = load i64, i64* %45, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %105 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %106 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %106, align 8
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  %108 = load i64, i64* %45, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %110 = bitcast i16* %37 to i8*
  %111 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  %112 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %112, align 8
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %110) #11
  %114 = getelementptr inbounds i8, i8* %110, i64 1
  %115 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %114) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  %116 = load i64, i64* %45, align 8
  %117 = add i64 %116, 2
  store i64 %117, i64* %45, align 8
  %118 = bitcast i16* %64 to i8*
  %119 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %120, align 8
  %121 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %118) #11
  %122 = getelementptr inbounds i8, i8* %118, i64 1
  %123 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %122) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  %124 = load i64, i64* %45, align 8
  %125 = add i64 %124, 2
  store i64 %125, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %126 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %127 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %127, align 8
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %129 = load i64, i64* %45, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %127, align 8
  %131 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %132 = load i64, i64* %45, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %134 = bitcast i32* %38 to i8*
  %135 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #11
  %136 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %136, align 8
  %137 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %134) #11
  %138 = getelementptr inbounds i8, i8* %134, i64 1
  %139 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %138) #11
  %140 = getelementptr inbounds i8, i8* %134, i64 2
  %141 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %140) #11
  %142 = getelementptr inbounds i8, i8* %134, i64 3
  %143 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %142) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #11
  %144 = load i64, i64* %45, align 8
  %145 = add i64 %144, 4
  store i64 %145, i64* %45, align 8
  %146 = bitcast i32* %65 to i8*
  %147 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  %148 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %148, align 8
  %149 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %146) #11
  %150 = getelementptr inbounds i8, i8* %146, i64 1
  %151 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %150) #11
  %152 = getelementptr inbounds i8, i8* %146, i64 2
  %153 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %152) #11
  %154 = getelementptr inbounds i8, i8* %146, i64 3
  %155 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %154) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  %156 = load i64, i64* %45, align 8
  %157 = add i64 %156, 4
  store i64 %157, i64* %45, align 8
  %158 = sub i64 0, %156
  %159 = and i64 %158, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  store i8 0, i8* %22, align 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %33
  %162 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  %163 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  br label %164

164:                                              ; preds = %164, %161
  %165 = phi i64 [ 0, %161 ], [ %169, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #11
  store %"class.std::__1::vector.271"* %41, %"class.std::__1::vector.271"** %163, align 8
  %166 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* nonnull dereferenceable(1) %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #11
  %167 = load i64, i64* %45, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %45, align 8
  %169 = add nuw nsw i64 %165, 1
  %170 = icmp eq i64 %169, %159
  br i1 %170, label %171, label %164

171:                                              ; preds = %164, %33
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  %172 = load %"class.x11::Connection"*, %"class.x11::Connection"** %26, align 8
  %173 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %172, %"class.x11::WriteBuffer"* nonnull %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #11
  br label %174

174:                                              ; preds = %2, %29, %171
  %175 = phi %"class.x11::Connection::FutureImpl"* [ %173, %171 ], [ null, %29 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %175
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb4BellERKNS0_10DeviceSpecERKNS0_13BellClassSpecERKNS0_6IDSpecERKaRKhSD_RKsSF_RKNS_4AtomERKNS_6WindowE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %12 = alloca %"struct.x11::Xkb::BellRequest", align 4
  %13 = bitcast %"struct.x11::Xkb::BellRequest"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 0
  %15 = load i16, i16* %1, align 2
  store i16 %15, i16* %14, align 4
  %16 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 1
  %17 = load i16, i16* %2, align 2
  store i16 %17, i16* %16, align 2
  %18 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 2
  %19 = load i16, i16* %3, align 2
  store i16 %19, i16* %18, align 4
  %20 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 3
  %21 = load i8, i8* %4, align 1
  store i8 %21, i8* %20, align 2
  %22 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 4
  %23 = load i8, i8* %5, align 1
  store i8 %23, i8* %22, align 1
  %24 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 5
  %25 = load i8, i8* %6, align 1
  store i8 %25, i8* %24, align 4
  %26 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 6
  %27 = load i16, i16* %7, align 2
  store i16 %27, i16* %26, align 2
  %28 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 7
  %29 = load i16, i16* %8, align 2
  store i16 %29, i16* %28, align 4
  %30 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 8
  %31 = load i32, i32* %9, align 4
  store i32 %31, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.x11::Xkb::BellRequest", %"struct.x11::Xkb::BellRequest"* %12, i64 0, i32 9
  %33 = load i32, i32* %10, align 4
  store i32 %33, i32* %32, align 4
  %34 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb4BellERKNS0_11BellRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::BellRequest"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret %"class.x11::Connection::FutureImpl"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetStateERKNS0_15GetStateRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetStateRequest"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.x11::WriteBuffer", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %16) #11
  br i1 %17, label %18, label %78

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.x11::WriteBuffer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %24 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %13, align 1
  %26 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 1
  %27 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %28, align 8
  %29 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %13) #11
  %30 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 4, i8* %14, align 1
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %34, align 8
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %43 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %44 = load i64, i64* %30, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  %46 = bitcast %"struct.x11::Xkb::GetStateRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %46) #11
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %52 = load i64, i64* %30, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %57 = load i64, i64* %30, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %60 = load i64, i64* %30, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %62 = and i64 %60, 3
  %63 = xor i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %22
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %30, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %30, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  br label %78

78:                                               ; preds = %2, %18, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %18 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetStateERKNS0_10DeviceSpecE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Xkb::GetStateRequest", align 2
  %4 = bitcast %"struct.x11::Xkb::GetStateRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.x11::Xkb::GetStateRequest", %"struct.x11::Xkb::GetStateRequest"* %3, i64 0, i32 0
  %6 = load i16, i16* %1, align 2
  store i16 %6, i16* %5, align 2
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetStateERKNS0_15GetStateRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetStateRequest"* nonnull dereferenceable(2) %3)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #11
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetStateReply"* @_ZN3x116detail9ReadReplyINS_3Xkb13GetStateReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 56) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetStateReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 56, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds i8, i8* %2, i64 20
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %2, i64 24
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %2, i64 28
  %19 = bitcast i8* %18 to i16*
  %20 = getelementptr inbounds i8, i8* %2, i64 30
  %21 = bitcast i8* %20 to i16*
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %2, i64 36
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds i8, i8* %2, i64 40
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %2, i64 44
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %2, i64 48
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i8, i8* %2, i64 52
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %36 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %37 = bitcast %"class.base::RefCountedMemory"* %36 to i8* (%"class.base::RefCountedMemory"*)***
  %38 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %37, align 8
  %39 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %38, align 8
  %40 = tail call i8* %39(%"class.base::RefCountedMemory"* %36) #11
  %41 = load i64, i64* %34, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %34, align 8
  %43 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %44 = bitcast %"class.base::RefCountedMemory"* %43 to i8* (%"class.base::RefCountedMemory"*)***
  %45 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %44, align 8
  %46 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %45, align 8
  %47 = tail call i8* %46(%"class.base::RefCountedMemory"* %43) #11
  %48 = load i64, i64* %34, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %2, align 1
  %51 = add i64 %48, 1
  store i64 %51, i64* %34, align 8
  %52 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %53 = bitcast %"class.base::RefCountedMemory"* %52 to i8* (%"class.base::RefCountedMemory"*)***
  %54 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %53, align 8
  %55 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %54, align 8
  %56 = tail call i8* %55(%"class.base::RefCountedMemory"* %52) #11
  %57 = load i64, i64* %34, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  store i16 %60, i16* %5, align 2
  %61 = add i64 %57, 2
  store i64 %61, i64* %34, align 8
  %62 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %63 = bitcast %"class.base::RefCountedMemory"* %62 to i8* (%"class.base::RefCountedMemory"*)***
  %64 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %63, align 8
  %65 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %64, align 8
  %66 = tail call i8* %65(%"class.base::RefCountedMemory"* %62) #11
  %67 = load i64, i64* %34, align 8
  %68 = add i64 %67, 4
  store i64 %68, i64* %34, align 8
  %69 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %70 = bitcast %"class.base::RefCountedMemory"* %69 to i8* (%"class.base::RefCountedMemory"*)***
  %71 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %70, align 8
  %72 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %71, align 8
  %73 = tail call i8* %72(%"class.base::RefCountedMemory"* %69) #11
  %74 = load i64, i64* %34, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = add i64 %74, 1
  store i64 %77, i64* %34, align 8
  %78 = zext i8 %76 to i32
  store i32 %78, i32* %7, align 4
  %79 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %80 = bitcast %"class.base::RefCountedMemory"* %79 to i8* (%"class.base::RefCountedMemory"*)***
  %81 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %80, align 8
  %82 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %81, align 8
  %83 = tail call i8* %82(%"class.base::RefCountedMemory"* %79) #11
  %84 = load i64, i64* %34, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = add i64 %84, 1
  store i64 %87, i64* %34, align 8
  %88 = zext i8 %86 to i32
  store i32 %88, i32* %9, align 4
  %89 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %90 = bitcast %"class.base::RefCountedMemory"* %89 to i8* (%"class.base::RefCountedMemory"*)***
  %91 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %90, align 8
  %92 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %91, align 8
  %93 = tail call i8* %92(%"class.base::RefCountedMemory"* %89) #11
  %94 = load i64, i64* %34, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = add i64 %94, 1
  store i64 %97, i64* %34, align 8
  %98 = zext i8 %96 to i32
  store i32 %98, i32* %11, align 4
  %99 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %100 = bitcast %"class.base::RefCountedMemory"* %99 to i8* (%"class.base::RefCountedMemory"*)***
  %101 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %100, align 8
  %102 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %101, align 8
  %103 = tail call i8* %102(%"class.base::RefCountedMemory"* %99) #11
  %104 = load i64, i64* %34, align 8
  %105 = getelementptr inbounds i8, i8* %103, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = add i64 %104, 1
  store i64 %107, i64* %34, align 8
  %108 = zext i8 %106 to i32
  store i32 %108, i32* %13, align 4
  %109 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %110 = bitcast %"class.base::RefCountedMemory"* %109 to i8* (%"class.base::RefCountedMemory"*)***
  %111 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %110, align 8
  %112 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %111, align 8
  %113 = tail call i8* %112(%"class.base::RefCountedMemory"* %109) #11
  %114 = load i64, i64* %34, align 8
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = add i64 %114, 1
  store i64 %117, i64* %34, align 8
  %118 = zext i8 %116 to i32
  store i32 %118, i32* %15, align 4
  %119 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %120 = bitcast %"class.base::RefCountedMemory"* %119 to i8* (%"class.base::RefCountedMemory"*)***
  %121 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %120, align 8
  %122 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %121, align 8
  %123 = tail call i8* %122(%"class.base::RefCountedMemory"* %119) #11
  %124 = load i64, i64* %34, align 8
  %125 = getelementptr inbounds i8, i8* %123, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = add i64 %124, 1
  store i64 %127, i64* %34, align 8
  %128 = zext i8 %126 to i32
  store i32 %128, i32* %17, align 4
  %129 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %130 = bitcast %"class.base::RefCountedMemory"* %129 to i8* (%"class.base::RefCountedMemory"*)***
  %131 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %130, align 8
  %132 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %131, align 8
  %133 = tail call i8* %132(%"class.base::RefCountedMemory"* %129) #11
  %134 = load i64, i64* %34, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 1
  store i16 %137, i16* %19, align 2
  %138 = add i64 %134, 2
  store i64 %138, i64* %34, align 8
  %139 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %140 = bitcast %"class.base::RefCountedMemory"* %139 to i8* (%"class.base::RefCountedMemory"*)***
  %141 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %140, align 8
  %142 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %141, align 8
  %143 = tail call i8* %142(%"class.base::RefCountedMemory"* %139) #11
  %144 = load i64, i64* %34, align 8
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  %146 = bitcast i8* %145 to i16*
  %147 = load i16, i16* %146, align 1
  store i16 %147, i16* %21, align 2
  %148 = add i64 %144, 2
  store i64 %148, i64* %34, align 8
  %149 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %150 = bitcast %"class.base::RefCountedMemory"* %149 to i8* (%"class.base::RefCountedMemory"*)***
  %151 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %150, align 8
  %152 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %151, align 8
  %153 = tail call i8* %152(%"class.base::RefCountedMemory"* %149) #11
  %154 = load i64, i64* %34, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = add i64 %154, 1
  store i64 %157, i64* %34, align 8
  %158 = zext i8 %156 to i32
  store i32 %158, i32* %23, align 4
  %159 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %160 = bitcast %"class.base::RefCountedMemory"* %159 to i8* (%"class.base::RefCountedMemory"*)***
  %161 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %160, align 8
  %162 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %161, align 8
  %163 = tail call i8* %162(%"class.base::RefCountedMemory"* %159) #11
  %164 = load i64, i64* %34, align 8
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = add i64 %164, 1
  store i64 %167, i64* %34, align 8
  %168 = zext i8 %166 to i32
  store i32 %168, i32* %25, align 4
  %169 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %170 = bitcast %"class.base::RefCountedMemory"* %169 to i8* (%"class.base::RefCountedMemory"*)***
  %171 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %170, align 8
  %172 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %171, align 8
  %173 = tail call i8* %172(%"class.base::RefCountedMemory"* %169) #11
  %174 = load i64, i64* %34, align 8
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = add i64 %174, 1
  store i64 %177, i64* %34, align 8
  %178 = zext i8 %176 to i32
  store i32 %178, i32* %27, align 4
  %179 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %180 = bitcast %"class.base::RefCountedMemory"* %179 to i8* (%"class.base::RefCountedMemory"*)***
  %181 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %180, align 8
  %182 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %181, align 8
  %183 = tail call i8* %182(%"class.base::RefCountedMemory"* %179) #11
  %184 = load i64, i64* %34, align 8
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = add i64 %184, 1
  store i64 %187, i64* %34, align 8
  %188 = zext i8 %186 to i32
  store i32 %188, i32* %29, align 4
  %189 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %190 = bitcast %"class.base::RefCountedMemory"* %189 to i8* (%"class.base::RefCountedMemory"*)***
  %191 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %190, align 8
  %192 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %191, align 8
  %193 = tail call i8* %192(%"class.base::RefCountedMemory"* %189) #11
  %194 = load i64, i64* %34, align 8
  %195 = getelementptr inbounds i8, i8* %193, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  store i32 %197, i32* %31, align 4
  %198 = add i64 %194, 2
  store i64 %198, i64* %34, align 8
  %199 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %35, align 8
  %200 = bitcast %"class.base::RefCountedMemory"* %199 to i8* (%"class.base::RefCountedMemory"*)***
  %201 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %200, align 8
  %202 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %201, align 8
  %203 = tail call i8* %202(%"class.base::RefCountedMemory"* %199) #11
  %204 = load i64, i64* %34, align 8
  %205 = getelementptr inbounds i8, i8* %203, i64 %204
  %206 = bitcast i8* %205 to i16*
  %207 = load i16, i16* %206, align 1
  %208 = zext i16 %207 to i32
  store i32 %208, i32* %33, align 4
  %209 = add i64 %204, 8
  %210 = sub i64 0, %204
  %211 = and i64 %210, 3
  %212 = add i64 %209, %211
  store i64 %212, i64* %34, align 8
  ret %"struct.x11::Xkb::GetStateReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14LatchLockStateERKNS0_21LatchLockStateRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::LatchLockStateRequest"* dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca i8, align 1
  %21 = alloca %"class.x11::WriteBuffer", align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %29 = load %"class.x11::Connection"*, %"class.x11::Connection"** %28, align 8
  %30 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %29) #11
  br i1 %30, label %31, label %146

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %146, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.x11::WriteBuffer"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %21) #11
  %37 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 2
  %38 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 4
  %39 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  %40 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %41 = load i8, i8* %40, align 1
  store i8 %41, i8* %22, align 1
  %42 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %21, i64 0, i32 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %22) #11
  %46 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %21, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 5, i8* %23, align 1
  %49 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %50, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %52 = load i64, i64* %46, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  store i8 0, i8* %16, align 1
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* nonnull dereferenceable(1) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %57 = load i64, i64* %46, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %55, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* nonnull dereferenceable(1) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %60 = load i64, i64* %46, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %46, align 8
  %62 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 3
  %64 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 5
  %65 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %1, i64 0, i32 7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %66 = bitcast %"struct.x11::Xkb::LatchLockStateRequest"* %1 to i8*
  %67 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %68, align 8
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %66) #11
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %72 = load i64, i64* %46, align 8
  %73 = add i64 %72, 2
  store i64 %73, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  %74 = load i32, i32* %62, align 4
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %24, align 1
  %76 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %77, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  %79 = load i64, i64* %46, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #11
  %81 = load i32, i32* %37, align 4
  %82 = trunc i32 %81 to i8
  store i8 %82, i8* %25, align 1
  %83 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %84, align 8
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  %86 = load i64, i64* %46, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %46, align 8
  %88 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %89, align 8
  %90 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  %91 = load i64, i64* %46, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #11
  %93 = load i32, i32* %38, align 4
  %94 = trunc i32 %93 to i8
  store i8 %94, i8* %26, align 1
  %95 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %96, align 8
  %97 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  %98 = load i64, i64* %46, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #11
  %100 = load i32, i32* %64, align 4
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %27, align 1
  %102 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %103, align 8
  %104 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  %105 = load i64, i64* %46, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  %107 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %108 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %108, align 8
  %109 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  %110 = load i64, i64* %46, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %112 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %113 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %113, align 8
  %114 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %115 = load i64, i64* %46, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %117 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  %118 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %118, align 8
  %119 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  %120 = load i64, i64* %46, align 8
  %121 = add i64 %120, 1
  store i64 %121, i64* %46, align 8
  %122 = bitcast i16* %65 to i8*
  %123 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %124 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %124, align 8
  %125 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %122) #11
  %126 = getelementptr inbounds i8, i8* %122, i64 1
  %127 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %126) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  %128 = load i64, i64* %46, align 8
  %129 = add i64 %128, 2
  store i64 %129, i64* %46, align 8
  %130 = sub i64 2, %128
  %131 = and i64 %130, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #11
  store i8 0, i8* %20, align 1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %35
  %134 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  %135 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  br label %136

136:                                              ; preds = %136, %133
  %137 = phi i64 [ 0, %133 ], [ %141, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #11
  store %"class.std::__1::vector.271"* %42, %"class.std::__1::vector.271"** %135, align 8
  %138 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #11
  %139 = load i64, i64* %46, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %46, align 8
  %141 = add nuw nsw i64 %137, 1
  %142 = icmp eq i64 %141, %131
  br i1 %142, label %143, label %136

143:                                              ; preds = %136, %35
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #11
  %144 = load %"class.x11::Connection"*, %"class.x11::Connection"** %28, align 8
  %145 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %144, %"class.x11::WriteBuffer"* nonnull %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #11
  br label %146

146:                                              ; preds = %2, %31, %143
  %147 = phi %"class.x11::Connection::FutureImpl"* [ %145, %143 ], [ null, %31 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %147
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14LatchLockStateERKNS0_10DeviceSpecERKNS_7ModMaskES6_RKhRKNS0_5GroupES6_S8_RKt(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %10 = alloca %"struct.x11::Xkb::LatchLockStateRequest", align 4
  %11 = bitcast %"struct.x11::Xkb::LatchLockStateRequest"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 0
  %13 = load i16, i16* %1, align 2
  store i16 %13, i16* %12, align 4
  %14 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 1
  %15 = load i32, i32* %2, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 2
  %17 = load i32, i32* %3, align 4
  store i32 %17, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 3
  %19 = load i8, i8* %4, align 1
  store i8 %19, i8* %18, align 4
  %20 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 4
  %21 = load i32, i32* %5, align 4
  store i32 %21, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 5
  %23 = load i32, i32* %6, align 4
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 6
  %25 = load i8, i8* %7, align 1
  store i8 %25, i8* %24, align 4
  %26 = getelementptr inbounds %"struct.x11::Xkb::LatchLockStateRequest", %"struct.x11::Xkb::LatchLockStateRequest"* %10, i64 0, i32 7
  %27 = load i16, i16* %8, align 2
  store i16 %27, i16* %26, align 2
  %28 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14LatchLockStateERKNS0_21LatchLockStateRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::LatchLockStateRequest"* nonnull dereferenceable(28) %10)
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %11) #11
  ret %"class.x11::Connection::FutureImpl"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11GetControlsERKNS0_18GetControlsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetControlsRequest"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.x11::WriteBuffer", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %16) #11
  br i1 %17, label %18, label %78

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.x11::WriteBuffer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %24 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %13, align 1
  %26 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 1
  %27 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %28, align 8
  %29 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %13) #11
  %30 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 6, i8* %14, align 1
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %34, align 8
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %43 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %44 = load i64, i64* %30, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  %46 = bitcast %"struct.x11::Xkb::GetControlsRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %46) #11
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %52 = load i64, i64* %30, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %57 = load i64, i64* %30, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %60 = load i64, i64* %30, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %62 = and i64 %60, 3
  %63 = xor i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %22
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %30, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %30, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  br label %78

78:                                               ; preds = %2, %18, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %18 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11GetControlsERKNS0_10DeviceSpecE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Xkb::GetControlsRequest", align 2
  %4 = bitcast %"struct.x11::Xkb::GetControlsRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.x11::Xkb::GetControlsRequest", %"struct.x11::Xkb::GetControlsRequest"* %3, i64 0, i32 0
  %6 = load i16, i16* %1, align 2
  store i16 %6, i16* %5, align 2
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11GetControlsERKNS0_18GetControlsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetControlsRequest"* nonnull dereferenceable(2) %3)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #11
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetControlsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb16GetControlsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 112) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 112, i1 false) #11
  %3 = getelementptr inbounds i8, i8* %2, i64 2
  %4 = bitcast i8* %3 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = getelementptr inbounds i8, i8* %2, i64 5
  %7 = getelementptr inbounds i8, i8* %2, i64 6
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds i8, i8* %2, i64 20
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %2, i64 24
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %2, i64 28
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds i8, i8* %2, i64 32
  %21 = bitcast i8* %20 to i16*
  %22 = getelementptr inbounds i8, i8* %2, i64 34
  %23 = bitcast i8* %22 to i16*
  %24 = getelementptr inbounds i8, i8* %2, i64 36
  %25 = bitcast i8* %24 to i16*
  %26 = getelementptr inbounds i8, i8* %2, i64 38
  %27 = bitcast i8* %26 to i16*
  %28 = getelementptr inbounds i8, i8* %2, i64 40
  %29 = bitcast i8* %28 to i16*
  %30 = getelementptr inbounds i8, i8* %2, i64 42
  %31 = bitcast i8* %30 to i16*
  %32 = getelementptr inbounds i8, i8* %2, i64 44
  %33 = bitcast i8* %32 to i16*
  %34 = getelementptr inbounds i8, i8* %2, i64 46
  %35 = bitcast i8* %34 to i16*
  %36 = getelementptr inbounds i8, i8* %2, i64 48
  %37 = bitcast i8* %36 to i16*
  %38 = getelementptr inbounds i8, i8* %2, i64 52
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds i8, i8* %2, i64 56
  %41 = bitcast i8* %40 to i16*
  %42 = getelementptr inbounds i8, i8* %2, i64 60
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds i8, i8* %2, i64 64
  %45 = bitcast i8* %44 to i32*
  %46 = getelementptr inbounds i8, i8* %2, i64 68
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %2, i64 72
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds i8, i8* %2, i64 76
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = bitcast %"class.base::RefCountedMemory"* %54 to i8* (%"class.base::RefCountedMemory"*)***
  %56 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %55, align 8
  %57 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %56, align 8
  %58 = tail call i8* %57(%"class.base::RefCountedMemory"* %54) #11
  %59 = load i64, i64* %52, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %52, align 8
  %61 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %62 = bitcast %"class.base::RefCountedMemory"* %61 to i8* (%"class.base::RefCountedMemory"*)***
  %63 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %63, align 8
  %65 = tail call i8* %64(%"class.base::RefCountedMemory"* %61) #11
  %66 = load i64, i64* %52, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = load i8, i8* %67, align 1
  store i8 %68, i8* %2, align 1
  %69 = add i64 %66, 1
  store i64 %69, i64* %52, align 8
  %70 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %71 = bitcast %"class.base::RefCountedMemory"* %70 to i8* (%"class.base::RefCountedMemory"*)***
  %72 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %71, align 8
  %73 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %72, align 8
  %74 = tail call i8* %73(%"class.base::RefCountedMemory"* %70) #11
  %75 = load i64, i64* %52, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 1
  store i16 %78, i16* %4, align 2
  %79 = add i64 %75, 2
  store i64 %79, i64* %52, align 8
  %80 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %81 = bitcast %"class.base::RefCountedMemory"* %80 to i8* (%"class.base::RefCountedMemory"*)***
  %82 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %81, align 8
  %83 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %82, align 8
  %84 = tail call i8* %83(%"class.base::RefCountedMemory"* %80) #11
  %85 = load i64, i64* %52, align 8
  %86 = add i64 %85, 4
  store i64 %86, i64* %52, align 8
  %87 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %88 = bitcast %"class.base::RefCountedMemory"* %87 to i8* (%"class.base::RefCountedMemory"*)***
  %89 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %88, align 8
  %90 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %89, align 8
  %91 = tail call i8* %90(%"class.base::RefCountedMemory"* %87) #11
  %92 = load i64, i64* %52, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = load i8, i8* %93, align 1
  store i8 %94, i8* %5, align 1
  %95 = add i64 %92, 1
  store i64 %95, i64* %52, align 8
  %96 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %97 = bitcast %"class.base::RefCountedMemory"* %96 to i8* (%"class.base::RefCountedMemory"*)***
  %98 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %97, align 8
  %99 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %98, align 8
  %100 = tail call i8* %99(%"class.base::RefCountedMemory"* %96) #11
  %101 = load i64, i64* %52, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  %103 = load i8, i8* %102, align 1
  store i8 %103, i8* %6, align 1
  %104 = add i64 %101, 1
  store i64 %104, i64* %52, align 8
  %105 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %106 = bitcast %"class.base::RefCountedMemory"* %105 to i8* (%"class.base::RefCountedMemory"*)***
  %107 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %106, align 8
  %108 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %107, align 8
  %109 = tail call i8* %108(%"class.base::RefCountedMemory"* %105) #11
  %110 = load i64, i64* %52, align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %7, align 1
  %113 = add i64 %110, 1
  store i64 %113, i64* %52, align 8
  %114 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %115 = bitcast %"class.base::RefCountedMemory"* %114 to i8* (%"class.base::RefCountedMemory"*)***
  %116 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %115, align 8
  %117 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %116, align 8
  %118 = tail call i8* %117(%"class.base::RefCountedMemory"* %114) #11
  %119 = load i64, i64* %52, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = add i64 %119, 1
  store i64 %122, i64* %52, align 8
  %123 = zext i8 %121 to i32
  store i32 %123, i32* %9, align 4
  %124 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %125 = bitcast %"class.base::RefCountedMemory"* %124 to i8* (%"class.base::RefCountedMemory"*)***
  %126 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %125, align 8
  %127 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %126, align 8
  %128 = tail call i8* %127(%"class.base::RefCountedMemory"* %124) #11
  %129 = load i64, i64* %52, align 8
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = add i64 %129, 1
  store i64 %132, i64* %52, align 8
  %133 = zext i8 %131 to i32
  store i32 %133, i32* %11, align 4
  %134 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %135 = bitcast %"class.base::RefCountedMemory"* %134 to i8* (%"class.base::RefCountedMemory"*)***
  %136 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %135, align 8
  %137 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %136, align 8
  %138 = tail call i8* %137(%"class.base::RefCountedMemory"* %134) #11
  %139 = load i64, i64* %52, align 8
  %140 = getelementptr inbounds i8, i8* %138, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = add i64 %139, 1
  store i64 %142, i64* %52, align 8
  %143 = zext i8 %141 to i32
  store i32 %143, i32* %13, align 4
  %144 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %145 = bitcast %"class.base::RefCountedMemory"* %144 to i8* (%"class.base::RefCountedMemory"*)***
  %146 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %145, align 8
  %147 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %146, align 8
  %148 = tail call i8* %147(%"class.base::RefCountedMemory"* %144) #11
  %149 = load i64, i64* %52, align 8
  %150 = getelementptr inbounds i8, i8* %148, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  store i32 %152, i32* %15, align 4
  %153 = add i64 %149, 2
  store i64 %153, i64* %52, align 8
  %154 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %155 = bitcast %"class.base::RefCountedMemory"* %154 to i8* (%"class.base::RefCountedMemory"*)***
  %156 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %155, align 8
  %157 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %156, align 8
  %158 = tail call i8* %157(%"class.base::RefCountedMemory"* %154) #11
  %159 = load i64, i64* %52, align 8
  %160 = getelementptr inbounds i8, i8* %158, i64 %159
  %161 = bitcast i8* %160 to i16*
  %162 = load i16, i16* %161, align 1
  %163 = add i64 %159, 2
  store i64 %163, i64* %52, align 8
  %164 = zext i16 %162 to i32
  store i32 %164, i32* %17, align 4
  %165 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %166 = bitcast %"class.base::RefCountedMemory"* %165 to i8* (%"class.base::RefCountedMemory"*)***
  %167 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %166, align 8
  %168 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %167, align 8
  %169 = tail call i8* %168(%"class.base::RefCountedMemory"* %165) #11
  %170 = load i64, i64* %52, align 8
  %171 = getelementptr inbounds i8, i8* %169, i64 %170
  %172 = bitcast i8* %171 to i16*
  %173 = load i16, i16* %172, align 1
  %174 = add i64 %170, 2
  store i64 %174, i64* %52, align 8
  %175 = zext i16 %173 to i32
  store i32 %175, i32* %19, align 4
  %176 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %177 = bitcast %"class.base::RefCountedMemory"* %176 to i8* (%"class.base::RefCountedMemory"*)***
  %178 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %177, align 8
  %179 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %178, align 8
  %180 = tail call i8* %179(%"class.base::RefCountedMemory"* %176) #11
  %181 = load i64, i64* %52, align 8
  %182 = getelementptr inbounds i8, i8* %180, i64 %181
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 1
  store i16 %184, i16* %21, align 2
  %185 = add i64 %181, 2
  store i64 %185, i64* %52, align 8
  %186 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %187 = bitcast %"class.base::RefCountedMemory"* %186 to i8* (%"class.base::RefCountedMemory"*)***
  %188 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %187, align 8
  %189 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %188, align 8
  %190 = tail call i8* %189(%"class.base::RefCountedMemory"* %186) #11
  %191 = load i64, i64* %52, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 %191
  %193 = bitcast i8* %192 to i16*
  %194 = load i16, i16* %193, align 1
  store i16 %194, i16* %23, align 2
  %195 = add i64 %191, 2
  store i64 %195, i64* %52, align 8
  %196 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %197 = bitcast %"class.base::RefCountedMemory"* %196 to i8* (%"class.base::RefCountedMemory"*)***
  %198 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %197, align 8
  %199 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %198, align 8
  %200 = tail call i8* %199(%"class.base::RefCountedMemory"* %196) #11
  %201 = load i64, i64* %52, align 8
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  %203 = bitcast i8* %202 to i16*
  %204 = load i16, i16* %203, align 1
  store i16 %204, i16* %25, align 2
  %205 = add i64 %201, 2
  store i64 %205, i64* %52, align 8
  %206 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %207 = bitcast %"class.base::RefCountedMemory"* %206 to i8* (%"class.base::RefCountedMemory"*)***
  %208 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %207, align 8
  %209 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %208, align 8
  %210 = tail call i8* %209(%"class.base::RefCountedMemory"* %206) #11
  %211 = load i64, i64* %52, align 8
  %212 = getelementptr inbounds i8, i8* %210, i64 %211
  %213 = bitcast i8* %212 to i16*
  %214 = load i16, i16* %213, align 1
  store i16 %214, i16* %27, align 2
  %215 = add i64 %211, 2
  store i64 %215, i64* %52, align 8
  %216 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %217 = bitcast %"class.base::RefCountedMemory"* %216 to i8* (%"class.base::RefCountedMemory"*)***
  %218 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %217, align 8
  %219 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %218, align 8
  %220 = tail call i8* %219(%"class.base::RefCountedMemory"* %216) #11
  %221 = load i64, i64* %52, align 8
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  %223 = bitcast i8* %222 to i16*
  %224 = load i16, i16* %223, align 1
  store i16 %224, i16* %29, align 2
  %225 = add i64 %221, 2
  store i64 %225, i64* %52, align 8
  %226 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %227 = bitcast %"class.base::RefCountedMemory"* %226 to i8* (%"class.base::RefCountedMemory"*)***
  %228 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %227, align 8
  %229 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %228, align 8
  %230 = tail call i8* %229(%"class.base::RefCountedMemory"* %226) #11
  %231 = load i64, i64* %52, align 8
  %232 = getelementptr inbounds i8, i8* %230, i64 %231
  %233 = bitcast i8* %232 to i16*
  %234 = load i16, i16* %233, align 1
  store i16 %234, i16* %31, align 2
  %235 = add i64 %231, 2
  store i64 %235, i64* %52, align 8
  %236 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %237 = bitcast %"class.base::RefCountedMemory"* %236 to i8* (%"class.base::RefCountedMemory"*)***
  %238 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %237, align 8
  %239 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %238, align 8
  %240 = tail call i8* %239(%"class.base::RefCountedMemory"* %236) #11
  %241 = load i64, i64* %52, align 8
  %242 = getelementptr inbounds i8, i8* %240, i64 %241
  %243 = bitcast i8* %242 to i16*
  %244 = load i16, i16* %243, align 1
  store i16 %244, i16* %33, align 2
  %245 = add i64 %241, 2
  store i64 %245, i64* %52, align 8
  %246 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %247 = bitcast %"class.base::RefCountedMemory"* %246 to i8* (%"class.base::RefCountedMemory"*)***
  %248 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %247, align 8
  %249 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %248, align 8
  %250 = tail call i8* %249(%"class.base::RefCountedMemory"* %246) #11
  %251 = load i64, i64* %52, align 8
  %252 = getelementptr inbounds i8, i8* %250, i64 %251
  %253 = bitcast i8* %252 to i16*
  %254 = load i16, i16* %253, align 1
  store i16 %254, i16* %35, align 2
  %255 = add i64 %251, 2
  store i64 %255, i64* %52, align 8
  %256 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %257 = bitcast %"class.base::RefCountedMemory"* %256 to i8* (%"class.base::RefCountedMemory"*)***
  %258 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %257, align 8
  %259 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %258, align 8
  %260 = tail call i8* %259(%"class.base::RefCountedMemory"* %256) #11
  %261 = load i64, i64* %52, align 8
  %262 = getelementptr inbounds i8, i8* %260, i64 %261
  %263 = bitcast i8* %262 to i16*
  %264 = load i16, i16* %263, align 1
  store i16 %264, i16* %37, align 2
  %265 = add i64 %261, 2
  store i64 %265, i64* %52, align 8
  %266 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %267 = bitcast %"class.base::RefCountedMemory"* %266 to i8* (%"class.base::RefCountedMemory"*)***
  %268 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %267, align 8
  %269 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %268, align 8
  %270 = tail call i8* %269(%"class.base::RefCountedMemory"* %266) #11
  %271 = load i64, i64* %52, align 8
  %272 = getelementptr inbounds i8, i8* %270, i64 %271
  %273 = bitcast i8* %272 to i16*
  %274 = load i16, i16* %273, align 1
  %275 = add i64 %271, 2
  store i64 %275, i64* %52, align 8
  %276 = zext i16 %274 to i32
  store i32 %276, i32* %39, align 4
  %277 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %278 = bitcast %"class.base::RefCountedMemory"* %277 to i8* (%"class.base::RefCountedMemory"*)***
  %279 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %278, align 8
  %280 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %279, align 8
  %281 = tail call i8* %280(%"class.base::RefCountedMemory"* %277) #11
  %282 = load i64, i64* %52, align 8
  %283 = getelementptr inbounds i8, i8* %281, i64 %282
  %284 = bitcast i8* %283 to i16*
  %285 = load i16, i16* %284, align 1
  store i16 %285, i16* %41, align 2
  %286 = add i64 %282, 2
  store i64 %286, i64* %52, align 8
  %287 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %288 = bitcast %"class.base::RefCountedMemory"* %287 to i8* (%"class.base::RefCountedMemory"*)***
  %289 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %288, align 8
  %290 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %289, align 8
  %291 = tail call i8* %290(%"class.base::RefCountedMemory"* %287) #11
  %292 = load i64, i64* %52, align 8
  %293 = getelementptr inbounds i8, i8* %291, i64 %292
  %294 = bitcast i8* %293 to i16*
  %295 = load i16, i16* %294, align 1
  %296 = add i64 %292, 2
  store i64 %296, i64* %52, align 8
  %297 = zext i16 %295 to i32
  store i32 %297, i32* %43, align 4
  %298 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %299 = bitcast %"class.base::RefCountedMemory"* %298 to i8* (%"class.base::RefCountedMemory"*)***
  %300 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %299, align 8
  %301 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %300, align 8
  %302 = tail call i8* %301(%"class.base::RefCountedMemory"* %298) #11
  %303 = load i64, i64* %52, align 8
  %304 = getelementptr inbounds i8, i8* %302, i64 %303
  %305 = bitcast i8* %304 to i16*
  %306 = load i16, i16* %305, align 1
  %307 = zext i16 %306 to i32
  store i32 %307, i32* %45, align 4
  %308 = add i64 %303, 4
  store i64 %308, i64* %52, align 8
  %309 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %310 = bitcast %"class.base::RefCountedMemory"* %309 to i8* (%"class.base::RefCountedMemory"*)***
  %311 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %310, align 8
  %312 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %311, align 8
  %313 = tail call i8* %312(%"class.base::RefCountedMemory"* %309) #11
  %314 = load i64, i64* %52, align 8
  %315 = getelementptr inbounds i8, i8* %313, i64 %314
  %316 = bitcast i8* %315 to i32*
  %317 = load i32, i32* %316, align 1
  %318 = add i64 %314, 4
  store i64 %318, i64* %52, align 8
  store i32 %317, i32* %47, align 4
  %319 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %320 = bitcast %"class.base::RefCountedMemory"* %319 to i8* (%"class.base::RefCountedMemory"*)***
  %321 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %320, align 8
  %322 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %321, align 8
  %323 = tail call i8* %322(%"class.base::RefCountedMemory"* %319) #11
  %324 = load i64, i64* %52, align 8
  %325 = getelementptr inbounds i8, i8* %323, i64 %324
  %326 = bitcast i8* %325 to i32*
  %327 = load i32, i32* %326, align 1
  %328 = add i64 %324, 4
  store i64 %328, i64* %52, align 8
  store i32 %327, i32* %49, align 4
  %329 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %330 = bitcast %"class.base::RefCountedMemory"* %329 to i8* (%"class.base::RefCountedMemory"*)***
  %331 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %330, align 8
  %332 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %331, align 8
  %333 = tail call i8* %332(%"class.base::RefCountedMemory"* %329) #11
  %334 = load i64, i64* %52, align 8
  %335 = getelementptr inbounds i8, i8* %333, i64 %334
  %336 = bitcast i8* %335 to i32*
  %337 = load i32, i32* %336, align 1
  %338 = add i64 %334, 4
  store i64 %338, i64* %52, align 8
  store i32 %337, i32* %51, align 4
  br label %343

339:                                              ; preds = %343
  %340 = bitcast i8* %2 to %"struct.x11::Xkb::GetControlsReply"*
  %341 = or i64 %351, -4
  %342 = sub i64 %351, %341
  store i64 %342, i64* %52, align 8
  ret %"struct.x11::Xkb::GetControlsReply"* %340

343:                                              ; preds = %1, %343
  %344 = phi i64 [ 80, %1 ], [ %355, %343 ]
  %345 = getelementptr inbounds i8, i8* %2, i64 %344
  %346 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %347 = bitcast %"class.base::RefCountedMemory"* %346 to i8* (%"class.base::RefCountedMemory"*)***
  %348 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %347, align 8
  %349 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %348, align 8
  %350 = tail call i8* %349(%"class.base::RefCountedMemory"* %346) #11
  %351 = load i64, i64* %52, align 8
  %352 = getelementptr inbounds i8, i8* %350, i64 %351
  %353 = load i8, i8* %352, align 1
  store i8 %353, i8* %345, align 1
  %354 = add i64 %351, 1
  store i64 %354, i64* %52, align 8
  %355 = add nuw nsw i64 %344, 1
  %356 = icmp eq i64 %355, 112
  br i1 %356, label %339, label %343
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11SetControlsERKNS0_18SetControlsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetControlsRequest"* dereferenceable(124)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca i8, align 1
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca %"class.std::__1::back_insert_iterator", align 8
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.std::__1::back_insert_iterator", align 8
  %30 = alloca %"class.std::__1::back_insert_iterator", align 8
  %31 = alloca %"class.std::__1::back_insert_iterator", align 8
  %32 = alloca %"class.std::__1::back_insert_iterator", align 8
  %33 = alloca %"class.std::__1::back_insert_iterator", align 8
  %34 = alloca %"class.std::__1::back_insert_iterator", align 8
  %35 = alloca i8, align 1
  %36 = alloca %"class.std::__1::back_insert_iterator", align 8
  %37 = alloca %"class.std::__1::back_insert_iterator", align 8
  %38 = alloca %"class.std::__1::back_insert_iterator", align 8
  %39 = alloca i8, align 1
  %40 = alloca %"class.std::__1::back_insert_iterator", align 8
  %41 = alloca %"class.x11::WriteBuffer", align 8
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i8, align 1
  %45 = alloca i8, align 1
  %46 = alloca i8, align 1
  %47 = alloca i8, align 1
  %48 = alloca i16, align 2
  %49 = alloca i16, align 2
  %50 = alloca i16, align 2
  %51 = alloca i16, align 2
  %52 = alloca i16, align 2
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i16, align 2
  %59 = alloca i16, align 2
  %60 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %61 = load %"class.x11::Connection"*, %"class.x11::Connection"** %60, align 8
  %62 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %61) #11
  br i1 %62, label %63, label %416

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %416, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.x11::WriteBuffer"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %68) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %41) #11
  %69 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 3
  %71 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 5
  %72 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 7
  %73 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 9
  %74 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 11
  %75 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 13
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 15
  %77 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 17
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 19
  %79 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 21
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 23
  %81 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 25
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 27
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #11
  %83 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %42, align 1
  %85 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %41, i64 0, i32 1
  %86 = bitcast %"class.std::__1::back_insert_iterator"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  %87 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %37, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %87, align 8
  %88 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %37, i8* nonnull dereferenceable(1) %42) #11
  %89 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %41, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #11
  store i8 7, i8* %43, align 1
  %92 = bitcast %"class.std::__1::back_insert_iterator"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %36, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %93, align 8
  %94 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %36, i8* nonnull dereferenceable(1) %43) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %95 = load i64, i64* %89, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #11
  store i8 0, i8* %35, align 1
  %97 = bitcast %"class.std::__1::back_insert_iterator"* %34 to i8*
  %98 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %34, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %98, align 8
  %99 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* nonnull dereferenceable(1) %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %100 = load i64, i64* %89, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %98, align 8
  %102 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* nonnull dereferenceable(1) %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %103 = load i64, i64* %89, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %89, align 8
  %105 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 4
  %107 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 6
  %108 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 8
  %109 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 10
  %110 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 12
  %111 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 14
  %112 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 16
  %113 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 18
  %114 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 20
  %115 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 22
  %116 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 24
  %117 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 26
  %118 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 28
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #11
  %119 = bitcast %"struct.x11::Xkb::SetControlsRequest"* %1 to i8*
  %120 = bitcast %"class.std::__1::back_insert_iterator"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %33, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %121, align 8
  %122 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %119) #11
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  %124 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %125 = load i64, i64* %89, align 8
  %126 = add i64 %125, 2
  store i64 %126, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #11
  %127 = load i32, i32* %69, align 4
  %128 = trunc i32 %127 to i8
  store i8 %128, i8* %44, align 1
  %129 = bitcast %"class.std::__1::back_insert_iterator"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #11
  %130 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %32, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %130, align 8
  %131 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* nonnull dereferenceable(1) %44) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #11
  %132 = load i64, i64* %89, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #11
  %134 = load i32, i32* %105, align 4
  %135 = trunc i32 %134 to i8
  store i8 %135, i8* %45, align 1
  %136 = bitcast %"class.std::__1::back_insert_iterator"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  %137 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %31, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %137, align 8
  %138 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* nonnull dereferenceable(1) %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  %139 = load i64, i64* %89, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #11
  %141 = load i32, i32* %70, align 4
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %46, align 1
  %143 = bitcast %"class.std::__1::back_insert_iterator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #11
  %144 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %30, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %144, align 8
  %145 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* nonnull dereferenceable(1) %46) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #11
  %146 = load i64, i64* %89, align 8
  %147 = add i64 %146, 1
  store i64 %147, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #11
  %148 = load i32, i32* %106, align 4
  %149 = trunc i32 %148 to i8
  store i8 %149, i8* %47, align 1
  %150 = bitcast %"class.std::__1::back_insert_iterator"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %29, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %151, align 8
  %152 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* nonnull dereferenceable(1) %47) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  %153 = load i64, i64* %89, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %89, align 8
  %155 = bitcast i16* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %155) #11
  %156 = load i32, i32* %71, align 4
  %157 = trunc i32 %156 to i16
  store i16 %157, i16* %48, align 2
  %158 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %159, align 8
  %160 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* nonnull dereferenceable(1) %155) #11
  %161 = getelementptr inbounds i8, i8* %155, i64 1
  %162 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %161) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  %163 = load i64, i64* %89, align 8
  %164 = add i64 %163, 2
  store i64 %164, i64* %89, align 8
  %165 = bitcast i16* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %165) #11
  %166 = load i32, i32* %107, align 4
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %49, align 2
  %168 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #11
  %169 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %169, align 8
  %170 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* nonnull dereferenceable(1) %165) #11
  %171 = getelementptr inbounds i8, i8* %165, i64 1
  %172 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %171) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #11
  %173 = load i64, i64* %89, align 8
  %174 = add i64 %173, 2
  store i64 %174, i64* %89, align 8
  %175 = bitcast i16* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %175) #11
  %176 = load i32, i32* %72, align 4
  %177 = trunc i32 %176 to i16
  store i16 %177, i16* %50, align 2
  %178 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #11
  %179 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %179, align 8
  %180 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %175) #11
  %181 = getelementptr inbounds i8, i8* %175, i64 1
  %182 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* dereferenceable(1) %181) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #11
  %183 = load i64, i64* %89, align 8
  %184 = add i64 %183, 2
  store i64 %184, i64* %89, align 8
  %185 = bitcast i16* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %185) #11
  %186 = load i32, i32* %108, align 4
  %187 = trunc i32 %186 to i16
  store i16 %187, i16* %51, align 2
  %188 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #11
  %189 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %189, align 8
  %190 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %185) #11
  %191 = getelementptr inbounds i8, i8* %185, i64 1
  %192 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* dereferenceable(1) %191) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #11
  %193 = load i64, i64* %89, align 8
  %194 = add i64 %193, 2
  store i64 %194, i64* %89, align 8
  %195 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #11
  %196 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %196, align 8
  %197 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* dereferenceable(1) %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #11
  %198 = load i64, i64* %89, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %89, align 8
  %200 = bitcast %"class.std::__1::back_insert_iterator"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #11
  %201 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %23, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %201, align 8
  %202 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %109) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #11
  %203 = load i64, i64* %89, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %89, align 8
  %205 = bitcast i16* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %205) #11
  %206 = load i32, i32* %74, align 4
  %207 = trunc i32 %206 to i16
  store i16 %207, i16* %52, align 2
  %208 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %209, align 8
  %210 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %205) #11
  %211 = getelementptr inbounds i8, i8* %205, i64 1
  %212 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %211) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #11
  %213 = load i64, i64* %89, align 8
  %214 = add i64 %213, 2
  store i64 %214, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #11
  store i8 0, i8* %21, align 1
  %215 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  %216 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %216, align 8
  %217 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  %218 = load i64, i64* %89, align 8
  %219 = add i64 %218, 1
  store i64 %219, i64* %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %216, align 8
  %220 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  %221 = load i64, i64* %89, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #11
  %223 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #11
  %224 = load i32, i32* %110, align 4
  store i32 %224, i32* %53, align 4
  %225 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #11
  %226 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %226, align 8
  %227 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %223) #11
  %228 = getelementptr inbounds i8, i8* %223, i64 1
  %229 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %228) #11
  %230 = getelementptr inbounds i8, i8* %223, i64 2
  %231 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %230) #11
  %232 = getelementptr inbounds i8, i8* %223, i64 3
  %233 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %232) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #11
  %234 = load i64, i64* %89, align 8
  %235 = add i64 %234, 4
  store i64 %235, i64* %89, align 8
  %236 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %236) #11
  %237 = load i32, i32* %75, align 4
  store i32 %237, i32* %54, align 4
  %238 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #11
  %239 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %239, align 8
  %240 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %236) #11
  %241 = getelementptr inbounds i8, i8* %236, i64 1
  %242 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %241) #11
  %243 = getelementptr inbounds i8, i8* %236, i64 2
  %244 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %243) #11
  %245 = getelementptr inbounds i8, i8* %236, i64 3
  %246 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %245) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #11
  %247 = load i64, i64* %89, align 8
  %248 = add i64 %247, 4
  store i64 %248, i64* %89, align 8
  %249 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #11
  %250 = load i32, i32* %111, align 4
  store i32 %250, i32* %55, align 4
  %251 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #11
  %252 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %252, align 8
  %253 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %249) #11
  %254 = getelementptr inbounds i8, i8* %249, i64 1
  %255 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %254) #11
  %256 = getelementptr inbounds i8, i8* %249, i64 2
  %257 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %256) #11
  %258 = getelementptr inbounds i8, i8* %249, i64 3
  %259 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %258) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #11
  %260 = load i64, i64* %89, align 8
  %261 = add i64 %260, 4
  store i64 %261, i64* %89, align 8
  %262 = bitcast i16* %76 to i8*
  %263 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #11
  %264 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %264, align 8
  %265 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %262) #11
  %266 = getelementptr inbounds i8, i8* %262, i64 1
  %267 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %266) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #11
  %268 = load i64, i64* %89, align 8
  %269 = add i64 %268, 2
  store i64 %269, i64* %89, align 8
  %270 = bitcast i16* %112 to i8*
  %271 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #11
  %272 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %272, align 8
  %273 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %270) #11
  %274 = getelementptr inbounds i8, i8* %270, i64 1
  %275 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %274) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #11
  %276 = load i64, i64* %89, align 8
  %277 = add i64 %276, 2
  store i64 %277, i64* %89, align 8
  %278 = bitcast i16* %77 to i8*
  %279 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #11
  %280 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %280, align 8
  %281 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %278) #11
  %282 = getelementptr inbounds i8, i8* %278, i64 1
  %283 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %282) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #11
  %284 = load i64, i64* %89, align 8
  %285 = add i64 %284, 2
  store i64 %285, i64* %89, align 8
  %286 = bitcast i16* %113 to i8*
  %287 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #11
  %288 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %288, align 8
  %289 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %286) #11
  %290 = getelementptr inbounds i8, i8* %286, i64 1
  %291 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %290) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #11
  %292 = load i64, i64* %89, align 8
  %293 = add i64 %292, 2
  store i64 %293, i64* %89, align 8
  %294 = bitcast i16* %78 to i8*
  %295 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #11
  %296 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %296, align 8
  %297 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %294) #11
  %298 = getelementptr inbounds i8, i8* %294, i64 1
  %299 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %298) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #11
  %300 = load i64, i64* %89, align 8
  %301 = add i64 %300, 2
  store i64 %301, i64* %89, align 8
  %302 = bitcast i16* %114 to i8*
  %303 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #11
  %304 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %304, align 8
  %305 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %302) #11
  %306 = getelementptr inbounds i8, i8* %302, i64 1
  %307 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %306) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #11
  %308 = load i64, i64* %89, align 8
  %309 = add i64 %308, 2
  store i64 %309, i64* %89, align 8
  %310 = bitcast i16* %79 to i8*
  %311 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #11
  %312 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %312, align 8
  %313 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %310) #11
  %314 = getelementptr inbounds i8, i8* %310, i64 1
  %315 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %314) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #11
  %316 = load i64, i64* %89, align 8
  %317 = add i64 %316, 2
  store i64 %317, i64* %89, align 8
  %318 = bitcast i16* %115 to i8*
  %319 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #11
  %320 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %320, align 8
  %321 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %318) #11
  %322 = getelementptr inbounds i8, i8* %318, i64 1
  %323 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %322) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #11
  %324 = load i64, i64* %89, align 8
  %325 = add i64 %324, 2
  store i64 %325, i64* %89, align 8
  %326 = bitcast i16* %80 to i8*
  %327 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #11
  %328 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %328, align 8
  %329 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %326) #11
  %330 = getelementptr inbounds i8, i8* %326, i64 1
  %331 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %330) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #11
  %332 = load i64, i64* %89, align 8
  %333 = add i64 %332, 2
  store i64 %333, i64* %89, align 8
  %334 = bitcast i16* %116 to i8*
  %335 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #11
  %336 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %336, align 8
  %337 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %334) #11
  %338 = getelementptr inbounds i8, i8* %334, i64 1
  %339 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %338) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #11
  %340 = load i64, i64* %89, align 8
  %341 = add i64 %340, 2
  store i64 %341, i64* %89, align 8
  %342 = bitcast i32* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342) #11
  %343 = load i32, i32* %81, align 4
  store i32 %343, i32* %56, align 4
  %344 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %344) #11
  %345 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %345, align 8
  %346 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %342) #11
  %347 = getelementptr inbounds i8, i8* %342, i64 1
  %348 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %347) #11
  %349 = getelementptr inbounds i8, i8* %342, i64 2
  %350 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %349) #11
  %351 = getelementptr inbounds i8, i8* %342, i64 3
  %352 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %351) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %344) #11
  %353 = load i64, i64* %89, align 8
  %354 = add i64 %353, 4
  store i64 %354, i64* %89, align 8
  %355 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %355) #11
  %356 = load i32, i32* %117, align 4
  store i32 %356, i32* %57, align 4
  %357 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %357) #11
  %358 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %358, align 8
  %359 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %355) #11
  %360 = getelementptr inbounds i8, i8* %355, i64 1
  %361 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %360) #11
  %362 = getelementptr inbounds i8, i8* %355, i64 2
  %363 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %362) #11
  %364 = getelementptr inbounds i8, i8* %355, i64 3
  %365 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %364) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %357) #11
  %366 = load i64, i64* %89, align 8
  %367 = add i64 %366, 4
  store i64 %367, i64* %89, align 8
  %368 = bitcast i16* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %368) #11
  %369 = load i32, i32* %82, align 4
  %370 = trunc i32 %369 to i16
  store i16 %370, i16* %58, align 2
  %371 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #11
  %372 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %372, align 8
  %373 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %368) #11
  %374 = getelementptr inbounds i8, i8* %368, i64 1
  %375 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %374) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #11
  %376 = load i64, i64* %89, align 8
  %377 = add i64 %376, 2
  store i64 %377, i64* %89, align 8
  %378 = bitcast i16* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %378) #11
  %379 = load i32, i32* %118, align 4
  %380 = trunc i32 %379 to i16
  store i16 %380, i16* %59, align 2
  %381 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381) #11
  %382 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %382, align 8
  %383 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %378) #11
  %384 = getelementptr inbounds i8, i8* %378, i64 1
  %385 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %384) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381) #11
  %386 = load i64, i64* %89, align 8
  %387 = add i64 %386, 2
  store i64 %387, i64* %89, align 8
  %388 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 29, i32 0, i64 0
  %389 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %1, i64 0, i32 29, i32 0, i64 32
  %390 = bitcast %"class.std::__1::back_insert_iterator"* %40 to i8*
  %391 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %40, i64 0, i32 0
  br label %409

392:                                              ; preds = %409
  %393 = and i64 %412, 3
  %394 = xor i64 %393, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #11
  store i8 0, i8* %39, align 1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %406, label %396

396:                                              ; preds = %392
  %397 = bitcast %"class.std::__1::back_insert_iterator"* %38 to i8*
  %398 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %38, i64 0, i32 0
  br label %399

399:                                              ; preds = %399, %396
  %400 = phi i64 [ 0, %396 ], [ %404, %399 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %397) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %398, align 8
  %401 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %38, i8* nonnull dereferenceable(1) %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %397) #11
  %402 = load i64, i64* %89, align 8
  %403 = add i64 %402, 1
  store i64 %403, i64* %89, align 8
  %404 = add nuw nsw i64 %400, 1
  %405 = icmp eq i64 %404, %394
  br i1 %405, label %406, label %399

406:                                              ; preds = %399, %392
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #11
  %407 = load %"class.x11::Connection"*, %"class.x11::Connection"** %60, align 8
  %408 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %407, %"class.x11::WriteBuffer"* nonnull %41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %378) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %368) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %355) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %236) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %205) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %185) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %165) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %155) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %68) #11
  br label %416

409:                                              ; preds = %67, %409
  %410 = phi i8* [ %388, %67 ], [ %414, %409 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %390) #11
  store %"class.std::__1::vector.271"* %85, %"class.std::__1::vector.271"** %391, align 8
  %411 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %40, i8* dereferenceable(1) %410) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390) #11
  %412 = load i64, i64* %89, align 8
  %413 = add i64 %412, 1
  store i64 %413, i64* %89, align 8
  %414 = getelementptr inbounds i8, i8* %410, i64 1
  %415 = icmp eq i8* %414, %389
  br i1 %415, label %392, label %409

416:                                              ; preds = %2, %63, %406
  %417 = phi %"class.x11::Connection::FutureImpl"* [ %408, %406 ], [ null, %63 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %417
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11SetControlsERKNS0_10DeviceSpecERKNS_7ModMaskES6_S6_S6_RKNS0_4VModES9_S9_S9_RKhSB_RKNS0_8AXOptionERKNS0_8BoolCtrlESH_RKNS0_7ControlERKtSM_SM_SM_SM_SM_SM_SM_RKsSM_SH_SH_SE_SE_RKNSt3__15arrayIhLm32EEE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"struct.std::__1::array.343"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %32 = alloca %"struct.x11::Xkb::SetControlsRequest", align 4
  %33 = bitcast %"struct.x11::Xkb::SetControlsRequest"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 124, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 0
  %35 = load i16, i16* %1, align 2
  store i16 %35, i16* %34, align 4
  %36 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 1
  %37 = load i32, i32* %2, align 4
  store i32 %37, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 2
  %39 = load i32, i32* %3, align 4
  store i32 %39, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 3
  %41 = load i32, i32* %4, align 4
  store i32 %41, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 4
  %43 = load i32, i32* %5, align 4
  store i32 %43, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 5
  %45 = load i32, i32* %6, align 4
  store i32 %45, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 6
  %47 = load i32, i32* %7, align 4
  store i32 %47, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 7
  %49 = load i32, i32* %8, align 4
  store i32 %49, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 8
  %51 = load i32, i32* %9, align 4
  store i32 %51, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 9
  %53 = load i8, i8* %10, align 1
  store i8 %53, i8* %52, align 4
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 10
  %55 = load i8, i8* %11, align 1
  store i8 %55, i8* %54, align 1
  %56 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 11
  %57 = load i32, i32* %12, align 4
  store i32 %57, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 12
  %59 = load i32, i32* %13, align 4
  store i32 %59, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 13
  %61 = load i32, i32* %14, align 4
  store i32 %61, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 14
  %63 = load i32, i32* %15, align 4
  store i32 %63, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 15
  %65 = load i16, i16* %16, align 2
  store i16 %65, i16* %64, align 4
  %66 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 16
  %67 = load i16, i16* %17, align 2
  store i16 %67, i16* %66, align 2
  %68 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 17
  %69 = load i16, i16* %18, align 2
  store i16 %69, i16* %68, align 4
  %70 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 18
  %71 = load i16, i16* %19, align 2
  store i16 %71, i16* %70, align 2
  %72 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 19
  %73 = load i16, i16* %20, align 2
  store i16 %73, i16* %72, align 4
  %74 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 20
  %75 = load i16, i16* %21, align 2
  store i16 %75, i16* %74, align 2
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 21
  %77 = load i16, i16* %22, align 2
  store i16 %77, i16* %76, align 4
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 22
  %79 = load i16, i16* %23, align 2
  store i16 %79, i16* %78, align 2
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 23
  %81 = load i16, i16* %24, align 2
  store i16 %81, i16* %80, align 4
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 24
  %83 = load i16, i16* %25, align 2
  store i16 %83, i16* %82, align 2
  %84 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 25
  %85 = load i32, i32* %26, align 4
  store i32 %85, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 26
  %87 = load i32, i32* %27, align 4
  store i32 %87, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 27
  %89 = load i32, i32* %28, align 4
  store i32 %89, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 28
  %91 = load i32, i32* %29, align 4
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.x11::Xkb::SetControlsRequest", %"struct.x11::Xkb::SetControlsRequest"* %32, i64 0, i32 29, i32 0, i64 0
  %93 = getelementptr inbounds %"struct.std::__1::array.343", %"struct.std::__1::array.343"* %30, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 1 %93, i64 32, i1 false)
  %94 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb11SetControlsERKNS0_18SetControlsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetControlsRequest"* nonnull dereferenceable(124) %32)
  call void @llvm.lifetime.end.p0i8(i64 124, i8* nonnull %33) #11
  ret %"class.x11::Connection::FutureImpl"* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6GetMapERKNS0_13GetMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetMapRequest"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca %"class.std::__1::back_insert_iterator", align 8
  %24 = alloca i8, align 1
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca i8, align 1
  %29 = alloca %"class.x11::WriteBuffer", align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  %34 = alloca i16, align 2
  %35 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %36 = load %"class.x11::Connection"*, %"class.x11::Connection"** %35, align 8
  %37 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %36) #11
  br i1 %37, label %38, label %215

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %215, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.x11::WriteBuffer"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  %44 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 7
  %47 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 9
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 11
  %49 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 13
  %50 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 15
  %51 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #11
  %52 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %53 = load i8, i8* %52, align 1
  store i8 %53, i8* %30, align 1
  %54 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 1
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %30) #11
  %58 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  store i8 8, i8* %31, align 1
  %61 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %62, align 8
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  %64 = load i64, i64* %58, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  store i8 0, i8* %24, align 1
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %23 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %67, align 8
  %68 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* nonnull dereferenceable(1) %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %69 = load i64, i64* %58, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %67, align 8
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* nonnull dereferenceable(1) %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %72 = load i64, i64* %58, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %58, align 8
  %74 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 2
  %75 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 4
  %76 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 6
  %77 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 8
  %78 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 10
  %79 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 12
  %80 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 14
  %81 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 16
  %82 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %1, i64 0, i32 18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  %83 = bitcast %"struct.x11::Xkb::GetMapRequest"* %1 to i8*
  %84 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %85, align 8
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %83) #11
  %87 = getelementptr inbounds i8, i8* %83, i64 1
  %88 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %87) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %89 = load i64, i64* %58, align 8
  %90 = add i64 %89, 2
  store i64 %90, i64* %58, align 8
  %91 = bitcast i16* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %91) #11
  %92 = load i32, i32* %74, align 4
  %93 = trunc i32 %92 to i16
  store i16 %93, i16* %32, align 2
  %94 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %95, align 8
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* nonnull dereferenceable(1) %91) #11
  %97 = getelementptr inbounds i8, i8* %91, i64 1
  %98 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %97) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %99 = load i64, i64* %58, align 8
  %100 = add i64 %99, 2
  store i64 %100, i64* %58, align 8
  %101 = bitcast i16* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %101) #11
  %102 = load i32, i32* %44, align 4
  %103 = trunc i32 %102 to i16
  store i16 %103, i16* %33, align 2
  %104 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %105, align 8
  %106 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %101) #11
  %107 = getelementptr inbounds i8, i8* %101, i64 1
  %108 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %107) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  %109 = load i64, i64* %58, align 8
  %110 = add i64 %109, 2
  store i64 %110, i64* %58, align 8
  %111 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  %112 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %112, align 8
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %75) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  %114 = load i64, i64* %58, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %58, align 8
  %116 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %117, align 8
  %118 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  %119 = load i64, i64* %58, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %58, align 8
  %121 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %122, align 8
  %123 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %76) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11
  %124 = load i64, i64* %58, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %58, align 8
  %126 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  %127 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %127, align 8
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %46) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %129 = load i64, i64* %58, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %58, align 8
  %131 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  %132 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %132, align 8
  %133 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %134 = load i64, i64* %58, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %58, align 8
  %136 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  %137 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %137, align 8
  %138 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %47) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  %139 = load i64, i64* %58, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %58, align 8
  %141 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #11
  %142 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %142, align 8
  %143 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #11
  %144 = load i64, i64* %58, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %58, align 8
  %146 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %147, align 8
  %148 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %149 = load i64, i64* %58, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %58, align 8
  %151 = bitcast i16* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %151) #11
  %152 = load i32, i32* %79, align 4
  %153 = trunc i32 %152 to i16
  store i16 %153, i16* %34, align 2
  %154 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #11
  %155 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %155, align 8
  %156 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %151) #11
  %157 = getelementptr inbounds i8, i8* %151, i64 1
  %158 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %157) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #11
  %159 = load i64, i64* %58, align 8
  %160 = add i64 %159, 2
  store i64 %160, i64* %58, align 8
  %161 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #11
  %162 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %162, align 8
  %163 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #11
  %164 = load i64, i64* %58, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %58, align 8
  %166 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #11
  %167 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %167, align 8
  %168 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %80) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #11
  %169 = load i64, i64* %58, align 8
  %170 = add i64 %169, 1
  store i64 %170, i64* %58, align 8
  %171 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #11
  %172 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %172, align 8
  %173 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #11
  %174 = load i64, i64* %58, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %58, align 8
  %176 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #11
  %177 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %177, align 8
  %178 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %81) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #11
  %179 = load i64, i64* %58, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %58, align 8
  %181 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #11
  %182 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %182, align 8
  %183 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %51) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  %184 = load i64, i64* %58, align 8
  %185 = add i64 %184, 1
  store i64 %185, i64* %58, align 8
  %186 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #11
  %187 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %187, align 8
  %188 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %82) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #11
  %189 = load i64, i64* %58, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %191 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %192 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %192, align 8
  %193 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  %194 = load i64, i64* %58, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %192, align 8
  %196 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  %197 = load i64, i64* %58, align 8
  %198 = add i64 %197, 1
  store i64 %198, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %199 = and i64 %197, 3
  %200 = xor i64 %199, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #11
  store i8 0, i8* %28, align 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %42
  %203 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  %204 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  br label %205

205:                                              ; preds = %205, %202
  %206 = phi i64 [ 0, %202 ], [ %210, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #11
  store %"class.std::__1::vector.271"* %54, %"class.std::__1::vector.271"** %204, align 8
  %207 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* nonnull dereferenceable(1) %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #11
  %208 = load i64, i64* %58, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %58, align 8
  %210 = add nuw nsw i64 %206, 1
  %211 = icmp eq i64 %210, %200
  br i1 %211, label %212, label %205

212:                                              ; preds = %205, %42
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #11
  %213 = load %"class.x11::Connection"*, %"class.x11::Connection"** %35, align 8
  %214 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %213, %"class.x11::WriteBuffer"* nonnull %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %151) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #11
  br label %215

215:                                              ; preds = %2, %38, %212
  %216 = phi %"class.x11::Connection::FutureImpl"* [ %214, %212 ], [ null, %38 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %216
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6GetMapERKNS0_10DeviceSpecERKNS0_7MapPartES6_RKhS8_RKNS_7KeyCodeES8_SB_S8_SB_S8_RKNS0_4VModESB_S8_SB_S8_SB_S8_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %20 = alloca %"struct.x11::Xkb::GetMapRequest", align 4
  %21 = bitcast %"struct.x11::Xkb::GetMapRequest"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 0
  %23 = load i16, i16* %1, align 2
  store i16 %23, i16* %22, align 4
  %24 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 2
  %25 = load i32, i32* %2, align 4
  store i32 %25, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 3
  %27 = load i32, i32* %3, align 4
  store i32 %27, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 4
  %29 = load i8, i8* %4, align 1
  store i8 %29, i8* %28, align 4
  %30 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 5
  %31 = load i8, i8* %5, align 1
  store i8 %31, i8* %30, align 1
  %32 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 6
  %33 = load i8, i8* %6, align 1
  store i8 %33, i8* %32, align 2
  %34 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 7
  %35 = load i8, i8* %7, align 1
  store i8 %35, i8* %34, align 1
  %36 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 8
  %37 = load i8, i8* %8, align 1
  store i8 %37, i8* %36, align 4
  %38 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 9
  %39 = load i8, i8* %9, align 1
  store i8 %39, i8* %38, align 1
  %40 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 10
  %41 = load i8, i8* %10, align 1
  store i8 %41, i8* %40, align 2
  %42 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 11
  %43 = load i8, i8* %11, align 1
  store i8 %43, i8* %42, align 1
  %44 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 12
  %45 = load i32, i32* %12, align 4
  store i32 %45, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 13
  %47 = load i8, i8* %13, align 1
  store i8 %47, i8* %46, align 4
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 14
  %49 = load i8, i8* %14, align 1
  store i8 %49, i8* %48, align 1
  %50 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 15
  %51 = load i8, i8* %15, align 1
  store i8 %51, i8* %50, align 2
  %52 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 16
  %53 = load i8, i8* %16, align 1
  store i8 %53, i8* %52, align 1
  %54 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 17
  %55 = load i8, i8* %17, align 1
  store i8 %55, i8* %54, align 4
  %56 = getelementptr inbounds %"struct.x11::Xkb::GetMapRequest", %"struct.x11::Xkb::GetMapRequest"* %20, i64 0, i32 18
  %57 = load i8, i8* %18, align 1
  store i8 %57, i8* %56, align 1
  %58 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6GetMapERKNS0_13GetMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetMapRequest"* nonnull dereferenceable(32) %20)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  ret %"class.x11::Connection::FutureImpl"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetMapReply"* @_ZN3x116detail9ReadReplyINS_3Xkb11GetMapReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 328) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetMapReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 328, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = getelementptr inbounds i8, i8* %2, i64 5
  %8 = getelementptr inbounds i8, i8* %2, i64 6
  %9 = getelementptr inbounds i8, i8* %2, i64 7
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = getelementptr inbounds i8, i8* %2, i64 9
  %12 = getelementptr inbounds i8, i8* %2, i64 10
  %13 = bitcast i8* %12 to i16*
  %14 = getelementptr inbounds i8, i8* %2, i64 12
  %15 = getelementptr inbounds i8, i8* %2, i64 13
  %16 = getelementptr inbounds i8, i8* %2, i64 14
  %17 = bitcast i8* %16 to i16*
  %18 = getelementptr inbounds i8, i8* %2, i64 16
  %19 = getelementptr inbounds i8, i8* %2, i64 17
  %20 = getelementptr inbounds i8, i8* %2, i64 18
  %21 = getelementptr inbounds i8, i8* %2, i64 19
  %22 = getelementptr inbounds i8, i8* %2, i64 20
  %23 = getelementptr inbounds i8, i8* %2, i64 21
  %24 = getelementptr inbounds i8, i8* %2, i64 22
  %25 = getelementptr inbounds i8, i8* %2, i64 23
  %26 = getelementptr inbounds i8, i8* %2, i64 24
  %27 = getelementptr inbounds i8, i8* %2, i64 25
  %28 = getelementptr inbounds i8, i8* %2, i64 26
  %29 = getelementptr inbounds i8, i8* %2, i64 27
  %30 = getelementptr inbounds i8, i8* %2, i64 28
  %31 = getelementptr inbounds i8, i8* %2, i64 32
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #11
  %40 = load i64, i64* %33, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %33, align 8
  %42 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %43 = bitcast %"class.base::RefCountedMemory"* %42 to i8* (%"class.base::RefCountedMemory"*)***
  %44 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %43, align 8
  %45 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %44, align 8
  %46 = tail call i8* %45(%"class.base::RefCountedMemory"* %42) #11
  %47 = load i64, i64* %33, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = load i8, i8* %48, align 1
  store i8 %49, i8* %2, align 1
  %50 = add i64 %47, 1
  store i64 %50, i64* %33, align 8
  %51 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %52 = bitcast %"class.base::RefCountedMemory"* %51 to i8* (%"class.base::RefCountedMemory"*)***
  %53 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %53, align 8
  %55 = tail call i8* %54(%"class.base::RefCountedMemory"* %51) #11
  %56 = load i64, i64* %33, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 1
  store i16 %59, i16* %5, align 2
  %60 = add i64 %56, 2
  store i64 %60, i64* %33, align 8
  %61 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %62 = bitcast %"class.base::RefCountedMemory"* %61 to i8* (%"class.base::RefCountedMemory"*)***
  %63 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %63, align 8
  %65 = tail call i8* %64(%"class.base::RefCountedMemory"* %61) #11
  %66 = load i64, i64* %33, align 8
  %67 = add i64 %66, 6
  store i64 %67, i64* %33, align 8
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %69 = bitcast %"class.base::RefCountedMemory"* %68 to i8* (%"class.base::RefCountedMemory"*)***
  %70 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %69, align 8
  %71 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %70, align 8
  %72 = tail call i8* %71(%"class.base::RefCountedMemory"* %68) #11
  %73 = load i64, i64* %33, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = load i8, i8* %74, align 1
  store i8 %75, i8* %6, align 1
  %76 = add i64 %73, 1
  store i64 %76, i64* %33, align 8
  %77 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %78 = bitcast %"class.base::RefCountedMemory"* %77 to i8* (%"class.base::RefCountedMemory"*)***
  %79 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %78, align 8
  %80 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %79, align 8
  %81 = tail call i8* %80(%"class.base::RefCountedMemory"* %77) #11
  %82 = load i64, i64* %33, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %7, align 1
  %85 = add i64 %82, 1
  store i64 %85, i64* %33, align 8
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #11
  %91 = load i64, i64* %33, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i16*
  %94 = load i16, i16* %93, align 1
  %95 = add i64 %91, 2
  store i64 %95, i64* %33, align 8
  %96 = zext i16 %94 to i32
  %97 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %98 = bitcast %"class.base::RefCountedMemory"* %97 to i8* (%"class.base::RefCountedMemory"*)***
  %99 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %98, align 8
  %100 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %99, align 8
  %101 = tail call i8* %100(%"class.base::RefCountedMemory"* %97) #11
  %102 = load i64, i64* %33, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  %104 = load i8, i8* %103, align 1
  store i8 %104, i8* %8, align 1
  %105 = add i64 %102, 1
  store i64 %105, i64* %33, align 8
  %106 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %107 = bitcast %"class.base::RefCountedMemory"* %106 to i8* (%"class.base::RefCountedMemory"*)***
  %108 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %107, align 8
  %109 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %108, align 8
  %110 = tail call i8* %109(%"class.base::RefCountedMemory"* %106) #11
  %111 = load i64, i64* %33, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %9, align 1
  %114 = add i64 %111, 1
  store i64 %114, i64* %33, align 8
  %115 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %116 = bitcast %"class.base::RefCountedMemory"* %115 to i8* (%"class.base::RefCountedMemory"*)***
  %117 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %116, align 8
  %118 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %117, align 8
  %119 = tail call i8* %118(%"class.base::RefCountedMemory"* %115) #11
  %120 = load i64, i64* %33, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  %122 = load i8, i8* %121, align 1
  store i8 %122, i8* %10, align 1
  %123 = add i64 %120, 1
  store i64 %123, i64* %33, align 8
  %124 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %125 = bitcast %"class.base::RefCountedMemory"* %124 to i8* (%"class.base::RefCountedMemory"*)***
  %126 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %125, align 8
  %127 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %126, align 8
  %128 = tail call i8* %127(%"class.base::RefCountedMemory"* %124) #11
  %129 = load i64, i64* %33, align 8
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = load i8, i8* %130, align 1
  store i8 %131, i8* %11, align 1
  %132 = add i64 %129, 1
  store i64 %132, i64* %33, align 8
  %133 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %134 = bitcast %"class.base::RefCountedMemory"* %133 to i8* (%"class.base::RefCountedMemory"*)***
  %135 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %134, align 8
  %136 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %135, align 8
  %137 = tail call i8* %136(%"class.base::RefCountedMemory"* %133) #11
  %138 = load i64, i64* %33, align 8
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  %140 = bitcast i8* %139 to i16*
  %141 = load i16, i16* %140, align 1
  store i16 %141, i16* %13, align 2
  %142 = add i64 %138, 2
  store i64 %142, i64* %33, align 8
  %143 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %144 = bitcast %"class.base::RefCountedMemory"* %143 to i8* (%"class.base::RefCountedMemory"*)***
  %145 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %144, align 8
  %146 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %145, align 8
  %147 = tail call i8* %146(%"class.base::RefCountedMemory"* %143) #11
  %148 = load i64, i64* %33, align 8
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  %150 = load i8, i8* %149, align 1
  store i8 %150, i8* %14, align 1
  %151 = add i64 %148, 1
  store i64 %151, i64* %33, align 8
  %152 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %153 = bitcast %"class.base::RefCountedMemory"* %152 to i8* (%"class.base::RefCountedMemory"*)***
  %154 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %153, align 8
  %155 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %154, align 8
  %156 = tail call i8* %155(%"class.base::RefCountedMemory"* %152) #11
  %157 = load i64, i64* %33, align 8
  %158 = getelementptr inbounds i8, i8* %156, i64 %157
  %159 = load i8, i8* %158, align 1
  store i8 %159, i8* %15, align 1
  %160 = add i64 %157, 1
  store i64 %160, i64* %33, align 8
  %161 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %162 = bitcast %"class.base::RefCountedMemory"* %161 to i8* (%"class.base::RefCountedMemory"*)***
  %163 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %162, align 8
  %164 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %163, align 8
  %165 = tail call i8* %164(%"class.base::RefCountedMemory"* %161) #11
  %166 = load i64, i64* %33, align 8
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  %168 = bitcast i8* %167 to i16*
  %169 = load i16, i16* %168, align 1
  store i16 %169, i16* %17, align 2
  %170 = add i64 %166, 2
  store i64 %170, i64* %33, align 8
  %171 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %172 = bitcast %"class.base::RefCountedMemory"* %171 to i8* (%"class.base::RefCountedMemory"*)***
  %173 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %172, align 8
  %174 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %173, align 8
  %175 = tail call i8* %174(%"class.base::RefCountedMemory"* %171) #11
  %176 = load i64, i64* %33, align 8
  %177 = getelementptr inbounds i8, i8* %175, i64 %176
  %178 = load i8, i8* %177, align 1
  store i8 %178, i8* %18, align 1
  %179 = add i64 %176, 1
  store i64 %179, i64* %33, align 8
  %180 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %181 = bitcast %"class.base::RefCountedMemory"* %180 to i8* (%"class.base::RefCountedMemory"*)***
  %182 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %181, align 8
  %183 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %182, align 8
  %184 = tail call i8* %183(%"class.base::RefCountedMemory"* %180) #11
  %185 = load i64, i64* %33, align 8
  %186 = getelementptr inbounds i8, i8* %184, i64 %185
  %187 = load i8, i8* %186, align 1
  store i8 %187, i8* %19, align 1
  %188 = add i64 %185, 1
  store i64 %188, i64* %33, align 8
  %189 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %190 = bitcast %"class.base::RefCountedMemory"* %189 to i8* (%"class.base::RefCountedMemory"*)***
  %191 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %190, align 8
  %192 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %191, align 8
  %193 = tail call i8* %192(%"class.base::RefCountedMemory"* %189) #11
  %194 = load i64, i64* %33, align 8
  %195 = getelementptr inbounds i8, i8* %193, i64 %194
  %196 = load i8, i8* %195, align 1
  store i8 %196, i8* %20, align 1
  %197 = add i64 %194, 1
  store i64 %197, i64* %33, align 8
  %198 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %199 = bitcast %"class.base::RefCountedMemory"* %198 to i8* (%"class.base::RefCountedMemory"*)***
  %200 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %199, align 8
  %201 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %200, align 8
  %202 = tail call i8* %201(%"class.base::RefCountedMemory"* %198) #11
  %203 = load i64, i64* %33, align 8
  %204 = getelementptr inbounds i8, i8* %202, i64 %203
  %205 = load i8, i8* %204, align 1
  store i8 %205, i8* %21, align 1
  %206 = add i64 %203, 1
  store i64 %206, i64* %33, align 8
  %207 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %208 = bitcast %"class.base::RefCountedMemory"* %207 to i8* (%"class.base::RefCountedMemory"*)***
  %209 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %208, align 8
  %210 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %209, align 8
  %211 = tail call i8* %210(%"class.base::RefCountedMemory"* %207) #11
  %212 = load i64, i64* %33, align 8
  %213 = getelementptr inbounds i8, i8* %211, i64 %212
  %214 = load i8, i8* %213, align 1
  store i8 %214, i8* %22, align 1
  %215 = add i64 %212, 1
  store i64 %215, i64* %33, align 8
  %216 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %217 = bitcast %"class.base::RefCountedMemory"* %216 to i8* (%"class.base::RefCountedMemory"*)***
  %218 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %217, align 8
  %219 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %218, align 8
  %220 = tail call i8* %219(%"class.base::RefCountedMemory"* %216) #11
  %221 = load i64, i64* %33, align 8
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  %223 = load i8, i8* %222, align 1
  store i8 %223, i8* %23, align 1
  %224 = add i64 %221, 1
  store i64 %224, i64* %33, align 8
  %225 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %226 = bitcast %"class.base::RefCountedMemory"* %225 to i8* (%"class.base::RefCountedMemory"*)***
  %227 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %226, align 8
  %228 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %227, align 8
  %229 = tail call i8* %228(%"class.base::RefCountedMemory"* %225) #11
  %230 = load i64, i64* %33, align 8
  %231 = getelementptr inbounds i8, i8* %229, i64 %230
  %232 = load i8, i8* %231, align 1
  store i8 %232, i8* %24, align 1
  %233 = add i64 %230, 1
  store i64 %233, i64* %33, align 8
  %234 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %235 = bitcast %"class.base::RefCountedMemory"* %234 to i8* (%"class.base::RefCountedMemory"*)***
  %236 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %235, align 8
  %237 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %236, align 8
  %238 = tail call i8* %237(%"class.base::RefCountedMemory"* %234) #11
  %239 = load i64, i64* %33, align 8
  %240 = getelementptr inbounds i8, i8* %238, i64 %239
  %241 = load i8, i8* %240, align 1
  store i8 %241, i8* %25, align 1
  %242 = add i64 %239, 1
  store i64 %242, i64* %33, align 8
  %243 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %244 = bitcast %"class.base::RefCountedMemory"* %243 to i8* (%"class.base::RefCountedMemory"*)***
  %245 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %244, align 8
  %246 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %245, align 8
  %247 = tail call i8* %246(%"class.base::RefCountedMemory"* %243) #11
  %248 = load i64, i64* %33, align 8
  %249 = getelementptr inbounds i8, i8* %247, i64 %248
  %250 = load i8, i8* %249, align 1
  store i8 %250, i8* %26, align 1
  %251 = add i64 %248, 1
  store i64 %251, i64* %33, align 8
  %252 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %253 = bitcast %"class.base::RefCountedMemory"* %252 to i8* (%"class.base::RefCountedMemory"*)***
  %254 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %253, align 8
  %255 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %254, align 8
  %256 = tail call i8* %255(%"class.base::RefCountedMemory"* %252) #11
  %257 = load i64, i64* %33, align 8
  %258 = getelementptr inbounds i8, i8* %256, i64 %257
  %259 = load i8, i8* %258, align 1
  store i8 %259, i8* %27, align 1
  %260 = add i64 %257, 1
  store i64 %260, i64* %33, align 8
  %261 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %262 = bitcast %"class.base::RefCountedMemory"* %261 to i8* (%"class.base::RefCountedMemory"*)***
  %263 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %262, align 8
  %264 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %263, align 8
  %265 = tail call i8* %264(%"class.base::RefCountedMemory"* %261) #11
  %266 = load i64, i64* %33, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = load i8, i8* %267, align 1
  store i8 %268, i8* %28, align 1
  %269 = add i64 %266, 1
  store i64 %269, i64* %33, align 8
  %270 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %271 = bitcast %"class.base::RefCountedMemory"* %270 to i8* (%"class.base::RefCountedMemory"*)***
  %272 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %271, align 8
  %273 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %272, align 8
  %274 = tail call i8* %273(%"class.base::RefCountedMemory"* %270) #11
  %275 = load i64, i64* %33, align 8
  %276 = getelementptr inbounds i8, i8* %274, i64 %275
  %277 = load i8, i8* %276, align 1
  store i8 %277, i8* %29, align 1
  %278 = add i64 %275, 1
  store i64 %278, i64* %33, align 8
  %279 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %280 = bitcast %"class.base::RefCountedMemory"* %279 to i8* (%"class.base::RefCountedMemory"*)***
  %281 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %280, align 8
  %282 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %281, align 8
  %283 = tail call i8* %282(%"class.base::RefCountedMemory"* %279) #11
  %284 = load i64, i64* %33, align 8
  %285 = getelementptr inbounds i8, i8* %283, i64 %284
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %30, align 1
  %287 = add i64 %284, 2
  store i64 %287, i64* %33, align 8
  %288 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %289 = bitcast %"class.base::RefCountedMemory"* %288 to i8* (%"class.base::RefCountedMemory"*)***
  %290 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %289, align 8
  %291 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %290, align 8
  %292 = tail call i8* %291(%"class.base::RefCountedMemory"* %288) #11
  %293 = load i64, i64* %33, align 8
  %294 = getelementptr inbounds i8, i8* %292, i64 %293
  %295 = bitcast i8* %294 to i16*
  %296 = load i16, i16* %295, align 1
  %297 = add i64 %293, 2
  store i64 %297, i64* %33, align 8
  %298 = zext i16 %296 to i32
  store i32 %298, i32* %32, align 4
  %299 = and i32 %96, 1
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %580, label %301

301:                                              ; preds = %1
  %302 = getelementptr inbounds i8, i8* %2, i64 40
  %303 = load i8, i8* %302, align 8, !range !2
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %344, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds i8, i8* %2, i64 48
  %307 = bitcast i8* %306 to %"struct.x11::Xkb::KeyType"**
  %308 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %307, align 8
  %309 = icmp eq %"struct.x11::Xkb::KeyType"* %308, null
  br i1 %309, label %343, label %310

310:                                              ; preds = %305
  %311 = bitcast %"struct.x11::Xkb::KeyType"* %308 to i8*
  %312 = getelementptr inbounds i8, i8* %2, i64 56
  %313 = bitcast i8* %312 to %"struct.x11::Xkb::KeyType"**
  %314 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %313, align 8
  %315 = icmp eq %"struct.x11::Xkb::KeyType"* %314, %308
  br i1 %315, label %341, label %316

316:                                              ; preds = %310, %336
  %317 = phi %"struct.x11::Xkb::KeyType"* [ %318, %336 ], [ %314, %310 ]
  %318 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %317, i64 -1
  %319 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %317, i64 -1, i32 6, i32 0, i32 0
  %320 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %319, align 8
  %321 = icmp eq %"struct.x11::Xkb::ModDef"* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %316
  %323 = ptrtoint %"struct.x11::Xkb::ModDef"* %320 to i64
  %324 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %317, i64 -1, i32 6, i32 0, i32 1
  %325 = bitcast %"struct.x11::Xkb::ModDef"** %324 to i64*
  store i64 %323, i64* %325, align 8
  %326 = bitcast %"struct.x11::Xkb::ModDef"* %320 to i8*
  tail call void @_ZdlPv(i8* %326) #12
  br label %327

327:                                              ; preds = %322, %316
  %328 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %317, i64 -1, i32 5, i32 0, i32 0
  %329 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %328, align 8
  %330 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %329, null
  br i1 %330, label %336, label %331

331:                                              ; preds = %327
  %332 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %329 to i64
  %333 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %317, i64 -1, i32 5, i32 0, i32 1
  %334 = bitcast %"struct.x11::Xkb::KTMapEntry"** %333 to i64*
  store i64 %332, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %329, i64 0, i32 0
  tail call void @_ZdlPv(i8* %335) #12
  br label %336

336:                                              ; preds = %331, %327
  %337 = icmp eq %"struct.x11::Xkb::KeyType"* %318, %308
  br i1 %337, label %338, label %316

338:                                              ; preds = %336
  %339 = bitcast i8* %306 to i8**
  %340 = load i8*, i8** %339, align 8
  br label %341

341:                                              ; preds = %338, %310
  %342 = phi i8* [ %340, %338 ], [ %311, %310 ]
  store %"struct.x11::Xkb::KeyType"* %308, %"struct.x11::Xkb::KeyType"** %313, align 8
  tail call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %341, %305
  store i8 0, i8* %302, align 8
  br label %344

344:                                              ; preds = %343, %301
  %345 = getelementptr inbounds i8, i8* %2, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %345, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %302, align 8
  %346 = load i8, i8* %9, align 1
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %580, label %348

348:                                              ; preds = %344
  %349 = zext i8 %346 to i64
  %350 = getelementptr inbounds i8, i8* %2, i64 56
  %351 = bitcast i8* %350 to %"struct.x11::Xkb::KeyType"**
  %352 = bitcast i8* %345 to %"class.std::__1::vector.356"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb7KeyTypeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.356"* %352, i64 %349) #11
  %353 = bitcast i8* %345 to %"struct.x11::Xkb::KeyType"**
  %354 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %353, align 8
  %355 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %351, align 8
  %356 = icmp eq %"struct.x11::Xkb::KeyType"* %354, %355
  br i1 %356, label %580, label %357

357:                                              ; preds = %348, %539
  %358 = phi %"struct.x11::Xkb::KeyType"* [ %540, %539 ], [ %354, %348 ]
  %359 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 0
  %360 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 1
  %361 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 2
  %362 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 3
  %363 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 4
  %364 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 5
  %365 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 5, i32 0, i32 1
  %366 = bitcast %"struct.x11::Xkb::KTMapEntry"** %365 to i64*
  %367 = bitcast %"class.std::__1::vector.358"* %364 to i64*
  %368 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 6
  %369 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 0, i32 6, i32 0, i32 1
  %370 = bitcast %"struct.x11::Xkb::ModDef"** %369 to i64*
  %371 = bitcast %"class.std::__1::vector.365"* %368 to i64*
  %372 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %373 = bitcast %"class.base::RefCountedMemory"* %372 to i8* (%"class.base::RefCountedMemory"*)***
  %374 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %373, align 8
  %375 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %374, align 8
  %376 = tail call i8* %375(%"class.base::RefCountedMemory"* %372) #11
  %377 = load i64, i64* %33, align 8
  %378 = getelementptr inbounds i8, i8* %376, i64 %377
  %379 = load i8, i8* %378, align 1
  %380 = add i64 %377, 1
  store i64 %380, i64* %33, align 8
  %381 = zext i8 %379 to i32
  store i32 %381, i32* %359, align 4
  %382 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %383 = bitcast %"class.base::RefCountedMemory"* %382 to i8* (%"class.base::RefCountedMemory"*)***
  %384 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %383, align 8
  %385 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %384, align 8
  %386 = tail call i8* %385(%"class.base::RefCountedMemory"* %382) #11
  %387 = load i64, i64* %33, align 8
  %388 = getelementptr inbounds i8, i8* %386, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = add i64 %387, 1
  store i64 %390, i64* %33, align 8
  %391 = zext i8 %389 to i32
  store i32 %391, i32* %360, align 4
  %392 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %393 = bitcast %"class.base::RefCountedMemory"* %392 to i8* (%"class.base::RefCountedMemory"*)***
  %394 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %393, align 8
  %395 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %394, align 8
  %396 = tail call i8* %395(%"class.base::RefCountedMemory"* %392) #11
  %397 = load i64, i64* %33, align 8
  %398 = getelementptr inbounds i8, i8* %396, i64 %397
  %399 = bitcast i8* %398 to i16*
  %400 = load i16, i16* %399, align 1
  %401 = add i64 %397, 2
  store i64 %401, i64* %33, align 8
  %402 = zext i16 %400 to i32
  store i32 %402, i32* %361, align 4
  %403 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %404 = bitcast %"class.base::RefCountedMemory"* %403 to i8* (%"class.base::RefCountedMemory"*)***
  %405 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %404, align 8
  %406 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %405, align 8
  %407 = tail call i8* %406(%"class.base::RefCountedMemory"* %403) #11
  %408 = load i64, i64* %33, align 8
  %409 = getelementptr inbounds i8, i8* %407, i64 %408
  %410 = load i8, i8* %409, align 1
  store i8 %410, i8* %362, align 1
  %411 = load i64, i64* %33, align 8
  %412 = add i64 %411, 1
  store i64 %412, i64* %33, align 8
  %413 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %414 = bitcast %"class.base::RefCountedMemory"* %413 to i8* (%"class.base::RefCountedMemory"*)***
  %415 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %414, align 8
  %416 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %415, align 8
  %417 = tail call i8* %416(%"class.base::RefCountedMemory"* %413) #11
  %418 = load i64, i64* %33, align 8
  %419 = getelementptr inbounds i8, i8* %417, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = add i64 %418, 1
  store i64 %421, i64* %33, align 8
  %422 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %423 = bitcast %"class.base::RefCountedMemory"* %422 to i8* (%"class.base::RefCountedMemory"*)***
  %424 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %423, align 8
  %425 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %424, align 8
  %426 = tail call i8* %425(%"class.base::RefCountedMemory"* %422) #11
  %427 = load i64, i64* %33, align 8
  %428 = getelementptr inbounds i8, i8* %426, i64 %427
  %429 = load i8, i8* %428, align 1
  store i8 %429, i8* %363, align 1
  %430 = load i64, i64* %33, align 8
  %431 = add i64 %430, 2
  store i64 %431, i64* %33, align 8
  %432 = zext i8 %420 to i64
  %433 = load i64, i64* %366, align 8
  %434 = load i64, i64* %367, align 8
  %435 = sub i64 %433, %434
  %436 = sdiv exact i64 %435, 20
  %437 = icmp ult i64 %436, %432
  %438 = inttoptr i64 %434 to %"struct.x11::Xkb::KTMapEntry"*
  br i1 %437, label %439, label %444

439:                                              ; preds = %357
  %440 = sub nsw i64 %432, %436
  tail call void @_ZNSt3__16vectorIN3x113Xkb10KTMapEntryENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.358"* %364, i64 %440) #11
  %441 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %364, i64 0, i32 0, i32 0
  %442 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %441, align 8
  %443 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %365, align 8
  br label %449

444:                                              ; preds = %357
  %445 = inttoptr i64 %433 to %"struct.x11::Xkb::KTMapEntry"*
  %446 = icmp ugt i64 %436, %432
  br i1 %446, label %447, label %449

447:                                              ; preds = %444
  %448 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %438, i64 %432
  store %"struct.x11::Xkb::KTMapEntry"* %448, %"struct.x11::Xkb::KTMapEntry"** %365, align 8
  br label %449

449:                                              ; preds = %439, %444, %447
  %450 = phi %"struct.x11::Xkb::KTMapEntry"* [ %443, %439 ], [ %445, %444 ], [ %448, %447 ]
  %451 = phi %"struct.x11::Xkb::KTMapEntry"* [ %442, %439 ], [ %438, %444 ], [ %438, %447 ]
  %452 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %451, %450
  br i1 %452, label %453, label %477

453:                                              ; preds = %477, %449
  %454 = load i8, i8* %363, align 1
  %455 = zext i8 %454 to i64
  %456 = mul nuw nsw i64 %455, %432
  %457 = load i64, i64* %370, align 8
  %458 = load i64, i64* %371, align 8
  %459 = sub i64 %457, %458
  %460 = sdiv exact i64 %459, 12
  %461 = icmp ugt i64 %456, %460
  %462 = inttoptr i64 %458 to %"struct.x11::Xkb::ModDef"*
  br i1 %461, label %463, label %468

463:                                              ; preds = %453
  %464 = sub nsw i64 %456, %460
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.365"* %368, i64 %464) #11
  %465 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %368, i64 0, i32 0, i32 0
  %466 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %465, align 8
  %467 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %369, align 8
  br label %473

468:                                              ; preds = %453
  %469 = inttoptr i64 %457 to %"struct.x11::Xkb::ModDef"*
  %470 = icmp ult i64 %456, %460
  br i1 %470, label %471, label %473

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %462, i64 %456
  store %"struct.x11::Xkb::ModDef"* %472, %"struct.x11::Xkb::ModDef"** %369, align 8
  br label %473

473:                                              ; preds = %463, %468, %471
  %474 = phi %"struct.x11::Xkb::ModDef"* [ %467, %463 ], [ %469, %468 ], [ %472, %471 ]
  %475 = phi %"struct.x11::Xkb::ModDef"* [ %466, %463 ], [ %462, %468 ], [ %462, %471 ]
  %476 = icmp eq %"struct.x11::Xkb::ModDef"* %475, %474
  br i1 %476, label %539, label %542

477:                                              ; preds = %449, %477
  %478 = phi %"struct.x11::Xkb::KTMapEntry"* [ %537, %477 ], [ %451, %449 ]
  %479 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 0, i32 0
  %480 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 0, i32 1
  %481 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 0, i32 2
  %482 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 0, i32 3
  %483 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 0, i32 4
  %484 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %485 = bitcast %"class.base::RefCountedMemory"* %484 to i8* (%"class.base::RefCountedMemory"*)***
  %486 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %485, align 8
  %487 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %486, align 8
  %488 = tail call i8* %487(%"class.base::RefCountedMemory"* %484) #11
  %489 = load i64, i64* %33, align 8
  %490 = getelementptr inbounds i8, i8* %488, i64 %489
  %491 = load i8, i8* %490, align 1
  store i8 %491, i8* %479, align 1
  %492 = load i64, i64* %33, align 8
  %493 = add i64 %492, 1
  store i64 %493, i64* %33, align 8
  %494 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %495 = bitcast %"class.base::RefCountedMemory"* %494 to i8* (%"class.base::RefCountedMemory"*)***
  %496 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %495, align 8
  %497 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %496, align 8
  %498 = tail call i8* %497(%"class.base::RefCountedMemory"* %494) #11
  %499 = load i64, i64* %33, align 8
  %500 = getelementptr inbounds i8, i8* %498, i64 %499
  %501 = load i8, i8* %500, align 1
  %502 = add i64 %499, 1
  store i64 %502, i64* %33, align 8
  %503 = zext i8 %501 to i32
  store i32 %503, i32* %480, align 4
  %504 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %505 = bitcast %"class.base::RefCountedMemory"* %504 to i8* (%"class.base::RefCountedMemory"*)***
  %506 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %505, align 8
  %507 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %506, align 8
  %508 = tail call i8* %507(%"class.base::RefCountedMemory"* %504) #11
  %509 = load i64, i64* %33, align 8
  %510 = getelementptr inbounds i8, i8* %508, i64 %509
  %511 = load i8, i8* %510, align 1
  store i8 %511, i8* %481, align 1
  %512 = load i64, i64* %33, align 8
  %513 = add i64 %512, 1
  store i64 %513, i64* %33, align 8
  %514 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %515 = bitcast %"class.base::RefCountedMemory"* %514 to i8* (%"class.base::RefCountedMemory"*)***
  %516 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %515, align 8
  %517 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %516, align 8
  %518 = tail call i8* %517(%"class.base::RefCountedMemory"* %514) #11
  %519 = load i64, i64* %33, align 8
  %520 = getelementptr inbounds i8, i8* %518, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = add i64 %519, 1
  store i64 %522, i64* %33, align 8
  %523 = zext i8 %521 to i32
  store i32 %523, i32* %482, align 4
  %524 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %525 = bitcast %"class.base::RefCountedMemory"* %524 to i8* (%"class.base::RefCountedMemory"*)***
  %526 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %525, align 8
  %527 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %526, align 8
  %528 = tail call i8* %527(%"class.base::RefCountedMemory"* %524) #11
  %529 = load i64, i64* %33, align 8
  %530 = getelementptr inbounds i8, i8* %528, i64 %529
  %531 = bitcast i8* %530 to i16*
  %532 = load i16, i16* %531, align 1
  %533 = add i64 %529, 2
  store i64 %533, i64* %33, align 8
  %534 = zext i16 %532 to i32
  store i32 %534, i32* %483, align 4
  %535 = load i64, i64* %33, align 8
  %536 = add i64 %535, 2
  store i64 %536, i64* %33, align 8
  %537 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %478, i64 1
  %538 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %537, %450
  br i1 %538, label %453, label %477

539:                                              ; preds = %542, %473
  %540 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %358, i64 1
  %541 = icmp eq %"struct.x11::Xkb::KeyType"* %540, %355
  br i1 %541, label %580, label %357

542:                                              ; preds = %473, %542
  %543 = phi %"struct.x11::Xkb::ModDef"* [ %578, %542 ], [ %475, %473 ]
  %544 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %543, i64 0, i32 0
  %545 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %543, i64 0, i32 1
  %546 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %543, i64 0, i32 2
  %547 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %548 = bitcast %"class.base::RefCountedMemory"* %547 to i8* (%"class.base::RefCountedMemory"*)***
  %549 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %548, align 8
  %550 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %549, align 8
  %551 = tail call i8* %550(%"class.base::RefCountedMemory"* %547) #11
  %552 = load i64, i64* %33, align 8
  %553 = getelementptr inbounds i8, i8* %551, i64 %552
  %554 = load i8, i8* %553, align 1
  %555 = add i64 %552, 1
  store i64 %555, i64* %33, align 8
  %556 = zext i8 %554 to i32
  store i32 %556, i32* %544, align 4
  %557 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %558 = bitcast %"class.base::RefCountedMemory"* %557 to i8* (%"class.base::RefCountedMemory"*)***
  %559 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %558, align 8
  %560 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %559, align 8
  %561 = tail call i8* %560(%"class.base::RefCountedMemory"* %557) #11
  %562 = load i64, i64* %33, align 8
  %563 = getelementptr inbounds i8, i8* %561, i64 %562
  %564 = load i8, i8* %563, align 1
  %565 = add i64 %562, 1
  store i64 %565, i64* %33, align 8
  %566 = zext i8 %564 to i32
  store i32 %566, i32* %545, align 4
  %567 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %568 = bitcast %"class.base::RefCountedMemory"* %567 to i8* (%"class.base::RefCountedMemory"*)***
  %569 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %568, align 8
  %570 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %569, align 8
  %571 = tail call i8* %570(%"class.base::RefCountedMemory"* %567) #11
  %572 = load i64, i64* %33, align 8
  %573 = getelementptr inbounds i8, i8* %571, i64 %572
  %574 = bitcast i8* %573 to i16*
  %575 = load i16, i16* %574, align 1
  %576 = add i64 %572, 2
  store i64 %576, i64* %33, align 8
  %577 = zext i16 %575 to i32
  store i32 %577, i32* %546, align 4
  %578 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %543, i64 1
  %579 = icmp eq %"struct.x11::Xkb::ModDef"* %578, %474
  br i1 %579, label %539, label %542

580:                                              ; preds = %539, %344, %348, %1
  %581 = and i32 %96, 2
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %750, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds i8, i8* %2, i64 72
  %585 = load i8, i8* %584, align 8, !range !2
  %586 = icmp eq i8 %585, 0
  br i1 %586, label %616, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds i8, i8* %2, i64 80
  %589 = bitcast i8* %588 to %"struct.x11::Xkb::KeySymMap"**
  %590 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %589, align 8
  %591 = icmp eq %"struct.x11::Xkb::KeySymMap"* %590, null
  br i1 %591, label %615, label %592

592:                                              ; preds = %587
  %593 = getelementptr inbounds i8, i8* %2, i64 88
  %594 = bitcast i8* %593 to %"struct.x11::Xkb::KeySymMap"**
  %595 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %594, align 8
  %596 = icmp eq %"struct.x11::Xkb::KeySymMap"* %595, %590
  br i1 %596, label %612, label %597

597:                                              ; preds = %592, %608
  %598 = phi %"struct.x11::Xkb::KeySymMap"* [ %599, %608 ], [ %595, %592 ]
  %599 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %598, i64 -1
  %600 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %598, i64 -1, i32 3, i32 0, i32 0
  %601 = load i32*, i32** %600, align 8
  %602 = icmp eq i32* %601, null
  br i1 %602, label %608, label %603

603:                                              ; preds = %597
  %604 = ptrtoint i32* %601 to i64
  %605 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %598, i64 -1, i32 3, i32 0, i32 1
  %606 = bitcast i32** %605 to i64*
  store i64 %604, i64* %606, align 8
  %607 = bitcast i32* %601 to i8*
  tail call void @_ZdlPv(i8* %607) #12
  br label %608

608:                                              ; preds = %603, %597
  %609 = icmp eq %"struct.x11::Xkb::KeySymMap"* %599, %590
  br i1 %609, label %610, label %597

610:                                              ; preds = %608
  %611 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %589, align 8
  br label %612

612:                                              ; preds = %610, %592
  %613 = phi %"struct.x11::Xkb::KeySymMap"* [ %611, %610 ], [ %590, %592 ]
  store %"struct.x11::Xkb::KeySymMap"* %590, %"struct.x11::Xkb::KeySymMap"** %594, align 8
  %614 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %613, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %614) #12
  br label %615

615:                                              ; preds = %612, %587
  store i8 0, i8* %584, align 8
  br label %616

616:                                              ; preds = %615, %583
  %617 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %617, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %584, align 8
  %618 = load i8, i8* %14, align 1
  %619 = icmp eq i8 %618, 0
  br i1 %619, label %750, label %620

620:                                              ; preds = %616
  %621 = zext i8 %618 to i64
  %622 = getelementptr inbounds i8, i8* %2, i64 88
  %623 = bitcast i8* %622 to %"struct.x11::Xkb::KeySymMap"**
  %624 = bitcast i8* %617 to %"class.std::__1::vector.382"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.382"* %624, i64 %621) #11
  %625 = bitcast i8* %617 to %"struct.x11::Xkb::KeySymMap"**
  %626 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %625, align 8
  %627 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %623, align 8
  %628 = icmp eq %"struct.x11::Xkb::KeySymMap"* %626, %627
  br i1 %628, label %750, label %629

629:                                              ; preds = %620, %732
  %630 = phi %"struct.x11::Xkb::KeySymMap"* [ %733, %732 ], [ %626, %620 ]
  %631 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 2
  %632 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 3, i32 0, i32 1
  %633 = bitcast i32** %632 to i64*
  %634 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 0, i32 0, i64 0
  %635 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %636 = bitcast %"class.base::RefCountedMemory"* %635 to i8* (%"class.base::RefCountedMemory"*)***
  %637 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %636, align 8
  %638 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %637, align 8
  %639 = tail call i8* %638(%"class.base::RefCountedMemory"* %635) #11
  %640 = load i64, i64* %33, align 8
  %641 = getelementptr inbounds i8, i8* %639, i64 %640
  %642 = load i8, i8* %641, align 1
  store i8 %642, i8* %634, align 1
  %643 = load i64, i64* %33, align 8
  %644 = add i64 %643, 1
  store i64 %644, i64* %33, align 8
  %645 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 0, i32 0, i64 1
  %646 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %647 = bitcast %"class.base::RefCountedMemory"* %646 to i8* (%"class.base::RefCountedMemory"*)***
  %648 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %647, align 8
  %649 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %648, align 8
  %650 = tail call i8* %649(%"class.base::RefCountedMemory"* %646) #11
  %651 = load i64, i64* %33, align 8
  %652 = getelementptr inbounds i8, i8* %650, i64 %651
  %653 = load i8, i8* %652, align 1
  store i8 %653, i8* %645, align 1
  %654 = load i64, i64* %33, align 8
  %655 = add i64 %654, 1
  store i64 %655, i64* %33, align 8
  %656 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 0, i32 0, i64 2
  %657 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %658 = bitcast %"class.base::RefCountedMemory"* %657 to i8* (%"class.base::RefCountedMemory"*)***
  %659 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %658, align 8
  %660 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %659, align 8
  %661 = tail call i8* %660(%"class.base::RefCountedMemory"* %657) #11
  %662 = load i64, i64* %33, align 8
  %663 = getelementptr inbounds i8, i8* %661, i64 %662
  %664 = load i8, i8* %663, align 1
  store i8 %664, i8* %656, align 1
  %665 = load i64, i64* %33, align 8
  %666 = add i64 %665, 1
  store i64 %666, i64* %33, align 8
  %667 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 0, i32 0, i64 3
  %668 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %669 = bitcast %"class.base::RefCountedMemory"* %668 to i8* (%"class.base::RefCountedMemory"*)***
  %670 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %669, align 8
  %671 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %670, align 8
  %672 = tail call i8* %671(%"class.base::RefCountedMemory"* %668) #11
  %673 = load i64, i64* %33, align 8
  %674 = getelementptr inbounds i8, i8* %672, i64 %673
  %675 = load i8, i8* %674, align 1
  store i8 %675, i8* %667, align 1
  %676 = load i64, i64* %33, align 8
  %677 = add i64 %676, 1
  store i64 %677, i64* %33, align 8
  %678 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %679 = bitcast %"class.base::RefCountedMemory"* %678 to i8* (%"class.base::RefCountedMemory"*)***
  %680 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %679, align 8
  %681 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %680, align 8
  %682 = tail call i8* %681(%"class.base::RefCountedMemory"* %678) #11
  %683 = load i64, i64* %33, align 8
  %684 = getelementptr inbounds i8, i8* %682, i64 %683
  %685 = load i8, i8* %684, align 1
  %686 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 1
  %687 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 0, i32 3
  %688 = bitcast %"class.std::__1::vector.385"* %687 to i64*
  store i8 %685, i8* %686, align 1
  %689 = load i64, i64* %33, align 8
  %690 = add i64 %689, 1
  store i64 %690, i64* %33, align 8
  %691 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %692 = bitcast %"class.base::RefCountedMemory"* %691 to i8* (%"class.base::RefCountedMemory"*)***
  %693 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %692, align 8
  %694 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %693, align 8
  %695 = tail call i8* %694(%"class.base::RefCountedMemory"* %691) #11
  %696 = load i64, i64* %33, align 8
  %697 = getelementptr inbounds i8, i8* %695, i64 %696
  %698 = load i8, i8* %697, align 1
  store i8 %698, i8* %631, align 1
  %699 = load i64, i64* %33, align 8
  %700 = add i64 %699, 1
  store i64 %700, i64* %33, align 8
  %701 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %702 = bitcast %"class.base::RefCountedMemory"* %701 to i8* (%"class.base::RefCountedMemory"*)***
  %703 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %702, align 8
  %704 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %703, align 8
  %705 = tail call i8* %704(%"class.base::RefCountedMemory"* %701) #11
  %706 = load i64, i64* %33, align 8
  %707 = getelementptr inbounds i8, i8* %705, i64 %706
  %708 = bitcast i8* %707 to i16*
  %709 = load i16, i16* %708, align 1
  %710 = add i64 %706, 2
  store i64 %710, i64* %33, align 8
  %711 = zext i16 %709 to i64
  %712 = load i64, i64* %633, align 8
  %713 = load i64, i64* %688, align 8
  %714 = sub i64 %712, %713
  %715 = ashr exact i64 %714, 2
  %716 = icmp ult i64 %715, %711
  %717 = inttoptr i64 %713 to i32*
  br i1 %716, label %718, label %723

718:                                              ; preds = %629
  %719 = sub nsw i64 %711, %715
  tail call void @_ZNSt3__16vectorIN3x116KeySymENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.385"* %687, i64 %719) #11
  %720 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %687, i64 0, i32 0, i32 0
  %721 = load i32*, i32** %720, align 8
  %722 = load i32*, i32** %632, align 8
  br label %728

723:                                              ; preds = %629
  %724 = inttoptr i64 %712 to i32*
  %725 = icmp ugt i64 %715, %711
  br i1 %725, label %726, label %728

726:                                              ; preds = %723
  %727 = getelementptr inbounds i32, i32* %717, i64 %711
  store i32* %727, i32** %632, align 8
  br label %728

728:                                              ; preds = %718, %723, %726
  %729 = phi i32* [ %722, %718 ], [ %724, %723 ], [ %727, %726 ]
  %730 = phi i32* [ %721, %718 ], [ %717, %723 ], [ %717, %726 ]
  %731 = icmp eq i32* %730, %729
  br i1 %731, label %732, label %735

732:                                              ; preds = %735, %728
  %733 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %630, i64 1
  %734 = icmp eq %"struct.x11::Xkb::KeySymMap"* %733, %627
  br i1 %734, label %750, label %629

735:                                              ; preds = %728, %735
  %736 = phi i32* [ %748, %735 ], [ %730, %728 ]
  %737 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %738 = bitcast %"class.base::RefCountedMemory"* %737 to i8* (%"class.base::RefCountedMemory"*)***
  %739 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %738, align 8
  %740 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %739, align 8
  %741 = tail call i8* %740(%"class.base::RefCountedMemory"* %737) #11
  %742 = load i64, i64* %33, align 8
  %743 = getelementptr inbounds i8, i8* %741, i64 %742
  %744 = bitcast i8* %743 to i32*
  %745 = load i32, i32* %744, align 1
  store i32 %745, i32* %736, align 4
  %746 = load i64, i64* %33, align 8
  %747 = add i64 %746, 4
  store i64 %747, i64* %33, align 8
  %748 = getelementptr inbounds i32, i32* %736, i64 1
  %749 = icmp eq i32* %748, %729
  br i1 %749, label %732, label %735

750:                                              ; preds = %732, %616, %620, %580
  %751 = and i32 %96, 16
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %883, label %753

753:                                              ; preds = %750
  %754 = getelementptr inbounds i8, i8* %2, i64 104
  %755 = load i8, i8* %754, align 8, !range !2
  %756 = icmp eq i8 %755, 0
  br i1 %756, label %767, label %757

757:                                              ; preds = %753
  %758 = getelementptr inbounds i8, i8* %2, i64 112
  %759 = bitcast i8* %758 to i8**
  %760 = load i8*, i8** %759, align 8
  %761 = icmp eq i8* %760, null
  br i1 %761, label %766, label %762

762:                                              ; preds = %757
  %763 = ptrtoint i8* %760 to i64
  %764 = getelementptr inbounds i8, i8* %2, i64 120
  %765 = bitcast i8* %764 to i64*
  store i64 %763, i64* %765, align 8
  tail call void @_ZdlPv(i8* nonnull %760) #12
  br label %766

766:                                              ; preds = %762, %757
  store i8 0, i8* %754, align 8
  br label %767

767:                                              ; preds = %753, %766
  %768 = getelementptr inbounds i8, i8* %2, i64 112
  %769 = bitcast i8* %768 to %"class.std::__1::vector.271"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %768, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %754, align 8
  %770 = getelementptr inbounds i8, i8* %2, i64 136
  %771 = load i8, i8* %770, align 8, !range !2
  %772 = icmp eq i8 %771, 0
  %773 = getelementptr inbounds i8, i8* %2, i64 144
  br i1 %772, label %774, label %775

774:                                              ; preds = %767
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %773, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %770, align 8
  br label %796

775:                                              ; preds = %767
  %776 = bitcast i8* %773 to %"union.x11::Xkb::Action"**
  %777 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %776, align 8
  %778 = icmp eq %"union.x11::Xkb::Action"* %777, null
  br i1 %778, label %779, label %780

779:                                              ; preds = %775
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %773, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %770, align 8
  br label %787

780:                                              ; preds = %775
  %781 = ptrtoint %"union.x11::Xkb::Action"* %777 to i64
  %782 = getelementptr inbounds i8, i8* %2, i64 152
  %783 = bitcast i8* %782 to i64*
  store i64 %781, i64* %783, align 8
  %784 = bitcast %"union.x11::Xkb::Action"* %777 to i8*
  tail call void @_ZdlPv(i8* %784) #12
  %785 = load i8, i8* %754, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %773, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %770, align 8
  %786 = icmp eq i8 %785, 0
  br i1 %786, label %795, label %787, !prof !3

787:                                              ; preds = %779, %780
  %788 = getelementptr inbounds i8, i8* %2, i64 120
  %789 = bitcast i8* %788 to i64*
  %790 = load i64, i64* %789, align 8
  %791 = bitcast i8* %768 to i64*
  %792 = load i64, i64* %791, align 8
  %793 = inttoptr i64 %792 to i8*
  %794 = inttoptr i64 %790 to i8*
  br label %796

795:                                              ; preds = %780
  tail call void @llvm.trap() #11
  unreachable

796:                                              ; preds = %787, %774
  %797 = phi i8* [ %794, %787 ], [ null, %774 ]
  %798 = phi i8* [ %793, %787 ], [ null, %774 ]
  %799 = phi i64 [ %792, %787 ], [ 0, %774 ]
  %800 = phi i64 [ %790, %787 ], [ 0, %774 ]
  %801 = bitcast i8* %773 to %"class.std::__1::vector.407"*
  %802 = getelementptr inbounds i8, i8* %2, i64 120
  %803 = bitcast i8* %802 to i8**
  %804 = getelementptr inbounds i8, i8* %2, i64 152
  %805 = bitcast i8* %804 to %"union.x11::Xkb::Action"**
  %806 = bitcast i8* %804 to i64*
  %807 = bitcast i8* %773 to i64*
  %808 = load i8, i8* %18, align 1
  %809 = zext i8 %808 to i64
  %810 = sub i64 %800, %799
  %811 = icmp ult i64 %810, %809
  %812 = inttoptr i64 %799 to i8*
  br i1 %811, label %813, label %818

813:                                              ; preds = %796
  %814 = sub i64 %809, %810
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.271"* %769, i64 %814) #11
  %815 = bitcast i8* %768 to i8**
  %816 = load i8*, i8** %815, align 8
  %817 = load i8*, i8** %803, align 8
  br label %822

818:                                              ; preds = %796
  %819 = icmp ugt i64 %810, %809
  br i1 %819, label %820, label %822

820:                                              ; preds = %818
  %821 = getelementptr inbounds i8, i8* %812, i64 %809
  store i8* %821, i8** %803, align 8
  br label %822

822:                                              ; preds = %813, %818, %820
  %823 = phi i8* [ %817, %813 ], [ %797, %818 ], [ %821, %820 ]
  %824 = phi i8* [ %816, %813 ], [ %798, %818 ], [ %798, %820 ]
  %825 = icmp eq i8* %824, %823
  br i1 %825, label %826, label %855

826:                                              ; preds = %822
  %827 = load i64, i64* %33, align 8
  br label %828

828:                                              ; preds = %855, %826
  %829 = phi i64 [ %827, %826 ], [ %866, %855 ]
  %830 = sub i64 0, %829
  %831 = and i64 %830, 3
  %832 = add i64 %831, %829
  store i64 %832, i64* %33, align 8
  %833 = load i16, i16* %17, align 2
  %834 = zext i16 %833 to i64
  %835 = load i64, i64* %806, align 8
  %836 = load i64, i64* %807, align 8
  %837 = sub i64 %835, %836
  %838 = ashr exact i64 %837, 5
  %839 = icmp ult i64 %838, %834
  %840 = inttoptr i64 %836 to %"union.x11::Xkb::Action"*
  br i1 %839, label %841, label %846

841:                                              ; preds = %828
  %842 = sub nsw i64 %834, %838
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ActionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.407"* %801, i64 %842) #11
  %843 = bitcast i8* %773 to %"union.x11::Xkb::Action"**
  %844 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %843, align 8
  %845 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %805, align 8
  br label %851

846:                                              ; preds = %828
  %847 = inttoptr i64 %835 to %"union.x11::Xkb::Action"*
  %848 = icmp ugt i64 %838, %834
  br i1 %848, label %849, label %851

849:                                              ; preds = %846
  %850 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %840, i64 %834
  store %"union.x11::Xkb::Action"* %850, %"union.x11::Xkb::Action"** %805, align 8
  br label %851

851:                                              ; preds = %841, %846, %849
  %852 = phi %"union.x11::Xkb::Action"* [ %845, %841 ], [ %847, %846 ], [ %850, %849 ]
  %853 = phi %"union.x11::Xkb::Action"* [ %844, %841 ], [ %840, %846 ], [ %840, %849 ]
  %854 = icmp eq %"union.x11::Xkb::Action"* %853, %852
  br i1 %854, label %883, label %869

855:                                              ; preds = %822, %855
  %856 = phi i8* [ %867, %855 ], [ %824, %822 ]
  %857 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %858 = bitcast %"class.base::RefCountedMemory"* %857 to i8* (%"class.base::RefCountedMemory"*)***
  %859 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %858, align 8
  %860 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %859, align 8
  %861 = tail call i8* %860(%"class.base::RefCountedMemory"* %857) #11
  %862 = load i64, i64* %33, align 8
  %863 = getelementptr inbounds i8, i8* %861, i64 %862
  %864 = load i8, i8* %863, align 1
  store i8 %864, i8* %856, align 1
  %865 = load i64, i64* %33, align 8
  %866 = add i64 %865, 1
  store i64 %866, i64* %33, align 8
  %867 = getelementptr inbounds i8, i8* %856, i64 1
  %868 = icmp eq i8* %867, %823
  br i1 %868, label %828, label %855

869:                                              ; preds = %851, %869
  %870 = phi %"union.x11::Xkb::Action"* [ %881, %869 ], [ %853, %851 ]
  %871 = bitcast %"union.x11::Xkb::Action"* %870 to i8*
  %872 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %873 = bitcast %"class.base::RefCountedMemory"* %872 to i8* (%"class.base::RefCountedMemory"*)***
  %874 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %873, align 8
  %875 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %874, align 8
  %876 = tail call i8* %875(%"class.base::RefCountedMemory"* %872) #11
  %877 = load i64, i64* %33, align 8
  %878 = getelementptr inbounds i8, i8* %876, i64 %877
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %871, i8* align 1 %878, i64 32, i1 false) #11
  %879 = load i64, i64* %33, align 8
  %880 = add i64 %879, 32
  store i64 %880, i64* %33, align 8
  %881 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %870, i64 1
  %882 = icmp eq %"union.x11::Xkb::Action"* %881, %852
  br i1 %882, label %883, label %869

883:                                              ; preds = %869, %851, %750
  %884 = and i32 %96, 32
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %942, label %886

886:                                              ; preds = %883
  %887 = getelementptr inbounds i8, i8* %2, i64 168
  %888 = load i8, i8* %887, align 8, !range !2
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %901, label %890

890:                                              ; preds = %886
  %891 = getelementptr inbounds i8, i8* %2, i64 176
  %892 = bitcast i8* %891 to %"struct.x11::Xkb::SetBehavior"**
  %893 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %892, align 8
  %894 = icmp eq %"struct.x11::Xkb::SetBehavior"* %893, null
  br i1 %894, label %900, label %895

895:                                              ; preds = %890
  %896 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %893 to i64
  %897 = getelementptr inbounds i8, i8* %2, i64 184
  %898 = bitcast i8* %897 to i64*
  store i64 %896, i64* %898, align 8
  %899 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %893, i64 0, i32 0
  tail call void @_ZdlPv(i8* %899) #12
  br label %900

900:                                              ; preds = %895, %890
  store i8 0, i8* %887, align 8
  br label %901

901:                                              ; preds = %900, %886
  %902 = getelementptr inbounds i8, i8* %2, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %902, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %887, align 8
  %903 = load i8, i8* %21, align 1
  %904 = icmp eq i8 %903, 0
  br i1 %904, label %942, label %905

905:                                              ; preds = %901
  %906 = zext i8 %903 to i64
  %907 = getelementptr inbounds i8, i8* %2, i64 184
  %908 = bitcast i8* %907 to %"struct.x11::Xkb::SetBehavior"**
  %909 = bitcast i8* %902 to %"class.std::__1::vector.420"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb11SetBehaviorENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.420"* %909, i64 %906) #11
  %910 = bitcast i8* %902 to %"struct.x11::Xkb::SetBehavior"**
  %911 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %910, align 8
  %912 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %908, align 8
  %913 = icmp eq %"struct.x11::Xkb::SetBehavior"* %911, %912
  br i1 %913, label %942, label %914

914:                                              ; preds = %905, %914
  %915 = phi %"struct.x11::Xkb::SetBehavior"* [ %940, %914 ], [ %911, %905 ]
  %916 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %915, i64 0, i32 0
  %917 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %915, i64 0, i32 1
  %918 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %919 = bitcast %"class.base::RefCountedMemory"* %918 to i8* (%"class.base::RefCountedMemory"*)***
  %920 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %919, align 8
  %921 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %920, align 8
  %922 = tail call i8* %921(%"class.base::RefCountedMemory"* %918) #11
  %923 = load i64, i64* %33, align 8
  %924 = getelementptr inbounds i8, i8* %922, i64 %923
  %925 = load i8, i8* %924, align 1
  store i8 %925, i8* %916, align 1
  %926 = load i64, i64* %33, align 8
  %927 = add i64 %926, 1
  store i64 %927, i64* %33, align 8
  %928 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %929 = bitcast %"class.base::RefCountedMemory"* %928 to i8* (%"class.base::RefCountedMemory"*)***
  %930 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %929, align 8
  %931 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %930, align 8
  %932 = tail call i8* %931(%"class.base::RefCountedMemory"* %928) #11
  %933 = load i64, i64* %33, align 8
  %934 = getelementptr inbounds i8, i8* %932, i64 %933
  %935 = bitcast i8* %934 to i16*
  %936 = bitcast %"union.x11::Xkb::Behavior"* %917 to i16*
  %937 = load i16, i16* %935, align 1
  store i16 %937, i16* %936, align 1
  %938 = load i64, i64* %33, align 8
  %939 = add i64 %938, 3
  store i64 %939, i64* %33, align 8
  %940 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %915, i64 1
  %941 = icmp eq %"struct.x11::Xkb::SetBehavior"* %940, %912
  br i1 %941, label %942, label %914

942:                                              ; preds = %914, %901, %905, %883
  %943 = and i32 %96, 64
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %993, label %945

945:                                              ; preds = %942
  %946 = getelementptr inbounds i8, i8* %2, i64 200
  %947 = load i8, i8* %946, align 8, !range !2
  %948 = icmp eq i8 %947, 0
  br i1 %948, label %960, label %949

949:                                              ; preds = %945
  %950 = getelementptr inbounds i8, i8* %2, i64 208
  %951 = bitcast i8* %950 to i32**
  %952 = load i32*, i32** %951, align 8
  %953 = icmp eq i32* %952, null
  br i1 %953, label %959, label %954

954:                                              ; preds = %949
  %955 = ptrtoint i32* %952 to i64
  %956 = getelementptr inbounds i8, i8* %2, i64 216
  %957 = bitcast i8* %956 to i64*
  store i64 %955, i64* %957, align 8
  %958 = bitcast i32* %952 to i8*
  tail call void @_ZdlPv(i8* %958) #12
  br label %959

959:                                              ; preds = %954, %949
  store i8 0, i8* %946, align 8
  br label %960

960:                                              ; preds = %959, %945
  %961 = getelementptr inbounds i8, i8* %2, i64 208
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %961, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %946, align 8
  %962 = load i32, i32* %32, align 4
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %974, label %964

964:                                              ; preds = %960
  %965 = zext i32 %962 to i64
  %966 = tail call i64 @llvm.ctpop.i64(i64 %965) #11, !range !4
  %967 = getelementptr inbounds i8, i8* %2, i64 216
  %968 = bitcast i8* %967 to i32**
  %969 = bitcast i8* %961 to %"class.std::__1::vector.432"*
  tail call void @_ZNSt3__16vectorIN3x117ModMaskENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.432"* %969, i64 %966) #11
  %970 = bitcast i8* %961 to i32**
  %971 = load i32*, i32** %970, align 8
  %972 = load i32*, i32** %968, align 8
  %973 = icmp eq i32* %971, %972
  br i1 %973, label %974, label %979

974:                                              ; preds = %979, %960, %964
  %975 = load i64, i64* %33, align 8
  %976 = sub i64 0, %975
  %977 = and i64 %976, 3
  %978 = add i64 %977, %975
  store i64 %978, i64* %33, align 8
  br label %993

979:                                              ; preds = %964, %979
  %980 = phi i32* [ %991, %979 ], [ %971, %964 ]
  %981 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %982 = bitcast %"class.base::RefCountedMemory"* %981 to i8* (%"class.base::RefCountedMemory"*)***
  %983 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %982, align 8
  %984 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %983, align 8
  %985 = tail call i8* %984(%"class.base::RefCountedMemory"* %981) #11
  %986 = load i64, i64* %33, align 8
  %987 = getelementptr inbounds i8, i8* %985, i64 %986
  %988 = load i8, i8* %987, align 1
  %989 = add i64 %986, 1
  store i64 %989, i64* %33, align 8
  %990 = zext i8 %988 to i32
  store i32 %990, i32* %980, align 4
  %991 = getelementptr inbounds i32, i32* %980, i64 1
  %992 = icmp eq i32* %991, %972
  br i1 %992, label %974, label %979

993:                                              ; preds = %942, %974
  %994 = and i32 %96, 8
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %1055, label %996

996:                                              ; preds = %993
  %997 = getelementptr inbounds i8, i8* %2, i64 232
  %998 = load i8, i8* %997, align 8, !range !2
  %999 = icmp eq i8 %998, 0
  br i1 %999, label %1011, label %1000

1000:                                             ; preds = %996
  %1001 = getelementptr inbounds i8, i8* %2, i64 240
  %1002 = bitcast i8* %1001 to %"struct.x11::Xkb::SetExplicit"**
  %1003 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1002, align 8
  %1004 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1003, null
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %1000
  %1006 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %1003 to i64
  %1007 = getelementptr inbounds i8, i8* %2, i64 248
  %1008 = bitcast i8* %1007 to i64*
  store i64 %1006, i64* %1008, align 8
  %1009 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1003, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1009) #12
  br label %1010

1010:                                             ; preds = %1005, %1000
  store i8 0, i8* %997, align 8
  br label %1011

1011:                                             ; preds = %1010, %996
  %1012 = getelementptr inbounds i8, i8* %2, i64 240
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1012, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %997, align 8
  %1013 = load i8, i8* %24, align 1
  %1014 = icmp eq i8 %1013, 0
  br i1 %1014, label %1024, label %1015

1015:                                             ; preds = %1011
  %1016 = zext i8 %1013 to i64
  %1017 = getelementptr inbounds i8, i8* %2, i64 248
  %1018 = bitcast i8* %1017 to %"struct.x11::Xkb::SetExplicit"**
  %1019 = bitcast i8* %1012 to %"class.std::__1::vector.444"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb11SetExplicitENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.444"* %1019, i64 %1016) #11
  %1020 = bitcast i8* %1012 to %"struct.x11::Xkb::SetExplicit"**
  %1021 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1020, align 8
  %1022 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1018, align 8
  %1023 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1021, %1022
  br i1 %1023, label %1024, label %1029

1024:                                             ; preds = %1029, %1011, %1015
  %1025 = load i64, i64* %33, align 8
  %1026 = sub i64 0, %1025
  %1027 = and i64 %1026, 3
  %1028 = add i64 %1027, %1025
  store i64 %1028, i64* %33, align 8
  br label %1055

1029:                                             ; preds = %1015, %1029
  %1030 = phi %"struct.x11::Xkb::SetExplicit"* [ %1053, %1029 ], [ %1021, %1015 ]
  %1031 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1030, i64 0, i32 0
  %1032 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1030, i64 0, i32 1
  %1033 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1034 = bitcast %"class.base::RefCountedMemory"* %1033 to i8* (%"class.base::RefCountedMemory"*)***
  %1035 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1034, align 8
  %1036 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1035, align 8
  %1037 = tail call i8* %1036(%"class.base::RefCountedMemory"* %1033) #11
  %1038 = load i64, i64* %33, align 8
  %1039 = getelementptr inbounds i8, i8* %1037, i64 %1038
  %1040 = load i8, i8* %1039, align 1
  store i8 %1040, i8* %1031, align 1
  %1041 = load i64, i64* %33, align 8
  %1042 = add i64 %1041, 1
  store i64 %1042, i64* %33, align 8
  %1043 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1044 = bitcast %"class.base::RefCountedMemory"* %1043 to i8* (%"class.base::RefCountedMemory"*)***
  %1045 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1044, align 8
  %1046 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1045, align 8
  %1047 = tail call i8* %1046(%"class.base::RefCountedMemory"* %1043) #11
  %1048 = load i64, i64* %33, align 8
  %1049 = getelementptr inbounds i8, i8* %1047, i64 %1048
  %1050 = load i8, i8* %1049, align 1
  %1051 = add i64 %1048, 1
  store i64 %1051, i64* %33, align 8
  %1052 = zext i8 %1050 to i32
  store i32 %1052, i32* %1032, align 4
  %1053 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1030, i64 1
  %1054 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1053, %1022
  br i1 %1054, label %1024, label %1029

1055:                                             ; preds = %993, %1024
  %1056 = and i32 %96, 4
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1117, label %1058

1058:                                             ; preds = %1055
  %1059 = getelementptr inbounds i8, i8* %2, i64 264
  %1060 = load i8, i8* %1059, align 8, !range !2
  %1061 = icmp eq i8 %1060, 0
  br i1 %1061, label %1073, label %1062

1062:                                             ; preds = %1058
  %1063 = getelementptr inbounds i8, i8* %2, i64 272
  %1064 = bitcast i8* %1063 to %"struct.x11::Xkb::KeyModMap"**
  %1065 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1064, align 8
  %1066 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1065, null
  br i1 %1066, label %1072, label %1067

1067:                                             ; preds = %1062
  %1068 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %1065 to i64
  %1069 = getelementptr inbounds i8, i8* %2, i64 280
  %1070 = bitcast i8* %1069 to i64*
  store i64 %1068, i64* %1070, align 8
  %1071 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1065, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1071) #12
  br label %1072

1072:                                             ; preds = %1067, %1062
  store i8 0, i8* %1059, align 8
  br label %1073

1073:                                             ; preds = %1072, %1058
  %1074 = getelementptr inbounds i8, i8* %2, i64 272
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1074, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1059, align 8
  %1075 = load i8, i8* %27, align 1
  %1076 = icmp eq i8 %1075, 0
  br i1 %1076, label %1086, label %1077

1077:                                             ; preds = %1073
  %1078 = zext i8 %1075 to i64
  %1079 = getelementptr inbounds i8, i8* %2, i64 280
  %1080 = bitcast i8* %1079 to %"struct.x11::Xkb::KeyModMap"**
  %1081 = bitcast i8* %1074 to %"class.std::__1::vector.456"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb9KeyModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.456"* %1081, i64 %1078) #11
  %1082 = bitcast i8* %1074 to %"struct.x11::Xkb::KeyModMap"**
  %1083 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1082, align 8
  %1084 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1080, align 8
  %1085 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1083, %1084
  br i1 %1085, label %1086, label %1091

1086:                                             ; preds = %1091, %1073, %1077
  %1087 = load i64, i64* %33, align 8
  %1088 = sub i64 0, %1087
  %1089 = and i64 %1088, 3
  %1090 = add i64 %1089, %1087
  store i64 %1090, i64* %33, align 8
  br label %1117

1091:                                             ; preds = %1077, %1091
  %1092 = phi %"struct.x11::Xkb::KeyModMap"* [ %1115, %1091 ], [ %1083, %1077 ]
  %1093 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1092, i64 0, i32 0
  %1094 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1092, i64 0, i32 1
  %1095 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1096 = bitcast %"class.base::RefCountedMemory"* %1095 to i8* (%"class.base::RefCountedMemory"*)***
  %1097 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1096, align 8
  %1098 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1097, align 8
  %1099 = tail call i8* %1098(%"class.base::RefCountedMemory"* %1095) #11
  %1100 = load i64, i64* %33, align 8
  %1101 = getelementptr inbounds i8, i8* %1099, i64 %1100
  %1102 = load i8, i8* %1101, align 1
  store i8 %1102, i8* %1093, align 1
  %1103 = load i64, i64* %33, align 8
  %1104 = add i64 %1103, 1
  store i64 %1104, i64* %33, align 8
  %1105 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1106 = bitcast %"class.base::RefCountedMemory"* %1105 to i8* (%"class.base::RefCountedMemory"*)***
  %1107 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1106, align 8
  %1108 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1107, align 8
  %1109 = tail call i8* %1108(%"class.base::RefCountedMemory"* %1105) #11
  %1110 = load i64, i64* %33, align 8
  %1111 = getelementptr inbounds i8, i8* %1109, i64 %1110
  %1112 = load i8, i8* %1111, align 1
  %1113 = add i64 %1110, 1
  store i64 %1113, i64* %33, align 8
  %1114 = zext i8 %1112 to i32
  store i32 %1114, i32* %1094, align 4
  %1115 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1092, i64 1
  %1116 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1115, %1084
  br i1 %1116, label %1086, label %1091

1117:                                             ; preds = %1055, %1086
  %1118 = trunc i16 %94 to i8
  %1119 = icmp slt i8 %1118, 0
  br i1 %1119, label %1120, label %1175

1120:                                             ; preds = %1117
  %1121 = getelementptr inbounds i8, i8* %2, i64 296
  %1122 = load i8, i8* %1121, align 8, !range !2
  %1123 = icmp eq i8 %1122, 0
  br i1 %1123, label %1135, label %1124

1124:                                             ; preds = %1120
  %1125 = getelementptr inbounds i8, i8* %2, i64 304
  %1126 = bitcast i8* %1125 to %"struct.x11::Xkb::KeyVModMap"**
  %1127 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1126, align 8
  %1128 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1127, null
  br i1 %1128, label %1134, label %1129

1129:                                             ; preds = %1124
  %1130 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %1127 to i64
  %1131 = getelementptr inbounds i8, i8* %2, i64 312
  %1132 = bitcast i8* %1131 to i64*
  store i64 %1130, i64* %1132, align 8
  %1133 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1127, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1133) #12
  br label %1134

1134:                                             ; preds = %1129, %1124
  store i8 0, i8* %1121, align 8
  br label %1135

1135:                                             ; preds = %1134, %1120
  %1136 = getelementptr inbounds i8, i8* %2, i64 304
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1136, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1121, align 8
  %1137 = load i8, i8* %30, align 1
  %1138 = icmp eq i8 %1137, 0
  br i1 %1138, label %1175, label %1139

1139:                                             ; preds = %1135
  %1140 = zext i8 %1137 to i64
  %1141 = getelementptr inbounds i8, i8* %2, i64 312
  %1142 = bitcast i8* %1141 to %"struct.x11::Xkb::KeyVModMap"**
  %1143 = bitcast i8* %1136 to %"class.std::__1::vector.468"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb10KeyVModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.468"* %1143, i64 %1140) #11
  %1144 = bitcast i8* %1136 to %"struct.x11::Xkb::KeyVModMap"**
  %1145 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1144, align 8
  %1146 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1142, align 8
  %1147 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1145, %1146
  br i1 %1147, label %1175, label %1148

1148:                                             ; preds = %1139, %1148
  %1149 = phi %"struct.x11::Xkb::KeyVModMap"* [ %1173, %1148 ], [ %1145, %1139 ]
  %1150 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1149, i64 0, i32 0
  %1151 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1149, i64 0, i32 1
  %1152 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1153 = bitcast %"class.base::RefCountedMemory"* %1152 to i8* (%"class.base::RefCountedMemory"*)***
  %1154 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1153, align 8
  %1155 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1154, align 8
  %1156 = tail call i8* %1155(%"class.base::RefCountedMemory"* %1152) #11
  %1157 = load i64, i64* %33, align 8
  %1158 = getelementptr inbounds i8, i8* %1156, i64 %1157
  %1159 = load i8, i8* %1158, align 1
  store i8 %1159, i8* %1150, align 1
  %1160 = load i64, i64* %33, align 8
  %1161 = add i64 %1160, 2
  store i64 %1161, i64* %33, align 8
  %1162 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %34, align 8
  %1163 = bitcast %"class.base::RefCountedMemory"* %1162 to i8* (%"class.base::RefCountedMemory"*)***
  %1164 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1163, align 8
  %1165 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1164, align 8
  %1166 = tail call i8* %1165(%"class.base::RefCountedMemory"* %1162) #11
  %1167 = load i64, i64* %33, align 8
  %1168 = getelementptr inbounds i8, i8* %1166, i64 %1167
  %1169 = bitcast i8* %1168 to i16*
  %1170 = load i16, i16* %1169, align 1
  %1171 = add i64 %1167, 2
  store i64 %1171, i64* %33, align 8
  %1172 = zext i16 %1170 to i32
  store i32 %1172, i32* %1151, align 4
  %1173 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1149, i64 1
  %1174 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1173, %1146
  br i1 %1174, label %1175, label %1148

1175:                                             ; preds = %1148, %1135, %1139, %1117
  %1176 = load i64, i64* %33, align 8
  %1177 = sub i64 0, %1176
  %1178 = and i64 %1177, 3
  %1179 = add i64 %1178, %1176
  store i64 %1179, i64* %33, align 8
  ret %"struct.x11::Xkb::GetMapReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6SetMapERKNS0_13SetMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetMapRequest"* dereferenceable(328)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca i8, align 1
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.std::__1::back_insert_iterator", align 8
  %30 = alloca %"class.std::__1::back_insert_iterator", align 8
  %31 = alloca %"class.std::__1::back_insert_iterator", align 8
  %32 = alloca %"class.std::__1::back_insert_iterator", align 8
  %33 = alloca %"class.std::__1::back_insert_iterator", align 8
  %34 = alloca %"class.std::__1::back_insert_iterator", align 8
  %35 = alloca %"class.std::__1::back_insert_iterator", align 8
  %36 = alloca %"class.std::__1::back_insert_iterator", align 8
  %37 = alloca %"class.std::__1::back_insert_iterator", align 8
  %38 = alloca %"class.std::__1::back_insert_iterator", align 8
  %39 = alloca %"class.std::__1::back_insert_iterator", align 8
  %40 = alloca %"class.std::__1::back_insert_iterator", align 8
  %41 = alloca %"class.std::__1::back_insert_iterator", align 8
  %42 = alloca %"class.std::__1::back_insert_iterator", align 8
  %43 = alloca %"class.std::__1::back_insert_iterator", align 8
  %44 = alloca %"class.std::__1::back_insert_iterator", align 8
  %45 = alloca %"class.std::__1::back_insert_iterator", align 8
  %46 = alloca %"class.std::__1::back_insert_iterator", align 8
  %47 = alloca %"class.std::__1::back_insert_iterator", align 8
  %48 = alloca %"class.std::__1::back_insert_iterator", align 8
  %49 = alloca %"class.std::__1::back_insert_iterator", align 8
  %50 = alloca %"class.std::__1::back_insert_iterator", align 8
  %51 = alloca %"class.std::__1::back_insert_iterator", align 8
  %52 = alloca %"class.std::__1::back_insert_iterator", align 8
  %53 = alloca i8, align 1
  %54 = alloca %"class.std::__1::back_insert_iterator", align 8
  %55 = alloca i8, align 1
  %56 = alloca %"class.std::__1::back_insert_iterator", align 8
  %57 = alloca %"class.std::__1::back_insert_iterator", align 8
  %58 = alloca %"class.std::__1::back_insert_iterator", align 8
  %59 = alloca %"class.std::__1::back_insert_iterator", align 8
  %60 = alloca %"class.std::__1::back_insert_iterator", align 8
  %61 = alloca %"class.std::__1::back_insert_iterator", align 8
  %62 = alloca %"class.std::__1::back_insert_iterator", align 8
  %63 = alloca i8, align 1
  %64 = alloca %"class.std::__1::back_insert_iterator", align 8
  %65 = alloca %"class.std::__1::back_insert_iterator", align 8
  %66 = alloca %"class.std::__1::back_insert_iterator", align 8
  %67 = alloca i8, align 1
  %68 = alloca %"class.std::__1::back_insert_iterator", align 8
  %69 = alloca %"class.std::__1::back_insert_iterator", align 8
  %70 = alloca %"class.std::__1::back_insert_iterator", align 8
  %71 = alloca i8, align 1
  %72 = alloca %"class.x11::WriteBuffer", align 8
  %73 = alloca i8, align 1
  %74 = alloca i8, align 1
  %75 = alloca i16, align 2
  %76 = alloca i16, align 2
  %77 = alloca i16, align 2
  %78 = alloca i8, align 1
  %79 = alloca i8, align 1
  %80 = alloca i8, align 1
  %81 = alloca i16, align 2
  %82 = alloca i8, align 1
  %83 = alloca i16, align 2
  %84 = alloca i8, align 1
  %85 = alloca i16, align 2
  %86 = alloca i16, align 2
  %87 = alloca i8, align 1
  %88 = alloca i8, align 1
  %89 = alloca i16, align 2
  %90 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %91 = load %"class.x11::Connection"*, %"class.x11::Connection"** %90, align 8
  %92 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %91) #11
  br i1 %92, label %93, label %824

93:                                               ; preds = %2
  %94 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %95 = load i8, i8* %94, align 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %824, label %97

97:                                               ; preds = %93
  %98 = bitcast %"class.x11::WriteBuffer"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %98) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %72) #11
  %99 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 1
  %100 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 3
  %101 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 5
  %102 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 7
  %103 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 9
  %104 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 11
  %105 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 13
  %106 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 15
  %107 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 17
  %108 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 19
  %109 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 21
  %110 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 23
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %73) #11
  %111 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %73, align 1
  %113 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %72, i64 0, i32 1
  %114 = bitcast %"class.std::__1::back_insert_iterator"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %69, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %115, align 8
  %116 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %69, i8* nonnull dereferenceable(1) %73) #11
  %117 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %72, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #11
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #11
  store i8 9, i8* %74, align 1
  %120 = bitcast %"class.std::__1::back_insert_iterator"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %68, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %121, align 8
  %122 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %68, i8* nonnull dereferenceable(1) %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %123 = load i64, i64* %117, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %67) #11
  store i8 0, i8* %67, align 1
  %125 = bitcast %"class.std::__1::back_insert_iterator"* %66 to i8*
  %126 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %66, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %126, align 8
  %127 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %66, i8* nonnull dereferenceable(1) %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #11
  %128 = load i64, i64* %117, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %126, align 8
  %130 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %66, i8* nonnull dereferenceable(1) %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #11
  %131 = load i64, i64* %117, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %117, align 8
  %133 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 2
  %134 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 4
  %135 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 6
  %136 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 8
  %137 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 10
  %138 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 12
  %139 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 14
  %140 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 16
  %141 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 18
  %142 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 20
  %143 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 22
  %144 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #11
  %145 = bitcast %"struct.x11::Xkb::SetMapRequest"* %1 to i8*
  %146 = bitcast %"class.std::__1::back_insert_iterator"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %65, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %147, align 8
  %148 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %65, i8* dereferenceable(1) %145) #11
  %149 = getelementptr inbounds i8, i8* %145, i64 1
  %150 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %65, i8* dereferenceable(1) %149) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %151 = load i64, i64* %117, align 8
  %152 = add i64 %151, 2
  store i64 %152, i64* %117, align 8
  %153 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = zext i8 %154 to i32
  %156 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = or i32 %155, 2
  %160 = select i1 %158, i32 %155, i32 %159
  %161 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  %164 = or i32 %160, 16
  %165 = select i1 %163, i32 %160, i32 %164
  %166 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  %169 = or i32 %165, 32
  %170 = select i1 %168, i32 %165, i32 %169
  %171 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  %174 = or i32 %170, 64
  %175 = select i1 %173, i32 %170, i32 %174
  %176 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  %179 = or i32 %175, 8
  %180 = select i1 %178, i32 %175, i32 %179
  %181 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %182 = load i8, i8* %181, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  %184 = or i32 %180, 4
  %185 = select i1 %183, i32 %180, i32 %184
  %186 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  %189 = or i32 %185, 128
  %190 = select i1 %188, i32 %185, i32 %189
  %191 = bitcast i16* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %191) #11
  %192 = trunc i32 %190 to i16
  store i16 %192, i16* %75, align 2
  %193 = bitcast %"class.std::__1::back_insert_iterator"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #11
  %194 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %49, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %194, align 8
  %195 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %49, i8* nonnull dereferenceable(1) %191) #11
  %196 = getelementptr inbounds i8, i8* %191, i64 1
  %197 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %49, i8* dereferenceable(1) %196) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #11
  %198 = load i64, i64* %117, align 8
  %199 = add i64 %198, 2
  store i64 %199, i64* %117, align 8
  %200 = bitcast i16* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %200) #11
  %201 = load i32, i32* %99, align 4
  %202 = trunc i32 %201 to i16
  store i16 %202, i16* %76, align 2
  %203 = bitcast %"class.std::__1::back_insert_iterator"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #11
  %204 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %48, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %204, align 8
  %205 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %48, i8* nonnull dereferenceable(1) %200) #11
  %206 = getelementptr inbounds i8, i8* %200, i64 1
  %207 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %48, i8* dereferenceable(1) %206) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #11
  %208 = load i64, i64* %117, align 8
  %209 = add i64 %208, 2
  store i64 %209, i64* %117, align 8
  %210 = bitcast %"class.std::__1::back_insert_iterator"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #11
  %211 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %47, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %211, align 8
  %212 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %47, i8* dereferenceable(1) %133) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #11
  %213 = load i64, i64* %117, align 8
  %214 = add i64 %213, 1
  store i64 %214, i64* %117, align 8
  %215 = bitcast %"class.std::__1::back_insert_iterator"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #11
  %216 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %46, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %216, align 8
  %217 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %46, i8* dereferenceable(1) %100) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  %218 = load i64, i64* %117, align 8
  %219 = add i64 %218, 1
  store i64 %219, i64* %117, align 8
  %220 = bitcast %"class.std::__1::back_insert_iterator"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #11
  %221 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %45, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %221, align 8
  %222 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %45, i8* dereferenceable(1) %134) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #11
  %223 = load i64, i64* %117, align 8
  %224 = add i64 %223, 1
  store i64 %224, i64* %117, align 8
  %225 = bitcast %"class.std::__1::back_insert_iterator"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #11
  %226 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %44, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %226, align 8
  %227 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %44, i8* dereferenceable(1) %101) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #11
  %228 = load i64, i64* %117, align 8
  %229 = add i64 %228, 1
  store i64 %229, i64* %117, align 8
  %230 = bitcast %"class.std::__1::back_insert_iterator"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #11
  %231 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %43, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %231, align 8
  %232 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %43, i8* dereferenceable(1) %135) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #11
  %233 = load i64, i64* %117, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %117, align 8
  %235 = bitcast %"class.std::__1::back_insert_iterator"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #11
  %236 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %42, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %236, align 8
  %237 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %42, i8* dereferenceable(1) %102) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #11
  %238 = load i64, i64* %117, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %117, align 8
  %240 = bitcast i16* %136 to i8*
  %241 = bitcast %"class.std::__1::back_insert_iterator"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #11
  %242 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %41, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %242, align 8
  %243 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %41, i8* dereferenceable(1) %240) #11
  %244 = getelementptr inbounds i8, i8* %240, i64 1
  %245 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %41, i8* dereferenceable(1) %244) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #11
  %246 = load i64, i64* %117, align 8
  %247 = add i64 %246, 2
  store i64 %247, i64* %117, align 8
  %248 = bitcast %"class.std::__1::back_insert_iterator"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #11
  %249 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %40, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %249, align 8
  %250 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %40, i8* dereferenceable(1) %103) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #11
  %251 = load i64, i64* %117, align 8
  %252 = add i64 %251, 1
  store i64 %252, i64* %117, align 8
  %253 = bitcast %"class.std::__1::back_insert_iterator"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #11
  %254 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %39, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %254, align 8
  %255 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %39, i8* dereferenceable(1) %137) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #11
  %256 = load i64, i64* %117, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %117, align 8
  %258 = bitcast i16* %104 to i8*
  %259 = bitcast %"class.std::__1::back_insert_iterator"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #11
  %260 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %38, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %260, align 8
  %261 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %38, i8* dereferenceable(1) %258) #11
  %262 = getelementptr inbounds i8, i8* %258, i64 1
  %263 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %38, i8* dereferenceable(1) %262) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #11
  %264 = load i64, i64* %117, align 8
  %265 = add i64 %264, 2
  store i64 %265, i64* %117, align 8
  %266 = bitcast %"class.std::__1::back_insert_iterator"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #11
  %267 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %37, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %267, align 8
  %268 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %37, i8* dereferenceable(1) %138) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #11
  %269 = load i64, i64* %117, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %117, align 8
  %271 = bitcast %"class.std::__1::back_insert_iterator"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #11
  %272 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %36, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %272, align 8
  %273 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %36, i8* dereferenceable(1) %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #11
  %274 = load i64, i64* %117, align 8
  %275 = add i64 %274, 1
  store i64 %275, i64* %117, align 8
  %276 = bitcast %"class.std::__1::back_insert_iterator"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #11
  %277 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %35, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %277, align 8
  %278 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %35, i8* dereferenceable(1) %139) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #11
  %279 = load i64, i64* %117, align 8
  %280 = add i64 %279, 1
  store i64 %280, i64* %117, align 8
  %281 = bitcast %"class.std::__1::back_insert_iterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #11
  %282 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %34, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %282, align 8
  %283 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* dereferenceable(1) %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #11
  %284 = load i64, i64* %117, align 8
  %285 = add i64 %284, 1
  store i64 %285, i64* %117, align 8
  %286 = bitcast %"class.std::__1::back_insert_iterator"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #11
  %287 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %33, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %287, align 8
  %288 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %140) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #11
  %289 = load i64, i64* %117, align 8
  %290 = add i64 %289, 1
  store i64 %290, i64* %117, align 8
  %291 = bitcast %"class.std::__1::back_insert_iterator"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #11
  %292 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %32, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %292, align 8
  %293 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* dereferenceable(1) %107) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #11
  %294 = load i64, i64* %117, align 8
  %295 = add i64 %294, 1
  store i64 %295, i64* %117, align 8
  %296 = bitcast %"class.std::__1::back_insert_iterator"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296) #11
  %297 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %31, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %297, align 8
  %298 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* dereferenceable(1) %141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296) #11
  %299 = load i64, i64* %117, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %117, align 8
  %301 = bitcast %"class.std::__1::back_insert_iterator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #11
  %302 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %30, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %302, align 8
  %303 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %108) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #11
  %304 = load i64, i64* %117, align 8
  %305 = add i64 %304, 1
  store i64 %305, i64* %117, align 8
  %306 = bitcast %"class.std::__1::back_insert_iterator"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #11
  %307 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %29, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %307, align 8
  %308 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %142) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #11
  %309 = load i64, i64* %117, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %117, align 8
  %311 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #11
  %312 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %312, align 8
  %313 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %109) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #11
  %314 = load i64, i64* %117, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %117, align 8
  %316 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #11
  %317 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %317, align 8
  %318 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %143) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #11
  %319 = load i64, i64* %117, align 8
  %320 = add i64 %319, 1
  store i64 %320, i64* %117, align 8
  %321 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #11
  %322 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %322, align 8
  %323 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* dereferenceable(1) %110) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #11
  %324 = load i64, i64* %117, align 8
  %325 = add i64 %324, 1
  store i64 %325, i64* %117, align 8
  %326 = bitcast i16* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %326) #11
  %327 = load i32, i32* %144, align 4
  %328 = trunc i32 %327 to i16
  store i16 %328, i16* %77, align 2
  %329 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #11
  %330 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %330, align 8
  %331 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %326) #11
  %332 = getelementptr inbounds i8, i8* %326, i64 1
  %333 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* dereferenceable(1) %332) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #11
  %334 = load i64, i64* %117, align 8
  %335 = add i64 %334, 2
  store i64 %335, i64* %117, align 8
  %336 = and i32 %190, 1
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %482, label %338

338:                                              ; preds = %97
  %339 = load i8, i8* %153, align 8, !range !2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %341, label %342, !prof !3

341:                                              ; preds = %338
  call void @llvm.trap() #11
  unreachable

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %344 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %345 = load %"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"** %344, align 8
  %346 = load %"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"** %343, align 8
  %347 = icmp eq %"struct.x11::Xkb::SetKeyType"* %345, %346
  br i1 %347, label %482, label %348

348:                                              ; preds = %342
  %349 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  %350 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  %351 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  %352 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  %353 = bitcast i16* %81 to i8*
  %354 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  %355 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  %356 = getelementptr inbounds i8, i8* %353, i64 1
  %357 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  %358 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  %359 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  %360 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  %361 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  %362 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  %363 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %364 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  %365 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %366 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  %367 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %368 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  %369 = bitcast i16* %83 to i8*
  %370 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %371 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  %372 = getelementptr inbounds i8, i8* %369, i64 1
  %373 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %374 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  %375 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %376 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %377 = bitcast i16* %85 to i8*
  %378 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %379 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  %380 = getelementptr inbounds i8, i8* %377, i64 1
  br label %381

381:                                              ; preds = %348, %457
  %382 = phi %"struct.x11::Xkb::SetKeyType"* [ %345, %348 ], [ %459, %457 ]
  %383 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 0
  %384 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 1
  %385 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 2
  %386 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %78) #11
  store i8 0, i8* %78, align 1
  %387 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 4
  %388 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 5
  %389 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 5, i32 0, i32 1
  %390 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %389 to i64*
  %391 = bitcast %"class.std::__1::vector.496"* %388 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %79) #11
  %392 = load i32, i32* %383, align 4
  %393 = trunc i32 %392 to i8
  store i8 %393, i8* %79, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %350, align 8
  %394 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %79) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #11
  %395 = load i64, i64* %117, align 8
  %396 = add i64 %395, 1
  store i64 %396, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #11
  %397 = load i32, i32* %384, align 4
  %398 = trunc i32 %397 to i8
  store i8 %398, i8* %80, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %351) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %352, align 8
  %399 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %80) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #11
  %400 = load i64, i64* %117, align 8
  %401 = add i64 %400, 1
  store i64 %401, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %353) #11
  %402 = load i32, i32* %385, align 4
  %403 = trunc i32 %402 to i16
  store i16 %403, i16* %81, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %355, align 8
  %404 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %353) #11
  %405 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %356) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #11
  %406 = load i64, i64* %117, align 8
  %407 = add i64 %406, 2
  store i64 %407, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %357) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %358, align 8
  %408 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %386) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %357) #11
  %409 = load i64, i64* %117, align 8
  %410 = add i64 %409, 1
  store i64 %410, i64* %117, align 8
  %411 = load i64, i64* %390, align 8
  %412 = load i64, i64* %391, align 8
  %413 = sub i64 %411, %412
  %414 = sdiv exact i64 %413, 12
  %415 = trunc i64 %414 to i8
  store i8 %415, i8* %78, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %360, align 8
  %416 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #11
  %417 = load i64, i64* %117, align 8
  %418 = add i64 %417, 1
  store i64 %418, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %361) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %362, align 8
  %419 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %387) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %361) #11
  %420 = load i64, i64* %117, align 8
  %421 = add i64 %420, 1
  store i64 %421, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %364, align 8
  %422 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #11
  %423 = load i64, i64* %117, align 8
  %424 = add i64 %423, 1
  store i64 %424, i64* %117, align 8
  %425 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 6, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  %426 = getelementptr inbounds %"class.std::__1::vector.496", %"class.std::__1::vector.496"* %388, i64 0, i32 0, i32 0
  %427 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %426, align 8
  %428 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %389, align 8
  %429 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %427, %428
  br i1 %429, label %430, label %436

430:                                              ; preds = %436, %381
  %431 = phi i64 [ %424, %381 ], [ %454, %436 ]
  %432 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 0, i32 6, i32 0, i32 0
  %433 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %432, align 8
  %434 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %425, align 8
  %435 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %433, %434
  br i1 %435, label %457, label %461

436:                                              ; preds = %381, %436
  %437 = phi %"struct.x11::Xkb::KTSetMapEntry"* [ %455, %436 ], [ %427, %381 ]
  %438 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %437, i64 0, i32 0
  %439 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %437, i64 0, i32 1
  %440 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %437, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %366, align 8
  %441 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %438) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #11
  %442 = load i64, i64* %117, align 8
  %443 = add i64 %442, 1
  store i64 %443, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #11
  %444 = load i32, i32* %439, align 4
  %445 = trunc i32 %444 to i8
  store i8 %445, i8* %82, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %368, align 8
  %446 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %82) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #11
  %447 = load i64, i64* %117, align 8
  %448 = add i64 %447, 1
  store i64 %448, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %369) #11
  %449 = load i32, i32* %440, align 4
  %450 = trunc i32 %449 to i16
  store i16 %450, i16* %83, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %371, align 8
  %451 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %369) #11
  %452 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %372) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370) #11
  %453 = load i64, i64* %117, align 8
  %454 = add i64 %453, 2
  store i64 %454, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %369) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #11
  %455 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %437, i64 1
  %456 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %455, %428
  br i1 %456, label %430, label %436

457:                                              ; preds = %461, %430
  %458 = phi i64 [ %431, %430 ], [ %479, %461 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %353) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %78) #11
  %459 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %382, i64 1
  %460 = icmp eq %"struct.x11::Xkb::SetKeyType"* %459, %346
  br i1 %460, label %482, label %381

461:                                              ; preds = %430, %461
  %462 = phi %"struct.x11::Xkb::KTSetMapEntry"* [ %480, %461 ], [ %433, %430 ]
  %463 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %462, i64 0, i32 0
  %464 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %462, i64 0, i32 1
  %465 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %462, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %373) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %374, align 8
  %466 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %463) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %373) #11
  %467 = load i64, i64* %117, align 8
  %468 = add i64 %467, 1
  store i64 %468, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %84) #11
  %469 = load i32, i32* %464, align 4
  %470 = trunc i32 %469 to i8
  store i8 %470, i8* %84, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %375) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %376, align 8
  %471 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %84) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %375) #11
  %472 = load i64, i64* %117, align 8
  %473 = add i64 %472, 1
  store i64 %473, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %377) #11
  %474 = load i32, i32* %465, align 4
  %475 = trunc i32 %474 to i16
  store i16 %475, i16* %85, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %379, align 8
  %476 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %377) #11
  %477 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %380) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #11
  %478 = load i64, i64* %117, align 8
  %479 = add i64 %478, 2
  store i64 %479, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %377) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %84) #11
  %480 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %462, i64 1
  %481 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %480, %434
  br i1 %481, label %457, label %461

482:                                              ; preds = %457, %342, %97
  %483 = phi i64 [ %335, %342 ], [ %335, %97 ], [ %458, %457 ]
  %484 = and i32 %190, 2
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %570, label %486

486:                                              ; preds = %482
  %487 = load i8, i8* %156, align 8, !range !2
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %489, label %490, !prof !3

489:                                              ; preds = %486
  call void @llvm.trap() #11
  unreachable

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %492 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %493 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %492, align 8
  %494 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %491, align 8
  %495 = icmp eq %"struct.x11::Xkb::KeySymMap"* %493, %494
  br i1 %495, label %570, label %496

496:                                              ; preds = %490
  %497 = bitcast i16* %86 to i8*
  %498 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %499 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  %500 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %501 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  %502 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %503 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  %504 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %505 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  %506 = getelementptr inbounds i8, i8* %497, i64 1
  %507 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  %508 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  br label %509

509:                                              ; preds = %496, %552
  %510 = phi %"struct.x11::Xkb::KeySymMap"* [ %493, %496 ], [ %554, %552 ]
  %511 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %497) #11
  store i16 0, i16* %86, align 2
  %512 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 3, i32 0, i32 1
  %513 = bitcast i32** %512 to i64*
  %514 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %499, align 8
  %515 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %514) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #11
  %516 = load i64, i64* %117, align 8
  %517 = add i64 %516, 1
  store i64 %517, i64* %117, align 8
  %518 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 0, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %499, align 8
  %519 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %518) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #11
  %520 = load i64, i64* %117, align 8
  %521 = add i64 %520, 1
  store i64 %521, i64* %117, align 8
  %522 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 0, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %499, align 8
  %523 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %522) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #11
  %524 = load i64, i64* %117, align 8
  %525 = add i64 %524, 1
  store i64 %525, i64* %117, align 8
  %526 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 0, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %499, align 8
  %527 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %526) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #11
  %528 = load i64, i64* %117, align 8
  %529 = add i64 %528, 1
  store i64 %529, i64* %117, align 8
  %530 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 2
  %531 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 0, i32 3
  %532 = bitcast %"class.std::__1::vector.385"* %531 to i64*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %500) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %501, align 8
  %533 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %511) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %500) #11
  %534 = load i64, i64* %117, align 8
  %535 = add i64 %534, 1
  store i64 %535, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %502) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %503, align 8
  %536 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %530) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %502) #11
  %537 = load i64, i64* %117, align 8
  %538 = add i64 %537, 1
  store i64 %538, i64* %117, align 8
  %539 = load i64, i64* %513, align 8
  %540 = load i64, i64* %532, align 8
  %541 = sub i64 %539, %540
  %542 = lshr exact i64 %541, 2
  %543 = trunc i64 %542 to i16
  store i16 %543, i16* %86, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %504) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %505, align 8
  %544 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %497) #11
  %545 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %506) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %504) #11
  %546 = load i64, i64* %117, align 8
  %547 = add i64 %546, 2
  store i64 %547, i64* %117, align 8
  %548 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %531, i64 0, i32 0, i32 0
  %549 = load i32*, i32** %548, align 8
  %550 = load i32*, i32** %512, align 8
  %551 = icmp eq i32* %549, %550
  br i1 %551, label %552, label %556

552:                                              ; preds = %556, %509
  %553 = phi i64 [ %547, %509 ], [ %567, %556 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %497) #11
  %554 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %510, i64 1
  %555 = icmp eq %"struct.x11::Xkb::KeySymMap"* %554, %494
  br i1 %555, label %570, label %509

556:                                              ; preds = %509, %556
  %557 = phi i32* [ %568, %556 ], [ %549, %509 ]
  %558 = bitcast i32* %557 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %507) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %508, align 8
  %559 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %558) #11
  %560 = getelementptr inbounds i8, i8* %558, i64 1
  %561 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %560) #11
  %562 = getelementptr inbounds i8, i8* %558, i64 2
  %563 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %562) #11
  %564 = getelementptr inbounds i8, i8* %558, i64 3
  %565 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %564) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %507) #11
  %566 = load i64, i64* %117, align 8
  %567 = add i64 %566, 4
  store i64 %567, i64* %117, align 8
  %568 = getelementptr inbounds i32, i32* %557, i64 1
  %569 = icmp eq i32* %568, %550
  br i1 %569, label %552, label %556

570:                                              ; preds = %552, %490, %482
  %571 = phi i64 [ %483, %490 ], [ %483, %482 ], [ %553, %552 ]
  %572 = and i32 %190, 16
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %624, label %574

574:                                              ; preds = %570
  %575 = load i8, i8* %161, align 8, !range !2
  %576 = icmp eq i8 %575, 0
  br i1 %576, label %577, label %578, !prof !3

577:                                              ; preds = %574
  call void @llvm.trap() #11
  unreachable

578:                                              ; preds = %574
  %579 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %580 = load i8, i8* %579, align 8, !range !2
  %581 = icmp eq i8 %580, 0
  br i1 %581, label %582, label %583, !prof !3

582:                                              ; preds = %578
  call void @llvm.trap() #11
  unreachable

583:                                              ; preds = %578
  %584 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %585 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %586 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %587 = load i8*, i8** %586, align 8
  %588 = load i8*, i8** %584, align 8
  %589 = icmp eq i8* %587, %588
  br i1 %589, label %593, label %590

590:                                              ; preds = %583
  %591 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  %592 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  br label %613

593:                                              ; preds = %613, %583
  %594 = phi i64 [ %571, %583 ], [ %617, %613 ]
  %595 = sub i64 0, %594
  %596 = and i64 %595, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 0, i8* %23, align 1
  %597 = icmp eq i64 %596, 0
  br i1 %597, label %608, label %598

598:                                              ; preds = %593
  %599 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  %600 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  br label %601

601:                                              ; preds = %601, %598
  %602 = phi i64 [ 0, %598 ], [ %606, %601 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %600, align 8
  %603 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  %604 = load i64, i64* %117, align 8
  %605 = add i64 %604, 1
  store i64 %605, i64* %117, align 8
  %606 = add nuw nsw i64 %602, 1
  %607 = icmp eq i64 %606, %596
  br i1 %607, label %608, label %601

608:                                              ; preds = %601, %593
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  %609 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %610 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %609, align 8
  %611 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %585, align 8
  %612 = icmp eq %"union.x11::Xkb::Action"* %610, %611
  br i1 %612, label %624, label %620

613:                                              ; preds = %590, %613
  %614 = phi i8* [ %587, %590 ], [ %618, %613 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %591) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %592, align 8
  %615 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* dereferenceable(1) %614) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %591) #11
  %616 = load i64, i64* %117, align 8
  %617 = add i64 %616, 1
  store i64 %617, i64* %117, align 8
  %618 = getelementptr inbounds i8, i8* %614, i64 1
  %619 = icmp eq i8* %618, %588
  br i1 %619, label %593, label %613

620:                                              ; preds = %608, %620
  %621 = phi %"union.x11::Xkb::Action"* [ %622, %620 ], [ %610, %608 ]
  call void @_ZN3x1111WriteBuffer5WriteINS_3Xkb6ActionEEEvPKT_(%"class.x11::WriteBuffer"* nonnull %72, %"union.x11::Xkb::Action"* %621)
  %622 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %621, i64 1
  %623 = icmp eq %"union.x11::Xkb::Action"* %622, %611
  br i1 %623, label %624, label %620

624:                                              ; preds = %620, %608, %570
  %625 = and i32 %190, 32
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %661, label %627

627:                                              ; preds = %624
  %628 = load i8, i8* %166, align 8, !range !2
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %630, label %631, !prof !3

630:                                              ; preds = %627
  call void @llvm.trap() #11
  unreachable

631:                                              ; preds = %627
  %632 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %633 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %634 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %633, align 8
  %635 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %632, align 8
  %636 = icmp eq %"struct.x11::Xkb::SetBehavior"* %634, %635
  br i1 %636, label %661, label %637

637:                                              ; preds = %631
  %638 = bitcast %"class.std::__1::back_insert_iterator"* %50 to i8*
  %639 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %50, i64 0, i32 0
  %640 = bitcast %"class.std::__1::back_insert_iterator"* %51 to i8*
  %641 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %51, i64 0, i32 0
  %642 = bitcast %"class.std::__1::back_insert_iterator"* %52 to i8*
  %643 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %52, i64 0, i32 0
  br label %644

644:                                              ; preds = %637, %644
  %645 = phi %"struct.x11::Xkb::SetBehavior"* [ %634, %637 ], [ %659, %644 ]
  %646 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %645, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %639, align 8
  %647 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %50, i8* dereferenceable(1) %646) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #11
  %648 = load i64, i64* %117, align 8
  %649 = add i64 %648, 1
  store i64 %649, i64* %117, align 8
  %650 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %645, i64 0, i32 1, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %640) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %641, align 8
  %651 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %51, i8* dereferenceable(1) %650) #11
  %652 = getelementptr inbounds i8, i8* %650, i64 1
  %653 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %51, i8* dereferenceable(1) %652) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %640) #11
  %654 = load i64, i64* %117, align 8
  %655 = add i64 %654, 2
  store i64 %655, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #11
  store i8 0, i8* %53, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %642) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %643, align 8
  %656 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %52, i8* nonnull dereferenceable(1) %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %642) #11
  %657 = load i64, i64* %117, align 8
  %658 = add i64 %657, 1
  store i64 %658, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #11
  %659 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %645, i64 1
  %660 = icmp eq %"struct.x11::Xkb::SetBehavior"* %659, %635
  br i1 %660, label %661, label %644

661:                                              ; preds = %644, %631, %624
  %662 = and i32 %190, 64
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %702, label %664

664:                                              ; preds = %661
  %665 = load i8, i8* %171, align 8, !range !2
  %666 = icmp eq i8 %665, 0
  br i1 %666, label %667, label %668, !prof !3

667:                                              ; preds = %664
  call void @llvm.trap() #11
  unreachable

668:                                              ; preds = %664
  %669 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %670 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %671 = load i8*, i8** %670, align 8
  %672 = load i8*, i8** %669, align 8
  %673 = icmp eq i8* %671, %672
  br i1 %673, label %674, label %676

674:                                              ; preds = %668
  %675 = load i64, i64* %117, align 8
  br label %679

676:                                              ; preds = %668
  %677 = bitcast %"class.std::__1::back_insert_iterator"* %56 to i8*
  %678 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %56, i64 0, i32 0
  br label %695

679:                                              ; preds = %695, %674
  %680 = phi i64 [ %675, %674 ], [ %699, %695 ]
  %681 = sub i64 0, %680
  %682 = and i64 %681, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #11
  store i8 0, i8* %55, align 1
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %694, label %684

684:                                              ; preds = %679
  %685 = bitcast %"class.std::__1::back_insert_iterator"* %54 to i8*
  %686 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %54, i64 0, i32 0
  br label %687

687:                                              ; preds = %687, %684
  %688 = phi i64 [ 0, %684 ], [ %692, %687 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %685) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %686, align 8
  %689 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %54, i8* nonnull dereferenceable(1) %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %685) #11
  %690 = load i64, i64* %117, align 8
  %691 = add i64 %690, 1
  store i64 %691, i64* %117, align 8
  %692 = add nuw nsw i64 %688, 1
  %693 = icmp eq i64 %692, %682
  br i1 %693, label %694, label %687

694:                                              ; preds = %687, %679
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #11
  br label %702

695:                                              ; preds = %676, %695
  %696 = phi i8* [ %671, %676 ], [ %700, %695 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %677) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %678, align 8
  %697 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %56, i8* dereferenceable(1) %696) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %677) #11
  %698 = load i64, i64* %117, align 8
  %699 = add i64 %698, 1
  store i64 %699, i64* %117, align 8
  %700 = getelementptr inbounds i8, i8* %696, i64 1
  %701 = icmp eq i8* %700, %672
  br i1 %701, label %679, label %695

702:                                              ; preds = %661, %694
  %703 = and i32 %190, 8
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %734, label %705

705:                                              ; preds = %702
  %706 = load i8, i8* %176, align 8, !range !2
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %708, label %709, !prof !3

708:                                              ; preds = %705
  call void @llvm.trap() #11
  unreachable

709:                                              ; preds = %705
  %710 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %711 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %712 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %711, align 8
  %713 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %710, align 8
  %714 = icmp eq %"struct.x11::Xkb::SetExplicit"* %712, %713
  br i1 %714, label %734, label %715

715:                                              ; preds = %709
  %716 = bitcast %"class.std::__1::back_insert_iterator"* %57 to i8*
  %717 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %57, i64 0, i32 0
  %718 = bitcast %"class.std::__1::back_insert_iterator"* %58 to i8*
  %719 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %58, i64 0, i32 0
  br label %720

720:                                              ; preds = %715, %720
  %721 = phi %"struct.x11::Xkb::SetExplicit"* [ %712, %715 ], [ %732, %720 ]
  %722 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %721, i64 0, i32 0
  %723 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %721, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %716) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %717, align 8
  %724 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %57, i8* dereferenceable(1) %722) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716) #11
  %725 = load i64, i64* %117, align 8
  %726 = add i64 %725, 1
  store i64 %726, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #11
  %727 = load i32, i32* %723, align 4
  %728 = trunc i32 %727 to i8
  store i8 %728, i8* %87, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %718) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %719, align 8
  %729 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %58, i8* nonnull dereferenceable(1) %87) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %718) #11
  %730 = load i64, i64* %117, align 8
  %731 = add i64 %730, 1
  store i64 %731, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #11
  %732 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %721, i64 1
  %733 = icmp eq %"struct.x11::Xkb::SetExplicit"* %732, %713
  br i1 %733, label %734, label %720

734:                                              ; preds = %720, %709, %702
  %735 = and i32 %190, 4
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %766, label %737

737:                                              ; preds = %734
  %738 = load i8, i8* %181, align 8, !range !2
  %739 = icmp eq i8 %738, 0
  br i1 %739, label %740, label %741, !prof !3

740:                                              ; preds = %737
  call void @llvm.trap() #11
  unreachable

741:                                              ; preds = %737
  %742 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %743 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %744 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %743, align 8
  %745 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %742, align 8
  %746 = icmp eq %"struct.x11::Xkb::KeyModMap"* %744, %745
  br i1 %746, label %766, label %747

747:                                              ; preds = %741
  %748 = bitcast %"class.std::__1::back_insert_iterator"* %59 to i8*
  %749 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %59, i64 0, i32 0
  %750 = bitcast %"class.std::__1::back_insert_iterator"* %60 to i8*
  %751 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %60, i64 0, i32 0
  br label %752

752:                                              ; preds = %747, %752
  %753 = phi %"struct.x11::Xkb::KeyModMap"* [ %744, %747 ], [ %764, %752 ]
  %754 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %753, i64 0, i32 0
  %755 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %753, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %748) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %749, align 8
  %756 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %59, i8* dereferenceable(1) %754) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %748) #11
  %757 = load i64, i64* %117, align 8
  %758 = add i64 %757, 1
  store i64 %758, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #11
  %759 = load i32, i32* %755, align 4
  %760 = trunc i32 %759 to i8
  store i8 %760, i8* %88, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %750) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %751, align 8
  %761 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %60, i8* nonnull dereferenceable(1) %88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %750) #11
  %762 = load i64, i64* %117, align 8
  %763 = add i64 %762, 1
  store i64 %763, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #11
  %764 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %753, i64 1
  %765 = icmp eq %"struct.x11::Xkb::KeyModMap"* %764, %745
  br i1 %765, label %766, label %752

766:                                              ; preds = %752, %741, %734
  %767 = trunc i32 %190 to i8
  %768 = icmp slt i8 %767, 0
  br i1 %768, label %769, label %806

769:                                              ; preds = %766
  %770 = load i8, i8* %186, align 8, !range !2
  %771 = icmp eq i8 %770, 0
  br i1 %771, label %772, label %773, !prof !3

772:                                              ; preds = %769
  call void @llvm.trap() #11
  unreachable

773:                                              ; preds = %769
  %774 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %775 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %776 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %775, align 8
  %777 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %774, align 8
  %778 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %776, %777
  br i1 %778, label %806, label %779

779:                                              ; preds = %773
  %780 = bitcast %"class.std::__1::back_insert_iterator"* %61 to i8*
  %781 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %61, i64 0, i32 0
  %782 = bitcast %"class.std::__1::back_insert_iterator"* %62 to i8*
  %783 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %62, i64 0, i32 0
  %784 = bitcast i16* %89 to i8*
  %785 = bitcast %"class.std::__1::back_insert_iterator"* %64 to i8*
  %786 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %64, i64 0, i32 0
  %787 = getelementptr inbounds i8, i8* %784, i64 1
  br label %788

788:                                              ; preds = %779, %788
  %789 = phi %"struct.x11::Xkb::KeyVModMap"* [ %776, %779 ], [ %804, %788 ]
  %790 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %789, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %780) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %781, align 8
  %791 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %61, i8* dereferenceable(1) %790) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %780) #11
  %792 = load i64, i64* %117, align 8
  %793 = add i64 %792, 1
  store i64 %793, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %63) #11
  store i8 0, i8* %63, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %782) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %783, align 8
  %794 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %62, i8* nonnull dereferenceable(1) %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %782) #11
  %795 = load i64, i64* %117, align 8
  %796 = add i64 %795, 1
  store i64 %796, i64* %117, align 8
  %797 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %789, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %63) #11
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %784) #11
  %798 = load i32, i32* %797, align 4
  %799 = trunc i32 %798 to i16
  store i16 %799, i16* %89, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %785) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %786, align 8
  %800 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %64, i8* nonnull dereferenceable(1) %784) #11
  %801 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %64, i8* dereferenceable(1) %787) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %785) #11
  %802 = load i64, i64* %117, align 8
  %803 = add i64 %802, 2
  store i64 %803, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %784) #11
  %804 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %789, i64 1
  %805 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %804, %777
  br i1 %805, label %806, label %788

806:                                              ; preds = %788, %773, %766
  %807 = load i64, i64* %117, align 8
  %808 = sub i64 0, %807
  %809 = and i64 %808, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #11
  store i8 0, i8* %71, align 1
  %810 = icmp eq i64 %809, 0
  br i1 %810, label %821, label %811

811:                                              ; preds = %806
  %812 = bitcast %"class.std::__1::back_insert_iterator"* %70 to i8*
  %813 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %70, i64 0, i32 0
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %819, %814 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %812) #11
  store %"class.std::__1::vector.271"* %113, %"class.std::__1::vector.271"** %813, align 8
  %816 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %70, i8* nonnull dereferenceable(1) %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %812) #11
  %817 = load i64, i64* %117, align 8
  %818 = add i64 %817, 1
  store i64 %818, i64* %117, align 8
  %819 = add nuw nsw i64 %815, 1
  %820 = icmp eq i64 %819, %809
  br i1 %820, label %821, label %814

821:                                              ; preds = %814, %806
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #11
  %822 = load %"class.x11::Connection"*, %"class.x11::Connection"** %90, align 8
  %823 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %822, %"class.x11::WriteBuffer"* nonnull %72, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %326) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %200) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %191) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %73) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %98) #11
  br label %824

824:                                              ; preds = %2, %93, %821
  %825 = phi %"class.x11::Connection::FutureImpl"* [ %823, %821 ], [ null, %93 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %825
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1111WriteBuffer5WriteINS_3Xkb6ActionEEEvPKT_(%"class.x11::WriteBuffer"*, %"union.x11::Xkb::Action"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = bitcast %"union.x11::Xkb::Action"* %1 to i8*
  %5 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %5, %"class.std::__1::vector.271"** %7, align 8
  %8 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %4) #11
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  %10 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %9) #11
  %11 = getelementptr inbounds i8, i8* %4, i64 2
  %12 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %11) #11
  %13 = getelementptr inbounds i8, i8* %4, i64 3
  %14 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %13) #11
  %15 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %1, i64 0, i32 0, i32 1
  %16 = bitcast i32* %15 to i8*
  %17 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %16) #11
  %18 = getelementptr inbounds i8, i8* %16, i64 1
  %19 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %18) #11
  %20 = getelementptr inbounds i8, i8* %16, i64 2
  %21 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %20) #11
  %22 = getelementptr inbounds i8, i8* %16, i64 3
  %23 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %22) #11
  %24 = getelementptr inbounds i32, i32* %15, i64 1
  %25 = bitcast i32* %24 to i8*
  %26 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %25) #11
  %27 = getelementptr inbounds i8, i8* %25, i64 1
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %27) #11
  %29 = getelementptr inbounds i8, i8* %25, i64 2
  %30 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %29) #11
  %31 = getelementptr inbounds i8, i8* %25, i64 3
  %32 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %31) #11
  %33 = getelementptr inbounds i32, i32* %15, i64 2
  %34 = bitcast i32* %33 to i8*
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %34) #11
  %36 = getelementptr inbounds i8, i8* %34, i64 1
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %36) #11
  %38 = getelementptr inbounds i8, i8* %34, i64 2
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %38) #11
  %40 = getelementptr inbounds i8, i8* %34, i64 3
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %40) #11
  %42 = getelementptr inbounds i32, i32* %15, i64 3
  %43 = bitcast i32* %42 to i8*
  %44 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %43) #11
  %45 = getelementptr inbounds i8, i8* %43, i64 1
  %46 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %45) #11
  %47 = getelementptr inbounds i8, i8* %43, i64 2
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %47) #11
  %49 = getelementptr inbounds i8, i8* %43, i64 3
  %50 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %49) #11
  %51 = getelementptr inbounds i32, i32* %15, i64 4
  %52 = bitcast i32* %51 to i8*
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #11
  %54 = getelementptr inbounds i8, i8* %52, i64 1
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %54) #11
  %56 = getelementptr inbounds i8, i8* %52, i64 2
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %56) #11
  %58 = getelementptr inbounds i8, i8* %52, i64 3
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #11
  %60 = getelementptr inbounds i32, i32* %15, i64 5
  %61 = bitcast i32* %60 to i8*
  %62 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %61) #11
  %63 = getelementptr inbounds i8, i8* %61, i64 1
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %63) #11
  %65 = getelementptr inbounds i8, i8* %61, i64 2
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %65) #11
  %67 = getelementptr inbounds i8, i8* %61, i64 3
  %68 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %67) #11
  %69 = getelementptr inbounds i32, i32* %15, i64 6
  %70 = bitcast i32* %69 to i8*
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %70) #11
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %72) #11
  %74 = getelementptr inbounds i8, i8* %70, i64 2
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %74) #11
  %76 = getelementptr inbounds i8, i8* %70, i64 3
  %77 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %76) #11
  %78 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %0, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 32
  store i64 %80, i64* %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6SetMapERKNS0_10DeviceSpecERKNS0_11SetMapFlagsERKNS_7KeyCodeES9_RKhSB_S9_SB_RKtS9_SB_SD_S9_SB_SB_S9_SB_SB_S9_SB_SB_S9_SB_SB_RKNS0_4VModERKN4absl8optionalINSt3__16vectorINS0_10SetKeyTypeENSJ_9allocatorISL_EEEEEERKNSI_INSK_INS0_9KeySymMapENSM_ISS_EEEEEERKNSI_INSK_IhNSM_IhEEEEEERKNSI_INSK_INS0_6ActionENSM_IS13_EEEEEERKNSI_INSK_INS0_11SetBehaviorENSM_IS19_EEEEEES12_RKNSI_INSK_INS0_11SetExplicitENSM_IS1F_EEEEEERKNSI_INSK_INS0_9KeyModMapENSM_IS1L_EEEEEERKNSI_INSK_INS0_10KeyVModMapENSM_IS1R_EEEEEE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), %"class.absl::optional.489"* nocapture readonly dereferenceable(32), %"class.absl::optional.377"* dereferenceable(32), %"class.absl::optional.397"* nocapture readonly dereferenceable(32), %"class.absl::optional.402"* nocapture readonly dereferenceable(32), %"class.absl::optional.415"* nocapture readonly dereferenceable(32), %"class.absl::optional.397"* nocapture readonly dereferenceable(32), %"class.absl::optional.439"* nocapture readonly dereferenceable(32), %"class.absl::optional.451"* nocapture readonly dereferenceable(32), %"class.absl::optional.463"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %36 = alloca %"struct.x11::Xkb::SetMapRequest", align 8
  %37 = bitcast %"struct.x11::Xkb::SetMapRequest"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 0
  %39 = load i16, i16* %1, align 2
  store i16 %39, i16* %38, align 8
  %40 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 1
  %41 = load i32, i32* %2, align 4
  store i32 %41, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 2
  %43 = load i8, i8* %3, align 1
  store i8 %43, i8* %42, align 8
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 3
  %45 = load i8, i8* %4, align 1
  store i8 %45, i8* %44, align 1
  %46 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 4
  %47 = load i8, i8* %5, align 1
  store i8 %47, i8* %46, align 2
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 5
  %49 = load i8, i8* %6, align 1
  store i8 %49, i8* %48, align 1
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 6
  %51 = load i8, i8* %7, align 1
  store i8 %51, i8* %50, align 4
  %52 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 7
  %53 = load i8, i8* %8, align 1
  store i8 %53, i8* %52, align 1
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 8
  %55 = load i16, i16* %9, align 2
  store i16 %55, i16* %54, align 2
  %56 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 9
  %57 = load i8, i8* %10, align 1
  store i8 %57, i8* %56, align 8
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 10
  %59 = load i8, i8* %11, align 1
  store i8 %59, i8* %58, align 1
  %60 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 11
  %61 = load i16, i16* %12, align 2
  store i16 %61, i16* %60, align 2
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 12
  %63 = load i8, i8* %13, align 1
  store i8 %63, i8* %62, align 4
  %64 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 13
  %65 = load i8, i8* %14, align 1
  store i8 %65, i8* %64, align 1
  %66 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 14
  %67 = load i8, i8* %15, align 1
  store i8 %67, i8* %66, align 2
  %68 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 15
  %69 = load i8, i8* %16, align 1
  store i8 %69, i8* %68, align 1
  %70 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 16
  %71 = load i8, i8* %17, align 1
  store i8 %71, i8* %70, align 8
  %72 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 17
  %73 = load i8, i8* %18, align 1
  store i8 %73, i8* %72, align 1
  %74 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 18
  %75 = load i8, i8* %19, align 1
  store i8 %75, i8* %74, align 2
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 19
  %77 = load i8, i8* %20, align 1
  store i8 %77, i8* %76, align 1
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 20
  %79 = load i8, i8* %21, align 1
  store i8 %79, i8* %78, align 4
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 21
  %81 = load i8, i8* %22, align 1
  store i8 %81, i8* %80, align 1
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 22
  %83 = load i8, i8* %23, align 1
  store i8 %83, i8* %82, align 2
  %84 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 23
  %85 = load i8, i8* %24, align 1
  store i8 %85, i8* %84, align 1
  %86 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 24
  %87 = load i32, i32* %25, align 4
  store i32 %87, i32* %86, align 8
  %88 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.absl::optional.489", %"class.absl::optional.489"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 32, i1 false) #11
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %132, label %92

92:                                               ; preds = %35
  %93 = getelementptr inbounds %"class.absl::optional.489", %"class.absl::optional.489"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = bitcast %"class.std::__1::vector.494"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  %96 = getelementptr inbounds %"class.absl::optional.489", %"class.absl::optional.489"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %97 = bitcast %"struct.x11::Xkb::SetKeyType"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector.494"* %93 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 6
  %103 = icmp eq i64 %101, 0
  %104 = inttoptr i64 %100 to %"struct.x11::Xkb::SetKeyType"*
  %105 = inttoptr i64 %98 to %"struct.x11::Xkb::SetKeyType"*
  br i1 %103, label %131, label %106

106:                                              ; preds = %92
  %107 = icmp ugt i64 %102, 288230376151711743
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = bitcast %"class.std::__1::vector.494"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #13
  unreachable

110:                                              ; preds = %106
  %111 = tail call i8* @_Znwm(i64 %101) #12
  %112 = bitcast i8* %111 to %"struct.x11::Xkb::SetKeyType"*
  %113 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"struct.x11::Xkb::SetKeyType"** %113 to i8**
  store i8* %111, i8** %114, align 8
  %115 = bitcast %"class.std::__1::vector.494"* %94 to i8**
  store i8* %111, i8** %115, align 8
  %116 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %112, i64 %102
  %117 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::SetKeyType"* %116, %"struct.x11::Xkb::SetKeyType"** %117, align 8
  %118 = bitcast %"struct.x11::Xkb::SetKeyType"** %113 to i64*
  %119 = ptrtoint i8* %111 to i64
  %120 = icmp eq %"struct.x11::Xkb::SetKeyType"* %104, %105
  br i1 %120, label %129, label %121

121:                                              ; preds = %110, %121
  %122 = phi %"struct.x11::Xkb::SetKeyType"* [ %125, %121 ], [ %112, %110 ]
  %123 = phi %"struct.x11::Xkb::SetKeyType"* [ %124, %121 ], [ %104, %110 ]
  tail call void @_ZN3x113Xkb10SetKeyTypeC2ERKS1_(%"struct.x11::Xkb::SetKeyType"* %122, %"struct.x11::Xkb::SetKeyType"* dereferenceable(64) %123) #11
  %124 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %123, i64 1
  %125 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %122, i64 1
  %126 = icmp eq %"struct.x11::Xkb::SetKeyType"* %124, %105
  br i1 %126, label %127, label %121

127:                                              ; preds = %121
  %128 = ptrtoint %"struct.x11::Xkb::SetKeyType"* %125 to i64
  br label %129

129:                                              ; preds = %127, %110
  %130 = phi i64 [ %119, %110 ], [ %128, %127 ]
  store i64 %130, i64* %118, align 8
  br label %131

131:                                              ; preds = %129, %92
  store i8 1, i8* %88, align 8
  br label %132

132:                                              ; preds = %35, %131
  %133 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.absl::optional.377", %"class.absl::optional.377"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 32, i1 false) #11
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.absl::optional.377", %"class.absl::optional.377"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %139 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.382"* %139, %"class.std::__1::vector.382"* dereferenceable(24) %138) #11
  store i8 1, i8* %133, align 8
  br label %140

140:                                              ; preds = %132, %137
  %141 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 32, i1 false) #11
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %170, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %147 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %148 = bitcast %"class.std::__1::vector.271"* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #11
  %149 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %150 = bitcast i8** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector.271"* %146 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = icmp eq i64 %154, 0
  %156 = inttoptr i64 %153 to i8*
  br i1 %155, label %169, label %157

157:                                              ; preds = %145
  %158 = icmp slt i64 %154, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.271"* %147 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #13
  unreachable

161:                                              ; preds = %157
  %162 = call i8* @_Znwm(i64 %154) #12
  %163 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i8* %162, i8** %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %147, i64 0, i32 0, i32 0
  store i8* %162, i8** %164, align 8
  %165 = getelementptr inbounds i8, i8* %162, i64 %154
  %166 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %165, i8** %166, align 8
  %167 = bitcast i8** %163 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %162, i8* align 1 %156, i64 %154, i1 false) #11
  %168 = ptrtoint i8* %165 to i64
  store i64 %168, i64* %167, align 8
  br label %169

169:                                              ; preds = %161, %145
  store i8 1, i8* %141, align 8
  br label %170

170:                                              ; preds = %140, %169
  %171 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.absl::optional.402", %"class.absl::optional.402"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 32, i1 false) #11
  %173 = load i8, i8* %172, align 8, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %210, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.absl::optional.402", %"class.absl::optional.402"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %177 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = bitcast %"class.std::__1::vector.407"* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #11
  %179 = getelementptr inbounds %"class.absl::optional.402", %"class.absl::optional.402"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %180 = bitcast %"union.x11::Xkb::Action"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::vector.407"* %176 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %181, %183
  %185 = ashr exact i64 %184, 5
  %186 = icmp eq i64 %184, 0
  br i1 %186, label %209, label %187

187:                                              ; preds = %175
  %188 = icmp ugt i64 %185, 576460752303423487
  br i1 %188, label %189, label %191

189:                                              ; preds = %187
  %190 = bitcast %"class.std::__1::vector.407"* %177 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %190) #13
  unreachable

191:                                              ; preds = %187
  %192 = call i8* @_Znwm(i64 %184) #12
  %193 = bitcast i8* %192 to %"union.x11::Xkb::Action"*
  %194 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %195 = bitcast %"union.x11::Xkb::Action"** %194 to i8**
  store i8* %192, i8** %195, align 8
  %196 = bitcast %"class.std::__1::vector.407"* %177 to i8**
  store i8* %192, i8** %196, align 8
  %197 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %193, i64 %185
  %198 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"union.x11::Xkb::Action"* %197, %"union.x11::Xkb::Action"** %198, align 8
  %199 = bitcast %"union.x11::Xkb::Action"** %194 to i64*
  %200 = ptrtoint i8* %192 to i64
  %201 = icmp sgt i64 %184, 0
  br i1 %201, label %202, label %207

202:                                              ; preds = %191
  %203 = lshr exact i64 %184, 5
  %204 = inttoptr i64 %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %192, i8* align 4 %204, i64 %184, i1 false) #11
  %205 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %193, i64 %203
  %206 = ptrtoint %"union.x11::Xkb::Action"* %205 to i64
  br label %207

207:                                              ; preds = %202, %191
  %208 = phi i64 [ %206, %202 ], [ %200, %191 ]
  store i64 %208, i64* %199, align 8
  br label %209

209:                                              ; preds = %207, %175
  store i8 1, i8* %171, align 8
  br label %210

210:                                              ; preds = %170, %209
  %211 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.absl::optional.415", %"class.absl::optional.415"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 32, i1 false) #11
  %213 = load i8, i8* %212, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %251, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.absl::optional.415", %"class.absl::optional.415"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %217 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0
  %218 = bitcast %"class.std::__1::vector.420"* %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #11
  %219 = getelementptr inbounds %"class.absl::optional.415", %"class.absl::optional.415"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %220 = bitcast %"struct.x11::Xkb::SetBehavior"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.std::__1::vector.420"* %216 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = sub i64 %221, %223
  %225 = sdiv exact i64 %224, 3
  %226 = icmp eq i64 %224, 0
  %227 = inttoptr i64 %223 to %"struct.x11::Xkb::SetBehavior"*
  br i1 %226, label %250, label %228

228:                                              ; preds = %215
  %229 = icmp ugt i64 %225, 6148914691236517205
  br i1 %229, label %230, label %232

230:                                              ; preds = %228
  %231 = bitcast %"class.std::__1::vector.420"* %217 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %231) #13
  unreachable

232:                                              ; preds = %228
  %233 = call i8* @_Znwm(i64 %224) #12
  %234 = bitcast i8* %233 to %"struct.x11::Xkb::SetBehavior"*
  %235 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %236 = bitcast %"struct.x11::Xkb::SetBehavior"** %235 to i8**
  store i8* %233, i8** %236, align 8
  %237 = bitcast %"class.std::__1::vector.420"* %217 to i8**
  store i8* %233, i8** %237, align 8
  %238 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %234, i64 %225
  %239 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::SetBehavior"* %238, %"struct.x11::Xkb::SetBehavior"** %239, align 8
  %240 = bitcast %"struct.x11::Xkb::SetBehavior"** %235 to i64*
  %241 = ptrtoint i8* %233 to i64
  %242 = icmp sgt i64 %224, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %232
  %244 = udiv exact i64 %224, 3
  %245 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %227, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %233, i8* align 1 %245, i64 %224, i1 false) #11
  %246 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %234, i64 %244
  %247 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %246 to i64
  br label %248

248:                                              ; preds = %243, %232
  %249 = phi i64 [ %247, %243 ], [ %241, %232 ]
  store i64 %249, i64* %240, align 8
  br label %250

250:                                              ; preds = %248, %215
  store i8 1, i8* %211, align 8
  br label %251

251:                                              ; preds = %210, %250
  %252 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %252, i8 0, i64 32, i1 false) #11
  %254 = load i8, i8* %253, align 8, !range !2
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %281, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %258 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0
  %259 = bitcast %"class.std::__1::vector.271"* %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #11
  %260 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %261 = bitcast i8** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.std::__1::vector.271"* %257 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = sub i64 %262, %264
  %266 = icmp eq i64 %265, 0
  %267 = inttoptr i64 %264 to i8*
  br i1 %266, label %280, label %268

268:                                              ; preds = %256
  %269 = icmp slt i64 %265, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.271"* %258 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %271) #13
  unreachable

272:                                              ; preds = %268
  %273 = call i8* @_Znwm(i64 %265) #12
  %274 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i8* %273, i8** %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %258, i64 0, i32 0, i32 0
  store i8* %273, i8** %275, align 8
  %276 = getelementptr inbounds i8, i8* %273, i64 %265
  %277 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %276, i8** %277, align 8
  %278 = bitcast i8** %274 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %273, i8* align 1 %267, i64 %265, i1 false) #11
  %279 = ptrtoint i8* %276 to i64
  store i64 %279, i64* %278, align 8
  br label %280

280:                                              ; preds = %272, %256
  store i8 1, i8* %252, align 8
  br label %281

281:                                              ; preds = %251, %280
  %282 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.absl::optional.439", %"class.absl::optional.439"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 32, i1 false) #11
  %284 = load i8, i8* %283, align 8, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %322, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.absl::optional.439", %"class.absl::optional.439"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %288 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0
  %289 = bitcast %"class.std::__1::vector.444"* %288 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %289, i8 0, i64 24, i1 false) #11
  %290 = getelementptr inbounds %"class.absl::optional.439", %"class.absl::optional.439"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %291 = bitcast %"struct.x11::Xkb::SetExplicit"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.std::__1::vector.444"* %287 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = sub i64 %292, %294
  %296 = ashr exact i64 %295, 3
  %297 = icmp eq i64 %295, 0
  %298 = inttoptr i64 %294 to %"struct.x11::Xkb::SetExplicit"*
  br i1 %297, label %321, label %299

299:                                              ; preds = %286
  %300 = icmp ugt i64 %296, 2305843009213693951
  br i1 %300, label %301, label %303

301:                                              ; preds = %299
  %302 = bitcast %"class.std::__1::vector.444"* %288 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %302) #13
  unreachable

303:                                              ; preds = %299
  %304 = call i8* @_Znwm(i64 %295) #12
  %305 = bitcast i8* %304 to %"struct.x11::Xkb::SetExplicit"*
  %306 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %307 = bitcast %"struct.x11::Xkb::SetExplicit"** %306 to i8**
  store i8* %304, i8** %307, align 8
  %308 = bitcast %"class.std::__1::vector.444"* %288 to i8**
  store i8* %304, i8** %308, align 8
  %309 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %305, i64 %296
  %310 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::SetExplicit"* %309, %"struct.x11::Xkb::SetExplicit"** %310, align 8
  %311 = bitcast %"struct.x11::Xkb::SetExplicit"** %306 to i64*
  %312 = ptrtoint i8* %304 to i64
  %313 = icmp sgt i64 %295, 0
  br i1 %313, label %314, label %319

314:                                              ; preds = %303
  %315 = lshr exact i64 %295, 3
  %316 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %298, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %304, i8* align 4 %316, i64 %295, i1 false) #11
  %317 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %305, i64 %315
  %318 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %317 to i64
  br label %319

319:                                              ; preds = %314, %303
  %320 = phi i64 [ %318, %314 ], [ %312, %303 ]
  store i64 %320, i64* %311, align 8
  br label %321

321:                                              ; preds = %319, %286
  store i8 1, i8* %282, align 8
  br label %322

322:                                              ; preds = %281, %321
  %323 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.absl::optional.451", %"class.absl::optional.451"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %323, i8 0, i64 32, i1 false) #11
  %325 = load i8, i8* %324, align 8, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %363, label %327

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.absl::optional.451", %"class.absl::optional.451"* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %329 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  %330 = bitcast %"class.std::__1::vector.456"* %329 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 24, i1 false) #11
  %331 = getelementptr inbounds %"class.absl::optional.451", %"class.absl::optional.451"* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %332 = bitcast %"struct.x11::Xkb::KeyModMap"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.std::__1::vector.456"* %328 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = sub i64 %333, %335
  %337 = ashr exact i64 %336, 3
  %338 = icmp eq i64 %336, 0
  %339 = inttoptr i64 %335 to %"struct.x11::Xkb::KeyModMap"*
  br i1 %338, label %362, label %340

340:                                              ; preds = %327
  %341 = icmp ugt i64 %337, 2305843009213693951
  br i1 %341, label %342, label %344

342:                                              ; preds = %340
  %343 = bitcast %"class.std::__1::vector.456"* %329 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %343) #13
  unreachable

344:                                              ; preds = %340
  %345 = call i8* @_Znwm(i64 %336) #12
  %346 = bitcast i8* %345 to %"struct.x11::Xkb::KeyModMap"*
  %347 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %348 = bitcast %"struct.x11::Xkb::KeyModMap"** %347 to i8**
  store i8* %345, i8** %348, align 8
  %349 = bitcast %"class.std::__1::vector.456"* %329 to i8**
  store i8* %345, i8** %349, align 8
  %350 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %346, i64 %337
  %351 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KeyModMap"* %350, %"struct.x11::Xkb::KeyModMap"** %351, align 8
  %352 = bitcast %"struct.x11::Xkb::KeyModMap"** %347 to i64*
  %353 = ptrtoint i8* %345 to i64
  %354 = icmp sgt i64 %336, 0
  br i1 %354, label %355, label %360

355:                                              ; preds = %344
  %356 = lshr exact i64 %336, 3
  %357 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %339, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %345, i8* align 4 %357, i64 %336, i1 false) #11
  %358 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %346, i64 %356
  %359 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %358 to i64
  br label %360

360:                                              ; preds = %355, %344
  %361 = phi i64 [ %359, %355 ], [ %353, %344 ]
  store i64 %361, i64* %352, align 8
  br label %362

362:                                              ; preds = %360, %327
  store i8 1, i8* %323, align 8
  br label %363

363:                                              ; preds = %322, %362
  %364 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.absl::optional.463", %"class.absl::optional.463"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %364, i8 0, i64 32, i1 false) #11
  %366 = load i8, i8* %365, align 8, !range !2
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %404, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.absl::optional.463", %"class.absl::optional.463"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %370 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %371 = bitcast %"class.std::__1::vector.468"* %370 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %371, i8 0, i64 24, i1 false) #11
  %372 = getelementptr inbounds %"class.absl::optional.463", %"class.absl::optional.463"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %373 = bitcast %"struct.x11::Xkb::KeyVModMap"** %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = bitcast %"class.std::__1::vector.468"* %369 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = sub i64 %374, %376
  %378 = ashr exact i64 %377, 3
  %379 = icmp eq i64 %377, 0
  %380 = inttoptr i64 %376 to %"struct.x11::Xkb::KeyVModMap"*
  br i1 %379, label %403, label %381

381:                                              ; preds = %368
  %382 = icmp ugt i64 %378, 2305843009213693951
  br i1 %382, label %383, label %385

383:                                              ; preds = %381
  %384 = bitcast %"class.std::__1::vector.468"* %370 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %384) #13
  unreachable

385:                                              ; preds = %381
  %386 = call i8* @_Znwm(i64 %377) #12
  %387 = bitcast i8* %386 to %"struct.x11::Xkb::KeyVModMap"*
  %388 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %389 = bitcast %"struct.x11::Xkb::KeyVModMap"** %388 to i8**
  store i8* %386, i8** %389, align 8
  %390 = bitcast %"class.std::__1::vector.468"* %370 to i8**
  store i8* %386, i8** %390, align 8
  %391 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %387, i64 %378
  %392 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %36, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KeyVModMap"* %391, %"struct.x11::Xkb::KeyVModMap"** %392, align 8
  %393 = bitcast %"struct.x11::Xkb::KeyVModMap"** %388 to i64*
  %394 = ptrtoint i8* %386 to i64
  %395 = icmp sgt i64 %377, 0
  br i1 %395, label %396, label %401

396:                                              ; preds = %385
  %397 = lshr exact i64 %377, 3
  %398 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %380, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %386, i8* align 4 %398, i64 %377, i1 false) #11
  %399 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %387, i64 %397
  %400 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %399 to i64
  br label %401

401:                                              ; preds = %396, %385
  %402 = phi i64 [ %400, %396 ], [ %394, %385 ]
  store i64 %402, i64* %393, align 8
  br label %403

403:                                              ; preds = %401, %368
  store i8 1, i8* %364, align 8
  br label %404

404:                                              ; preds = %363, %403
  %405 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6SetMapERKNS0_13SetMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetMapRequest"* nonnull dereferenceable(328) %36)
  call void @_ZN3x113Xkb13SetMapRequestD2Ev(%"struct.x11::Xkb::SetMapRequest"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %37) #11
  ret %"class.x11::Connection::FutureImpl"* %405
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb13SetMapRequestD2Ev(%"struct.x11::Xkb::SetMapRequest"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %6, align 8
  %8 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %7 to i64
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.x11::Xkb::KeyVModMap"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %7, i64 0, i32 0
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %20, align 8
  %22 = icmp eq %"struct.x11::Xkb::KeyModMap"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %21 to i64
  %25 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.x11::Xkb::KeyModMap"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %34, align 8
  %36 = icmp eq %"struct.x11::Xkb::SetExplicit"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.x11::Xkb::SetExplicit"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %35, i64 0, i32 0
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %37, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i8* %49 to i64
  %53 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  tail call void @_ZdlPv(i8* nonnull %49) #12
  br label %55

55:                                               ; preds = %51, %47
  store i8 0, i8* %44, align 8
  br label %56

56:                                               ; preds = %43, %55
  %57 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %61, align 8
  %63 = icmp eq %"struct.x11::Xkb::SetBehavior"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %62 to i64
  %66 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.x11::Xkb::SetBehavior"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %62, i64 0, i32 0
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %64, %60
  store i8 0, i8* %57, align 8
  br label %70

70:                                               ; preds = %56, %69
  %71 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %75, align 8
  %77 = icmp eq %"union.x11::Xkb::Action"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint %"union.x11::Xkb::Action"* %76 to i64
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %81 = bitcast %"union.x11::Xkb::Action"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"union.x11::Xkb::Action"* %76 to i8*
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %78, %74
  store i8 0, i8* %71, align 8
  br label %84

84:                                               ; preds = %70, %83
  %85 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = ptrtoint i8* %90 to i64
  %94 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %95 = bitcast i8** %94 to i64*
  store i64 %93, i64* %95, align 8
  tail call void @_ZdlPv(i8* nonnull %90) #12
  br label %96

96:                                               ; preds = %92, %88
  store i8 0, i8* %85, align 8
  br label %97

97:                                               ; preds = %84, %96
  %98 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %102, align 8
  %104 = icmp eq %"struct.x11::Xkb::KeySymMap"* %103, null
  br i1 %104, label %127, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %107 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %106, align 8
  %108 = icmp eq %"struct.x11::Xkb::KeySymMap"* %107, %103
  br i1 %108, label %124, label %109

109:                                              ; preds = %105, %120
  %110 = phi %"struct.x11::Xkb::KeySymMap"* [ %111, %120 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1
  %112 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 3, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %109
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 3, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  tail call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %109
  %121 = icmp eq %"struct.x11::Xkb::KeySymMap"* %111, %103
  br i1 %121, label %122, label %109

122:                                              ; preds = %120
  %123 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %102, align 8
  br label %124

124:                                              ; preds = %122, %105
  %125 = phi %"struct.x11::Xkb::KeySymMap"* [ %123, %122 ], [ %103, %105 ]
  store %"struct.x11::Xkb::KeySymMap"* %103, %"struct.x11::Xkb::KeySymMap"** %106, align 8
  %126 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %125, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %101
  store i8 0, i8* %98, align 8
  br label %128

128:                                              ; preds = %97, %127
  %129 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %170, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %134 = getelementptr inbounds %"class.std::__1::vector.494", %"class.std::__1::vector.494"* %133, i64 0, i32 0, i32 0
  %135 = load %"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"** %134, align 8
  %136 = icmp eq %"struct.x11::Xkb::SetKeyType"* %135, null
  br i1 %136, label %169, label %137

137:                                              ; preds = %132
  %138 = bitcast %"struct.x11::Xkb::SetKeyType"* %135 to i8*
  %139 = getelementptr inbounds %"struct.x11::Xkb::SetMapRequest", %"struct.x11::Xkb::SetMapRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %140 = load %"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"** %139, align 8
  %141 = icmp eq %"struct.x11::Xkb::SetKeyType"* %140, %135
  br i1 %141, label %167, label %142

142:                                              ; preds = %137, %162
  %143 = phi %"struct.x11::Xkb::SetKeyType"* [ %144, %162 ], [ %140, %137 ]
  %144 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %143, i64 -1
  %145 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %143, i64 -1, i32 6, i32 0, i32 0
  %146 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %145, align 8
  %147 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %142
  %149 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %146 to i64
  %150 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %143, i64 -1, i32 6, i32 0, i32 1
  %151 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %146, i64 0, i32 0
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %148, %142
  %154 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %143, i64 -1, i32 5, i32 0, i32 0
  %155 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %154, align 8
  %156 = icmp eq %"struct.x11::Xkb::KTSetMapEntry"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %155 to i64
  %159 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %143, i64 -1, i32 5, i32 0, i32 1
  %160 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %155, i64 0, i32 0
  tail call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %157, %153
  %163 = icmp eq %"struct.x11::Xkb::SetKeyType"* %144, %135
  br i1 %163, label %164, label %142

164:                                              ; preds = %162
  %165 = bitcast %"class.std::__1::vector.494"* %133 to i8**
  %166 = load i8*, i8** %165, align 8
  br label %167

167:                                              ; preds = %164, %137
  %168 = phi i8* [ %166, %164 ], [ %138, %137 ]
  store %"struct.x11::Xkb::SetKeyType"* %135, %"struct.x11::Xkb::SetKeyType"** %139, align 8
  tail call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %167, %132
  store i8 0, i8* %129, align 8
  br label %170

170:                                              ; preds = %128, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetCompatMapERKNS0_19GetCompatMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetCompatMapRequest"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"class.x11::WriteBuffer", align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %19 = load %"class.x11::Connection"*, %"class.x11::Connection"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %19) #11
  br i1 %20, label %21, label %105

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %105, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.x11::WriteBuffer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %14) #11
  %27 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %1, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %1, i64 0, i32 5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  %29 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %15, align 1
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %14, i64 0, i32 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %15) #11
  %35 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %14, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  store i8 10, i8* %16, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i64, i64* %35, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 0, i8* %9, align 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %44, align 8
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %35, align 8
  %51 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %1, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %1, i64 0, i32 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  %53 = bitcast %"struct.x11::Xkb::GetCompatMapRequest"* %1 to i8*
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %53) #11
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %59 = load i64, i64* %35, align 8
  %60 = add i64 %59, 2
  store i64 %60, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %61 = load i32, i32* %27, align 4
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %17, align 1
  %63 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %64, align 8
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  %66 = load i64, i64* %35, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %35, align 8
  %68 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %69, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %51) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  %71 = load i64, i64* %35, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %35, align 8
  %73 = bitcast i16* %28 to i8*
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %75, align 8
  %76 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %73) #11
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  %79 = load i64, i64* %35, align 8
  %80 = add i64 %79, 2
  store i64 %80, i64* %35, align 8
  %81 = bitcast i16* %52 to i8*
  %82 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %83, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %81) #11
  %85 = getelementptr inbounds i8, i8* %81, i64 1
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %85) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %87 = load i64, i64* %35, align 8
  %88 = add i64 %87, 2
  store i64 %88, i64* %35, align 8
  %89 = sub i64 2, %87
  %90 = and i64 %89, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 0, i8* %13, align 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %25
  %93 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %94 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  br label %95

95:                                               ; preds = %95, %92
  %96 = phi i64 [ 0, %92 ], [ %100, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %94, align 8
  %97 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  %98 = load i64, i64* %35, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %35, align 8
  %100 = add nuw nsw i64 %96, 1
  %101 = icmp eq i64 %100, %90
  br i1 %101, label %102, label %95

102:                                              ; preds = %95, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  %103 = load %"class.x11::Connection"*, %"class.x11::Connection"** %18, align 8
  %104 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %103, %"class.x11::WriteBuffer"* nonnull %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #11
  br label %105

105:                                              ; preds = %2, %21, %102
  %106 = phi %"class.x11::Connection::FutureImpl"* [ %104, %102 ], [ null, %21 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetCompatMapERKNS0_10DeviceSpecERKNS0_10SetOfGroupERKhRKtSA_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.x11::Xkb::GetCompatMapRequest", align 4
  %8 = bitcast %"struct.x11::Xkb::GetCompatMapRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %7, i64 0, i32 0
  %10 = load i16, i16* %1, align 2
  store i16 %10, i16* %9, align 4
  %11 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %7, i64 0, i32 2
  %12 = load i32, i32* %2, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %7, i64 0, i32 3
  %14 = load i8, i8* %3, align 1
  store i8 %14, i8* %13, align 4
  %15 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %7, i64 0, i32 5
  %16 = load i16, i16* %4, align 2
  store i16 %16, i16* %15, align 2
  %17 = getelementptr inbounds %"struct.x11::Xkb::GetCompatMapRequest", %"struct.x11::Xkb::GetCompatMapRequest"* %7, i64 0, i32 6
  %18 = load i16, i16* %5, align 2
  store i16 %18, i16* %17, align 4
  %19 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetCompatMapERKNS0_19GetCompatMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetCompatMapRequest"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret %"class.x11::Connection::FutureImpl"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetCompatMapReply"* @_ZN3x116detail9ReadReplyINS_3Xkb17GetCompatMapReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 64) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetCompatMapReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 64, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds i8, i8* %2, i64 10
  %11 = bitcast i8* %10 to i16*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = bitcast i8* %13 to %"struct.x11::Xkb::SymInterpret"**
  %15 = bitcast i8* %13 to i64*
  %16 = bitcast i8* %12 to i64*
  %17 = getelementptr inbounds i8, i8* %2, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::vector.365"*
  %19 = getelementptr inbounds i8, i8* %2, i64 48
  %20 = bitcast i8* %19 to %"struct.x11::Xkb::ModDef"**
  %21 = bitcast i8* %19 to i64*
  %22 = bitcast i8* %17 to i64*
  %23 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #11
  %30 = load i64, i64* %23, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %23, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #11
  %37 = load i64, i64* %23, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8, i8* %38, align 1
  store i8 %39, i8* %2, align 1
  %40 = add i64 %37, 1
  store i64 %40, i64* %23, align 8
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %42 = bitcast %"class.base::RefCountedMemory"* %41 to i8* (%"class.base::RefCountedMemory"*)***
  %43 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %43, align 8
  %45 = tail call i8* %44(%"class.base::RefCountedMemory"* %41) #11
  %46 = load i64, i64* %23, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 1
  store i16 %49, i16* %5, align 2
  %50 = add i64 %46, 2
  store i64 %50, i64* %23, align 8
  %51 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %52 = bitcast %"class.base::RefCountedMemory"* %51 to i8* (%"class.base::RefCountedMemory"*)***
  %53 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %53, align 8
  %55 = tail call i8* %54(%"class.base::RefCountedMemory"* %51) #11
  %56 = load i64, i64* %23, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %23, align 8
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %59 = bitcast %"class.base::RefCountedMemory"* %58 to i8* (%"class.base::RefCountedMemory"*)***
  %60 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %60, align 8
  %62 = tail call i8* %61(%"class.base::RefCountedMemory"* %58) #11
  %63 = load i64, i64* %23, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  store i32 %66, i32* %7, align 4
  %67 = add i64 %63, 2
  store i64 %67, i64* %23, align 8
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %69 = bitcast %"class.base::RefCountedMemory"* %68 to i8* (%"class.base::RefCountedMemory"*)***
  %70 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %69, align 8
  %71 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %70, align 8
  %72 = tail call i8* %71(%"class.base::RefCountedMemory"* %68) #11
  %73 = load i64, i64* %23, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 1
  store i16 %76, i16* %9, align 2
  %77 = add i64 %73, 2
  store i64 %77, i64* %23, align 8
  %78 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %79 = bitcast %"class.base::RefCountedMemory"* %78 to i8* (%"class.base::RefCountedMemory"*)***
  %80 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %79, align 8
  %81 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %80, align 8
  %82 = tail call i8* %81(%"class.base::RefCountedMemory"* %78) #11
  %83 = load i64, i64* %23, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 1
  %87 = add i64 %83, 2
  store i64 %87, i64* %23, align 8
  %88 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %89 = bitcast %"class.base::RefCountedMemory"* %88 to i8* (%"class.base::RefCountedMemory"*)***
  %90 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %89, align 8
  %91 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %90, align 8
  %92 = tail call i8* %91(%"class.base::RefCountedMemory"* %88) #11
  %93 = load i64, i64* %23, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 1
  store i16 %96, i16* %11, align 2
  %97 = add i64 %93, 18
  store i64 %97, i64* %23, align 8
  %98 = zext i16 %86 to i64
  %99 = load i64, i64* %15, align 8
  %100 = load i64, i64* %16, align 8
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 5
  %103 = icmp ult i64 %102, %98
  %104 = inttoptr i64 %100 to %"struct.x11::Xkb::SymInterpret"*
  br i1 %103, label %105, label %111

105:                                              ; preds = %1
  %106 = bitcast i8* %12 to %"class.std::__1::vector.522"*
  %107 = sub nsw i64 %98, %102
  tail call void @_ZNSt3__16vectorIN3x113Xkb12SymInterpretENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.522"* %106, i64 %107) #11
  %108 = bitcast i8* %12 to %"struct.x11::Xkb::SymInterpret"**
  %109 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %108, align 8
  %110 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %14, align 8
  br label %116

111:                                              ; preds = %1
  %112 = inttoptr i64 %99 to %"struct.x11::Xkb::SymInterpret"*
  %113 = icmp ugt i64 %102, %98
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %104, i64 %98
  store %"struct.x11::Xkb::SymInterpret"* %115, %"struct.x11::Xkb::SymInterpret"** %14, align 8
  br label %116

116:                                              ; preds = %105, %111, %114
  %117 = phi %"struct.x11::Xkb::SymInterpret"* [ %110, %105 ], [ %112, %111 ], [ %115, %114 ]
  %118 = phi %"struct.x11::Xkb::SymInterpret"* [ %109, %105 ], [ %104, %111 ], [ %104, %114 ]
  %119 = icmp eq %"struct.x11::Xkb::SymInterpret"* %118, %117
  br i1 %119, label %120, label %144

120:                                              ; preds = %144, %116
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = tail call i64 @llvm.ctpop.i64(i64 %122) #11, !range !4
  %124 = load i64, i64* %21, align 8
  %125 = load i64, i64* %22, align 8
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, 12
  %128 = icmp ugt i64 %123, %127
  %129 = inttoptr i64 %125 to %"struct.x11::Xkb::ModDef"*
  br i1 %128, label %130, label %135

130:                                              ; preds = %120
  %131 = sub nsw i64 %123, %127
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.365"* %18, i64 %131) #11
  %132 = bitcast i8* %17 to %"struct.x11::Xkb::ModDef"**
  %133 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %132, align 8
  %134 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %20, align 8
  br label %140

135:                                              ; preds = %120
  %136 = inttoptr i64 %124 to %"struct.x11::Xkb::ModDef"*
  %137 = icmp ult i64 %123, %127
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %129, i64 %123
  store %"struct.x11::Xkb::ModDef"* %139, %"struct.x11::Xkb::ModDef"** %20, align 8
  br label %140

140:                                              ; preds = %130, %135, %138
  %141 = phi %"struct.x11::Xkb::ModDef"* [ %134, %130 ], [ %136, %135 ], [ %139, %138 ]
  %142 = phi %"struct.x11::Xkb::ModDef"* [ %133, %130 ], [ %129, %135 ], [ %129, %138 ]
  %143 = icmp eq %"struct.x11::Xkb::ModDef"* %142, %141
  br i1 %143, label %292, label %297

144:                                              ; preds = %116, %144
  %145 = phi %"struct.x11::Xkb::SymInterpret"* [ %290, %144 ], [ %118, %116 ]
  %146 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 3
  %150 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 4
  %151 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %152 = bitcast %"class.base::RefCountedMemory"* %151 to i8* (%"class.base::RefCountedMemory"*)***
  %153 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %152, align 8
  %154 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %153, align 8
  %155 = tail call i8* %154(%"class.base::RefCountedMemory"* %151) #11
  %156 = load i64, i64* %23, align 8
  %157 = getelementptr inbounds i8, i8* %155, i64 %156
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 1
  store i32 %159, i32* %146, align 4
  %160 = load i64, i64* %23, align 8
  %161 = add i64 %160, 4
  store i64 %161, i64* %23, align 8
  %162 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %163 = bitcast %"class.base::RefCountedMemory"* %162 to i8* (%"class.base::RefCountedMemory"*)***
  %164 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %163, align 8
  %165 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %164, align 8
  %166 = tail call i8* %165(%"class.base::RefCountedMemory"* %162) #11
  %167 = load i64, i64* %23, align 8
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = add i64 %167, 1
  store i64 %170, i64* %23, align 8
  %171 = zext i8 %169 to i32
  store i32 %171, i32* %147, align 4
  %172 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %173 = bitcast %"class.base::RefCountedMemory"* %172 to i8* (%"class.base::RefCountedMemory"*)***
  %174 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %173, align 8
  %175 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %174, align 8
  %176 = tail call i8* %175(%"class.base::RefCountedMemory"* %172) #11
  %177 = load i64, i64* %23, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 %177
  %179 = load i8, i8* %178, align 1
  store i8 %179, i8* %148, align 1
  %180 = load i64, i64* %23, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %23, align 8
  %182 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %183 = bitcast %"class.base::RefCountedMemory"* %182 to i8* (%"class.base::RefCountedMemory"*)***
  %184 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %183, align 8
  %185 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %184, align 8
  %186 = tail call i8* %185(%"class.base::RefCountedMemory"* %182) #11
  %187 = load i64, i64* %23, align 8
  %188 = getelementptr inbounds i8, i8* %186, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = add i64 %187, 1
  store i64 %190, i64* %23, align 8
  %191 = zext i8 %189 to i32
  store i32 %191, i32* %149, align 4
  %192 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %193 = bitcast %"class.base::RefCountedMemory"* %192 to i8* (%"class.base::RefCountedMemory"*)***
  %194 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %193, align 8
  %195 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %194, align 8
  %196 = tail call i8* %195(%"class.base::RefCountedMemory"* %192) #11
  %197 = load i64, i64* %23, align 8
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  %199 = load i8, i8* %198, align 1
  store i8 %199, i8* %150, align 1
  %200 = load i64, i64* %23, align 8
  %201 = add i64 %200, 1
  store i64 %201, i64* %23, align 8
  %202 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 0
  %203 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %204 = bitcast %"class.base::RefCountedMemory"* %203 to i8* (%"class.base::RefCountedMemory"*)***
  %205 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %204, align 8
  %206 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %205, align 8
  %207 = tail call i8* %206(%"class.base::RefCountedMemory"* %203) #11
  %208 = load i64, i64* %23, align 8
  %209 = getelementptr inbounds i8, i8* %207, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = add i64 %208, 1
  store i64 %211, i64* %23, align 8
  %212 = zext i8 %210 to i32
  store i32 %212, i32* %202, align 4
  %213 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 0
  %214 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %215 = bitcast %"class.base::RefCountedMemory"* %214 to i8* (%"class.base::RefCountedMemory"*)***
  %216 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %215, align 8
  %217 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %216, align 8
  %218 = tail call i8* %217(%"class.base::RefCountedMemory"* %214) #11
  %219 = load i64, i64* %23, align 8
  %220 = getelementptr inbounds i8, i8* %218, i64 %219
  %221 = load i8, i8* %220, align 1
  store i8 %221, i8* %213, align 1
  %222 = load i64, i64* %23, align 8
  %223 = add i64 %222, 1
  store i64 %223, i64* %23, align 8
  %224 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 1
  %225 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %226 = bitcast %"class.base::RefCountedMemory"* %225 to i8* (%"class.base::RefCountedMemory"*)***
  %227 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %226, align 8
  %228 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %227, align 8
  %229 = tail call i8* %228(%"class.base::RefCountedMemory"* %225) #11
  %230 = load i64, i64* %23, align 8
  %231 = getelementptr inbounds i8, i8* %229, i64 %230
  %232 = load i8, i8* %231, align 1
  store i8 %232, i8* %224, align 1
  %233 = load i64, i64* %23, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %23, align 8
  %235 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 2
  %236 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %237 = bitcast %"class.base::RefCountedMemory"* %236 to i8* (%"class.base::RefCountedMemory"*)***
  %238 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %237, align 8
  %239 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %238, align 8
  %240 = tail call i8* %239(%"class.base::RefCountedMemory"* %236) #11
  %241 = load i64, i64* %23, align 8
  %242 = getelementptr inbounds i8, i8* %240, i64 %241
  %243 = load i8, i8* %242, align 1
  store i8 %243, i8* %235, align 1
  %244 = load i64, i64* %23, align 8
  %245 = add i64 %244, 1
  store i64 %245, i64* %23, align 8
  %246 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 3
  %247 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %248 = bitcast %"class.base::RefCountedMemory"* %247 to i8* (%"class.base::RefCountedMemory"*)***
  %249 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %248, align 8
  %250 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %249, align 8
  %251 = tail call i8* %250(%"class.base::RefCountedMemory"* %247) #11
  %252 = load i64, i64* %23, align 8
  %253 = getelementptr inbounds i8, i8* %251, i64 %252
  %254 = load i8, i8* %253, align 1
  store i8 %254, i8* %246, align 1
  %255 = load i64, i64* %23, align 8
  %256 = add i64 %255, 1
  store i64 %256, i64* %23, align 8
  %257 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 4
  %258 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %259 = bitcast %"class.base::RefCountedMemory"* %258 to i8* (%"class.base::RefCountedMemory"*)***
  %260 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %259, align 8
  %261 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %260, align 8
  %262 = tail call i8* %261(%"class.base::RefCountedMemory"* %258) #11
  %263 = load i64, i64* %23, align 8
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  %265 = load i8, i8* %264, align 1
  store i8 %265, i8* %257, align 1
  %266 = load i64, i64* %23, align 8
  %267 = add i64 %266, 1
  store i64 %267, i64* %23, align 8
  %268 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 5
  %269 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %270 = bitcast %"class.base::RefCountedMemory"* %269 to i8* (%"class.base::RefCountedMemory"*)***
  %271 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %270, align 8
  %272 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %271, align 8
  %273 = tail call i8* %272(%"class.base::RefCountedMemory"* %269) #11
  %274 = load i64, i64* %23, align 8
  %275 = getelementptr inbounds i8, i8* %273, i64 %274
  %276 = load i8, i8* %275, align 1
  store i8 %276, i8* %268, align 1
  %277 = load i64, i64* %23, align 8
  %278 = add i64 %277, 1
  store i64 %278, i64* %23, align 8
  %279 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 0, i32 6, i32 1, i32 0, i64 6
  %280 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %281 = bitcast %"class.base::RefCountedMemory"* %280 to i8* (%"class.base::RefCountedMemory"*)***
  %282 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %281, align 8
  %283 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %282, align 8
  %284 = tail call i8* %283(%"class.base::RefCountedMemory"* %280) #11
  %285 = load i64, i64* %23, align 8
  %286 = getelementptr inbounds i8, i8* %284, i64 %285
  %287 = load i8, i8* %286, align 1
  store i8 %287, i8* %279, align 1
  %288 = load i64, i64* %23, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %23, align 8
  %290 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %145, i64 1
  %291 = icmp eq %"struct.x11::Xkb::SymInterpret"* %290, %117
  br i1 %291, label %120, label %144

292:                                              ; preds = %297, %140
  %293 = load i64, i64* %23, align 8
  %294 = sub i64 0, %293
  %295 = and i64 %294, 3
  %296 = add i64 %295, %293
  store i64 %296, i64* %23, align 8
  ret %"struct.x11::Xkb::GetCompatMapReply"* %3

297:                                              ; preds = %140, %297
  %298 = phi %"struct.x11::Xkb::ModDef"* [ %333, %297 ], [ %142, %140 ]
  %299 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %298, i64 0, i32 0
  %300 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %298, i64 0, i32 1
  %301 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %298, i64 0, i32 2
  %302 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %303 = bitcast %"class.base::RefCountedMemory"* %302 to i8* (%"class.base::RefCountedMemory"*)***
  %304 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %303, align 8
  %305 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %304, align 8
  %306 = tail call i8* %305(%"class.base::RefCountedMemory"* %302) #11
  %307 = load i64, i64* %23, align 8
  %308 = getelementptr inbounds i8, i8* %306, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = add i64 %307, 1
  store i64 %310, i64* %23, align 8
  %311 = zext i8 %309 to i32
  store i32 %311, i32* %299, align 4
  %312 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %313 = bitcast %"class.base::RefCountedMemory"* %312 to i8* (%"class.base::RefCountedMemory"*)***
  %314 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %313, align 8
  %315 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %314, align 8
  %316 = tail call i8* %315(%"class.base::RefCountedMemory"* %312) #11
  %317 = load i64, i64* %23, align 8
  %318 = getelementptr inbounds i8, i8* %316, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = add i64 %317, 1
  store i64 %320, i64* %23, align 8
  %321 = zext i8 %319 to i32
  store i32 %321, i32* %300, align 4
  %322 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %24, align 8
  %323 = bitcast %"class.base::RefCountedMemory"* %322 to i8* (%"class.base::RefCountedMemory"*)***
  %324 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %323, align 8
  %325 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %324, align 8
  %326 = tail call i8* %325(%"class.base::RefCountedMemory"* %322) #11
  %327 = load i64, i64* %23, align 8
  %328 = getelementptr inbounds i8, i8* %326, i64 %327
  %329 = bitcast i8* %328 to i16*
  %330 = load i16, i16* %329, align 1
  %331 = add i64 %327, 2
  store i64 %331, i64* %23, align 8
  %332 = zext i16 %330 to i32
  store i32 %332, i32* %301, align 4
  %333 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %298, i64 1
  %334 = icmp eq %"struct.x11::Xkb::ModDef"* %333, %141
  br i1 %334, label %292, label %297
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SetCompatMapERKNS0_19SetCompatMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetCompatMapRequest"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca i8, align 1
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca i8, align 1
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.x11::WriteBuffer", align 8
  %30 = alloca i16, align 2
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i16, align 2
  %40 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %41 = load %"class.x11::Connection"*, %"class.x11::Connection"** %40, align 8
  %42 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %41) #11
  br i1 %42, label %43, label %282

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %282, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.x11::WriteBuffer"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  %49 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 3
  %51 = bitcast i16* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %51) #11
  store i16 0, i16* %30, align 2
  %52 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 5
  %53 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 5, i32 0, i32 1
  %54 = bitcast %"class.std::__1::vector.522"* %52 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %55 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %31, align 1
  %57 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 1
  %58 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %59, align 8
  %60 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %31) #11
  %61 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #11
  store i8 11, i8* %32, align 1
  %64 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %65, align 8
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %32) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %67 = load i64, i64* %61, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 0, i8* %23, align 1
  %69 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  %70 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %70, align 8
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %72 = load i64, i64* %61, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %70, align 8
  %74 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %75 = load i64, i64* %61, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %61, align 8
  %77 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 4
  %79 = bitcast %"struct.x11::Xkb::SymInterpret"** %53 to i64*
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 6, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  %81 = bitcast %"struct.x11::Xkb::SetCompatMapRequest"* %1 to i8*
  %82 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %83, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %81) #11
  %85 = getelementptr inbounds i8, i8* %81, i64 1
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %85) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %87 = load i64, i64* %61, align 8
  %88 = add i64 %87, 2
  store i64 %88, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #11
  store i8 0, i8* %20, align 1
  %89 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  %90 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %90, align 8
  %91 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %92 = load i64, i64* %61, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #11
  %94 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %95, align 8
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %97 = load i64, i64* %61, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %61, align 8
  %99 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %100, align 8
  %101 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  %102 = load i64, i64* %61, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #11
  %104 = load i32, i32* %50, align 4
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %33, align 1
  %106 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %107, align 8
  %108 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  %109 = load i64, i64* %61, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %61, align 8
  %111 = bitcast i16* %78 to i8*
  %112 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  %113 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %113, align 8
  %114 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %111) #11
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %115) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %117 = load i64, i64* %61, align 8
  %118 = add i64 %117, 2
  store i64 %118, i64* %61, align 8
  %119 = load i64, i64* %79, align 8
  %120 = load i64, i64* %54, align 8
  %121 = sub i64 %119, %120
  %122 = lshr exact i64 %121, 5
  %123 = trunc i64 %122 to i16
  store i16 %123, i16* %30, align 2
  %124 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  %125 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %125, align 8
  %126 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* nonnull dereferenceable(1) %51) #11
  %127 = getelementptr inbounds i8, i8* %51, i64 1
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %127) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #11
  %129 = load i64, i64* %61, align 8
  %130 = add i64 %129, 2
  store i64 %130, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 0, i8* %13, align 1
  %131 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %132 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %132, align 8
  %133 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %134 = load i64, i64* %61, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %132, align 8
  %136 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %137 = load i64, i64* %61, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  %139 = getelementptr inbounds %"class.std::__1::vector.522", %"class.std::__1::vector.522"* %52, i64 0, i32 0, i32 0
  %140 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %139, align 8
  %141 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %53, align 8
  %142 = icmp eq %"struct.x11::Xkb::SymInterpret"* %140, %141
  br i1 %142, label %158, label %143

143:                                              ; preds = %47
  %144 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %145 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  %146 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %147 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  %148 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %149 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  %150 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %151 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  %152 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %153 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %154 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %155 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  %156 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %157 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %173

158:                                              ; preds = %173, %47
  %159 = phi i64 [ %138, %47 ], [ %238, %173 ]
  %160 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %1, i64 0, i32 6, i32 0, i32 0
  %161 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %160, align 8
  %162 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %80, align 8
  %163 = icmp eq %"struct.x11::Xkb::ModDef"* %161, %162
  br i1 %163, label %241, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  %166 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  %167 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  %168 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  %169 = bitcast i16* %39 to i8*
  %170 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  %171 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  %172 = getelementptr inbounds i8, i8* %169, i64 1
  br label %259

173:                                              ; preds = %143, %173
  %174 = phi %"struct.x11::Xkb::SymInterpret"* [ %140, %143 ], [ %239, %173 ]
  %175 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 1
  %176 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 2
  %177 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 3
  %178 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 4
  %179 = bitcast %"struct.x11::Xkb::SymInterpret"* %174 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %145, align 8
  %180 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %179) #11
  %181 = getelementptr inbounds i8, i8* %179, i64 1
  %182 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %181) #11
  %183 = getelementptr inbounds i8, i8* %179, i64 2
  %184 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %183) #11
  %185 = getelementptr inbounds i8, i8* %179, i64 3
  %186 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %185) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  %187 = load i64, i64* %61, align 8
  %188 = add i64 %187, 4
  store i64 %188, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #11
  %189 = load i32, i32* %175, align 4
  %190 = trunc i32 %189 to i8
  store i8 %190, i8* %34, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %147, align 8
  %191 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %192 = load i64, i64* %61, align 8
  %193 = add i64 %192, 1
  store i64 %193, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %149, align 8
  %194 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %176) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #11
  %195 = load i64, i64* %61, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #11
  %197 = load i32, i32* %177, align 4
  %198 = trunc i32 %197 to i8
  store i8 %198, i8* %35, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %151, align 8
  %199 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  %200 = load i64, i64* %61, align 8
  %201 = add i64 %200, 1
  store i64 %201, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %153, align 8
  %202 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %178) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #11
  %203 = load i64, i64* %61, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %61, align 8
  %205 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  %206 = load i32, i32* %205, align 4
  %207 = trunc i32 %206 to i8
  store i8 %207, i8* %36, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %155, align 8
  %208 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #11
  %209 = load i64, i64* %61, align 8
  %210 = add i64 %209, 1
  store i64 %210, i64* %61, align 8
  %211 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %212 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %211) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %213 = load i64, i64* %61, align 8
  %214 = add i64 %213, 1
  store i64 %214, i64* %61, align 8
  %215 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %216 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %215) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %217 = load i64, i64* %61, align 8
  %218 = add i64 %217, 1
  store i64 %218, i64* %61, align 8
  %219 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %220 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %219) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %221 = load i64, i64* %61, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %61, align 8
  %223 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %224 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %223) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %225 = load i64, i64* %61, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %61, align 8
  %227 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %228 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %227) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %229 = load i64, i64* %61, align 8
  %230 = add i64 %229, 1
  store i64 %230, i64* %61, align 8
  %231 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %232 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %231) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %233 = load i64, i64* %61, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %61, align 8
  %235 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 0, i32 6, i32 1, i32 0, i64 6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %157, align 8
  %236 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %235) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %237 = load i64, i64* %61, align 8
  %238 = add i64 %237, 1
  store i64 %238, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #11
  %239 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %174, i64 1
  %240 = icmp eq %"struct.x11::Xkb::SymInterpret"* %239, %141
  br i1 %240, label %158, label %173

241:                                              ; preds = %259, %158
  %242 = phi i64 [ %159, %158 ], [ %279, %259 ]
  %243 = sub i64 0, %242
  %244 = and i64 %243, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %256, label %246

246:                                              ; preds = %241
  %247 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %248 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %249

249:                                              ; preds = %249, %246
  %250 = phi i64 [ 0, %246 ], [ %254, %249 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %248, align 8
  %251 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #11
  %252 = load i64, i64* %61, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %61, align 8
  %254 = add nuw nsw i64 %250, 1
  %255 = icmp eq i64 %254, %244
  br i1 %255, label %256, label %249

256:                                              ; preds = %249, %241
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %257 = load %"class.x11::Connection"*, %"class.x11::Connection"** %40, align 8
  %258 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %257, %"class.x11::WriteBuffer"* nonnull %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %51) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %48) #11
  br label %282

259:                                              ; preds = %164, %259
  %260 = phi %"struct.x11::Xkb::ModDef"* [ %161, %164 ], [ %280, %259 ]
  %261 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %260, i64 0, i32 0
  %262 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %260, i64 0, i32 1
  %263 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %260, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #11
  %264 = load i32, i32* %261, align 4
  %265 = trunc i32 %264 to i8
  store i8 %265, i8* %37, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %166, align 8
  %266 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %37) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  %267 = load i64, i64* %61, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #11
  %269 = load i32, i32* %262, align 4
  %270 = trunc i32 %269 to i8
  store i8 %270, i8* %38, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %168, align 8
  %271 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* nonnull dereferenceable(1) %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #11
  %272 = load i64, i64* %61, align 8
  %273 = add i64 %272, 1
  store i64 %273, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %169) #11
  %274 = load i32, i32* %263, align 4
  %275 = trunc i32 %274 to i16
  store i16 %275, i16* %39, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %171, align 8
  %276 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* nonnull dereferenceable(1) %169) #11
  %277 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %172) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #11
  %278 = load i64, i64* %61, align 8
  %279 = add i64 %278, 2
  store i64 %279, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #11
  %280 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %260, i64 1
  %281 = icmp eq %"struct.x11::Xkb::ModDef"* %280, %162
  br i1 %281, label %241, label %259

282:                                              ; preds = %2, %43, %256
  %283 = phi %"class.x11::Connection::FutureImpl"* [ %258, %256 ], [ null, %43 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %283
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SetCompatMapERKNS0_10DeviceSpecERKhS5_RKNS0_10SetOfGroupERKtRKNSt3__16vectorINS0_12SymInterpretENSB_9allocatorISD_EEEERKNSC_INS0_6ModDefENSE_ISJ_EEEE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), %"class.std::__1::vector.522"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.365"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.x11::Xkb::SetCompatMapRequest", align 8
  %10 = bitcast %"struct.x11::Xkb::SetCompatMapRequest"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 0
  %12 = load i16, i16* %1, align 2
  store i16 %12, i16* %11, align 8
  %13 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 1
  %14 = load i8, i8* %2, align 1
  store i8 %14, i8* %13, align 2
  %15 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 2
  %16 = load i8, i8* %3, align 1
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 3
  %18 = load i32, i32* %4, align 4
  store i32 %18, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 4
  %20 = load i16, i16* %5, align 2
  store i16 %20, i16* %19, align 8
  %21 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 5
  %22 = bitcast %"class.std::__1::vector.522"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11
  %23 = getelementptr inbounds %"class.std::__1::vector.522", %"class.std::__1::vector.522"* %6, i64 0, i32 0, i32 1
  %24 = bitcast %"struct.x11::Xkb::SymInterpret"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.522"* %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 5
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %53, label %31

31:                                               ; preds = %8
  %32 = icmp ugt i64 %29, 576460752303423487
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.522"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #13
  unreachable

35:                                               ; preds = %31
  %36 = tail call i8* @_Znwm(i64 %28) #12
  %37 = bitcast i8* %36 to %"struct.x11::Xkb::SymInterpret"*
  %38 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 5, i32 0, i32 1
  %39 = bitcast %"struct.x11::Xkb::SymInterpret"** %38 to i8**
  store i8* %36, i8** %39, align 8
  %40 = bitcast %"class.std::__1::vector.522"* %21 to i8**
  store i8* %36, i8** %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %37, i64 %29
  %42 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::SymInterpret"* %41, %"struct.x11::Xkb::SymInterpret"** %42, align 8
  %43 = bitcast %"struct.x11::Xkb::SymInterpret"** %38 to i64*
  %44 = ptrtoint i8* %36 to i64
  %45 = icmp sgt i64 %28, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %35
  %47 = lshr exact i64 %28, 5
  %48 = inttoptr i64 %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %48, i64 %28, i1 false) #11
  %49 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %37, i64 %47
  %50 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %49 to i64
  br label %51

51:                                               ; preds = %46, %35
  %52 = phi i64 [ %50, %46 ], [ %44, %35 ]
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %8, %51
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 6
  %55 = bitcast %"class.std::__1::vector.365"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  %56 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %7, i64 0, i32 0, i32 1
  %57 = bitcast %"struct.x11::Xkb::ModDef"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.365"* %7 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = sdiv exact i64 %61, 12
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %86, label %64

64:                                               ; preds = %53
  %65 = icmp ugt i64 %62, 1537228672809129301
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector.365"* %54 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #13
  unreachable

68:                                               ; preds = %64
  %69 = tail call i8* @_Znwm(i64 %61) #12
  %70 = bitcast i8* %69 to %"struct.x11::Xkb::ModDef"*
  %71 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 6, i32 0, i32 1
  %72 = bitcast %"struct.x11::Xkb::ModDef"** %71 to i8**
  store i8* %69, i8** %72, align 8
  %73 = bitcast %"class.std::__1::vector.365"* %54 to i8**
  store i8* %69, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %70, i64 %62
  %75 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::ModDef"* %74, %"struct.x11::Xkb::ModDef"** %75, align 8
  %76 = bitcast %"struct.x11::Xkb::ModDef"** %71 to i64*
  %77 = ptrtoint i8* %69 to i64
  %78 = icmp sgt i64 %61, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %68
  %80 = udiv exact i64 %61, 12
  %81 = inttoptr i64 %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 %81, i64 %61, i1 false) #11
  %82 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %70, i64 %80
  %83 = ptrtoint %"struct.x11::Xkb::ModDef"* %82 to i64
  br label %84

84:                                               ; preds = %79, %68
  %85 = phi i64 [ %83, %79 ], [ %77, %68 ]
  store i64 %85, i64* %76, align 8
  br label %86

86:                                               ; preds = %53, %84
  %87 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SetCompatMapERKNS0_19SetCompatMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetCompatMapRequest"* nonnull dereferenceable(64) %9)
  %88 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 6, i32 0, i32 0
  %89 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %88, align 8
  %90 = icmp eq %"struct.x11::Xkb::ModDef"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = ptrtoint %"struct.x11::Xkb::ModDef"* %89 to i64
  %93 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 6, i32 0, i32 1
  %94 = bitcast %"struct.x11::Xkb::ModDef"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"struct.x11::Xkb::ModDef"* %89 to i8*
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %91, %86
  %97 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 5, i32 0, i32 0
  %98 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %97, align 8
  %99 = icmp eq %"struct.x11::Xkb::SymInterpret"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %98 to i64
  %102 = getelementptr inbounds %"struct.x11::Xkb::SetCompatMapRequest", %"struct.x11::Xkb::SetCompatMapRequest"* %9, i64 0, i32 5, i32 0, i32 1
  %103 = bitcast %"struct.x11::Xkb::SymInterpret"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"struct.x11::Xkb::SymInterpret"* %98 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #11
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetIndicatorStateERKNS0_24GetIndicatorStateRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetIndicatorStateRequest"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.x11::WriteBuffer", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %16) #11
  br i1 %17, label %18, label %78

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.x11::WriteBuffer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %24 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %13, align 1
  %26 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 1
  %27 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %28, align 8
  %29 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %13) #11
  %30 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %12, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 12, i8* %14, align 1
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %34, align 8
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %39, align 8
  %43 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %44 = load i64, i64* %30, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  %46 = bitcast %"struct.x11::Xkb::GetIndicatorStateRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %46) #11
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %52 = load i64, i64* %30, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %57 = load i64, i64* %30, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %55, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %60 = load i64, i64* %30, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %62 = and i64 %60, 3
  %63 = xor i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %22
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %26, %"class.std::__1::vector.271"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %30, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %30, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #11
  br label %78

78:                                               ; preds = %2, %18, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %18 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetIndicatorStateERKNS0_10DeviceSpecE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Xkb::GetIndicatorStateRequest", align 2
  %4 = bitcast %"struct.x11::Xkb::GetIndicatorStateRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.x11::Xkb::GetIndicatorStateRequest", %"struct.x11::Xkb::GetIndicatorStateRequest"* %3, i64 0, i32 0
  %6 = load i16, i16* %1, align 2
  store i16 %6, i16* %5, align 2
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetIndicatorStateERKNS0_24GetIndicatorStateRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetIndicatorStateRequest"* nonnull dereferenceable(2) %3)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #11
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetIndicatorStateReply"* @_ZN3x116detail9ReadReplyINS_3Xkb22GetIndicatorStateReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 8) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetIndicatorStateReply"*
  %4 = bitcast i8* %2 to i64*
  store i64 0, i64* %4, align 4
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %12 = bitcast %"class.base::RefCountedMemory"* %11 to i8* (%"class.base::RefCountedMemory"*)***
  %13 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %12, align 8
  %14 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %13, align 8
  %15 = tail call i8* %14(%"class.base::RefCountedMemory"* %11) #11
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %9, align 8
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #11
  %23 = load i64, i64* %9, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %2, align 1
  %26 = add i64 %23, 1
  store i64 %26, i64* %9, align 8
  %27 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %28 = bitcast %"class.base::RefCountedMemory"* %27 to i8* (%"class.base::RefCountedMemory"*)***
  %29 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %28, align 8
  %30 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %29, align 8
  %31 = tail call i8* %30(%"class.base::RefCountedMemory"* %27) #11
  %32 = load i64, i64* %9, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 1
  store i16 %35, i16* %6, align 2
  %36 = add i64 %32, 2
  store i64 %36, i64* %9, align 8
  %37 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %38 = bitcast %"class.base::RefCountedMemory"* %37 to i8* (%"class.base::RefCountedMemory"*)***
  %39 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %38, align 8
  %40 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %39, align 8
  %41 = tail call i8* %40(%"class.base::RefCountedMemory"* %37) #11
  %42 = load i64, i64* %9, align 8
  %43 = add i64 %42, 4
  store i64 %43, i64* %9, align 8
  %44 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %45 = bitcast %"class.base::RefCountedMemory"* %44 to i8* (%"class.base::RefCountedMemory"*)***
  %46 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %45, align 8
  %47 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %46, align 8
  %48 = tail call i8* %47(%"class.base::RefCountedMemory"* %44) #11
  %49 = load i64, i64* %9, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  store i32 %52, i32* %8, align 4
  %53 = add i64 %49, 24
  %54 = sub i64 0, %49
  %55 = and i64 %54, 3
  %56 = add i64 %53, %55
  store i64 %56, i64* %9, align 8
  ret %"struct.x11::Xkb::GetIndicatorStateReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15GetIndicatorMapERKNS0_22GetIndicatorMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetIndicatorMapRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.x11::WriteBuffer", align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %17 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %17) #11
  br i1 %18, label %19, label %92

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.x11::WriteBuffer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %13) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  %25 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %26 = load i8, i8* %25, align 1
  store i8 %26, i8* %14, align 1
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 1
  %28 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %29, align 8
  %30 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %14) #11
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  store i8 13, i8* %15, align 1
  %34 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %35, align 8
  %36 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  %37 = load i64, i64* %31, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  %39 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %40 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %40, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %42 = load i64, i64* %31, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %40, align 8
  %44 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %45 = load i64, i64* %31, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %31, align 8
  %47 = getelementptr inbounds %"struct.x11::Xkb::GetIndicatorMapRequest", %"struct.x11::Xkb::GetIndicatorMapRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  %48 = bitcast %"struct.x11::Xkb::GetIndicatorMapRequest"* %1 to i8*
  %49 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %50, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %48) #11
  %52 = getelementptr inbounds i8, i8* %48, i64 1
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %54 = load i64, i64* %31, align 8
  %55 = add i64 %54, 2
  store i64 %55, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %56 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %57 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %57, align 8
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %59 = load i64, i64* %31, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %57, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %62 = load i64, i64* %31, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  %64 = bitcast i32* %47 to i8*
  %65 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %66, align 8
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #11
  %68 = getelementptr inbounds i8, i8* %64, i64 1
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %68) #11
  %70 = getelementptr inbounds i8, i8* %64, i64 2
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %70) #11
  %72 = getelementptr inbounds i8, i8* %64, i64 3
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %72) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  %74 = load i64, i64* %31, align 8
  %75 = add i64 %74, 4
  store i64 %75, i64* %31, align 8
  %76 = sub i64 0, %74
  %77 = and i64 %76, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 0, i8* %12, align 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %23
  %80 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %81 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  br label %82

82:                                               ; preds = %82, %79
  %83 = phi i64 [ 0, %79 ], [ %87, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  store %"class.std::__1::vector.271"* %27, %"class.std::__1::vector.271"** %81, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %85 = load i64, i64* %31, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %31, align 8
  %87 = add nuw nsw i64 %83, 1
  %88 = icmp eq i64 %87, %77
  br i1 %88, label %89, label %82

89:                                               ; preds = %82, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  %90 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  %91 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %90, %"class.x11::WriteBuffer"* nonnull %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #11
  br label %92

92:                                               ; preds = %2, %19, %89
  %93 = phi %"class.x11::Connection::FutureImpl"* [ %91, %89 ], [ null, %19 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %93
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15GetIndicatorMapERKNS0_10DeviceSpecERKj(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Xkb::GetIndicatorMapRequest", align 4
  %5 = bitcast %"struct.x11::Xkb::GetIndicatorMapRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetIndicatorMapRequest", %"struct.x11::Xkb::GetIndicatorMapRequest"* %4, i64 0, i32 0
  %7 = load i16, i16* %1, align 2
  store i16 %7, i16* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::Xkb::GetIndicatorMapRequest", %"struct.x11::Xkb::GetIndicatorMapRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15GetIndicatorMapERKNS0_22GetIndicatorMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetIndicatorMapRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetIndicatorMapReply"* @_ZN3x116detail9ReadReplyINS_3Xkb20GetIndicatorMapReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetIndicatorMapReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %15 = bitcast %"class.base::RefCountedMemory"* %14 to i8* (%"class.base::RefCountedMemory"*)***
  %16 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %16, align 8
  %18 = tail call i8* %17(%"class.base::RefCountedMemory"* %14) #11
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %12, align 8
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #11
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i8, i8* %27, align 1
  store i8 %28, i8* %2, align 1
  %29 = add i64 %26, 1
  store i64 %29, i64* %12, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #11
  %35 = load i64, i64* %12, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 1
  store i16 %38, i16* %5, align 2
  %39 = add i64 %35, 2
  store i64 %39, i64* %12, align 8
  %40 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %41 = bitcast %"class.base::RefCountedMemory"* %40 to i8* (%"class.base::RefCountedMemory"*)***
  %42 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %41, align 8
  %43 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %42, align 8
  %44 = tail call i8* %43(%"class.base::RefCountedMemory"* %40) #11
  %45 = load i64, i64* %12, align 8
  %46 = add i64 %45, 4
  store i64 %46, i64* %12, align 8
  %47 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %48 = bitcast %"class.base::RefCountedMemory"* %47 to i8* (%"class.base::RefCountedMemory"*)***
  %49 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %48, align 8
  %50 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %49, align 8
  %51 = tail call i8* %50(%"class.base::RefCountedMemory"* %47) #11
  %52 = load i64, i64* %12, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  store i32 %55, i32* %7, align 4
  %56 = add i64 %52, 4
  store i64 %56, i64* %12, align 8
  %57 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %58 = bitcast %"class.base::RefCountedMemory"* %57 to i8* (%"class.base::RefCountedMemory"*)***
  %59 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %58, align 8
  %60 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %59, align 8
  %61 = tail call i8* %60(%"class.base::RefCountedMemory"* %57) #11
  %62 = load i64, i64* %12, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 1
  store i32 %65, i32* %9, align 4
  %66 = add i64 %62, 4
  store i64 %66, i64* %12, align 8
  %67 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %68 = bitcast %"class.base::RefCountedMemory"* %67 to i8* (%"class.base::RefCountedMemory"*)***
  %69 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %68, align 8
  %70 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %69, align 8
  %71 = tail call i8* %70(%"class.base::RefCountedMemory"* %67) #11
  %72 = load i64, i64* %12, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  store i8 %74, i8* %10, align 1
  %75 = add i64 %72, 16
  store i64 %75, i64* %12, align 8
  %76 = icmp eq i32 %55, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %1
  %78 = zext i32 %55 to i64
  %79 = tail call i64 @llvm.ctpop.i64(i64 %78) #11, !range !4
  %80 = getelementptr inbounds i8, i8* %2, i64 24
  %81 = bitcast i8* %80 to %"struct.x11::Xkb::IndicatorMap"**
  %82 = bitcast i8* %11 to %"class.std::__1::vector.547"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb12IndicatorMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.547"* %82, i64 %79) #11
  %83 = bitcast i8* %11 to %"struct.x11::Xkb::IndicatorMap"**
  %84 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %83, align 8
  %85 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %81, align 8
  %86 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %92, %1, %77
  %88 = load i64, i64* %12, align 8
  %89 = sub i64 0, %88
  %90 = and i64 %89, 3
  %91 = add i64 %90, %88
  store i64 %91, i64* %12, align 8
  ret %"struct.x11::Xkb::GetIndicatorMapReply"* %3

92:                                               ; preds = %77, %92
  %93 = phi %"struct.x11::Xkb::IndicatorMap"* [ %183, %92 ], [ %84, %77 ]
  %94 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 2
  %97 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 3
  %98 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 4
  %99 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 5
  %100 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 6
  %101 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 0, i32 7
  %102 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %103 = bitcast %"class.base::RefCountedMemory"* %102 to i8* (%"class.base::RefCountedMemory"*)***
  %104 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %103, align 8
  %105 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %104, align 8
  %106 = tail call i8* %105(%"class.base::RefCountedMemory"* %102) #11
  %107 = load i64, i64* %12, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = add i64 %107, 1
  store i64 %110, i64* %12, align 8
  %111 = zext i8 %109 to i32
  store i32 %111, i32* %94, align 4
  %112 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %113 = bitcast %"class.base::RefCountedMemory"* %112 to i8* (%"class.base::RefCountedMemory"*)***
  %114 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %113, align 8
  %115 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %114, align 8
  %116 = tail call i8* %115(%"class.base::RefCountedMemory"* %112) #11
  %117 = load i64, i64* %12, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = add i64 %117, 1
  store i64 %120, i64* %12, align 8
  %121 = zext i8 %119 to i32
  store i32 %121, i32* %95, align 4
  %122 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %123 = bitcast %"class.base::RefCountedMemory"* %122 to i8* (%"class.base::RefCountedMemory"*)***
  %124 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %123, align 8
  %125 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %124, align 8
  %126 = tail call i8* %125(%"class.base::RefCountedMemory"* %122) #11
  %127 = load i64, i64* %12, align 8
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = add i64 %127, 1
  store i64 %130, i64* %12, align 8
  %131 = zext i8 %129 to i32
  store i32 %131, i32* %96, align 4
  %132 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %133 = bitcast %"class.base::RefCountedMemory"* %132 to i8* (%"class.base::RefCountedMemory"*)***
  %134 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %133, align 8
  %135 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %134, align 8
  %136 = tail call i8* %135(%"class.base::RefCountedMemory"* %132) #11
  %137 = load i64, i64* %12, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = add i64 %137, 1
  store i64 %140, i64* %12, align 8
  %141 = zext i8 %139 to i32
  store i32 %141, i32* %97, align 4
  %142 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %143 = bitcast %"class.base::RefCountedMemory"* %142 to i8* (%"class.base::RefCountedMemory"*)***
  %144 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %143, align 8
  %145 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %144, align 8
  %146 = tail call i8* %145(%"class.base::RefCountedMemory"* %142) #11
  %147 = load i64, i64* %12, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = add i64 %147, 1
  store i64 %150, i64* %12, align 8
  %151 = zext i8 %149 to i32
  store i32 %151, i32* %98, align 4
  %152 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %153 = bitcast %"class.base::RefCountedMemory"* %152 to i8* (%"class.base::RefCountedMemory"*)***
  %154 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %153, align 8
  %155 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %154, align 8
  %156 = tail call i8* %155(%"class.base::RefCountedMemory"* %152) #11
  %157 = load i64, i64* %12, align 8
  %158 = getelementptr inbounds i8, i8* %156, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = add i64 %157, 1
  store i64 %160, i64* %12, align 8
  %161 = zext i8 %159 to i32
  store i32 %161, i32* %99, align 4
  %162 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %163 = bitcast %"class.base::RefCountedMemory"* %162 to i8* (%"class.base::RefCountedMemory"*)***
  %164 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %163, align 8
  %165 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %164, align 8
  %166 = tail call i8* %165(%"class.base::RefCountedMemory"* %162) #11
  %167 = load i64, i64* %12, align 8
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = bitcast i8* %168 to i16*
  %170 = load i16, i16* %169, align 1
  %171 = add i64 %167, 2
  store i64 %171, i64* %12, align 8
  %172 = zext i16 %170 to i32
  store i32 %172, i32* %100, align 4
  %173 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %174 = bitcast %"class.base::RefCountedMemory"* %173 to i8* (%"class.base::RefCountedMemory"*)***
  %175 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %174, align 8
  %176 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %175, align 8
  %177 = tail call i8* %176(%"class.base::RefCountedMemory"* %173) #11
  %178 = load i64, i64* %12, align 8
  %179 = getelementptr inbounds i8, i8* %177, i64 %178
  %180 = bitcast i8* %179 to i32*
  %181 = load i32, i32* %180, align 1
  %182 = add i64 %178, 4
  store i64 %182, i64* %12, align 8
  store i32 %181, i32* %101, align 4
  %183 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %93, i64 1
  %184 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %183, %85
  br i1 %184, label %87, label %92
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15SetIndicatorMapERKNS0_22SetIndicatorMapRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetIndicatorMapRequest"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca i8, align 1
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.x11::WriteBuffer", align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i16, align 2
  %31 = alloca i32, align 4
  %32 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %33 = load %"class.x11::Connection"*, %"class.x11::Connection"** %32, align 8
  %34 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %33) #11
  br i1 %34, label %35, label %193

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %193, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.x11::WriteBuffer"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %21) #11
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  %42 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %43 = load i8, i8* %42, align 1
  store i8 %43, i8* %22, align 1
  %44 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %21, i64 0, i32 1
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %22) #11
  %48 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %21, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 14, i8* %23, align 1
  %51 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %52, align 8
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %54 = load i64, i64* %48, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  store i8 0, i8* %17, align 1
  %56 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  %57 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %57, align 8
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %59 = load i64, i64* %48, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %57, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %62 = load i64, i64* %48, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %48, align 8
  %64 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %1, i64 0, i32 2, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %65 = bitcast %"struct.x11::Xkb::SetIndicatorMapRequest"* %1 to i8*
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %67, align 8
  %68 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %65) #11
  %69 = getelementptr inbounds i8, i8* %65, i64 1
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %69) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %48, align 8
  %72 = add i64 %71, 2
  store i64 %72, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 0, i8* %14, align 1
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %74, align 8
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %76 = load i64, i64* %48, align 8
  %77 = add i64 %76, 1
  store i64 %77, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %74, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %79 = load i64, i64* %48, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  %81 = bitcast i32* %41 to i8*
  %82 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %83, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %81) #11
  %85 = getelementptr inbounds i8, i8* %81, i64 1
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %85) #11
  %87 = getelementptr inbounds i8, i8* %81, i64 2
  %88 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %87) #11
  %89 = getelementptr inbounds i8, i8* %81, i64 3
  %90 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %91 = load i64, i64* %48, align 8
  %92 = add i64 %91, 4
  store i64 %92, i64* %48, align 8
  %93 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %93, align 8
  %95 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %64, align 8
  %96 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %94, %95
  br i1 %96, label %120, label %97

97:                                               ; preds = %39
  %98 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %99 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  %100 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %101 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  %102 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %103 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  %104 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %105 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  %106 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %107 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  %108 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %109 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  %110 = bitcast i16* %30 to i8*
  %111 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %112 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %113 = getelementptr inbounds i8, i8* %110, i64 1
  %114 = bitcast i32* %31 to i8*
  %115 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  %116 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  %118 = getelementptr inbounds i8, i8* %114, i64 2
  %119 = getelementptr inbounds i8, i8* %114, i64 3
  br label %138

120:                                              ; preds = %138, %39
  %121 = phi i64 [ %92, %39 ], [ %190, %138 ]
  %122 = sub i64 0, %121
  %123 = and i64 %122, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %120
  %126 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %127 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  br label %128

128:                                              ; preds = %128, %125
  %129 = phi i64 [ 0, %125 ], [ %133, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %127, align 8
  %130 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %131 = load i64, i64* %48, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %48, align 8
  %133 = add nuw nsw i64 %129, 1
  %134 = icmp eq i64 %133, %123
  br i1 %134, label %135, label %128

135:                                              ; preds = %128, %120
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %136 = load %"class.x11::Connection"*, %"class.x11::Connection"** %32, align 8
  %137 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %136, %"class.x11::WriteBuffer"* nonnull %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %40) #11
  br label %193

138:                                              ; preds = %97, %138
  %139 = phi %"struct.x11::Xkb::IndicatorMap"* [ %94, %97 ], [ %191, %138 ]
  %140 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 0
  %141 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 3
  %144 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 4
  %145 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 5
  %146 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 6
  %147 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 0, i32 7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  %148 = load i32, i32* %140, align 4
  %149 = trunc i32 %148 to i8
  store i8 %149, i8* %24, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %99, align 8
  %150 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #11
  %151 = load i64, i64* %48, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #11
  %153 = load i32, i32* %141, align 4
  %154 = trunc i32 %153 to i8
  store i8 %154, i8* %25, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %101, align 8
  %155 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  %156 = load i64, i64* %48, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #11
  %158 = load i32, i32* %142, align 4
  %159 = trunc i32 %158 to i8
  store i8 %159, i8* %26, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %103, align 8
  %160 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  %161 = load i64, i64* %48, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #11
  %163 = load i32, i32* %143, align 4
  %164 = trunc i32 %163 to i8
  store i8 %164, i8* %27, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %105, align 8
  %165 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  %166 = load i64, i64* %48, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #11
  %168 = load i32, i32* %144, align 4
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %28, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %107, align 8
  %170 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  %171 = load i64, i64* %48, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #11
  %173 = load i32, i32* %145, align 4
  %174 = trunc i32 %173 to i8
  store i8 %174, i8* %29, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %109, align 8
  %175 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  %176 = load i64, i64* %48, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %110) #11
  %178 = load i32, i32* %146, align 4
  %179 = trunc i32 %178 to i16
  store i16 %179, i16* %30, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %112, align 8
  %180 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %110) #11
  %181 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %113) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  %182 = load i64, i64* %48, align 8
  %183 = add i64 %182, 2
  store i64 %183, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #11
  %184 = load i32, i32* %147, align 4
  store i32 %184, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #11
  store %"class.std::__1::vector.271"* %44, %"class.std::__1::vector.271"** %116, align 8
  %185 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %114) #11
  %186 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %117) #11
  %187 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %118) #11
  %188 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #11
  %189 = load i64, i64* %48, align 8
  %190 = add i64 %189, 4
  store i64 %190, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  %191 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %139, i64 1
  %192 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %191, %95
  br i1 %192, label %120, label %138

193:                                              ; preds = %2, %35, %135
  %194 = phi %"class.x11::Connection::FutureImpl"* [ %137, %135 ], [ null, %35 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %194
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15SetIndicatorMapERKNS0_10DeviceSpecERKjRKNSt3__16vectorINS0_12IndicatorMapENS6_9allocatorIS8_EEEE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), %"class.std::__1::vector.547"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.x11::Xkb::SetIndicatorMapRequest", align 8
  %6 = bitcast %"struct.x11::Xkb::SetIndicatorMapRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 0
  %8 = load i16, i16* %1, align 2
  store i16 %8, i16* %7, align 8
  %9 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 1
  %10 = load i32, i32* %2, align 4
  store i32 %10, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 2
  %12 = bitcast %"class.std::__1::vector.547"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %3, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.x11::Xkb::IndicatorMap"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.547"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 5
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %4
  %22 = icmp ugt i64 %19, 576460752303423487
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.547"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #12
  %27 = bitcast i8* %26 to %"struct.x11::Xkb::IndicatorMap"*
  %28 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast %"struct.x11::Xkb::IndicatorMap"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector.547"* %11 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %27, i64 %19
  %32 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::IndicatorMap"* %31, %"struct.x11::Xkb::IndicatorMap"** %32, align 8
  %33 = bitcast %"struct.x11::Xkb::IndicatorMap"** %28 to i64*
  %34 = ptrtoint i8* %26 to i64
  %35 = icmp sgt i64 %18, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %25
  %37 = lshr exact i64 %18, 5
  %38 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %38, i64 %18, i1 false) #11
  %39 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %27, i64 %37
  %40 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %39 to i64
  br label %41

41:                                               ; preds = %36, %25
  %42 = phi i64 [ %40, %36 ], [ %34, %25 ]
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %4, %41
  %44 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb15SetIndicatorMapERKNS0_22SetIndicatorMapRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetIndicatorMapRequest"* nonnull dereferenceable(32) %5)
  %45 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 2, i32 0, i32 0
  %46 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %45, align 8
  %47 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %46 to i64
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetIndicatorMapRequest", %"struct.x11::Xkb::SetIndicatorMapRequest"* %5, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"struct.x11::Xkb::IndicatorMap"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"struct.x11::Xkb::IndicatorMap"* %46 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret %"class.x11::Connection::FutureImpl"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetNamedIndicatorERKNS0_24GetNamedIndicatorRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetNamedIndicatorRequest"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.x11::WriteBuffer", align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i16, align 2
  %19 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %20 = load %"class.x11::Connection"*, %"class.x11::Connection"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %20) #11
  br i1 %21, label %22, label %115

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %115, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.x11::WriteBuffer"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %15) #11
  %28 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %1, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  %29 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %16, align 1
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %16) #11
  %35 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  store i8 15, i8* %17, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i64, i64* %35, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %44, align 8
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %35, align 8
  %51 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %1, i64 0, i32 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %53 = bitcast %"struct.x11::Xkb::GetNamedIndicatorRequest"* %1 to i8*
  %54 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %55, align 8
  %56 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %53) #11
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %59 = load i64, i64* %35, align 8
  %60 = add i64 %59, 2
  store i64 %60, i64* %35, align 8
  %61 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %61) #11
  %62 = load i32, i32* %51, align 4
  %63 = trunc i32 %62 to i16
  store i16 %63, i16* %18, align 2
  %64 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %65, align 8
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %61) #11
  %67 = getelementptr inbounds i8, i8* %61, i64 1
  %68 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %69 = load i64, i64* %35, align 8
  %70 = add i64 %69, 2
  store i64 %70, i64* %35, align 8
  %71 = bitcast i16* %28 to i8*
  %72 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %73, align 8
  %74 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %71) #11
  %75 = getelementptr inbounds i8, i8* %71, i64 1
  %76 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %75) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  %77 = load i64, i64* %35, align 8
  %78 = add i64 %77, 2
  store i64 %78, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %79 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %80 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %80, align 8
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %82 = load i64, i64* %35, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %80, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %85 = load i64, i64* %35, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  %87 = bitcast i32* %52 to i8*
  %88 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %89, align 8
  %90 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %87) #11
  %91 = getelementptr inbounds i8, i8* %87, i64 1
  %92 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %91) #11
  %93 = getelementptr inbounds i8, i8* %87, i64 2
  %94 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %93) #11
  %95 = getelementptr inbounds i8, i8* %87, i64 3
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %95) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  %97 = load i64, i64* %35, align 8
  %98 = add i64 %97, 4
  store i64 %98, i64* %35, align 8
  %99 = sub i64 0, %97
  %100 = and i64 %99, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 0, i8* %14, align 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %26
  %103 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %104 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  br label %105

105:                                              ; preds = %105, %102
  %106 = phi i64 [ 0, %102 ], [ %110, %105 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  store %"class.std::__1::vector.271"* %31, %"class.std::__1::vector.271"** %104, align 8
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %108 = load i64, i64* %35, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %35, align 8
  %110 = add nuw nsw i64 %106, 1
  %111 = icmp eq i64 %110, %100
  br i1 %111, label %112, label %105

112:                                              ; preds = %105, %26
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  %113 = load %"class.x11::Connection"*, %"class.x11::Connection"** %19, align 8
  %114 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %113, %"class.x11::WriteBuffer"* nonnull %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #11
  br label %115

115:                                              ; preds = %2, %22, %112
  %116 = phi %"class.x11::Connection::FutureImpl"* [ %114, %112 ], [ null, %22 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %116
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetNamedIndicatorERKNS0_10DeviceSpecERKNS0_8LedClassERKNS0_6IDSpecERKNS_4AtomE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.x11::Xkb::GetNamedIndicatorRequest", align 4
  %7 = bitcast %"struct.x11::Xkb::GetNamedIndicatorRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %6, i64 0, i32 0
  %9 = load i16, i16* %1, align 2
  store i16 %9, i16* %8, align 4
  %10 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %6, i64 0, i32 1
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %6, i64 0, i32 2
  %13 = load i16, i16* %3, align 2
  store i16 %13, i16* %12, align 4
  %14 = getelementptr inbounds %"struct.x11::Xkb::GetNamedIndicatorRequest", %"struct.x11::Xkb::GetNamedIndicatorRequest"* %6, i64 0, i32 3
  %15 = load i32, i32* %4, align 4
  store i32 %15, i32* %14, align 4
  %16 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17GetNamedIndicatorERKNS0_24GetNamedIndicatorRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetNamedIndicatorRequest"* nonnull dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.x11::Connection::FutureImpl"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetNamedIndicatorReply"* @_ZN3x116detail9ReadReplyINS_3Xkb22GetNamedIndicatorReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 48) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetNamedIndicatorReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 48, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = getelementptr inbounds i8, i8* %2, i64 9
  %10 = getelementptr inbounds i8, i8* %2, i64 10
  %11 = getelementptr inbounds i8, i8* %2, i64 11
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %2, i64 20
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %2, i64 24
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds i8, i8* %2, i64 28
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %2, i64 36
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds i8, i8* %2, i64 40
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %2, i64 44
  %29 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %31 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %32 = bitcast %"class.base::RefCountedMemory"* %31 to i8* (%"class.base::RefCountedMemory"*)***
  %33 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %32, align 8
  %34 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %33, align 8
  %35 = tail call i8* %34(%"class.base::RefCountedMemory"* %31) #11
  %36 = load i64, i64* %29, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %29, align 8
  %38 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %39 = bitcast %"class.base::RefCountedMemory"* %38 to i8* (%"class.base::RefCountedMemory"*)***
  %40 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %39, align 8
  %41 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %40, align 8
  %42 = tail call i8* %41(%"class.base::RefCountedMemory"* %38) #11
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = load i8, i8* %44, align 1
  store i8 %45, i8* %2, align 1
  %46 = add i64 %43, 1
  store i64 %46, i64* %29, align 8
  %47 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %48 = bitcast %"class.base::RefCountedMemory"* %47 to i8* (%"class.base::RefCountedMemory"*)***
  %49 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %48, align 8
  %50 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %49, align 8
  %51 = tail call i8* %50(%"class.base::RefCountedMemory"* %47) #11
  %52 = load i64, i64* %29, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 1
  store i16 %55, i16* %5, align 2
  %56 = add i64 %52, 2
  store i64 %56, i64* %29, align 8
  %57 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %58 = bitcast %"class.base::RefCountedMemory"* %57 to i8* (%"class.base::RefCountedMemory"*)***
  %59 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %58, align 8
  %60 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %59, align 8
  %61 = tail call i8* %60(%"class.base::RefCountedMemory"* %57) #11
  %62 = load i64, i64* %29, align 8
  %63 = add i64 %62, 4
  store i64 %63, i64* %29, align 8
  %64 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %65 = bitcast %"class.base::RefCountedMemory"* %64 to i8* (%"class.base::RefCountedMemory"*)***
  %66 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %65, align 8
  %67 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %66, align 8
  %68 = tail call i8* %67(%"class.base::RefCountedMemory"* %64) #11
  %69 = load i64, i64* %29, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 1
  store i32 %72, i32* %7, align 4
  %73 = add i64 %69, 4
  store i64 %73, i64* %29, align 8
  %74 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %75 = bitcast %"class.base::RefCountedMemory"* %74 to i8* (%"class.base::RefCountedMemory"*)***
  %76 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %75, align 8
  %77 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %76, align 8
  %78 = tail call i8* %77(%"class.base::RefCountedMemory"* %74) #11
  %79 = load i64, i64* %29, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = load i8, i8* %80, align 1
  store i8 %81, i8* %8, align 1
  %82 = add i64 %79, 1
  store i64 %82, i64* %29, align 8
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #11
  %88 = load i64, i64* %29, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %9, align 1
  %91 = add i64 %88, 1
  store i64 %91, i64* %29, align 8
  %92 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %93 = bitcast %"class.base::RefCountedMemory"* %92 to i8* (%"class.base::RefCountedMemory"*)***
  %94 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %93, align 8
  %95 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %94, align 8
  %96 = tail call i8* %95(%"class.base::RefCountedMemory"* %92) #11
  %97 = load i64, i64* %29, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = load i8, i8* %98, align 1
  store i8 %99, i8* %10, align 1
  %100 = add i64 %97, 1
  store i64 %100, i64* %29, align 8
  %101 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %102 = bitcast %"class.base::RefCountedMemory"* %101 to i8* (%"class.base::RefCountedMemory"*)***
  %103 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %102, align 8
  %104 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %103, align 8
  %105 = tail call i8* %104(%"class.base::RefCountedMemory"* %101) #11
  %106 = load i64, i64* %29, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = load i8, i8* %107, align 1
  store i8 %108, i8* %11, align 1
  %109 = add i64 %106, 1
  store i64 %109, i64* %29, align 8
  %110 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %111 = bitcast %"class.base::RefCountedMemory"* %110 to i8* (%"class.base::RefCountedMemory"*)***
  %112 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %111, align 8
  %113 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %112, align 8
  %114 = tail call i8* %113(%"class.base::RefCountedMemory"* %110) #11
  %115 = load i64, i64* %29, align 8
  %116 = getelementptr inbounds i8, i8* %114, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = add i64 %115, 1
  store i64 %118, i64* %29, align 8
  %119 = zext i8 %117 to i32
  store i32 %119, i32* %13, align 4
  %120 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %121 = bitcast %"class.base::RefCountedMemory"* %120 to i8* (%"class.base::RefCountedMemory"*)***
  %122 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %121, align 8
  %123 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %122, align 8
  %124 = tail call i8* %123(%"class.base::RefCountedMemory"* %120) #11
  %125 = load i64, i64* %29, align 8
  %126 = getelementptr inbounds i8, i8* %124, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = add i64 %125, 1
  store i64 %128, i64* %29, align 8
  %129 = zext i8 %127 to i32
  store i32 %129, i32* %15, align 4
  %130 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %131 = bitcast %"class.base::RefCountedMemory"* %130 to i8* (%"class.base::RefCountedMemory"*)***
  %132 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %131, align 8
  %133 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %132, align 8
  %134 = tail call i8* %133(%"class.base::RefCountedMemory"* %130) #11
  %135 = load i64, i64* %29, align 8
  %136 = getelementptr inbounds i8, i8* %134, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = add i64 %135, 1
  store i64 %138, i64* %29, align 8
  %139 = zext i8 %137 to i32
  store i32 %139, i32* %17, align 4
  %140 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %141 = bitcast %"class.base::RefCountedMemory"* %140 to i8* (%"class.base::RefCountedMemory"*)***
  %142 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %141, align 8
  %143 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %142, align 8
  %144 = tail call i8* %143(%"class.base::RefCountedMemory"* %140) #11
  %145 = load i64, i64* %29, align 8
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = add i64 %145, 1
  store i64 %148, i64* %29, align 8
  %149 = zext i8 %147 to i32
  store i32 %149, i32* %19, align 4
  %150 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %151 = bitcast %"class.base::RefCountedMemory"* %150 to i8* (%"class.base::RefCountedMemory"*)***
  %152 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %151, align 8
  %153 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %152, align 8
  %154 = tail call i8* %153(%"class.base::RefCountedMemory"* %150) #11
  %155 = load i64, i64* %29, align 8
  %156 = getelementptr inbounds i8, i8* %154, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = add i64 %155, 1
  store i64 %158, i64* %29, align 8
  %159 = zext i8 %157 to i32
  store i32 %159, i32* %21, align 4
  %160 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %161 = bitcast %"class.base::RefCountedMemory"* %160 to i8* (%"class.base::RefCountedMemory"*)***
  %162 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %161, align 8
  %163 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %162, align 8
  %164 = tail call i8* %163(%"class.base::RefCountedMemory"* %160) #11
  %165 = load i64, i64* %29, align 8
  %166 = getelementptr inbounds i8, i8* %164, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = add i64 %165, 1
  store i64 %168, i64* %29, align 8
  %169 = zext i8 %167 to i32
  store i32 %169, i32* %23, align 4
  %170 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %171 = bitcast %"class.base::RefCountedMemory"* %170 to i8* (%"class.base::RefCountedMemory"*)***
  %172 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %171, align 8
  %173 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %172, align 8
  %174 = tail call i8* %173(%"class.base::RefCountedMemory"* %170) #11
  %175 = load i64, i64* %29, align 8
  %176 = getelementptr inbounds i8, i8* %174, i64 %175
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 1
  %179 = add i64 %175, 2
  store i64 %179, i64* %29, align 8
  %180 = zext i16 %178 to i32
  store i32 %180, i32* %25, align 4
  %181 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %182 = bitcast %"class.base::RefCountedMemory"* %181 to i8* (%"class.base::RefCountedMemory"*)***
  %183 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %182, align 8
  %184 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %183, align 8
  %185 = tail call i8* %184(%"class.base::RefCountedMemory"* %181) #11
  %186 = load i64, i64* %29, align 8
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = bitcast i8* %187 to i32*
  %189 = load i32, i32* %188, align 1
  %190 = add i64 %186, 4
  store i64 %190, i64* %29, align 8
  store i32 %189, i32* %27, align 4
  %191 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %30, align 8
  %192 = bitcast %"class.base::RefCountedMemory"* %191 to i8* (%"class.base::RefCountedMemory"*)***
  %193 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %192, align 8
  %194 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %193, align 8
  %195 = tail call i8* %194(%"class.base::RefCountedMemory"* %191) #11
  %196 = load i64, i64* %29, align 8
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %28, align 1
  %199 = add i64 %196, 4
  %200 = sub i64 0, %196
  %201 = and i64 %200, 3
  %202 = add i64 %199, %201
  store i64 %202, i64* %29, align 8
  ret %"struct.x11::Xkb::GetNamedIndicatorReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetNamedIndicatorERKNS0_24SetNamedIndicatorRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetNamedIndicatorRequest"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca i8, align 1
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca i8, align 1
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca %"class.std::__1::back_insert_iterator", align 8
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca i8, align 1
  %28 = alloca %"class.x11::WriteBuffer", align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i16, align 2
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i16, align 2
  %38 = alloca i32, align 4
  %39 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %40 = load %"class.x11::Connection"*, %"class.x11::Connection"** %39, align 8
  %41 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %40) #11
  br i1 %41, label %42, label %229

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %229, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.x11::WriteBuffer"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %28) #11
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 3
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 5
  %51 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 7
  %52 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 9
  %53 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 11
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #11
  %55 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %29, align 1
  %57 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %28, i64 0, i32 1
  %58 = bitcast %"class.std::__1::back_insert_iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %25, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %59, align 8
  %60 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %25, i8* nonnull dereferenceable(1) %29) #11
  %61 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %28, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #11
  store i8 16, i8* %30, align 1
  %64 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %65, align 8
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %67 = load i64, i64* %61, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 0, i8* %23, align 1
  %69 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  %70 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %70, align 8
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %72 = load i64, i64* %61, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %70, align 8
  %74 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %75 = load i64, i64* %61, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %61, align 8
  %77 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 4
  %79 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 6
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 8
  %81 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 10
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 12
  %83 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1, i64 0, i32 14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  %84 = bitcast %"struct.x11::Xkb::SetNamedIndicatorRequest"* %1 to i8*
  %85 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #11
  %86 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %86, align 8
  %87 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %84) #11
  %88 = getelementptr inbounds i8, i8* %84, i64 1
  %89 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #11
  %90 = load i64, i64* %61, align 8
  %91 = add i64 %90, 2
  store i64 %91, i64* %61, align 8
  %92 = bitcast i16* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %92) #11
  %93 = load i32, i32* %48, align 4
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %31, align 2
  %95 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %96, align 8
  %97 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %92) #11
  %98 = getelementptr inbounds i8, i8* %92, i64 1
  %99 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %98) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  %100 = load i64, i64* %61, align 8
  %101 = add i64 %100, 2
  store i64 %101, i64* %61, align 8
  %102 = bitcast i16* %77 to i8*
  %103 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %104, align 8
  %105 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %102) #11
  %106 = getelementptr inbounds i8, i8* %102, i64 1
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %108 = load i64, i64* %61, align 8
  %109 = add i64 %108, 2
  store i64 %109, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #11
  store i8 0, i8* %18, align 1
  %110 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  %111 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %111, align 8
  %112 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %113 = load i64, i64* %61, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %111, align 8
  %115 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %116 = load i64, i64* %61, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #11
  %118 = bitcast i32* %49 to i8*
  %119 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %120, align 8
  %121 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %118) #11
  %122 = getelementptr inbounds i8, i8* %118, i64 1
  %123 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %122) #11
  %124 = getelementptr inbounds i8, i8* %118, i64 2
  %125 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %124) #11
  %126 = getelementptr inbounds i8, i8* %118, i64 3
  %127 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %126) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  %128 = load i64, i64* %61, align 8
  %129 = add i64 %128, 4
  store i64 %129, i64* %61, align 8
  %130 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #11
  %131 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %131, align 8
  %132 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #11
  %133 = load i64, i64* %61, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %61, align 8
  %135 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #11
  %136 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %136, align 8
  %137 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #11
  %138 = load i64, i64* %61, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %61, align 8
  %140 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  %141 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %141, align 8
  %142 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %79) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  %143 = load i64, i64* %61, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %61, align 8
  %145 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #11
  %146 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %146, align 8
  %147 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %51) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #11
  %148 = load i64, i64* %61, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %150 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %151 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %151, align 8
  %152 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  %153 = load i64, i64* %61, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #11
  %155 = load i32, i32* %80, align 4
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %32, align 1
  %157 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %158, align 8
  %159 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %32) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #11
  %160 = load i64, i64* %61, align 8
  %161 = add i64 %160, 1
  store i64 %161, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #11
  %162 = load i32, i32* %52, align 4
  %163 = trunc i32 %162 to i8
  store i8 %163, i8* %33, align 1
  %164 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #11
  %165 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %165, align 8
  %166 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #11
  %167 = load i64, i64* %61, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #11
  %169 = load i32, i32* %81, align 4
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %34, align 1
  %171 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #11
  %172 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %172, align 8
  %173 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #11
  %174 = load i64, i64* %61, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #11
  %176 = load i32, i32* %53, align 4
  %177 = trunc i32 %176 to i8
  store i8 %177, i8* %35, align 1
  %178 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #11
  %179 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %179, align 8
  %180 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #11
  %181 = load i64, i64* %61, align 8
  %182 = add i64 %181, 1
  store i64 %182, i64* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  %183 = load i32, i32* %82, align 4
  %184 = trunc i32 %183 to i8
  store i8 %184, i8* %36, align 1
  %185 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %186, align 8
  %187 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  %188 = load i64, i64* %61, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %61, align 8
  %190 = bitcast i16* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %190) #11
  %191 = load i32, i32* %54, align 4
  %192 = trunc i32 %191 to i16
  store i16 %192, i16* %37, align 2
  %193 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #11
  %194 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %194, align 8
  %195 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %190) #11
  %196 = getelementptr inbounds i8, i8* %190, i64 1
  %197 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %196) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #11
  %198 = load i64, i64* %61, align 8
  %199 = add i64 %198, 2
  store i64 %199, i64* %61, align 8
  %200 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #11
  %201 = load i32, i32* %83, align 4
  store i32 %201, i32* %38, align 4
  %202 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #11
  %203 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %203, align 8
  %204 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %200) #11
  %205 = getelementptr inbounds i8, i8* %200, i64 1
  %206 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %205) #11
  %207 = getelementptr inbounds i8, i8* %200, i64 2
  %208 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %207) #11
  %209 = getelementptr inbounds i8, i8* %200, i64 3
  %210 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %209) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #11
  %211 = load i64, i64* %61, align 8
  %212 = add i64 %211, 4
  store i64 %212, i64* %61, align 8
  %213 = sub i64 0, %211
  %214 = and i64 %213, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #11
  store i8 0, i8* %27, align 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %226, label %216

216:                                              ; preds = %46
  %217 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  %218 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %224, %219 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #11
  store %"class.std::__1::vector.271"* %57, %"class.std::__1::vector.271"** %218, align 8
  %221 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #11
  %222 = load i64, i64* %61, align 8
  %223 = add i64 %222, 1
  store i64 %223, i64* %61, align 8
  %224 = add nuw nsw i64 %220, 1
  %225 = icmp eq i64 %224, %214
  br i1 %225, label %226, label %219

226:                                              ; preds = %219, %46
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #11
  %227 = load %"class.x11::Connection"*, %"class.x11::Connection"** %39, align 8
  %228 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %227, %"class.x11::WriteBuffer"* nonnull %28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %190) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #11
  br label %229

229:                                              ; preds = %2, %42, %226
  %230 = phi %"class.x11::Connection::FutureImpl"* [ %228, %226 ], [ null, %42 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %230
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetNamedIndicatorERKNS0_10DeviceSpecERKNS0_8LedClassERKNS0_6IDSpecERKNS_4AtomERKhSE_SE_SE_RKNS0_6IMFlagERKNS0_13IMGroupsWhichERKNS0_11SetOfGroupsERKNS0_11IMModsWhichERKNS_7ModMaskERKNS0_4VModERKNS0_8BoolCtrlE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %17 = alloca %"struct.x11::Xkb::SetNamedIndicatorRequest", align 4
  %18 = bitcast %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 0
  %20 = load i16, i16* %1, align 2
  store i16 %20, i16* %19, align 4
  %21 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 1
  %22 = load i32, i32* %2, align 4
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 2
  %24 = load i16, i16* %3, align 2
  store i16 %24, i16* %23, align 4
  %25 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 3
  %26 = load i32, i32* %4, align 4
  store i32 %26, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 4
  %28 = load i8, i8* %5, align 1
  store i8 %28, i8* %27, align 4
  %29 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 5
  %30 = load i8, i8* %6, align 1
  store i8 %30, i8* %29, align 1
  %31 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 6
  %32 = load i8, i8* %7, align 1
  store i8 %32, i8* %31, align 2
  %33 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 7
  %34 = load i8, i8* %8, align 1
  store i8 %34, i8* %33, align 1
  %35 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 8
  %36 = load i32, i32* %9, align 4
  store i32 %36, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 9
  %38 = load i32, i32* %10, align 4
  store i32 %38, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 10
  %40 = load i32, i32* %11, align 4
  store i32 %40, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 11
  %42 = load i32, i32* %12, align 4
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 12
  %44 = load i32, i32* %13, align 4
  store i32 %44, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 13
  %46 = load i32, i32* %14, align 4
  store i32 %46, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.x11::Xkb::SetNamedIndicatorRequest", %"struct.x11::Xkb::SetNamedIndicatorRequest"* %17, i64 0, i32 14
  %48 = load i32, i32* %15, align 4
  store i32 %48, i32* %47, align 4
  %49 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetNamedIndicatorERKNS0_24SetNamedIndicatorRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetNamedIndicatorRequest"* nonnull dereferenceable(48) %17)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #11
  ret %"class.x11::Connection::FutureImpl"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetNamesERKNS0_15GetNamesRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetNamesRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.x11::WriteBuffer", align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %18 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %18) #11
  br i1 %19, label %20, label %94

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %94, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.x11::WriteBuffer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %13) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  %26 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %14, align 1
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 1
  %29 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %30, align 8
  %31 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %14) #11
  %32 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %13, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  store i8 17, i8* %15, align 1
  %35 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %36, align 8
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  %38 = load i64, i64* %32, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  %40 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %41 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %41, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  %43 = load i64, i64* %32, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %41, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  %46 = load i64, i64* %32, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %32, align 8
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetNamesRequest", %"struct.x11::Xkb::GetNamesRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  %49 = bitcast %"struct.x11::Xkb::GetNamesRequest"* %1 to i8*
  %50 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %51, align 8
  %52 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %49) #11
  %53 = getelementptr inbounds i8, i8* %49, i64 1
  %54 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %55 = load i64, i64* %32, align 8
  %56 = add i64 %55, 2
  store i64 %56, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %57 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %58 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %58, align 8
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  %60 = load i64, i64* %32, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %58, align 8
  %62 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  %63 = load i64, i64* %32, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  %65 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #11
  %66 = load i32, i32* %48, align 4
  store i32 %66, i32* %16, align 4
  %67 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %68, align 8
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %65) #11
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %70) #11
  %72 = getelementptr inbounds i8, i8* %65, i64 2
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %72) #11
  %74 = getelementptr inbounds i8, i8* %65, i64 3
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %76 = load i64, i64* %32, align 8
  %77 = add i64 %76, 4
  store i64 %77, i64* %32, align 8
  %78 = sub i64 0, %76
  %79 = and i64 %78, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 0, i8* %12, align 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %24
  %82 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %83 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  br label %84

84:                                               ; preds = %84, %81
  %85 = phi i64 [ 0, %81 ], [ %89, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store %"class.std::__1::vector.271"* %28, %"class.std::__1::vector.271"** %83, align 8
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %87 = load i64, i64* %32, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %32, align 8
  %89 = add nuw nsw i64 %85, 1
  %90 = icmp eq i64 %89, %79
  br i1 %90, label %91, label %84

91:                                               ; preds = %84, %24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  %92 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %93 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %92, %"class.x11::WriteBuffer"* nonnull %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #11
  br label %94

94:                                               ; preds = %2, %20, %91
  %95 = phi %"class.x11::Connection::FutureImpl"* [ %93, %91 ], [ null, %20 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetNamesERKNS0_10DeviceSpecERKNS0_10NameDetailE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Xkb::GetNamesRequest", align 4
  %5 = bitcast %"struct.x11::Xkb::GetNamesRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetNamesRequest", %"struct.x11::Xkb::GetNamesRequest"* %4, i64 0, i32 0
  %7 = load i16, i16* %1, align 2
  store i16 %7, i16* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::Xkb::GetNamesRequest", %"struct.x11::Xkb::GetNamesRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8GetNamesERKNS0_15GetNamesRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetNamesRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetNamesReply"* @_ZN3x116detail9ReadReplyINS_3Xkb13GetNamesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 368) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetNamesReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 368, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = getelementptr inbounds i8, i8* %2, i64 5
  %8 = getelementptr inbounds i8, i8* %2, i64 6
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = getelementptr inbounds i8, i8* %2, i64 17
  %15 = getelementptr inbounds i8, i8* %2, i64 20
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %2, i64 24
  %18 = getelementptr inbounds i8, i8* %2, i64 25
  %19 = getelementptr inbounds i8, i8* %2, i64 26
  %20 = bitcast i8* %19 to i16*
  %21 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %24 = bitcast %"class.base::RefCountedMemory"* %23 to i8* (%"class.base::RefCountedMemory"*)***
  %25 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %25, align 8
  %27 = tail call i8* %26(%"class.base::RefCountedMemory"* %23) #11
  %28 = load i64, i64* %21, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %21, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #11
  %35 = load i64, i64* %21, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %2, align 1
  %38 = add i64 %35, 1
  store i64 %38, i64* %21, align 8
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8
  %43 = tail call i8* %42(%"class.base::RefCountedMemory"* %39) #11
  %44 = load i64, i64* %21, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 1
  store i16 %47, i16* %5, align 2
  %48 = add i64 %44, 2
  store i64 %48, i64* %21, align 8
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %50 = bitcast %"class.base::RefCountedMemory"* %49 to i8* (%"class.base::RefCountedMemory"*)***
  %51 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %50, align 8
  %52 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %51, align 8
  %53 = tail call i8* %52(%"class.base::RefCountedMemory"* %49) #11
  %54 = load i64, i64* %21, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %21, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %21, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = add i64 %61, 4
  store i64 %65, i64* %21, align 8
  %66 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %67 = bitcast %"class.base::RefCountedMemory"* %66 to i8* (%"class.base::RefCountedMemory"*)***
  %68 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %67, align 8
  %69 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = tail call i8* %69(%"class.base::RefCountedMemory"* %66) #11
  %71 = load i64, i64* %21, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %6, align 1
  %74 = add i64 %71, 1
  store i64 %74, i64* %21, align 8
  %75 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %76 = bitcast %"class.base::RefCountedMemory"* %75 to i8* (%"class.base::RefCountedMemory"*)***
  %77 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %76, align 8
  %78 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %77, align 8
  %79 = tail call i8* %78(%"class.base::RefCountedMemory"* %75) #11
  %80 = load i64, i64* %21, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = load i8, i8* %81, align 1
  store i8 %82, i8* %7, align 1
  %83 = add i64 %80, 1
  store i64 %83, i64* %21, align 8
  %84 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %85 = bitcast %"class.base::RefCountedMemory"* %84 to i8* (%"class.base::RefCountedMemory"*)***
  %86 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %85, align 8
  %87 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %86, align 8
  %88 = tail call i8* %87(%"class.base::RefCountedMemory"* %84) #11
  %89 = load i64, i64* %21, align 8
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = load i8, i8* %90, align 1
  store i8 %91, i8* %8, align 1
  %92 = add i64 %89, 1
  store i64 %92, i64* %21, align 8
  %93 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %94 = bitcast %"class.base::RefCountedMemory"* %93 to i8* (%"class.base::RefCountedMemory"*)***
  %95 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %94, align 8
  %96 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %95, align 8
  %97 = tail call i8* %96(%"class.base::RefCountedMemory"* %93) #11
  %98 = load i64, i64* %21, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = add i64 %98, 1
  store i64 %101, i64* %21, align 8
  %102 = zext i8 %100 to i32
  store i32 %102, i32* %10, align 4
  %103 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %104 = bitcast %"class.base::RefCountedMemory"* %103 to i8* (%"class.base::RefCountedMemory"*)***
  %105 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %104, align 8
  %106 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %105, align 8
  %107 = tail call i8* %106(%"class.base::RefCountedMemory"* %103) #11
  %108 = load i64, i64* %21, align 8
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 1
  %112 = add i64 %108, 2
  store i64 %112, i64* %21, align 8
  %113 = zext i16 %111 to i32
  store i32 %113, i32* %12, align 4
  %114 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %115 = bitcast %"class.base::RefCountedMemory"* %114 to i8* (%"class.base::RefCountedMemory"*)***
  %116 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %115, align 8
  %117 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %116, align 8
  %118 = tail call i8* %117(%"class.base::RefCountedMemory"* %114) #11
  %119 = load i64, i64* %21, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %13, align 1
  %122 = add i64 %119, 1
  store i64 %122, i64* %21, align 8
  %123 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %124 = bitcast %"class.base::RefCountedMemory"* %123 to i8* (%"class.base::RefCountedMemory"*)***
  %125 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %124, align 8
  %126 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %125, align 8
  %127 = tail call i8* %126(%"class.base::RefCountedMemory"* %123) #11
  %128 = load i64, i64* %21, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = load i8, i8* %129, align 1
  store i8 %130, i8* %14, align 1
  %131 = add i64 %128, 1
  store i64 %131, i64* %21, align 8
  %132 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %133 = bitcast %"class.base::RefCountedMemory"* %132 to i8* (%"class.base::RefCountedMemory"*)***
  %134 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %133, align 8
  %135 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %134, align 8
  %136 = tail call i8* %135(%"class.base::RefCountedMemory"* %132) #11
  %137 = load i64, i64* %21, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 1
  store i32 %140, i32* %16, align 4
  %141 = add i64 %137, 4
  store i64 %141, i64* %21, align 8
  %142 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %143 = bitcast %"class.base::RefCountedMemory"* %142 to i8* (%"class.base::RefCountedMemory"*)***
  %144 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %143, align 8
  %145 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %144, align 8
  %146 = tail call i8* %145(%"class.base::RefCountedMemory"* %142) #11
  %147 = load i64, i64* %21, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = load i8, i8* %148, align 1
  store i8 %149, i8* %17, align 1
  %150 = add i64 %147, 1
  store i64 %150, i64* %21, align 8
  %151 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %152 = bitcast %"class.base::RefCountedMemory"* %151 to i8* (%"class.base::RefCountedMemory"*)***
  %153 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %152, align 8
  %154 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %153, align 8
  %155 = tail call i8* %154(%"class.base::RefCountedMemory"* %151) #11
  %156 = load i64, i64* %21, align 8
  %157 = getelementptr inbounds i8, i8* %155, i64 %156
  %158 = load i8, i8* %157, align 1
  store i8 %158, i8* %18, align 1
  %159 = add i64 %156, 1
  store i64 %159, i64* %21, align 8
  %160 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %161 = bitcast %"class.base::RefCountedMemory"* %160 to i8* (%"class.base::RefCountedMemory"*)***
  %162 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %161, align 8
  %163 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %162, align 8
  %164 = tail call i8* %163(%"class.base::RefCountedMemory"* %160) #11
  %165 = load i64, i64* %21, align 8
  %166 = getelementptr inbounds i8, i8* %164, i64 %165
  %167 = bitcast i8* %166 to i16*
  %168 = load i16, i16* %167, align 1
  store i16 %168, i16* %20, align 2
  %169 = add i64 %165, 6
  store i64 %169, i64* %21, align 8
  %170 = and i32 %64, 1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %186, label %172

172:                                              ; preds = %1
  %173 = getelementptr inbounds i8, i8* %2, i64 28
  %174 = getelementptr inbounds i8, i8* %2, i64 32
  %175 = bitcast i8* %174 to i32*
  store i32 0, i32* %175, align 4
  store i8 1, i8* %173, align 4
  %176 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %177 = bitcast %"class.base::RefCountedMemory"* %176 to i8* (%"class.base::RefCountedMemory"*)***
  %178 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %177, align 8
  %179 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %178, align 8
  %180 = tail call i8* %179(%"class.base::RefCountedMemory"* %176) #11
  %181 = load i64, i64* %21, align 8
  %182 = getelementptr inbounds i8, i8* %180, i64 %181
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 1
  store i32 %184, i32* %175, align 4
  %185 = add i64 %181, 4
  store i64 %185, i64* %21, align 8
  br label %186

186:                                              ; preds = %1, %172
  %187 = and i32 %64, 2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds i8, i8* %2, i64 36
  %191 = getelementptr inbounds i8, i8* %2, i64 40
  %192 = bitcast i8* %191 to i32*
  store i32 0, i32* %192, align 4
  store i8 1, i8* %190, align 4
  %193 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %194 = bitcast %"class.base::RefCountedMemory"* %193 to i8* (%"class.base::RefCountedMemory"*)***
  %195 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %194, align 8
  %196 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %195, align 8
  %197 = tail call i8* %196(%"class.base::RefCountedMemory"* %193) #11
  %198 = load i64, i64* %21, align 8
  %199 = getelementptr inbounds i8, i8* %197, i64 %198
  %200 = bitcast i8* %199 to i32*
  %201 = load i32, i32* %200, align 1
  store i32 %201, i32* %192, align 4
  %202 = add i64 %198, 4
  store i64 %202, i64* %21, align 8
  br label %203

203:                                              ; preds = %186, %189
  %204 = and i32 %64, 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds i8, i8* %2, i64 44
  %208 = getelementptr inbounds i8, i8* %2, i64 48
  %209 = bitcast i8* %208 to i32*
  store i32 0, i32* %209, align 4
  store i8 1, i8* %207, align 4
  %210 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %211 = bitcast %"class.base::RefCountedMemory"* %210 to i8* (%"class.base::RefCountedMemory"*)***
  %212 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %211, align 8
  %213 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %212, align 8
  %214 = tail call i8* %213(%"class.base::RefCountedMemory"* %210) #11
  %215 = load i64, i64* %21, align 8
  %216 = getelementptr inbounds i8, i8* %214, i64 %215
  %217 = bitcast i8* %216 to i32*
  %218 = load i32, i32* %217, align 1
  store i32 %218, i32* %209, align 4
  %219 = add i64 %215, 4
  store i64 %219, i64* %21, align 8
  br label %220

220:                                              ; preds = %203, %206
  %221 = and i32 %64, 8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %237, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds i8, i8* %2, i64 52
  %225 = getelementptr inbounds i8, i8* %2, i64 56
  %226 = bitcast i8* %225 to i32*
  store i32 0, i32* %226, align 4
  store i8 1, i8* %224, align 4
  %227 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %228 = bitcast %"class.base::RefCountedMemory"* %227 to i8* (%"class.base::RefCountedMemory"*)***
  %229 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %228, align 8
  %230 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %229, align 8
  %231 = tail call i8* %230(%"class.base::RefCountedMemory"* %227) #11
  %232 = load i64, i64* %21, align 8
  %233 = getelementptr inbounds i8, i8* %231, i64 %232
  %234 = bitcast i8* %233 to i32*
  %235 = load i32, i32* %234, align 1
  store i32 %235, i32* %226, align 4
  %236 = add i64 %232, 4
  store i64 %236, i64* %21, align 8
  br label %237

237:                                              ; preds = %220, %223
  %238 = and i32 %64, 16
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %254, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds i8, i8* %2, i64 60
  %242 = getelementptr inbounds i8, i8* %2, i64 64
  %243 = bitcast i8* %242 to i32*
  store i32 0, i32* %243, align 4
  store i8 1, i8* %241, align 4
  %244 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %245 = bitcast %"class.base::RefCountedMemory"* %244 to i8* (%"class.base::RefCountedMemory"*)***
  %246 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %245, align 8
  %247 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %246, align 8
  %248 = tail call i8* %247(%"class.base::RefCountedMemory"* %244) #11
  %249 = load i64, i64* %21, align 8
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 1
  store i32 %252, i32* %243, align 4
  %253 = add i64 %249, 4
  store i64 %253, i64* %21, align 8
  br label %254

254:                                              ; preds = %237, %240
  %255 = and i32 %64, 32
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %271, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds i8, i8* %2, i64 68
  %259 = getelementptr inbounds i8, i8* %2, i64 72
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 4
  store i8 1, i8* %258, align 4
  %261 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %262 = bitcast %"class.base::RefCountedMemory"* %261 to i8* (%"class.base::RefCountedMemory"*)***
  %263 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %262, align 8
  %264 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %263, align 8
  %265 = tail call i8* %264(%"class.base::RefCountedMemory"* %261) #11
  %266 = load i64, i64* %21, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = bitcast i8* %267 to i32*
  %269 = load i32, i32* %268, align 1
  store i32 %269, i32* %260, align 4
  %270 = add i64 %266, 4
  store i64 %270, i64* %21, align 8
  br label %271

271:                                              ; preds = %254, %257
  %272 = and i32 %64, 64
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %317, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds i8, i8* %2, i64 80
  %276 = load i8, i8* %275, align 8, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %289, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds i8, i8* %2, i64 88
  %280 = bitcast i8* %279 to i32**
  %281 = load i32*, i32** %280, align 8
  %282 = icmp eq i32* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %278
  %284 = ptrtoint i32* %281 to i64
  %285 = getelementptr inbounds i8, i8* %2, i64 96
  %286 = bitcast i8* %285 to i64*
  store i64 %284, i64* %286, align 8
  %287 = bitcast i32* %281 to i8*
  tail call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %283, %278
  store i8 0, i8* %275, align 8
  br label %289

289:                                              ; preds = %288, %274
  %290 = getelementptr inbounds i8, i8* %2, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %275, align 8
  %291 = load i8, i8* %8, align 1
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %317, label %293

293:                                              ; preds = %289
  %294 = zext i8 %291 to i64
  %295 = getelementptr inbounds i8, i8* %2, i64 96
  %296 = bitcast i8* %295 to i32**
  %297 = bitcast i8* %290 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %297, i64 %294) #11
  %298 = bitcast i8* %290 to i32**
  %299 = load i32*, i32** %298, align 8
  %300 = load i32*, i32** %296, align 8
  %301 = icmp eq i32* %299, %300
  br i1 %301, label %317, label %302

302:                                              ; preds = %293, %302
  %303 = phi i32* [ %315, %302 ], [ %299, %293 ]
  %304 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %305 = bitcast %"class.base::RefCountedMemory"* %304 to i8* (%"class.base::RefCountedMemory"*)***
  %306 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %305, align 8
  %307 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %306, align 8
  %308 = tail call i8* %307(%"class.base::RefCountedMemory"* %304) #11
  %309 = load i64, i64* %21, align 8
  %310 = getelementptr inbounds i8, i8* %308, i64 %309
  %311 = bitcast i8* %310 to i32*
  %312 = load i32, i32* %311, align 1
  store i32 %312, i32* %303, align 4
  %313 = load i64, i64* %21, align 8
  %314 = add i64 %313, 4
  store i64 %314, i64* %21, align 8
  %315 = getelementptr inbounds i32, i32* %303, i64 1
  %316 = icmp eq i32* %315, %300
  br i1 %316, label %317, label %302

317:                                              ; preds = %302, %289, %293, %271
  %318 = trunc i32 %64 to i8
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %320, label %564

320:                                              ; preds = %317
  %321 = getelementptr inbounds i8, i8* %2, i64 112
  %322 = load i8, i8* %321, align 8, !range !2
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %334, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds i8, i8* %2, i64 120
  %326 = bitcast i8* %325 to i8**
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %333, label %329

329:                                              ; preds = %324
  %330 = ptrtoint i8* %327 to i64
  %331 = getelementptr inbounds i8, i8* %2, i64 128
  %332 = bitcast i8* %331 to i64*
  store i64 %330, i64* %332, align 8
  tail call void @_ZdlPv(i8* nonnull %327) #12
  br label %333

333:                                              ; preds = %329, %324
  store i8 0, i8* %321, align 8
  br label %334

334:                                              ; preds = %320, %333
  %335 = getelementptr inbounds i8, i8* %2, i64 120
  %336 = bitcast i8* %335 to %"class.std::__1::vector.271"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %335, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %321, align 8
  %337 = getelementptr inbounds i8, i8* %2, i64 144
  %338 = load i8, i8* %337, align 8, !range !2
  %339 = icmp eq i8 %338, 0
  %340 = getelementptr inbounds i8, i8* %2, i64 152
  br i1 %339, label %341, label %342

341:                                              ; preds = %334
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %337, align 8
  br label %363

342:                                              ; preds = %334
  %343 = bitcast i8* %340 to i32**
  %344 = load i32*, i32** %343, align 8
  %345 = icmp eq i32* %344, null
  br i1 %345, label %346, label %347

346:                                              ; preds = %342
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %337, align 8
  br label %354

347:                                              ; preds = %342
  %348 = ptrtoint i32* %344 to i64
  %349 = getelementptr inbounds i8, i8* %2, i64 160
  %350 = bitcast i8* %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = bitcast i32* %344 to i8*
  tail call void @_ZdlPv(i8* %351) #12
  %352 = load i8, i8* %321, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %337, align 8
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %362, label %354, !prof !3

354:                                              ; preds = %346, %347
  %355 = getelementptr inbounds i8, i8* %2, i64 128
  %356 = bitcast i8* %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast i8* %335 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = inttoptr i64 %359 to i8*
  %361 = inttoptr i64 %357 to i8*
  br label %363

362:                                              ; preds = %347
  tail call void @llvm.trap() #11
  unreachable

363:                                              ; preds = %354, %341
  %364 = phi i8* [ %361, %354 ], [ null, %341 ]
  %365 = phi i8* [ %360, %354 ], [ null, %341 ]
  %366 = phi i64 [ %359, %354 ], [ 0, %341 ]
  %367 = phi i64 [ %357, %354 ], [ 0, %341 ]
  %368 = bitcast i8* %340 to %"class.std::__1::vector.580"*
  %369 = getelementptr inbounds i8, i8* %2, i64 128
  %370 = bitcast i8* %369 to i8**
  %371 = getelementptr inbounds i8, i8* %2, i64 160
  %372 = bitcast i8* %371 to i32**
  %373 = bitcast i8* %371 to i64*
  %374 = bitcast i8* %340 to i64*
  %375 = load i8, i8* %8, align 1
  %376 = zext i8 %375 to i64
  %377 = sub i64 %367, %366
  %378 = icmp ult i64 %377, %376
  %379 = inttoptr i64 %366 to i8*
  br i1 %378, label %380, label %385

380:                                              ; preds = %363
  %381 = sub i64 %376, %377
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.271"* %336, i64 %381) #11
  %382 = bitcast i8* %335 to i8**
  %383 = load i8*, i8** %382, align 8
  %384 = load i8*, i8** %370, align 8
  br label %389

385:                                              ; preds = %363
  %386 = icmp ugt i64 %377, %376
  br i1 %386, label %387, label %389

387:                                              ; preds = %385
  %388 = getelementptr inbounds i8, i8* %379, i64 %376
  store i8* %388, i8** %370, align 8
  br label %389

389:                                              ; preds = %380, %385, %387
  %390 = phi i8* [ %384, %380 ], [ %364, %385 ], [ %388, %387 ]
  %391 = phi i8* [ %383, %380 ], [ %365, %385 ], [ %365, %387 ]
  %392 = bitcast i8* %335 to i8**
  %393 = icmp eq i8* %391, %390
  br i1 %393, label %394, label %535

394:                                              ; preds = %389
  %395 = load i64, i64* %21, align 8
  br label %398

396:                                              ; preds = %535
  %397 = load i8*, i8** %370, align 8
  br label %398

398:                                              ; preds = %394, %396
  %399 = phi i8* [ %390, %394 ], [ %397, %396 ]
  %400 = phi i64 [ %395, %394 ], [ %546, %396 ]
  %401 = sub i64 0, %400
  %402 = and i64 %401, 3
  %403 = add i64 %402, %400
  store i64 %403, i64* %21, align 8
  %404 = load i8*, i8** %392, align 8
  %405 = icmp eq i8* %404, %399
  br i1 %405, label %512, label %406

406:                                              ; preds = %398
  %407 = ptrtoint i8* %404 to i64
  %408 = sub i64 0, %407
  %409 = getelementptr i8, i8* %399, i64 %408
  %410 = ptrtoint i8* %409 to i64
  %411 = icmp ult i8* %409, inttoptr (i64 32 to i8*)
  br i1 %411, label %502, label %412

412:                                              ; preds = %406
  %413 = and i64 %410, -32
  %414 = getelementptr i8, i8* %404, i64 %413
  %415 = add i64 %413, -32
  %416 = lshr exact i64 %415, 5
  %417 = add nuw nsw i64 %416, 1
  %418 = and i64 %417, 3
  %419 = icmp ult i64 %415, 96
  br i1 %419, label %465, label %420

420:                                              ; preds = %412
  %421 = sub nsw i64 %417, %418
  br label %422

422:                                              ; preds = %422, %420
  %423 = phi i64 [ 0, %420 ], [ %462, %422 ]
  %424 = phi <16 x i8> [ zeroinitializer, %420 ], [ %460, %422 ]
  %425 = phi <16 x i8> [ zeroinitializer, %420 ], [ %461, %422 ]
  %426 = phi i64 [ %421, %420 ], [ %463, %422 ]
  %427 = getelementptr i8, i8* %404, i64 %423
  %428 = bitcast i8* %427 to <16 x i8>*
  %429 = load <16 x i8>, <16 x i8>* %428, align 1
  %430 = getelementptr i8, i8* %427, i64 16
  %431 = bitcast i8* %430 to <16 x i8>*
  %432 = load <16 x i8>, <16 x i8>* %431, align 1
  %433 = add <16 x i8> %429, %424
  %434 = add <16 x i8> %432, %425
  %435 = or i64 %423, 32
  %436 = getelementptr i8, i8* %404, i64 %435
  %437 = bitcast i8* %436 to <16 x i8>*
  %438 = load <16 x i8>, <16 x i8>* %437, align 1
  %439 = getelementptr i8, i8* %436, i64 16
  %440 = bitcast i8* %439 to <16 x i8>*
  %441 = load <16 x i8>, <16 x i8>* %440, align 1
  %442 = add <16 x i8> %438, %433
  %443 = add <16 x i8> %441, %434
  %444 = or i64 %423, 64
  %445 = getelementptr i8, i8* %404, i64 %444
  %446 = bitcast i8* %445 to <16 x i8>*
  %447 = load <16 x i8>, <16 x i8>* %446, align 1
  %448 = getelementptr i8, i8* %445, i64 16
  %449 = bitcast i8* %448 to <16 x i8>*
  %450 = load <16 x i8>, <16 x i8>* %449, align 1
  %451 = add <16 x i8> %447, %442
  %452 = add <16 x i8> %450, %443
  %453 = or i64 %423, 96
  %454 = getelementptr i8, i8* %404, i64 %453
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1
  %457 = getelementptr i8, i8* %454, i64 16
  %458 = bitcast i8* %457 to <16 x i8>*
  %459 = load <16 x i8>, <16 x i8>* %458, align 1
  %460 = add <16 x i8> %456, %451
  %461 = add <16 x i8> %459, %452
  %462 = add i64 %423, 128
  %463 = add i64 %426, -4
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %422, !llvm.loop !5

465:                                              ; preds = %422, %412
  %466 = phi <16 x i8> [ undef, %412 ], [ %460, %422 ]
  %467 = phi <16 x i8> [ undef, %412 ], [ %461, %422 ]
  %468 = phi i64 [ 0, %412 ], [ %462, %422 ]
  %469 = phi <16 x i8> [ zeroinitializer, %412 ], [ %460, %422 ]
  %470 = phi <16 x i8> [ zeroinitializer, %412 ], [ %461, %422 ]
  %471 = icmp eq i64 %418, 0
  br i1 %471, label %488, label %472

472:                                              ; preds = %465, %472
  %473 = phi i64 [ %485, %472 ], [ %468, %465 ]
  %474 = phi <16 x i8> [ %483, %472 ], [ %469, %465 ]
  %475 = phi <16 x i8> [ %484, %472 ], [ %470, %465 ]
  %476 = phi i64 [ %486, %472 ], [ %418, %465 ]
  %477 = getelementptr i8, i8* %404, i64 %473
  %478 = bitcast i8* %477 to <16 x i8>*
  %479 = load <16 x i8>, <16 x i8>* %478, align 1
  %480 = getelementptr i8, i8* %477, i64 16
  %481 = bitcast i8* %480 to <16 x i8>*
  %482 = load <16 x i8>, <16 x i8>* %481, align 1
  %483 = add <16 x i8> %479, %474
  %484 = add <16 x i8> %482, %475
  %485 = add i64 %473, 32
  %486 = add i64 %476, -1
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %472, !llvm.loop !7

488:                                              ; preds = %472, %465
  %489 = phi <16 x i8> [ %466, %465 ], [ %483, %472 ]
  %490 = phi <16 x i8> [ %467, %465 ], [ %484, %472 ]
  %491 = add <16 x i8> %490, %489
  %492 = shufflevector <16 x i8> %491, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %493 = add <16 x i8> %491, %492
  %494 = shufflevector <16 x i8> %493, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %495 = add <16 x i8> %493, %494
  %496 = shufflevector <16 x i8> %495, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %497 = add <16 x i8> %495, %496
  %498 = shufflevector <16 x i8> %497, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %499 = add <16 x i8> %497, %498
  %500 = extractelement <16 x i8> %499, i32 0
  %501 = icmp eq i64 %413, %410
  br i1 %501, label %512, label %502

502:                                              ; preds = %488, %406
  %503 = phi i8 [ 0, %406 ], [ %500, %488 ]
  %504 = phi i8* [ %404, %406 ], [ %414, %488 ]
  br label %505

505:                                              ; preds = %502, %505
  %506 = phi i8 [ %509, %505 ], [ %503, %502 ]
  %507 = phi i8* [ %510, %505 ], [ %504, %502 ]
  %508 = load i8, i8* %507, align 1
  %509 = add i8 %508, %506
  %510 = getelementptr inbounds i8, i8* %507, i64 1
  %511 = icmp eq i8* %510, %399
  br i1 %511, label %512, label %505, !llvm.loop !9

512:                                              ; preds = %505, %488, %398
  %513 = phi i8 [ 0, %398 ], [ %500, %488 ], [ %509, %505 ]
  %514 = zext i8 %513 to i64
  %515 = load i64, i64* %373, align 8
  %516 = load i64, i64* %374, align 8
  %517 = sub i64 %515, %516
  %518 = ashr exact i64 %517, 2
  %519 = icmp ult i64 %518, %514
  %520 = inttoptr i64 %516 to i32*
  br i1 %519, label %521, label %526

521:                                              ; preds = %512
  %522 = sub nsw i64 %514, %518
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %368, i64 %522) #11
  %523 = bitcast i8* %340 to i32**
  %524 = load i32*, i32** %523, align 8
  %525 = load i32*, i32** %372, align 8
  br label %531

526:                                              ; preds = %512
  %527 = inttoptr i64 %515 to i32*
  %528 = icmp ugt i64 %518, %514
  br i1 %528, label %529, label %531

529:                                              ; preds = %526
  %530 = getelementptr inbounds i32, i32* %520, i64 %514
  store i32* %530, i32** %372, align 8
  br label %531

531:                                              ; preds = %521, %526, %529
  %532 = phi i32* [ %525, %521 ], [ %527, %526 ], [ %530, %529 ]
  %533 = phi i32* [ %524, %521 ], [ %520, %526 ], [ %520, %529 ]
  %534 = icmp eq i32* %533, %532
  br i1 %534, label %564, label %549

535:                                              ; preds = %389, %535
  %536 = phi i8* [ %547, %535 ], [ %391, %389 ]
  %537 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %538 = bitcast %"class.base::RefCountedMemory"* %537 to i8* (%"class.base::RefCountedMemory"*)***
  %539 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %538, align 8
  %540 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %539, align 8
  %541 = tail call i8* %540(%"class.base::RefCountedMemory"* %537) #11
  %542 = load i64, i64* %21, align 8
  %543 = getelementptr inbounds i8, i8* %541, i64 %542
  %544 = load i8, i8* %543, align 1
  store i8 %544, i8* %536, align 1
  %545 = load i64, i64* %21, align 8
  %546 = add i64 %545, 1
  store i64 %546, i64* %21, align 8
  %547 = getelementptr inbounds i8, i8* %536, i64 1
  %548 = icmp eq i8* %547, %390
  br i1 %548, label %396, label %535

549:                                              ; preds = %531, %549
  %550 = phi i32* [ %562, %549 ], [ %533, %531 ]
  %551 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %552 = bitcast %"class.base::RefCountedMemory"* %551 to i8* (%"class.base::RefCountedMemory"*)***
  %553 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %552, align 8
  %554 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %553, align 8
  %555 = tail call i8* %554(%"class.base::RefCountedMemory"* %551) #11
  %556 = load i64, i64* %21, align 8
  %557 = getelementptr inbounds i8, i8* %555, i64 %556
  %558 = bitcast i8* %557 to i32*
  %559 = load i32, i32* %558, align 1
  store i32 %559, i32* %550, align 4
  %560 = load i64, i64* %21, align 8
  %561 = add i64 %560, 4
  store i64 %561, i64* %21, align 8
  %562 = getelementptr inbounds i32, i32* %550, i64 1
  %563 = icmp eq i32* %562, %532
  br i1 %563, label %564, label %549

564:                                              ; preds = %549, %531, %317
  %565 = and i32 %64, 256
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %611, label %567

567:                                              ; preds = %564
  %568 = getelementptr inbounds i8, i8* %2, i64 176
  %569 = load i8, i8* %568, align 8, !range !2
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %582, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds i8, i8* %2, i64 184
  %573 = bitcast i8* %572 to i32**
  %574 = load i32*, i32** %573, align 8
  %575 = icmp eq i32* %574, null
  br i1 %575, label %581, label %576

576:                                              ; preds = %571
  %577 = ptrtoint i32* %574 to i64
  %578 = getelementptr inbounds i8, i8* %2, i64 192
  %579 = bitcast i8* %578 to i64*
  store i64 %577, i64* %579, align 8
  %580 = bitcast i32* %574 to i8*
  tail call void @_ZdlPv(i8* %580) #12
  br label %581

581:                                              ; preds = %576, %571
  store i8 0, i8* %568, align 8
  br label %582

582:                                              ; preds = %581, %567
  %583 = getelementptr inbounds i8, i8* %2, i64 184
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %583, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %568, align 8
  %584 = load i32, i32* %16, align 4
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %611, label %586

586:                                              ; preds = %582
  %587 = zext i32 %584 to i64
  %588 = tail call i64 @llvm.ctpop.i64(i64 %587) #11, !range !4
  %589 = getelementptr inbounds i8, i8* %2, i64 192
  %590 = bitcast i8* %589 to i32**
  %591 = bitcast i8* %583 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %591, i64 %588) #11
  %592 = bitcast i8* %583 to i32**
  %593 = load i32*, i32** %592, align 8
  %594 = load i32*, i32** %590, align 8
  %595 = icmp eq i32* %593, %594
  br i1 %595, label %611, label %596

596:                                              ; preds = %586, %596
  %597 = phi i32* [ %609, %596 ], [ %593, %586 ]
  %598 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %599 = bitcast %"class.base::RefCountedMemory"* %598 to i8* (%"class.base::RefCountedMemory"*)***
  %600 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %599, align 8
  %601 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %600, align 8
  %602 = tail call i8* %601(%"class.base::RefCountedMemory"* %598) #11
  %603 = load i64, i64* %21, align 8
  %604 = getelementptr inbounds i8, i8* %602, i64 %603
  %605 = bitcast i8* %604 to i32*
  %606 = load i32, i32* %605, align 1
  store i32 %606, i32* %597, align 4
  %607 = load i64, i64* %21, align 8
  %608 = add i64 %607, 4
  store i64 %608, i64* %21, align 8
  %609 = getelementptr inbounds i32, i32* %597, i64 1
  %610 = icmp eq i32* %609, %594
  br i1 %610, label %611, label %596

611:                                              ; preds = %596, %582, %586, %564
  %612 = and i32 %64, 2048
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %658, label %614

614:                                              ; preds = %611
  %615 = getelementptr inbounds i8, i8* %2, i64 208
  %616 = load i8, i8* %615, align 8, !range !2
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %629, label %618

618:                                              ; preds = %614
  %619 = getelementptr inbounds i8, i8* %2, i64 216
  %620 = bitcast i8* %619 to i32**
  %621 = load i32*, i32** %620, align 8
  %622 = icmp eq i32* %621, null
  br i1 %622, label %628, label %623

623:                                              ; preds = %618
  %624 = ptrtoint i32* %621 to i64
  %625 = getelementptr inbounds i8, i8* %2, i64 224
  %626 = bitcast i8* %625 to i64*
  store i64 %624, i64* %626, align 8
  %627 = bitcast i32* %621 to i8*
  tail call void @_ZdlPv(i8* %627) #12
  br label %628

628:                                              ; preds = %623, %618
  store i8 0, i8* %615, align 8
  br label %629

629:                                              ; preds = %628, %614
  %630 = getelementptr inbounds i8, i8* %2, i64 216
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %630, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %615, align 8
  %631 = load i32, i32* %12, align 4
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %658, label %633

633:                                              ; preds = %629
  %634 = zext i32 %631 to i64
  %635 = tail call i64 @llvm.ctpop.i64(i64 %634) #11, !range !4
  %636 = getelementptr inbounds i8, i8* %2, i64 224
  %637 = bitcast i8* %636 to i32**
  %638 = bitcast i8* %630 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %638, i64 %635) #11
  %639 = bitcast i8* %630 to i32**
  %640 = load i32*, i32** %639, align 8
  %641 = load i32*, i32** %637, align 8
  %642 = icmp eq i32* %640, %641
  br i1 %642, label %658, label %643

643:                                              ; preds = %633, %643
  %644 = phi i32* [ %656, %643 ], [ %640, %633 ]
  %645 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %646 = bitcast %"class.base::RefCountedMemory"* %645 to i8* (%"class.base::RefCountedMemory"*)***
  %647 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %646, align 8
  %648 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %647, align 8
  %649 = tail call i8* %648(%"class.base::RefCountedMemory"* %645) #11
  %650 = load i64, i64* %21, align 8
  %651 = getelementptr inbounds i8, i8* %649, i64 %650
  %652 = bitcast i8* %651 to i32*
  %653 = load i32, i32* %652, align 1
  store i32 %653, i32* %644, align 4
  %654 = load i64, i64* %21, align 8
  %655 = add i64 %654, 4
  store i64 %655, i64* %21, align 8
  %656 = getelementptr inbounds i32, i32* %644, i64 1
  %657 = icmp eq i32* %656, %641
  br i1 %657, label %658, label %643

658:                                              ; preds = %643, %629, %633, %611
  %659 = and i32 %64, 4096
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %705, label %661

661:                                              ; preds = %658
  %662 = getelementptr inbounds i8, i8* %2, i64 240
  %663 = load i8, i8* %662, align 8, !range !2
  %664 = icmp eq i8 %663, 0
  br i1 %664, label %676, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds i8, i8* %2, i64 248
  %667 = bitcast i8* %666 to i32**
  %668 = load i32*, i32** %667, align 8
  %669 = icmp eq i32* %668, null
  br i1 %669, label %675, label %670

670:                                              ; preds = %665
  %671 = ptrtoint i32* %668 to i64
  %672 = getelementptr inbounds i8, i8* %2, i64 256
  %673 = bitcast i8* %672 to i64*
  store i64 %671, i64* %673, align 8
  %674 = bitcast i32* %668 to i8*
  tail call void @_ZdlPv(i8* %674) #12
  br label %675

675:                                              ; preds = %670, %665
  store i8 0, i8* %662, align 8
  br label %676

676:                                              ; preds = %675, %661
  %677 = getelementptr inbounds i8, i8* %2, i64 248
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %677, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %662, align 8
  %678 = load i32, i32* %10, align 4
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %705, label %680

680:                                              ; preds = %676
  %681 = zext i32 %678 to i64
  %682 = tail call i64 @llvm.ctpop.i64(i64 %681) #11, !range !4
  %683 = getelementptr inbounds i8, i8* %2, i64 256
  %684 = bitcast i8* %683 to i32**
  %685 = bitcast i8* %677 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %685, i64 %682) #11
  %686 = bitcast i8* %677 to i32**
  %687 = load i32*, i32** %686, align 8
  %688 = load i32*, i32** %684, align 8
  %689 = icmp eq i32* %687, %688
  br i1 %689, label %705, label %690

690:                                              ; preds = %680, %690
  %691 = phi i32* [ %703, %690 ], [ %687, %680 ]
  %692 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %693 = bitcast %"class.base::RefCountedMemory"* %692 to i8* (%"class.base::RefCountedMemory"*)***
  %694 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %693, align 8
  %695 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %694, align 8
  %696 = tail call i8* %695(%"class.base::RefCountedMemory"* %692) #11
  %697 = load i64, i64* %21, align 8
  %698 = getelementptr inbounds i8, i8* %696, i64 %697
  %699 = bitcast i8* %698 to i32*
  %700 = load i32, i32* %699, align 1
  store i32 %700, i32* %691, align 4
  %701 = load i64, i64* %21, align 8
  %702 = add i64 %701, 4
  store i64 %702, i64* %21, align 8
  %703 = getelementptr inbounds i32, i32* %691, i64 1
  %704 = icmp eq i32* %703, %688
  br i1 %704, label %705, label %690

705:                                              ; preds = %690, %676, %680, %658
  %706 = and i32 %64, 512
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %784, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds i8, i8* %2, i64 272
  %710 = load i8, i8* %709, align 8, !range !2
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %723, label %712

712:                                              ; preds = %708
  %713 = getelementptr inbounds i8, i8* %2, i64 280
  %714 = bitcast i8* %713 to %"struct.x11::Xkb::KeyName"**
  %715 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %714, align 8
  %716 = icmp eq %"struct.x11::Xkb::KeyName"* %715, null
  br i1 %716, label %722, label %717

717:                                              ; preds = %712
  %718 = ptrtoint %"struct.x11::Xkb::KeyName"* %715 to i64
  %719 = getelementptr inbounds i8, i8* %2, i64 288
  %720 = bitcast i8* %719 to i64*
  store i64 %718, i64* %720, align 8
  %721 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %715, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %721) #12
  br label %722

722:                                              ; preds = %717, %712
  store i8 0, i8* %709, align 8
  br label %723

723:                                              ; preds = %722, %708
  %724 = getelementptr inbounds i8, i8* %2, i64 280
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %724, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %709, align 8
  %725 = load i8, i8* %14, align 1
  %726 = icmp eq i8 %725, 0
  br i1 %726, label %784, label %727

727:                                              ; preds = %723
  %728 = zext i8 %725 to i64
  %729 = getelementptr inbounds i8, i8* %2, i64 288
  %730 = bitcast i8* %729 to %"struct.x11::Xkb::KeyName"**
  %731 = bitcast i8* %724 to %"class.std::__1::vector.592"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb7KeyNameENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.592"* %731, i64 %728) #11
  %732 = bitcast i8* %724 to %"struct.x11::Xkb::KeyName"**
  %733 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %732, align 8
  %734 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %730, align 8
  %735 = icmp eq %"struct.x11::Xkb::KeyName"* %733, %734
  br i1 %735, label %784, label %736

736:                                              ; preds = %727, %736
  %737 = phi %"struct.x11::Xkb::KeyName"* [ %782, %736 ], [ %733, %727 ]
  %738 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %737, i64 0, i32 0, i32 0, i64 0
  %739 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %740 = bitcast %"class.base::RefCountedMemory"* %739 to i8* (%"class.base::RefCountedMemory"*)***
  %741 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %740, align 8
  %742 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %741, align 8
  %743 = tail call i8* %742(%"class.base::RefCountedMemory"* %739) #11
  %744 = load i64, i64* %21, align 8
  %745 = getelementptr inbounds i8, i8* %743, i64 %744
  %746 = load i8, i8* %745, align 1
  store i8 %746, i8* %738, align 1
  %747 = load i64, i64* %21, align 8
  %748 = add i64 %747, 1
  store i64 %748, i64* %21, align 8
  %749 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %737, i64 0, i32 0, i32 0, i64 1
  %750 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %751 = bitcast %"class.base::RefCountedMemory"* %750 to i8* (%"class.base::RefCountedMemory"*)***
  %752 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %751, align 8
  %753 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %752, align 8
  %754 = tail call i8* %753(%"class.base::RefCountedMemory"* %750) #11
  %755 = load i64, i64* %21, align 8
  %756 = getelementptr inbounds i8, i8* %754, i64 %755
  %757 = load i8, i8* %756, align 1
  store i8 %757, i8* %749, align 1
  %758 = load i64, i64* %21, align 8
  %759 = add i64 %758, 1
  store i64 %759, i64* %21, align 8
  %760 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %737, i64 0, i32 0, i32 0, i64 2
  %761 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %762 = bitcast %"class.base::RefCountedMemory"* %761 to i8* (%"class.base::RefCountedMemory"*)***
  %763 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %762, align 8
  %764 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %763, align 8
  %765 = tail call i8* %764(%"class.base::RefCountedMemory"* %761) #11
  %766 = load i64, i64* %21, align 8
  %767 = getelementptr inbounds i8, i8* %765, i64 %766
  %768 = load i8, i8* %767, align 1
  store i8 %768, i8* %760, align 1
  %769 = load i64, i64* %21, align 8
  %770 = add i64 %769, 1
  store i64 %770, i64* %21, align 8
  %771 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %737, i64 0, i32 0, i32 0, i64 3
  %772 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %773 = bitcast %"class.base::RefCountedMemory"* %772 to i8* (%"class.base::RefCountedMemory"*)***
  %774 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %773, align 8
  %775 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %774, align 8
  %776 = tail call i8* %775(%"class.base::RefCountedMemory"* %772) #11
  %777 = load i64, i64* %21, align 8
  %778 = getelementptr inbounds i8, i8* %776, i64 %777
  %779 = load i8, i8* %778, align 1
  store i8 %779, i8* %771, align 1
  %780 = load i64, i64* %21, align 8
  %781 = add i64 %780, 1
  store i64 %781, i64* %21, align 8
  %782 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %737, i64 1
  %783 = icmp eq %"struct.x11::Xkb::KeyName"* %782, %734
  br i1 %783, label %784, label %736

784:                                              ; preds = %736, %723, %727, %705
  %785 = and i32 %64, 1024
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %907, label %787

787:                                              ; preds = %784
  %788 = getelementptr inbounds i8, i8* %2, i64 304
  %789 = load i8, i8* %788, align 8, !range !2
  %790 = icmp eq i8 %789, 0
  br i1 %790, label %802, label %791

791:                                              ; preds = %787
  %792 = getelementptr inbounds i8, i8* %2, i64 312
  %793 = bitcast i8* %792 to %"struct.x11::Xkb::KeyAlias"**
  %794 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %793, align 8
  %795 = icmp eq %"struct.x11::Xkb::KeyAlias"* %794, null
  br i1 %795, label %801, label %796

796:                                              ; preds = %791
  %797 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %794 to i64
  %798 = getelementptr inbounds i8, i8* %2, i64 320
  %799 = bitcast i8* %798 to i64*
  store i64 %797, i64* %799, align 8
  %800 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %794, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %800) #12
  br label %801

801:                                              ; preds = %796, %791
  store i8 0, i8* %788, align 8
  br label %802

802:                                              ; preds = %801, %787
  %803 = getelementptr inbounds i8, i8* %2, i64 312
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %803, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %788, align 8
  %804 = load i8, i8* %18, align 1
  %805 = icmp eq i8 %804, 0
  br i1 %805, label %907, label %806

806:                                              ; preds = %802
  %807 = zext i8 %804 to i64
  %808 = getelementptr inbounds i8, i8* %2, i64 320
  %809 = bitcast i8* %808 to %"struct.x11::Xkb::KeyAlias"**
  %810 = bitcast i8* %803 to %"class.std::__1::vector.605"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb8KeyAliasENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.605"* %810, i64 %807) #11
  %811 = bitcast i8* %803 to %"struct.x11::Xkb::KeyAlias"**
  %812 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %811, align 8
  %813 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %809, align 8
  %814 = icmp eq %"struct.x11::Xkb::KeyAlias"* %812, %813
  br i1 %814, label %907, label %815

815:                                              ; preds = %806, %815
  %816 = phi %"struct.x11::Xkb::KeyAlias"* [ %905, %815 ], [ %812, %806 ]
  %817 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 0, i32 0, i64 0
  %818 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %819 = bitcast %"class.base::RefCountedMemory"* %818 to i8* (%"class.base::RefCountedMemory"*)***
  %820 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %819, align 8
  %821 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %820, align 8
  %822 = tail call i8* %821(%"class.base::RefCountedMemory"* %818) #11
  %823 = load i64, i64* %21, align 8
  %824 = getelementptr inbounds i8, i8* %822, i64 %823
  %825 = load i8, i8* %824, align 1
  store i8 %825, i8* %817, align 1
  %826 = load i64, i64* %21, align 8
  %827 = add i64 %826, 1
  store i64 %827, i64* %21, align 8
  %828 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 0, i32 0, i64 1
  %829 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %830 = bitcast %"class.base::RefCountedMemory"* %829 to i8* (%"class.base::RefCountedMemory"*)***
  %831 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %830, align 8
  %832 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %831, align 8
  %833 = tail call i8* %832(%"class.base::RefCountedMemory"* %829) #11
  %834 = load i64, i64* %21, align 8
  %835 = getelementptr inbounds i8, i8* %833, i64 %834
  %836 = load i8, i8* %835, align 1
  store i8 %836, i8* %828, align 1
  %837 = load i64, i64* %21, align 8
  %838 = add i64 %837, 1
  store i64 %838, i64* %21, align 8
  %839 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 0, i32 0, i64 2
  %840 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %841 = bitcast %"class.base::RefCountedMemory"* %840 to i8* (%"class.base::RefCountedMemory"*)***
  %842 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %841, align 8
  %843 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %842, align 8
  %844 = tail call i8* %843(%"class.base::RefCountedMemory"* %840) #11
  %845 = load i64, i64* %21, align 8
  %846 = getelementptr inbounds i8, i8* %844, i64 %845
  %847 = load i8, i8* %846, align 1
  store i8 %847, i8* %839, align 1
  %848 = load i64, i64* %21, align 8
  %849 = add i64 %848, 1
  store i64 %849, i64* %21, align 8
  %850 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 0, i32 0, i64 3
  %851 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %852 = bitcast %"class.base::RefCountedMemory"* %851 to i8* (%"class.base::RefCountedMemory"*)***
  %853 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %852, align 8
  %854 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %853, align 8
  %855 = tail call i8* %854(%"class.base::RefCountedMemory"* %851) #11
  %856 = load i64, i64* %21, align 8
  %857 = getelementptr inbounds i8, i8* %855, i64 %856
  %858 = load i8, i8* %857, align 1
  store i8 %858, i8* %850, align 1
  %859 = load i64, i64* %21, align 8
  %860 = add i64 %859, 1
  store i64 %860, i64* %21, align 8
  %861 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 1, i32 0, i64 0
  %862 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %863 = bitcast %"class.base::RefCountedMemory"* %862 to i8* (%"class.base::RefCountedMemory"*)***
  %864 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %863, align 8
  %865 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %864, align 8
  %866 = tail call i8* %865(%"class.base::RefCountedMemory"* %862) #11
  %867 = load i64, i64* %21, align 8
  %868 = getelementptr inbounds i8, i8* %866, i64 %867
  %869 = load i8, i8* %868, align 1
  store i8 %869, i8* %861, align 1
  %870 = load i64, i64* %21, align 8
  %871 = add i64 %870, 1
  store i64 %871, i64* %21, align 8
  %872 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 1, i32 0, i64 1
  %873 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %874 = bitcast %"class.base::RefCountedMemory"* %873 to i8* (%"class.base::RefCountedMemory"*)***
  %875 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %874, align 8
  %876 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %875, align 8
  %877 = tail call i8* %876(%"class.base::RefCountedMemory"* %873) #11
  %878 = load i64, i64* %21, align 8
  %879 = getelementptr inbounds i8, i8* %877, i64 %878
  %880 = load i8, i8* %879, align 1
  store i8 %880, i8* %872, align 1
  %881 = load i64, i64* %21, align 8
  %882 = add i64 %881, 1
  store i64 %882, i64* %21, align 8
  %883 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 1, i32 0, i64 2
  %884 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %885 = bitcast %"class.base::RefCountedMemory"* %884 to i8* (%"class.base::RefCountedMemory"*)***
  %886 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %885, align 8
  %887 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %886, align 8
  %888 = tail call i8* %887(%"class.base::RefCountedMemory"* %884) #11
  %889 = load i64, i64* %21, align 8
  %890 = getelementptr inbounds i8, i8* %888, i64 %889
  %891 = load i8, i8* %890, align 1
  store i8 %891, i8* %883, align 1
  %892 = load i64, i64* %21, align 8
  %893 = add i64 %892, 1
  store i64 %893, i64* %21, align 8
  %894 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 0, i32 1, i32 0, i64 3
  %895 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %896 = bitcast %"class.base::RefCountedMemory"* %895 to i8* (%"class.base::RefCountedMemory"*)***
  %897 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %896, align 8
  %898 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %897, align 8
  %899 = tail call i8* %898(%"class.base::RefCountedMemory"* %895) #11
  %900 = load i64, i64* %21, align 8
  %901 = getelementptr inbounds i8, i8* %899, i64 %900
  %902 = load i8, i8* %901, align 1
  store i8 %902, i8* %894, align 1
  %903 = load i64, i64* %21, align 8
  %904 = add i64 %903, 1
  store i64 %904, i64* %21, align 8
  %905 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %816, i64 1
  %906 = icmp eq %"struct.x11::Xkb::KeyAlias"* %905, %813
  br i1 %906, label %907, label %815

907:                                              ; preds = %815, %802, %806, %784
  %908 = and i32 %64, 8192
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %953, label %910

910:                                              ; preds = %907
  %911 = getelementptr inbounds i8, i8* %2, i64 336
  %912 = load i8, i8* %911, align 8, !range !2
  %913 = icmp eq i8 %912, 0
  br i1 %913, label %925, label %914

914:                                              ; preds = %910
  %915 = getelementptr inbounds i8, i8* %2, i64 344
  %916 = bitcast i8* %915 to i32**
  %917 = load i32*, i32** %916, align 8
  %918 = icmp eq i32* %917, null
  br i1 %918, label %924, label %919

919:                                              ; preds = %914
  %920 = ptrtoint i32* %917 to i64
  %921 = getelementptr inbounds i8, i8* %2, i64 352
  %922 = bitcast i8* %921 to i64*
  store i64 %920, i64* %922, align 8
  %923 = bitcast i32* %917 to i8*
  tail call void @_ZdlPv(i8* %923) #12
  br label %924

924:                                              ; preds = %919, %914
  store i8 0, i8* %911, align 8
  br label %925

925:                                              ; preds = %924, %910
  %926 = getelementptr inbounds i8, i8* %2, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %926, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %911, align 8
  %927 = load i8, i8* %17, align 1
  %928 = icmp eq i8 %927, 0
  br i1 %928, label %953, label %929

929:                                              ; preds = %925
  %930 = zext i8 %927 to i64
  %931 = getelementptr inbounds i8, i8* %2, i64 352
  %932 = bitcast i8* %931 to i32**
  %933 = bitcast i8* %926 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %933, i64 %930) #11
  %934 = bitcast i8* %926 to i32**
  %935 = load i32*, i32** %934, align 8
  %936 = load i32*, i32** %932, align 8
  %937 = icmp eq i32* %935, %936
  br i1 %937, label %953, label %938

938:                                              ; preds = %929, %938
  %939 = phi i32* [ %951, %938 ], [ %935, %929 ]
  %940 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %941 = bitcast %"class.base::RefCountedMemory"* %940 to i8* (%"class.base::RefCountedMemory"*)***
  %942 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %941, align 8
  %943 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %942, align 8
  %944 = tail call i8* %943(%"class.base::RefCountedMemory"* %940) #11
  %945 = load i64, i64* %21, align 8
  %946 = getelementptr inbounds i8, i8* %944, i64 %945
  %947 = bitcast i8* %946 to i32*
  %948 = load i32, i32* %947, align 1
  store i32 %948, i32* %939, align 4
  %949 = load i64, i64* %21, align 8
  %950 = add i64 %949, 4
  store i64 %950, i64* %21, align 8
  %951 = getelementptr inbounds i32, i32* %939, i64 1
  %952 = icmp eq i32* %951, %936
  br i1 %952, label %953, label %938

953:                                              ; preds = %938, %925, %929, %907
  %954 = load i64, i64* %21, align 8
  %955 = sub i64 0, %954
  %956 = and i64 %955, 3
  %957 = add i64 %956, %954
  store i64 %957, i64* %21, align 8
  ret %"struct.x11::Xkb::GetNamesReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8SetNamesERKNS0_15SetNamesRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetNamesRequest"* dereferenceable(368)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca %"class.std::__1::back_insert_iterator", align 8
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca i8, align 1
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.std::__1::back_insert_iterator", align 8
  %30 = alloca %"class.std::__1::back_insert_iterator", align 8
  %31 = alloca %"class.std::__1::back_insert_iterator", align 8
  %32 = alloca %"class.std::__1::back_insert_iterator", align 8
  %33 = alloca %"class.std::__1::back_insert_iterator", align 8
  %34 = alloca %"class.std::__1::back_insert_iterator", align 8
  %35 = alloca %"class.std::__1::back_insert_iterator", align 8
  %36 = alloca %"class.std::__1::back_insert_iterator", align 8
  %37 = alloca %"class.std::__1::back_insert_iterator", align 8
  %38 = alloca i8, align 1
  %39 = alloca %"class.std::__1::back_insert_iterator", align 8
  %40 = alloca %"class.std::__1::back_insert_iterator", align 8
  %41 = alloca %"class.std::__1::back_insert_iterator", align 8
  %42 = alloca i8, align 1
  %43 = alloca %"class.x11::WriteBuffer", align 8
  %44 = alloca i8, align 1
  %45 = alloca i8, align 1
  %46 = alloca i16, align 2
  %47 = alloca i32, align 4
  %48 = alloca i8, align 1
  %49 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %50 = load %"class.x11::Connection"*, %"class.x11::Connection"** %49, align 8
  %51 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %50) #11
  br i1 %51, label %52, label %725

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %725, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.x11::WriteBuffer"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %43) #11
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 5
  %61 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 7
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 9
  %63 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #11
  %64 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %44, align 1
  %66 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %43, i64 0, i32 1
  %67 = bitcast %"class.std::__1::back_insert_iterator"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %40, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %68, align 8
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %40, i8* nonnull dereferenceable(1) %44) #11
  %70 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %43, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #11
  store i8 18, i8* %45, align 1
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %39, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %74, align 8
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %39, i8* nonnull dereferenceable(1) %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %76 = load i64, i64* %70, align 8
  %77 = add i64 %76, 1
  store i64 %77, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #11
  store i8 0, i8* %38, align 1
  %78 = bitcast %"class.std::__1::back_insert_iterator"* %37 to i8*
  %79 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %79, align 8
  %80 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %37, i8* nonnull dereferenceable(1) %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %81 = load i64, i64* %70, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %79, align 8
  %83 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %37, i8* nonnull dereferenceable(1) %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %84 = load i64, i64* %70, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %70, align 8
  %86 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 2
  %87 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 4
  %88 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 6
  %89 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 8
  %90 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 10
  %91 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #11
  %92 = bitcast %"struct.x11::Xkb::SetNamesRequest"* %1 to i8*
  %93 = bitcast %"class.std::__1::back_insert_iterator"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %36, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %94, align 8
  %95 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %36, i8* dereferenceable(1) %92) #11
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %36, i8* dereferenceable(1) %96) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  %98 = load i64, i64* %70, align 8
  %99 = add i64 %98, 2
  store i64 %99, i64* %70, align 8
  %100 = bitcast i16* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %100) #11
  %101 = load i32, i32* %58, align 4
  %102 = trunc i32 %101 to i16
  store i16 %102, i16* %46, align 2
  %103 = bitcast %"class.std::__1::back_insert_iterator"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %35, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %104, align 8
  %105 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %35, i8* nonnull dereferenceable(1) %100) #11
  %106 = getelementptr inbounds i8, i8* %100, i64 1
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %35, i8* dereferenceable(1) %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %108 = load i64, i64* %70, align 8
  %109 = add i64 %108, 2
  store i64 %109, i64* %70, align 8
  %110 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %111 = load i8, i8* %110, align 4, !range !2
  %112 = zext i8 %111 to i32
  %113 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 4, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = or i32 %112, 2
  %117 = select i1 %115, i32 %112, i32 %116
  %118 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  %121 = or i32 %117, 4
  %122 = select i1 %120, i32 %117, i32 %121
  %123 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %124 = load i8, i8* %123, align 4, !range !2
  %125 = icmp eq i8 %124, 0
  %126 = or i32 %122, 8
  %127 = select i1 %125, i32 %122, i32 %126
  %128 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  %131 = or i32 %127, 16
  %132 = select i1 %130, i32 %127, i32 %131
  %133 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 4, !range !2
  %135 = icmp eq i8 %134, 0
  %136 = or i32 %132, 32
  %137 = select i1 %135, i32 %132, i32 %136
  %138 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  %141 = or i32 %137, 64
  %142 = select i1 %140, i32 %137, i32 %141
  %143 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  %146 = or i32 %142, 128
  %147 = select i1 %145, i32 %142, i32 %146
  %148 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  %151 = or i32 %147, 256
  %152 = select i1 %150, i32 %147, i32 %151
  %153 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  %156 = or i32 %152, 2048
  %157 = select i1 %155, i32 %152, i32 %156
  %158 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  %161 = or i32 %157, 4096
  %162 = select i1 %160, i32 %157, i32 %161
  %163 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %164 = load i8, i8* %163, align 8, !range !2
  %165 = icmp eq i8 %164, 0
  %166 = or i32 %162, 512
  %167 = select i1 %165, i32 %162, i32 %166
  %168 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %169 = load i8, i8* %168, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  %171 = or i32 %167, 1024
  %172 = select i1 %170, i32 %167, i32 %171
  %173 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %174 = load i8, i8* %173, align 8, !range !2
  %175 = icmp eq i8 %174, 0
  %176 = or i32 %172, 8192
  %177 = select i1 %175, i32 %172, i32 %176
  %178 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #11
  store i32 %177, i32* %47, align 4
  %179 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %180, align 8
  %181 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* nonnull dereferenceable(1) %178) #11
  %182 = getelementptr inbounds i8, i8* %178, i64 1
  %183 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %182) #11
  %184 = getelementptr inbounds i8, i8* %178, i64 2
  %185 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %184) #11
  %186 = getelementptr inbounds i8, i8* %178, i64 3
  %187 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %186) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #11
  %188 = load i64, i64* %70, align 8
  %189 = add i64 %188, 4
  store i64 %189, i64* %70, align 8
  %190 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  %191 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %191, align 8
  %192 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* dereferenceable(1) %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  %193 = load i64, i64* %70, align 8
  %194 = add i64 %193, 1
  store i64 %194, i64* %70, align 8
  %195 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #11
  %196 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %196, align 8
  %197 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %59) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #11
  %198 = load i64, i64* %70, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %70, align 8
  %200 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #11
  %201 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %201, align 8
  %202 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %87) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #11
  %203 = load i64, i64* %70, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %70, align 8
  %205 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #11
  %206 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %206, align 8
  %207 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #11
  %208 = load i64, i64* %70, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %70, align 8
  %210 = bitcast i32* %88 to i8*
  %211 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #11
  %212 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %212, align 8
  %213 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %210) #11
  %214 = getelementptr inbounds i8, i8* %210, i64 1
  %215 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %214) #11
  %216 = getelementptr inbounds i8, i8* %210, i64 2
  %217 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %216) #11
  %218 = getelementptr inbounds i8, i8* %210, i64 3
  %219 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* dereferenceable(1) %218) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #11
  %220 = load i64, i64* %70, align 8
  %221 = add i64 %220, 4
  store i64 %221, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #11
  %222 = load i32, i32* %61, align 4
  %223 = trunc i32 %222 to i8
  store i8 %223, i8* %48, align 1
  %224 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #11
  %225 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %225, align 8
  %226 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #11
  %227 = load i64, i64* %70, align 8
  %228 = add i64 %227, 1
  store i64 %228, i64* %70, align 8
  %229 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #11
  %230 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %230, align 8
  %231 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* dereferenceable(1) %89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #11
  %232 = load i64, i64* %70, align 8
  %233 = add i64 %232, 1
  store i64 %233, i64* %70, align 8
  %234 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #11
  %235 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %235, align 8
  %236 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* dereferenceable(1) %62) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #11
  %237 = load i64, i64* %70, align 8
  %238 = add i64 %237, 1
  store i64 %238, i64* %70, align 8
  %239 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #11
  %240 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %240, align 8
  %241 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* dereferenceable(1) %90) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #11
  %242 = load i64, i64* %70, align 8
  %243 = add i64 %242, 1
  store i64 %243, i64* %70, align 8
  %244 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #11
  %245 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %245, align 8
  %246 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* dereferenceable(1) %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #11
  %247 = load i64, i64* %70, align 8
  %248 = add i64 %247, 1
  store i64 %248, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %249 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %250 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %250, align 8
  %251 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #11
  %252 = load i64, i64* %70, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %254 = bitcast i16* %91 to i8*
  %255 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #11
  %256 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %256, align 8
  %257 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %254) #11
  %258 = getelementptr inbounds i8, i8* %254, i64 1
  %259 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %258) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #11
  %260 = load i64, i64* %70, align 8
  %261 = add i64 %260, 2
  store i64 %261, i64* %70, align 8
  %262 = and i32 %177, 1
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %282, label %264

264:                                              ; preds = %56
  %265 = load i8, i8* %110, align 4, !range !2
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %267, label %268, !prof !3

267:                                              ; preds = %264
  call void @llvm.trap() #11
  unreachable

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %270 = bitcast i32* %269 to i8*
  %271 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #11
  %272 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %272, align 8
  %273 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %270) #11
  %274 = getelementptr inbounds i8, i8* %270, i64 1
  %275 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %274) #11
  %276 = getelementptr inbounds i8, i8* %270, i64 2
  %277 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %276) #11
  %278 = getelementptr inbounds i8, i8* %270, i64 3
  %279 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %278) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #11
  %280 = load i64, i64* %70, align 8
  %281 = add i64 %280, 4
  store i64 %281, i64* %70, align 8
  br label %282

282:                                              ; preds = %56, %268
  %283 = phi i64 [ %261, %56 ], [ %281, %268 ]
  %284 = and i32 %177, 2
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %304, label %286

286:                                              ; preds = %282
  %287 = load i8, i8* %113, align 4, !range !2
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %290, !prof !3

289:                                              ; preds = %286
  call void @llvm.trap() #11
  unreachable

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %292 = bitcast i32* %291 to i8*
  %293 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #11
  %294 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %294, align 8
  %295 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %292) #11
  %296 = getelementptr inbounds i8, i8* %292, i64 1
  %297 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %296) #11
  %298 = getelementptr inbounds i8, i8* %292, i64 2
  %299 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %298) #11
  %300 = getelementptr inbounds i8, i8* %292, i64 3
  %301 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %300) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #11
  %302 = load i64, i64* %70, align 8
  %303 = add i64 %302, 4
  store i64 %303, i64* %70, align 8
  br label %304

304:                                              ; preds = %282, %290
  %305 = phi i64 [ %283, %282 ], [ %303, %290 ]
  %306 = and i32 %177, 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %326, label %308

308:                                              ; preds = %304
  %309 = load i8, i8* %118, align 4, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %312, !prof !3

311:                                              ; preds = %308
  call void @llvm.trap() #11
  unreachable

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %314 = bitcast i32* %313 to i8*
  %315 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %315) #11
  %316 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %316, align 8
  %317 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %314) #11
  %318 = getelementptr inbounds i8, i8* %314, i64 1
  %319 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %318) #11
  %320 = getelementptr inbounds i8, i8* %314, i64 2
  %321 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %320) #11
  %322 = getelementptr inbounds i8, i8* %314, i64 3
  %323 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %322) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %315) #11
  %324 = load i64, i64* %70, align 8
  %325 = add i64 %324, 4
  store i64 %325, i64* %70, align 8
  br label %326

326:                                              ; preds = %304, %312
  %327 = phi i64 [ %305, %304 ], [ %325, %312 ]
  %328 = and i32 %177, 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %348, label %330

330:                                              ; preds = %326
  %331 = load i8, i8* %123, align 4, !range !2
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %334, !prof !3

333:                                              ; preds = %330
  call void @llvm.trap() #11
  unreachable

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %336 = bitcast i32* %335 to i8*
  %337 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #11
  %338 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %338, align 8
  %339 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %336) #11
  %340 = getelementptr inbounds i8, i8* %336, i64 1
  %341 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %340) #11
  %342 = getelementptr inbounds i8, i8* %336, i64 2
  %343 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %342) #11
  %344 = getelementptr inbounds i8, i8* %336, i64 3
  %345 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %344) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #11
  %346 = load i64, i64* %70, align 8
  %347 = add i64 %346, 4
  store i64 %347, i64* %70, align 8
  br label %348

348:                                              ; preds = %326, %334
  %349 = phi i64 [ %327, %326 ], [ %347, %334 ]
  %350 = and i32 %177, 16
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %370, label %352

352:                                              ; preds = %348
  %353 = load i8, i8* %128, align 4, !range !2
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %356, !prof !3

355:                                              ; preds = %352
  call void @llvm.trap() #11
  unreachable

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %358 = bitcast i32* %357 to i8*
  %359 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #11
  %360 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %360, align 8
  %361 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %358) #11
  %362 = getelementptr inbounds i8, i8* %358, i64 1
  %363 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %362) #11
  %364 = getelementptr inbounds i8, i8* %358, i64 2
  %365 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %364) #11
  %366 = getelementptr inbounds i8, i8* %358, i64 3
  %367 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %366) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #11
  %368 = load i64, i64* %70, align 8
  %369 = add i64 %368, 4
  store i64 %369, i64* %70, align 8
  br label %370

370:                                              ; preds = %348, %356
  %371 = phi i64 [ %349, %348 ], [ %369, %356 ]
  %372 = and i32 %177, 32
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %392, label %374

374:                                              ; preds = %370
  %375 = load i8, i8* %133, align 4, !range !2
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %378, !prof !3

377:                                              ; preds = %374
  call void @llvm.trap() #11
  unreachable

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1, i32 0
  %380 = bitcast i32* %379 to i8*
  %381 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381) #11
  %382 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %382, align 8
  %383 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %380) #11
  %384 = getelementptr inbounds i8, i8* %380, i64 1
  %385 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %384) #11
  %386 = getelementptr inbounds i8, i8* %380, i64 2
  %387 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %386) #11
  %388 = getelementptr inbounds i8, i8* %380, i64 3
  %389 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %388) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381) #11
  %390 = load i64, i64* %70, align 8
  %391 = add i64 %390, 4
  store i64 %391, i64* %70, align 8
  br label %392

392:                                              ; preds = %370, %378
  %393 = phi i64 [ %371, %370 ], [ %391, %378 ]
  %394 = and i32 %177, 64
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %423, label %396

396:                                              ; preds = %392
  %397 = load i8, i8* %138, align 8, !range !2
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %400, !prof !3

399:                                              ; preds = %396
  call void @llvm.trap() #11
  unreachable

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %402 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %403 = load i32*, i32** %402, align 8
  %404 = load i32*, i32** %401, align 8
  %405 = icmp eq i32* %403, %404
  br i1 %405, label %423, label %406

406:                                              ; preds = %400
  %407 = bitcast %"class.std::__1::back_insert_iterator"* %23 to i8*
  %408 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %23, i64 0, i32 0
  br label %409

409:                                              ; preds = %406, %409
  %410 = phi i32* [ %403, %406 ], [ %421, %409 ]
  %411 = bitcast i32* %410 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %408, align 8
  %412 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %411) #11
  %413 = getelementptr inbounds i8, i8* %411, i64 1
  %414 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %413) #11
  %415 = getelementptr inbounds i8, i8* %411, i64 2
  %416 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %415) #11
  %417 = getelementptr inbounds i8, i8* %411, i64 3
  %418 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %417) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #11
  %419 = load i64, i64* %70, align 8
  %420 = add i64 %419, 4
  store i64 %420, i64* %70, align 8
  %421 = getelementptr inbounds i32, i32* %410, i64 1
  %422 = icmp eq i32* %421, %404
  br i1 %422, label %423, label %409

423:                                              ; preds = %409, %400, %392
  %424 = phi i64 [ %393, %400 ], [ %393, %392 ], [ %420, %409 ]
  %425 = trunc i32 %177 to i8
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %491

427:                                              ; preds = %423
  %428 = load i8, i8* %143, align 8, !range !2
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %430, label %431, !prof !3

430:                                              ; preds = %427
  call void @llvm.trap() #11
  unreachable

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %433 = load i8, i8* %432, align 8, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %435, label %436, !prof !3

435:                                              ; preds = %431
  call void @llvm.trap() #11
  unreachable

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %438 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %439 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %440 = load i8*, i8** %439, align 8
  %441 = load i8*, i8** %437, align 8
  %442 = icmp eq i8* %440, %441
  br i1 %442, label %446, label %443

443:                                              ; preds = %436
  %444 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  %445 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  br label %470

446:                                              ; preds = %470, %436
  %447 = phi i64 [ %424, %436 ], [ %474, %470 ]
  %448 = sub i64 0, %447
  %449 = and i64 %448, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #11
  store i8 0, i8* %25, align 1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %461, label %451

451:                                              ; preds = %446
  %452 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  %453 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  br label %454

454:                                              ; preds = %454, %451
  %455 = phi i64 [ 0, %451 ], [ %459, %454 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %452) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %453, align 8
  %456 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %452) #11
  %457 = load i64, i64* %70, align 8
  %458 = add i64 %457, 1
  store i64 %458, i64* %70, align 8
  %459 = add nuw nsw i64 %455, 1
  %460 = icmp eq i64 %459, %449
  br i1 %460, label %461, label %454

461:                                              ; preds = %454, %446
  %462 = phi i64 [ %447, %446 ], [ %458, %454 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #11
  %463 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %464 = load i32*, i32** %463, align 8
  %465 = load i32*, i32** %438, align 8
  %466 = icmp eq i32* %464, %465
  br i1 %466, label %491, label %467

467:                                              ; preds = %461
  %468 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  %469 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  br label %477

470:                                              ; preds = %443, %470
  %471 = phi i8* [ %440, %443 ], [ %475, %470 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %444) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %445, align 8
  %472 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* dereferenceable(1) %471) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %444) #11
  %473 = load i64, i64* %70, align 8
  %474 = add i64 %473, 1
  store i64 %474, i64* %70, align 8
  %475 = getelementptr inbounds i8, i8* %471, i64 1
  %476 = icmp eq i8* %475, %441
  br i1 %476, label %446, label %470

477:                                              ; preds = %467, %477
  %478 = phi i32* [ %464, %467 ], [ %489, %477 ]
  %479 = bitcast i32* %478 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %468) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %469, align 8
  %480 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %479) #11
  %481 = getelementptr inbounds i8, i8* %479, i64 1
  %482 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %481) #11
  %483 = getelementptr inbounds i8, i8* %479, i64 2
  %484 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %483) #11
  %485 = getelementptr inbounds i8, i8* %479, i64 3
  %486 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* dereferenceable(1) %485) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %468) #11
  %487 = load i64, i64* %70, align 8
  %488 = add i64 %487, 4
  store i64 %488, i64* %70, align 8
  %489 = getelementptr inbounds i32, i32* %478, i64 1
  %490 = icmp eq i32* %489, %465
  br i1 %490, label %491, label %477

491:                                              ; preds = %477, %461, %423
  %492 = phi i64 [ %462, %461 ], [ %424, %423 ], [ %488, %477 ]
  %493 = and i32 %177, 256
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %522, label %495

495:                                              ; preds = %491
  %496 = load i8, i8* %148, align 8, !range !2
  %497 = icmp eq i8 %496, 0
  br i1 %497, label %498, label %499, !prof !3

498:                                              ; preds = %495
  call void @llvm.trap() #11
  unreachable

499:                                              ; preds = %495
  %500 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %501 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %502 = load i32*, i32** %501, align 8
  %503 = load i32*, i32** %500, align 8
  %504 = icmp eq i32* %502, %503
  br i1 %504, label %522, label %505

505:                                              ; preds = %499
  %506 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  %507 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  br label %508

508:                                              ; preds = %505, %508
  %509 = phi i32* [ %502, %505 ], [ %520, %508 ]
  %510 = bitcast i32* %509 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %507, align 8
  %511 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %510) #11
  %512 = getelementptr inbounds i8, i8* %510, i64 1
  %513 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %512) #11
  %514 = getelementptr inbounds i8, i8* %510, i64 2
  %515 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %514) #11
  %516 = getelementptr inbounds i8, i8* %510, i64 3
  %517 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %516) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506) #11
  %518 = load i64, i64* %70, align 8
  %519 = add i64 %518, 4
  store i64 %519, i64* %70, align 8
  %520 = getelementptr inbounds i32, i32* %509, i64 1
  %521 = icmp eq i32* %520, %503
  br i1 %521, label %522, label %508

522:                                              ; preds = %508, %499, %491
  %523 = phi i64 [ %492, %499 ], [ %492, %491 ], [ %519, %508 ]
  %524 = and i32 %177, 2048
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %553, label %526

526:                                              ; preds = %522
  %527 = load i8, i8* %153, align 8, !range !2
  %528 = icmp eq i8 %527, 0
  br i1 %528, label %529, label %530, !prof !3

529:                                              ; preds = %526
  call void @llvm.trap() #11
  unreachable

530:                                              ; preds = %526
  %531 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %532 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %533 = load i32*, i32** %532, align 8
  %534 = load i32*, i32** %531, align 8
  %535 = icmp eq i32* %533, %534
  br i1 %535, label %553, label %536

536:                                              ; preds = %530
  %537 = bitcast %"class.std::__1::back_insert_iterator"* %29 to i8*
  %538 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %29, i64 0, i32 0
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i32* [ %533, %536 ], [ %551, %539 ]
  %541 = bitcast i32* %540 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %537) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %538, align 8
  %542 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %541) #11
  %543 = getelementptr inbounds i8, i8* %541, i64 1
  %544 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %543) #11
  %545 = getelementptr inbounds i8, i8* %541, i64 2
  %546 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %545) #11
  %547 = getelementptr inbounds i8, i8* %541, i64 3
  %548 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %29, i8* dereferenceable(1) %547) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %537) #11
  %549 = load i64, i64* %70, align 8
  %550 = add i64 %549, 4
  store i64 %550, i64* %70, align 8
  %551 = getelementptr inbounds i32, i32* %540, i64 1
  %552 = icmp eq i32* %551, %534
  br i1 %552, label %553, label %539

553:                                              ; preds = %539, %530, %522
  %554 = phi i64 [ %523, %530 ], [ %523, %522 ], [ %550, %539 ]
  %555 = and i32 %177, 4096
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %584, label %557

557:                                              ; preds = %553
  %558 = load i8, i8* %158, align 8, !range !2
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %560, label %561, !prof !3

560:                                              ; preds = %557
  call void @llvm.trap() #11
  unreachable

561:                                              ; preds = %557
  %562 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %563 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %564 = load i32*, i32** %563, align 8
  %565 = load i32*, i32** %562, align 8
  %566 = icmp eq i32* %564, %565
  br i1 %566, label %584, label %567

567:                                              ; preds = %561
  %568 = bitcast %"class.std::__1::back_insert_iterator"* %30 to i8*
  %569 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %30, i64 0, i32 0
  br label %570

570:                                              ; preds = %567, %570
  %571 = phi i32* [ %564, %567 ], [ %582, %570 ]
  %572 = bitcast i32* %571 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %568) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %569, align 8
  %573 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %572) #11
  %574 = getelementptr inbounds i8, i8* %572, i64 1
  %575 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %574) #11
  %576 = getelementptr inbounds i8, i8* %572, i64 2
  %577 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %576) #11
  %578 = getelementptr inbounds i8, i8* %572, i64 3
  %579 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %30, i8* dereferenceable(1) %578) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %568) #11
  %580 = load i64, i64* %70, align 8
  %581 = add i64 %580, 4
  store i64 %581, i64* %70, align 8
  %582 = getelementptr inbounds i32, i32* %571, i64 1
  %583 = icmp eq i32* %582, %565
  br i1 %583, label %584, label %570

584:                                              ; preds = %570, %561, %553
  %585 = phi i64 [ %554, %561 ], [ %554, %553 ], [ %581, %570 ]
  %586 = and i32 %177, 512
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %621, label %588

588:                                              ; preds = %584
  %589 = load i8, i8* %163, align 8, !range !2
  %590 = icmp eq i8 %589, 0
  br i1 %590, label %591, label %592, !prof !3

591:                                              ; preds = %588
  call void @llvm.trap() #11
  unreachable

592:                                              ; preds = %588
  %593 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %594 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %595 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %594, align 8
  %596 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %593, align 8
  %597 = icmp eq %"struct.x11::Xkb::KeyName"* %595, %596
  br i1 %597, label %621, label %598

598:                                              ; preds = %592
  %599 = bitcast %"class.std::__1::back_insert_iterator"* %31 to i8*
  %600 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %31, i64 0, i32 0
  br label %601

601:                                              ; preds = %598, %601
  %602 = phi %"struct.x11::Xkb::KeyName"* [ %595, %598 ], [ %619, %601 ]
  %603 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %602, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %600, align 8
  %604 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* dereferenceable(1) %603) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  %605 = load i64, i64* %70, align 8
  %606 = add i64 %605, 1
  store i64 %606, i64* %70, align 8
  %607 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %602, i64 0, i32 0, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %600, align 8
  %608 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* dereferenceable(1) %607) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  %609 = load i64, i64* %70, align 8
  %610 = add i64 %609, 1
  store i64 %610, i64* %70, align 8
  %611 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %602, i64 0, i32 0, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %600, align 8
  %612 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* dereferenceable(1) %611) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  %613 = load i64, i64* %70, align 8
  %614 = add i64 %613, 1
  store i64 %614, i64* %70, align 8
  %615 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %602, i64 0, i32 0, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %600, align 8
  %616 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %31, i8* dereferenceable(1) %615) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  %617 = load i64, i64* %70, align 8
  %618 = add i64 %617, 1
  store i64 %618, i64* %70, align 8
  %619 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %602, i64 1
  %620 = icmp eq %"struct.x11::Xkb::KeyName"* %619, %596
  br i1 %620, label %621, label %601

621:                                              ; preds = %601, %592, %584
  %622 = phi i64 [ %585, %592 ], [ %585, %584 ], [ %618, %601 ]
  %623 = and i32 %177, 1024
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %676, label %625

625:                                              ; preds = %621
  %626 = load i8, i8* %168, align 8, !range !2
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %628, label %629, !prof !3

628:                                              ; preds = %625
  call void @llvm.trap() #11
  unreachable

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %631 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %632 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %631, align 8
  %633 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %630, align 8
  %634 = icmp eq %"struct.x11::Xkb::KeyAlias"* %632, %633
  br i1 %634, label %676, label %635

635:                                              ; preds = %629
  %636 = bitcast %"class.std::__1::back_insert_iterator"* %32 to i8*
  %637 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %32, i64 0, i32 0
  %638 = bitcast %"class.std::__1::back_insert_iterator"* %33 to i8*
  %639 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %33, i64 0, i32 0
  br label %640

640:                                              ; preds = %635, %640
  %641 = phi %"struct.x11::Xkb::KeyAlias"* [ %632, %635 ], [ %674, %640 ]
  %642 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %637, align 8
  %643 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* dereferenceable(1) %642) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #11
  %644 = load i64, i64* %70, align 8
  %645 = add i64 %644, 1
  store i64 %645, i64* %70, align 8
  %646 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 0, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %637, align 8
  %647 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* dereferenceable(1) %646) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #11
  %648 = load i64, i64* %70, align 8
  %649 = add i64 %648, 1
  store i64 %649, i64* %70, align 8
  %650 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 0, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %637, align 8
  %651 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* dereferenceable(1) %650) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #11
  %652 = load i64, i64* %70, align 8
  %653 = add i64 %652, 1
  store i64 %653, i64* %70, align 8
  %654 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 0, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %637, align 8
  %655 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %32, i8* dereferenceable(1) %654) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #11
  %656 = load i64, i64* %70, align 8
  %657 = add i64 %656, 1
  store i64 %657, i64* %70, align 8
  %658 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 1, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %639, align 8
  %659 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %658) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #11
  %660 = load i64, i64* %70, align 8
  %661 = add i64 %660, 1
  store i64 %661, i64* %70, align 8
  %662 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 1, i32 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %639, align 8
  %663 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %662) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #11
  %664 = load i64, i64* %70, align 8
  %665 = add i64 %664, 1
  store i64 %665, i64* %70, align 8
  %666 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 1, i32 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %639, align 8
  %667 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %666) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #11
  %668 = load i64, i64* %70, align 8
  %669 = add i64 %668, 1
  store i64 %669, i64* %70, align 8
  %670 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 0, i32 1, i32 0, i64 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %639, align 8
  %671 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %33, i8* dereferenceable(1) %670) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #11
  %672 = load i64, i64* %70, align 8
  %673 = add i64 %672, 1
  store i64 %673, i64* %70, align 8
  %674 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %641, i64 1
  %675 = icmp eq %"struct.x11::Xkb::KeyAlias"* %674, %633
  br i1 %675, label %676, label %640

676:                                              ; preds = %640, %629, %621
  %677 = phi i64 [ %622, %629 ], [ %622, %621 ], [ %673, %640 ]
  %678 = and i32 %177, 8192
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %707, label %680

680:                                              ; preds = %676
  %681 = load i8, i8* %173, align 8, !range !2
  %682 = icmp eq i8 %681, 0
  br i1 %682, label %683, label %684, !prof !3

683:                                              ; preds = %680
  call void @llvm.trap() #11
  unreachable

684:                                              ; preds = %680
  %685 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %686 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %687 = load i32*, i32** %686, align 8
  %688 = load i32*, i32** %685, align 8
  %689 = icmp eq i32* %687, %688
  br i1 %689, label %707, label %690

690:                                              ; preds = %684
  %691 = bitcast %"class.std::__1::back_insert_iterator"* %34 to i8*
  %692 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %34, i64 0, i32 0
  br label %693

693:                                              ; preds = %690, %693
  %694 = phi i32* [ %687, %690 ], [ %705, %693 ]
  %695 = bitcast i32* %694 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %691) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %692, align 8
  %696 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* dereferenceable(1) %695) #11
  %697 = getelementptr inbounds i8, i8* %695, i64 1
  %698 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* dereferenceable(1) %697) #11
  %699 = getelementptr inbounds i8, i8* %695, i64 2
  %700 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* dereferenceable(1) %699) #11
  %701 = getelementptr inbounds i8, i8* %695, i64 3
  %702 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %34, i8* dereferenceable(1) %701) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %691) #11
  %703 = load i64, i64* %70, align 8
  %704 = add i64 %703, 4
  store i64 %704, i64* %70, align 8
  %705 = getelementptr inbounds i32, i32* %694, i64 1
  %706 = icmp eq i32* %705, %688
  br i1 %706, label %707, label %693

707:                                              ; preds = %693, %684, %676
  %708 = phi i64 [ %677, %684 ], [ %677, %676 ], [ %704, %693 ]
  %709 = sub i64 0, %708
  %710 = and i64 %709, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #11
  store i8 0, i8* %42, align 1
  %711 = icmp eq i64 %710, 0
  br i1 %711, label %722, label %712

712:                                              ; preds = %707
  %713 = bitcast %"class.std::__1::back_insert_iterator"* %41 to i8*
  %714 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %41, i64 0, i32 0
  br label %715

715:                                              ; preds = %715, %712
  %716 = phi i64 [ 0, %712 ], [ %720, %715 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %713) #11
  store %"class.std::__1::vector.271"* %66, %"class.std::__1::vector.271"** %714, align 8
  %717 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %41, i8* nonnull dereferenceable(1) %42) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %713) #11
  %718 = load i64, i64* %70, align 8
  %719 = add i64 %718, 1
  store i64 %719, i64* %70, align 8
  %720 = add nuw nsw i64 %716, 1
  %721 = icmp eq i64 %720, %710
  br i1 %721, label %722, label %715

722:                                              ; preds = %715, %707
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #11
  %723 = load %"class.x11::Connection"*, %"class.x11::Connection"** %49, align 8
  %724 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %723, %"class.x11::WriteBuffer"* nonnull %43, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %100) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #11
  br label %725

725:                                              ; preds = %2, %52, %722
  %726 = phi %"class.x11::Connection::FutureImpl"* [ %724, %722 ], [ null, %52 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %726
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8SetNamesERKNS0_10DeviceSpecERKNS0_4VModERKhS8_S8_S8_RKjRKNS0_10SetOfGroupES8_RKNS_7KeyCodeES8_S8_RKtRKN4absl8optionalINS_4AtomEEESO_SO_SO_SO_SO_RKNSK_INSt3__16vectorISL_NSP_9allocatorISL_EEEEEERKNSK_INSQ_IhNSR_IhEEEEEESW_SW_SW_SW_RKNSK_INSQ_INS0_7KeyNameENSR_IS12_EEEEEERKNSK_INSQ_INS0_8KeyAliasENSR_IS18_EEEEEESW_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i16* nocapture readonly dereferenceable(2), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.570"* nocapture readonly dereferenceable(8), %"class.absl::optional.575"* nocapture readonly dereferenceable(32), %"class.absl::optional.397"* nocapture readonly dereferenceable(32), %"class.absl::optional.575"* nocapture readonly dereferenceable(32), %"class.absl::optional.575"* nocapture readonly dereferenceable(32), %"class.absl::optional.575"* nocapture readonly dereferenceable(32), %"class.absl::optional.575"* nocapture readonly dereferenceable(32), %"class.absl::optional.587"* nocapture readonly dereferenceable(32), %"class.absl::optional.600"* nocapture readonly dereferenceable(32), %"class.absl::optional.575"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %30 = alloca %"struct.x11::Xkb::SetNamesRequest", align 8
  %31 = bitcast %"struct.x11::Xkb::SetNamesRequest"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 0
  %33 = load i16, i16* %1, align 2
  store i16 %33, i16* %32, align 8
  %34 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 1
  %35 = load i32, i32* %2, align 4
  store i32 %35, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 2
  %37 = load i8, i8* %3, align 1
  store i8 %37, i8* %36, align 8
  %38 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 3
  %39 = load i8, i8* %4, align 1
  store i8 %39, i8* %38, align 1
  %40 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 4
  %41 = load i8, i8* %5, align 1
  store i8 %41, i8* %40, align 2
  %42 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 5
  %43 = load i8, i8* %6, align 1
  store i8 %43, i8* %42, align 1
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 6
  %45 = load i32, i32* %7, align 4
  store i32 %45, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 7
  %47 = load i32, i32* %8, align 4
  store i32 %47, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 8
  %49 = load i8, i8* %9, align 1
  store i8 %49, i8* %48, align 4
  %50 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 9
  %51 = load i8, i8* %10, align 1
  store i8 %51, i8* %50, align 1
  %52 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 10
  %53 = load i8, i8* %11, align 1
  store i8 %53, i8* %52, align 2
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 11
  %55 = load i8, i8* %12, align 1
  store i8 %55, i8* %54, align 1
  %56 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 12
  %57 = load i16, i16* %13, align 2
  store i16 %57, i16* %56, align 8
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.absl::optional.570"* %14 to i64*
  %60 = bitcast i8* %58 to i64*
  %61 = load i64, i64* %59, align 4
  store i64 %61, i64* %60, align 4
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.absl::optional.570"* %15 to i64*
  %64 = bitcast i8* %62 to i64*
  %65 = load i64, i64* %63, align 4
  store i64 %65, i64* %64, align 4
  %66 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.absl::optional.570"* %16 to i64*
  %68 = bitcast i8* %66 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 4
  %70 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.absl::optional.570"* %17 to i64*
  %72 = bitcast i8* %70 to i64*
  %73 = load i64, i64* %71, align 4
  store i64 %73, i64* %72, align 4
  %74 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.absl::optional.570"* %18 to i64*
  %76 = bitcast i8* %74 to i64*
  %77 = load i64, i64* %75, align 4
  store i64 %77, i64* %76, align 4
  %78 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.absl::optional.570"* %19 to i64*
  %80 = bitcast i8* %78 to i64*
  %81 = load i64, i64* %79, align 4
  store i64 %81, i64* %80, align 4
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #11
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %121, label %86

86:                                               ; preds = %29
  %87 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.std::__1::vector.580"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #11
  %90 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::vector.580"* %87 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 2
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %120, label %98

98:                                               ; preds = %86
  %99 = icmp ugt i64 %96, 4611686018427387903
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::vector.580"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %101) #13
  unreachable

102:                                              ; preds = %98
  %103 = tail call i8* @_Znwm(i64 %95) #12
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %106 = bitcast i32** %105 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast %"class.std::__1::vector.580"* %88 to i8**
  store i8* %103, i8** %107, align 8
  %108 = getelementptr inbounds i32, i32* %104, i64 %96
  %109 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %108, i32** %109, align 8
  %110 = bitcast i32** %105 to i64*
  %111 = ptrtoint i8* %103 to i64
  %112 = icmp sgt i64 %95, 0
  br i1 %112, label %113, label %118

113:                                              ; preds = %102
  %114 = lshr exact i64 %95, 2
  %115 = inttoptr i64 %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* align 4 %115, i64 %95, i1 false) #11
  %116 = getelementptr inbounds i32, i32* %104, i64 %114
  %117 = ptrtoint i32* %116 to i64
  br label %118

118:                                              ; preds = %113, %102
  %119 = phi i64 [ %117, %113 ], [ %111, %102 ]
  store i64 %119, i64* %110, align 8
  br label %120

120:                                              ; preds = %118, %86
  store i8 1, i8* %82, align 8
  br label %121

121:                                              ; preds = %29, %120
  %122 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 32, i1 false) #11
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %151, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %128 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = bitcast %"class.std::__1::vector.271"* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #11
  %130 = getelementptr inbounds %"class.absl::optional.397", %"class.absl::optional.397"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %131 = bitcast i8** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::vector.271"* %127 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = icmp eq i64 %135, 0
  %137 = inttoptr i64 %134 to i8*
  br i1 %136, label %150, label %138

138:                                              ; preds = %126
  %139 = icmp slt i64 %135, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %138
  %141 = bitcast %"class.std::__1::vector.271"* %128 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %141) #13
  unreachable

142:                                              ; preds = %138
  %143 = tail call i8* @_Znwm(i64 %135) #12
  %144 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %128, i64 0, i32 0, i32 0
  store i8* %143, i8** %145, align 8
  %146 = getelementptr inbounds i8, i8* %143, i64 %135
  %147 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %146, i8** %147, align 8
  %148 = bitcast i8** %144 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* align 1 %137, i64 %135, i1 false) #11
  %149 = ptrtoint i8* %146 to i64
  store i64 %149, i64* %148, align 8
  br label %150

150:                                              ; preds = %142, %126
  store i8 1, i8* %122, align 8
  br label %151

151:                                              ; preds = %121, %150
  %152 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 32, i1 false) #11
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %191, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %158 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  %159 = bitcast %"class.std::__1::vector.580"* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #11
  %160 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::vector.580"* %157 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %162, %164
  %166 = ashr exact i64 %165, 2
  %167 = icmp eq i64 %165, 0
  br i1 %167, label %190, label %168

168:                                              ; preds = %156
  %169 = icmp ugt i64 %166, 4611686018427387903
  br i1 %169, label %170, label %172

170:                                              ; preds = %168
  %171 = bitcast %"class.std::__1::vector.580"* %158 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #13
  unreachable

172:                                              ; preds = %168
  %173 = tail call i8* @_Znwm(i64 %165) #12
  %174 = bitcast i8* %173 to i32*
  %175 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %176 = bitcast i32** %175 to i8**
  store i8* %173, i8** %176, align 8
  %177 = bitcast %"class.std::__1::vector.580"* %158 to i8**
  store i8* %173, i8** %177, align 8
  %178 = getelementptr inbounds i32, i32* %174, i64 %166
  %179 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %178, i32** %179, align 8
  %180 = bitcast i32** %175 to i64*
  %181 = ptrtoint i8* %173 to i64
  %182 = icmp sgt i64 %165, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %172
  %184 = lshr exact i64 %165, 2
  %185 = inttoptr i64 %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %173, i8* align 4 %185, i64 %165, i1 false) #11
  %186 = getelementptr inbounds i32, i32* %174, i64 %184
  %187 = ptrtoint i32* %186 to i64
  br label %188

188:                                              ; preds = %183, %172
  %189 = phi i64 [ %187, %183 ], [ %181, %172 ]
  store i64 %189, i64* %180, align 8
  br label %190

190:                                              ; preds = %188, %156
  store i8 1, i8* %152, align 8
  br label %191

191:                                              ; preds = %151, %190
  %192 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 32, i1 false) #11
  %194 = load i8, i8* %193, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %231, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %198 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0
  %199 = bitcast %"class.std::__1::vector.580"* %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 24, i1 false) #11
  %200 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %201 = bitcast i32** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.std::__1::vector.580"* %197 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %202, %204
  %206 = ashr exact i64 %205, 2
  %207 = icmp eq i64 %205, 0
  br i1 %207, label %230, label %208

208:                                              ; preds = %196
  %209 = icmp ugt i64 %206, 4611686018427387903
  br i1 %209, label %210, label %212

210:                                              ; preds = %208
  %211 = bitcast %"class.std::__1::vector.580"* %198 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %211) #13
  unreachable

212:                                              ; preds = %208
  %213 = tail call i8* @_Znwm(i64 %205) #12
  %214 = bitcast i8* %213 to i32*
  %215 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %216 = bitcast i32** %215 to i8**
  store i8* %213, i8** %216, align 8
  %217 = bitcast %"class.std::__1::vector.580"* %198 to i8**
  store i8* %213, i8** %217, align 8
  %218 = getelementptr inbounds i32, i32* %214, i64 %206
  %219 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %218, i32** %219, align 8
  %220 = bitcast i32** %215 to i64*
  %221 = ptrtoint i8* %213 to i64
  %222 = icmp sgt i64 %205, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %212
  %224 = lshr exact i64 %205, 2
  %225 = inttoptr i64 %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %213, i8* align 4 %225, i64 %205, i1 false) #11
  %226 = getelementptr inbounds i32, i32* %214, i64 %224
  %227 = ptrtoint i32* %226 to i64
  br label %228

228:                                              ; preds = %223, %212
  %229 = phi i64 [ %227, %223 ], [ %221, %212 ]
  store i64 %229, i64* %220, align 8
  br label %230

230:                                              ; preds = %228, %196
  store i8 1, i8* %192, align 8
  br label %231

231:                                              ; preds = %191, %230
  %232 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 32, i1 false) #11
  %234 = load i8, i8* %233, align 8, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %271, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %238 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0
  %239 = bitcast %"class.std::__1::vector.580"* %238 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 24, i1 false) #11
  %240 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %241 = bitcast i32** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.std::__1::vector.580"* %237 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = sub i64 %242, %244
  %246 = ashr exact i64 %245, 2
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %270, label %248

248:                                              ; preds = %236
  %249 = icmp ugt i64 %246, 4611686018427387903
  br i1 %249, label %250, label %252

250:                                              ; preds = %248
  %251 = bitcast %"class.std::__1::vector.580"* %238 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %251) #13
  unreachable

252:                                              ; preds = %248
  %253 = tail call i8* @_Znwm(i64 %245) #12
  %254 = bitcast i8* %253 to i32*
  %255 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %256 = bitcast i32** %255 to i8**
  store i8* %253, i8** %256, align 8
  %257 = bitcast %"class.std::__1::vector.580"* %238 to i8**
  store i8* %253, i8** %257, align 8
  %258 = getelementptr inbounds i32, i32* %254, i64 %246
  %259 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %258, i32** %259, align 8
  %260 = bitcast i32** %255 to i64*
  %261 = ptrtoint i8* %253 to i64
  %262 = icmp sgt i64 %245, 0
  br i1 %262, label %263, label %268

263:                                              ; preds = %252
  %264 = lshr exact i64 %245, 2
  %265 = inttoptr i64 %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %253, i8* align 4 %265, i64 %245, i1 false) #11
  %266 = getelementptr inbounds i32, i32* %254, i64 %264
  %267 = ptrtoint i32* %266 to i64
  br label %268

268:                                              ; preds = %263, %252
  %269 = phi i64 [ %267, %263 ], [ %261, %252 ]
  store i64 %269, i64* %260, align 8
  br label %270

270:                                              ; preds = %268, %236
  store i8 1, i8* %232, align 8
  br label %271

271:                                              ; preds = %231, %270
  %272 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 32, i1 false) #11
  %274 = load i8, i8* %273, align 8, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %311, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %278 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0
  %279 = bitcast %"class.std::__1::vector.580"* %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 24, i1 false) #11
  %280 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %281 = bitcast i32** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.std::__1::vector.580"* %277 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = sub i64 %282, %284
  %286 = ashr exact i64 %285, 2
  %287 = icmp eq i64 %285, 0
  br i1 %287, label %310, label %288

288:                                              ; preds = %276
  %289 = icmp ugt i64 %286, 4611686018427387903
  br i1 %289, label %290, label %292

290:                                              ; preds = %288
  %291 = bitcast %"class.std::__1::vector.580"* %278 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %291) #13
  unreachable

292:                                              ; preds = %288
  %293 = tail call i8* @_Znwm(i64 %285) #12
  %294 = bitcast i8* %293 to i32*
  %295 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %296 = bitcast i32** %295 to i8**
  store i8* %293, i8** %296, align 8
  %297 = bitcast %"class.std::__1::vector.580"* %278 to i8**
  store i8* %293, i8** %297, align 8
  %298 = getelementptr inbounds i32, i32* %294, i64 %286
  %299 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %298, i32** %299, align 8
  %300 = bitcast i32** %295 to i64*
  %301 = ptrtoint i8* %293 to i64
  %302 = icmp sgt i64 %285, 0
  br i1 %302, label %303, label %308

303:                                              ; preds = %292
  %304 = lshr exact i64 %285, 2
  %305 = inttoptr i64 %284 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %293, i8* align 4 %305, i64 %285, i1 false) #11
  %306 = getelementptr inbounds i32, i32* %294, i64 %304
  %307 = ptrtoint i32* %306 to i64
  br label %308

308:                                              ; preds = %303, %292
  %309 = phi i64 [ %307, %303 ], [ %301, %292 ]
  store i64 %309, i64* %300, align 8
  br label %310

310:                                              ; preds = %308, %276
  store i8 1, i8* %272, align 8
  br label %311

311:                                              ; preds = %271, %310
  %312 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %313 = getelementptr inbounds %"class.absl::optional.587", %"class.absl::optional.587"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %312, i8 0, i64 32, i1 false) #11
  %314 = load i8, i8* %313, align 8, !range !2
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %352, label %316

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.absl::optional.587", %"class.absl::optional.587"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %318 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %319 = bitcast %"class.std::__1::vector.592"* %318 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %319, i8 0, i64 24, i1 false) #11
  %320 = getelementptr inbounds %"class.absl::optional.587", %"class.absl::optional.587"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %321 = bitcast %"struct.x11::Xkb::KeyName"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.std::__1::vector.592"* %317 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %322, %324
  %326 = ashr exact i64 %325, 2
  %327 = icmp eq i64 %325, 0
  %328 = inttoptr i64 %324 to %"struct.x11::Xkb::KeyName"*
  br i1 %327, label %351, label %329

329:                                              ; preds = %316
  %330 = icmp ugt i64 %326, 4611686018427387903
  br i1 %330, label %331, label %333

331:                                              ; preds = %329
  %332 = bitcast %"class.std::__1::vector.592"* %318 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %332) #13
  unreachable

333:                                              ; preds = %329
  %334 = tail call i8* @_Znwm(i64 %325) #12
  %335 = bitcast i8* %334 to %"struct.x11::Xkb::KeyName"*
  %336 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %337 = bitcast %"struct.x11::Xkb::KeyName"** %336 to i8**
  store i8* %334, i8** %337, align 8
  %338 = bitcast %"class.std::__1::vector.592"* %318 to i8**
  store i8* %334, i8** %338, align 8
  %339 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %335, i64 %326
  %340 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KeyName"* %339, %"struct.x11::Xkb::KeyName"** %340, align 8
  %341 = bitcast %"struct.x11::Xkb::KeyName"** %336 to i64*
  %342 = ptrtoint i8* %334 to i64
  %343 = icmp sgt i64 %325, 0
  br i1 %343, label %344, label %349

344:                                              ; preds = %333
  %345 = lshr exact i64 %325, 2
  %346 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %328, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %334, i8* align 1 %346, i64 %325, i1 false) #11
  %347 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %335, i64 %345
  %348 = ptrtoint %"struct.x11::Xkb::KeyName"* %347 to i64
  br label %349

349:                                              ; preds = %344, %333
  %350 = phi i64 [ %348, %344 ], [ %342, %333 ]
  store i64 %350, i64* %341, align 8
  br label %351

351:                                              ; preds = %349, %316
  store i8 1, i8* %312, align 8
  br label %352

352:                                              ; preds = %311, %351
  %353 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %354 = getelementptr inbounds %"class.absl::optional.600", %"class.absl::optional.600"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %353, i8 0, i64 32, i1 false) #11
  %355 = load i8, i8* %354, align 8, !range !2
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %393, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"class.absl::optional.600", %"class.absl::optional.600"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %359 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %360 = bitcast %"class.std::__1::vector.605"* %359 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %360, i8 0, i64 24, i1 false) #11
  %361 = getelementptr inbounds %"class.absl::optional.600", %"class.absl::optional.600"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %362 = bitcast %"struct.x11::Xkb::KeyAlias"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.std::__1::vector.605"* %358 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = sub i64 %363, %365
  %367 = ashr exact i64 %366, 3
  %368 = icmp eq i64 %366, 0
  %369 = inttoptr i64 %365 to %"struct.x11::Xkb::KeyAlias"*
  br i1 %368, label %392, label %370

370:                                              ; preds = %357
  %371 = icmp ugt i64 %367, 2305843009213693951
  br i1 %371, label %372, label %374

372:                                              ; preds = %370
  %373 = bitcast %"class.std::__1::vector.605"* %359 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %373) #13
  unreachable

374:                                              ; preds = %370
  %375 = tail call i8* @_Znwm(i64 %366) #12
  %376 = bitcast i8* %375 to %"struct.x11::Xkb::KeyAlias"*
  %377 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %378 = bitcast %"struct.x11::Xkb::KeyAlias"** %377 to i8**
  store i8* %375, i8** %378, align 8
  %379 = bitcast %"class.std::__1::vector.605"* %359 to i8**
  store i8* %375, i8** %379, align 8
  %380 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %376, i64 %367
  %381 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KeyAlias"* %380, %"struct.x11::Xkb::KeyAlias"** %381, align 8
  %382 = bitcast %"struct.x11::Xkb::KeyAlias"** %377 to i64*
  %383 = ptrtoint i8* %375 to i64
  %384 = icmp sgt i64 %366, 0
  br i1 %384, label %385, label %390

385:                                              ; preds = %374
  %386 = lshr exact i64 %366, 3
  %387 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %369, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %375, i8* align 1 %387, i64 %366, i1 false) #11
  %388 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %376, i64 %386
  %389 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %388 to i64
  br label %390

390:                                              ; preds = %385, %374
  %391 = phi i64 [ %389, %385 ], [ %383, %374 ]
  store i64 %391, i64* %382, align 8
  br label %392

392:                                              ; preds = %390, %357
  store i8 1, i8* %353, align 8
  br label %393

393:                                              ; preds = %352, %392
  %394 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %395 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 32, i1 false) #11
  %396 = load i8, i8* %395, align 8, !range !2
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %433, label %398

398:                                              ; preds = %393
  %399 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %400 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %401 = bitcast %"class.std::__1::vector.580"* %400 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %401, i8 0, i64 24, i1 false) #11
  %402 = getelementptr inbounds %"class.absl::optional.575", %"class.absl::optional.575"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %403 = bitcast i32** %402 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.std::__1::vector.580"* %399 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = sub i64 %404, %406
  %408 = ashr exact i64 %407, 2
  %409 = icmp eq i64 %407, 0
  br i1 %409, label %432, label %410

410:                                              ; preds = %398
  %411 = icmp ugt i64 %408, 4611686018427387903
  br i1 %411, label %412, label %414

412:                                              ; preds = %410
  %413 = bitcast %"class.std::__1::vector.580"* %400 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %413) #13
  unreachable

414:                                              ; preds = %410
  %415 = tail call i8* @_Znwm(i64 %407) #12
  %416 = bitcast i8* %415 to i32*
  %417 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %418 = bitcast i32** %417 to i8**
  store i8* %415, i8** %418, align 8
  %419 = bitcast %"class.std::__1::vector.580"* %400 to i8**
  store i8* %415, i8** %419, align 8
  %420 = getelementptr inbounds i32, i32* %416, i64 %408
  %421 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %30, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %420, i32** %421, align 8
  %422 = bitcast i32** %417 to i64*
  %423 = ptrtoint i8* %415 to i64
  %424 = icmp sgt i64 %407, 0
  br i1 %424, label %425, label %430

425:                                              ; preds = %414
  %426 = lshr exact i64 %407, 2
  %427 = inttoptr i64 %406 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %415, i8* align 4 %427, i64 %407, i1 false) #11
  %428 = getelementptr inbounds i32, i32* %416, i64 %426
  %429 = ptrtoint i32* %428 to i64
  br label %430

430:                                              ; preds = %425, %414
  %431 = phi i64 [ %429, %425 ], [ %423, %414 ]
  store i64 %431, i64* %422, align 8
  br label %432

432:                                              ; preds = %430, %398
  store i8 1, i8* %394, align 8
  br label %433

433:                                              ; preds = %393, %432
  %434 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb8SetNamesERKNS0_15SetNamesRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetNamesRequest"* nonnull dereferenceable(368) %30)
  call void @_ZN3x113Xkb15SetNamesRequestD2Ev(%"struct.x11::Xkb::SetNamesRequest"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %31) #11
  ret %"class.x11::Connection::FutureImpl"* %434
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb15SetNamesRequestD2Ev(%"struct.x11::Xkb::SetNamesRequest"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i32* %7 to i64
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %20, align 8
  %22 = icmp eq %"struct.x11::Xkb::KeyAlias"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %21 to i64
  %25 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.x11::Xkb::KeyAlias"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %21, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %34, align 8
  %36 = icmp eq %"struct.x11::Xkb::KeyName"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.x11::Xkb::KeyName"* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.x11::Xkb::KeyName"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %35, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %37, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %47
  store i8 0, i8* %44, align 8
  br label %57

57:                                               ; preds = %43, %56
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint i32* %63 to i64
  %67 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i32* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %65, %61
  store i8 0, i8* %58, align 8
  br label %71

71:                                               ; preds = %57, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = ptrtoint i32* %77 to i64
  %81 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = bitcast i32** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast i32* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %79, %75
  store i8 0, i8* %72, align 8
  br label %85

85:                                               ; preds = %71, %84
  %86 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint i32* %91 to i64
  %95 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %96 = bitcast i32** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast i32* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 8
  br label %99

99:                                               ; preds = %85, %98
  %100 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i8* %105 to i64
  %109 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %110 = bitcast i8** %109 to i64*
  store i64 %108, i64* %110, align 8
  tail call void @_ZdlPv(i8* nonnull %105) #12
  br label %111

111:                                              ; preds = %107, %103
  store i8 0, i8* %100, align 8
  br label %112

112:                                              ; preds = %99, %111
  %113 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint i32* %118 to i64
  %122 = getelementptr inbounds %"struct.x11::Xkb::SetNamesRequest", %"struct.x11::Xkb::SetNamesRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast i32* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %120, %116
  store i8 0, i8* %113, align 8
  br label %126

126:                                              ; preds = %112, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14PerClientFlagsERKNS0_21PerClientFlagsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::PerClientFlagsRequest"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.x11::WriteBuffer", align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %26 = load %"class.x11::Connection"*, %"class.x11::Connection"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %26) #11
  br i1 %27, label %28, label %158

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %158, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.x11::WriteBuffer"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %17) #11
  %34 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %1, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #11
  %36 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %18, align 1
  %38 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %17, i64 0, i32 1
  %39 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %40, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* nonnull dereferenceable(1) %18) #11
  %42 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %17, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #11
  store i8 21, i8* %19, align 1
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %48 = load i64, i64* %42, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 0, i8* %12, align 1
  %50 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %51 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %51, align 8
  %52 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %53 = load i64, i64* %42, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %51, align 8
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %56 = load i64, i64* %42, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %42, align 8
  %58 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %1, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %1, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %1, i64 0, i32 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  %61 = bitcast %"struct.x11::Xkb::PerClientFlagsRequest"* %1 to i8*
  %62 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %63, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %61) #11
  %65 = getelementptr inbounds i8, i8* %61, i64 1
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %65) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %67 = load i64, i64* %42, align 8
  %68 = add i64 %67, 2
  store i64 %68, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 0, i8* %9, align 1
  %69 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %70 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %70, align 8
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %72 = load i64, i64* %42, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %70, align 8
  %74 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %75 = load i64, i64* %42, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  %77 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #11
  %78 = load i32, i32* %58, align 4
  store i32 %78, i32* %20, align 4
  %79 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %80, align 8
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %77) #11
  %82 = getelementptr inbounds i8, i8* %77, i64 1
  %83 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %82) #11
  %84 = getelementptr inbounds i8, i8* %77, i64 2
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %84) #11
  %86 = getelementptr inbounds i8, i8* %77, i64 3
  %87 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %88 = load i64, i64* %42, align 8
  %89 = add i64 %88, 4
  store i64 %89, i64* %42, align 8
  %90 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #11
  %91 = load i32, i32* %34, align 4
  store i32 %91, i32* %21, align 4
  %92 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %93, align 8
  %94 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %90) #11
  %95 = getelementptr inbounds i8, i8* %90, i64 1
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %95) #11
  %97 = getelementptr inbounds i8, i8* %90, i64 2
  %98 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %97) #11
  %99 = getelementptr inbounds i8, i8* %90, i64 3
  %100 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %101 = load i64, i64* %42, align 8
  %102 = add i64 %101, 4
  store i64 %102, i64* %42, align 8
  %103 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #11
  %104 = load i32, i32* %59, align 4
  store i32 %104, i32* %22, align 4
  %105 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %106, align 8
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %103) #11
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %108) #11
  %110 = getelementptr inbounds i8, i8* %103, i64 2
  %111 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %110) #11
  %112 = getelementptr inbounds i8, i8* %103, i64 3
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %112) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  %114 = load i64, i64* %42, align 8
  %115 = add i64 %114, 4
  store i64 %115, i64* %42, align 8
  %116 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #11
  %117 = load i32, i32* %35, align 4
  store i32 %117, i32* %23, align 4
  %118 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %119, align 8
  %120 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %116) #11
  %121 = getelementptr inbounds i8, i8* %116, i64 1
  %122 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %121) #11
  %123 = getelementptr inbounds i8, i8* %116, i64 2
  %124 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %123) #11
  %125 = getelementptr inbounds i8, i8* %116, i64 3
  %126 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %125) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #11
  %127 = load i64, i64* %42, align 8
  %128 = add i64 %127, 4
  store i64 %128, i64* %42, align 8
  %129 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #11
  %130 = load i32, i32* %60, align 4
  store i32 %130, i32* %24, align 4
  %131 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  %132 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %132, align 8
  %133 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %129) #11
  %134 = getelementptr inbounds i8, i8* %129, i64 1
  %135 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %134) #11
  %136 = getelementptr inbounds i8, i8* %129, i64 2
  %137 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %136) #11
  %138 = getelementptr inbounds i8, i8* %129, i64 3
  %139 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %138) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %140 = load i64, i64* %42, align 8
  %141 = add i64 %140, 4
  store i64 %141, i64* %42, align 8
  %142 = sub i64 0, %140
  %143 = and i64 %142, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  store i8 0, i8* %16, align 1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %32
  %146 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  %147 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  br label %148

148:                                              ; preds = %148, %145
  %149 = phi i64 [ 0, %145 ], [ %153, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  store %"class.std::__1::vector.271"* %38, %"class.std::__1::vector.271"** %147, align 8
  %150 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* nonnull dereferenceable(1) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %151 = load i64, i64* %42, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %42, align 8
  %153 = add nuw nsw i64 %149, 1
  %154 = icmp eq i64 %153, %143
  br i1 %154, label %155, label %148

155:                                              ; preds = %148, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %156 = load %"class.x11::Connection"*, %"class.x11::Connection"** %25, align 8
  %157 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %156, %"class.x11::WriteBuffer"* nonnull %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %33) #11
  br label %158

158:                                              ; preds = %2, %28, %155
  %159 = phi %"class.x11::Connection::FutureImpl"* [ %157, %155 ], [ null, %28 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %159
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14PerClientFlagsERKNS0_10DeviceSpecERKNS0_13PerClientFlagES6_RKNS0_8BoolCtrlES9_S9_(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.x11::Xkb::PerClientFlagsRequest", align 4
  %9 = bitcast %"struct.x11::Xkb::PerClientFlagsRequest"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 0
  %11 = load i16, i16* %1, align 2
  store i16 %11, i16* %10, align 4
  %12 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 1
  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 2
  %15 = load i32, i32* %3, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 3
  %17 = load i32, i32* %4, align 4
  store i32 %17, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 4
  %19 = load i32, i32* %5, align 4
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsRequest", %"struct.x11::Xkb::PerClientFlagsRequest"* %8, i64 0, i32 5
  %21 = load i32, i32* %6, align 4
  store i32 %21, i32* %20, align 4
  %22 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14PerClientFlagsERKNS0_21PerClientFlagsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::PerClientFlagsRequest"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret %"class.x11::Connection::FutureImpl"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::PerClientFlagsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb19PerClientFlagsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 20) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::PerClientFlagsReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 20, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %17 = bitcast %"class.base::RefCountedMemory"* %16 to i8* (%"class.base::RefCountedMemory"*)***
  %18 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %18, align 8
  %20 = tail call i8* %19(%"class.base::RefCountedMemory"* %16) #11
  %21 = load i64, i64* %14, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %24 = bitcast %"class.base::RefCountedMemory"* %23 to i8* (%"class.base::RefCountedMemory"*)***
  %25 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %25, align 8
  %27 = tail call i8* %26(%"class.base::RefCountedMemory"* %23) #11
  %28 = load i64, i64* %14, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %2, align 1
  %31 = add i64 %28, 1
  store i64 %31, i64* %14, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #11
  %37 = load i64, i64* %14, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 1
  store i16 %40, i16* %5, align 2
  %41 = add i64 %37, 2
  store i64 %41, i64* %14, align 8
  %42 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %43 = bitcast %"class.base::RefCountedMemory"* %42 to i8* (%"class.base::RefCountedMemory"*)***
  %44 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %43, align 8
  %45 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %44, align 8
  %46 = tail call i8* %45(%"class.base::RefCountedMemory"* %42) #11
  %47 = load i64, i64* %14, align 8
  %48 = add i64 %47, 4
  store i64 %48, i64* %14, align 8
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %50 = bitcast %"class.base::RefCountedMemory"* %49 to i8* (%"class.base::RefCountedMemory"*)***
  %51 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %50, align 8
  %52 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %51, align 8
  %53 = tail call i8* %52(%"class.base::RefCountedMemory"* %49) #11
  %54 = load i64, i64* %14, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = add i64 %54, 4
  store i64 %58, i64* %14, align 8
  store i32 %57, i32* %7, align 4
  %59 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %60 = bitcast %"class.base::RefCountedMemory"* %59 to i8* (%"class.base::RefCountedMemory"*)***
  %61 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %60, align 8
  %62 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %61, align 8
  %63 = tail call i8* %62(%"class.base::RefCountedMemory"* %59) #11
  %64 = load i64, i64* %14, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = add i64 %64, 4
  store i64 %68, i64* %14, align 8
  store i32 %67, i32* %9, align 4
  %69 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %70 = bitcast %"class.base::RefCountedMemory"* %69 to i8* (%"class.base::RefCountedMemory"*)***
  %71 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %70, align 8
  %72 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %71, align 8
  %73 = tail call i8* %72(%"class.base::RefCountedMemory"* %69) #11
  %74 = load i64, i64* %14, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 1
  %78 = add i64 %74, 4
  store i64 %78, i64* %14, align 8
  store i32 %77, i32* %11, align 4
  %79 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %80 = bitcast %"class.base::RefCountedMemory"* %79 to i8* (%"class.base::RefCountedMemory"*)***
  %81 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %80, align 8
  %82 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %81, align 8
  %83 = tail call i8* %82(%"class.base::RefCountedMemory"* %79) #11
  %84 = load i64, i64* %14, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  store i32 %87, i32* %13, align 4
  %88 = add i64 %84, 12
  %89 = sub i64 0, %84
  %90 = and i64 %89, 3
  %91 = add i64 %88, %90
  store i64 %91, i64* %14, align 8
  ret %"struct.x11::Xkb::PerClientFlagsReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14ListComponentsERKNS0_21ListComponentsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::ListComponentsRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #11
  br i1 %16, label %17, label %78

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %78, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  %23 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #11
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 22, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::Xkb::ListComponentsRequest", %"struct.x11::Xkb::ListComponentsRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %46 = bitcast %"struct.x11::Xkb::ListComponentsRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #11
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %29, align 8
  %54 = bitcast i16* %45 to i8*
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %54) #11
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %60 = load i64, i64* %29, align 8
  %61 = add i64 %60, 2
  store i64 %61, i64* %29, align 8
  %62 = sub i64 2, %60
  %63 = and i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %21
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store %"class.std::__1::vector.271"* %25, %"class.std::__1::vector.271"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %71 = load i64, i64* %29, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %29, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #11
  br label %78

78:                                               ; preds = %2, %17, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14ListComponentsERKNS0_10DeviceSpecERKt(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::Xkb::ListComponentsRequest", align 2
  %5 = bitcast %"struct.x11::Xkb::ListComponentsRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.x11::Xkb::ListComponentsRequest", %"struct.x11::Xkb::ListComponentsRequest"* %4, i64 0, i32 0
  %7 = load i16, i16* %1, align 2
  store i16 %7, i16* %6, align 2
  %8 = getelementptr inbounds %"struct.x11::Xkb::ListComponentsRequest", %"struct.x11::Xkb::ListComponentsRequest"* %4, i64 0, i32 1
  %9 = load i16, i16* %2, align 2
  store i16 %9, i16* %8, align 2
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14ListComponentsERKNS0_21ListComponentsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::ListComponentsRequest"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::ListComponentsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb19ListComponentsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 152) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::ListComponentsReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 152, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i16*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to %"struct.x11::Xkb::Listing"**
  %11 = bitcast i8* %9 to i64*
  %12 = bitcast i8* %8 to i64*
  %13 = getelementptr inbounds i8, i8* %2, i64 32
  %14 = bitcast i8* %13 to %"class.std::__1::vector.634"*
  %15 = getelementptr inbounds i8, i8* %2, i64 40
  %16 = bitcast i8* %15 to %"struct.x11::Xkb::Listing"**
  %17 = bitcast i8* %15 to i64*
  %18 = bitcast i8* %13 to i64*
  %19 = getelementptr inbounds i8, i8* %2, i64 56
  %20 = bitcast i8* %19 to %"class.std::__1::vector.634"*
  %21 = getelementptr inbounds i8, i8* %2, i64 64
  %22 = bitcast i8* %21 to %"struct.x11::Xkb::Listing"**
  %23 = bitcast i8* %21 to i64*
  %24 = bitcast i8* %19 to i64*
  %25 = getelementptr inbounds i8, i8* %2, i64 80
  %26 = bitcast i8* %25 to %"class.std::__1::vector.634"*
  %27 = getelementptr inbounds i8, i8* %2, i64 88
  %28 = bitcast i8* %27 to %"struct.x11::Xkb::Listing"**
  %29 = bitcast i8* %27 to i64*
  %30 = bitcast i8* %25 to i64*
  %31 = getelementptr inbounds i8, i8* %2, i64 104
  %32 = bitcast i8* %31 to %"class.std::__1::vector.634"*
  %33 = getelementptr inbounds i8, i8* %2, i64 112
  %34 = bitcast i8* %33 to %"struct.x11::Xkb::Listing"**
  %35 = bitcast i8* %33 to i64*
  %36 = bitcast i8* %31 to i64*
  %37 = getelementptr inbounds i8, i8* %2, i64 128
  %38 = bitcast i8* %37 to %"class.std::__1::vector.634"*
  %39 = getelementptr inbounds i8, i8* %2, i64 136
  %40 = bitcast i8* %39 to %"struct.x11::Xkb::Listing"**
  %41 = bitcast i8* %39 to i64*
  %42 = bitcast i8* %37 to i64*
  %43 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #11
  %50 = load i64, i64* %43, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %43, align 8
  %52 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %53 = bitcast %"class.base::RefCountedMemory"* %52 to i8* (%"class.base::RefCountedMemory"*)***
  %54 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %53, align 8
  %55 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %54, align 8
  %56 = tail call i8* %55(%"class.base::RefCountedMemory"* %52) #11
  %57 = load i64, i64* %43, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %2, align 1
  %60 = add i64 %57, 1
  store i64 %60, i64* %43, align 8
  %61 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %62 = bitcast %"class.base::RefCountedMemory"* %61 to i8* (%"class.base::RefCountedMemory"*)***
  %63 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %63, align 8
  %65 = tail call i8* %64(%"class.base::RefCountedMemory"* %61) #11
  %66 = load i64, i64* %43, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = bitcast i8* %67 to i16*
  %69 = load i16, i16* %68, align 1
  store i16 %69, i16* %5, align 2
  %70 = add i64 %66, 2
  store i64 %70, i64* %43, align 8
  %71 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %72 = bitcast %"class.base::RefCountedMemory"* %71 to i8* (%"class.base::RefCountedMemory"*)***
  %73 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %72, align 8
  %74 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %73, align 8
  %75 = tail call i8* %74(%"class.base::RefCountedMemory"* %71) #11
  %76 = load i64, i64* %43, align 8
  %77 = add i64 %76, 4
  store i64 %77, i64* %43, align 8
  %78 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %79 = bitcast %"class.base::RefCountedMemory"* %78 to i8* (%"class.base::RefCountedMemory"*)***
  %80 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %79, align 8
  %81 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %80, align 8
  %82 = tail call i8* %81(%"class.base::RefCountedMemory"* %78) #11
  %83 = load i64, i64* %43, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i16*
  %86 = load i16, i16* %85, align 1
  %87 = add i64 %83, 2
  store i64 %87, i64* %43, align 8
  %88 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %89 = bitcast %"class.base::RefCountedMemory"* %88 to i8* (%"class.base::RefCountedMemory"*)***
  %90 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %89, align 8
  %91 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %90, align 8
  %92 = tail call i8* %91(%"class.base::RefCountedMemory"* %88) #11
  %93 = load i64, i64* %43, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 1
  %97 = add i64 %93, 2
  store i64 %97, i64* %43, align 8
  %98 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %99 = bitcast %"class.base::RefCountedMemory"* %98 to i8* (%"class.base::RefCountedMemory"*)***
  %100 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %99, align 8
  %101 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %100, align 8
  %102 = tail call i8* %101(%"class.base::RefCountedMemory"* %98) #11
  %103 = load i64, i64* %43, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = bitcast i8* %104 to i16*
  %106 = load i16, i16* %105, align 1
  %107 = add i64 %103, 2
  store i64 %107, i64* %43, align 8
  %108 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %109 = bitcast %"class.base::RefCountedMemory"* %108 to i8* (%"class.base::RefCountedMemory"*)***
  %110 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %109, align 8
  %111 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %110, align 8
  %112 = tail call i8* %111(%"class.base::RefCountedMemory"* %108) #11
  %113 = load i64, i64* %43, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 1
  %117 = add i64 %113, 2
  store i64 %117, i64* %43, align 8
  %118 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %119 = bitcast %"class.base::RefCountedMemory"* %118 to i8* (%"class.base::RefCountedMemory"*)***
  %120 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %120, align 8
  %122 = tail call i8* %121(%"class.base::RefCountedMemory"* %118) #11
  %123 = load i64, i64* %43, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i16*
  %126 = load i16, i16* %125, align 1
  %127 = add i64 %123, 2
  store i64 %127, i64* %43, align 8
  %128 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %129 = bitcast %"class.base::RefCountedMemory"* %128 to i8* (%"class.base::RefCountedMemory"*)***
  %130 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %129, align 8
  %131 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %130, align 8
  %132 = tail call i8* %131(%"class.base::RefCountedMemory"* %128) #11
  %133 = load i64, i64* %43, align 8
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to i16*
  %136 = load i16, i16* %135, align 1
  %137 = add i64 %133, 2
  store i64 %137, i64* %43, align 8
  %138 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %139 = bitcast %"class.base::RefCountedMemory"* %138 to i8* (%"class.base::RefCountedMemory"*)***
  %140 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %139, align 8
  %141 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %140, align 8
  %142 = tail call i8* %141(%"class.base::RefCountedMemory"* %138) #11
  %143 = load i64, i64* %43, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 1
  store i16 %146, i16* %7, align 2
  %147 = add i64 %143, 12
  store i64 %147, i64* %43, align 8
  %148 = zext i16 %86 to i64
  %149 = load i64, i64* %11, align 8
  %150 = load i64, i64* %12, align 8
  %151 = sub i64 %149, %150
  %152 = ashr exact i64 %151, 5
  %153 = icmp ult i64 %152, %148
  %154 = inttoptr i64 %150 to %"struct.x11::Xkb::Listing"*
  %155 = inttoptr i64 %149 to %"struct.x11::Xkb::Listing"*
  br i1 %153, label %156, label %160

156:                                              ; preds = %1
  %157 = bitcast i8* %8 to %"class.std::__1::vector.634"*
  %158 = sub nsw i64 %148, %152
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %157, i64 %158) #11
  %159 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %10, align 8
  br label %178

160:                                              ; preds = %1
  %161 = icmp ugt i64 %152, %148
  br i1 %161, label %162, label %178

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %154, i64 %148
  %164 = icmp eq %"struct.x11::Xkb::Listing"* %163, %155
  br i1 %164, label %177, label %165

165:                                              ; preds = %162, %175
  %166 = phi %"struct.x11::Xkb::Listing"* [ %167, %175 ], [ %155, %162 ]
  %167 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %166, i64 -1
  %168 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %166, i64 -1, i32 1, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %165
  %172 = ptrtoint i8* %169 to i64
  %173 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %166, i64 -1, i32 1, i32 0, i32 1
  %174 = bitcast i8** %173 to i64*
  store i64 %172, i64* %174, align 8
  tail call void @_ZdlPv(i8* nonnull %169) #12
  br label %175

175:                                              ; preds = %171, %165
  %176 = icmp eq %"struct.x11::Xkb::Listing"* %167, %163
  br i1 %176, label %177, label %165

177:                                              ; preds = %175, %162
  store %"struct.x11::Xkb::Listing"* %163, %"struct.x11::Xkb::Listing"** %10, align 8
  br label %178

178:                                              ; preds = %156, %160, %177
  %179 = phi %"struct.x11::Xkb::Listing"* [ %159, %156 ], [ %155, %160 ], [ %163, %177 ]
  %180 = bitcast i8* %8 to %"struct.x11::Xkb::Listing"**
  %181 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %180, align 8
  %182 = icmp eq %"struct.x11::Xkb::Listing"* %181, %179
  br i1 %182, label %183, label %218

183:                                              ; preds = %268, %178
  %184 = zext i16 %96 to i64
  %185 = load i64, i64* %17, align 8
  %186 = load i64, i64* %18, align 8
  %187 = sub i64 %185, %186
  %188 = ashr exact i64 %187, 5
  %189 = icmp ult i64 %188, %184
  %190 = inttoptr i64 %186 to %"struct.x11::Xkb::Listing"*
  %191 = inttoptr i64 %185 to %"struct.x11::Xkb::Listing"*
  br i1 %189, label %192, label %195

192:                                              ; preds = %183
  %193 = sub nsw i64 %184, %188
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %14, i64 %193) #11
  %194 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %16, align 8
  br label %213

195:                                              ; preds = %183
  %196 = icmp ugt i64 %188, %184
  br i1 %196, label %197, label %213

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %190, i64 %184
  %199 = icmp eq %"struct.x11::Xkb::Listing"* %198, %191
  br i1 %199, label %212, label %200

200:                                              ; preds = %197, %210
  %201 = phi %"struct.x11::Xkb::Listing"* [ %202, %210 ], [ %191, %197 ]
  %202 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %201, i64 -1
  %203 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %201, i64 -1, i32 1, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = ptrtoint i8* %204 to i64
  %208 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %201, i64 -1, i32 1, i32 0, i32 1
  %209 = bitcast i8** %208 to i64*
  store i64 %207, i64* %209, align 8
  tail call void @_ZdlPv(i8* nonnull %204) #12
  br label %210

210:                                              ; preds = %206, %200
  %211 = icmp eq %"struct.x11::Xkb::Listing"* %202, %198
  br i1 %211, label %212, label %200

212:                                              ; preds = %210, %197
  store %"struct.x11::Xkb::Listing"* %198, %"struct.x11::Xkb::Listing"** %16, align 8
  br label %213

213:                                              ; preds = %192, %195, %212
  %214 = phi %"struct.x11::Xkb::Listing"* [ %194, %192 ], [ %191, %195 ], [ %198, %212 ]
  %215 = bitcast i8* %13 to %"struct.x11::Xkb::Listing"**
  %216 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %215, align 8
  %217 = icmp eq %"struct.x11::Xkb::Listing"* %216, %214
  br i1 %217, label %288, label %323

218:                                              ; preds = %178, %268
  %219 = phi %"struct.x11::Xkb::Listing"* [ %272, %268 ], [ %181, %178 ]
  %220 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %219, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %219, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %219, i64 0, i32 1, i32 0, i32 1
  %223 = bitcast i8** %222 to i64*
  %224 = bitcast %"class.std::__1::vector.636"* %221 to i64*
  %225 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %226 = bitcast %"class.base::RefCountedMemory"* %225 to i8* (%"class.base::RefCountedMemory"*)***
  %227 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %226, align 8
  %228 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %227, align 8
  %229 = tail call i8* %228(%"class.base::RefCountedMemory"* %225) #11
  %230 = load i64, i64* %43, align 8
  %231 = getelementptr inbounds i8, i8* %229, i64 %230
  %232 = bitcast i8* %231 to i16*
  %233 = load i16, i16* %232, align 1
  store i16 %233, i16* %220, align 2
  %234 = load i64, i64* %43, align 8
  %235 = add i64 %234, 2
  store i64 %235, i64* %43, align 8
  %236 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %237 = bitcast %"class.base::RefCountedMemory"* %236 to i8* (%"class.base::RefCountedMemory"*)***
  %238 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %237, align 8
  %239 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %238, align 8
  %240 = tail call i8* %239(%"class.base::RefCountedMemory"* %236) #11
  %241 = load i64, i64* %43, align 8
  %242 = getelementptr inbounds i8, i8* %240, i64 %241
  %243 = bitcast i8* %242 to i16*
  %244 = load i16, i16* %243, align 1
  %245 = add i64 %241, 2
  store i64 %245, i64* %43, align 8
  %246 = zext i16 %244 to i64
  %247 = load i64, i64* %223, align 8
  %248 = load i64, i64* %224, align 8
  %249 = sub i64 %247, %248
  %250 = icmp ult i64 %249, %246
  %251 = inttoptr i64 %248 to i8*
  br i1 %250, label %252, label %257

252:                                              ; preds = %218
  %253 = sub i64 %246, %249
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %221, i64 %253) #11
  %254 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %221, i64 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = load i8*, i8** %222, align 8
  br label %262

257:                                              ; preds = %218
  %258 = inttoptr i64 %247 to i8*
  %259 = icmp ugt i64 %249, %246
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  %261 = getelementptr inbounds i8, i8* %251, i64 %246
  store i8* %261, i8** %222, align 8
  br label %262

262:                                              ; preds = %252, %257, %260
  %263 = phi i8* [ %256, %252 ], [ %258, %257 ], [ %261, %260 ]
  %264 = phi i8* [ %255, %252 ], [ %251, %257 ], [ %251, %260 ]
  %265 = icmp eq i8* %264, %263
  br i1 %265, label %266, label %274

266:                                              ; preds = %262
  %267 = load i64, i64* %43, align 8
  br label %268

268:                                              ; preds = %274, %266
  %269 = phi i64 [ %267, %266 ], [ %285, %274 ]
  %270 = and i64 %269, 1
  %271 = add i64 %270, %269
  store i64 %271, i64* %43, align 8
  %272 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %219, i64 1
  %273 = icmp eq %"struct.x11::Xkb::Listing"* %272, %179
  br i1 %273, label %183, label %218

274:                                              ; preds = %262, %274
  %275 = phi i8* [ %286, %274 ], [ %264, %262 ]
  %276 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %277 = bitcast %"class.base::RefCountedMemory"* %276 to i8* (%"class.base::RefCountedMemory"*)***
  %278 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %277, align 8
  %279 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %278, align 8
  %280 = tail call i8* %279(%"class.base::RefCountedMemory"* %276) #11
  %281 = load i64, i64* %43, align 8
  %282 = getelementptr inbounds i8, i8* %280, i64 %281
  %283 = load i8, i8* %282, align 1
  store i8 %283, i8* %275, align 1
  %284 = load i64, i64* %43, align 8
  %285 = add i64 %284, 1
  store i64 %285, i64* %43, align 8
  %286 = getelementptr inbounds i8, i8* %275, i64 1
  %287 = icmp eq i8* %286, %263
  br i1 %287, label %268, label %274

288:                                              ; preds = %373, %213
  %289 = zext i16 %106 to i64
  %290 = load i64, i64* %23, align 8
  %291 = load i64, i64* %24, align 8
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 5
  %294 = icmp ult i64 %293, %289
  %295 = inttoptr i64 %291 to %"struct.x11::Xkb::Listing"*
  %296 = inttoptr i64 %290 to %"struct.x11::Xkb::Listing"*
  br i1 %294, label %297, label %300

297:                                              ; preds = %288
  %298 = sub nsw i64 %289, %293
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %20, i64 %298) #11
  %299 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %22, align 8
  br label %318

300:                                              ; preds = %288
  %301 = icmp ugt i64 %293, %289
  br i1 %301, label %302, label %318

302:                                              ; preds = %300
  %303 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %295, i64 %289
  %304 = icmp eq %"struct.x11::Xkb::Listing"* %303, %296
  br i1 %304, label %317, label %305

305:                                              ; preds = %302, %315
  %306 = phi %"struct.x11::Xkb::Listing"* [ %307, %315 ], [ %296, %302 ]
  %307 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %306, i64 -1
  %308 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %306, i64 -1, i32 1, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %315, label %311

311:                                              ; preds = %305
  %312 = ptrtoint i8* %309 to i64
  %313 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %306, i64 -1, i32 1, i32 0, i32 1
  %314 = bitcast i8** %313 to i64*
  store i64 %312, i64* %314, align 8
  tail call void @_ZdlPv(i8* nonnull %309) #12
  br label %315

315:                                              ; preds = %311, %305
  %316 = icmp eq %"struct.x11::Xkb::Listing"* %307, %303
  br i1 %316, label %317, label %305

317:                                              ; preds = %315, %302
  store %"struct.x11::Xkb::Listing"* %303, %"struct.x11::Xkb::Listing"** %22, align 8
  br label %318

318:                                              ; preds = %297, %300, %317
  %319 = phi %"struct.x11::Xkb::Listing"* [ %299, %297 ], [ %296, %300 ], [ %303, %317 ]
  %320 = bitcast i8* %19 to %"struct.x11::Xkb::Listing"**
  %321 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %320, align 8
  %322 = icmp eq %"struct.x11::Xkb::Listing"* %321, %319
  br i1 %322, label %393, label %428

323:                                              ; preds = %213, %373
  %324 = phi %"struct.x11::Xkb::Listing"* [ %377, %373 ], [ %216, %213 ]
  %325 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %324, i64 0, i32 0
  %326 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %324, i64 0, i32 1
  %327 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %324, i64 0, i32 1, i32 0, i32 1
  %328 = bitcast i8** %327 to i64*
  %329 = bitcast %"class.std::__1::vector.636"* %326 to i64*
  %330 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %331 = bitcast %"class.base::RefCountedMemory"* %330 to i8* (%"class.base::RefCountedMemory"*)***
  %332 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %331, align 8
  %333 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %332, align 8
  %334 = tail call i8* %333(%"class.base::RefCountedMemory"* %330) #11
  %335 = load i64, i64* %43, align 8
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  %337 = bitcast i8* %336 to i16*
  %338 = load i16, i16* %337, align 1
  store i16 %338, i16* %325, align 2
  %339 = load i64, i64* %43, align 8
  %340 = add i64 %339, 2
  store i64 %340, i64* %43, align 8
  %341 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %342 = bitcast %"class.base::RefCountedMemory"* %341 to i8* (%"class.base::RefCountedMemory"*)***
  %343 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %342, align 8
  %344 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %343, align 8
  %345 = tail call i8* %344(%"class.base::RefCountedMemory"* %341) #11
  %346 = load i64, i64* %43, align 8
  %347 = getelementptr inbounds i8, i8* %345, i64 %346
  %348 = bitcast i8* %347 to i16*
  %349 = load i16, i16* %348, align 1
  %350 = add i64 %346, 2
  store i64 %350, i64* %43, align 8
  %351 = zext i16 %349 to i64
  %352 = load i64, i64* %328, align 8
  %353 = load i64, i64* %329, align 8
  %354 = sub i64 %352, %353
  %355 = icmp ult i64 %354, %351
  %356 = inttoptr i64 %353 to i8*
  br i1 %355, label %357, label %362

357:                                              ; preds = %323
  %358 = sub i64 %351, %354
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %326, i64 %358) #11
  %359 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %326, i64 0, i32 0, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = load i8*, i8** %327, align 8
  br label %367

362:                                              ; preds = %323
  %363 = inttoptr i64 %352 to i8*
  %364 = icmp ugt i64 %354, %351
  br i1 %364, label %365, label %367

365:                                              ; preds = %362
  %366 = getelementptr inbounds i8, i8* %356, i64 %351
  store i8* %366, i8** %327, align 8
  br label %367

367:                                              ; preds = %357, %362, %365
  %368 = phi i8* [ %361, %357 ], [ %363, %362 ], [ %366, %365 ]
  %369 = phi i8* [ %360, %357 ], [ %356, %362 ], [ %356, %365 ]
  %370 = icmp eq i8* %369, %368
  br i1 %370, label %371, label %379

371:                                              ; preds = %367
  %372 = load i64, i64* %43, align 8
  br label %373

373:                                              ; preds = %379, %371
  %374 = phi i64 [ %372, %371 ], [ %390, %379 ]
  %375 = and i64 %374, 1
  %376 = add i64 %375, %374
  store i64 %376, i64* %43, align 8
  %377 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %324, i64 1
  %378 = icmp eq %"struct.x11::Xkb::Listing"* %377, %214
  br i1 %378, label %288, label %323

379:                                              ; preds = %367, %379
  %380 = phi i8* [ %391, %379 ], [ %369, %367 ]
  %381 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %382 = bitcast %"class.base::RefCountedMemory"* %381 to i8* (%"class.base::RefCountedMemory"*)***
  %383 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %382, align 8
  %384 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %383, align 8
  %385 = tail call i8* %384(%"class.base::RefCountedMemory"* %381) #11
  %386 = load i64, i64* %43, align 8
  %387 = getelementptr inbounds i8, i8* %385, i64 %386
  %388 = load i8, i8* %387, align 1
  store i8 %388, i8* %380, align 1
  %389 = load i64, i64* %43, align 8
  %390 = add i64 %389, 1
  store i64 %390, i64* %43, align 8
  %391 = getelementptr inbounds i8, i8* %380, i64 1
  %392 = icmp eq i8* %391, %368
  br i1 %392, label %373, label %379

393:                                              ; preds = %478, %318
  %394 = zext i16 %116 to i64
  %395 = load i64, i64* %29, align 8
  %396 = load i64, i64* %30, align 8
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 5
  %399 = icmp ult i64 %398, %394
  %400 = inttoptr i64 %396 to %"struct.x11::Xkb::Listing"*
  %401 = inttoptr i64 %395 to %"struct.x11::Xkb::Listing"*
  br i1 %399, label %402, label %405

402:                                              ; preds = %393
  %403 = sub nsw i64 %394, %398
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %26, i64 %403) #11
  %404 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %28, align 8
  br label %423

405:                                              ; preds = %393
  %406 = icmp ugt i64 %398, %394
  br i1 %406, label %407, label %423

407:                                              ; preds = %405
  %408 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %400, i64 %394
  %409 = icmp eq %"struct.x11::Xkb::Listing"* %408, %401
  br i1 %409, label %422, label %410

410:                                              ; preds = %407, %420
  %411 = phi %"struct.x11::Xkb::Listing"* [ %412, %420 ], [ %401, %407 ]
  %412 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %411, i64 -1
  %413 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %411, i64 -1, i32 1, i32 0, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %420, label %416

416:                                              ; preds = %410
  %417 = ptrtoint i8* %414 to i64
  %418 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %411, i64 -1, i32 1, i32 0, i32 1
  %419 = bitcast i8** %418 to i64*
  store i64 %417, i64* %419, align 8
  tail call void @_ZdlPv(i8* nonnull %414) #12
  br label %420

420:                                              ; preds = %416, %410
  %421 = icmp eq %"struct.x11::Xkb::Listing"* %412, %408
  br i1 %421, label %422, label %410

422:                                              ; preds = %420, %407
  store %"struct.x11::Xkb::Listing"* %408, %"struct.x11::Xkb::Listing"** %28, align 8
  br label %423

423:                                              ; preds = %402, %405, %422
  %424 = phi %"struct.x11::Xkb::Listing"* [ %404, %402 ], [ %401, %405 ], [ %408, %422 ]
  %425 = bitcast i8* %25 to %"struct.x11::Xkb::Listing"**
  %426 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %425, align 8
  %427 = icmp eq %"struct.x11::Xkb::Listing"* %426, %424
  br i1 %427, label %498, label %533

428:                                              ; preds = %318, %478
  %429 = phi %"struct.x11::Xkb::Listing"* [ %482, %478 ], [ %321, %318 ]
  %430 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %429, i64 0, i32 0
  %431 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %429, i64 0, i32 1
  %432 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %429, i64 0, i32 1, i32 0, i32 1
  %433 = bitcast i8** %432 to i64*
  %434 = bitcast %"class.std::__1::vector.636"* %431 to i64*
  %435 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %436 = bitcast %"class.base::RefCountedMemory"* %435 to i8* (%"class.base::RefCountedMemory"*)***
  %437 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %436, align 8
  %438 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %437, align 8
  %439 = tail call i8* %438(%"class.base::RefCountedMemory"* %435) #11
  %440 = load i64, i64* %43, align 8
  %441 = getelementptr inbounds i8, i8* %439, i64 %440
  %442 = bitcast i8* %441 to i16*
  %443 = load i16, i16* %442, align 1
  store i16 %443, i16* %430, align 2
  %444 = load i64, i64* %43, align 8
  %445 = add i64 %444, 2
  store i64 %445, i64* %43, align 8
  %446 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %447 = bitcast %"class.base::RefCountedMemory"* %446 to i8* (%"class.base::RefCountedMemory"*)***
  %448 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %447, align 8
  %449 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %448, align 8
  %450 = tail call i8* %449(%"class.base::RefCountedMemory"* %446) #11
  %451 = load i64, i64* %43, align 8
  %452 = getelementptr inbounds i8, i8* %450, i64 %451
  %453 = bitcast i8* %452 to i16*
  %454 = load i16, i16* %453, align 1
  %455 = add i64 %451, 2
  store i64 %455, i64* %43, align 8
  %456 = zext i16 %454 to i64
  %457 = load i64, i64* %433, align 8
  %458 = load i64, i64* %434, align 8
  %459 = sub i64 %457, %458
  %460 = icmp ult i64 %459, %456
  %461 = inttoptr i64 %458 to i8*
  br i1 %460, label %462, label %467

462:                                              ; preds = %428
  %463 = sub i64 %456, %459
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %431, i64 %463) #11
  %464 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %431, i64 0, i32 0, i32 0
  %465 = load i8*, i8** %464, align 8
  %466 = load i8*, i8** %432, align 8
  br label %472

467:                                              ; preds = %428
  %468 = inttoptr i64 %457 to i8*
  %469 = icmp ugt i64 %459, %456
  br i1 %469, label %470, label %472

470:                                              ; preds = %467
  %471 = getelementptr inbounds i8, i8* %461, i64 %456
  store i8* %471, i8** %432, align 8
  br label %472

472:                                              ; preds = %462, %467, %470
  %473 = phi i8* [ %466, %462 ], [ %468, %467 ], [ %471, %470 ]
  %474 = phi i8* [ %465, %462 ], [ %461, %467 ], [ %461, %470 ]
  %475 = icmp eq i8* %474, %473
  br i1 %475, label %476, label %484

476:                                              ; preds = %472
  %477 = load i64, i64* %43, align 8
  br label %478

478:                                              ; preds = %484, %476
  %479 = phi i64 [ %477, %476 ], [ %495, %484 ]
  %480 = and i64 %479, 1
  %481 = add i64 %480, %479
  store i64 %481, i64* %43, align 8
  %482 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %429, i64 1
  %483 = icmp eq %"struct.x11::Xkb::Listing"* %482, %319
  br i1 %483, label %393, label %428

484:                                              ; preds = %472, %484
  %485 = phi i8* [ %496, %484 ], [ %474, %472 ]
  %486 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %487 = bitcast %"class.base::RefCountedMemory"* %486 to i8* (%"class.base::RefCountedMemory"*)***
  %488 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %487, align 8
  %489 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %488, align 8
  %490 = tail call i8* %489(%"class.base::RefCountedMemory"* %486) #11
  %491 = load i64, i64* %43, align 8
  %492 = getelementptr inbounds i8, i8* %490, i64 %491
  %493 = load i8, i8* %492, align 1
  store i8 %493, i8* %485, align 1
  %494 = load i64, i64* %43, align 8
  %495 = add i64 %494, 1
  store i64 %495, i64* %43, align 8
  %496 = getelementptr inbounds i8, i8* %485, i64 1
  %497 = icmp eq i8* %496, %473
  br i1 %497, label %478, label %484

498:                                              ; preds = %583, %423
  %499 = zext i16 %126 to i64
  %500 = load i64, i64* %35, align 8
  %501 = load i64, i64* %36, align 8
  %502 = sub i64 %500, %501
  %503 = ashr exact i64 %502, 5
  %504 = icmp ult i64 %503, %499
  %505 = inttoptr i64 %501 to %"struct.x11::Xkb::Listing"*
  %506 = inttoptr i64 %500 to %"struct.x11::Xkb::Listing"*
  br i1 %504, label %507, label %510

507:                                              ; preds = %498
  %508 = sub nsw i64 %499, %503
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %32, i64 %508) #11
  %509 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %34, align 8
  br label %528

510:                                              ; preds = %498
  %511 = icmp ugt i64 %503, %499
  br i1 %511, label %512, label %528

512:                                              ; preds = %510
  %513 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %505, i64 %499
  %514 = icmp eq %"struct.x11::Xkb::Listing"* %513, %506
  br i1 %514, label %527, label %515

515:                                              ; preds = %512, %525
  %516 = phi %"struct.x11::Xkb::Listing"* [ %517, %525 ], [ %506, %512 ]
  %517 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %516, i64 -1
  %518 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %516, i64 -1, i32 1, i32 0, i32 0
  %519 = load i8*, i8** %518, align 8
  %520 = icmp eq i8* %519, null
  br i1 %520, label %525, label %521

521:                                              ; preds = %515
  %522 = ptrtoint i8* %519 to i64
  %523 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %516, i64 -1, i32 1, i32 0, i32 1
  %524 = bitcast i8** %523 to i64*
  store i64 %522, i64* %524, align 8
  tail call void @_ZdlPv(i8* nonnull %519) #12
  br label %525

525:                                              ; preds = %521, %515
  %526 = icmp eq %"struct.x11::Xkb::Listing"* %517, %513
  br i1 %526, label %527, label %515

527:                                              ; preds = %525, %512
  store %"struct.x11::Xkb::Listing"* %513, %"struct.x11::Xkb::Listing"** %34, align 8
  br label %528

528:                                              ; preds = %507, %510, %527
  %529 = phi %"struct.x11::Xkb::Listing"* [ %509, %507 ], [ %506, %510 ], [ %513, %527 ]
  %530 = bitcast i8* %31 to %"struct.x11::Xkb::Listing"**
  %531 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %530, align 8
  %532 = icmp eq %"struct.x11::Xkb::Listing"* %531, %529
  br i1 %532, label %603, label %640

533:                                              ; preds = %423, %583
  %534 = phi %"struct.x11::Xkb::Listing"* [ %587, %583 ], [ %426, %423 ]
  %535 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %534, i64 0, i32 0
  %536 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %534, i64 0, i32 1
  %537 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %534, i64 0, i32 1, i32 0, i32 1
  %538 = bitcast i8** %537 to i64*
  %539 = bitcast %"class.std::__1::vector.636"* %536 to i64*
  %540 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %541 = bitcast %"class.base::RefCountedMemory"* %540 to i8* (%"class.base::RefCountedMemory"*)***
  %542 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %541, align 8
  %543 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %542, align 8
  %544 = tail call i8* %543(%"class.base::RefCountedMemory"* %540) #11
  %545 = load i64, i64* %43, align 8
  %546 = getelementptr inbounds i8, i8* %544, i64 %545
  %547 = bitcast i8* %546 to i16*
  %548 = load i16, i16* %547, align 1
  store i16 %548, i16* %535, align 2
  %549 = load i64, i64* %43, align 8
  %550 = add i64 %549, 2
  store i64 %550, i64* %43, align 8
  %551 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %552 = bitcast %"class.base::RefCountedMemory"* %551 to i8* (%"class.base::RefCountedMemory"*)***
  %553 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %552, align 8
  %554 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %553, align 8
  %555 = tail call i8* %554(%"class.base::RefCountedMemory"* %551) #11
  %556 = load i64, i64* %43, align 8
  %557 = getelementptr inbounds i8, i8* %555, i64 %556
  %558 = bitcast i8* %557 to i16*
  %559 = load i16, i16* %558, align 1
  %560 = add i64 %556, 2
  store i64 %560, i64* %43, align 8
  %561 = zext i16 %559 to i64
  %562 = load i64, i64* %538, align 8
  %563 = load i64, i64* %539, align 8
  %564 = sub i64 %562, %563
  %565 = icmp ult i64 %564, %561
  %566 = inttoptr i64 %563 to i8*
  br i1 %565, label %567, label %572

567:                                              ; preds = %533
  %568 = sub i64 %561, %564
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %536, i64 %568) #11
  %569 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %536, i64 0, i32 0, i32 0
  %570 = load i8*, i8** %569, align 8
  %571 = load i8*, i8** %537, align 8
  br label %577

572:                                              ; preds = %533
  %573 = inttoptr i64 %562 to i8*
  %574 = icmp ugt i64 %564, %561
  br i1 %574, label %575, label %577

575:                                              ; preds = %572
  %576 = getelementptr inbounds i8, i8* %566, i64 %561
  store i8* %576, i8** %537, align 8
  br label %577

577:                                              ; preds = %567, %572, %575
  %578 = phi i8* [ %571, %567 ], [ %573, %572 ], [ %576, %575 ]
  %579 = phi i8* [ %570, %567 ], [ %566, %572 ], [ %566, %575 ]
  %580 = icmp eq i8* %579, %578
  br i1 %580, label %581, label %589

581:                                              ; preds = %577
  %582 = load i64, i64* %43, align 8
  br label %583

583:                                              ; preds = %589, %581
  %584 = phi i64 [ %582, %581 ], [ %600, %589 ]
  %585 = and i64 %584, 1
  %586 = add i64 %585, %584
  store i64 %586, i64* %43, align 8
  %587 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %534, i64 1
  %588 = icmp eq %"struct.x11::Xkb::Listing"* %587, %424
  br i1 %588, label %498, label %533

589:                                              ; preds = %577, %589
  %590 = phi i8* [ %601, %589 ], [ %579, %577 ]
  %591 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %592 = bitcast %"class.base::RefCountedMemory"* %591 to i8* (%"class.base::RefCountedMemory"*)***
  %593 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %592, align 8
  %594 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %593, align 8
  %595 = tail call i8* %594(%"class.base::RefCountedMemory"* %591) #11
  %596 = load i64, i64* %43, align 8
  %597 = getelementptr inbounds i8, i8* %595, i64 %596
  %598 = load i8, i8* %597, align 1
  store i8 %598, i8* %590, align 1
  %599 = load i64, i64* %43, align 8
  %600 = add i64 %599, 1
  store i64 %600, i64* %43, align 8
  %601 = getelementptr inbounds i8, i8* %590, i64 1
  %602 = icmp eq i8* %601, %578
  br i1 %602, label %583, label %589

603:                                              ; preds = %690, %528
  %604 = zext i16 %136 to i64
  %605 = load i64, i64* %41, align 8
  %606 = load i64, i64* %42, align 8
  %607 = sub i64 %605, %606
  %608 = ashr exact i64 %607, 5
  %609 = icmp ult i64 %608, %604
  %610 = inttoptr i64 %606 to %"struct.x11::Xkb::Listing"*
  %611 = inttoptr i64 %605 to %"struct.x11::Xkb::Listing"*
  br i1 %609, label %612, label %615

612:                                              ; preds = %603
  %613 = sub nsw i64 %604, %608
  tail call void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"* %38, i64 %613) #11
  %614 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %40, align 8
  br label %633

615:                                              ; preds = %603
  %616 = icmp ugt i64 %608, %604
  br i1 %616, label %617, label %633

617:                                              ; preds = %615
  %618 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %610, i64 %604
  %619 = icmp eq %"struct.x11::Xkb::Listing"* %618, %611
  br i1 %619, label %632, label %620

620:                                              ; preds = %617, %630
  %621 = phi %"struct.x11::Xkb::Listing"* [ %622, %630 ], [ %611, %617 ]
  %622 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %621, i64 -1
  %623 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %621, i64 -1, i32 1, i32 0, i32 0
  %624 = load i8*, i8** %623, align 8
  %625 = icmp eq i8* %624, null
  br i1 %625, label %630, label %626

626:                                              ; preds = %620
  %627 = ptrtoint i8* %624 to i64
  %628 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %621, i64 -1, i32 1, i32 0, i32 1
  %629 = bitcast i8** %628 to i64*
  store i64 %627, i64* %629, align 8
  tail call void @_ZdlPv(i8* nonnull %624) #12
  br label %630

630:                                              ; preds = %626, %620
  %631 = icmp eq %"struct.x11::Xkb::Listing"* %622, %618
  br i1 %631, label %632, label %620

632:                                              ; preds = %630, %617
  store %"struct.x11::Xkb::Listing"* %618, %"struct.x11::Xkb::Listing"** %40, align 8
  br label %633

633:                                              ; preds = %612, %615, %632
  %634 = phi %"struct.x11::Xkb::Listing"* [ %614, %612 ], [ %611, %615 ], [ %618, %632 ]
  %635 = bitcast i8* %37 to %"struct.x11::Xkb::Listing"**
  %636 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %635, align 8
  %637 = icmp eq %"struct.x11::Xkb::Listing"* %636, %634
  br i1 %637, label %638, label %715

638:                                              ; preds = %633
  %639 = load i64, i64* %43, align 8
  br label %710

640:                                              ; preds = %528, %690
  %641 = phi %"struct.x11::Xkb::Listing"* [ %694, %690 ], [ %531, %528 ]
  %642 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %641, i64 0, i32 0
  %643 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %641, i64 0, i32 1
  %644 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %641, i64 0, i32 1, i32 0, i32 1
  %645 = bitcast i8** %644 to i64*
  %646 = bitcast %"class.std::__1::vector.636"* %643 to i64*
  %647 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %648 = bitcast %"class.base::RefCountedMemory"* %647 to i8* (%"class.base::RefCountedMemory"*)***
  %649 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %648, align 8
  %650 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %649, align 8
  %651 = tail call i8* %650(%"class.base::RefCountedMemory"* %647) #11
  %652 = load i64, i64* %43, align 8
  %653 = getelementptr inbounds i8, i8* %651, i64 %652
  %654 = bitcast i8* %653 to i16*
  %655 = load i16, i16* %654, align 1
  store i16 %655, i16* %642, align 2
  %656 = load i64, i64* %43, align 8
  %657 = add i64 %656, 2
  store i64 %657, i64* %43, align 8
  %658 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %659 = bitcast %"class.base::RefCountedMemory"* %658 to i8* (%"class.base::RefCountedMemory"*)***
  %660 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %659, align 8
  %661 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %660, align 8
  %662 = tail call i8* %661(%"class.base::RefCountedMemory"* %658) #11
  %663 = load i64, i64* %43, align 8
  %664 = getelementptr inbounds i8, i8* %662, i64 %663
  %665 = bitcast i8* %664 to i16*
  %666 = load i16, i16* %665, align 1
  %667 = add i64 %663, 2
  store i64 %667, i64* %43, align 8
  %668 = zext i16 %666 to i64
  %669 = load i64, i64* %645, align 8
  %670 = load i64, i64* %646, align 8
  %671 = sub i64 %669, %670
  %672 = icmp ult i64 %671, %668
  %673 = inttoptr i64 %670 to i8*
  br i1 %672, label %674, label %679

674:                                              ; preds = %640
  %675 = sub i64 %668, %671
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %643, i64 %675) #11
  %676 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %643, i64 0, i32 0, i32 0
  %677 = load i8*, i8** %676, align 8
  %678 = load i8*, i8** %644, align 8
  br label %684

679:                                              ; preds = %640
  %680 = inttoptr i64 %669 to i8*
  %681 = icmp ugt i64 %671, %668
  br i1 %681, label %682, label %684

682:                                              ; preds = %679
  %683 = getelementptr inbounds i8, i8* %673, i64 %668
  store i8* %683, i8** %644, align 8
  br label %684

684:                                              ; preds = %674, %679, %682
  %685 = phi i8* [ %678, %674 ], [ %680, %679 ], [ %683, %682 ]
  %686 = phi i8* [ %677, %674 ], [ %673, %679 ], [ %673, %682 ]
  %687 = icmp eq i8* %686, %685
  br i1 %687, label %688, label %696

688:                                              ; preds = %684
  %689 = load i64, i64* %43, align 8
  br label %690

690:                                              ; preds = %696, %688
  %691 = phi i64 [ %689, %688 ], [ %707, %696 ]
  %692 = and i64 %691, 1
  %693 = add i64 %692, %691
  store i64 %693, i64* %43, align 8
  %694 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %641, i64 1
  %695 = icmp eq %"struct.x11::Xkb::Listing"* %694, %529
  br i1 %695, label %603, label %640

696:                                              ; preds = %684, %696
  %697 = phi i8* [ %708, %696 ], [ %686, %684 ]
  %698 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %699 = bitcast %"class.base::RefCountedMemory"* %698 to i8* (%"class.base::RefCountedMemory"*)***
  %700 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %699, align 8
  %701 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %700, align 8
  %702 = tail call i8* %701(%"class.base::RefCountedMemory"* %698) #11
  %703 = load i64, i64* %43, align 8
  %704 = getelementptr inbounds i8, i8* %702, i64 %703
  %705 = load i8, i8* %704, align 1
  store i8 %705, i8* %697, align 1
  %706 = load i64, i64* %43, align 8
  %707 = add i64 %706, 1
  store i64 %707, i64* %43, align 8
  %708 = getelementptr inbounds i8, i8* %697, i64 1
  %709 = icmp eq i8* %708, %685
  br i1 %709, label %690, label %696

710:                                              ; preds = %765, %638
  %711 = phi i64 [ %639, %638 ], [ %768, %765 ]
  %712 = sub i64 0, %711
  %713 = and i64 %712, 3
  %714 = add i64 %713, %711
  store i64 %714, i64* %43, align 8
  ret %"struct.x11::Xkb::ListComponentsReply"* %3

715:                                              ; preds = %633, %765
  %716 = phi %"struct.x11::Xkb::Listing"* [ %769, %765 ], [ %636, %633 ]
  %717 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %716, i64 0, i32 0
  %718 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %716, i64 0, i32 1
  %719 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %716, i64 0, i32 1, i32 0, i32 1
  %720 = bitcast i8** %719 to i64*
  %721 = bitcast %"class.std::__1::vector.636"* %718 to i64*
  %722 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %723 = bitcast %"class.base::RefCountedMemory"* %722 to i8* (%"class.base::RefCountedMemory"*)***
  %724 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %723, align 8
  %725 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %724, align 8
  %726 = tail call i8* %725(%"class.base::RefCountedMemory"* %722) #11
  %727 = load i64, i64* %43, align 8
  %728 = getelementptr inbounds i8, i8* %726, i64 %727
  %729 = bitcast i8* %728 to i16*
  %730 = load i16, i16* %729, align 1
  store i16 %730, i16* %717, align 2
  %731 = load i64, i64* %43, align 8
  %732 = add i64 %731, 2
  store i64 %732, i64* %43, align 8
  %733 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %734 = bitcast %"class.base::RefCountedMemory"* %733 to i8* (%"class.base::RefCountedMemory"*)***
  %735 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %734, align 8
  %736 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %735, align 8
  %737 = tail call i8* %736(%"class.base::RefCountedMemory"* %733) #11
  %738 = load i64, i64* %43, align 8
  %739 = getelementptr inbounds i8, i8* %737, i64 %738
  %740 = bitcast i8* %739 to i16*
  %741 = load i16, i16* %740, align 1
  %742 = add i64 %738, 2
  store i64 %742, i64* %43, align 8
  %743 = zext i16 %741 to i64
  %744 = load i64, i64* %720, align 8
  %745 = load i64, i64* %721, align 8
  %746 = sub i64 %744, %745
  %747 = icmp ult i64 %746, %743
  %748 = inttoptr i64 %745 to i8*
  br i1 %747, label %749, label %754

749:                                              ; preds = %715
  %750 = sub i64 %743, %746
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %718, i64 %750) #11
  %751 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %718, i64 0, i32 0, i32 0
  %752 = load i8*, i8** %751, align 8
  %753 = load i8*, i8** %719, align 8
  br label %759

754:                                              ; preds = %715
  %755 = inttoptr i64 %744 to i8*
  %756 = icmp ugt i64 %746, %743
  br i1 %756, label %757, label %759

757:                                              ; preds = %754
  %758 = getelementptr inbounds i8, i8* %748, i64 %743
  store i8* %758, i8** %719, align 8
  br label %759

759:                                              ; preds = %749, %754, %757
  %760 = phi i8* [ %753, %749 ], [ %755, %754 ], [ %758, %757 ]
  %761 = phi i8* [ %752, %749 ], [ %748, %754 ], [ %748, %757 ]
  %762 = icmp eq i8* %761, %760
  br i1 %762, label %763, label %771

763:                                              ; preds = %759
  %764 = load i64, i64* %43, align 8
  br label %765

765:                                              ; preds = %771, %763
  %766 = phi i64 [ %764, %763 ], [ %782, %771 ]
  %767 = and i64 %766, 1
  %768 = add i64 %767, %766
  store i64 %768, i64* %43, align 8
  %769 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %716, i64 1
  %770 = icmp eq %"struct.x11::Xkb::Listing"* %769, %634
  br i1 %770, label %710, label %715

771:                                              ; preds = %759, %771
  %772 = phi i8* [ %783, %771 ], [ %761, %759 ]
  %773 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %44, align 8
  %774 = bitcast %"class.base::RefCountedMemory"* %773 to i8* (%"class.base::RefCountedMemory"*)***
  %775 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %774, align 8
  %776 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %775, align 8
  %777 = tail call i8* %776(%"class.base::RefCountedMemory"* %773) #11
  %778 = load i64, i64* %43, align 8
  %779 = getelementptr inbounds i8, i8* %777, i64 %778
  %780 = load i8, i8* %779, align 1
  store i8 %780, i8* %772, align 1
  %781 = load i64, i64* %43, align 8
  %782 = add i64 %781, 1
  store i64 %782, i64* %43, align 8
  %783 = getelementptr inbounds i8, i8* %772, i64 1
  %784 = icmp eq i8* %783, %760
  br i1 %784, label %765, label %771
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetKbdByNameERKNS0_19GetKbdByNameRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetKbdByNameRequest"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.x11::WriteBuffer", align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %21 = load %"class.x11::Connection"*, %"class.x11::Connection"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %21) #11
  br i1 %22, label %23, label %108

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %108, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.x11::WriteBuffer"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %15) #11
  %29 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %1, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  %30 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %16, align 1
  %32 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 1
  %33 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %34, align 8
  %35 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %16) #11
  %36 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  store i8 23, i8* %17, align 1
  %39 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %40, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %42 = load i64, i64* %36, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 0, i8* %10, align 1
  %44 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %45 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %45, align 8
  %46 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %47 = load i64, i64* %36, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %45, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %50 = load i64, i64* %36, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %36, align 8
  %52 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %1, i64 0, i32 2
  %53 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %1, i64 0, i32 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %54 = bitcast %"struct.x11::Xkb::GetKbdByNameRequest"* %1 to i8*
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %54) #11
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %60 = load i64, i64* %36, align 8
  %61 = add i64 %60, 2
  store i64 %61, i64* %36, align 8
  %62 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %62) #11
  %63 = load i32, i32* %52, align 4
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %18, align 2
  %65 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %66, align 8
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %62) #11
  %68 = getelementptr inbounds i8, i8* %62, i64 1
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %68) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  %70 = load i64, i64* %36, align 8
  %71 = add i64 %70, 2
  store i64 %71, i64* %36, align 8
  %72 = bitcast i16* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %72) #11
  %73 = load i32, i32* %29, align 4
  %74 = trunc i32 %73 to i16
  store i16 %74, i16* %19, align 2
  %75 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %76, align 8
  %77 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %72) #11
  %78 = getelementptr inbounds i8, i8* %72, i64 1
  %79 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %80 = load i64, i64* %36, align 8
  %81 = add i64 %80, 2
  store i64 %81, i64* %36, align 8
  %82 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %83, align 8
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %85 = load i64, i64* %36, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %87 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %88 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %88, align 8
  %89 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  %90 = load i64, i64* %36, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %92 = and i64 %90, 3
  %93 = xor i64 %92, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 0, i8* %14, align 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %27
  %96 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %97 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi i64 [ 0, %95 ], [ %103, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  store %"class.std::__1::vector.271"* %32, %"class.std::__1::vector.271"** %97, align 8
  %100 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  %101 = load i64, i64* %36, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %36, align 8
  %103 = add nuw nsw i64 %99, 1
  %104 = icmp eq i64 %103, %93
  br i1 %104, label %105, label %98

105:                                              ; preds = %98, %27
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  %106 = load %"class.x11::Connection"*, %"class.x11::Connection"** %20, align 8
  %107 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %106, %"class.x11::WriteBuffer"* nonnull %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %62) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #11
  br label %108

108:                                              ; preds = %2, %23, %105
  %109 = phi %"class.x11::Connection::FutureImpl"* [ %107, %105 ], [ null, %23 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %109
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetKbdByNameERKNS0_10DeviceSpecERKNS0_9GBNDetailES6_RKh(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.x11::Xkb::GetKbdByNameRequest", align 4
  %7 = bitcast %"struct.x11::Xkb::GetKbdByNameRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %6, i64 0, i32 0
  %9 = load i16, i16* %1, align 2
  store i16 %9, i16* %8, align 4
  %10 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %6, i64 0, i32 2
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %6, i64 0, i32 3
  %13 = load i32, i32* %3, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameRequest", %"struct.x11::Xkb::GetKbdByNameRequest"* %6, i64 0, i32 4
  %15 = load i8, i8* %4, align 1
  store i8 %15, i8* %14, align 4
  %16 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12GetKbdByNameERKNS0_19GetKbdByNameRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetKbdByNameRequest"* nonnull dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.x11::Connection::FutureImpl"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetKbdByNameReply"* @_ZN3x116detail9ReadReplyINS_3Xkb17GetKbdByNameReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 920) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetKbdByNameReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 920, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = getelementptr inbounds i8, i8* %2, i64 5
  %8 = getelementptr inbounds i8, i8* %2, i64 6
  %9 = getelementptr inbounds i8, i8* %2, i64 7
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %15 = bitcast %"class.base::RefCountedMemory"* %14 to i8* (%"class.base::RefCountedMemory"*)***
  %16 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %16, align 8
  %18 = tail call i8* %17(%"class.base::RefCountedMemory"* %14) #11
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %12, align 8
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #11
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i8, i8* %27, align 1
  store i8 %28, i8* %2, align 1
  %29 = add i64 %26, 1
  store i64 %29, i64* %12, align 8
  %30 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %31 = bitcast %"class.base::RefCountedMemory"* %30 to i8* (%"class.base::RefCountedMemory"*)***
  %32 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %31, align 8
  %33 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %32, align 8
  %34 = tail call i8* %33(%"class.base::RefCountedMemory"* %30) #11
  %35 = load i64, i64* %12, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 1
  store i16 %38, i16* %5, align 2
  %39 = add i64 %35, 2
  store i64 %39, i64* %12, align 8
  %40 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %41 = bitcast %"class.base::RefCountedMemory"* %40 to i8* (%"class.base::RefCountedMemory"*)***
  %42 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %41, align 8
  %43 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %42, align 8
  %44 = tail call i8* %43(%"class.base::RefCountedMemory"* %40) #11
  %45 = load i64, i64* %12, align 8
  %46 = add i64 %45, 4
  store i64 %46, i64* %12, align 8
  %47 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %48 = bitcast %"class.base::RefCountedMemory"* %47 to i8* (%"class.base::RefCountedMemory"*)***
  %49 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %48, align 8
  %50 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %49, align 8
  %51 = tail call i8* %50(%"class.base::RefCountedMemory"* %47) #11
  %52 = load i64, i64* %12, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = load i8, i8* %53, align 1
  store i8 %54, i8* %6, align 1
  %55 = add i64 %52, 1
  store i64 %55, i64* %12, align 8
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i8* (%"class.base::RefCountedMemory"*)***
  %58 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %58, align 8
  %60 = tail call i8* %59(%"class.base::RefCountedMemory"* %56) #11
  %61 = load i64, i64* %12, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %7, align 1
  %64 = add i64 %61, 1
  store i64 %64, i64* %12, align 8
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i8* (%"class.base::RefCountedMemory"*)***
  %67 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %67, align 8
  %69 = tail call i8* %68(%"class.base::RefCountedMemory"* %65) #11
  %70 = load i64, i64* %12, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* %8, align 1
  %73 = add i64 %70, 1
  store i64 %73, i64* %12, align 8
  %74 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %75 = bitcast %"class.base::RefCountedMemory"* %74 to i8* (%"class.base::RefCountedMemory"*)***
  %76 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %75, align 8
  %77 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %76, align 8
  %78 = tail call i8* %77(%"class.base::RefCountedMemory"* %74) #11
  %79 = load i64, i64* %12, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = load i8, i8* %80, align 1
  store i8 %81, i8* %9, align 1
  %82 = add i64 %79, 1
  store i64 %82, i64* %12, align 8
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #11
  %88 = load i64, i64* %12, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 1
  %92 = add i64 %88, 2
  store i64 %92, i64* %12, align 8
  %93 = zext i16 %91 to i32
  store i32 %93, i32* %11, align 4
  %94 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %95 = bitcast %"class.base::RefCountedMemory"* %94 to i8* (%"class.base::RefCountedMemory"*)***
  %96 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %95, align 8
  %97 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %96, align 8
  %98 = tail call i8* %97(%"class.base::RefCountedMemory"* %94) #11
  %99 = load i64, i64* %12, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 1
  %103 = zext i16 %102 to i32
  %104 = add i64 %99, 18
  store i64 %104, i64* %12, align 8
  %105 = and i32 %103, 13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %1285, label %107

107:                                              ; preds = %1
  %108 = getelementptr inbounds i8, i8* %2, i64 16
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %2, i64 24
  %113 = bitcast i8* %112 to %"struct.x11::Xkb::GetKbdByNameReply::Types"*
  tail call void @_ZN3x113Xkb17GetKbdByNameReply5TypesD2Ev(%"struct.x11::Xkb::GetKbdByNameReply::Types"* %113) #11
  store i8 0, i8* %108, align 8
  br label %114

114:                                              ; preds = %111, %107
  %115 = getelementptr inbounds i8, i8* %2, i64 24
  %116 = getelementptr inbounds i8, i8* %2, i64 60
  %117 = bitcast i8* %116 to i32*
  %118 = getelementptr inbounds i8, i8* %2, i64 64
  %119 = getelementptr inbounds i8, i8* %2, i64 72
  %120 = getelementptr inbounds i8, i8* %2, i64 104
  %121 = getelementptr inbounds i8, i8* %2, i64 136
  %122 = getelementptr inbounds i8, i8* %2, i64 168
  %123 = getelementptr inbounds i8, i8* %2, i64 200
  %124 = getelementptr inbounds i8, i8* %2, i64 232
  %125 = getelementptr inbounds i8, i8* %2, i64 264
  %126 = getelementptr inbounds i8, i8* %2, i64 296
  %127 = getelementptr inbounds i8, i8* %2, i64 328
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 328, i1 false)
  store i8 1, i8* %108, align 8
  %128 = getelementptr inbounds i8, i8* %2, i64 25
  %129 = getelementptr inbounds i8, i8* %2, i64 26
  %130 = bitcast i8* %129 to i16*
  %131 = getelementptr inbounds i8, i8* %2, i64 28
  %132 = bitcast i8* %131 to i32*
  %133 = getelementptr inbounds i8, i8* %2, i64 32
  %134 = getelementptr inbounds i8, i8* %2, i64 33
  %135 = getelementptr inbounds i8, i8* %2, i64 34
  %136 = getelementptr inbounds i8, i8* %2, i64 35
  %137 = getelementptr inbounds i8, i8* %2, i64 36
  %138 = getelementptr inbounds i8, i8* %2, i64 37
  %139 = getelementptr inbounds i8, i8* %2, i64 38
  %140 = bitcast i8* %139 to i16*
  %141 = getelementptr inbounds i8, i8* %2, i64 40
  %142 = getelementptr inbounds i8, i8* %2, i64 41
  %143 = getelementptr inbounds i8, i8* %2, i64 42
  %144 = bitcast i8* %143 to i16*
  %145 = getelementptr inbounds i8, i8* %2, i64 44
  %146 = getelementptr inbounds i8, i8* %2, i64 45
  %147 = getelementptr inbounds i8, i8* %2, i64 46
  %148 = getelementptr inbounds i8, i8* %2, i64 47
  %149 = getelementptr inbounds i8, i8* %2, i64 48
  %150 = getelementptr inbounds i8, i8* %2, i64 49
  %151 = getelementptr inbounds i8, i8* %2, i64 50
  %152 = getelementptr inbounds i8, i8* %2, i64 51
  %153 = getelementptr inbounds i8, i8* %2, i64 52
  %154 = getelementptr inbounds i8, i8* %2, i64 53
  %155 = getelementptr inbounds i8, i8* %2, i64 54
  %156 = getelementptr inbounds i8, i8* %2, i64 55
  %157 = getelementptr inbounds i8, i8* %2, i64 56
  %158 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %159 = bitcast %"class.base::RefCountedMemory"* %158 to i8* (%"class.base::RefCountedMemory"*)***
  %160 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %159, align 8
  %161 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %160, align 8
  %162 = tail call i8* %161(%"class.base::RefCountedMemory"* %158) #11
  %163 = load i64, i64* %12, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = load i8, i8* %164, align 1
  store i8 %165, i8* %115, align 1
  %166 = add i64 %163, 1
  store i64 %166, i64* %12, align 8
  %167 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %168 = bitcast %"class.base::RefCountedMemory"* %167 to i8* (%"class.base::RefCountedMemory"*)***
  %169 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %168, align 8
  %170 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %169, align 8
  %171 = tail call i8* %170(%"class.base::RefCountedMemory"* %167) #11
  %172 = load i64, i64* %12, align 8
  %173 = getelementptr inbounds i8, i8* %171, i64 %172
  %174 = load i8, i8* %173, align 1
  store i8 %174, i8* %128, align 1
  %175 = add i64 %172, 1
  store i64 %175, i64* %12, align 8
  %176 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %177 = bitcast %"class.base::RefCountedMemory"* %176 to i8* (%"class.base::RefCountedMemory"*)***
  %178 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %177, align 8
  %179 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %178, align 8
  %180 = tail call i8* %179(%"class.base::RefCountedMemory"* %176) #11
  %181 = load i64, i64* %12, align 8
  %182 = getelementptr inbounds i8, i8* %180, i64 %181
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 1
  store i16 %184, i16* %130, align 2
  %185 = add i64 %181, 2
  store i64 %185, i64* %12, align 8
  %186 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %187 = bitcast %"class.base::RefCountedMemory"* %186 to i8* (%"class.base::RefCountedMemory"*)***
  %188 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %187, align 8
  %189 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %188, align 8
  %190 = tail call i8* %189(%"class.base::RefCountedMemory"* %186) #11
  %191 = load i64, i64* %12, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 %191
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 1
  store i32 %194, i32* %132, align 4
  %195 = add i64 %191, 6
  store i64 %195, i64* %12, align 8
  %196 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %197 = bitcast %"class.base::RefCountedMemory"* %196 to i8* (%"class.base::RefCountedMemory"*)***
  %198 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %197, align 8
  %199 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %198, align 8
  %200 = tail call i8* %199(%"class.base::RefCountedMemory"* %196) #11
  %201 = load i64, i64* %12, align 8
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  %203 = load i8, i8* %202, align 1
  store i8 %203, i8* %133, align 1
  %204 = add i64 %201, 1
  store i64 %204, i64* %12, align 8
  %205 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %206 = bitcast %"class.base::RefCountedMemory"* %205 to i8* (%"class.base::RefCountedMemory"*)***
  %207 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %206, align 8
  %208 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %207, align 8
  %209 = tail call i8* %208(%"class.base::RefCountedMemory"* %205) #11
  %210 = load i64, i64* %12, align 8
  %211 = getelementptr inbounds i8, i8* %209, i64 %210
  %212 = load i8, i8* %211, align 1
  store i8 %212, i8* %134, align 1
  %213 = add i64 %210, 1
  store i64 %213, i64* %12, align 8
  %214 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %215 = bitcast %"class.base::RefCountedMemory"* %214 to i8* (%"class.base::RefCountedMemory"*)***
  %216 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %215, align 8
  %217 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %216, align 8
  %218 = tail call i8* %217(%"class.base::RefCountedMemory"* %214) #11
  %219 = load i64, i64* %12, align 8
  %220 = getelementptr inbounds i8, i8* %218, i64 %219
  %221 = bitcast i8* %220 to i16*
  %222 = load i16, i16* %221, align 1
  %223 = add i64 %219, 2
  store i64 %223, i64* %12, align 8
  %224 = zext i16 %222 to i32
  %225 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %226 = bitcast %"class.base::RefCountedMemory"* %225 to i8* (%"class.base::RefCountedMemory"*)***
  %227 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %226, align 8
  %228 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %227, align 8
  %229 = tail call i8* %228(%"class.base::RefCountedMemory"* %225) #11
  %230 = load i64, i64* %12, align 8
  %231 = getelementptr inbounds i8, i8* %229, i64 %230
  %232 = load i8, i8* %231, align 1
  store i8 %232, i8* %135, align 1
  %233 = add i64 %230, 1
  store i64 %233, i64* %12, align 8
  %234 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %235 = bitcast %"class.base::RefCountedMemory"* %234 to i8* (%"class.base::RefCountedMemory"*)***
  %236 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %235, align 8
  %237 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %236, align 8
  %238 = tail call i8* %237(%"class.base::RefCountedMemory"* %234) #11
  %239 = load i64, i64* %12, align 8
  %240 = getelementptr inbounds i8, i8* %238, i64 %239
  %241 = load i8, i8* %240, align 1
  store i8 %241, i8* %136, align 1
  %242 = add i64 %239, 1
  store i64 %242, i64* %12, align 8
  %243 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %244 = bitcast %"class.base::RefCountedMemory"* %243 to i8* (%"class.base::RefCountedMemory"*)***
  %245 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %244, align 8
  %246 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %245, align 8
  %247 = tail call i8* %246(%"class.base::RefCountedMemory"* %243) #11
  %248 = load i64, i64* %12, align 8
  %249 = getelementptr inbounds i8, i8* %247, i64 %248
  %250 = load i8, i8* %249, align 1
  store i8 %250, i8* %137, align 1
  %251 = add i64 %248, 1
  store i64 %251, i64* %12, align 8
  %252 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %253 = bitcast %"class.base::RefCountedMemory"* %252 to i8* (%"class.base::RefCountedMemory"*)***
  %254 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %253, align 8
  %255 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %254, align 8
  %256 = tail call i8* %255(%"class.base::RefCountedMemory"* %252) #11
  %257 = load i64, i64* %12, align 8
  %258 = getelementptr inbounds i8, i8* %256, i64 %257
  %259 = load i8, i8* %258, align 1
  store i8 %259, i8* %138, align 1
  %260 = add i64 %257, 1
  store i64 %260, i64* %12, align 8
  %261 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %262 = bitcast %"class.base::RefCountedMemory"* %261 to i8* (%"class.base::RefCountedMemory"*)***
  %263 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %262, align 8
  %264 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %263, align 8
  %265 = tail call i8* %264(%"class.base::RefCountedMemory"* %261) #11
  %266 = load i64, i64* %12, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = bitcast i8* %267 to i16*
  %269 = load i16, i16* %268, align 1
  store i16 %269, i16* %140, align 2
  %270 = add i64 %266, 2
  store i64 %270, i64* %12, align 8
  %271 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %272 = bitcast %"class.base::RefCountedMemory"* %271 to i8* (%"class.base::RefCountedMemory"*)***
  %273 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %272, align 8
  %274 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %273, align 8
  %275 = tail call i8* %274(%"class.base::RefCountedMemory"* %271) #11
  %276 = load i64, i64* %12, align 8
  %277 = getelementptr inbounds i8, i8* %275, i64 %276
  %278 = load i8, i8* %277, align 1
  store i8 %278, i8* %141, align 1
  %279 = add i64 %276, 1
  store i64 %279, i64* %12, align 8
  %280 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %281 = bitcast %"class.base::RefCountedMemory"* %280 to i8* (%"class.base::RefCountedMemory"*)***
  %282 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %281, align 8
  %283 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %282, align 8
  %284 = tail call i8* %283(%"class.base::RefCountedMemory"* %280) #11
  %285 = load i64, i64* %12, align 8
  %286 = getelementptr inbounds i8, i8* %284, i64 %285
  %287 = load i8, i8* %286, align 1
  store i8 %287, i8* %142, align 1
  %288 = add i64 %285, 1
  store i64 %288, i64* %12, align 8
  %289 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %290 = bitcast %"class.base::RefCountedMemory"* %289 to i8* (%"class.base::RefCountedMemory"*)***
  %291 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %290, align 8
  %292 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %291, align 8
  %293 = tail call i8* %292(%"class.base::RefCountedMemory"* %289) #11
  %294 = load i64, i64* %12, align 8
  %295 = getelementptr inbounds i8, i8* %293, i64 %294
  %296 = bitcast i8* %295 to i16*
  %297 = load i16, i16* %296, align 1
  store i16 %297, i16* %144, align 2
  %298 = add i64 %294, 2
  store i64 %298, i64* %12, align 8
  %299 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %300 = bitcast %"class.base::RefCountedMemory"* %299 to i8* (%"class.base::RefCountedMemory"*)***
  %301 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %300, align 8
  %302 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %301, align 8
  %303 = tail call i8* %302(%"class.base::RefCountedMemory"* %299) #11
  %304 = load i64, i64* %12, align 8
  %305 = getelementptr inbounds i8, i8* %303, i64 %304
  %306 = load i8, i8* %305, align 1
  store i8 %306, i8* %145, align 1
  %307 = add i64 %304, 1
  store i64 %307, i64* %12, align 8
  %308 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %309 = bitcast %"class.base::RefCountedMemory"* %308 to i8* (%"class.base::RefCountedMemory"*)***
  %310 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %309, align 8
  %311 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %310, align 8
  %312 = tail call i8* %311(%"class.base::RefCountedMemory"* %308) #11
  %313 = load i64, i64* %12, align 8
  %314 = getelementptr inbounds i8, i8* %312, i64 %313
  %315 = load i8, i8* %314, align 1
  store i8 %315, i8* %146, align 1
  %316 = add i64 %313, 1
  store i64 %316, i64* %12, align 8
  %317 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %318 = bitcast %"class.base::RefCountedMemory"* %317 to i8* (%"class.base::RefCountedMemory"*)***
  %319 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %318, align 8
  %320 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %319, align 8
  %321 = tail call i8* %320(%"class.base::RefCountedMemory"* %317) #11
  %322 = load i64, i64* %12, align 8
  %323 = getelementptr inbounds i8, i8* %321, i64 %322
  %324 = load i8, i8* %323, align 1
  store i8 %324, i8* %147, align 1
  %325 = add i64 %322, 1
  store i64 %325, i64* %12, align 8
  %326 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %327 = bitcast %"class.base::RefCountedMemory"* %326 to i8* (%"class.base::RefCountedMemory"*)***
  %328 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %327, align 8
  %329 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %328, align 8
  %330 = tail call i8* %329(%"class.base::RefCountedMemory"* %326) #11
  %331 = load i64, i64* %12, align 8
  %332 = getelementptr inbounds i8, i8* %330, i64 %331
  %333 = load i8, i8* %332, align 1
  store i8 %333, i8* %148, align 1
  %334 = add i64 %331, 1
  store i64 %334, i64* %12, align 8
  %335 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %336 = bitcast %"class.base::RefCountedMemory"* %335 to i8* (%"class.base::RefCountedMemory"*)***
  %337 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %336, align 8
  %338 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %337, align 8
  %339 = tail call i8* %338(%"class.base::RefCountedMemory"* %335) #11
  %340 = load i64, i64* %12, align 8
  %341 = getelementptr inbounds i8, i8* %339, i64 %340
  %342 = load i8, i8* %341, align 1
  store i8 %342, i8* %149, align 1
  %343 = add i64 %340, 1
  store i64 %343, i64* %12, align 8
  %344 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %345 = bitcast %"class.base::RefCountedMemory"* %344 to i8* (%"class.base::RefCountedMemory"*)***
  %346 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %345, align 8
  %347 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %346, align 8
  %348 = tail call i8* %347(%"class.base::RefCountedMemory"* %344) #11
  %349 = load i64, i64* %12, align 8
  %350 = getelementptr inbounds i8, i8* %348, i64 %349
  %351 = load i8, i8* %350, align 1
  store i8 %351, i8* %150, align 1
  %352 = add i64 %349, 1
  store i64 %352, i64* %12, align 8
  %353 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %354 = bitcast %"class.base::RefCountedMemory"* %353 to i8* (%"class.base::RefCountedMemory"*)***
  %355 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %354, align 8
  %356 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %355, align 8
  %357 = tail call i8* %356(%"class.base::RefCountedMemory"* %353) #11
  %358 = load i64, i64* %12, align 8
  %359 = getelementptr inbounds i8, i8* %357, i64 %358
  %360 = load i8, i8* %359, align 1
  store i8 %360, i8* %151, align 1
  %361 = add i64 %358, 1
  store i64 %361, i64* %12, align 8
  %362 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %363 = bitcast %"class.base::RefCountedMemory"* %362 to i8* (%"class.base::RefCountedMemory"*)***
  %364 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %363, align 8
  %365 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %364, align 8
  %366 = tail call i8* %365(%"class.base::RefCountedMemory"* %362) #11
  %367 = load i64, i64* %12, align 8
  %368 = getelementptr inbounds i8, i8* %366, i64 %367
  %369 = load i8, i8* %368, align 1
  store i8 %369, i8* %152, align 1
  %370 = add i64 %367, 1
  store i64 %370, i64* %12, align 8
  %371 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %372 = bitcast %"class.base::RefCountedMemory"* %371 to i8* (%"class.base::RefCountedMemory"*)***
  %373 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %372, align 8
  %374 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %373, align 8
  %375 = tail call i8* %374(%"class.base::RefCountedMemory"* %371) #11
  %376 = load i64, i64* %12, align 8
  %377 = getelementptr inbounds i8, i8* %375, i64 %376
  %378 = load i8, i8* %377, align 1
  store i8 %378, i8* %153, align 1
  %379 = add i64 %376, 1
  store i64 %379, i64* %12, align 8
  %380 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %381 = bitcast %"class.base::RefCountedMemory"* %380 to i8* (%"class.base::RefCountedMemory"*)***
  %382 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %381, align 8
  %383 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %382, align 8
  %384 = tail call i8* %383(%"class.base::RefCountedMemory"* %380) #11
  %385 = load i64, i64* %12, align 8
  %386 = getelementptr inbounds i8, i8* %384, i64 %385
  %387 = load i8, i8* %386, align 1
  store i8 %387, i8* %154, align 1
  %388 = add i64 %385, 1
  store i64 %388, i64* %12, align 8
  %389 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %390 = bitcast %"class.base::RefCountedMemory"* %389 to i8* (%"class.base::RefCountedMemory"*)***
  %391 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %390, align 8
  %392 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %391, align 8
  %393 = tail call i8* %392(%"class.base::RefCountedMemory"* %389) #11
  %394 = load i64, i64* %12, align 8
  %395 = getelementptr inbounds i8, i8* %393, i64 %394
  %396 = load i8, i8* %395, align 1
  store i8 %396, i8* %155, align 1
  %397 = add i64 %394, 1
  store i64 %397, i64* %12, align 8
  %398 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %399 = bitcast %"class.base::RefCountedMemory"* %398 to i8* (%"class.base::RefCountedMemory"*)***
  %400 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %399, align 8
  %401 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %400, align 8
  %402 = tail call i8* %401(%"class.base::RefCountedMemory"* %398) #11
  %403 = load i64, i64* %12, align 8
  %404 = getelementptr inbounds i8, i8* %402, i64 %403
  %405 = load i8, i8* %404, align 1
  store i8 %405, i8* %156, align 1
  %406 = add i64 %403, 1
  store i64 %406, i64* %12, align 8
  %407 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %408 = bitcast %"class.base::RefCountedMemory"* %407 to i8* (%"class.base::RefCountedMemory"*)***
  %409 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %408, align 8
  %410 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %409, align 8
  %411 = tail call i8* %410(%"class.base::RefCountedMemory"* %407) #11
  %412 = load i64, i64* %12, align 8
  %413 = getelementptr inbounds i8, i8* %411, i64 %412
  %414 = load i8, i8* %413, align 1
  store i8 %414, i8* %157, align 1
  %415 = add i64 %412, 2
  store i64 %415, i64* %12, align 8
  %416 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %417 = bitcast %"class.base::RefCountedMemory"* %416 to i8* (%"class.base::RefCountedMemory"*)***
  %418 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %417, align 8
  %419 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %418, align 8
  %420 = tail call i8* %419(%"class.base::RefCountedMemory"* %416) #11
  %421 = load i64, i64* %12, align 8
  %422 = getelementptr inbounds i8, i8* %420, i64 %421
  %423 = bitcast i8* %422 to i16*
  %424 = load i16, i16* %423, align 1
  %425 = add i64 %421, 2
  store i64 %425, i64* %12, align 8
  %426 = zext i16 %424 to i32
  store i32 %426, i32* %117, align 4
  %427 = and i32 %224, 1
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %705, label %429

429:                                              ; preds = %114
  %430 = load i8, i8* %118, align 8, !range !2
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %470, label %432

432:                                              ; preds = %429
  %433 = bitcast i8* %119 to %"struct.x11::Xkb::KeyType"**
  %434 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %433, align 8
  %435 = icmp eq %"struct.x11::Xkb::KeyType"* %434, null
  br i1 %435, label %469, label %436

436:                                              ; preds = %432
  %437 = bitcast %"struct.x11::Xkb::KeyType"* %434 to i8*
  %438 = getelementptr inbounds i8, i8* %2, i64 80
  %439 = bitcast i8* %438 to %"struct.x11::Xkb::KeyType"**
  %440 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %439, align 8
  %441 = icmp eq %"struct.x11::Xkb::KeyType"* %440, %434
  br i1 %441, label %467, label %442

442:                                              ; preds = %436, %462
  %443 = phi %"struct.x11::Xkb::KeyType"* [ %444, %462 ], [ %440, %436 ]
  %444 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %443, i64 -1
  %445 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %443, i64 -1, i32 6, i32 0, i32 0
  %446 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %445, align 8
  %447 = icmp eq %"struct.x11::Xkb::ModDef"* %446, null
  br i1 %447, label %453, label %448

448:                                              ; preds = %442
  %449 = ptrtoint %"struct.x11::Xkb::ModDef"* %446 to i64
  %450 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %443, i64 -1, i32 6, i32 0, i32 1
  %451 = bitcast %"struct.x11::Xkb::ModDef"** %450 to i64*
  store i64 %449, i64* %451, align 8
  %452 = bitcast %"struct.x11::Xkb::ModDef"* %446 to i8*
  tail call void @_ZdlPv(i8* %452) #12
  br label %453

453:                                              ; preds = %448, %442
  %454 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %443, i64 -1, i32 5, i32 0, i32 0
  %455 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %454, align 8
  %456 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %455, null
  br i1 %456, label %462, label %457

457:                                              ; preds = %453
  %458 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %455 to i64
  %459 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %443, i64 -1, i32 5, i32 0, i32 1
  %460 = bitcast %"struct.x11::Xkb::KTMapEntry"** %459 to i64*
  store i64 %458, i64* %460, align 8
  %461 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %455, i64 0, i32 0
  tail call void @_ZdlPv(i8* %461) #12
  br label %462

462:                                              ; preds = %457, %453
  %463 = icmp eq %"struct.x11::Xkb::KeyType"* %444, %434
  br i1 %463, label %464, label %442

464:                                              ; preds = %462
  %465 = bitcast i8* %119 to i8**
  %466 = load i8*, i8** %465, align 8
  br label %467

467:                                              ; preds = %464, %436
  %468 = phi i8* [ %466, %464 ], [ %437, %436 ]
  store %"struct.x11::Xkb::KeyType"* %434, %"struct.x11::Xkb::KeyType"** %439, align 8
  tail call void @_ZdlPv(i8* %468) #12
  br label %469

469:                                              ; preds = %467, %432
  store i8 0, i8* %118, align 8
  br label %470

470:                                              ; preds = %469, %429
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %118, align 8
  %471 = load i8, i8* %136, align 1
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %705, label %473

473:                                              ; preds = %470
  %474 = zext i8 %471 to i64
  %475 = getelementptr inbounds i8, i8* %2, i64 80
  %476 = bitcast i8* %475 to %"struct.x11::Xkb::KeyType"**
  %477 = bitcast i8* %119 to %"class.std::__1::vector.356"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb7KeyTypeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.356"* %477, i64 %474) #11
  %478 = bitcast i8* %119 to %"struct.x11::Xkb::KeyType"**
  %479 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %478, align 8
  %480 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %476, align 8
  %481 = icmp eq %"struct.x11::Xkb::KeyType"* %479, %480
  br i1 %481, label %705, label %482

482:                                              ; preds = %473, %664
  %483 = phi %"struct.x11::Xkb::KeyType"* [ %665, %664 ], [ %479, %473 ]
  %484 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 0
  %485 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 1
  %486 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 2
  %487 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 3
  %488 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 4
  %489 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 5
  %490 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 5, i32 0, i32 1
  %491 = bitcast %"struct.x11::Xkb::KTMapEntry"** %490 to i64*
  %492 = bitcast %"class.std::__1::vector.358"* %489 to i64*
  %493 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 6
  %494 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 0, i32 6, i32 0, i32 1
  %495 = bitcast %"struct.x11::Xkb::ModDef"** %494 to i64*
  %496 = bitcast %"class.std::__1::vector.365"* %493 to i64*
  %497 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %498 = bitcast %"class.base::RefCountedMemory"* %497 to i8* (%"class.base::RefCountedMemory"*)***
  %499 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %498, align 8
  %500 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %499, align 8
  %501 = tail call i8* %500(%"class.base::RefCountedMemory"* %497) #11
  %502 = load i64, i64* %12, align 8
  %503 = getelementptr inbounds i8, i8* %501, i64 %502
  %504 = load i8, i8* %503, align 1
  %505 = add i64 %502, 1
  store i64 %505, i64* %12, align 8
  %506 = zext i8 %504 to i32
  store i32 %506, i32* %484, align 4
  %507 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %508 = bitcast %"class.base::RefCountedMemory"* %507 to i8* (%"class.base::RefCountedMemory"*)***
  %509 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %508, align 8
  %510 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %509, align 8
  %511 = tail call i8* %510(%"class.base::RefCountedMemory"* %507) #11
  %512 = load i64, i64* %12, align 8
  %513 = getelementptr inbounds i8, i8* %511, i64 %512
  %514 = load i8, i8* %513, align 1
  %515 = add i64 %512, 1
  store i64 %515, i64* %12, align 8
  %516 = zext i8 %514 to i32
  store i32 %516, i32* %485, align 4
  %517 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %518 = bitcast %"class.base::RefCountedMemory"* %517 to i8* (%"class.base::RefCountedMemory"*)***
  %519 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %518, align 8
  %520 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %519, align 8
  %521 = tail call i8* %520(%"class.base::RefCountedMemory"* %517) #11
  %522 = load i64, i64* %12, align 8
  %523 = getelementptr inbounds i8, i8* %521, i64 %522
  %524 = bitcast i8* %523 to i16*
  %525 = load i16, i16* %524, align 1
  %526 = add i64 %522, 2
  store i64 %526, i64* %12, align 8
  %527 = zext i16 %525 to i32
  store i32 %527, i32* %486, align 4
  %528 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %529 = bitcast %"class.base::RefCountedMemory"* %528 to i8* (%"class.base::RefCountedMemory"*)***
  %530 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %529, align 8
  %531 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %530, align 8
  %532 = tail call i8* %531(%"class.base::RefCountedMemory"* %528) #11
  %533 = load i64, i64* %12, align 8
  %534 = getelementptr inbounds i8, i8* %532, i64 %533
  %535 = load i8, i8* %534, align 1
  store i8 %535, i8* %487, align 1
  %536 = load i64, i64* %12, align 8
  %537 = add i64 %536, 1
  store i64 %537, i64* %12, align 8
  %538 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %539 = bitcast %"class.base::RefCountedMemory"* %538 to i8* (%"class.base::RefCountedMemory"*)***
  %540 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %539, align 8
  %541 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %540, align 8
  %542 = tail call i8* %541(%"class.base::RefCountedMemory"* %538) #11
  %543 = load i64, i64* %12, align 8
  %544 = getelementptr inbounds i8, i8* %542, i64 %543
  %545 = load i8, i8* %544, align 1
  %546 = add i64 %543, 1
  store i64 %546, i64* %12, align 8
  %547 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %548 = bitcast %"class.base::RefCountedMemory"* %547 to i8* (%"class.base::RefCountedMemory"*)***
  %549 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %548, align 8
  %550 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %549, align 8
  %551 = tail call i8* %550(%"class.base::RefCountedMemory"* %547) #11
  %552 = load i64, i64* %12, align 8
  %553 = getelementptr inbounds i8, i8* %551, i64 %552
  %554 = load i8, i8* %553, align 1
  store i8 %554, i8* %488, align 1
  %555 = load i64, i64* %12, align 8
  %556 = add i64 %555, 2
  store i64 %556, i64* %12, align 8
  %557 = zext i8 %545 to i64
  %558 = load i64, i64* %491, align 8
  %559 = load i64, i64* %492, align 8
  %560 = sub i64 %558, %559
  %561 = sdiv exact i64 %560, 20
  %562 = icmp ult i64 %561, %557
  %563 = inttoptr i64 %559 to %"struct.x11::Xkb::KTMapEntry"*
  br i1 %562, label %564, label %569

564:                                              ; preds = %482
  %565 = sub nsw i64 %557, %561
  tail call void @_ZNSt3__16vectorIN3x113Xkb10KTMapEntryENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.358"* %489, i64 %565) #11
  %566 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %489, i64 0, i32 0, i32 0
  %567 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %566, align 8
  %568 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %490, align 8
  br label %574

569:                                              ; preds = %482
  %570 = inttoptr i64 %558 to %"struct.x11::Xkb::KTMapEntry"*
  %571 = icmp ugt i64 %561, %557
  br i1 %571, label %572, label %574

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %563, i64 %557
  store %"struct.x11::Xkb::KTMapEntry"* %573, %"struct.x11::Xkb::KTMapEntry"** %490, align 8
  br label %574

574:                                              ; preds = %564, %569, %572
  %575 = phi %"struct.x11::Xkb::KTMapEntry"* [ %568, %564 ], [ %570, %569 ], [ %573, %572 ]
  %576 = phi %"struct.x11::Xkb::KTMapEntry"* [ %567, %564 ], [ %563, %569 ], [ %563, %572 ]
  %577 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %576, %575
  br i1 %577, label %578, label %602

578:                                              ; preds = %602, %574
  %579 = load i8, i8* %488, align 1
  %580 = zext i8 %579 to i64
  %581 = mul nuw nsw i64 %580, %557
  %582 = load i64, i64* %495, align 8
  %583 = load i64, i64* %496, align 8
  %584 = sub i64 %582, %583
  %585 = sdiv exact i64 %584, 12
  %586 = icmp ugt i64 %581, %585
  %587 = inttoptr i64 %583 to %"struct.x11::Xkb::ModDef"*
  br i1 %586, label %588, label %593

588:                                              ; preds = %578
  %589 = sub nsw i64 %581, %585
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.365"* %493, i64 %589) #11
  %590 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %493, i64 0, i32 0, i32 0
  %591 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %590, align 8
  %592 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %494, align 8
  br label %598

593:                                              ; preds = %578
  %594 = inttoptr i64 %582 to %"struct.x11::Xkb::ModDef"*
  %595 = icmp ult i64 %581, %585
  br i1 %595, label %596, label %598

596:                                              ; preds = %593
  %597 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %587, i64 %581
  store %"struct.x11::Xkb::ModDef"* %597, %"struct.x11::Xkb::ModDef"** %494, align 8
  br label %598

598:                                              ; preds = %588, %593, %596
  %599 = phi %"struct.x11::Xkb::ModDef"* [ %592, %588 ], [ %594, %593 ], [ %597, %596 ]
  %600 = phi %"struct.x11::Xkb::ModDef"* [ %591, %588 ], [ %587, %593 ], [ %587, %596 ]
  %601 = icmp eq %"struct.x11::Xkb::ModDef"* %600, %599
  br i1 %601, label %664, label %667

602:                                              ; preds = %574, %602
  %603 = phi %"struct.x11::Xkb::KTMapEntry"* [ %662, %602 ], [ %576, %574 ]
  %604 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 0, i32 0
  %605 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 0, i32 1
  %606 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 0, i32 2
  %607 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 0, i32 3
  %608 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 0, i32 4
  %609 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %610 = bitcast %"class.base::RefCountedMemory"* %609 to i8* (%"class.base::RefCountedMemory"*)***
  %611 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %610, align 8
  %612 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %611, align 8
  %613 = tail call i8* %612(%"class.base::RefCountedMemory"* %609) #11
  %614 = load i64, i64* %12, align 8
  %615 = getelementptr inbounds i8, i8* %613, i64 %614
  %616 = load i8, i8* %615, align 1
  store i8 %616, i8* %604, align 1
  %617 = load i64, i64* %12, align 8
  %618 = add i64 %617, 1
  store i64 %618, i64* %12, align 8
  %619 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %620 = bitcast %"class.base::RefCountedMemory"* %619 to i8* (%"class.base::RefCountedMemory"*)***
  %621 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %620, align 8
  %622 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %621, align 8
  %623 = tail call i8* %622(%"class.base::RefCountedMemory"* %619) #11
  %624 = load i64, i64* %12, align 8
  %625 = getelementptr inbounds i8, i8* %623, i64 %624
  %626 = load i8, i8* %625, align 1
  %627 = add i64 %624, 1
  store i64 %627, i64* %12, align 8
  %628 = zext i8 %626 to i32
  store i32 %628, i32* %605, align 4
  %629 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %630 = bitcast %"class.base::RefCountedMemory"* %629 to i8* (%"class.base::RefCountedMemory"*)***
  %631 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %630, align 8
  %632 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %631, align 8
  %633 = tail call i8* %632(%"class.base::RefCountedMemory"* %629) #11
  %634 = load i64, i64* %12, align 8
  %635 = getelementptr inbounds i8, i8* %633, i64 %634
  %636 = load i8, i8* %635, align 1
  store i8 %636, i8* %606, align 1
  %637 = load i64, i64* %12, align 8
  %638 = add i64 %637, 1
  store i64 %638, i64* %12, align 8
  %639 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %640 = bitcast %"class.base::RefCountedMemory"* %639 to i8* (%"class.base::RefCountedMemory"*)***
  %641 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %640, align 8
  %642 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %641, align 8
  %643 = tail call i8* %642(%"class.base::RefCountedMemory"* %639) #11
  %644 = load i64, i64* %12, align 8
  %645 = getelementptr inbounds i8, i8* %643, i64 %644
  %646 = load i8, i8* %645, align 1
  %647 = add i64 %644, 1
  store i64 %647, i64* %12, align 8
  %648 = zext i8 %646 to i32
  store i32 %648, i32* %607, align 4
  %649 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %650 = bitcast %"class.base::RefCountedMemory"* %649 to i8* (%"class.base::RefCountedMemory"*)***
  %651 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %650, align 8
  %652 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %651, align 8
  %653 = tail call i8* %652(%"class.base::RefCountedMemory"* %649) #11
  %654 = load i64, i64* %12, align 8
  %655 = getelementptr inbounds i8, i8* %653, i64 %654
  %656 = bitcast i8* %655 to i16*
  %657 = load i16, i16* %656, align 1
  %658 = add i64 %654, 2
  store i64 %658, i64* %12, align 8
  %659 = zext i16 %657 to i32
  store i32 %659, i32* %608, align 4
  %660 = load i64, i64* %12, align 8
  %661 = add i64 %660, 2
  store i64 %661, i64* %12, align 8
  %662 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %603, i64 1
  %663 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %662, %575
  br i1 %663, label %578, label %602

664:                                              ; preds = %667, %598
  %665 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %483, i64 1
  %666 = icmp eq %"struct.x11::Xkb::KeyType"* %665, %480
  br i1 %666, label %705, label %482

667:                                              ; preds = %598, %667
  %668 = phi %"struct.x11::Xkb::ModDef"* [ %703, %667 ], [ %600, %598 ]
  %669 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %668, i64 0, i32 0
  %670 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %668, i64 0, i32 1
  %671 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %668, i64 0, i32 2
  %672 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %673 = bitcast %"class.base::RefCountedMemory"* %672 to i8* (%"class.base::RefCountedMemory"*)***
  %674 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %673, align 8
  %675 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %674, align 8
  %676 = tail call i8* %675(%"class.base::RefCountedMemory"* %672) #11
  %677 = load i64, i64* %12, align 8
  %678 = getelementptr inbounds i8, i8* %676, i64 %677
  %679 = load i8, i8* %678, align 1
  %680 = add i64 %677, 1
  store i64 %680, i64* %12, align 8
  %681 = zext i8 %679 to i32
  store i32 %681, i32* %669, align 4
  %682 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %683 = bitcast %"class.base::RefCountedMemory"* %682 to i8* (%"class.base::RefCountedMemory"*)***
  %684 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %683, align 8
  %685 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %684, align 8
  %686 = tail call i8* %685(%"class.base::RefCountedMemory"* %682) #11
  %687 = load i64, i64* %12, align 8
  %688 = getelementptr inbounds i8, i8* %686, i64 %687
  %689 = load i8, i8* %688, align 1
  %690 = add i64 %687, 1
  store i64 %690, i64* %12, align 8
  %691 = zext i8 %689 to i32
  store i32 %691, i32* %670, align 4
  %692 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %693 = bitcast %"class.base::RefCountedMemory"* %692 to i8* (%"class.base::RefCountedMemory"*)***
  %694 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %693, align 8
  %695 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %694, align 8
  %696 = tail call i8* %695(%"class.base::RefCountedMemory"* %692) #11
  %697 = load i64, i64* %12, align 8
  %698 = getelementptr inbounds i8, i8* %696, i64 %697
  %699 = bitcast i8* %698 to i16*
  %700 = load i16, i16* %699, align 1
  %701 = add i64 %697, 2
  store i64 %701, i64* %12, align 8
  %702 = zext i16 %700 to i32
  store i32 %702, i32* %671, align 4
  %703 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %668, i64 1
  %704 = icmp eq %"struct.x11::Xkb::ModDef"* %703, %599
  br i1 %704, label %664, label %667

705:                                              ; preds = %664, %470, %473, %114
  %706 = and i32 %224, 2
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %873, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds i8, i8* %2, i64 96
  %710 = load i8, i8* %709, align 8, !range !2
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %740, label %712

712:                                              ; preds = %708
  %713 = bitcast i8* %120 to %"struct.x11::Xkb::KeySymMap"**
  %714 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %713, align 8
  %715 = icmp eq %"struct.x11::Xkb::KeySymMap"* %714, null
  br i1 %715, label %739, label %716

716:                                              ; preds = %712
  %717 = getelementptr inbounds i8, i8* %2, i64 112
  %718 = bitcast i8* %717 to %"struct.x11::Xkb::KeySymMap"**
  %719 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %718, align 8
  %720 = icmp eq %"struct.x11::Xkb::KeySymMap"* %719, %714
  br i1 %720, label %736, label %721

721:                                              ; preds = %716, %732
  %722 = phi %"struct.x11::Xkb::KeySymMap"* [ %723, %732 ], [ %719, %716 ]
  %723 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %722, i64 -1
  %724 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %722, i64 -1, i32 3, i32 0, i32 0
  %725 = load i32*, i32** %724, align 8
  %726 = icmp eq i32* %725, null
  br i1 %726, label %732, label %727

727:                                              ; preds = %721
  %728 = ptrtoint i32* %725 to i64
  %729 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %722, i64 -1, i32 3, i32 0, i32 1
  %730 = bitcast i32** %729 to i64*
  store i64 %728, i64* %730, align 8
  %731 = bitcast i32* %725 to i8*
  tail call void @_ZdlPv(i8* %731) #12
  br label %732

732:                                              ; preds = %727, %721
  %733 = icmp eq %"struct.x11::Xkb::KeySymMap"* %723, %714
  br i1 %733, label %734, label %721

734:                                              ; preds = %732
  %735 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %713, align 8
  br label %736

736:                                              ; preds = %734, %716
  %737 = phi %"struct.x11::Xkb::KeySymMap"* [ %735, %734 ], [ %714, %716 ]
  store %"struct.x11::Xkb::KeySymMap"* %714, %"struct.x11::Xkb::KeySymMap"** %718, align 8
  %738 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %737, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %738) #12
  br label %739

739:                                              ; preds = %736, %712
  store i8 0, i8* %709, align 8
  br label %740

740:                                              ; preds = %739, %708
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %709, align 8
  %741 = load i8, i8* %141, align 1
  %742 = icmp eq i8 %741, 0
  br i1 %742, label %873, label %743

743:                                              ; preds = %740
  %744 = zext i8 %741 to i64
  %745 = getelementptr inbounds i8, i8* %2, i64 112
  %746 = bitcast i8* %745 to %"struct.x11::Xkb::KeySymMap"**
  %747 = bitcast i8* %120 to %"class.std::__1::vector.382"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.382"* %747, i64 %744) #11
  %748 = bitcast i8* %120 to %"struct.x11::Xkb::KeySymMap"**
  %749 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %748, align 8
  %750 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %746, align 8
  %751 = icmp eq %"struct.x11::Xkb::KeySymMap"* %749, %750
  br i1 %751, label %873, label %752

752:                                              ; preds = %743, %855
  %753 = phi %"struct.x11::Xkb::KeySymMap"* [ %856, %855 ], [ %749, %743 ]
  %754 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 2
  %755 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 3, i32 0, i32 1
  %756 = bitcast i32** %755 to i64*
  %757 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 0, i32 0, i64 0
  %758 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %759 = bitcast %"class.base::RefCountedMemory"* %758 to i8* (%"class.base::RefCountedMemory"*)***
  %760 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %759, align 8
  %761 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %760, align 8
  %762 = tail call i8* %761(%"class.base::RefCountedMemory"* %758) #11
  %763 = load i64, i64* %12, align 8
  %764 = getelementptr inbounds i8, i8* %762, i64 %763
  %765 = load i8, i8* %764, align 1
  store i8 %765, i8* %757, align 1
  %766 = load i64, i64* %12, align 8
  %767 = add i64 %766, 1
  store i64 %767, i64* %12, align 8
  %768 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 0, i32 0, i64 1
  %769 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %770 = bitcast %"class.base::RefCountedMemory"* %769 to i8* (%"class.base::RefCountedMemory"*)***
  %771 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %770, align 8
  %772 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %771, align 8
  %773 = tail call i8* %772(%"class.base::RefCountedMemory"* %769) #11
  %774 = load i64, i64* %12, align 8
  %775 = getelementptr inbounds i8, i8* %773, i64 %774
  %776 = load i8, i8* %775, align 1
  store i8 %776, i8* %768, align 1
  %777 = load i64, i64* %12, align 8
  %778 = add i64 %777, 1
  store i64 %778, i64* %12, align 8
  %779 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 0, i32 0, i64 2
  %780 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %781 = bitcast %"class.base::RefCountedMemory"* %780 to i8* (%"class.base::RefCountedMemory"*)***
  %782 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %781, align 8
  %783 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %782, align 8
  %784 = tail call i8* %783(%"class.base::RefCountedMemory"* %780) #11
  %785 = load i64, i64* %12, align 8
  %786 = getelementptr inbounds i8, i8* %784, i64 %785
  %787 = load i8, i8* %786, align 1
  store i8 %787, i8* %779, align 1
  %788 = load i64, i64* %12, align 8
  %789 = add i64 %788, 1
  store i64 %789, i64* %12, align 8
  %790 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 0, i32 0, i64 3
  %791 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %792 = bitcast %"class.base::RefCountedMemory"* %791 to i8* (%"class.base::RefCountedMemory"*)***
  %793 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %792, align 8
  %794 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %793, align 8
  %795 = tail call i8* %794(%"class.base::RefCountedMemory"* %791) #11
  %796 = load i64, i64* %12, align 8
  %797 = getelementptr inbounds i8, i8* %795, i64 %796
  %798 = load i8, i8* %797, align 1
  store i8 %798, i8* %790, align 1
  %799 = load i64, i64* %12, align 8
  %800 = add i64 %799, 1
  store i64 %800, i64* %12, align 8
  %801 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %802 = bitcast %"class.base::RefCountedMemory"* %801 to i8* (%"class.base::RefCountedMemory"*)***
  %803 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %802, align 8
  %804 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %803, align 8
  %805 = tail call i8* %804(%"class.base::RefCountedMemory"* %801) #11
  %806 = load i64, i64* %12, align 8
  %807 = getelementptr inbounds i8, i8* %805, i64 %806
  %808 = load i8, i8* %807, align 1
  %809 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 1
  %810 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 0, i32 3
  %811 = bitcast %"class.std::__1::vector.385"* %810 to i64*
  store i8 %808, i8* %809, align 1
  %812 = load i64, i64* %12, align 8
  %813 = add i64 %812, 1
  store i64 %813, i64* %12, align 8
  %814 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %815 = bitcast %"class.base::RefCountedMemory"* %814 to i8* (%"class.base::RefCountedMemory"*)***
  %816 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %815, align 8
  %817 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %816, align 8
  %818 = tail call i8* %817(%"class.base::RefCountedMemory"* %814) #11
  %819 = load i64, i64* %12, align 8
  %820 = getelementptr inbounds i8, i8* %818, i64 %819
  %821 = load i8, i8* %820, align 1
  store i8 %821, i8* %754, align 1
  %822 = load i64, i64* %12, align 8
  %823 = add i64 %822, 1
  store i64 %823, i64* %12, align 8
  %824 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %825 = bitcast %"class.base::RefCountedMemory"* %824 to i8* (%"class.base::RefCountedMemory"*)***
  %826 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %825, align 8
  %827 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %826, align 8
  %828 = tail call i8* %827(%"class.base::RefCountedMemory"* %824) #11
  %829 = load i64, i64* %12, align 8
  %830 = getelementptr inbounds i8, i8* %828, i64 %829
  %831 = bitcast i8* %830 to i16*
  %832 = load i16, i16* %831, align 1
  %833 = add i64 %829, 2
  store i64 %833, i64* %12, align 8
  %834 = zext i16 %832 to i64
  %835 = load i64, i64* %756, align 8
  %836 = load i64, i64* %811, align 8
  %837 = sub i64 %835, %836
  %838 = ashr exact i64 %837, 2
  %839 = icmp ult i64 %838, %834
  %840 = inttoptr i64 %836 to i32*
  br i1 %839, label %841, label %846

841:                                              ; preds = %752
  %842 = sub nsw i64 %834, %838
  tail call void @_ZNSt3__16vectorIN3x116KeySymENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.385"* %810, i64 %842) #11
  %843 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %810, i64 0, i32 0, i32 0
  %844 = load i32*, i32** %843, align 8
  %845 = load i32*, i32** %755, align 8
  br label %851

846:                                              ; preds = %752
  %847 = inttoptr i64 %835 to i32*
  %848 = icmp ugt i64 %838, %834
  br i1 %848, label %849, label %851

849:                                              ; preds = %846
  %850 = getelementptr inbounds i32, i32* %840, i64 %834
  store i32* %850, i32** %755, align 8
  br label %851

851:                                              ; preds = %841, %846, %849
  %852 = phi i32* [ %845, %841 ], [ %847, %846 ], [ %850, %849 ]
  %853 = phi i32* [ %844, %841 ], [ %840, %846 ], [ %840, %849 ]
  %854 = icmp eq i32* %853, %852
  br i1 %854, label %855, label %858

855:                                              ; preds = %858, %851
  %856 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %753, i64 1
  %857 = icmp eq %"struct.x11::Xkb::KeySymMap"* %856, %750
  br i1 %857, label %873, label %752

858:                                              ; preds = %851, %858
  %859 = phi i32* [ %871, %858 ], [ %853, %851 ]
  %860 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %861 = bitcast %"class.base::RefCountedMemory"* %860 to i8* (%"class.base::RefCountedMemory"*)***
  %862 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %861, align 8
  %863 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %862, align 8
  %864 = tail call i8* %863(%"class.base::RefCountedMemory"* %860) #11
  %865 = load i64, i64* %12, align 8
  %866 = getelementptr inbounds i8, i8* %864, i64 %865
  %867 = bitcast i8* %866 to i32*
  %868 = load i32, i32* %867, align 1
  store i32 %868, i32* %859, align 4
  %869 = load i64, i64* %12, align 8
  %870 = add i64 %869, 4
  store i64 %870, i64* %12, align 8
  %871 = getelementptr inbounds i32, i32* %859, i64 1
  %872 = icmp eq i32* %871, %852
  br i1 %872, label %855, label %858

873:                                              ; preds = %855, %740, %743, %705
  %874 = and i32 %224, 16
  %875 = icmp eq i32 %874, 0
  br i1 %875, label %1003, label %876

876:                                              ; preds = %873
  %877 = getelementptr inbounds i8, i8* %2, i64 128
  %878 = load i8, i8* %877, align 8, !range !2
  %879 = icmp eq i8 %878, 0
  br i1 %879, label %889, label %880

880:                                              ; preds = %876
  %881 = bitcast i8* %121 to i8**
  %882 = load i8*, i8** %881, align 8
  %883 = icmp eq i8* %882, null
  br i1 %883, label %888, label %884

884:                                              ; preds = %880
  %885 = ptrtoint i8* %882 to i64
  %886 = getelementptr inbounds i8, i8* %2, i64 144
  %887 = bitcast i8* %886 to i64*
  store i64 %885, i64* %887, align 8
  tail call void @_ZdlPv(i8* nonnull %882) #12
  br label %888

888:                                              ; preds = %884, %880
  store i8 0, i8* %877, align 8
  br label %889

889:                                              ; preds = %876, %888
  %890 = bitcast i8* %121 to %"class.std::__1::vector.271"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %877, align 8
  %891 = getelementptr inbounds i8, i8* %2, i64 160
  %892 = load i8, i8* %891, align 8, !range !2
  %893 = icmp eq i8 %892, 0
  br i1 %893, label %894, label %895

894:                                              ; preds = %889
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %891, align 8
  br label %916

895:                                              ; preds = %889
  %896 = bitcast i8* %122 to %"union.x11::Xkb::Action"**
  %897 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %896, align 8
  %898 = icmp eq %"union.x11::Xkb::Action"* %897, null
  br i1 %898, label %899, label %900

899:                                              ; preds = %895
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %891, align 8
  br label %907

900:                                              ; preds = %895
  %901 = ptrtoint %"union.x11::Xkb::Action"* %897 to i64
  %902 = getelementptr inbounds i8, i8* %2, i64 176
  %903 = bitcast i8* %902 to i64*
  store i64 %901, i64* %903, align 8
  %904 = bitcast %"union.x11::Xkb::Action"* %897 to i8*
  tail call void @_ZdlPv(i8* %904) #12
  %905 = load i8, i8* %877, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %891, align 8
  %906 = icmp eq i8 %905, 0
  br i1 %906, label %915, label %907, !prof !3

907:                                              ; preds = %899, %900
  %908 = getelementptr inbounds i8, i8* %2, i64 144
  %909 = bitcast i8* %908 to i64*
  %910 = load i64, i64* %909, align 8
  %911 = bitcast i8* %121 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = inttoptr i64 %912 to i8*
  %914 = inttoptr i64 %910 to i8*
  br label %916

915:                                              ; preds = %900
  tail call void @llvm.trap() #11
  unreachable

916:                                              ; preds = %907, %894
  %917 = phi i8* [ %914, %907 ], [ null, %894 ]
  %918 = phi i8* [ %913, %907 ], [ null, %894 ]
  %919 = phi i64 [ %912, %907 ], [ 0, %894 ]
  %920 = phi i64 [ %910, %907 ], [ 0, %894 ]
  %921 = bitcast i8* %122 to %"class.std::__1::vector.407"*
  %922 = getelementptr inbounds i8, i8* %2, i64 144
  %923 = bitcast i8* %922 to i8**
  %924 = getelementptr inbounds i8, i8* %2, i64 176
  %925 = bitcast i8* %924 to %"union.x11::Xkb::Action"**
  %926 = bitcast i8* %924 to i64*
  %927 = bitcast i8* %122 to i64*
  %928 = load i8, i8* %145, align 1
  %929 = zext i8 %928 to i64
  %930 = sub i64 %920, %919
  %931 = icmp ult i64 %930, %929
  %932 = inttoptr i64 %919 to i8*
  br i1 %931, label %933, label %938

933:                                              ; preds = %916
  %934 = sub i64 %929, %930
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.271"* %890, i64 %934) #11
  %935 = bitcast i8* %121 to i8**
  %936 = load i8*, i8** %935, align 8
  %937 = load i8*, i8** %923, align 8
  br label %942

938:                                              ; preds = %916
  %939 = icmp ugt i64 %930, %929
  br i1 %939, label %940, label %942

940:                                              ; preds = %938
  %941 = getelementptr inbounds i8, i8* %932, i64 %929
  store i8* %941, i8** %923, align 8
  br label %942

942:                                              ; preds = %933, %938, %940
  %943 = phi i8* [ %937, %933 ], [ %917, %938 ], [ %941, %940 ]
  %944 = phi i8* [ %936, %933 ], [ %918, %938 ], [ %918, %940 ]
  %945 = icmp eq i8* %944, %943
  br i1 %945, label %946, label %975

946:                                              ; preds = %942
  %947 = load i64, i64* %12, align 8
  br label %948

948:                                              ; preds = %975, %946
  %949 = phi i64 [ %947, %946 ], [ %986, %975 ]
  %950 = sub i64 0, %949
  %951 = and i64 %950, 3
  %952 = add i64 %951, %949
  store i64 %952, i64* %12, align 8
  %953 = load i16, i16* %144, align 2
  %954 = zext i16 %953 to i64
  %955 = load i64, i64* %926, align 8
  %956 = load i64, i64* %927, align 8
  %957 = sub i64 %955, %956
  %958 = ashr exact i64 %957, 5
  %959 = icmp ult i64 %958, %954
  %960 = inttoptr i64 %956 to %"union.x11::Xkb::Action"*
  br i1 %959, label %961, label %966

961:                                              ; preds = %948
  %962 = sub nsw i64 %954, %958
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ActionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.407"* %921, i64 %962) #11
  %963 = bitcast i8* %122 to %"union.x11::Xkb::Action"**
  %964 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %963, align 8
  %965 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %925, align 8
  br label %971

966:                                              ; preds = %948
  %967 = inttoptr i64 %955 to %"union.x11::Xkb::Action"*
  %968 = icmp ugt i64 %958, %954
  br i1 %968, label %969, label %971

969:                                              ; preds = %966
  %970 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %960, i64 %954
  store %"union.x11::Xkb::Action"* %970, %"union.x11::Xkb::Action"** %925, align 8
  br label %971

971:                                              ; preds = %961, %966, %969
  %972 = phi %"union.x11::Xkb::Action"* [ %965, %961 ], [ %967, %966 ], [ %970, %969 ]
  %973 = phi %"union.x11::Xkb::Action"* [ %964, %961 ], [ %960, %966 ], [ %960, %969 ]
  %974 = icmp eq %"union.x11::Xkb::Action"* %973, %972
  br i1 %974, label %1003, label %989

975:                                              ; preds = %942, %975
  %976 = phi i8* [ %987, %975 ], [ %944, %942 ]
  %977 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %978 = bitcast %"class.base::RefCountedMemory"* %977 to i8* (%"class.base::RefCountedMemory"*)***
  %979 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %978, align 8
  %980 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %979, align 8
  %981 = tail call i8* %980(%"class.base::RefCountedMemory"* %977) #11
  %982 = load i64, i64* %12, align 8
  %983 = getelementptr inbounds i8, i8* %981, i64 %982
  %984 = load i8, i8* %983, align 1
  store i8 %984, i8* %976, align 1
  %985 = load i64, i64* %12, align 8
  %986 = add i64 %985, 1
  store i64 %986, i64* %12, align 8
  %987 = getelementptr inbounds i8, i8* %976, i64 1
  %988 = icmp eq i8* %987, %943
  br i1 %988, label %948, label %975

989:                                              ; preds = %971, %989
  %990 = phi %"union.x11::Xkb::Action"* [ %1001, %989 ], [ %973, %971 ]
  %991 = bitcast %"union.x11::Xkb::Action"* %990 to i8*
  %992 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %993 = bitcast %"class.base::RefCountedMemory"* %992 to i8* (%"class.base::RefCountedMemory"*)***
  %994 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %993, align 8
  %995 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %994, align 8
  %996 = tail call i8* %995(%"class.base::RefCountedMemory"* %992) #11
  %997 = load i64, i64* %12, align 8
  %998 = getelementptr inbounds i8, i8* %996, i64 %997
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %991, i8* align 1 %998, i64 32, i1 false) #11
  %999 = load i64, i64* %12, align 8
  %1000 = add i64 %999, 32
  store i64 %1000, i64* %12, align 8
  %1001 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %990, i64 1
  %1002 = icmp eq %"union.x11::Xkb::Action"* %1001, %972
  br i1 %1002, label %1003, label %989

1003:                                             ; preds = %989, %971, %873
  %1004 = and i32 %224, 32
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1060, label %1006

1006:                                             ; preds = %1003
  %1007 = getelementptr inbounds i8, i8* %2, i64 192
  %1008 = load i8, i8* %1007, align 8, !range !2
  %1009 = icmp eq i8 %1008, 0
  br i1 %1009, label %1020, label %1010

1010:                                             ; preds = %1006
  %1011 = bitcast i8* %123 to %"struct.x11::Xkb::SetBehavior"**
  %1012 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %1011, align 8
  %1013 = icmp eq %"struct.x11::Xkb::SetBehavior"* %1012, null
  br i1 %1013, label %1019, label %1014

1014:                                             ; preds = %1010
  %1015 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %1012 to i64
  %1016 = getelementptr inbounds i8, i8* %2, i64 208
  %1017 = bitcast i8* %1016 to i64*
  store i64 %1015, i64* %1017, align 8
  %1018 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %1012, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1018) #12
  br label %1019

1019:                                             ; preds = %1014, %1010
  store i8 0, i8* %1007, align 8
  br label %1020

1020:                                             ; preds = %1019, %1006
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1007, align 8
  %1021 = load i8, i8* %148, align 1
  %1022 = icmp eq i8 %1021, 0
  br i1 %1022, label %1060, label %1023

1023:                                             ; preds = %1020
  %1024 = zext i8 %1021 to i64
  %1025 = getelementptr inbounds i8, i8* %2, i64 208
  %1026 = bitcast i8* %1025 to %"struct.x11::Xkb::SetBehavior"**
  %1027 = bitcast i8* %123 to %"class.std::__1::vector.420"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb11SetBehaviorENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.420"* %1027, i64 %1024) #11
  %1028 = bitcast i8* %123 to %"struct.x11::Xkb::SetBehavior"**
  %1029 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %1028, align 8
  %1030 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %1026, align 8
  %1031 = icmp eq %"struct.x11::Xkb::SetBehavior"* %1029, %1030
  br i1 %1031, label %1060, label %1032

1032:                                             ; preds = %1023, %1032
  %1033 = phi %"struct.x11::Xkb::SetBehavior"* [ %1058, %1032 ], [ %1029, %1023 ]
  %1034 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %1033, i64 0, i32 0
  %1035 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %1033, i64 0, i32 1
  %1036 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1037 = bitcast %"class.base::RefCountedMemory"* %1036 to i8* (%"class.base::RefCountedMemory"*)***
  %1038 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1037, align 8
  %1039 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1038, align 8
  %1040 = tail call i8* %1039(%"class.base::RefCountedMemory"* %1036) #11
  %1041 = load i64, i64* %12, align 8
  %1042 = getelementptr inbounds i8, i8* %1040, i64 %1041
  %1043 = load i8, i8* %1042, align 1
  store i8 %1043, i8* %1034, align 1
  %1044 = load i64, i64* %12, align 8
  %1045 = add i64 %1044, 1
  store i64 %1045, i64* %12, align 8
  %1046 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1047 = bitcast %"class.base::RefCountedMemory"* %1046 to i8* (%"class.base::RefCountedMemory"*)***
  %1048 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1047, align 8
  %1049 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1048, align 8
  %1050 = tail call i8* %1049(%"class.base::RefCountedMemory"* %1046) #11
  %1051 = load i64, i64* %12, align 8
  %1052 = getelementptr inbounds i8, i8* %1050, i64 %1051
  %1053 = bitcast i8* %1052 to i16*
  %1054 = bitcast %"union.x11::Xkb::Behavior"* %1035 to i16*
  %1055 = load i16, i16* %1053, align 1
  store i16 %1055, i16* %1054, align 1
  %1056 = load i64, i64* %12, align 8
  %1057 = add i64 %1056, 3
  store i64 %1057, i64* %12, align 8
  %1058 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %1033, i64 1
  %1059 = icmp eq %"struct.x11::Xkb::SetBehavior"* %1058, %1030
  br i1 %1059, label %1060, label %1032

1060:                                             ; preds = %1032, %1020, %1023, %1003
  %1061 = and i32 %224, 64
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1109, label %1063

1063:                                             ; preds = %1060
  %1064 = getelementptr inbounds i8, i8* %2, i64 224
  %1065 = load i8, i8* %1064, align 8, !range !2
  %1066 = icmp eq i8 %1065, 0
  br i1 %1066, label %1077, label %1067

1067:                                             ; preds = %1063
  %1068 = bitcast i8* %124 to i32**
  %1069 = load i32*, i32** %1068, align 8
  %1070 = icmp eq i32* %1069, null
  br i1 %1070, label %1076, label %1071

1071:                                             ; preds = %1067
  %1072 = ptrtoint i32* %1069 to i64
  %1073 = getelementptr inbounds i8, i8* %2, i64 240
  %1074 = bitcast i8* %1073 to i64*
  store i64 %1072, i64* %1074, align 8
  %1075 = bitcast i32* %1069 to i8*
  tail call void @_ZdlPv(i8* %1075) #12
  br label %1076

1076:                                             ; preds = %1071, %1067
  store i8 0, i8* %1064, align 8
  br label %1077

1077:                                             ; preds = %1076, %1063
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1064, align 8
  %1078 = load i32, i32* %117, align 4
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1090, label %1080

1080:                                             ; preds = %1077
  %1081 = zext i32 %1078 to i64
  %1082 = tail call i64 @llvm.ctpop.i64(i64 %1081) #11, !range !4
  %1083 = getelementptr inbounds i8, i8* %2, i64 240
  %1084 = bitcast i8* %1083 to i32**
  %1085 = bitcast i8* %124 to %"class.std::__1::vector.432"*
  tail call void @_ZNSt3__16vectorIN3x117ModMaskENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.432"* %1085, i64 %1082) #11
  %1086 = bitcast i8* %124 to i32**
  %1087 = load i32*, i32** %1086, align 8
  %1088 = load i32*, i32** %1084, align 8
  %1089 = icmp eq i32* %1087, %1088
  br i1 %1089, label %1090, label %1095

1090:                                             ; preds = %1095, %1077, %1080
  %1091 = load i64, i64* %12, align 8
  %1092 = sub i64 0, %1091
  %1093 = and i64 %1092, 3
  %1094 = add i64 %1093, %1091
  store i64 %1094, i64* %12, align 8
  br label %1109

1095:                                             ; preds = %1080, %1095
  %1096 = phi i32* [ %1107, %1095 ], [ %1087, %1080 ]
  %1097 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1098 = bitcast %"class.base::RefCountedMemory"* %1097 to i8* (%"class.base::RefCountedMemory"*)***
  %1099 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1098, align 8
  %1100 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1099, align 8
  %1101 = tail call i8* %1100(%"class.base::RefCountedMemory"* %1097) #11
  %1102 = load i64, i64* %12, align 8
  %1103 = getelementptr inbounds i8, i8* %1101, i64 %1102
  %1104 = load i8, i8* %1103, align 1
  %1105 = add i64 %1102, 1
  store i64 %1105, i64* %12, align 8
  %1106 = zext i8 %1104 to i32
  store i32 %1106, i32* %1096, align 4
  %1107 = getelementptr inbounds i32, i32* %1096, i64 1
  %1108 = icmp eq i32* %1107, %1088
  br i1 %1108, label %1090, label %1095

1109:                                             ; preds = %1060, %1090
  %1110 = and i32 %224, 8
  %1111 = icmp eq i32 %1110, 0
  br i1 %1111, label %1169, label %1112

1112:                                             ; preds = %1109
  %1113 = getelementptr inbounds i8, i8* %2, i64 256
  %1114 = load i8, i8* %1113, align 8, !range !2
  %1115 = icmp eq i8 %1114, 0
  br i1 %1115, label %1126, label %1116

1116:                                             ; preds = %1112
  %1117 = bitcast i8* %125 to %"struct.x11::Xkb::SetExplicit"**
  %1118 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1117, align 8
  %1119 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1118, null
  br i1 %1119, label %1125, label %1120

1120:                                             ; preds = %1116
  %1121 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %1118 to i64
  %1122 = getelementptr inbounds i8, i8* %2, i64 272
  %1123 = bitcast i8* %1122 to i64*
  store i64 %1121, i64* %1123, align 8
  %1124 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1118, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1124) #12
  br label %1125

1125:                                             ; preds = %1120, %1116
  store i8 0, i8* %1113, align 8
  br label %1126

1126:                                             ; preds = %1125, %1112
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1113, align 8
  %1127 = load i8, i8* %151, align 1
  %1128 = icmp eq i8 %1127, 0
  br i1 %1128, label %1138, label %1129

1129:                                             ; preds = %1126
  %1130 = zext i8 %1127 to i64
  %1131 = getelementptr inbounds i8, i8* %2, i64 272
  %1132 = bitcast i8* %1131 to %"struct.x11::Xkb::SetExplicit"**
  %1133 = bitcast i8* %125 to %"class.std::__1::vector.444"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb11SetExplicitENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.444"* %1133, i64 %1130) #11
  %1134 = bitcast i8* %125 to %"struct.x11::Xkb::SetExplicit"**
  %1135 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1134, align 8
  %1136 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %1132, align 8
  %1137 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1135, %1136
  br i1 %1137, label %1138, label %1143

1138:                                             ; preds = %1143, %1126, %1129
  %1139 = load i64, i64* %12, align 8
  %1140 = sub i64 0, %1139
  %1141 = and i64 %1140, 3
  %1142 = add i64 %1141, %1139
  store i64 %1142, i64* %12, align 8
  br label %1169

1143:                                             ; preds = %1129, %1143
  %1144 = phi %"struct.x11::Xkb::SetExplicit"* [ %1167, %1143 ], [ %1135, %1129 ]
  %1145 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1144, i64 0, i32 0
  %1146 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1144, i64 0, i32 1
  %1147 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1148 = bitcast %"class.base::RefCountedMemory"* %1147 to i8* (%"class.base::RefCountedMemory"*)***
  %1149 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1148, align 8
  %1150 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1149, align 8
  %1151 = tail call i8* %1150(%"class.base::RefCountedMemory"* %1147) #11
  %1152 = load i64, i64* %12, align 8
  %1153 = getelementptr inbounds i8, i8* %1151, i64 %1152
  %1154 = load i8, i8* %1153, align 1
  store i8 %1154, i8* %1145, align 1
  %1155 = load i64, i64* %12, align 8
  %1156 = add i64 %1155, 1
  store i64 %1156, i64* %12, align 8
  %1157 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1158 = bitcast %"class.base::RefCountedMemory"* %1157 to i8* (%"class.base::RefCountedMemory"*)***
  %1159 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1158, align 8
  %1160 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1159, align 8
  %1161 = tail call i8* %1160(%"class.base::RefCountedMemory"* %1157) #11
  %1162 = load i64, i64* %12, align 8
  %1163 = getelementptr inbounds i8, i8* %1161, i64 %1162
  %1164 = load i8, i8* %1163, align 1
  %1165 = add i64 %1162, 1
  store i64 %1165, i64* %12, align 8
  %1166 = zext i8 %1164 to i32
  store i32 %1166, i32* %1146, align 4
  %1167 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %1144, i64 1
  %1168 = icmp eq %"struct.x11::Xkb::SetExplicit"* %1167, %1136
  br i1 %1168, label %1138, label %1143

1169:                                             ; preds = %1109, %1138
  %1170 = and i32 %224, 4
  %1171 = icmp eq i32 %1170, 0
  br i1 %1171, label %1229, label %1172

1172:                                             ; preds = %1169
  %1173 = getelementptr inbounds i8, i8* %2, i64 288
  %1174 = load i8, i8* %1173, align 8, !range !2
  %1175 = icmp eq i8 %1174, 0
  br i1 %1175, label %1186, label %1176

1176:                                             ; preds = %1172
  %1177 = bitcast i8* %126 to %"struct.x11::Xkb::KeyModMap"**
  %1178 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1177, align 8
  %1179 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1178, null
  br i1 %1179, label %1185, label %1180

1180:                                             ; preds = %1176
  %1181 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %1178 to i64
  %1182 = getelementptr inbounds i8, i8* %2, i64 304
  %1183 = bitcast i8* %1182 to i64*
  store i64 %1181, i64* %1183, align 8
  %1184 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1178, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1184) #12
  br label %1185

1185:                                             ; preds = %1180, %1176
  store i8 0, i8* %1173, align 8
  br label %1186

1186:                                             ; preds = %1185, %1172
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1173, align 8
  %1187 = load i8, i8* %154, align 1
  %1188 = icmp eq i8 %1187, 0
  br i1 %1188, label %1198, label %1189

1189:                                             ; preds = %1186
  %1190 = zext i8 %1187 to i64
  %1191 = getelementptr inbounds i8, i8* %2, i64 304
  %1192 = bitcast i8* %1191 to %"struct.x11::Xkb::KeyModMap"**
  %1193 = bitcast i8* %126 to %"class.std::__1::vector.456"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb9KeyModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.456"* %1193, i64 %1190) #11
  %1194 = bitcast i8* %126 to %"struct.x11::Xkb::KeyModMap"**
  %1195 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1194, align 8
  %1196 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %1192, align 8
  %1197 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1195, %1196
  br i1 %1197, label %1198, label %1203

1198:                                             ; preds = %1203, %1186, %1189
  %1199 = load i64, i64* %12, align 8
  %1200 = sub i64 0, %1199
  %1201 = and i64 %1200, 3
  %1202 = add i64 %1201, %1199
  store i64 %1202, i64* %12, align 8
  br label %1229

1203:                                             ; preds = %1189, %1203
  %1204 = phi %"struct.x11::Xkb::KeyModMap"* [ %1227, %1203 ], [ %1195, %1189 ]
  %1205 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1204, i64 0, i32 0
  %1206 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1204, i64 0, i32 1
  %1207 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1208 = bitcast %"class.base::RefCountedMemory"* %1207 to i8* (%"class.base::RefCountedMemory"*)***
  %1209 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1208, align 8
  %1210 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1209, align 8
  %1211 = tail call i8* %1210(%"class.base::RefCountedMemory"* %1207) #11
  %1212 = load i64, i64* %12, align 8
  %1213 = getelementptr inbounds i8, i8* %1211, i64 %1212
  %1214 = load i8, i8* %1213, align 1
  store i8 %1214, i8* %1205, align 1
  %1215 = load i64, i64* %12, align 8
  %1216 = add i64 %1215, 1
  store i64 %1216, i64* %12, align 8
  %1217 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1218 = bitcast %"class.base::RefCountedMemory"* %1217 to i8* (%"class.base::RefCountedMemory"*)***
  %1219 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1218, align 8
  %1220 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1219, align 8
  %1221 = tail call i8* %1220(%"class.base::RefCountedMemory"* %1217) #11
  %1222 = load i64, i64* %12, align 8
  %1223 = getelementptr inbounds i8, i8* %1221, i64 %1222
  %1224 = load i8, i8* %1223, align 1
  %1225 = add i64 %1222, 1
  store i64 %1225, i64* %12, align 8
  %1226 = zext i8 %1224 to i32
  store i32 %1226, i32* %1206, align 4
  %1227 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %1204, i64 1
  %1228 = icmp eq %"struct.x11::Xkb::KeyModMap"* %1227, %1196
  br i1 %1228, label %1198, label %1203

1229:                                             ; preds = %1169, %1198
  %1230 = trunc i16 %222 to i8
  %1231 = icmp slt i8 %1230, 0
  br i1 %1231, label %1232, label %1285

1232:                                             ; preds = %1229
  %1233 = getelementptr inbounds i8, i8* %2, i64 320
  %1234 = load i8, i8* %1233, align 8, !range !2
  %1235 = icmp eq i8 %1234, 0
  br i1 %1235, label %1246, label %1236

1236:                                             ; preds = %1232
  %1237 = bitcast i8* %127 to %"struct.x11::Xkb::KeyVModMap"**
  %1238 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1237, align 8
  %1239 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1238, null
  br i1 %1239, label %1245, label %1240

1240:                                             ; preds = %1236
  %1241 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %1238 to i64
  %1242 = getelementptr inbounds i8, i8* %2, i64 336
  %1243 = bitcast i8* %1242 to i64*
  store i64 %1241, i64* %1243, align 8
  %1244 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1238, i64 0, i32 0
  tail call void @_ZdlPv(i8* %1244) #12
  br label %1245

1245:                                             ; preds = %1240, %1236
  store i8 0, i8* %1233, align 8
  br label %1246

1246:                                             ; preds = %1245, %1232
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1233, align 8
  %1247 = load i8, i8* %157, align 1
  %1248 = icmp eq i8 %1247, 0
  br i1 %1248, label %1285, label %1249

1249:                                             ; preds = %1246
  %1250 = zext i8 %1247 to i64
  %1251 = getelementptr inbounds i8, i8* %2, i64 336
  %1252 = bitcast i8* %1251 to %"struct.x11::Xkb::KeyVModMap"**
  %1253 = bitcast i8* %127 to %"class.std::__1::vector.468"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb10KeyVModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.468"* %1253, i64 %1250) #11
  %1254 = bitcast i8* %127 to %"struct.x11::Xkb::KeyVModMap"**
  %1255 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1254, align 8
  %1256 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %1252, align 8
  %1257 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1255, %1256
  br i1 %1257, label %1285, label %1258

1258:                                             ; preds = %1249, %1258
  %1259 = phi %"struct.x11::Xkb::KeyVModMap"* [ %1283, %1258 ], [ %1255, %1249 ]
  %1260 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1259, i64 0, i32 0
  %1261 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1259, i64 0, i32 1
  %1262 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1263 = bitcast %"class.base::RefCountedMemory"* %1262 to i8* (%"class.base::RefCountedMemory"*)***
  %1264 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1263, align 8
  %1265 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1264, align 8
  %1266 = tail call i8* %1265(%"class.base::RefCountedMemory"* %1262) #11
  %1267 = load i64, i64* %12, align 8
  %1268 = getelementptr inbounds i8, i8* %1266, i64 %1267
  %1269 = load i8, i8* %1268, align 1
  store i8 %1269, i8* %1260, align 1
  %1270 = load i64, i64* %12, align 8
  %1271 = add i64 %1270, 2
  store i64 %1271, i64* %12, align 8
  %1272 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1273 = bitcast %"class.base::RefCountedMemory"* %1272 to i8* (%"class.base::RefCountedMemory"*)***
  %1274 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1273, align 8
  %1275 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1274, align 8
  %1276 = tail call i8* %1275(%"class.base::RefCountedMemory"* %1272) #11
  %1277 = load i64, i64* %12, align 8
  %1278 = getelementptr inbounds i8, i8* %1276, i64 %1277
  %1279 = bitcast i8* %1278 to i16*
  %1280 = load i16, i16* %1279, align 1
  %1281 = add i64 %1277, 2
  store i64 %1281, i64* %12, align 8
  %1282 = zext i16 %1280 to i32
  store i32 %1282, i32* %1261, align 4
  %1283 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %1259, i64 1
  %1284 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %1283, %1256
  br i1 %1284, label %1285, label %1258

1285:                                             ; preds = %1258, %1246, %1249, %1, %1229
  %1286 = and i32 %103, 2
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1647, label %1288

1288:                                             ; preds = %1285
  %1289 = getelementptr inbounds i8, i8* %2, i64 352
  %1290 = load i8, i8* %1289, align 8, !range !2
  %1291 = icmp eq i8 %1290, 0
  br i1 %1291, label %1313, label %1292

1292:                                             ; preds = %1288
  %1293 = getelementptr inbounds i8, i8* %2, i64 400
  %1294 = bitcast i8* %1293 to %"struct.x11::Xkb::ModDef"**
  %1295 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %1294, align 8
  %1296 = icmp eq %"struct.x11::Xkb::ModDef"* %1295, null
  br i1 %1296, label %1302, label %1297

1297:                                             ; preds = %1292
  %1298 = ptrtoint %"struct.x11::Xkb::ModDef"* %1295 to i64
  %1299 = getelementptr inbounds i8, i8* %2, i64 408
  %1300 = bitcast i8* %1299 to i64*
  store i64 %1298, i64* %1300, align 8
  %1301 = bitcast %"struct.x11::Xkb::ModDef"* %1295 to i8*
  tail call void @_ZdlPv(i8* %1301) #12
  br label %1302

1302:                                             ; preds = %1297, %1292
  %1303 = getelementptr inbounds i8, i8* %2, i64 376
  %1304 = bitcast i8* %1303 to %"struct.x11::Xkb::SymInterpret"**
  %1305 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %1304, align 8
  %1306 = icmp eq %"struct.x11::Xkb::SymInterpret"* %1305, null
  br i1 %1306, label %1312, label %1307

1307:                                             ; preds = %1302
  %1308 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %1305 to i64
  %1309 = getelementptr inbounds i8, i8* %2, i64 384
  %1310 = bitcast i8* %1309 to i64*
  store i64 %1308, i64* %1310, align 8
  %1311 = bitcast %"struct.x11::Xkb::SymInterpret"* %1305 to i8*
  tail call void @_ZdlPv(i8* %1311) #12
  br label %1312

1312:                                             ; preds = %1307, %1302
  store i8 0, i8* %1289, align 8
  br label %1313

1313:                                             ; preds = %1312, %1288
  %1314 = getelementptr inbounds i8, i8* %2, i64 360
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1314, i8 0, i64 64, i1 false) #11
  store i8 1, i8* %1289, align 8
  %1315 = getelementptr inbounds i8, i8* %2, i64 361
  %1316 = getelementptr inbounds i8, i8* %2, i64 362
  %1317 = bitcast i8* %1316 to i16*
  %1318 = getelementptr inbounds i8, i8* %2, i64 364
  %1319 = bitcast i8* %1318 to i32*
  %1320 = getelementptr inbounds i8, i8* %2, i64 368
  %1321 = bitcast i8* %1320 to i32*
  %1322 = getelementptr inbounds i8, i8* %2, i64 372
  %1323 = bitcast i8* %1322 to i16*
  %1324 = getelementptr inbounds i8, i8* %2, i64 374
  %1325 = bitcast i8* %1324 to i16*
  %1326 = getelementptr inbounds i8, i8* %2, i64 376
  %1327 = getelementptr inbounds i8, i8* %2, i64 384
  %1328 = bitcast i8* %1327 to %"struct.x11::Xkb::SymInterpret"**
  %1329 = bitcast i8* %1327 to i64*
  %1330 = bitcast i8* %1326 to i64*
  %1331 = getelementptr inbounds i8, i8* %2, i64 400
  %1332 = bitcast i8* %1331 to %"class.std::__1::vector.365"*
  %1333 = getelementptr inbounds i8, i8* %2, i64 408
  %1334 = bitcast i8* %1333 to %"struct.x11::Xkb::ModDef"**
  %1335 = bitcast i8* %1333 to i64*
  %1336 = bitcast i8* %1331 to i64*
  %1337 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1338 = bitcast %"class.base::RefCountedMemory"* %1337 to i8* (%"class.base::RefCountedMemory"*)***
  %1339 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1338, align 8
  %1340 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1339, align 8
  %1341 = tail call i8* %1340(%"class.base::RefCountedMemory"* %1337) #11
  %1342 = load i64, i64* %12, align 8
  %1343 = getelementptr inbounds i8, i8* %1341, i64 %1342
  %1344 = load i8, i8* %1343, align 1
  store i8 %1344, i8* %1314, align 1
  %1345 = add i64 %1342, 1
  store i64 %1345, i64* %12, align 8
  %1346 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1347 = bitcast %"class.base::RefCountedMemory"* %1346 to i8* (%"class.base::RefCountedMemory"*)***
  %1348 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1347, align 8
  %1349 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1348, align 8
  %1350 = tail call i8* %1349(%"class.base::RefCountedMemory"* %1346) #11
  %1351 = load i64, i64* %12, align 8
  %1352 = getelementptr inbounds i8, i8* %1350, i64 %1351
  %1353 = load i8, i8* %1352, align 1
  store i8 %1353, i8* %1315, align 1
  %1354 = add i64 %1351, 1
  store i64 %1354, i64* %12, align 8
  %1355 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1356 = bitcast %"class.base::RefCountedMemory"* %1355 to i8* (%"class.base::RefCountedMemory"*)***
  %1357 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1356, align 8
  %1358 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1357, align 8
  %1359 = tail call i8* %1358(%"class.base::RefCountedMemory"* %1355) #11
  %1360 = load i64, i64* %12, align 8
  %1361 = getelementptr inbounds i8, i8* %1359, i64 %1360
  %1362 = bitcast i8* %1361 to i16*
  %1363 = load i16, i16* %1362, align 1
  store i16 %1363, i16* %1317, align 2
  %1364 = add i64 %1360, 2
  store i64 %1364, i64* %12, align 8
  %1365 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1366 = bitcast %"class.base::RefCountedMemory"* %1365 to i8* (%"class.base::RefCountedMemory"*)***
  %1367 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1366, align 8
  %1368 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1367, align 8
  %1369 = tail call i8* %1368(%"class.base::RefCountedMemory"* %1365) #11
  %1370 = load i64, i64* %12, align 8
  %1371 = getelementptr inbounds i8, i8* %1369, i64 %1370
  %1372 = bitcast i8* %1371 to i32*
  %1373 = load i32, i32* %1372, align 1
  store i32 %1373, i32* %1319, align 4
  %1374 = add i64 %1370, 4
  store i64 %1374, i64* %12, align 8
  %1375 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1376 = bitcast %"class.base::RefCountedMemory"* %1375 to i8* (%"class.base::RefCountedMemory"*)***
  %1377 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1376, align 8
  %1378 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1377, align 8
  %1379 = tail call i8* %1378(%"class.base::RefCountedMemory"* %1375) #11
  %1380 = load i64, i64* %12, align 8
  %1381 = getelementptr inbounds i8, i8* %1379, i64 %1380
  %1382 = load i8, i8* %1381, align 1
  %1383 = zext i8 %1382 to i32
  store i32 %1383, i32* %1321, align 4
  %1384 = add i64 %1380, 2
  store i64 %1384, i64* %12, align 8
  %1385 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1386 = bitcast %"class.base::RefCountedMemory"* %1385 to i8* (%"class.base::RefCountedMemory"*)***
  %1387 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1386, align 8
  %1388 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1387, align 8
  %1389 = tail call i8* %1388(%"class.base::RefCountedMemory"* %1385) #11
  %1390 = load i64, i64* %12, align 8
  %1391 = getelementptr inbounds i8, i8* %1389, i64 %1390
  %1392 = bitcast i8* %1391 to i16*
  %1393 = load i16, i16* %1392, align 1
  store i16 %1393, i16* %1323, align 2
  %1394 = add i64 %1390, 2
  store i64 %1394, i64* %12, align 8
  %1395 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1396 = bitcast %"class.base::RefCountedMemory"* %1395 to i8* (%"class.base::RefCountedMemory"*)***
  %1397 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1396, align 8
  %1398 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1397, align 8
  %1399 = tail call i8* %1398(%"class.base::RefCountedMemory"* %1395) #11
  %1400 = load i64, i64* %12, align 8
  %1401 = getelementptr inbounds i8, i8* %1399, i64 %1400
  %1402 = bitcast i8* %1401 to i16*
  %1403 = load i16, i16* %1402, align 1
  %1404 = add i64 %1400, 2
  store i64 %1404, i64* %12, align 8
  %1405 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1406 = bitcast %"class.base::RefCountedMemory"* %1405 to i8* (%"class.base::RefCountedMemory"*)***
  %1407 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1406, align 8
  %1408 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1407, align 8
  %1409 = tail call i8* %1408(%"class.base::RefCountedMemory"* %1405) #11
  %1410 = load i64, i64* %12, align 8
  %1411 = getelementptr inbounds i8, i8* %1409, i64 %1410
  %1412 = bitcast i8* %1411 to i16*
  %1413 = load i16, i16* %1412, align 1
  store i16 %1413, i16* %1325, align 2
  %1414 = add i64 %1410, 18
  store i64 %1414, i64* %12, align 8
  %1415 = zext i16 %1403 to i64
  %1416 = load i64, i64* %1329, align 8
  %1417 = load i64, i64* %1330, align 8
  %1418 = sub i64 %1416, %1417
  %1419 = ashr exact i64 %1418, 5
  %1420 = icmp ult i64 %1419, %1415
  %1421 = inttoptr i64 %1417 to %"struct.x11::Xkb::SymInterpret"*
  br i1 %1420, label %1422, label %1428

1422:                                             ; preds = %1313
  %1423 = bitcast i8* %1326 to %"class.std::__1::vector.522"*
  %1424 = sub nsw i64 %1415, %1419
  tail call void @_ZNSt3__16vectorIN3x113Xkb12SymInterpretENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.522"* %1423, i64 %1424) #11
  %1425 = bitcast i8* %1326 to %"struct.x11::Xkb::SymInterpret"**
  %1426 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %1425, align 8
  %1427 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %1328, align 8
  br label %1433

1428:                                             ; preds = %1313
  %1429 = inttoptr i64 %1416 to %"struct.x11::Xkb::SymInterpret"*
  %1430 = icmp ugt i64 %1419, %1415
  br i1 %1430, label %1431, label %1433

1431:                                             ; preds = %1428
  %1432 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1421, i64 %1415
  store %"struct.x11::Xkb::SymInterpret"* %1432, %"struct.x11::Xkb::SymInterpret"** %1328, align 8
  br label %1433

1433:                                             ; preds = %1422, %1428, %1431
  %1434 = phi %"struct.x11::Xkb::SymInterpret"* [ %1427, %1422 ], [ %1429, %1428 ], [ %1432, %1431 ]
  %1435 = phi %"struct.x11::Xkb::SymInterpret"* [ %1426, %1422 ], [ %1421, %1428 ], [ %1421, %1431 ]
  %1436 = icmp eq %"struct.x11::Xkb::SymInterpret"* %1435, %1434
  br i1 %1436, label %1437, label %1461

1437:                                             ; preds = %1461, %1433
  %1438 = load i32, i32* %1321, align 4
  %1439 = zext i32 %1438 to i64
  %1440 = tail call i64 @llvm.ctpop.i64(i64 %1439) #11, !range !4
  %1441 = load i64, i64* %1335, align 8
  %1442 = load i64, i64* %1336, align 8
  %1443 = sub i64 %1441, %1442
  %1444 = sdiv exact i64 %1443, 12
  %1445 = icmp ugt i64 %1440, %1444
  %1446 = inttoptr i64 %1442 to %"struct.x11::Xkb::ModDef"*
  br i1 %1445, label %1447, label %1452

1447:                                             ; preds = %1437
  %1448 = sub nsw i64 %1440, %1444
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.365"* %1332, i64 %1448) #11
  %1449 = bitcast i8* %1331 to %"struct.x11::Xkb::ModDef"**
  %1450 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %1449, align 8
  %1451 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %1334, align 8
  br label %1457

1452:                                             ; preds = %1437
  %1453 = inttoptr i64 %1441 to %"struct.x11::Xkb::ModDef"*
  %1454 = icmp ult i64 %1440, %1444
  br i1 %1454, label %1455, label %1457

1455:                                             ; preds = %1452
  %1456 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %1446, i64 %1440
  store %"struct.x11::Xkb::ModDef"* %1456, %"struct.x11::Xkb::ModDef"** %1334, align 8
  br label %1457

1457:                                             ; preds = %1447, %1452, %1455
  %1458 = phi %"struct.x11::Xkb::ModDef"* [ %1451, %1447 ], [ %1453, %1452 ], [ %1456, %1455 ]
  %1459 = phi %"struct.x11::Xkb::ModDef"* [ %1450, %1447 ], [ %1446, %1452 ], [ %1446, %1455 ]
  %1460 = icmp eq %"struct.x11::Xkb::ModDef"* %1459, %1458
  br i1 %1460, label %1647, label %1609

1461:                                             ; preds = %1433, %1461
  %1462 = phi %"struct.x11::Xkb::SymInterpret"* [ %1607, %1461 ], [ %1435, %1433 ]
  %1463 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 0
  %1464 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 1
  %1465 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 2
  %1466 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 3
  %1467 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 4
  %1468 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1469 = bitcast %"class.base::RefCountedMemory"* %1468 to i8* (%"class.base::RefCountedMemory"*)***
  %1470 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1469, align 8
  %1471 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1470, align 8
  %1472 = tail call i8* %1471(%"class.base::RefCountedMemory"* %1468) #11
  %1473 = load i64, i64* %12, align 8
  %1474 = getelementptr inbounds i8, i8* %1472, i64 %1473
  %1475 = bitcast i8* %1474 to i32*
  %1476 = load i32, i32* %1475, align 1
  store i32 %1476, i32* %1463, align 4
  %1477 = load i64, i64* %12, align 8
  %1478 = add i64 %1477, 4
  store i64 %1478, i64* %12, align 8
  %1479 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1480 = bitcast %"class.base::RefCountedMemory"* %1479 to i8* (%"class.base::RefCountedMemory"*)***
  %1481 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1480, align 8
  %1482 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1481, align 8
  %1483 = tail call i8* %1482(%"class.base::RefCountedMemory"* %1479) #11
  %1484 = load i64, i64* %12, align 8
  %1485 = getelementptr inbounds i8, i8* %1483, i64 %1484
  %1486 = load i8, i8* %1485, align 1
  %1487 = add i64 %1484, 1
  store i64 %1487, i64* %12, align 8
  %1488 = zext i8 %1486 to i32
  store i32 %1488, i32* %1464, align 4
  %1489 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1490 = bitcast %"class.base::RefCountedMemory"* %1489 to i8* (%"class.base::RefCountedMemory"*)***
  %1491 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1490, align 8
  %1492 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1491, align 8
  %1493 = tail call i8* %1492(%"class.base::RefCountedMemory"* %1489) #11
  %1494 = load i64, i64* %12, align 8
  %1495 = getelementptr inbounds i8, i8* %1493, i64 %1494
  %1496 = load i8, i8* %1495, align 1
  store i8 %1496, i8* %1465, align 1
  %1497 = load i64, i64* %12, align 8
  %1498 = add i64 %1497, 1
  store i64 %1498, i64* %12, align 8
  %1499 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1500 = bitcast %"class.base::RefCountedMemory"* %1499 to i8* (%"class.base::RefCountedMemory"*)***
  %1501 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1500, align 8
  %1502 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1501, align 8
  %1503 = tail call i8* %1502(%"class.base::RefCountedMemory"* %1499) #11
  %1504 = load i64, i64* %12, align 8
  %1505 = getelementptr inbounds i8, i8* %1503, i64 %1504
  %1506 = load i8, i8* %1505, align 1
  %1507 = add i64 %1504, 1
  store i64 %1507, i64* %12, align 8
  %1508 = zext i8 %1506 to i32
  store i32 %1508, i32* %1466, align 4
  %1509 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1510 = bitcast %"class.base::RefCountedMemory"* %1509 to i8* (%"class.base::RefCountedMemory"*)***
  %1511 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1510, align 8
  %1512 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1511, align 8
  %1513 = tail call i8* %1512(%"class.base::RefCountedMemory"* %1509) #11
  %1514 = load i64, i64* %12, align 8
  %1515 = getelementptr inbounds i8, i8* %1513, i64 %1514
  %1516 = load i8, i8* %1515, align 1
  store i8 %1516, i8* %1467, align 1
  %1517 = load i64, i64* %12, align 8
  %1518 = add i64 %1517, 1
  store i64 %1518, i64* %12, align 8
  %1519 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 0
  %1520 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1521 = bitcast %"class.base::RefCountedMemory"* %1520 to i8* (%"class.base::RefCountedMemory"*)***
  %1522 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1521, align 8
  %1523 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1522, align 8
  %1524 = tail call i8* %1523(%"class.base::RefCountedMemory"* %1520) #11
  %1525 = load i64, i64* %12, align 8
  %1526 = getelementptr inbounds i8, i8* %1524, i64 %1525
  %1527 = load i8, i8* %1526, align 1
  %1528 = add i64 %1525, 1
  store i64 %1528, i64* %12, align 8
  %1529 = zext i8 %1527 to i32
  store i32 %1529, i32* %1519, align 4
  %1530 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 0
  %1531 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1532 = bitcast %"class.base::RefCountedMemory"* %1531 to i8* (%"class.base::RefCountedMemory"*)***
  %1533 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1532, align 8
  %1534 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1533, align 8
  %1535 = tail call i8* %1534(%"class.base::RefCountedMemory"* %1531) #11
  %1536 = load i64, i64* %12, align 8
  %1537 = getelementptr inbounds i8, i8* %1535, i64 %1536
  %1538 = load i8, i8* %1537, align 1
  store i8 %1538, i8* %1530, align 1
  %1539 = load i64, i64* %12, align 8
  %1540 = add i64 %1539, 1
  store i64 %1540, i64* %12, align 8
  %1541 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 1
  %1542 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1543 = bitcast %"class.base::RefCountedMemory"* %1542 to i8* (%"class.base::RefCountedMemory"*)***
  %1544 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1543, align 8
  %1545 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1544, align 8
  %1546 = tail call i8* %1545(%"class.base::RefCountedMemory"* %1542) #11
  %1547 = load i64, i64* %12, align 8
  %1548 = getelementptr inbounds i8, i8* %1546, i64 %1547
  %1549 = load i8, i8* %1548, align 1
  store i8 %1549, i8* %1541, align 1
  %1550 = load i64, i64* %12, align 8
  %1551 = add i64 %1550, 1
  store i64 %1551, i64* %12, align 8
  %1552 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 2
  %1553 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1554 = bitcast %"class.base::RefCountedMemory"* %1553 to i8* (%"class.base::RefCountedMemory"*)***
  %1555 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1554, align 8
  %1556 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1555, align 8
  %1557 = tail call i8* %1556(%"class.base::RefCountedMemory"* %1553) #11
  %1558 = load i64, i64* %12, align 8
  %1559 = getelementptr inbounds i8, i8* %1557, i64 %1558
  %1560 = load i8, i8* %1559, align 1
  store i8 %1560, i8* %1552, align 1
  %1561 = load i64, i64* %12, align 8
  %1562 = add i64 %1561, 1
  store i64 %1562, i64* %12, align 8
  %1563 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 3
  %1564 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1565 = bitcast %"class.base::RefCountedMemory"* %1564 to i8* (%"class.base::RefCountedMemory"*)***
  %1566 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1565, align 8
  %1567 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1566, align 8
  %1568 = tail call i8* %1567(%"class.base::RefCountedMemory"* %1564) #11
  %1569 = load i64, i64* %12, align 8
  %1570 = getelementptr inbounds i8, i8* %1568, i64 %1569
  %1571 = load i8, i8* %1570, align 1
  store i8 %1571, i8* %1563, align 1
  %1572 = load i64, i64* %12, align 8
  %1573 = add i64 %1572, 1
  store i64 %1573, i64* %12, align 8
  %1574 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 4
  %1575 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1576 = bitcast %"class.base::RefCountedMemory"* %1575 to i8* (%"class.base::RefCountedMemory"*)***
  %1577 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1576, align 8
  %1578 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1577, align 8
  %1579 = tail call i8* %1578(%"class.base::RefCountedMemory"* %1575) #11
  %1580 = load i64, i64* %12, align 8
  %1581 = getelementptr inbounds i8, i8* %1579, i64 %1580
  %1582 = load i8, i8* %1581, align 1
  store i8 %1582, i8* %1574, align 1
  %1583 = load i64, i64* %12, align 8
  %1584 = add i64 %1583, 1
  store i64 %1584, i64* %12, align 8
  %1585 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 5
  %1586 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1587 = bitcast %"class.base::RefCountedMemory"* %1586 to i8* (%"class.base::RefCountedMemory"*)***
  %1588 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1587, align 8
  %1589 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1588, align 8
  %1590 = tail call i8* %1589(%"class.base::RefCountedMemory"* %1586) #11
  %1591 = load i64, i64* %12, align 8
  %1592 = getelementptr inbounds i8, i8* %1590, i64 %1591
  %1593 = load i8, i8* %1592, align 1
  store i8 %1593, i8* %1585, align 1
  %1594 = load i64, i64* %12, align 8
  %1595 = add i64 %1594, 1
  store i64 %1595, i64* %12, align 8
  %1596 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 0, i32 6, i32 1, i32 0, i64 6
  %1597 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1598 = bitcast %"class.base::RefCountedMemory"* %1597 to i8* (%"class.base::RefCountedMemory"*)***
  %1599 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1598, align 8
  %1600 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1599, align 8
  %1601 = tail call i8* %1600(%"class.base::RefCountedMemory"* %1597) #11
  %1602 = load i64, i64* %12, align 8
  %1603 = getelementptr inbounds i8, i8* %1601, i64 %1602
  %1604 = load i8, i8* %1603, align 1
  store i8 %1604, i8* %1596, align 1
  %1605 = load i64, i64* %12, align 8
  %1606 = add i64 %1605, 1
  store i64 %1606, i64* %12, align 8
  %1607 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %1462, i64 1
  %1608 = icmp eq %"struct.x11::Xkb::SymInterpret"* %1607, %1434
  br i1 %1608, label %1437, label %1461

1609:                                             ; preds = %1457, %1609
  %1610 = phi %"struct.x11::Xkb::ModDef"* [ %1645, %1609 ], [ %1459, %1457 ]
  %1611 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %1610, i64 0, i32 0
  %1612 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %1610, i64 0, i32 1
  %1613 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %1610, i64 0, i32 2
  %1614 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1615 = bitcast %"class.base::RefCountedMemory"* %1614 to i8* (%"class.base::RefCountedMemory"*)***
  %1616 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1615, align 8
  %1617 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1616, align 8
  %1618 = tail call i8* %1617(%"class.base::RefCountedMemory"* %1614) #11
  %1619 = load i64, i64* %12, align 8
  %1620 = getelementptr inbounds i8, i8* %1618, i64 %1619
  %1621 = load i8, i8* %1620, align 1
  %1622 = add i64 %1619, 1
  store i64 %1622, i64* %12, align 8
  %1623 = zext i8 %1621 to i32
  store i32 %1623, i32* %1611, align 4
  %1624 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1625 = bitcast %"class.base::RefCountedMemory"* %1624 to i8* (%"class.base::RefCountedMemory"*)***
  %1626 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1625, align 8
  %1627 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1626, align 8
  %1628 = tail call i8* %1627(%"class.base::RefCountedMemory"* %1624) #11
  %1629 = load i64, i64* %12, align 8
  %1630 = getelementptr inbounds i8, i8* %1628, i64 %1629
  %1631 = load i8, i8* %1630, align 1
  %1632 = add i64 %1629, 1
  store i64 %1632, i64* %12, align 8
  %1633 = zext i8 %1631 to i32
  store i32 %1633, i32* %1612, align 4
  %1634 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1635 = bitcast %"class.base::RefCountedMemory"* %1634 to i8* (%"class.base::RefCountedMemory"*)***
  %1636 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1635, align 8
  %1637 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1636, align 8
  %1638 = tail call i8* %1637(%"class.base::RefCountedMemory"* %1634) #11
  %1639 = load i64, i64* %12, align 8
  %1640 = getelementptr inbounds i8, i8* %1638, i64 %1639
  %1641 = bitcast i8* %1640 to i16*
  %1642 = load i16, i16* %1641, align 1
  %1643 = add i64 %1639, 2
  store i64 %1643, i64* %12, align 8
  %1644 = zext i16 %1642 to i32
  store i32 %1644, i32* %1613, align 4
  %1645 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %1610, i64 1
  %1646 = icmp eq %"struct.x11::Xkb::ModDef"* %1645, %1458
  br i1 %1646, label %1647, label %1609

1647:                                             ; preds = %1609, %1457, %1285
  %1648 = and i32 %103, 16
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1863, label %1650

1650:                                             ; preds = %1647
  %1651 = getelementptr inbounds i8, i8* %2, i64 424
  %1652 = load i8, i8* %1651, align 8, !range !2
  %1653 = icmp eq i8 %1652, 0
  br i1 %1653, label %1665, label %1654

1654:                                             ; preds = %1650
  %1655 = getelementptr inbounds i8, i8* %2, i64 448
  %1656 = bitcast i8* %1655 to %"struct.x11::Xkb::IndicatorMap"**
  %1657 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %1656, align 8
  %1658 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %1657, null
  br i1 %1658, label %1664, label %1659

1659:                                             ; preds = %1654
  %1660 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %1657 to i64
  %1661 = getelementptr inbounds i8, i8* %2, i64 456
  %1662 = bitcast i8* %1661 to i64*
  store i64 %1660, i64* %1662, align 8
  %1663 = bitcast %"struct.x11::Xkb::IndicatorMap"* %1657 to i8*
  tail call void @_ZdlPv(i8* %1663) #12
  br label %1664

1664:                                             ; preds = %1659, %1654
  store i8 0, i8* %1651, align 8
  br label %1665

1665:                                             ; preds = %1664, %1650
  %1666 = getelementptr inbounds i8, i8* %2, i64 432
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1666, i8 0, i64 40, i1 false) #11
  store i8 1, i8* %1651, align 8
  %1667 = getelementptr inbounds i8, i8* %2, i64 433
  %1668 = getelementptr inbounds i8, i8* %2, i64 434
  %1669 = bitcast i8* %1668 to i16*
  %1670 = getelementptr inbounds i8, i8* %2, i64 436
  %1671 = bitcast i8* %1670 to i32*
  %1672 = getelementptr inbounds i8, i8* %2, i64 440
  %1673 = bitcast i8* %1672 to i32*
  %1674 = getelementptr inbounds i8, i8* %2, i64 444
  %1675 = bitcast i8* %1674 to i32*
  %1676 = getelementptr inbounds i8, i8* %2, i64 448
  %1677 = getelementptr inbounds i8, i8* %2, i64 456
  %1678 = bitcast i8* %1677 to %"struct.x11::Xkb::IndicatorMap"**
  %1679 = bitcast i8* %1677 to i64*
  %1680 = bitcast i8* %1676 to i64*
  %1681 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1682 = bitcast %"class.base::RefCountedMemory"* %1681 to i8* (%"class.base::RefCountedMemory"*)***
  %1683 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1682, align 8
  %1684 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1683, align 8
  %1685 = tail call i8* %1684(%"class.base::RefCountedMemory"* %1681) #11
  %1686 = load i64, i64* %12, align 8
  %1687 = getelementptr inbounds i8, i8* %1685, i64 %1686
  %1688 = load i8, i8* %1687, align 1
  store i8 %1688, i8* %1666, align 1
  %1689 = add i64 %1686, 1
  store i64 %1689, i64* %12, align 8
  %1690 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1691 = bitcast %"class.base::RefCountedMemory"* %1690 to i8* (%"class.base::RefCountedMemory"*)***
  %1692 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1691, align 8
  %1693 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1692, align 8
  %1694 = tail call i8* %1693(%"class.base::RefCountedMemory"* %1690) #11
  %1695 = load i64, i64* %12, align 8
  %1696 = getelementptr inbounds i8, i8* %1694, i64 %1695
  %1697 = load i8, i8* %1696, align 1
  store i8 %1697, i8* %1667, align 1
  %1698 = add i64 %1695, 1
  store i64 %1698, i64* %12, align 8
  %1699 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1700 = bitcast %"class.base::RefCountedMemory"* %1699 to i8* (%"class.base::RefCountedMemory"*)***
  %1701 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1700, align 8
  %1702 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1701, align 8
  %1703 = tail call i8* %1702(%"class.base::RefCountedMemory"* %1699) #11
  %1704 = load i64, i64* %12, align 8
  %1705 = getelementptr inbounds i8, i8* %1703, i64 %1704
  %1706 = bitcast i8* %1705 to i16*
  %1707 = load i16, i16* %1706, align 1
  store i16 %1707, i16* %1669, align 2
  %1708 = add i64 %1704, 2
  store i64 %1708, i64* %12, align 8
  %1709 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1710 = bitcast %"class.base::RefCountedMemory"* %1709 to i8* (%"class.base::RefCountedMemory"*)***
  %1711 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1710, align 8
  %1712 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1711, align 8
  %1713 = tail call i8* %1712(%"class.base::RefCountedMemory"* %1709) #11
  %1714 = load i64, i64* %12, align 8
  %1715 = getelementptr inbounds i8, i8* %1713, i64 %1714
  %1716 = bitcast i8* %1715 to i32*
  %1717 = load i32, i32* %1716, align 1
  store i32 %1717, i32* %1671, align 4
  %1718 = add i64 %1714, 4
  store i64 %1718, i64* %12, align 8
  %1719 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1720 = bitcast %"class.base::RefCountedMemory"* %1719 to i8* (%"class.base::RefCountedMemory"*)***
  %1721 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1720, align 8
  %1722 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1721, align 8
  %1723 = tail call i8* %1722(%"class.base::RefCountedMemory"* %1719) #11
  %1724 = load i64, i64* %12, align 8
  %1725 = getelementptr inbounds i8, i8* %1723, i64 %1724
  %1726 = bitcast i8* %1725 to i32*
  %1727 = load i32, i32* %1726, align 1
  store i32 %1727, i32* %1673, align 4
  %1728 = add i64 %1724, 4
  store i64 %1728, i64* %12, align 8
  %1729 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1730 = bitcast %"class.base::RefCountedMemory"* %1729 to i8* (%"class.base::RefCountedMemory"*)***
  %1731 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1730, align 8
  %1732 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1731, align 8
  %1733 = tail call i8* %1732(%"class.base::RefCountedMemory"* %1729) #11
  %1734 = load i64, i64* %12, align 8
  %1735 = getelementptr inbounds i8, i8* %1733, i64 %1734
  %1736 = bitcast i8* %1735 to i32*
  %1737 = load i32, i32* %1736, align 1
  store i32 %1737, i32* %1675, align 4
  %1738 = add i64 %1734, 4
  store i64 %1738, i64* %12, align 8
  %1739 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1740 = bitcast %"class.base::RefCountedMemory"* %1739 to i8* (%"class.base::RefCountedMemory"*)***
  %1741 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1740, align 8
  %1742 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1741, align 8
  %1743 = tail call i8* %1742(%"class.base::RefCountedMemory"* %1739) #11
  %1744 = load i64, i64* %12, align 8
  %1745 = getelementptr inbounds i8, i8* %1743, i64 %1744
  %1746 = load i8, i8* %1745, align 1
  %1747 = add i64 %1744, 16
  store i64 %1747, i64* %12, align 8
  %1748 = zext i8 %1746 to i64
  %1749 = load i64, i64* %1679, align 8
  %1750 = load i64, i64* %1680, align 8
  %1751 = sub i64 %1749, %1750
  %1752 = ashr exact i64 %1751, 5
  %1753 = icmp ult i64 %1752, %1748
  %1754 = inttoptr i64 %1750 to %"struct.x11::Xkb::IndicatorMap"*
  br i1 %1753, label %1755, label %1761

1755:                                             ; preds = %1665
  %1756 = bitcast i8* %1676 to %"class.std::__1::vector.547"*
  %1757 = sub nsw i64 %1748, %1752
  tail call void @_ZNSt3__16vectorIN3x113Xkb12IndicatorMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.547"* %1756, i64 %1757) #11
  %1758 = bitcast i8* %1676 to %"struct.x11::Xkb::IndicatorMap"**
  %1759 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %1758, align 8
  %1760 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %1678, align 8
  br label %1766

1761:                                             ; preds = %1665
  %1762 = inttoptr i64 %1749 to %"struct.x11::Xkb::IndicatorMap"*
  %1763 = icmp ugt i64 %1752, %1748
  br i1 %1763, label %1764, label %1766

1764:                                             ; preds = %1761
  %1765 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1754, i64 %1748
  store %"struct.x11::Xkb::IndicatorMap"* %1765, %"struct.x11::Xkb::IndicatorMap"** %1678, align 8
  br label %1766

1766:                                             ; preds = %1755, %1761, %1764
  %1767 = phi %"struct.x11::Xkb::IndicatorMap"* [ %1760, %1755 ], [ %1762, %1761 ], [ %1765, %1764 ]
  %1768 = phi %"struct.x11::Xkb::IndicatorMap"* [ %1759, %1755 ], [ %1754, %1761 ], [ %1754, %1764 ]
  %1769 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %1768, %1767
  br i1 %1769, label %1863, label %1770

1770:                                             ; preds = %1766, %1770
  %1771 = phi %"struct.x11::Xkb::IndicatorMap"* [ %1861, %1770 ], [ %1768, %1766 ]
  %1772 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 0
  %1773 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 1
  %1774 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 2
  %1775 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 3
  %1776 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 4
  %1777 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 5
  %1778 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 6
  %1779 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 0, i32 7
  %1780 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1781 = bitcast %"class.base::RefCountedMemory"* %1780 to i8* (%"class.base::RefCountedMemory"*)***
  %1782 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1781, align 8
  %1783 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1782, align 8
  %1784 = tail call i8* %1783(%"class.base::RefCountedMemory"* %1780) #11
  %1785 = load i64, i64* %12, align 8
  %1786 = getelementptr inbounds i8, i8* %1784, i64 %1785
  %1787 = load i8, i8* %1786, align 1
  %1788 = add i64 %1785, 1
  store i64 %1788, i64* %12, align 8
  %1789 = zext i8 %1787 to i32
  store i32 %1789, i32* %1772, align 4
  %1790 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1791 = bitcast %"class.base::RefCountedMemory"* %1790 to i8* (%"class.base::RefCountedMemory"*)***
  %1792 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1791, align 8
  %1793 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1792, align 8
  %1794 = tail call i8* %1793(%"class.base::RefCountedMemory"* %1790) #11
  %1795 = load i64, i64* %12, align 8
  %1796 = getelementptr inbounds i8, i8* %1794, i64 %1795
  %1797 = load i8, i8* %1796, align 1
  %1798 = add i64 %1795, 1
  store i64 %1798, i64* %12, align 8
  %1799 = zext i8 %1797 to i32
  store i32 %1799, i32* %1773, align 4
  %1800 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1801 = bitcast %"class.base::RefCountedMemory"* %1800 to i8* (%"class.base::RefCountedMemory"*)***
  %1802 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1801, align 8
  %1803 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1802, align 8
  %1804 = tail call i8* %1803(%"class.base::RefCountedMemory"* %1800) #11
  %1805 = load i64, i64* %12, align 8
  %1806 = getelementptr inbounds i8, i8* %1804, i64 %1805
  %1807 = load i8, i8* %1806, align 1
  %1808 = add i64 %1805, 1
  store i64 %1808, i64* %12, align 8
  %1809 = zext i8 %1807 to i32
  store i32 %1809, i32* %1774, align 4
  %1810 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1811 = bitcast %"class.base::RefCountedMemory"* %1810 to i8* (%"class.base::RefCountedMemory"*)***
  %1812 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1811, align 8
  %1813 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1812, align 8
  %1814 = tail call i8* %1813(%"class.base::RefCountedMemory"* %1810) #11
  %1815 = load i64, i64* %12, align 8
  %1816 = getelementptr inbounds i8, i8* %1814, i64 %1815
  %1817 = load i8, i8* %1816, align 1
  %1818 = add i64 %1815, 1
  store i64 %1818, i64* %12, align 8
  %1819 = zext i8 %1817 to i32
  store i32 %1819, i32* %1775, align 4
  %1820 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1821 = bitcast %"class.base::RefCountedMemory"* %1820 to i8* (%"class.base::RefCountedMemory"*)***
  %1822 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1821, align 8
  %1823 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1822, align 8
  %1824 = tail call i8* %1823(%"class.base::RefCountedMemory"* %1820) #11
  %1825 = load i64, i64* %12, align 8
  %1826 = getelementptr inbounds i8, i8* %1824, i64 %1825
  %1827 = load i8, i8* %1826, align 1
  %1828 = add i64 %1825, 1
  store i64 %1828, i64* %12, align 8
  %1829 = zext i8 %1827 to i32
  store i32 %1829, i32* %1776, align 4
  %1830 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1831 = bitcast %"class.base::RefCountedMemory"* %1830 to i8* (%"class.base::RefCountedMemory"*)***
  %1832 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1831, align 8
  %1833 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1832, align 8
  %1834 = tail call i8* %1833(%"class.base::RefCountedMemory"* %1830) #11
  %1835 = load i64, i64* %12, align 8
  %1836 = getelementptr inbounds i8, i8* %1834, i64 %1835
  %1837 = load i8, i8* %1836, align 1
  %1838 = add i64 %1835, 1
  store i64 %1838, i64* %12, align 8
  %1839 = zext i8 %1837 to i32
  store i32 %1839, i32* %1777, align 4
  %1840 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1841 = bitcast %"class.base::RefCountedMemory"* %1840 to i8* (%"class.base::RefCountedMemory"*)***
  %1842 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1841, align 8
  %1843 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1842, align 8
  %1844 = tail call i8* %1843(%"class.base::RefCountedMemory"* %1840) #11
  %1845 = load i64, i64* %12, align 8
  %1846 = getelementptr inbounds i8, i8* %1844, i64 %1845
  %1847 = bitcast i8* %1846 to i16*
  %1848 = load i16, i16* %1847, align 1
  %1849 = add i64 %1845, 2
  store i64 %1849, i64* %12, align 8
  %1850 = zext i16 %1848 to i32
  store i32 %1850, i32* %1778, align 4
  %1851 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1852 = bitcast %"class.base::RefCountedMemory"* %1851 to i8* (%"class.base::RefCountedMemory"*)***
  %1853 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1852, align 8
  %1854 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1853, align 8
  %1855 = tail call i8* %1854(%"class.base::RefCountedMemory"* %1851) #11
  %1856 = load i64, i64* %12, align 8
  %1857 = getelementptr inbounds i8, i8* %1855, i64 %1856
  %1858 = bitcast i8* %1857 to i32*
  %1859 = load i32, i32* %1858, align 1
  %1860 = add i64 %1856, 4
  store i64 %1860, i64* %12, align 8
  store i32 %1859, i32* %1779, align 4
  %1861 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %1771, i64 1
  %1862 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %1861, %1767
  br i1 %1862, label %1863, label %1770

1863:                                             ; preds = %1770, %1766, %1647
  %1864 = and i32 %103, 32
  %1865 = icmp ne i32 %1864, 0
  %1866 = trunc i16 %102 to i8
  %1867 = icmp slt i8 %1866, 0
  %1868 = or i1 %1867, %1865
  br i1 %1868, label %1869, label %2825

1869:                                             ; preds = %1863
  %1870 = getelementptr inbounds i8, i8* %2, i64 472
  %1871 = load i8, i8* %1870, align 8, !range !2
  %1872 = icmp eq i8 %1871, 0
  br i1 %1872, label %1876, label %1873

1873:                                             ; preds = %1869
  %1874 = getelementptr inbounds i8, i8* %2, i64 480
  %1875 = bitcast i8* %1874 to %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"*
  tail call void @_ZN3x113Xkb17GetKbdByNameReply8KeyNamesD2Ev(%"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %1875) #11
  store i8 0, i8* %1870, align 8
  br label %1876

1876:                                             ; preds = %1869, %1873
  %1877 = getelementptr inbounds i8, i8* %2, i64 480
  %1878 = getelementptr inbounds i8, i8* %2, i64 492
  %1879 = getelementptr inbounds i8, i8* %2, i64 504
  %1880 = getelementptr inbounds i8, i8* %2, i64 520
  %1881 = getelementptr inbounds i8, i8* %2, i64 528
  %1882 = getelementptr inbounds i8, i8* %2, i64 536
  %1883 = getelementptr inbounds i8, i8* %2, i64 544
  %1884 = getelementptr inbounds i8, i8* %2, i64 552
  %1885 = getelementptr inbounds i8, i8* %2, i64 560
  %1886 = getelementptr inbounds i8, i8* %2, i64 568
  %1887 = getelementptr inbounds i8, i8* %2, i64 600
  %1888 = getelementptr inbounds i8, i8* %2, i64 632
  %1889 = getelementptr inbounds i8, i8* %2, i64 664
  %1890 = getelementptr inbounds i8, i8* %2, i64 696
  %1891 = getelementptr inbounds i8, i8* %2, i64 728
  %1892 = getelementptr inbounds i8, i8* %2, i64 760
  %1893 = getelementptr inbounds i8, i8* %2, i64 792
  %1894 = getelementptr inbounds i8, i8* %2, i64 824
  call void @llvm.memset.p0i8.i64(i8* align 8 %1877, i8 0, i64 368, i1 false)
  store i8 1, i8* %1870, align 8
  %1895 = getelementptr inbounds i8, i8* %2, i64 481
  %1896 = getelementptr inbounds i8, i8* %2, i64 482
  %1897 = bitcast i8* %1896 to i16*
  %1898 = getelementptr inbounds i8, i8* %2, i64 484
  %1899 = bitcast i8* %1898 to i32*
  %1900 = getelementptr inbounds i8, i8* %2, i64 488
  %1901 = getelementptr inbounds i8, i8* %2, i64 489
  %1902 = getelementptr inbounds i8, i8* %2, i64 490
  %1903 = bitcast i8* %1878 to i32*
  %1904 = getelementptr inbounds i8, i8* %2, i64 496
  %1905 = bitcast i8* %1904 to i32*
  %1906 = getelementptr inbounds i8, i8* %2, i64 500
  %1907 = getelementptr inbounds i8, i8* %2, i64 501
  %1908 = bitcast i8* %1879 to i32*
  %1909 = getelementptr inbounds i8, i8* %2, i64 508
  %1910 = getelementptr inbounds i8, i8* %2, i64 509
  %1911 = getelementptr inbounds i8, i8* %2, i64 510
  %1912 = bitcast i8* %1911 to i16*
  %1913 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1914 = bitcast %"class.base::RefCountedMemory"* %1913 to i8* (%"class.base::RefCountedMemory"*)***
  %1915 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1914, align 8
  %1916 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1915, align 8
  %1917 = tail call i8* %1916(%"class.base::RefCountedMemory"* %1913) #11
  %1918 = load i64, i64* %12, align 8
  %1919 = getelementptr inbounds i8, i8* %1917, i64 %1918
  %1920 = load i8, i8* %1919, align 1
  store i8 %1920, i8* %1877, align 1
  %1921 = add i64 %1918, 1
  store i64 %1921, i64* %12, align 8
  %1922 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1923 = bitcast %"class.base::RefCountedMemory"* %1922 to i8* (%"class.base::RefCountedMemory"*)***
  %1924 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1923, align 8
  %1925 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1924, align 8
  %1926 = tail call i8* %1925(%"class.base::RefCountedMemory"* %1922) #11
  %1927 = load i64, i64* %12, align 8
  %1928 = getelementptr inbounds i8, i8* %1926, i64 %1927
  %1929 = load i8, i8* %1928, align 1
  store i8 %1929, i8* %1895, align 1
  %1930 = add i64 %1927, 1
  store i64 %1930, i64* %12, align 8
  %1931 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1932 = bitcast %"class.base::RefCountedMemory"* %1931 to i8* (%"class.base::RefCountedMemory"*)***
  %1933 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1932, align 8
  %1934 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1933, align 8
  %1935 = tail call i8* %1934(%"class.base::RefCountedMemory"* %1931) #11
  %1936 = load i64, i64* %12, align 8
  %1937 = getelementptr inbounds i8, i8* %1935, i64 %1936
  %1938 = bitcast i8* %1937 to i16*
  %1939 = load i16, i16* %1938, align 1
  store i16 %1939, i16* %1897, align 2
  %1940 = add i64 %1936, 2
  store i64 %1940, i64* %12, align 8
  %1941 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1942 = bitcast %"class.base::RefCountedMemory"* %1941 to i8* (%"class.base::RefCountedMemory"*)***
  %1943 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1942, align 8
  %1944 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1943, align 8
  %1945 = tail call i8* %1944(%"class.base::RefCountedMemory"* %1941) #11
  %1946 = load i64, i64* %12, align 8
  %1947 = getelementptr inbounds i8, i8* %1945, i64 %1946
  %1948 = bitcast i8* %1947 to i32*
  %1949 = load i32, i32* %1948, align 1
  store i32 %1949, i32* %1899, align 4
  %1950 = add i64 %1946, 4
  store i64 %1950, i64* %12, align 8
  %1951 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1952 = bitcast %"class.base::RefCountedMemory"* %1951 to i8* (%"class.base::RefCountedMemory"*)***
  %1953 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1952, align 8
  %1954 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1953, align 8
  %1955 = tail call i8* %1954(%"class.base::RefCountedMemory"* %1951) #11
  %1956 = load i64, i64* %12, align 8
  %1957 = getelementptr inbounds i8, i8* %1955, i64 %1956
  %1958 = bitcast i8* %1957 to i32*
  %1959 = load i32, i32* %1958, align 1
  %1960 = add i64 %1956, 4
  store i64 %1960, i64* %12, align 8
  %1961 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1962 = bitcast %"class.base::RefCountedMemory"* %1961 to i8* (%"class.base::RefCountedMemory"*)***
  %1963 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1962, align 8
  %1964 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1963, align 8
  %1965 = tail call i8* %1964(%"class.base::RefCountedMemory"* %1961) #11
  %1966 = load i64, i64* %12, align 8
  %1967 = getelementptr inbounds i8, i8* %1965, i64 %1966
  %1968 = load i8, i8* %1967, align 1
  store i8 %1968, i8* %1900, align 1
  %1969 = add i64 %1966, 1
  store i64 %1969, i64* %12, align 8
  %1970 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1971 = bitcast %"class.base::RefCountedMemory"* %1970 to i8* (%"class.base::RefCountedMemory"*)***
  %1972 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1971, align 8
  %1973 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1972, align 8
  %1974 = tail call i8* %1973(%"class.base::RefCountedMemory"* %1970) #11
  %1975 = load i64, i64* %12, align 8
  %1976 = getelementptr inbounds i8, i8* %1974, i64 %1975
  %1977 = load i8, i8* %1976, align 1
  store i8 %1977, i8* %1901, align 1
  %1978 = add i64 %1975, 1
  store i64 %1978, i64* %12, align 8
  %1979 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1980 = bitcast %"class.base::RefCountedMemory"* %1979 to i8* (%"class.base::RefCountedMemory"*)***
  %1981 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1980, align 8
  %1982 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1981, align 8
  %1983 = tail call i8* %1982(%"class.base::RefCountedMemory"* %1979) #11
  %1984 = load i64, i64* %12, align 8
  %1985 = getelementptr inbounds i8, i8* %1983, i64 %1984
  %1986 = load i8, i8* %1985, align 1
  store i8 %1986, i8* %1902, align 1
  %1987 = add i64 %1984, 1
  store i64 %1987, i64* %12, align 8
  %1988 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1989 = bitcast %"class.base::RefCountedMemory"* %1988 to i8* (%"class.base::RefCountedMemory"*)***
  %1990 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1989, align 8
  %1991 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %1990, align 8
  %1992 = tail call i8* %1991(%"class.base::RefCountedMemory"* %1988) #11
  %1993 = load i64, i64* %12, align 8
  %1994 = getelementptr inbounds i8, i8* %1992, i64 %1993
  %1995 = load i8, i8* %1994, align 1
  %1996 = add i64 %1993, 1
  store i64 %1996, i64* %12, align 8
  %1997 = zext i8 %1995 to i32
  store i32 %1997, i32* %1903, align 4
  %1998 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %1999 = bitcast %"class.base::RefCountedMemory"* %1998 to i8* (%"class.base::RefCountedMemory"*)***
  %2000 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %1999, align 8
  %2001 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2000, align 8
  %2002 = tail call i8* %2001(%"class.base::RefCountedMemory"* %1998) #11
  %2003 = load i64, i64* %12, align 8
  %2004 = getelementptr inbounds i8, i8* %2002, i64 %2003
  %2005 = bitcast i8* %2004 to i16*
  %2006 = load i16, i16* %2005, align 1
  %2007 = add i64 %2003, 2
  store i64 %2007, i64* %12, align 8
  %2008 = zext i16 %2006 to i32
  store i32 %2008, i32* %1905, align 4
  %2009 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2010 = bitcast %"class.base::RefCountedMemory"* %2009 to i8* (%"class.base::RefCountedMemory"*)***
  %2011 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2010, align 8
  %2012 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2011, align 8
  %2013 = tail call i8* %2012(%"class.base::RefCountedMemory"* %2009) #11
  %2014 = load i64, i64* %12, align 8
  %2015 = getelementptr inbounds i8, i8* %2013, i64 %2014
  %2016 = load i8, i8* %2015, align 1
  store i8 %2016, i8* %1906, align 1
  %2017 = add i64 %2014, 1
  store i64 %2017, i64* %12, align 8
  %2018 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2019 = bitcast %"class.base::RefCountedMemory"* %2018 to i8* (%"class.base::RefCountedMemory"*)***
  %2020 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2019, align 8
  %2021 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2020, align 8
  %2022 = tail call i8* %2021(%"class.base::RefCountedMemory"* %2018) #11
  %2023 = load i64, i64* %12, align 8
  %2024 = getelementptr inbounds i8, i8* %2022, i64 %2023
  %2025 = load i8, i8* %2024, align 1
  store i8 %2025, i8* %1907, align 1
  %2026 = add i64 %2023, 1
  store i64 %2026, i64* %12, align 8
  %2027 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2028 = bitcast %"class.base::RefCountedMemory"* %2027 to i8* (%"class.base::RefCountedMemory"*)***
  %2029 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2028, align 8
  %2030 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2029, align 8
  %2031 = tail call i8* %2030(%"class.base::RefCountedMemory"* %2027) #11
  %2032 = load i64, i64* %12, align 8
  %2033 = getelementptr inbounds i8, i8* %2031, i64 %2032
  %2034 = bitcast i8* %2033 to i32*
  %2035 = load i32, i32* %2034, align 1
  store i32 %2035, i32* %1908, align 4
  %2036 = add i64 %2032, 4
  store i64 %2036, i64* %12, align 8
  %2037 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2038 = bitcast %"class.base::RefCountedMemory"* %2037 to i8* (%"class.base::RefCountedMemory"*)***
  %2039 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2038, align 8
  %2040 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2039, align 8
  %2041 = tail call i8* %2040(%"class.base::RefCountedMemory"* %2037) #11
  %2042 = load i64, i64* %12, align 8
  %2043 = getelementptr inbounds i8, i8* %2041, i64 %2042
  %2044 = load i8, i8* %2043, align 1
  store i8 %2044, i8* %1909, align 1
  %2045 = add i64 %2042, 1
  store i64 %2045, i64* %12, align 8
  %2046 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2047 = bitcast %"class.base::RefCountedMemory"* %2046 to i8* (%"class.base::RefCountedMemory"*)***
  %2048 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2047, align 8
  %2049 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2048, align 8
  %2050 = tail call i8* %2049(%"class.base::RefCountedMemory"* %2046) #11
  %2051 = load i64, i64* %12, align 8
  %2052 = getelementptr inbounds i8, i8* %2050, i64 %2051
  %2053 = load i8, i8* %2052, align 1
  store i8 %2053, i8* %1910, align 1
  %2054 = add i64 %2051, 1
  store i64 %2054, i64* %12, align 8
  %2055 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2056 = bitcast %"class.base::RefCountedMemory"* %2055 to i8* (%"class.base::RefCountedMemory"*)***
  %2057 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2056, align 8
  %2058 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2057, align 8
  %2059 = tail call i8* %2058(%"class.base::RefCountedMemory"* %2055) #11
  %2060 = load i64, i64* %12, align 8
  %2061 = getelementptr inbounds i8, i8* %2059, i64 %2060
  %2062 = bitcast i8* %2061 to i16*
  %2063 = load i16, i16* %2062, align 1
  store i16 %2063, i16* %1912, align 2
  %2064 = add i64 %2060, 6
  store i64 %2064, i64* %12, align 8
  %2065 = and i32 %1959, 1
  %2066 = icmp eq i32 %2065, 0
  br i1 %2066, label %2081, label %2067

2067:                                             ; preds = %1876
  %2068 = getelementptr inbounds i8, i8* %2, i64 512
  %2069 = getelementptr inbounds i8, i8* %2, i64 516
  %2070 = bitcast i8* %2069 to i32*
  store i32 0, i32* %2070, align 4
  store i8 1, i8* %2068, align 4
  %2071 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2072 = bitcast %"class.base::RefCountedMemory"* %2071 to i8* (%"class.base::RefCountedMemory"*)***
  %2073 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2072, align 8
  %2074 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2073, align 8
  %2075 = tail call i8* %2074(%"class.base::RefCountedMemory"* %2071) #11
  %2076 = load i64, i64* %12, align 8
  %2077 = getelementptr inbounds i8, i8* %2075, i64 %2076
  %2078 = bitcast i8* %2077 to i32*
  %2079 = load i32, i32* %2078, align 1
  store i32 %2079, i32* %2070, align 4
  %2080 = add i64 %2076, 4
  store i64 %2080, i64* %12, align 8
  br label %2081

2081:                                             ; preds = %1876, %2067
  %2082 = and i32 %1959, 2
  %2083 = icmp eq i32 %2082, 0
  br i1 %2083, label %2097, label %2084

2084:                                             ; preds = %2081
  %2085 = getelementptr inbounds i8, i8* %2, i64 524
  %2086 = bitcast i8* %2085 to i32*
  store i32 0, i32* %2086, align 4
  store i8 1, i8* %1880, align 4
  %2087 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2088 = bitcast %"class.base::RefCountedMemory"* %2087 to i8* (%"class.base::RefCountedMemory"*)***
  %2089 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2088, align 8
  %2090 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2089, align 8
  %2091 = tail call i8* %2090(%"class.base::RefCountedMemory"* %2087) #11
  %2092 = load i64, i64* %12, align 8
  %2093 = getelementptr inbounds i8, i8* %2091, i64 %2092
  %2094 = bitcast i8* %2093 to i32*
  %2095 = load i32, i32* %2094, align 1
  store i32 %2095, i32* %2086, align 4
  %2096 = add i64 %2092, 4
  store i64 %2096, i64* %12, align 8
  br label %2097

2097:                                             ; preds = %2081, %2084
  %2098 = and i32 %1959, 4
  %2099 = icmp eq i32 %2098, 0
  br i1 %2099, label %2113, label %2100

2100:                                             ; preds = %2097
  %2101 = getelementptr inbounds i8, i8* %2, i64 532
  %2102 = bitcast i8* %2101 to i32*
  store i32 0, i32* %2102, align 4
  store i8 1, i8* %1881, align 4
  %2103 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2104 = bitcast %"class.base::RefCountedMemory"* %2103 to i8* (%"class.base::RefCountedMemory"*)***
  %2105 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2104, align 8
  %2106 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2105, align 8
  %2107 = tail call i8* %2106(%"class.base::RefCountedMemory"* %2103) #11
  %2108 = load i64, i64* %12, align 8
  %2109 = getelementptr inbounds i8, i8* %2107, i64 %2108
  %2110 = bitcast i8* %2109 to i32*
  %2111 = load i32, i32* %2110, align 1
  store i32 %2111, i32* %2102, align 4
  %2112 = add i64 %2108, 4
  store i64 %2112, i64* %12, align 8
  br label %2113

2113:                                             ; preds = %2097, %2100
  %2114 = and i32 %1959, 8
  %2115 = icmp eq i32 %2114, 0
  br i1 %2115, label %2129, label %2116

2116:                                             ; preds = %2113
  %2117 = getelementptr inbounds i8, i8* %2, i64 540
  %2118 = bitcast i8* %2117 to i32*
  store i32 0, i32* %2118, align 4
  store i8 1, i8* %1882, align 4
  %2119 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2120 = bitcast %"class.base::RefCountedMemory"* %2119 to i8* (%"class.base::RefCountedMemory"*)***
  %2121 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2120, align 8
  %2122 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2121, align 8
  %2123 = tail call i8* %2122(%"class.base::RefCountedMemory"* %2119) #11
  %2124 = load i64, i64* %12, align 8
  %2125 = getelementptr inbounds i8, i8* %2123, i64 %2124
  %2126 = bitcast i8* %2125 to i32*
  %2127 = load i32, i32* %2126, align 1
  store i32 %2127, i32* %2118, align 4
  %2128 = add i64 %2124, 4
  store i64 %2128, i64* %12, align 8
  br label %2129

2129:                                             ; preds = %2113, %2116
  %2130 = and i32 %1959, 16
  %2131 = icmp eq i32 %2130, 0
  br i1 %2131, label %2145, label %2132

2132:                                             ; preds = %2129
  %2133 = getelementptr inbounds i8, i8* %2, i64 548
  %2134 = bitcast i8* %2133 to i32*
  store i32 0, i32* %2134, align 4
  store i8 1, i8* %1883, align 4
  %2135 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2136 = bitcast %"class.base::RefCountedMemory"* %2135 to i8* (%"class.base::RefCountedMemory"*)***
  %2137 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2136, align 8
  %2138 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2137, align 8
  %2139 = tail call i8* %2138(%"class.base::RefCountedMemory"* %2135) #11
  %2140 = load i64, i64* %12, align 8
  %2141 = getelementptr inbounds i8, i8* %2139, i64 %2140
  %2142 = bitcast i8* %2141 to i32*
  %2143 = load i32, i32* %2142, align 1
  store i32 %2143, i32* %2134, align 4
  %2144 = add i64 %2140, 4
  store i64 %2144, i64* %12, align 8
  br label %2145

2145:                                             ; preds = %2129, %2132
  %2146 = and i32 %1959, 32
  %2147 = icmp eq i32 %2146, 0
  br i1 %2147, label %2161, label %2148

2148:                                             ; preds = %2145
  %2149 = getelementptr inbounds i8, i8* %2, i64 556
  %2150 = bitcast i8* %2149 to i32*
  store i32 0, i32* %2150, align 4
  store i8 1, i8* %1884, align 4
  %2151 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2152 = bitcast %"class.base::RefCountedMemory"* %2151 to i8* (%"class.base::RefCountedMemory"*)***
  %2153 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2152, align 8
  %2154 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2153, align 8
  %2155 = tail call i8* %2154(%"class.base::RefCountedMemory"* %2151) #11
  %2156 = load i64, i64* %12, align 8
  %2157 = getelementptr inbounds i8, i8* %2155, i64 %2156
  %2158 = bitcast i8* %2157 to i32*
  %2159 = load i32, i32* %2158, align 1
  store i32 %2159, i32* %2150, align 4
  %2160 = add i64 %2156, 4
  store i64 %2160, i64* %12, align 8
  br label %2161

2161:                                             ; preds = %2145, %2148
  %2162 = and i32 %1959, 64
  %2163 = icmp eq i32 %2162, 0
  br i1 %2163, label %2204, label %2164

2164:                                             ; preds = %2161
  %2165 = load i8, i8* %1885, align 8, !range !2
  %2166 = icmp eq i8 %2165, 0
  br i1 %2166, label %2177, label %2167

2167:                                             ; preds = %2164
  %2168 = bitcast i8* %1886 to i32**
  %2169 = load i32*, i32** %2168, align 8
  %2170 = icmp eq i32* %2169, null
  br i1 %2170, label %2176, label %2171

2171:                                             ; preds = %2167
  %2172 = ptrtoint i32* %2169 to i64
  %2173 = getelementptr inbounds i8, i8* %2, i64 576
  %2174 = bitcast i8* %2173 to i64*
  store i64 %2172, i64* %2174, align 8
  %2175 = bitcast i32* %2169 to i8*
  tail call void @_ZdlPv(i8* %2175) #12
  br label %2176

2176:                                             ; preds = %2171, %2167
  store i8 0, i8* %1885, align 8
  br label %2177

2177:                                             ; preds = %2176, %2164
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1886, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1885, align 8
  %2178 = load i8, i8* %1902, align 1
  %2179 = icmp eq i8 %2178, 0
  br i1 %2179, label %2204, label %2180

2180:                                             ; preds = %2177
  %2181 = zext i8 %2178 to i64
  %2182 = getelementptr inbounds i8, i8* %2, i64 576
  %2183 = bitcast i8* %2182 to i32**
  %2184 = bitcast i8* %1886 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2184, i64 %2181) #11
  %2185 = bitcast i8* %1886 to i32**
  %2186 = load i32*, i32** %2185, align 8
  %2187 = load i32*, i32** %2183, align 8
  %2188 = icmp eq i32* %2186, %2187
  br i1 %2188, label %2204, label %2189

2189:                                             ; preds = %2180, %2189
  %2190 = phi i32* [ %2202, %2189 ], [ %2186, %2180 ]
  %2191 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2192 = bitcast %"class.base::RefCountedMemory"* %2191 to i8* (%"class.base::RefCountedMemory"*)***
  %2193 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2192, align 8
  %2194 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2193, align 8
  %2195 = tail call i8* %2194(%"class.base::RefCountedMemory"* %2191) #11
  %2196 = load i64, i64* %12, align 8
  %2197 = getelementptr inbounds i8, i8* %2195, i64 %2196
  %2198 = bitcast i8* %2197 to i32*
  %2199 = load i32, i32* %2198, align 1
  store i32 %2199, i32* %2190, align 4
  %2200 = load i64, i64* %12, align 8
  %2201 = add i64 %2200, 4
  store i64 %2201, i64* %12, align 8
  %2202 = getelementptr inbounds i32, i32* %2190, i64 1
  %2203 = icmp eq i32* %2202, %2187
  br i1 %2203, label %2204, label %2189

2204:                                             ; preds = %2189, %2177, %2180, %2161
  %2205 = trunc i32 %1959 to i8
  %2206 = icmp slt i8 %2205, 0
  br i1 %2206, label %2207, label %2448

2207:                                             ; preds = %2204
  %2208 = getelementptr inbounds i8, i8* %2, i64 592
  %2209 = load i8, i8* %2208, align 8, !range !2
  %2210 = icmp eq i8 %2209, 0
  br i1 %2210, label %2220, label %2211

2211:                                             ; preds = %2207
  %2212 = bitcast i8* %1887 to i8**
  %2213 = load i8*, i8** %2212, align 8
  %2214 = icmp eq i8* %2213, null
  br i1 %2214, label %2219, label %2215

2215:                                             ; preds = %2211
  %2216 = ptrtoint i8* %2213 to i64
  %2217 = getelementptr inbounds i8, i8* %2, i64 608
  %2218 = bitcast i8* %2217 to i64*
  store i64 %2216, i64* %2218, align 8
  tail call void @_ZdlPv(i8* nonnull %2213) #12
  br label %2219

2219:                                             ; preds = %2215, %2211
  store i8 0, i8* %2208, align 8
  br label %2220

2220:                                             ; preds = %2207, %2219
  %2221 = bitcast i8* %1887 to %"class.std::__1::vector.271"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1887, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2208, align 8
  %2222 = getelementptr inbounds i8, i8* %2, i64 624
  %2223 = load i8, i8* %2222, align 8, !range !2
  %2224 = icmp eq i8 %2223, 0
  br i1 %2224, label %2225, label %2226

2225:                                             ; preds = %2220
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1888, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2222, align 8
  br label %2247

2226:                                             ; preds = %2220
  %2227 = bitcast i8* %1888 to i32**
  %2228 = load i32*, i32** %2227, align 8
  %2229 = icmp eq i32* %2228, null
  br i1 %2229, label %2230, label %2231

2230:                                             ; preds = %2226
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1888, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2222, align 8
  br label %2238

2231:                                             ; preds = %2226
  %2232 = ptrtoint i32* %2228 to i64
  %2233 = getelementptr inbounds i8, i8* %2, i64 640
  %2234 = bitcast i8* %2233 to i64*
  store i64 %2232, i64* %2234, align 8
  %2235 = bitcast i32* %2228 to i8*
  tail call void @_ZdlPv(i8* %2235) #12
  %2236 = load i8, i8* %2208, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1888, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2222, align 8
  %2237 = icmp eq i8 %2236, 0
  br i1 %2237, label %2246, label %2238, !prof !3

2238:                                             ; preds = %2230, %2231
  %2239 = getelementptr inbounds i8, i8* %2, i64 608
  %2240 = bitcast i8* %2239 to i64*
  %2241 = load i64, i64* %2240, align 8
  %2242 = bitcast i8* %1887 to i64*
  %2243 = load i64, i64* %2242, align 8
  %2244 = inttoptr i64 %2243 to i8*
  %2245 = inttoptr i64 %2241 to i8*
  br label %2247

2246:                                             ; preds = %2231
  tail call void @llvm.trap() #11
  unreachable

2247:                                             ; preds = %2238, %2225
  %2248 = phi i8* [ %2245, %2238 ], [ null, %2225 ]
  %2249 = phi i8* [ %2244, %2238 ], [ null, %2225 ]
  %2250 = phi i64 [ %2243, %2238 ], [ 0, %2225 ]
  %2251 = phi i64 [ %2241, %2238 ], [ 0, %2225 ]
  %2252 = bitcast i8* %1888 to %"class.std::__1::vector.580"*
  %2253 = getelementptr inbounds i8, i8* %2, i64 608
  %2254 = bitcast i8* %2253 to i8**
  %2255 = getelementptr inbounds i8, i8* %2, i64 640
  %2256 = bitcast i8* %2255 to i32**
  %2257 = bitcast i8* %2255 to i64*
  %2258 = bitcast i8* %1888 to i64*
  %2259 = load i8, i8* %1902, align 1
  %2260 = zext i8 %2259 to i64
  %2261 = sub i64 %2251, %2250
  %2262 = icmp ult i64 %2261, %2260
  %2263 = inttoptr i64 %2250 to i8*
  br i1 %2262, label %2264, label %2269

2264:                                             ; preds = %2247
  %2265 = sub i64 %2260, %2261
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.271"* %2221, i64 %2265) #11
  %2266 = bitcast i8* %1887 to i8**
  %2267 = load i8*, i8** %2266, align 8
  %2268 = load i8*, i8** %2254, align 8
  br label %2273

2269:                                             ; preds = %2247
  %2270 = icmp ugt i64 %2261, %2260
  br i1 %2270, label %2271, label %2273

2271:                                             ; preds = %2269
  %2272 = getelementptr inbounds i8, i8* %2263, i64 %2260
  store i8* %2272, i8** %2254, align 8
  br label %2273

2273:                                             ; preds = %2264, %2269, %2271
  %2274 = phi i8* [ %2268, %2264 ], [ %2248, %2269 ], [ %2272, %2271 ]
  %2275 = phi i8* [ %2267, %2264 ], [ %2249, %2269 ], [ %2249, %2271 ]
  %2276 = bitcast i8* %1887 to i8**
  %2277 = icmp eq i8* %2275, %2274
  br i1 %2277, label %2278, label %2419

2278:                                             ; preds = %2273
  %2279 = load i64, i64* %12, align 8
  br label %2282

2280:                                             ; preds = %2419
  %2281 = load i8*, i8** %2254, align 8
  br label %2282

2282:                                             ; preds = %2278, %2280
  %2283 = phi i8* [ %2274, %2278 ], [ %2281, %2280 ]
  %2284 = phi i64 [ %2279, %2278 ], [ %2430, %2280 ]
  %2285 = sub i64 0, %2284
  %2286 = and i64 %2285, 3
  %2287 = add i64 %2286, %2284
  store i64 %2287, i64* %12, align 8
  %2288 = load i8*, i8** %2276, align 8
  %2289 = icmp eq i8* %2288, %2283
  br i1 %2289, label %2396, label %2290

2290:                                             ; preds = %2282
  %2291 = ptrtoint i8* %2288 to i64
  %2292 = sub i64 0, %2291
  %2293 = getelementptr i8, i8* %2283, i64 %2292
  %2294 = ptrtoint i8* %2293 to i64
  %2295 = icmp ult i8* %2293, inttoptr (i64 32 to i8*)
  br i1 %2295, label %2386, label %2296

2296:                                             ; preds = %2290
  %2297 = and i64 %2294, -32
  %2298 = getelementptr i8, i8* %2288, i64 %2297
  %2299 = add i64 %2297, -32
  %2300 = lshr exact i64 %2299, 5
  %2301 = add nuw nsw i64 %2300, 1
  %2302 = and i64 %2301, 3
  %2303 = icmp ult i64 %2299, 96
  br i1 %2303, label %2349, label %2304

2304:                                             ; preds = %2296
  %2305 = sub nsw i64 %2301, %2302
  br label %2306

2306:                                             ; preds = %2306, %2304
  %2307 = phi i64 [ 0, %2304 ], [ %2346, %2306 ]
  %2308 = phi <16 x i8> [ zeroinitializer, %2304 ], [ %2344, %2306 ]
  %2309 = phi <16 x i8> [ zeroinitializer, %2304 ], [ %2345, %2306 ]
  %2310 = phi i64 [ %2305, %2304 ], [ %2347, %2306 ]
  %2311 = getelementptr i8, i8* %2288, i64 %2307
  %2312 = bitcast i8* %2311 to <16 x i8>*
  %2313 = load <16 x i8>, <16 x i8>* %2312, align 1
  %2314 = getelementptr i8, i8* %2311, i64 16
  %2315 = bitcast i8* %2314 to <16 x i8>*
  %2316 = load <16 x i8>, <16 x i8>* %2315, align 1
  %2317 = add <16 x i8> %2313, %2308
  %2318 = add <16 x i8> %2316, %2309
  %2319 = or i64 %2307, 32
  %2320 = getelementptr i8, i8* %2288, i64 %2319
  %2321 = bitcast i8* %2320 to <16 x i8>*
  %2322 = load <16 x i8>, <16 x i8>* %2321, align 1
  %2323 = getelementptr i8, i8* %2320, i64 16
  %2324 = bitcast i8* %2323 to <16 x i8>*
  %2325 = load <16 x i8>, <16 x i8>* %2324, align 1
  %2326 = add <16 x i8> %2322, %2317
  %2327 = add <16 x i8> %2325, %2318
  %2328 = or i64 %2307, 64
  %2329 = getelementptr i8, i8* %2288, i64 %2328
  %2330 = bitcast i8* %2329 to <16 x i8>*
  %2331 = load <16 x i8>, <16 x i8>* %2330, align 1
  %2332 = getelementptr i8, i8* %2329, i64 16
  %2333 = bitcast i8* %2332 to <16 x i8>*
  %2334 = load <16 x i8>, <16 x i8>* %2333, align 1
  %2335 = add <16 x i8> %2331, %2326
  %2336 = add <16 x i8> %2334, %2327
  %2337 = or i64 %2307, 96
  %2338 = getelementptr i8, i8* %2288, i64 %2337
  %2339 = bitcast i8* %2338 to <16 x i8>*
  %2340 = load <16 x i8>, <16 x i8>* %2339, align 1
  %2341 = getelementptr i8, i8* %2338, i64 16
  %2342 = bitcast i8* %2341 to <16 x i8>*
  %2343 = load <16 x i8>, <16 x i8>* %2342, align 1
  %2344 = add <16 x i8> %2340, %2335
  %2345 = add <16 x i8> %2343, %2336
  %2346 = add i64 %2307, 128
  %2347 = add i64 %2310, -4
  %2348 = icmp eq i64 %2347, 0
  br i1 %2348, label %2349, label %2306, !llvm.loop !11

2349:                                             ; preds = %2306, %2296
  %2350 = phi <16 x i8> [ undef, %2296 ], [ %2344, %2306 ]
  %2351 = phi <16 x i8> [ undef, %2296 ], [ %2345, %2306 ]
  %2352 = phi i64 [ 0, %2296 ], [ %2346, %2306 ]
  %2353 = phi <16 x i8> [ zeroinitializer, %2296 ], [ %2344, %2306 ]
  %2354 = phi <16 x i8> [ zeroinitializer, %2296 ], [ %2345, %2306 ]
  %2355 = icmp eq i64 %2302, 0
  br i1 %2355, label %2372, label %2356

2356:                                             ; preds = %2349, %2356
  %2357 = phi i64 [ %2369, %2356 ], [ %2352, %2349 ]
  %2358 = phi <16 x i8> [ %2367, %2356 ], [ %2353, %2349 ]
  %2359 = phi <16 x i8> [ %2368, %2356 ], [ %2354, %2349 ]
  %2360 = phi i64 [ %2370, %2356 ], [ %2302, %2349 ]
  %2361 = getelementptr i8, i8* %2288, i64 %2357
  %2362 = bitcast i8* %2361 to <16 x i8>*
  %2363 = load <16 x i8>, <16 x i8>* %2362, align 1
  %2364 = getelementptr i8, i8* %2361, i64 16
  %2365 = bitcast i8* %2364 to <16 x i8>*
  %2366 = load <16 x i8>, <16 x i8>* %2365, align 1
  %2367 = add <16 x i8> %2363, %2358
  %2368 = add <16 x i8> %2366, %2359
  %2369 = add i64 %2357, 32
  %2370 = add i64 %2360, -1
  %2371 = icmp eq i64 %2370, 0
  br i1 %2371, label %2372, label %2356, !llvm.loop !12

2372:                                             ; preds = %2356, %2349
  %2373 = phi <16 x i8> [ %2350, %2349 ], [ %2367, %2356 ]
  %2374 = phi <16 x i8> [ %2351, %2349 ], [ %2368, %2356 ]
  %2375 = add <16 x i8> %2374, %2373
  %2376 = shufflevector <16 x i8> %2375, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2377 = add <16 x i8> %2375, %2376
  %2378 = shufflevector <16 x i8> %2377, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2379 = add <16 x i8> %2377, %2378
  %2380 = shufflevector <16 x i8> %2379, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2381 = add <16 x i8> %2379, %2380
  %2382 = shufflevector <16 x i8> %2381, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2383 = add <16 x i8> %2381, %2382
  %2384 = extractelement <16 x i8> %2383, i32 0
  %2385 = icmp eq i64 %2297, %2294
  br i1 %2385, label %2396, label %2386

2386:                                             ; preds = %2372, %2290
  %2387 = phi i8 [ 0, %2290 ], [ %2384, %2372 ]
  %2388 = phi i8* [ %2288, %2290 ], [ %2298, %2372 ]
  br label %2389

2389:                                             ; preds = %2386, %2389
  %2390 = phi i8 [ %2393, %2389 ], [ %2387, %2386 ]
  %2391 = phi i8* [ %2394, %2389 ], [ %2388, %2386 ]
  %2392 = load i8, i8* %2391, align 1
  %2393 = add i8 %2392, %2390
  %2394 = getelementptr inbounds i8, i8* %2391, i64 1
  %2395 = icmp eq i8* %2394, %2283
  br i1 %2395, label %2396, label %2389, !llvm.loop !13

2396:                                             ; preds = %2389, %2372, %2282
  %2397 = phi i8 [ 0, %2282 ], [ %2384, %2372 ], [ %2393, %2389 ]
  %2398 = zext i8 %2397 to i64
  %2399 = load i64, i64* %2257, align 8
  %2400 = load i64, i64* %2258, align 8
  %2401 = sub i64 %2399, %2400
  %2402 = ashr exact i64 %2401, 2
  %2403 = icmp ult i64 %2402, %2398
  %2404 = inttoptr i64 %2400 to i32*
  br i1 %2403, label %2405, label %2410

2405:                                             ; preds = %2396
  %2406 = sub nsw i64 %2398, %2402
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2252, i64 %2406) #11
  %2407 = bitcast i8* %1888 to i32**
  %2408 = load i32*, i32** %2407, align 8
  %2409 = load i32*, i32** %2256, align 8
  br label %2415

2410:                                             ; preds = %2396
  %2411 = inttoptr i64 %2399 to i32*
  %2412 = icmp ugt i64 %2402, %2398
  br i1 %2412, label %2413, label %2415

2413:                                             ; preds = %2410
  %2414 = getelementptr inbounds i32, i32* %2404, i64 %2398
  store i32* %2414, i32** %2256, align 8
  br label %2415

2415:                                             ; preds = %2405, %2410, %2413
  %2416 = phi i32* [ %2409, %2405 ], [ %2411, %2410 ], [ %2414, %2413 ]
  %2417 = phi i32* [ %2408, %2405 ], [ %2404, %2410 ], [ %2404, %2413 ]
  %2418 = icmp eq i32* %2417, %2416
  br i1 %2418, label %2448, label %2433

2419:                                             ; preds = %2273, %2419
  %2420 = phi i8* [ %2431, %2419 ], [ %2275, %2273 ]
  %2421 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2422 = bitcast %"class.base::RefCountedMemory"* %2421 to i8* (%"class.base::RefCountedMemory"*)***
  %2423 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2422, align 8
  %2424 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2423, align 8
  %2425 = tail call i8* %2424(%"class.base::RefCountedMemory"* %2421) #11
  %2426 = load i64, i64* %12, align 8
  %2427 = getelementptr inbounds i8, i8* %2425, i64 %2426
  %2428 = load i8, i8* %2427, align 1
  store i8 %2428, i8* %2420, align 1
  %2429 = load i64, i64* %12, align 8
  %2430 = add i64 %2429, 1
  store i64 %2430, i64* %12, align 8
  %2431 = getelementptr inbounds i8, i8* %2420, i64 1
  %2432 = icmp eq i8* %2431, %2274
  br i1 %2432, label %2280, label %2419

2433:                                             ; preds = %2415, %2433
  %2434 = phi i32* [ %2446, %2433 ], [ %2417, %2415 ]
  %2435 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2436 = bitcast %"class.base::RefCountedMemory"* %2435 to i8* (%"class.base::RefCountedMemory"*)***
  %2437 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2436, align 8
  %2438 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2437, align 8
  %2439 = tail call i8* %2438(%"class.base::RefCountedMemory"* %2435) #11
  %2440 = load i64, i64* %12, align 8
  %2441 = getelementptr inbounds i8, i8* %2439, i64 %2440
  %2442 = bitcast i8* %2441 to i32*
  %2443 = load i32, i32* %2442, align 1
  store i32 %2443, i32* %2434, align 4
  %2444 = load i64, i64* %12, align 8
  %2445 = add i64 %2444, 4
  store i64 %2445, i64* %12, align 8
  %2446 = getelementptr inbounds i32, i32* %2434, i64 1
  %2447 = icmp eq i32* %2446, %2416
  br i1 %2447, label %2448, label %2433

2448:                                             ; preds = %2433, %2415, %2204
  %2449 = and i32 %1959, 256
  %2450 = icmp eq i32 %2449, 0
  br i1 %2450, label %2493, label %2451

2451:                                             ; preds = %2448
  %2452 = getelementptr inbounds i8, i8* %2, i64 656
  %2453 = load i8, i8* %2452, align 8, !range !2
  %2454 = icmp eq i8 %2453, 0
  br i1 %2454, label %2465, label %2455

2455:                                             ; preds = %2451
  %2456 = bitcast i8* %1889 to i32**
  %2457 = load i32*, i32** %2456, align 8
  %2458 = icmp eq i32* %2457, null
  br i1 %2458, label %2464, label %2459

2459:                                             ; preds = %2455
  %2460 = ptrtoint i32* %2457 to i64
  %2461 = getelementptr inbounds i8, i8* %2, i64 672
  %2462 = bitcast i8* %2461 to i64*
  store i64 %2460, i64* %2462, align 8
  %2463 = bitcast i32* %2457 to i8*
  tail call void @_ZdlPv(i8* %2463) #12
  br label %2464

2464:                                             ; preds = %2459, %2455
  store i8 0, i8* %2452, align 8
  br label %2465

2465:                                             ; preds = %2464, %2451
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1889, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2452, align 8
  %2466 = load i32, i32* %1908, align 4
  %2467 = icmp eq i32 %2466, 0
  br i1 %2467, label %2493, label %2468

2468:                                             ; preds = %2465
  %2469 = zext i32 %2466 to i64
  %2470 = tail call i64 @llvm.ctpop.i64(i64 %2469) #11, !range !4
  %2471 = getelementptr inbounds i8, i8* %2, i64 672
  %2472 = bitcast i8* %2471 to i32**
  %2473 = bitcast i8* %1889 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2473, i64 %2470) #11
  %2474 = bitcast i8* %1889 to i32**
  %2475 = load i32*, i32** %2474, align 8
  %2476 = load i32*, i32** %2472, align 8
  %2477 = icmp eq i32* %2475, %2476
  br i1 %2477, label %2493, label %2478

2478:                                             ; preds = %2468, %2478
  %2479 = phi i32* [ %2491, %2478 ], [ %2475, %2468 ]
  %2480 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2481 = bitcast %"class.base::RefCountedMemory"* %2480 to i8* (%"class.base::RefCountedMemory"*)***
  %2482 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2481, align 8
  %2483 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2482, align 8
  %2484 = tail call i8* %2483(%"class.base::RefCountedMemory"* %2480) #11
  %2485 = load i64, i64* %12, align 8
  %2486 = getelementptr inbounds i8, i8* %2484, i64 %2485
  %2487 = bitcast i8* %2486 to i32*
  %2488 = load i32, i32* %2487, align 1
  store i32 %2488, i32* %2479, align 4
  %2489 = load i64, i64* %12, align 8
  %2490 = add i64 %2489, 4
  store i64 %2490, i64* %12, align 8
  %2491 = getelementptr inbounds i32, i32* %2479, i64 1
  %2492 = icmp eq i32* %2491, %2476
  br i1 %2492, label %2493, label %2478

2493:                                             ; preds = %2478, %2465, %2468, %2448
  %2494 = and i32 %1959, 2048
  %2495 = icmp eq i32 %2494, 0
  br i1 %2495, label %2538, label %2496

2496:                                             ; preds = %2493
  %2497 = getelementptr inbounds i8, i8* %2, i64 688
  %2498 = load i8, i8* %2497, align 8, !range !2
  %2499 = icmp eq i8 %2498, 0
  br i1 %2499, label %2510, label %2500

2500:                                             ; preds = %2496
  %2501 = bitcast i8* %1890 to i32**
  %2502 = load i32*, i32** %2501, align 8
  %2503 = icmp eq i32* %2502, null
  br i1 %2503, label %2509, label %2504

2504:                                             ; preds = %2500
  %2505 = ptrtoint i32* %2502 to i64
  %2506 = getelementptr inbounds i8, i8* %2, i64 704
  %2507 = bitcast i8* %2506 to i64*
  store i64 %2505, i64* %2507, align 8
  %2508 = bitcast i32* %2502 to i8*
  tail call void @_ZdlPv(i8* %2508) #12
  br label %2509

2509:                                             ; preds = %2504, %2500
  store i8 0, i8* %2497, align 8
  br label %2510

2510:                                             ; preds = %2509, %2496
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1890, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2497, align 8
  %2511 = load i32, i32* %1905, align 4
  %2512 = icmp eq i32 %2511, 0
  br i1 %2512, label %2538, label %2513

2513:                                             ; preds = %2510
  %2514 = zext i32 %2511 to i64
  %2515 = tail call i64 @llvm.ctpop.i64(i64 %2514) #11, !range !4
  %2516 = getelementptr inbounds i8, i8* %2, i64 704
  %2517 = bitcast i8* %2516 to i32**
  %2518 = bitcast i8* %1890 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2518, i64 %2515) #11
  %2519 = bitcast i8* %1890 to i32**
  %2520 = load i32*, i32** %2519, align 8
  %2521 = load i32*, i32** %2517, align 8
  %2522 = icmp eq i32* %2520, %2521
  br i1 %2522, label %2538, label %2523

2523:                                             ; preds = %2513, %2523
  %2524 = phi i32* [ %2536, %2523 ], [ %2520, %2513 ]
  %2525 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2526 = bitcast %"class.base::RefCountedMemory"* %2525 to i8* (%"class.base::RefCountedMemory"*)***
  %2527 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2526, align 8
  %2528 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2527, align 8
  %2529 = tail call i8* %2528(%"class.base::RefCountedMemory"* %2525) #11
  %2530 = load i64, i64* %12, align 8
  %2531 = getelementptr inbounds i8, i8* %2529, i64 %2530
  %2532 = bitcast i8* %2531 to i32*
  %2533 = load i32, i32* %2532, align 1
  store i32 %2533, i32* %2524, align 4
  %2534 = load i64, i64* %12, align 8
  %2535 = add i64 %2534, 4
  store i64 %2535, i64* %12, align 8
  %2536 = getelementptr inbounds i32, i32* %2524, i64 1
  %2537 = icmp eq i32* %2536, %2521
  br i1 %2537, label %2538, label %2523

2538:                                             ; preds = %2523, %2510, %2513, %2493
  %2539 = and i32 %1959, 4096
  %2540 = icmp eq i32 %2539, 0
  br i1 %2540, label %2583, label %2541

2541:                                             ; preds = %2538
  %2542 = getelementptr inbounds i8, i8* %2, i64 720
  %2543 = load i8, i8* %2542, align 8, !range !2
  %2544 = icmp eq i8 %2543, 0
  br i1 %2544, label %2555, label %2545

2545:                                             ; preds = %2541
  %2546 = bitcast i8* %1891 to i32**
  %2547 = load i32*, i32** %2546, align 8
  %2548 = icmp eq i32* %2547, null
  br i1 %2548, label %2554, label %2549

2549:                                             ; preds = %2545
  %2550 = ptrtoint i32* %2547 to i64
  %2551 = getelementptr inbounds i8, i8* %2, i64 736
  %2552 = bitcast i8* %2551 to i64*
  store i64 %2550, i64* %2552, align 8
  %2553 = bitcast i32* %2547 to i8*
  tail call void @_ZdlPv(i8* %2553) #12
  br label %2554

2554:                                             ; preds = %2549, %2545
  store i8 0, i8* %2542, align 8
  br label %2555

2555:                                             ; preds = %2554, %2541
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1891, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2542, align 8
  %2556 = load i32, i32* %1903, align 4
  %2557 = icmp eq i32 %2556, 0
  br i1 %2557, label %2583, label %2558

2558:                                             ; preds = %2555
  %2559 = zext i32 %2556 to i64
  %2560 = tail call i64 @llvm.ctpop.i64(i64 %2559) #11, !range !4
  %2561 = getelementptr inbounds i8, i8* %2, i64 736
  %2562 = bitcast i8* %2561 to i32**
  %2563 = bitcast i8* %1891 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2563, i64 %2560) #11
  %2564 = bitcast i8* %1891 to i32**
  %2565 = load i32*, i32** %2564, align 8
  %2566 = load i32*, i32** %2562, align 8
  %2567 = icmp eq i32* %2565, %2566
  br i1 %2567, label %2583, label %2568

2568:                                             ; preds = %2558, %2568
  %2569 = phi i32* [ %2581, %2568 ], [ %2565, %2558 ]
  %2570 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2571 = bitcast %"class.base::RefCountedMemory"* %2570 to i8* (%"class.base::RefCountedMemory"*)***
  %2572 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2571, align 8
  %2573 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2572, align 8
  %2574 = tail call i8* %2573(%"class.base::RefCountedMemory"* %2570) #11
  %2575 = load i64, i64* %12, align 8
  %2576 = getelementptr inbounds i8, i8* %2574, i64 %2575
  %2577 = bitcast i8* %2576 to i32*
  %2578 = load i32, i32* %2577, align 1
  store i32 %2578, i32* %2569, align 4
  %2579 = load i64, i64* %12, align 8
  %2580 = add i64 %2579, 4
  store i64 %2580, i64* %12, align 8
  %2581 = getelementptr inbounds i32, i32* %2569, i64 1
  %2582 = icmp eq i32* %2581, %2566
  br i1 %2582, label %2583, label %2568

2583:                                             ; preds = %2568, %2555, %2558, %2538
  %2584 = and i32 %1959, 512
  %2585 = icmp eq i32 %2584, 0
  br i1 %2585, label %2660, label %2586

2586:                                             ; preds = %2583
  %2587 = getelementptr inbounds i8, i8* %2, i64 752
  %2588 = load i8, i8* %2587, align 8, !range !2
  %2589 = icmp eq i8 %2588, 0
  br i1 %2589, label %2600, label %2590

2590:                                             ; preds = %2586
  %2591 = bitcast i8* %1892 to %"struct.x11::Xkb::KeyName"**
  %2592 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %2591, align 8
  %2593 = icmp eq %"struct.x11::Xkb::KeyName"* %2592, null
  br i1 %2593, label %2599, label %2594

2594:                                             ; preds = %2590
  %2595 = ptrtoint %"struct.x11::Xkb::KeyName"* %2592 to i64
  %2596 = getelementptr inbounds i8, i8* %2, i64 768
  %2597 = bitcast i8* %2596 to i64*
  store i64 %2595, i64* %2597, align 8
  %2598 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2592, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %2598) #12
  br label %2599

2599:                                             ; preds = %2594, %2590
  store i8 0, i8* %2587, align 8
  br label %2600

2600:                                             ; preds = %2599, %2586
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1892, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2587, align 8
  %2601 = load i8, i8* %1907, align 1
  %2602 = icmp eq i8 %2601, 0
  br i1 %2602, label %2660, label %2603

2603:                                             ; preds = %2600
  %2604 = zext i8 %2601 to i64
  %2605 = getelementptr inbounds i8, i8* %2, i64 768
  %2606 = bitcast i8* %2605 to %"struct.x11::Xkb::KeyName"**
  %2607 = bitcast i8* %1892 to %"class.std::__1::vector.592"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb7KeyNameENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.592"* %2607, i64 %2604) #11
  %2608 = bitcast i8* %1892 to %"struct.x11::Xkb::KeyName"**
  %2609 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %2608, align 8
  %2610 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %2606, align 8
  %2611 = icmp eq %"struct.x11::Xkb::KeyName"* %2609, %2610
  br i1 %2611, label %2660, label %2612

2612:                                             ; preds = %2603, %2612
  %2613 = phi %"struct.x11::Xkb::KeyName"* [ %2658, %2612 ], [ %2609, %2603 ]
  %2614 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2613, i64 0, i32 0, i32 0, i64 0
  %2615 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2616 = bitcast %"class.base::RefCountedMemory"* %2615 to i8* (%"class.base::RefCountedMemory"*)***
  %2617 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2616, align 8
  %2618 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2617, align 8
  %2619 = tail call i8* %2618(%"class.base::RefCountedMemory"* %2615) #11
  %2620 = load i64, i64* %12, align 8
  %2621 = getelementptr inbounds i8, i8* %2619, i64 %2620
  %2622 = load i8, i8* %2621, align 1
  store i8 %2622, i8* %2614, align 1
  %2623 = load i64, i64* %12, align 8
  %2624 = add i64 %2623, 1
  store i64 %2624, i64* %12, align 8
  %2625 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2613, i64 0, i32 0, i32 0, i64 1
  %2626 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2627 = bitcast %"class.base::RefCountedMemory"* %2626 to i8* (%"class.base::RefCountedMemory"*)***
  %2628 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2627, align 8
  %2629 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2628, align 8
  %2630 = tail call i8* %2629(%"class.base::RefCountedMemory"* %2626) #11
  %2631 = load i64, i64* %12, align 8
  %2632 = getelementptr inbounds i8, i8* %2630, i64 %2631
  %2633 = load i8, i8* %2632, align 1
  store i8 %2633, i8* %2625, align 1
  %2634 = load i64, i64* %12, align 8
  %2635 = add i64 %2634, 1
  store i64 %2635, i64* %12, align 8
  %2636 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2613, i64 0, i32 0, i32 0, i64 2
  %2637 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2638 = bitcast %"class.base::RefCountedMemory"* %2637 to i8* (%"class.base::RefCountedMemory"*)***
  %2639 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2638, align 8
  %2640 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2639, align 8
  %2641 = tail call i8* %2640(%"class.base::RefCountedMemory"* %2637) #11
  %2642 = load i64, i64* %12, align 8
  %2643 = getelementptr inbounds i8, i8* %2641, i64 %2642
  %2644 = load i8, i8* %2643, align 1
  store i8 %2644, i8* %2636, align 1
  %2645 = load i64, i64* %12, align 8
  %2646 = add i64 %2645, 1
  store i64 %2646, i64* %12, align 8
  %2647 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2613, i64 0, i32 0, i32 0, i64 3
  %2648 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2649 = bitcast %"class.base::RefCountedMemory"* %2648 to i8* (%"class.base::RefCountedMemory"*)***
  %2650 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2649, align 8
  %2651 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2650, align 8
  %2652 = tail call i8* %2651(%"class.base::RefCountedMemory"* %2648) #11
  %2653 = load i64, i64* %12, align 8
  %2654 = getelementptr inbounds i8, i8* %2652, i64 %2653
  %2655 = load i8, i8* %2654, align 1
  store i8 %2655, i8* %2647, align 1
  %2656 = load i64, i64* %12, align 8
  %2657 = add i64 %2656, 1
  store i64 %2657, i64* %12, align 8
  %2658 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %2613, i64 1
  %2659 = icmp eq %"struct.x11::Xkb::KeyName"* %2658, %2610
  br i1 %2659, label %2660, label %2612

2660:                                             ; preds = %2612, %2600, %2603, %2583
  %2661 = and i32 %1959, 1024
  %2662 = icmp eq i32 %2661, 0
  br i1 %2662, label %2781, label %2663

2663:                                             ; preds = %2660
  %2664 = getelementptr inbounds i8, i8* %2, i64 784
  %2665 = load i8, i8* %2664, align 8, !range !2
  %2666 = icmp eq i8 %2665, 0
  br i1 %2666, label %2677, label %2667

2667:                                             ; preds = %2663
  %2668 = bitcast i8* %1893 to %"struct.x11::Xkb::KeyAlias"**
  %2669 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %2668, align 8
  %2670 = icmp eq %"struct.x11::Xkb::KeyAlias"* %2669, null
  br i1 %2670, label %2676, label %2671

2671:                                             ; preds = %2667
  %2672 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %2669 to i64
  %2673 = getelementptr inbounds i8, i8* %2, i64 800
  %2674 = bitcast i8* %2673 to i64*
  store i64 %2672, i64* %2674, align 8
  %2675 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2669, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %2675) #12
  br label %2676

2676:                                             ; preds = %2671, %2667
  store i8 0, i8* %2664, align 8
  br label %2677

2677:                                             ; preds = %2676, %2663
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1893, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2664, align 8
  %2678 = load i8, i8* %1910, align 1
  %2679 = icmp eq i8 %2678, 0
  br i1 %2679, label %2781, label %2680

2680:                                             ; preds = %2677
  %2681 = zext i8 %2678 to i64
  %2682 = getelementptr inbounds i8, i8* %2, i64 800
  %2683 = bitcast i8* %2682 to %"struct.x11::Xkb::KeyAlias"**
  %2684 = bitcast i8* %1893 to %"class.std::__1::vector.605"*
  tail call void @_ZNSt3__16vectorIN3x113Xkb8KeyAliasENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.605"* %2684, i64 %2681) #11
  %2685 = bitcast i8* %1893 to %"struct.x11::Xkb::KeyAlias"**
  %2686 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %2685, align 8
  %2687 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %2683, align 8
  %2688 = icmp eq %"struct.x11::Xkb::KeyAlias"* %2686, %2687
  br i1 %2688, label %2781, label %2689

2689:                                             ; preds = %2680, %2689
  %2690 = phi %"struct.x11::Xkb::KeyAlias"* [ %2779, %2689 ], [ %2686, %2680 ]
  %2691 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 0, i32 0, i64 0
  %2692 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2693 = bitcast %"class.base::RefCountedMemory"* %2692 to i8* (%"class.base::RefCountedMemory"*)***
  %2694 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2693, align 8
  %2695 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2694, align 8
  %2696 = tail call i8* %2695(%"class.base::RefCountedMemory"* %2692) #11
  %2697 = load i64, i64* %12, align 8
  %2698 = getelementptr inbounds i8, i8* %2696, i64 %2697
  %2699 = load i8, i8* %2698, align 1
  store i8 %2699, i8* %2691, align 1
  %2700 = load i64, i64* %12, align 8
  %2701 = add i64 %2700, 1
  store i64 %2701, i64* %12, align 8
  %2702 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 0, i32 0, i64 1
  %2703 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2704 = bitcast %"class.base::RefCountedMemory"* %2703 to i8* (%"class.base::RefCountedMemory"*)***
  %2705 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2704, align 8
  %2706 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2705, align 8
  %2707 = tail call i8* %2706(%"class.base::RefCountedMemory"* %2703) #11
  %2708 = load i64, i64* %12, align 8
  %2709 = getelementptr inbounds i8, i8* %2707, i64 %2708
  %2710 = load i8, i8* %2709, align 1
  store i8 %2710, i8* %2702, align 1
  %2711 = load i64, i64* %12, align 8
  %2712 = add i64 %2711, 1
  store i64 %2712, i64* %12, align 8
  %2713 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 0, i32 0, i64 2
  %2714 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2715 = bitcast %"class.base::RefCountedMemory"* %2714 to i8* (%"class.base::RefCountedMemory"*)***
  %2716 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2715, align 8
  %2717 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2716, align 8
  %2718 = tail call i8* %2717(%"class.base::RefCountedMemory"* %2714) #11
  %2719 = load i64, i64* %12, align 8
  %2720 = getelementptr inbounds i8, i8* %2718, i64 %2719
  %2721 = load i8, i8* %2720, align 1
  store i8 %2721, i8* %2713, align 1
  %2722 = load i64, i64* %12, align 8
  %2723 = add i64 %2722, 1
  store i64 %2723, i64* %12, align 8
  %2724 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 0, i32 0, i64 3
  %2725 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2726 = bitcast %"class.base::RefCountedMemory"* %2725 to i8* (%"class.base::RefCountedMemory"*)***
  %2727 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2726, align 8
  %2728 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2727, align 8
  %2729 = tail call i8* %2728(%"class.base::RefCountedMemory"* %2725) #11
  %2730 = load i64, i64* %12, align 8
  %2731 = getelementptr inbounds i8, i8* %2729, i64 %2730
  %2732 = load i8, i8* %2731, align 1
  store i8 %2732, i8* %2724, align 1
  %2733 = load i64, i64* %12, align 8
  %2734 = add i64 %2733, 1
  store i64 %2734, i64* %12, align 8
  %2735 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 1, i32 0, i64 0
  %2736 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2737 = bitcast %"class.base::RefCountedMemory"* %2736 to i8* (%"class.base::RefCountedMemory"*)***
  %2738 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2737, align 8
  %2739 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2738, align 8
  %2740 = tail call i8* %2739(%"class.base::RefCountedMemory"* %2736) #11
  %2741 = load i64, i64* %12, align 8
  %2742 = getelementptr inbounds i8, i8* %2740, i64 %2741
  %2743 = load i8, i8* %2742, align 1
  store i8 %2743, i8* %2735, align 1
  %2744 = load i64, i64* %12, align 8
  %2745 = add i64 %2744, 1
  store i64 %2745, i64* %12, align 8
  %2746 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 1, i32 0, i64 1
  %2747 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2748 = bitcast %"class.base::RefCountedMemory"* %2747 to i8* (%"class.base::RefCountedMemory"*)***
  %2749 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2748, align 8
  %2750 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2749, align 8
  %2751 = tail call i8* %2750(%"class.base::RefCountedMemory"* %2747) #11
  %2752 = load i64, i64* %12, align 8
  %2753 = getelementptr inbounds i8, i8* %2751, i64 %2752
  %2754 = load i8, i8* %2753, align 1
  store i8 %2754, i8* %2746, align 1
  %2755 = load i64, i64* %12, align 8
  %2756 = add i64 %2755, 1
  store i64 %2756, i64* %12, align 8
  %2757 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 1, i32 0, i64 2
  %2758 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2759 = bitcast %"class.base::RefCountedMemory"* %2758 to i8* (%"class.base::RefCountedMemory"*)***
  %2760 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2759, align 8
  %2761 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2760, align 8
  %2762 = tail call i8* %2761(%"class.base::RefCountedMemory"* %2758) #11
  %2763 = load i64, i64* %12, align 8
  %2764 = getelementptr inbounds i8, i8* %2762, i64 %2763
  %2765 = load i8, i8* %2764, align 1
  store i8 %2765, i8* %2757, align 1
  %2766 = load i64, i64* %12, align 8
  %2767 = add i64 %2766, 1
  store i64 %2767, i64* %12, align 8
  %2768 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 0, i32 1, i32 0, i64 3
  %2769 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2770 = bitcast %"class.base::RefCountedMemory"* %2769 to i8* (%"class.base::RefCountedMemory"*)***
  %2771 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2770, align 8
  %2772 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2771, align 8
  %2773 = tail call i8* %2772(%"class.base::RefCountedMemory"* %2769) #11
  %2774 = load i64, i64* %12, align 8
  %2775 = getelementptr inbounds i8, i8* %2773, i64 %2774
  %2776 = load i8, i8* %2775, align 1
  store i8 %2776, i8* %2768, align 1
  %2777 = load i64, i64* %12, align 8
  %2778 = add i64 %2777, 1
  store i64 %2778, i64* %12, align 8
  %2779 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %2690, i64 1
  %2780 = icmp eq %"struct.x11::Xkb::KeyAlias"* %2779, %2687
  br i1 %2780, label %2781, label %2689

2781:                                             ; preds = %2689, %2677, %2680, %2660
  %2782 = and i32 %1959, 8192
  %2783 = icmp eq i32 %2782, 0
  br i1 %2783, label %2825, label %2784

2784:                                             ; preds = %2781
  %2785 = getelementptr inbounds i8, i8* %2, i64 816
  %2786 = load i8, i8* %2785, align 8, !range !2
  %2787 = icmp eq i8 %2786, 0
  br i1 %2787, label %2798, label %2788

2788:                                             ; preds = %2784
  %2789 = bitcast i8* %1894 to i32**
  %2790 = load i32*, i32** %2789, align 8
  %2791 = icmp eq i32* %2790, null
  br i1 %2791, label %2797, label %2792

2792:                                             ; preds = %2788
  %2793 = ptrtoint i32* %2790 to i64
  %2794 = getelementptr inbounds i8, i8* %2, i64 832
  %2795 = bitcast i8* %2794 to i64*
  store i64 %2793, i64* %2795, align 8
  %2796 = bitcast i32* %2790 to i8*
  tail call void @_ZdlPv(i8* %2796) #12
  br label %2797

2797:                                             ; preds = %2792, %2788
  store i8 0, i8* %2785, align 8
  br label %2798

2798:                                             ; preds = %2797, %2784
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1894, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %2785, align 8
  %2799 = load i8, i8* %1909, align 1
  %2800 = icmp eq i8 %2799, 0
  br i1 %2800, label %2825, label %2801

2801:                                             ; preds = %2798
  %2802 = zext i8 %2799 to i64
  %2803 = getelementptr inbounds i8, i8* %2, i64 832
  %2804 = bitcast i8* %2803 to i32**
  %2805 = bitcast i8* %1894 to %"class.std::__1::vector.580"*
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %2805, i64 %2802) #11
  %2806 = bitcast i8* %1894 to i32**
  %2807 = load i32*, i32** %2806, align 8
  %2808 = load i32*, i32** %2804, align 8
  %2809 = icmp eq i32* %2807, %2808
  br i1 %2809, label %2825, label %2810

2810:                                             ; preds = %2801, %2810
  %2811 = phi i32* [ %2823, %2810 ], [ %2807, %2801 ]
  %2812 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2813 = bitcast %"class.base::RefCountedMemory"* %2812 to i8* (%"class.base::RefCountedMemory"*)***
  %2814 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2813, align 8
  %2815 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2814, align 8
  %2816 = tail call i8* %2815(%"class.base::RefCountedMemory"* %2812) #11
  %2817 = load i64, i64* %12, align 8
  %2818 = getelementptr inbounds i8, i8* %2816, i64 %2817
  %2819 = bitcast i8* %2818 to i32*
  %2820 = load i32, i32* %2819, align 1
  store i32 %2820, i32* %2811, align 4
  %2821 = load i64, i64* %12, align 8
  %2822 = add i64 %2821, 4
  store i64 %2822, i64* %12, align 8
  %2823 = getelementptr inbounds i32, i32* %2811, i64 1
  %2824 = icmp eq i32* %2823, %2808
  br i1 %2824, label %2825, label %2810

2825:                                             ; preds = %2810, %2798, %2801, %2781, %1863
  %2826 = and i32 %103, 64
  %2827 = icmp eq i32 %2826, 0
  br i1 %2827, label %3119, label %2828

2828:                                             ; preds = %2825
  %2829 = getelementptr inbounds i8, i8* %2, i64 848
  %2830 = load i8, i8* %2829, align 8, !range !2
  %2831 = icmp eq i8 %2830, 0
  br i1 %2831, label %2858, label %2832

2832:                                             ; preds = %2828
  %2833 = getelementptr inbounds i8, i8* %2, i64 888
  %2834 = getelementptr inbounds i8, i8* %2, i64 912
  %2835 = bitcast i8* %2834 to %"class.base::RefCountedMemory"**
  %2836 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %2835, align 8
  %2837 = icmp eq %"class.base::RefCountedMemory"* %2836, null
  br i1 %2837, label %2850, label %2838

2838:                                             ; preds = %2832
  %2839 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %2836, i64 0, i32 1
  %2840 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %2839, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2841 = atomicrmw sub i32* %2840, i32 1 acq_rel
  %2842 = icmp eq i32 %2841, 1
  br i1 %2842, label %2843, label %2850

2843:                                             ; preds = %2838
  %2844 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %2839, i64 -2
  %2845 = bitcast %"class.base::RefCountedThreadSafe.248"* %2844 to %"class.base::RefCountedMemory"*
  %2846 = bitcast %"class.base::RefCountedThreadSafe.248"* %2844 to void (%"class.base::RefCountedMemory"*)***
  %2847 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %2846, align 8
  %2848 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %2847, i64 3
  %2849 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %2848, align 8
  tail call void %2849(%"class.base::RefCountedMemory"* nonnull %2845) #11
  br label %2850

2850:                                             ; preds = %2843, %2838, %2832
  %2851 = getelementptr inbounds i8, i8* %2, i64 911
  %2852 = load i8, i8* %2851, align 1
  %2853 = icmp slt i8 %2852, 0
  br i1 %2853, label %2854, label %2857

2854:                                             ; preds = %2850
  %2855 = bitcast i8* %2833 to i8**
  %2856 = load i8*, i8** %2855, align 8
  tail call void @_ZdlPv(i8* %2856) #12
  br label %2857

2857:                                             ; preds = %2854, %2850
  store i8 0, i8* %2829, align 8
  br label %2858

2858:                                             ; preds = %2828, %2857
  %2859 = getelementptr inbounds i8, i8* %2, i64 856
  %2860 = getelementptr inbounds i8, i8* %2, i64 870
  call void @llvm.memset.p0i8.i64(i8* align 8 %2859, i8 0, i64 64, i1 false)
  store i8 1, i8* %2829, align 8
  %2861 = getelementptr inbounds i8, i8* %2, i64 857
  %2862 = getelementptr inbounds i8, i8* %2, i64 858
  %2863 = bitcast i8* %2862 to i16*
  %2864 = getelementptr inbounds i8, i8* %2, i64 860
  %2865 = bitcast i8* %2864 to i32*
  %2866 = getelementptr inbounds i8, i8* %2, i64 864
  %2867 = bitcast i8* %2866 to i32*
  %2868 = getelementptr inbounds i8, i8* %2, i64 868
  %2869 = bitcast i8* %2860 to i16*
  %2870 = getelementptr inbounds i8, i8* %2, i64 872
  %2871 = bitcast i8* %2870 to i16*
  %2872 = getelementptr inbounds i8, i8* %2, i64 874
  %2873 = bitcast i8* %2872 to i16*
  %2874 = getelementptr inbounds i8, i8* %2, i64 876
  %2875 = bitcast i8* %2874 to i16*
  %2876 = getelementptr inbounds i8, i8* %2, i64 878
  %2877 = bitcast i8* %2876 to i16*
  %2878 = getelementptr inbounds i8, i8* %2, i64 880
  %2879 = bitcast i8* %2878 to i16*
  %2880 = getelementptr inbounds i8, i8* %2, i64 882
  %2881 = bitcast i8* %2880 to i16*
  %2882 = getelementptr inbounds i8, i8* %2, i64 884
  %2883 = bitcast i8* %2882 to i16*
  %2884 = getelementptr inbounds i8, i8* %2, i64 886
  %2885 = getelementptr inbounds i8, i8* %2, i64 887
  %2886 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2887 = bitcast %"class.base::RefCountedMemory"* %2886 to i8* (%"class.base::RefCountedMemory"*)***
  %2888 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2887, align 8
  %2889 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2888, align 8
  %2890 = tail call i8* %2889(%"class.base::RefCountedMemory"* %2886) #11
  %2891 = load i64, i64* %12, align 8
  %2892 = getelementptr inbounds i8, i8* %2890, i64 %2891
  %2893 = load i8, i8* %2892, align 1
  store i8 %2893, i8* %2859, align 1
  %2894 = add i64 %2891, 1
  store i64 %2894, i64* %12, align 8
  %2895 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2896 = bitcast %"class.base::RefCountedMemory"* %2895 to i8* (%"class.base::RefCountedMemory"*)***
  %2897 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2896, align 8
  %2898 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2897, align 8
  %2899 = tail call i8* %2898(%"class.base::RefCountedMemory"* %2895) #11
  %2900 = load i64, i64* %12, align 8
  %2901 = getelementptr inbounds i8, i8* %2899, i64 %2900
  %2902 = load i8, i8* %2901, align 1
  store i8 %2902, i8* %2861, align 1
  %2903 = add i64 %2900, 1
  store i64 %2903, i64* %12, align 8
  %2904 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2905 = bitcast %"class.base::RefCountedMemory"* %2904 to i8* (%"class.base::RefCountedMemory"*)***
  %2906 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2905, align 8
  %2907 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2906, align 8
  %2908 = tail call i8* %2907(%"class.base::RefCountedMemory"* %2904) #11
  %2909 = load i64, i64* %12, align 8
  %2910 = getelementptr inbounds i8, i8* %2908, i64 %2909
  %2911 = bitcast i8* %2910 to i16*
  %2912 = load i16, i16* %2911, align 1
  store i16 %2912, i16* %2863, align 2
  %2913 = add i64 %2909, 2
  store i64 %2913, i64* %12, align 8
  %2914 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2915 = bitcast %"class.base::RefCountedMemory"* %2914 to i8* (%"class.base::RefCountedMemory"*)***
  %2916 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2915, align 8
  %2917 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2916, align 8
  %2918 = tail call i8* %2917(%"class.base::RefCountedMemory"* %2914) #11
  %2919 = load i64, i64* %12, align 8
  %2920 = getelementptr inbounds i8, i8* %2918, i64 %2919
  %2921 = bitcast i8* %2920 to i32*
  %2922 = load i32, i32* %2921, align 1
  store i32 %2922, i32* %2865, align 4
  %2923 = add i64 %2919, 4
  store i64 %2923, i64* %12, align 8
  %2924 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2925 = bitcast %"class.base::RefCountedMemory"* %2924 to i8* (%"class.base::RefCountedMemory"*)***
  %2926 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2925, align 8
  %2927 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2926, align 8
  %2928 = tail call i8* %2927(%"class.base::RefCountedMemory"* %2924) #11
  %2929 = load i64, i64* %12, align 8
  %2930 = getelementptr inbounds i8, i8* %2928, i64 %2929
  %2931 = bitcast i8* %2930 to i32*
  %2932 = load i32, i32* %2931, align 1
  store i32 %2932, i32* %2867, align 4
  %2933 = add i64 %2929, 4
  store i64 %2933, i64* %12, align 8
  %2934 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2935 = bitcast %"class.base::RefCountedMemory"* %2934 to i8* (%"class.base::RefCountedMemory"*)***
  %2936 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2935, align 8
  %2937 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2936, align 8
  %2938 = tail call i8* %2937(%"class.base::RefCountedMemory"* %2934) #11
  %2939 = load i64, i64* %12, align 8
  %2940 = getelementptr inbounds i8, i8* %2938, i64 %2939
  %2941 = load i8, i8* %2940, align 1
  store i8 %2941, i8* %2868, align 1
  %2942 = add i64 %2939, 2
  store i64 %2942, i64* %12, align 8
  %2943 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2944 = bitcast %"class.base::RefCountedMemory"* %2943 to i8* (%"class.base::RefCountedMemory"*)***
  %2945 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2944, align 8
  %2946 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2945, align 8
  %2947 = tail call i8* %2946(%"class.base::RefCountedMemory"* %2943) #11
  %2948 = load i64, i64* %12, align 8
  %2949 = getelementptr inbounds i8, i8* %2947, i64 %2948
  %2950 = bitcast i8* %2949 to i16*
  %2951 = load i16, i16* %2950, align 1
  store i16 %2951, i16* %2869, align 2
  %2952 = add i64 %2948, 2
  store i64 %2952, i64* %12, align 8
  %2953 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2954 = bitcast %"class.base::RefCountedMemory"* %2953 to i8* (%"class.base::RefCountedMemory"*)***
  %2955 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2954, align 8
  %2956 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2955, align 8
  %2957 = tail call i8* %2956(%"class.base::RefCountedMemory"* %2953) #11
  %2958 = load i64, i64* %12, align 8
  %2959 = getelementptr inbounds i8, i8* %2957, i64 %2958
  %2960 = bitcast i8* %2959 to i16*
  %2961 = load i16, i16* %2960, align 1
  store i16 %2961, i16* %2871, align 2
  %2962 = add i64 %2958, 2
  store i64 %2962, i64* %12, align 8
  %2963 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2964 = bitcast %"class.base::RefCountedMemory"* %2963 to i8* (%"class.base::RefCountedMemory"*)***
  %2965 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2964, align 8
  %2966 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2965, align 8
  %2967 = tail call i8* %2966(%"class.base::RefCountedMemory"* %2963) #11
  %2968 = load i64, i64* %12, align 8
  %2969 = getelementptr inbounds i8, i8* %2967, i64 %2968
  %2970 = bitcast i8* %2969 to i16*
  %2971 = load i16, i16* %2970, align 1
  store i16 %2971, i16* %2873, align 2
  %2972 = add i64 %2968, 2
  store i64 %2972, i64* %12, align 8
  %2973 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2974 = bitcast %"class.base::RefCountedMemory"* %2973 to i8* (%"class.base::RefCountedMemory"*)***
  %2975 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2974, align 8
  %2976 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2975, align 8
  %2977 = tail call i8* %2976(%"class.base::RefCountedMemory"* %2973) #11
  %2978 = load i64, i64* %12, align 8
  %2979 = getelementptr inbounds i8, i8* %2977, i64 %2978
  %2980 = bitcast i8* %2979 to i16*
  %2981 = load i16, i16* %2980, align 1
  store i16 %2981, i16* %2875, align 2
  %2982 = add i64 %2978, 2
  store i64 %2982, i64* %12, align 8
  %2983 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2984 = bitcast %"class.base::RefCountedMemory"* %2983 to i8* (%"class.base::RefCountedMemory"*)***
  %2985 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2984, align 8
  %2986 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2985, align 8
  %2987 = tail call i8* %2986(%"class.base::RefCountedMemory"* %2983) #11
  %2988 = load i64, i64* %12, align 8
  %2989 = getelementptr inbounds i8, i8* %2987, i64 %2988
  %2990 = bitcast i8* %2989 to i16*
  %2991 = load i16, i16* %2990, align 1
  store i16 %2991, i16* %2877, align 2
  %2992 = add i64 %2988, 2
  store i64 %2992, i64* %12, align 8
  %2993 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %2994 = bitcast %"class.base::RefCountedMemory"* %2993 to i8* (%"class.base::RefCountedMemory"*)***
  %2995 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %2994, align 8
  %2996 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %2995, align 8
  %2997 = tail call i8* %2996(%"class.base::RefCountedMemory"* %2993) #11
  %2998 = load i64, i64* %12, align 8
  %2999 = getelementptr inbounds i8, i8* %2997, i64 %2998
  %3000 = bitcast i8* %2999 to i16*
  %3001 = load i16, i16* %3000, align 1
  store i16 %3001, i16* %2879, align 2
  %3002 = add i64 %2998, 2
  store i64 %3002, i64* %12, align 8
  %3003 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3004 = bitcast %"class.base::RefCountedMemory"* %3003 to i8* (%"class.base::RefCountedMemory"*)***
  %3005 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3004, align 8
  %3006 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3005, align 8
  %3007 = tail call i8* %3006(%"class.base::RefCountedMemory"* %3003) #11
  %3008 = load i64, i64* %12, align 8
  %3009 = getelementptr inbounds i8, i8* %3007, i64 %3008
  %3010 = bitcast i8* %3009 to i16*
  %3011 = load i16, i16* %3010, align 1
  store i16 %3011, i16* %2881, align 2
  %3012 = add i64 %3008, 2
  store i64 %3012, i64* %12, align 8
  %3013 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3014 = bitcast %"class.base::RefCountedMemory"* %3013 to i8* (%"class.base::RefCountedMemory"*)***
  %3015 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3014, align 8
  %3016 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3015, align 8
  %3017 = tail call i8* %3016(%"class.base::RefCountedMemory"* %3013) #11
  %3018 = load i64, i64* %12, align 8
  %3019 = getelementptr inbounds i8, i8* %3017, i64 %3018
  %3020 = bitcast i8* %3019 to i16*
  %3021 = load i16, i16* %3020, align 1
  store i16 %3021, i16* %2883, align 2
  %3022 = add i64 %3018, 2
  store i64 %3022, i64* %12, align 8
  %3023 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3024 = bitcast %"class.base::RefCountedMemory"* %3023 to i8* (%"class.base::RefCountedMemory"*)***
  %3025 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3024, align 8
  %3026 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3025, align 8
  %3027 = tail call i8* %3026(%"class.base::RefCountedMemory"* %3023) #11
  %3028 = load i64, i64* %12, align 8
  %3029 = getelementptr inbounds i8, i8* %3027, i64 %3028
  %3030 = load i8, i8* %3029, align 1
  store i8 %3030, i8* %2884, align 1
  %3031 = add i64 %3028, 1
  store i64 %3031, i64* %12, align 8
  %3032 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3033 = bitcast %"class.base::RefCountedMemory"* %3032 to i8* (%"class.base::RefCountedMemory"*)***
  %3034 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3033, align 8
  %3035 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3034, align 8
  %3036 = tail call i8* %3035(%"class.base::RefCountedMemory"* %3032) #11
  %3037 = load i64, i64* %12, align 8
  %3038 = getelementptr inbounds i8, i8* %3036, i64 %3037
  %3039 = load i8, i8* %3038, align 1
  store i8 %3039, i8* %2885, align 1
  %3040 = add i64 %3037, 1
  store i64 %3040, i64* %12, align 8
  %3041 = getelementptr inbounds i8, i8* %2, i64 888
  %3042 = bitcast i8* %3041 to %"class.std::__1::basic_string"*
  %3043 = getelementptr inbounds i8, i8* %2, i64 911
  %3044 = getelementptr inbounds i8, i8* %2, i64 912
  %3045 = bitcast i8* %3044 to %"class.base::RefCountedMemory"**
  %3046 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3045, align 8
  %3047 = icmp eq %"class.base::RefCountedMemory"* %3046, null
  br i1 %3047, label %3054, label %3048

3048:                                             ; preds = %2858
  %3049 = bitcast %"class.base::RefCountedMemory"* %3046 to i64 (%"class.base::RefCountedMemory"*)***
  %3050 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %3049, align 8
  %3051 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %3050, i64 1
  %3052 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %3051, align 8
  %3053 = tail call i64 %3052(%"class.base::RefCountedMemory"* nonnull %3046) #11
  br label %3054

3054:                                             ; preds = %2858, %3048
  %3055 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3056 = bitcast %"class.base::RefCountedMemory"* %3055 to i8* (%"class.base::RefCountedMemory"*)***
  %3057 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3056, align 8
  %3058 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3057, align 8
  %3059 = tail call i8* %3058(%"class.base::RefCountedMemory"* %3055) #11
  %3060 = load i64, i64* %12, align 8
  %3061 = getelementptr inbounds i8, i8* %3059, i64 %3060
  %3062 = bitcast i8* %3061 to i16*
  %3063 = load i16, i16* %3062, align 1
  %3064 = add i64 %3060, 2
  store i64 %3064, i64* %12, align 8
  %3065 = zext i16 %3063 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3042, i64 %3065, i8 signext 0) #11
  %3066 = load i8, i8* %3043, align 1
  %3067 = icmp slt i8 %3066, 0
  br i1 %3067, label %3068, label %3074

3068:                                             ; preds = %3054
  %3069 = bitcast i8* %3041 to i8**
  %3070 = load i8*, i8** %3069, align 8
  %3071 = getelementptr inbounds i8, i8* %2, i64 896
  %3072 = bitcast i8* %3071 to i64*
  %3073 = load i64, i64* %3072, align 8
  br label %3076

3074:                                             ; preds = %3054
  %3075 = zext i8 %3066 to i64
  br label %3076

3076:                                             ; preds = %3068, %3074
  %3077 = phi i8* [ %3070, %3068 ], [ %3041, %3074 ]
  %3078 = phi i64 [ %3073, %3068 ], [ %3075, %3074 ]
  %3079 = getelementptr inbounds i8, i8* %3077, i64 %3078
  %3080 = icmp eq i64 %3078, 0
  br i1 %3080, label %3081, label %3105

3081:                                             ; preds = %3105, %3076
  %3082 = zext i16 %3063 to i32
  %3083 = add nuw nsw i32 %3082, 5
  %3084 = and i32 %3083, 131068
  %3085 = sub nuw nsw i32 -2, %3082
  %3086 = add nsw i32 %3085, %3084
  %3087 = sext i32 %3086 to i64
  %3088 = tail call %"class.base::RefCountedMemory"* @_ZN3x1110ReadBuffer14ReadAndAdvanceEm(%"struct.x11::ReadBuffer"* %0, i64 %3087) #11
  %3089 = ptrtoint %"class.base::RefCountedMemory"* %3088 to i64
  %3090 = bitcast i8* %3044 to i64*
  %3091 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3045, align 8
  store i64 %3089, i64* %3090, align 8
  %3092 = icmp eq %"class.base::RefCountedMemory"* %3091, null
  br i1 %3092, label %3119, label %3093

3093:                                             ; preds = %3081
  %3094 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %3091, i64 0, i32 1
  %3095 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %3094, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3096 = atomicrmw sub i32* %3095, i32 1 acq_rel
  %3097 = icmp eq i32 %3096, 1
  br i1 %3097, label %3098, label %3119

3098:                                             ; preds = %3093
  %3099 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %3094, i64 -2
  %3100 = bitcast %"class.base::RefCountedThreadSafe.248"* %3099 to %"class.base::RefCountedMemory"*
  %3101 = bitcast %"class.base::RefCountedThreadSafe.248"* %3099 to void (%"class.base::RefCountedMemory"*)***
  %3102 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %3101, align 8
  %3103 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %3102, i64 3
  %3104 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %3103, align 8
  tail call void %3104(%"class.base::RefCountedMemory"* nonnull %3100) #11
  br label %3119

3105:                                             ; preds = %3076, %3105
  %3106 = phi i8* [ %3117, %3105 ], [ %3077, %3076 ]
  %3107 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %3108 = bitcast %"class.base::RefCountedMemory"* %3107 to i8* (%"class.base::RefCountedMemory"*)***
  %3109 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %3108, align 8
  %3110 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %3109, align 8
  %3111 = tail call i8* %3110(%"class.base::RefCountedMemory"* %3107) #11
  %3112 = load i64, i64* %12, align 8
  %3113 = getelementptr inbounds i8, i8* %3111, i64 %3112
  %3114 = load i8, i8* %3113, align 1
  store i8 %3114, i8* %3106, align 1
  %3115 = load i64, i64* %12, align 8
  %3116 = add i64 %3115, 1
  store i64 %3116, i64* %12, align 8
  %3117 = getelementptr inbounds i8, i8* %3106, i64 1
  %3118 = icmp eq i8* %3117, %3079
  br i1 %3118, label %3081, label %3105

3119:                                             ; preds = %2825, %3098, %3093, %3081
  %3120 = load i64, i64* %12, align 8
  %3121 = sub i64 0, %3120
  %3122 = and i64 %3121, 3
  %3123 = add i64 %3122, %3120
  store i64 %3123, i64* %12, align 8
  ret %"struct.x11::Xkb::GetKbdByNameReply"* %3
}

declare %"class.base::RefCountedMemory"* @_ZN3x1110ReadBuffer14ReadAndAdvanceEm(%"struct.x11::ReadBuffer"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13GetDeviceInfoERKNS0_20GetDeviceInfoRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::GetDeviceInfoRequest"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca i8, align 1
  %18 = alloca %"class.x11::WriteBuffer", align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %24 = load %"class.x11::Connection"*, %"class.x11::Connection"** %23, align 8
  %25 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %24) #11
  br i1 %25, label %26, label %132

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %132, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.x11::WriteBuffer"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %18) #11
  %32 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 4
  %34 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #11
  %35 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %19, align 1
  %37 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %18, i64 0, i32 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* nonnull dereferenceable(1) %19) #11
  %41 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %18, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #11
  store i8 24, i8* %20, align 1
  %44 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %45, align 8
  %46 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* nonnull dereferenceable(1) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %47 = load i64, i64* %41, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 0, i8* %13, align 1
  %49 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %50 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %50, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %52 = load i64, i64* %41, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %50, align 8
  %54 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %55 = load i64, i64* %41, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %41, align 8
  %57 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 3
  %58 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 5
  %59 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %1, i64 0, i32 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  %60 = bitcast %"struct.x11::Xkb::GetDeviceInfoRequest"* %1 to i8*
  %61 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %62, align 8
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %60) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* dereferenceable(1) %64) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  %66 = load i64, i64* %41, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %41, align 8
  %68 = bitcast i16* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %68) #11
  %69 = load i32, i32* %32, align 4
  %70 = trunc i32 %69 to i16
  store i16 %70, i16* %21, align 2
  %71 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %72, align 8
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %68) #11
  %74 = getelementptr inbounds i8, i8* %68, i64 1
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* dereferenceable(1) %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  %76 = load i64, i64* %41, align 8
  %77 = add i64 %76, 2
  store i64 %77, i64* %41, align 8
  %78 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %79, align 8
  %80 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %81 = load i64, i64* %41, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %41, align 8
  %83 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %84, align 8
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  %86 = load i64, i64* %41, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %41, align 8
  %88 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %89, align 8
  %90 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  %91 = load i64, i64* %41, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %93 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %94 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %94, align 8
  %95 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  %96 = load i64, i64* %41, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %98 = bitcast i16* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %98) #11
  %99 = load i32, i32* %34, align 4
  %100 = trunc i32 %99 to i16
  store i16 %100, i16* %22, align 2
  %101 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  %102 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %102, align 8
  %103 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %98) #11
  %104 = getelementptr inbounds i8, i8* %98, i64 1
  %105 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %104) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  %106 = load i64, i64* %41, align 8
  %107 = add i64 %106, 2
  store i64 %107, i64* %41, align 8
  %108 = bitcast i16* %59 to i8*
  %109 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %110, align 8
  %111 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %108) #11
  %112 = getelementptr inbounds i8, i8* %108, i64 1
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %112) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %114 = load i64, i64* %41, align 8
  %115 = add i64 %114, 2
  store i64 %115, i64* %41, align 8
  %116 = sub i64 2, %114
  %117 = and i64 %116, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  store i8 0, i8* %17, align 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %129, label %119

119:                                              ; preds = %30
  %120 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  %121 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  br label %122

122:                                              ; preds = %122, %119
  %123 = phi i64 [ 0, %119 ], [ %127, %122 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %121, align 8
  %124 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %125 = load i64, i64* %41, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %41, align 8
  %127 = add nuw nsw i64 %123, 1
  %128 = icmp eq i64 %127, %117
  br i1 %128, label %129, label %122

129:                                              ; preds = %122, %30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %130 = load %"class.x11::Connection"*, %"class.x11::Connection"** %23, align 8
  %131 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %130, %"class.x11::WriteBuffer"* nonnull %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %98) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %31) #11
  br label %132

132:                                              ; preds = %2, %26, %129
  %133 = phi %"class.x11::Connection::FutureImpl"* [ %131, %129 ], [ null, %26 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %133
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13GetDeviceInfoERKNS0_10DeviceSpecERKNS0_9XIFeatureERKhS8_S8_RKNS0_8LedClassERKNS0_6IDSpecE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.x11::Xkb::GetDeviceInfoRequest", align 4
  %10 = bitcast %"struct.x11::Xkb::GetDeviceInfoRequest"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 0
  %12 = load i16, i16* %1, align 2
  store i16 %12, i16* %11, align 4
  %13 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 2
  %14 = load i32, i32* %2, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 3
  %16 = load i8, i8* %3, align 1
  store i8 %16, i8* %15, align 4
  %17 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 4
  %18 = load i8, i8* %4, align 1
  store i8 %18, i8* %17, align 1
  %19 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 5
  %20 = load i8, i8* %5, align 1
  store i8 %20, i8* %19, align 2
  %21 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 7
  %22 = load i32, i32* %6, align 4
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.x11::Xkb::GetDeviceInfoRequest", %"struct.x11::Xkb::GetDeviceInfoRequest"* %9, i64 0, i32 8
  %24 = load i16, i16* %7, align 2
  store i16 %24, i16* %23, align 4
  %25 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13GetDeviceInfoERKNS0_20GetDeviceInfoRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::GetDeviceInfoRequest"* nonnull dereferenceable(20) %9)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #11
  ret %"class.x11::Connection::FutureImpl"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::GetDeviceInfoReply"* @_ZN3x116detail9ReadReplyINS_3Xkb18GetDeviceInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 104) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::GetDeviceInfoReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 104, i1 false) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = getelementptr inbounds i8, i8* %2, i64 17
  %14 = getelementptr inbounds i8, i8* %2, i64 18
  %15 = getelementptr inbounds i8, i8* %2, i64 19
  %16 = getelementptr inbounds i8, i8* %2, i64 20
  %17 = getelementptr inbounds i8, i8* %2, i64 22
  %18 = bitcast i8* %17 to i16*
  %19 = getelementptr inbounds i8, i8* %2, i64 24
  %20 = bitcast i8* %19 to i16*
  %21 = getelementptr inbounds i8, i8* %2, i64 28
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i8, i8* %2, i64 32
  %24 = getelementptr inbounds i8, i8* %2, i64 40
  %25 = bitcast i8* %24 to i8**
  %26 = bitcast i8* %24 to i64*
  %27 = bitcast i8* %23 to i64*
  %28 = getelementptr inbounds i8, i8* %2, i64 56
  %29 = bitcast i8* %28 to %"class.std::__1::vector.407"*
  %30 = getelementptr inbounds i8, i8* %2, i64 64
  %31 = bitcast i8* %30 to %"union.x11::Xkb::Action"**
  %32 = bitcast i8* %30 to i64*
  %33 = bitcast i8* %28 to i64*
  %34 = getelementptr inbounds i8, i8* %2, i64 80
  %35 = bitcast i8* %34 to %"class.std::__1::vector.692"*
  %36 = getelementptr inbounds i8, i8* %2, i64 88
  %37 = bitcast i8* %36 to %"struct.x11::Xkb::DeviceLedInfo"**
  %38 = bitcast i8* %36 to i64*
  %39 = bitcast i8* %34 to i64*
  %40 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %43 = bitcast %"class.base::RefCountedMemory"* %42 to i8* (%"class.base::RefCountedMemory"*)***
  %44 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %43, align 8
  %45 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %44, align 8
  %46 = tail call i8* %45(%"class.base::RefCountedMemory"* %42) #11
  %47 = load i64, i64* %40, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %40, align 8
  %49 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %50 = bitcast %"class.base::RefCountedMemory"* %49 to i8* (%"class.base::RefCountedMemory"*)***
  %51 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %50, align 8
  %52 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %51, align 8
  %53 = tail call i8* %52(%"class.base::RefCountedMemory"* %49) #11
  %54 = load i64, i64* %40, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %2, align 1
  %57 = add i64 %54, 1
  store i64 %57, i64* %40, align 8
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %59 = bitcast %"class.base::RefCountedMemory"* %58 to i8* (%"class.base::RefCountedMemory"*)***
  %60 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %60, align 8
  %62 = tail call i8* %61(%"class.base::RefCountedMemory"* %58) #11
  %63 = load i64, i64* %40, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 1
  store i16 %66, i16* %5, align 2
  %67 = add i64 %63, 2
  store i64 %67, i64* %40, align 8
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %69 = bitcast %"class.base::RefCountedMemory"* %68 to i8* (%"class.base::RefCountedMemory"*)***
  %70 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %69, align 8
  %71 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %70, align 8
  %72 = tail call i8* %71(%"class.base::RefCountedMemory"* %68) #11
  %73 = load i64, i64* %40, align 8
  %74 = add i64 %73, 4
  store i64 %74, i64* %40, align 8
  %75 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %76 = bitcast %"class.base::RefCountedMemory"* %75 to i8* (%"class.base::RefCountedMemory"*)***
  %77 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %76, align 8
  %78 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %77, align 8
  %79 = tail call i8* %78(%"class.base::RefCountedMemory"* %75) #11
  %80 = load i64, i64* %40, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 1
  %84 = add i64 %80, 2
  store i64 %84, i64* %40, align 8
  %85 = zext i16 %83 to i32
  store i32 %85, i32* %7, align 4
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %87 = bitcast %"class.base::RefCountedMemory"* %86 to i8* (%"class.base::RefCountedMemory"*)***
  %88 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %88, align 8
  %90 = tail call i8* %89(%"class.base::RefCountedMemory"* %86) #11
  %91 = load i64, i64* %40, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i16*
  %94 = load i16, i16* %93, align 1
  %95 = add i64 %91, 2
  store i64 %95, i64* %40, align 8
  %96 = zext i16 %94 to i32
  store i32 %96, i32* %9, align 4
  %97 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %98 = bitcast %"class.base::RefCountedMemory"* %97 to i8* (%"class.base::RefCountedMemory"*)***
  %99 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %98, align 8
  %100 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %99, align 8
  %101 = tail call i8* %100(%"class.base::RefCountedMemory"* %97) #11
  %102 = load i64, i64* %40, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  %104 = bitcast i8* %103 to i16*
  %105 = load i16, i16* %104, align 1
  %106 = add i64 %102, 2
  store i64 %106, i64* %40, align 8
  %107 = zext i16 %105 to i32
  store i32 %107, i32* %11, align 4
  %108 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %109 = bitcast %"class.base::RefCountedMemory"* %108 to i8* (%"class.base::RefCountedMemory"*)***
  %110 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %109, align 8
  %111 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %110, align 8
  %112 = tail call i8* %111(%"class.base::RefCountedMemory"* %108) #11
  %113 = load i64, i64* %40, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 1
  %117 = add i64 %113, 2
  store i64 %117, i64* %40, align 8
  %118 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %119 = bitcast %"class.base::RefCountedMemory"* %118 to i8* (%"class.base::RefCountedMemory"*)***
  %120 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %120, align 8
  %122 = tail call i8* %121(%"class.base::RefCountedMemory"* %118) #11
  %123 = load i64, i64* %40, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = load i8, i8* %124, align 1
  store i8 %125, i8* %12, align 1
  %126 = add i64 %123, 1
  store i64 %126, i64* %40, align 8
  %127 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %128 = bitcast %"class.base::RefCountedMemory"* %127 to i8* (%"class.base::RefCountedMemory"*)***
  %129 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %128, align 8
  %130 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %129, align 8
  %131 = tail call i8* %130(%"class.base::RefCountedMemory"* %127) #11
  %132 = load i64, i64* %40, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = load i8, i8* %133, align 1
  store i8 %134, i8* %13, align 1
  %135 = add i64 %132, 1
  store i64 %135, i64* %40, align 8
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #11
  %141 = load i64, i64* %40, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %14, align 1
  %144 = add i64 %141, 1
  store i64 %144, i64* %40, align 8
  %145 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %146 = bitcast %"class.base::RefCountedMemory"* %145 to i8* (%"class.base::RefCountedMemory"*)***
  %147 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %146, align 8
  %148 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %147, align 8
  %149 = tail call i8* %148(%"class.base::RefCountedMemory"* %145) #11
  %150 = load i64, i64* %40, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = add i64 %150, 1
  store i64 %153, i64* %40, align 8
  %154 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %155 = bitcast %"class.base::RefCountedMemory"* %154 to i8* (%"class.base::RefCountedMemory"*)***
  %156 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %155, align 8
  %157 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %156, align 8
  %158 = tail call i8* %157(%"class.base::RefCountedMemory"* %154) #11
  %159 = load i64, i64* %40, align 8
  %160 = getelementptr inbounds i8, i8* %158, i64 %159
  %161 = load i8, i8* %160, align 1
  store i8 %161, i8* %15, align 1
  %162 = add i64 %159, 1
  store i64 %162, i64* %40, align 8
  %163 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %164 = bitcast %"class.base::RefCountedMemory"* %163 to i8* (%"class.base::RefCountedMemory"*)***
  %165 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %164, align 8
  %166 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %165, align 8
  %167 = tail call i8* %166(%"class.base::RefCountedMemory"* %163) #11
  %168 = load i64, i64* %40, align 8
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  %170 = load i8, i8* %169, align 1
  store i8 %170, i8* %16, align 1
  %171 = add i64 %168, 1
  store i64 %171, i64* %40, align 8
  %172 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %173 = bitcast %"class.base::RefCountedMemory"* %172 to i8* (%"class.base::RefCountedMemory"*)***
  %174 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %173, align 8
  %175 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %174, align 8
  %176 = tail call i8* %175(%"class.base::RefCountedMemory"* %172) #11
  %177 = load i64, i64* %40, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 %177
  %179 = bitcast i8* %178 to i16*
  %180 = load i16, i16* %179, align 1
  store i16 %180, i16* %18, align 2
  %181 = add i64 %177, 2
  store i64 %181, i64* %40, align 8
  %182 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %183 = bitcast %"class.base::RefCountedMemory"* %182 to i8* (%"class.base::RefCountedMemory"*)***
  %184 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %183, align 8
  %185 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %184, align 8
  %186 = tail call i8* %185(%"class.base::RefCountedMemory"* %182) #11
  %187 = load i64, i64* %40, align 8
  %188 = getelementptr inbounds i8, i8* %186, i64 %187
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 1
  store i16 %190, i16* %20, align 2
  %191 = add i64 %187, 4
  store i64 %191, i64* %40, align 8
  %192 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %193 = bitcast %"class.base::RefCountedMemory"* %192 to i8* (%"class.base::RefCountedMemory"*)***
  %194 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %193, align 8
  %195 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %194, align 8
  %196 = tail call i8* %195(%"class.base::RefCountedMemory"* %192) #11
  %197 = load i64, i64* %40, align 8
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 1
  store i32 %200, i32* %22, align 4
  %201 = add i64 %197, 4
  store i64 %201, i64* %40, align 8
  %202 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %203 = bitcast %"class.base::RefCountedMemory"* %202 to i8* (%"class.base::RefCountedMemory"*)***
  %204 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %203, align 8
  %205 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %204, align 8
  %206 = tail call i8* %205(%"class.base::RefCountedMemory"* %202) #11
  %207 = load i64, i64* %40, align 8
  %208 = getelementptr inbounds i8, i8* %206, i64 %207
  %209 = bitcast i8* %208 to i16*
  %210 = load i16, i16* %209, align 1
  %211 = add i64 %207, 2
  store i64 %211, i64* %40, align 8
  %212 = zext i16 %210 to i64
  %213 = load i64, i64* %26, align 8
  %214 = load i64, i64* %27, align 8
  %215 = sub i64 %213, %214
  %216 = icmp ult i64 %215, %212
  %217 = inttoptr i64 %214 to i8*
  br i1 %216, label %218, label %224

218:                                              ; preds = %1
  %219 = bitcast i8* %23 to %"class.std::__1::vector.636"*
  %220 = sub i64 %212, %215
  tail call void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"* %219, i64 %220) #11
  %221 = bitcast i8* %23 to i8**
  %222 = load i8*, i8** %221, align 8
  %223 = load i8*, i8** %25, align 8
  br label %229

224:                                              ; preds = %1
  %225 = inttoptr i64 %213 to i8*
  %226 = icmp ugt i64 %215, %212
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = getelementptr inbounds i8, i8* %217, i64 %212
  store i8* %228, i8** %25, align 8
  br label %229

229:                                              ; preds = %218, %224, %227
  %230 = phi i8* [ %223, %218 ], [ %225, %224 ], [ %228, %227 ]
  %231 = phi i8* [ %222, %218 ], [ %217, %224 ], [ %217, %227 ]
  %232 = icmp eq i8* %231, %230
  br i1 %232, label %233, label %261

233:                                              ; preds = %229
  %234 = load i64, i64* %40, align 8
  br label %235

235:                                              ; preds = %261, %233
  %236 = phi i64 [ %234, %233 ], [ %272, %261 ]
  %237 = sub i64 0, %236
  %238 = and i64 %237, 3
  %239 = add i64 %238, %236
  store i64 %239, i64* %40, align 8
  %240 = zext i8 %152 to i64
  %241 = load i64, i64* %32, align 8
  %242 = load i64, i64* %33, align 8
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 5
  %245 = icmp ult i64 %244, %240
  %246 = inttoptr i64 %242 to %"union.x11::Xkb::Action"*
  br i1 %245, label %247, label %252

247:                                              ; preds = %235
  %248 = sub nsw i64 %240, %244
  tail call void @_ZNSt3__16vectorIN3x113Xkb6ActionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.407"* %29, i64 %248) #11
  %249 = bitcast i8* %28 to %"union.x11::Xkb::Action"**
  %250 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %249, align 8
  %251 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %31, align 8
  br label %257

252:                                              ; preds = %235
  %253 = inttoptr i64 %241 to %"union.x11::Xkb::Action"*
  %254 = icmp ugt i64 %244, %240
  br i1 %254, label %255, label %257

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %246, i64 %240
  store %"union.x11::Xkb::Action"* %256, %"union.x11::Xkb::Action"** %31, align 8
  br label %257

257:                                              ; preds = %247, %252, %255
  %258 = phi %"union.x11::Xkb::Action"* [ %251, %247 ], [ %253, %252 ], [ %256, %255 ]
  %259 = phi %"union.x11::Xkb::Action"* [ %250, %247 ], [ %246, %252 ], [ %246, %255 ]
  %260 = icmp eq %"union.x11::Xkb::Action"* %259, %258
  br i1 %260, label %275, label %320

261:                                              ; preds = %229, %261
  %262 = phi i8* [ %273, %261 ], [ %231, %229 ]
  %263 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %264 = bitcast %"class.base::RefCountedMemory"* %263 to i8* (%"class.base::RefCountedMemory"*)***
  %265 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %264, align 8
  %266 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %265, align 8
  %267 = tail call i8* %266(%"class.base::RefCountedMemory"* %263) #11
  %268 = load i64, i64* %40, align 8
  %269 = getelementptr inbounds i8, i8* %267, i64 %268
  %270 = load i8, i8* %269, align 1
  store i8 %270, i8* %262, align 1
  %271 = load i64, i64* %40, align 8
  %272 = add i64 %271, 1
  store i64 %272, i64* %40, align 8
  %273 = getelementptr inbounds i8, i8* %262, i64 1
  %274 = icmp eq i8* %273, %230
  br i1 %274, label %235, label %261

275:                                              ; preds = %320, %257
  %276 = zext i16 %116 to i64
  %277 = load i64, i64* %38, align 8
  %278 = load i64, i64* %39, align 8
  %279 = sub i64 %277, %278
  %280 = sdiv exact i64 %279, 72
  %281 = icmp ult i64 %280, %276
  %282 = inttoptr i64 %278 to %"struct.x11::Xkb::DeviceLedInfo"*
  %283 = inttoptr i64 %277 to %"struct.x11::Xkb::DeviceLedInfo"*
  br i1 %281, label %284, label %287

284:                                              ; preds = %275
  %285 = sub nsw i64 %276, %280
  tail call void @_ZNSt3__16vectorIN3x113Xkb13DeviceLedInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.692"* %35, i64 %285) #11
  %286 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %37, align 8
  br label %315

287:                                              ; preds = %275
  %288 = icmp ugt i64 %280, %276
  br i1 %288, label %289, label %315

289:                                              ; preds = %287
  %290 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %282, i64 %276
  %291 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %290, %283
  br i1 %291, label %314, label %292

292:                                              ; preds = %289, %312
  %293 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %294, %312 ], [ %283, %289 ]
  %294 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %293, i64 -1
  %295 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %293, i64 -1, i32 7, i32 0, i32 0
  %296 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %295, align 8
  %297 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %292
  %299 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %296 to i64
  %300 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %293, i64 -1, i32 7, i32 0, i32 1
  %301 = bitcast %"struct.x11::Xkb::IndicatorMap"** %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = bitcast %"struct.x11::Xkb::IndicatorMap"* %296 to i8*
  tail call void @_ZdlPv(i8* %302) #12
  br label %303

303:                                              ; preds = %298, %292
  %304 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %293, i64 -1, i32 6, i32 0, i32 0
  %305 = load i32*, i32** %304, align 8
  %306 = icmp eq i32* %305, null
  br i1 %306, label %312, label %307

307:                                              ; preds = %303
  %308 = ptrtoint i32* %305 to i64
  %309 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %293, i64 -1, i32 6, i32 0, i32 1
  %310 = bitcast i32** %309 to i64*
  store i64 %308, i64* %310, align 8
  %311 = bitcast i32* %305 to i8*
  tail call void @_ZdlPv(i8* %311) #12
  br label %312

312:                                              ; preds = %307, %303
  %313 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %294, %290
  br i1 %313, label %314, label %292

314:                                              ; preds = %312, %289
  store %"struct.x11::Xkb::DeviceLedInfo"* %290, %"struct.x11::Xkb::DeviceLedInfo"** %37, align 8
  br label %315

315:                                              ; preds = %284, %287, %314
  %316 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %286, %284 ], [ %283, %287 ], [ %290, %314 ]
  %317 = bitcast i8* %34 to %"struct.x11::Xkb::DeviceLedInfo"**
  %318 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %317, align 8
  %319 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %318, %316
  br i1 %319, label %334, label %339

320:                                              ; preds = %257, %320
  %321 = phi %"union.x11::Xkb::Action"* [ %332, %320 ], [ %259, %257 ]
  %322 = bitcast %"union.x11::Xkb::Action"* %321 to i8*
  %323 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %324 = bitcast %"class.base::RefCountedMemory"* %323 to i8* (%"class.base::RefCountedMemory"*)***
  %325 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %324, align 8
  %326 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %325, align 8
  %327 = tail call i8* %326(%"class.base::RefCountedMemory"* %323) #11
  %328 = load i64, i64* %40, align 8
  %329 = getelementptr inbounds i8, i8* %327, i64 %328
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 1 %329, i64 32, i1 false) #11
  %330 = load i64, i64* %40, align 8
  %331 = add i64 %330, 32
  store i64 %331, i64* %40, align 8
  %332 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %321, i64 1
  %333 = icmp eq %"union.x11::Xkb::Action"* %332, %258
  br i1 %333, label %275, label %320

334:                                              ; preds = %483, %315
  %335 = load i64, i64* %40, align 8
  %336 = sub i64 0, %335
  %337 = and i64 %336, 3
  %338 = add i64 %337, %335
  store i64 %338, i64* %40, align 8
  ret %"struct.x11::Xkb::GetDeviceInfoReply"* %3

339:                                              ; preds = %315, %483
  %340 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %484, %483 ], [ %318, %315 ]
  %341 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 0
  %342 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 1
  %343 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 2
  %344 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 3
  %345 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 4
  %346 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 5
  %347 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 6
  %348 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 6, i32 0, i32 1
  %349 = bitcast i32** %348 to i64*
  %350 = bitcast %"class.std::__1::vector.580"* %347 to i64*
  %351 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 7
  %352 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 0, i32 7, i32 0, i32 1
  %353 = bitcast %"struct.x11::Xkb::IndicatorMap"** %352 to i64*
  %354 = bitcast %"class.std::__1::vector.547"* %351 to i64*
  %355 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %356 = bitcast %"class.base::RefCountedMemory"* %355 to i8* (%"class.base::RefCountedMemory"*)***
  %357 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %356, align 8
  %358 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %357, align 8
  %359 = tail call i8* %358(%"class.base::RefCountedMemory"* %355) #11
  %360 = load i64, i64* %40, align 8
  %361 = getelementptr inbounds i8, i8* %359, i64 %360
  %362 = bitcast i8* %361 to i16*
  %363 = load i16, i16* %362, align 1
  %364 = add i64 %360, 2
  store i64 %364, i64* %40, align 8
  %365 = zext i16 %363 to i32
  store i32 %365, i32* %341, align 4
  %366 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %367 = bitcast %"class.base::RefCountedMemory"* %366 to i8* (%"class.base::RefCountedMemory"*)***
  %368 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %367, align 8
  %369 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %368, align 8
  %370 = tail call i8* %369(%"class.base::RefCountedMemory"* %366) #11
  %371 = load i64, i64* %40, align 8
  %372 = getelementptr inbounds i8, i8* %370, i64 %371
  %373 = bitcast i8* %372 to i16*
  %374 = load i16, i16* %373, align 1
  store i16 %374, i16* %342, align 2
  %375 = load i64, i64* %40, align 8
  %376 = add i64 %375, 2
  store i64 %376, i64* %40, align 8
  %377 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %378 = bitcast %"class.base::RefCountedMemory"* %377 to i8* (%"class.base::RefCountedMemory"*)***
  %379 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %378, align 8
  %380 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %379, align 8
  %381 = tail call i8* %380(%"class.base::RefCountedMemory"* %377) #11
  %382 = load i64, i64* %40, align 8
  %383 = getelementptr inbounds i8, i8* %381, i64 %382
  %384 = bitcast i8* %383 to i32*
  %385 = load i32, i32* %384, align 1
  store i32 %385, i32* %343, align 4
  %386 = load i64, i64* %40, align 8
  %387 = add i64 %386, 4
  store i64 %387, i64* %40, align 8
  %388 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %389 = bitcast %"class.base::RefCountedMemory"* %388 to i8* (%"class.base::RefCountedMemory"*)***
  %390 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %389, align 8
  %391 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %390, align 8
  %392 = tail call i8* %391(%"class.base::RefCountedMemory"* %388) #11
  %393 = load i64, i64* %40, align 8
  %394 = getelementptr inbounds i8, i8* %392, i64 %393
  %395 = bitcast i8* %394 to i32*
  %396 = load i32, i32* %395, align 1
  store i32 %396, i32* %344, align 4
  %397 = load i64, i64* %40, align 8
  %398 = add i64 %397, 4
  store i64 %398, i64* %40, align 8
  %399 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %400 = bitcast %"class.base::RefCountedMemory"* %399 to i8* (%"class.base::RefCountedMemory"*)***
  %401 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %400, align 8
  %402 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %401, align 8
  %403 = tail call i8* %402(%"class.base::RefCountedMemory"* %399) #11
  %404 = load i64, i64* %40, align 8
  %405 = getelementptr inbounds i8, i8* %403, i64 %404
  %406 = bitcast i8* %405 to i32*
  %407 = load i32, i32* %406, align 1
  store i32 %407, i32* %345, align 4
  %408 = load i64, i64* %40, align 8
  %409 = add i64 %408, 4
  store i64 %409, i64* %40, align 8
  %410 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %411 = bitcast %"class.base::RefCountedMemory"* %410 to i8* (%"class.base::RefCountedMemory"*)***
  %412 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %411, align 8
  %413 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %412, align 8
  %414 = tail call i8* %413(%"class.base::RefCountedMemory"* %410) #11
  %415 = load i64, i64* %40, align 8
  %416 = getelementptr inbounds i8, i8* %414, i64 %415
  %417 = bitcast i8* %416 to i32*
  %418 = load i32, i32* %417, align 1
  store i32 %418, i32* %346, align 4
  %419 = load i64, i64* %40, align 8
  %420 = add i64 %419, 4
  store i64 %420, i64* %40, align 8
  %421 = load i32, i32* %343, align 4
  %422 = zext i32 %421 to i64
  %423 = tail call i64 @llvm.ctpop.i64(i64 %422) #11, !range !4
  %424 = load i64, i64* %349, align 8
  %425 = load i64, i64* %350, align 8
  %426 = sub i64 %424, %425
  %427 = ashr exact i64 %426, 2
  %428 = icmp ugt i64 %423, %427
  %429 = inttoptr i64 %425 to i32*
  br i1 %428, label %430, label %435

430:                                              ; preds = %339
  %431 = sub nsw i64 %423, %427
  tail call void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"* %347, i64 %431) #11
  %432 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %347, i64 0, i32 0, i32 0
  %433 = load i32*, i32** %432, align 8
  %434 = load i32*, i32** %348, align 8
  br label %440

435:                                              ; preds = %339
  %436 = inttoptr i64 %424 to i32*
  %437 = icmp ult i64 %423, %427
  br i1 %437, label %438, label %440

438:                                              ; preds = %435
  %439 = getelementptr inbounds i32, i32* %429, i64 %423
  store i32* %439, i32** %348, align 8
  br label %440

440:                                              ; preds = %430, %435, %438
  %441 = phi i32* [ %434, %430 ], [ %436, %435 ], [ %439, %438 ]
  %442 = phi i32* [ %433, %430 ], [ %429, %435 ], [ %429, %438 ]
  %443 = icmp eq i32* %442, %441
  br i1 %443, label %444, label %468

444:                                              ; preds = %468, %440
  %445 = load i32, i32* %344, align 4
  %446 = zext i32 %445 to i64
  %447 = tail call i64 @llvm.ctpop.i64(i64 %446) #11, !range !4
  %448 = load i64, i64* %353, align 8
  %449 = load i64, i64* %354, align 8
  %450 = sub i64 %448, %449
  %451 = ashr exact i64 %450, 5
  %452 = icmp ugt i64 %447, %451
  %453 = inttoptr i64 %449 to %"struct.x11::Xkb::IndicatorMap"*
  br i1 %452, label %454, label %459

454:                                              ; preds = %444
  %455 = sub nsw i64 %447, %451
  tail call void @_ZNSt3__16vectorIN3x113Xkb12IndicatorMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.547"* %351, i64 %455) #11
  %456 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %351, i64 0, i32 0, i32 0
  %457 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %456, align 8
  %458 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %352, align 8
  br label %464

459:                                              ; preds = %444
  %460 = inttoptr i64 %448 to %"struct.x11::Xkb::IndicatorMap"*
  %461 = icmp ult i64 %447, %451
  br i1 %461, label %462, label %464

462:                                              ; preds = %459
  %463 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %453, i64 %447
  store %"struct.x11::Xkb::IndicatorMap"* %463, %"struct.x11::Xkb::IndicatorMap"** %352, align 8
  br label %464

464:                                              ; preds = %454, %459, %462
  %465 = phi %"struct.x11::Xkb::IndicatorMap"* [ %458, %454 ], [ %460, %459 ], [ %463, %462 ]
  %466 = phi %"struct.x11::Xkb::IndicatorMap"* [ %457, %454 ], [ %453, %459 ], [ %453, %462 ]
  %467 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %466, %465
  br i1 %467, label %483, label %486

468:                                              ; preds = %440, %468
  %469 = phi i32* [ %481, %468 ], [ %442, %440 ]
  %470 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %471 = bitcast %"class.base::RefCountedMemory"* %470 to i8* (%"class.base::RefCountedMemory"*)***
  %472 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %471, align 8
  %473 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %472, align 8
  %474 = tail call i8* %473(%"class.base::RefCountedMemory"* %470) #11
  %475 = load i64, i64* %40, align 8
  %476 = getelementptr inbounds i8, i8* %474, i64 %475
  %477 = bitcast i8* %476 to i32*
  %478 = load i32, i32* %477, align 1
  store i32 %478, i32* %469, align 4
  %479 = load i64, i64* %40, align 8
  %480 = add i64 %479, 4
  store i64 %480, i64* %40, align 8
  %481 = getelementptr inbounds i32, i32* %469, i64 1
  %482 = icmp eq i32* %481, %441
  br i1 %482, label %444, label %468

483:                                              ; preds = %486, %464
  %484 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %340, i64 1
  %485 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %484, %316
  br i1 %485, label %334, label %339

486:                                              ; preds = %464, %486
  %487 = phi %"struct.x11::Xkb::IndicatorMap"* [ %577, %486 ], [ %466, %464 ]
  %488 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 0
  %489 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 1
  %490 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 2
  %491 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 3
  %492 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 4
  %493 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 5
  %494 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 6
  %495 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 0, i32 7
  %496 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %497 = bitcast %"class.base::RefCountedMemory"* %496 to i8* (%"class.base::RefCountedMemory"*)***
  %498 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %497, align 8
  %499 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %498, align 8
  %500 = tail call i8* %499(%"class.base::RefCountedMemory"* %496) #11
  %501 = load i64, i64* %40, align 8
  %502 = getelementptr inbounds i8, i8* %500, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = add i64 %501, 1
  store i64 %504, i64* %40, align 8
  %505 = zext i8 %503 to i32
  store i32 %505, i32* %488, align 4
  %506 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %507 = bitcast %"class.base::RefCountedMemory"* %506 to i8* (%"class.base::RefCountedMemory"*)***
  %508 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %507, align 8
  %509 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %508, align 8
  %510 = tail call i8* %509(%"class.base::RefCountedMemory"* %506) #11
  %511 = load i64, i64* %40, align 8
  %512 = getelementptr inbounds i8, i8* %510, i64 %511
  %513 = load i8, i8* %512, align 1
  %514 = add i64 %511, 1
  store i64 %514, i64* %40, align 8
  %515 = zext i8 %513 to i32
  store i32 %515, i32* %489, align 4
  %516 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %517 = bitcast %"class.base::RefCountedMemory"* %516 to i8* (%"class.base::RefCountedMemory"*)***
  %518 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %517, align 8
  %519 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %518, align 8
  %520 = tail call i8* %519(%"class.base::RefCountedMemory"* %516) #11
  %521 = load i64, i64* %40, align 8
  %522 = getelementptr inbounds i8, i8* %520, i64 %521
  %523 = load i8, i8* %522, align 1
  %524 = add i64 %521, 1
  store i64 %524, i64* %40, align 8
  %525 = zext i8 %523 to i32
  store i32 %525, i32* %490, align 4
  %526 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %527 = bitcast %"class.base::RefCountedMemory"* %526 to i8* (%"class.base::RefCountedMemory"*)***
  %528 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %527, align 8
  %529 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %528, align 8
  %530 = tail call i8* %529(%"class.base::RefCountedMemory"* %526) #11
  %531 = load i64, i64* %40, align 8
  %532 = getelementptr inbounds i8, i8* %530, i64 %531
  %533 = load i8, i8* %532, align 1
  %534 = add i64 %531, 1
  store i64 %534, i64* %40, align 8
  %535 = zext i8 %533 to i32
  store i32 %535, i32* %491, align 4
  %536 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %537 = bitcast %"class.base::RefCountedMemory"* %536 to i8* (%"class.base::RefCountedMemory"*)***
  %538 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %537, align 8
  %539 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %538, align 8
  %540 = tail call i8* %539(%"class.base::RefCountedMemory"* %536) #11
  %541 = load i64, i64* %40, align 8
  %542 = getelementptr inbounds i8, i8* %540, i64 %541
  %543 = load i8, i8* %542, align 1
  %544 = add i64 %541, 1
  store i64 %544, i64* %40, align 8
  %545 = zext i8 %543 to i32
  store i32 %545, i32* %492, align 4
  %546 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %547 = bitcast %"class.base::RefCountedMemory"* %546 to i8* (%"class.base::RefCountedMemory"*)***
  %548 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %547, align 8
  %549 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %548, align 8
  %550 = tail call i8* %549(%"class.base::RefCountedMemory"* %546) #11
  %551 = load i64, i64* %40, align 8
  %552 = getelementptr inbounds i8, i8* %550, i64 %551
  %553 = load i8, i8* %552, align 1
  %554 = add i64 %551, 1
  store i64 %554, i64* %40, align 8
  %555 = zext i8 %553 to i32
  store i32 %555, i32* %493, align 4
  %556 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %557 = bitcast %"class.base::RefCountedMemory"* %556 to i8* (%"class.base::RefCountedMemory"*)***
  %558 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %557, align 8
  %559 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %558, align 8
  %560 = tail call i8* %559(%"class.base::RefCountedMemory"* %556) #11
  %561 = load i64, i64* %40, align 8
  %562 = getelementptr inbounds i8, i8* %560, i64 %561
  %563 = bitcast i8* %562 to i16*
  %564 = load i16, i16* %563, align 1
  %565 = add i64 %561, 2
  store i64 %565, i64* %40, align 8
  %566 = zext i16 %564 to i32
  store i32 %566, i32* %494, align 4
  %567 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %41, align 8
  %568 = bitcast %"class.base::RefCountedMemory"* %567 to i8* (%"class.base::RefCountedMemory"*)***
  %569 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %568, align 8
  %570 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %569, align 8
  %571 = tail call i8* %570(%"class.base::RefCountedMemory"* %567) #11
  %572 = load i64, i64* %40, align 8
  %573 = getelementptr inbounds i8, i8* %571, i64 %572
  %574 = bitcast i8* %573 to i32*
  %575 = load i32, i32* %574, align 1
  %576 = add i64 %572, 4
  store i64 %576, i64* %40, align 8
  store i32 %575, i32* %495, align 4
  %577 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %487, i64 1
  %578 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %577, %465
  br i1 %578, label %483, label %486
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13SetDeviceInfoERKNS0_20SetDeviceInfoRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetDeviceInfoRequest"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca %"class.std::__1::back_insert_iterator", align 8
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.std::__1::back_insert_iterator", align 8
  %18 = alloca %"class.std::__1::back_insert_iterator", align 8
  %19 = alloca %"class.std::__1::back_insert_iterator", align 8
  %20 = alloca %"class.std::__1::back_insert_iterator", align 8
  %21 = alloca %"class.std::__1::back_insert_iterator", align 8
  %22 = alloca %"class.std::__1::back_insert_iterator", align 8
  %23 = alloca %"class.std::__1::back_insert_iterator", align 8
  %24 = alloca %"class.std::__1::back_insert_iterator", align 8
  %25 = alloca i8, align 1
  %26 = alloca %"class.std::__1::back_insert_iterator", align 8
  %27 = alloca %"class.std::__1::back_insert_iterator", align 8
  %28 = alloca %"class.std::__1::back_insert_iterator", align 8
  %29 = alloca %"class.x11::WriteBuffer", align 8
  %30 = alloca i8, align 1
  %31 = alloca i16, align 2
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i16, align 2
  %35 = alloca i16, align 2
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i16, align 2
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %45 = load %"class.x11::Connection"*, %"class.x11::Connection"** %44, align 8
  %46 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %45) #11
  br i1 %46, label %47, label %348

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %348, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.x11::WriteBuffer"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %52) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #11
  %53 = bitcast i16* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %53) #11
  store i16 0, i16* %31, align 2
  %54 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 3
  %55 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 3, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector.407"* %54 to i64*
  %57 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 4, i32 0, i32 1
  %58 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %57 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #11
  %59 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %60 = load i8, i8* %59, align 1
  store i8 %60, i8* %32, align 1
  %61 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 1
  %62 = bitcast %"class.std::__1::back_insert_iterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %27, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %63, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %27, i8* nonnull dereferenceable(1) %32) #11
  %65 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %29, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #11
  store i8 25, i8* %33, align 1
  %68 = bitcast %"class.std::__1::back_insert_iterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %26, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %69, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %26, i8* nonnull dereferenceable(1) %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  %71 = load i64, i64* %65, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #11
  store i8 0, i8* %25, align 1
  %73 = bitcast %"class.std::__1::back_insert_iterator"* %24 to i8*
  %74 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %74, align 8
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %76 = load i64, i64* %65, align 8
  %77 = add i64 %76, 1
  store i64 %77, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %74, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %24, i8* nonnull dereferenceable(1) %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %79 = load i64, i64* %65, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %65, align 8
  %81 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 2
  %83 = bitcast %"union.x11::Xkb::Action"** %55 to i64*
  %84 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %1, i64 0, i32 4
  %85 = bitcast %"class.std::__1::vector.692"* %84 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #11
  %86 = bitcast %"struct.x11::Xkb::SetDeviceInfoRequest"* %1 to i8*
  %87 = bitcast %"class.std::__1::back_insert_iterator"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %23, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %88, align 8
  %89 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %86) #11
  %90 = getelementptr inbounds i8, i8* %86, i64 1
  %91 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %23, i8* dereferenceable(1) %90) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  %92 = load i64, i64* %65, align 8
  %93 = add i64 %92, 2
  store i64 %93, i64* %65, align 8
  %94 = bitcast %"class.std::__1::back_insert_iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %22, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %95, align 8
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %22, i8* dereferenceable(1) %81) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %97 = load i64, i64* %65, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %65, align 8
  %99 = load i64, i64* %83, align 8
  %100 = load i64, i64* %56, align 8
  %101 = sub i64 %99, %100
  %102 = lshr exact i64 %101, 5
  %103 = trunc i64 %102 to i8
  store i8 %103, i8* %30, align 1
  %104 = bitcast %"class.std::__1::back_insert_iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %21, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %105, align 8
  %106 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %21, i8* nonnull dereferenceable(1) %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  %107 = load i64, i64* %65, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %65, align 8
  %109 = bitcast i16* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %109) #11
  %110 = load i32, i32* %82, align 4
  %111 = trunc i32 %110 to i16
  store i16 %111, i16* %34, align 2
  %112 = bitcast %"class.std::__1::back_insert_iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  %113 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %20, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %113, align 8
  %114 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* nonnull dereferenceable(1) %109) #11
  %115 = getelementptr inbounds i8, i8* %109, i64 1
  %116 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %20, i8* dereferenceable(1) %115) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %117 = load i64, i64* %65, align 8
  %118 = add i64 %117, 2
  store i64 %118, i64* %65, align 8
  %119 = load i64, i64* %58, align 8
  %120 = load i64, i64* %85, align 8
  %121 = sub i64 %119, %120
  %122 = sdiv exact i64 %121, 72
  %123 = trunc i64 %122 to i16
  store i16 %123, i16* %31, align 2
  %124 = bitcast %"class.std::__1::back_insert_iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  %125 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %19, i64 0, i32 0
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %125, align 8
  %126 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* nonnull dereferenceable(1) %53) #11
  %127 = getelementptr inbounds i8, i8* %53, i64 1
  %128 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %19, i8* dereferenceable(1) %127) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #11
  %129 = load i64, i64* %65, align 8
  %130 = add i64 %129, 2
  store i64 %130, i64* %65, align 8
  %131 = getelementptr inbounds %"class.std::__1::vector.407", %"class.std::__1::vector.407"* %54, i64 0, i32 0, i32 0
  %132 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %131, align 8
  %133 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %55, align 8
  %134 = icmp eq %"union.x11::Xkb::Action"* %132, %133
  br i1 %134, label %135, label %181

135:                                              ; preds = %181, %51
  %136 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %84, i64 0, i32 0, i32 0
  %137 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %136, align 8
  %138 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %57, align 8
  %139 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %137, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = load i64, i64* %65, align 8
  br label %185

142:                                              ; preds = %135
  %143 = bitcast i16* %35 to i8*
  %144 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %145 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  %146 = getelementptr inbounds i8, i8* %143, i64 1
  %147 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %148 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  %149 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %150 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  %151 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %152 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  %153 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %154 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  %155 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %156 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  %157 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %158 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  %159 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %160 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  %161 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %162 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  %163 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  %164 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  %165 = bitcast %"class.std::__1::back_insert_iterator"* %15 to i8*
  %166 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %15, i64 0, i32 0
  %167 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  %168 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  %169 = bitcast %"class.std::__1::back_insert_iterator"* %17 to i8*
  %170 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %17, i64 0, i32 0
  %171 = bitcast i16* %42 to i8*
  %172 = bitcast %"class.std::__1::back_insert_iterator"* %18 to i8*
  %173 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %18, i64 0, i32 0
  %174 = getelementptr inbounds i8, i8* %171, i64 1
  %175 = bitcast i32* %43 to i8*
  %176 = bitcast %"class.std::__1::back_insert_iterator"* %28 to i8*
  %177 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %28, i64 0, i32 0
  %178 = getelementptr inbounds i8, i8* %175, i64 1
  %179 = getelementptr inbounds i8, i8* %175, i64 2
  %180 = getelementptr inbounds i8, i8* %175, i64 3
  br label %203

181:                                              ; preds = %51, %181
  %182 = phi %"union.x11::Xkb::Action"* [ %183, %181 ], [ %132, %51 ]
  call void @_ZN3x1111WriteBuffer5WriteINS_3Xkb6ActionEEEvPKT_(%"class.x11::WriteBuffer"* nonnull %29, %"union.x11::Xkb::Action"* %182)
  %183 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %182, i64 1
  %184 = icmp eq %"union.x11::Xkb::Action"* %183, %133
  br i1 %184, label %135, label %181

185:                                              ; preds = %289, %140
  %186 = phi i64 [ %141, %140 ], [ %290, %289 ]
  %187 = sub i64 0, %186
  %188 = and i64 %187, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  store i8 0, i8* %12, align 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %200, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  %192 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  br label %193

193:                                              ; preds = %193, %190
  %194 = phi i64 [ 0, %190 ], [ %198, %193 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %192, align 8
  %195 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  %196 = load i64, i64* %65, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %65, align 8
  %198 = add nuw nsw i64 %194, 1
  %199 = icmp eq i64 %198, %188
  br i1 %199, label %200, label %193

200:                                              ; preds = %193, %185
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  %201 = load %"class.x11::Connection"*, %"class.x11::Connection"** %44, align 8
  %202 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %201, %"class.x11::WriteBuffer"* nonnull %29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %52) #11
  br label %348

203:                                              ; preds = %142, %289
  %204 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %137, %142 ], [ %291, %289 ]
  %205 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 0
  %206 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 1
  %207 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 2
  %208 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 3
  %209 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 4
  %210 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 5
  %211 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 6, i32 0, i32 1
  %212 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 7, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %143) #11
  %213 = load i32, i32* %205, align 4
  %214 = trunc i32 %213 to i16
  store i16 %214, i16* %35, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %145, align 8
  %215 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %143) #11
  %216 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %146) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  %217 = load i64, i64* %65, align 8
  %218 = add i64 %217, 2
  store i64 %218, i64* %65, align 8
  %219 = bitcast i16* %206 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %148, align 8
  %220 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %219) #11
  %221 = getelementptr inbounds i8, i8* %219, i64 1
  %222 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %221) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  %223 = load i64, i64* %65, align 8
  %224 = add i64 %223, 2
  store i64 %224, i64* %65, align 8
  %225 = bitcast i32* %207 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %150, align 8
  %226 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %225) #11
  %227 = getelementptr inbounds i8, i8* %225, i64 1
  %228 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %227) #11
  %229 = getelementptr inbounds i8, i8* %225, i64 2
  %230 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %229) #11
  %231 = getelementptr inbounds i8, i8* %225, i64 3
  %232 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %231) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #11
  %233 = load i64, i64* %65, align 8
  %234 = add i64 %233, 4
  store i64 %234, i64* %65, align 8
  %235 = bitcast i32* %208 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %152, align 8
  %236 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %235) #11
  %237 = getelementptr inbounds i8, i8* %235, i64 1
  %238 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %237) #11
  %239 = getelementptr inbounds i8, i8* %235, i64 2
  %240 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %239) #11
  %241 = getelementptr inbounds i8, i8* %235, i64 3
  %242 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %241) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  %243 = load i64, i64* %65, align 8
  %244 = add i64 %243, 4
  store i64 %244, i64* %65, align 8
  %245 = bitcast i32* %209 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %154, align 8
  %246 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %245) #11
  %247 = getelementptr inbounds i8, i8* %245, i64 1
  %248 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %247) #11
  %249 = getelementptr inbounds i8, i8* %245, i64 2
  %250 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %249) #11
  %251 = getelementptr inbounds i8, i8* %245, i64 3
  %252 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %251) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #11
  %253 = load i64, i64* %65, align 8
  %254 = add i64 %253, 4
  store i64 %254, i64* %65, align 8
  %255 = bitcast i32* %210 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %156, align 8
  %256 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %255) #11
  %257 = getelementptr inbounds i8, i8* %255, i64 1
  %258 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %257) #11
  %259 = getelementptr inbounds i8, i8* %255, i64 2
  %260 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %259) #11
  %261 = getelementptr inbounds i8, i8* %255, i64 3
  %262 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %261) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #11
  %263 = load i64, i64* %65, align 8
  %264 = add i64 %263, 4
  store i64 %264, i64* %65, align 8
  %265 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 6, i32 0, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = load i32*, i32** %211, align 8
  %268 = icmp eq i32* %266, %267
  br i1 %268, label %269, label %275

269:                                              ; preds = %275, %203
  %270 = phi i64 [ %264, %203 ], [ %286, %275 ]
  %271 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 0, i32 7, i32 0, i32 0
  %272 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %271, align 8
  %273 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %212, align 8
  %274 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %272, %273
  br i1 %274, label %289, label %293

275:                                              ; preds = %203, %275
  %276 = phi i32* [ %287, %275 ], [ %266, %203 ]
  %277 = bitcast i32* %276 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %158, align 8
  %278 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %277) #11
  %279 = getelementptr inbounds i8, i8* %277, i64 1
  %280 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %279) #11
  %281 = getelementptr inbounds i8, i8* %277, i64 2
  %282 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %281) #11
  %283 = getelementptr inbounds i8, i8* %277, i64 3
  %284 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %283) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #11
  %285 = load i64, i64* %65, align 8
  %286 = add i64 %285, 4
  store i64 %286, i64* %65, align 8
  %287 = getelementptr inbounds i32, i32* %276, i64 1
  %288 = icmp eq i32* %287, %267
  br i1 %288, label %269, label %275

289:                                              ; preds = %293, %269
  %290 = phi i64 [ %270, %269 ], [ %345, %293 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %143) #11
  %291 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %204, i64 1
  %292 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %291, %138
  br i1 %292, label %185, label %203

293:                                              ; preds = %269, %293
  %294 = phi %"struct.x11::Xkb::IndicatorMap"* [ %346, %293 ], [ %272, %269 ]
  %295 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 0
  %296 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 1
  %297 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 2
  %298 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 3
  %299 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 4
  %300 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 5
  %301 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 6
  %302 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 0, i32 7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  %303 = load i32, i32* %295, align 4
  %304 = trunc i32 %303 to i8
  store i8 %304, i8* %36, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %160, align 8
  %305 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  %306 = load i64, i64* %65, align 8
  %307 = add i64 %306, 1
  store i64 %307, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #11
  %308 = load i32, i32* %296, align 4
  %309 = trunc i32 %308 to i8
  store i8 %309, i8* %37, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %162, align 8
  %310 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %37) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #11
  %311 = load i64, i64* %65, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #11
  %313 = load i32, i32* %297, align 4
  %314 = trunc i32 %313 to i8
  store i8 %314, i8* %38, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %164, align 8
  %315 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* nonnull dereferenceable(1) %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #11
  %316 = load i64, i64* %65, align 8
  %317 = add i64 %316, 1
  store i64 %317, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #11
  %318 = load i32, i32* %298, align 4
  %319 = trunc i32 %318 to i8
  store i8 %319, i8* %39, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %166, align 8
  %320 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %15, i8* nonnull dereferenceable(1) %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  %321 = load i64, i64* %65, align 8
  %322 = add i64 %321, 1
  store i64 %322, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #11
  %323 = load i32, i32* %299, align 4
  %324 = trunc i32 %323 to i8
  store i8 %324, i8* %40, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %168, align 8
  %325 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* nonnull dereferenceable(1) %40) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #11
  %326 = load i64, i64* %65, align 8
  %327 = add i64 %326, 1
  store i64 %327, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #11
  %328 = load i32, i32* %300, align 4
  %329 = trunc i32 %328 to i8
  store i8 %329, i8* %41, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %170, align 8
  %330 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %17, i8* nonnull dereferenceable(1) %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #11
  %331 = load i64, i64* %65, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %171) #11
  %333 = load i32, i32* %301, align 4
  %334 = trunc i32 %333 to i16
  store i16 %334, i16* %42, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %173, align 8
  %335 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* nonnull dereferenceable(1) %171) #11
  %336 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %18, i8* dereferenceable(1) %174) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #11
  %337 = load i64, i64* %65, align 8
  %338 = add i64 %337, 2
  store i64 %338, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175) #11
  %339 = load i32, i32* %302, align 4
  store i32 %339, i32* %43, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #11
  store %"class.std::__1::vector.271"* %61, %"class.std::__1::vector.271"** %177, align 8
  %340 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* nonnull dereferenceable(1) %175) #11
  %341 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %178) #11
  %342 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %179) #11
  %343 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %28, i8* dereferenceable(1) %180) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #11
  %344 = load i64, i64* %65, align 8
  %345 = add i64 %344, 4
  store i64 %345, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %171) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  %346 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %294, i64 1
  %347 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %346, %273
  br i1 %347, label %289, label %293

348:                                              ; preds = %2, %47, %200
  %349 = phi %"class.x11::Connection::FutureImpl"* [ %202, %200 ], [ null, %47 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %349
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13SetDeviceInfoERKNS0_10DeviceSpecERKhRKNS0_9XIFeatureERKNSt3__16vectorINS0_6ActionENS9_9allocatorISB_EEEERKNSA_INS0_13DeviceLedInfoENSC_ISH_EEEE(%"class.x11::Xkb"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), %"class.std::__1::vector.407"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.692"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.x11::Xkb::SetDeviceInfoRequest", align 8
  %8 = bitcast %"struct.x11::Xkb::SetDeviceInfoRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 0
  %10 = load i16, i16* %1, align 2
  store i16 %10, i16* %9, align 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 1
  %12 = load i8, i8* %2, align 1
  store i8 %12, i8* %11, align 2
  %13 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 2
  %14 = load i32, i32* %3, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 3
  %16 = bitcast %"class.std::__1::vector.407"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %17 = getelementptr inbounds %"class.std::__1::vector.407", %"class.std::__1::vector.407"* %4, i64 0, i32 0, i32 1
  %18 = bitcast %"union.x11::Xkb::Action"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.407"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 5
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %6
  %26 = icmp ugt i64 %23, 576460752303423487
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.407"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #13
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #12
  %31 = bitcast i8* %30 to %"union.x11::Xkb::Action"*
  %32 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 3, i32 0, i32 1
  %33 = bitcast %"union.x11::Xkb::Action"** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.407"* %15 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %31, i64 %23
  %36 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"union.x11::Xkb::Action"* %35, %"union.x11::Xkb::Action"** %36, align 8
  %37 = bitcast %"union.x11::Xkb::Action"** %32 to i64*
  %38 = ptrtoint i8* %30 to i64
  %39 = icmp sgt i64 %22, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = lshr exact i64 %22, 5
  %42 = inttoptr i64 %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %42, i64 %22, i1 false) #11
  %43 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %31, i64 %41
  %44 = ptrtoint %"union.x11::Xkb::Action"* %43 to i64
  br label %45

45:                                               ; preds = %40, %29
  %46 = phi i64 [ %44, %40 ], [ %38, %29 ]
  store i64 %46, i64* %37, align 8
  br label %47

47:                                               ; preds = %6, %45
  %48 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 4
  %49 = bitcast %"class.std::__1::vector.692"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %5, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.692"* %5 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = sdiv exact i64 %55, 72
  %57 = icmp eq i64 %55, 0
  %58 = inttoptr i64 %54 to %"struct.x11::Xkb::DeviceLedInfo"*
  %59 = inttoptr i64 %52 to %"struct.x11::Xkb::DeviceLedInfo"*
  br i1 %57, label %87, label %60

60:                                               ; preds = %47
  %61 = icmp ugt i64 %56, 256204778801521550
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.692"* %48 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #13
  unreachable

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 %55) #12
  %66 = bitcast i8* %65 to %"struct.x11::Xkb::DeviceLedInfo"*
  %67 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 4, i32 0, i32 1
  %68 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %67 to i8**
  store i8* %65, i8** %68, align 8
  %69 = bitcast %"class.std::__1::vector.692"* %48 to i8**
  store i8* %65, i8** %69, align 8
  %70 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %66, i64 %56
  %71 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::DeviceLedInfo"* %70, %"struct.x11::Xkb::DeviceLedInfo"** %71, align 8
  %72 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %67 to i64*
  %73 = ptrtoint i8* %65 to i64
  %74 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 4, i32 0, i32 2
  %75 = bitcast %"class.std::__1::__compressed_pair.694"* %74 to %"class.std::__1::allocator.697"*
  %76 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %58, %59
  br i1 %76, label %85, label %77

77:                                               ; preds = %64, %77
  %78 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %81, %77 ], [ %66, %64 ]
  %79 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %80, %77 ], [ %58, %64 ]
  call void @_ZNSt3__19allocatorIN3x113Xkb13DeviceLedInfoEE9constructIS3_JRS3_EEEvPT_DpOT0_(%"class.std::__1::allocator.697"* %75, %"struct.x11::Xkb::DeviceLedInfo"* %78, %"struct.x11::Xkb::DeviceLedInfo"* dereferenceable(72) %79) #11
  %80 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %79, i64 1
  %81 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 1
  %82 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %80, %59
  br i1 %82, label %83, label %77

83:                                               ; preds = %77
  %84 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %81 to i64
  br label %85

85:                                               ; preds = %83, %64
  %86 = phi i64 [ %73, %64 ], [ %84, %83 ]
  store i64 %86, i64* %72, align 8
  br label %87

87:                                               ; preds = %47, %85
  %88 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb13SetDeviceInfoERKNS0_20SetDeviceInfoRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetDeviceInfoRequest"* nonnull dereferenceable(56) %7)
  %89 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %48, i64 0, i32 0, i32 0
  %90 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %89, align 8
  %91 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %90, null
  br i1 %91, label %124, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.x11::Xkb::DeviceLedInfo"* %90 to i8*
  %94 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 4, i32 0, i32 1
  %95 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %94, align 8
  %96 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %95, %90
  br i1 %96, label %122, label %97

97:                                               ; preds = %92, %117
  %98 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %99, %117 ], [ %95, %92 ]
  %99 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %98, i64 -1, i32 7, i32 0, i32 0
  %101 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %100, align 8
  %102 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %101 to i64
  %105 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %98, i64 -1, i32 7, i32 0, i32 1
  %106 = bitcast %"struct.x11::Xkb::IndicatorMap"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"struct.x11::Xkb::IndicatorMap"* %101 to i8*
  call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %103, %97
  %109 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %98, i64 -1, i32 6, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = ptrtoint i32* %110 to i64
  %114 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %98, i64 -1, i32 6, i32 0, i32 1
  %115 = bitcast i32** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast i32* %110 to i8*
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %112, %108
  %118 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %99, %90
  br i1 %118, label %119, label %97

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::vector.692"* %48 to i8**
  %121 = load i8*, i8** %120, align 8
  br label %122

122:                                              ; preds = %119, %92
  %123 = phi i8* [ %121, %119 ], [ %93, %92 ]
  store %"struct.x11::Xkb::DeviceLedInfo"* %90, %"struct.x11::Xkb::DeviceLedInfo"** %94, align 8
  call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %122, %87
  %125 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 3, i32 0, i32 0
  %126 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %125, align 8
  %127 = icmp eq %"union.x11::Xkb::Action"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = ptrtoint %"union.x11::Xkb::Action"* %126 to i64
  %130 = getelementptr inbounds %"struct.x11::Xkb::SetDeviceInfoRequest", %"struct.x11::Xkb::SetDeviceInfoRequest"* %7, i64 0, i32 3, i32 0, i32 1
  %131 = bitcast %"union.x11::Xkb::Action"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast %"union.x11::Xkb::Action"* %126 to i8*
  call void @_ZdlPv(i8* %132) #12
  br label %133

133:                                              ; preds = %124, %128
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #11
  ret %"class.x11::Connection::FutureImpl"* %88
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetDebuggingFlagsERKNS0_24SetDebuggingFlagsRequestE(%"class.x11::Xkb"* nocapture readonly, %"struct.x11::Xkb::SetDebuggingFlagsRequest"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca %"class.std::__1::back_insert_iterator", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.std::__1::back_insert_iterator", align 8
  %17 = alloca %"class.x11::WriteBuffer", align 8
  %18 = alloca i16, align 2
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 0
  %22 = load %"class.x11::Connection"*, %"class.x11::Connection"** %21, align 8
  %23 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %22) #11
  br i1 %23, label %24, label %159

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %159, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.x11::WriteBuffer"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %17) #11
  %30 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1, i64 0, i32 3
  %33 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1, i64 0, i32 4, i32 0, i32 1
  %34 = bitcast i8** %33 to i64*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #11
  %35 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %0, i64 0, i32 1, i32 2
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %19, align 1
  %37 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %17, i64 0, i32 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %19) #11
  %41 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %17, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #11
  store i8 101, i8* %20, align 1
  %44 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %45, align 8
  %46 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %47 = load i64, i64* %41, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 0, i8* %11, align 1
  %49 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  %50 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %50, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %52 = load i64, i64* %41, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %50, align 8
  %54 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %55 = load i64, i64* %41, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %41, align 8
  %57 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1, i64 0, i32 2
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1, i64 0, i32 4
  %59 = bitcast %"class.std::__1::vector.636"* %58 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  %60 = load i64, i64* %34, align 8
  %61 = load i64, i64* %59, align 8
  %62 = sub i64 %60, %61
  %63 = trunc i64 %62 to i16
  store i16 %63, i16* %18, align 2
  %64 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %65, align 8
  %66 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %30) #11
  %67 = getelementptr inbounds i8, i8* %30, i64 1
  %68 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %69 = load i64, i64* %41, align 8
  %70 = add i64 %69, 2
  store i64 %70, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %71 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %72 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %72, align 8
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  %74 = load i64, i64* %41, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %72, align 8
  %76 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  %77 = load i64, i64* %41, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  %79 = bitcast %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %1 to i8*
  %80 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %81, align 8
  %82 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %79) #11
  %83 = getelementptr inbounds i8, i8* %79, i64 1
  %84 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %83) #11
  %85 = getelementptr inbounds i8, i8* %79, i64 2
  %86 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %85) #11
  %87 = getelementptr inbounds i8, i8* %79, i64 3
  %88 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %87) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %89 = load i64, i64* %41, align 8
  %90 = add i64 %89, 4
  store i64 %90, i64* %41, align 8
  %91 = bitcast i32* %31 to i8*
  %92 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %93, align 8
  %94 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %91) #11
  %95 = getelementptr inbounds i8, i8* %91, i64 1
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %95) #11
  %97 = getelementptr inbounds i8, i8* %91, i64 2
  %98 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %97) #11
  %99 = getelementptr inbounds i8, i8* %91, i64 3
  %100 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %101 = load i64, i64* %41, align 8
  %102 = add i64 %101, 4
  store i64 %102, i64* %41, align 8
  %103 = bitcast i32* %57 to i8*
  %104 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %105, align 8
  %106 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %103) #11
  %107 = getelementptr inbounds i8, i8* %103, i64 1
  %108 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %107) #11
  %109 = getelementptr inbounds i8, i8* %103, i64 2
  %110 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %109) #11
  %111 = getelementptr inbounds i8, i8* %103, i64 3
  %112 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %111) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  %113 = load i64, i64* %41, align 8
  %114 = add i64 %113, 4
  store i64 %114, i64* %41, align 8
  %115 = bitcast i32* %32 to i8*
  %116 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %117, align 8
  %118 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %115) #11
  %119 = getelementptr inbounds i8, i8* %115, i64 1
  %120 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %119) #11
  %121 = getelementptr inbounds i8, i8* %115, i64 2
  %122 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %121) #11
  %123 = getelementptr inbounds i8, i8* %115, i64 3
  %124 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* dereferenceable(1) %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  %125 = load i64, i64* %41, align 8
  %126 = add i64 %125, 4
  store i64 %126, i64* %41, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %58, i64 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = load i8*, i8** %33, align 8
  %130 = icmp eq i8* %128, %129
  br i1 %130, label %134, label %131

131:                                              ; preds = %28
  %132 = bitcast %"class.std::__1::back_insert_iterator"* %16 to i8*
  %133 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %16, i64 0, i32 0
  br label %152

134:                                              ; preds = %152, %28
  %135 = phi i64 [ %126, %28 ], [ %156, %152 ]
  %136 = sub i64 0, %135
  %137 = and i64 %136, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  store i8 0, i8* %15, align 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::back_insert_iterator"* %14 to i8*
  %141 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %14, i64 0, i32 0
  br label %142

142:                                              ; preds = %142, %139
  %143 = phi i64 [ 0, %139 ], [ %147, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %141, align 8
  %144 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %14, i8* nonnull dereferenceable(1) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  %145 = load i64, i64* %41, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %41, align 8
  %147 = add nuw nsw i64 %143, 1
  %148 = icmp eq i64 %147, %137
  br i1 %148, label %149, label %142

149:                                              ; preds = %142, %134
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  %150 = load %"class.x11::Connection"*, %"class.x11::Connection"** %21, align 8
  %151 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %150, %"class.x11::WriteBuffer"* nonnull %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #11
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #11
  br label %159

152:                                              ; preds = %131, %152
  %153 = phi i8* [ %128, %131 ], [ %157, %152 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #11
  store %"class.std::__1::vector.271"* %37, %"class.std::__1::vector.271"** %133, align 8
  %154 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %16, i8* dereferenceable(1) %153) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #11
  %155 = load i64, i64* %41, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %41, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  %158 = icmp eq i8* %157, %129
  br i1 %158, label %134, label %152

159:                                              ; preds = %2, %24, %149
  %160 = phi %"class.x11::Connection::FutureImpl"* [ %151, %149 ], [ null, %24 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %160
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetDebuggingFlagsERKjS2_S2_S2_RKNSt3__16vectorINS0_7String8ENS3_9allocatorIS5_EEEE(%"class.x11::Xkb"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"class.std::__1::vector.636"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.x11::Xkb::SetDebuggingFlagsRequest", align 8
  %8 = bitcast %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 0
  %10 = load i32, i32* %1, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 1
  %12 = load i32, i32* %2, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 2
  %14 = load i32, i32* %3, align 4
  store i32 %14, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 3
  %16 = load i32, i32* %4, align 4
  store i32 %16, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 4
  %18 = bitcast %"class.std::__1::vector.636"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11
  %19 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %5, i64 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.636"* %5 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %23 to i8*
  br i1 %25, label %39, label %27

27:                                               ; preds = %6
  %28 = icmp slt i64 %24, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.636"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #13
  unreachable

31:                                               ; preds = %27
  %32 = tail call i8* @_Znwm(i64 %24) #12
  %33 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 4, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %17, i64 0, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 %24
  %36 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = bitcast i8** %33 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %26, i64 %24, i1 false) #11
  %38 = ptrtoint i8* %35 to i64
  store i64 %38, i64* %37, align 8
  br label %39

39:                                               ; preds = %6, %31
  %40 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb17SetDebuggingFlagsERKNS0_24SetDebuggingFlagsRequestE(%"class.x11::Xkb"* %0, %"struct.x11::Xkb::SetDebuggingFlagsRequest"* nonnull dereferenceable(40) %7)
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 4, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = ptrtoint i8* %42 to i64
  %46 = getelementptr inbounds %"struct.x11::Xkb::SetDebuggingFlagsRequest", %"struct.x11::Xkb::SetDebuggingFlagsRequest"* %7, i64 0, i32 4, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  store i64 %45, i64* %47, align 8
  call void @_ZdlPv(i8* nonnull %42) #12
  br label %48

48:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret %"class.x11::Connection::FutureImpl"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::Xkb::SetDebuggingFlagsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb22SetDebuggingFlagsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 20) #12
  %3 = bitcast i8* %2 to %"struct.x11::Xkb::SetDebuggingFlagsReply"*
  %4 = bitcast i8* %2 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %17 = bitcast %"class.base::RefCountedMemory"* %16 to i8* (%"class.base::RefCountedMemory"*)***
  %18 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %18, align 8
  %20 = tail call i8* %19(%"class.base::RefCountedMemory"* %16) #11
  %21 = load i64, i64* %14, align 8
  %22 = add i64 %21, 2
  store i64 %22, i64* %14, align 8
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %24 = bitcast %"class.base::RefCountedMemory"* %23 to i8* (%"class.base::RefCountedMemory"*)***
  %25 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %25, align 8
  %27 = tail call i8* %26(%"class.base::RefCountedMemory"* %23) #11
  %28 = load i64, i64* %14, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 1
  store i16 %31, i16* %5, align 2
  %32 = add i64 %28, 2
  store i64 %32, i64* %14, align 8
  %33 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %34 = bitcast %"class.base::RefCountedMemory"* %33 to i8* (%"class.base::RefCountedMemory"*)***
  %35 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %34, align 8
  %36 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %35, align 8
  %37 = tail call i8* %36(%"class.base::RefCountedMemory"* %33) #11
  %38 = load i64, i64* %14, align 8
  %39 = add i64 %38, 4
  store i64 %39, i64* %14, align 8
  %40 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %41 = bitcast %"class.base::RefCountedMemory"* %40 to i8* (%"class.base::RefCountedMemory"*)***
  %42 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %41, align 8
  %43 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %42, align 8
  %44 = tail call i8* %43(%"class.base::RefCountedMemory"* %40) #11
  %45 = load i64, i64* %14, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 1
  store i32 %48, i32* %7, align 4
  %49 = add i64 %45, 4
  store i64 %49, i64* %14, align 8
  %50 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %51 = bitcast %"class.base::RefCountedMemory"* %50 to i8* (%"class.base::RefCountedMemory"*)***
  %52 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %51, align 8
  %53 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %52, align 8
  %54 = tail call i8* %53(%"class.base::RefCountedMemory"* %50) #11
  %55 = load i64, i64* %14, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 1
  store i32 %58, i32* %9, align 4
  %59 = add i64 %55, 4
  store i64 %59, i64* %14, align 8
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = tail call i8* %63(%"class.base::RefCountedMemory"* %60) #11
  %65 = load i64, i64* %14, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  store i32 %68, i32* %11, align 4
  %69 = add i64 %65, 4
  store i64 %69, i64* %14, align 8
  %70 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %71 = bitcast %"class.base::RefCountedMemory"* %70 to i8* (%"class.base::RefCountedMemory"*)***
  %72 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %71, align 8
  %73 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %72, align 8
  %74 = tail call i8* %73(%"class.base::RefCountedMemory"* %70) #11
  %75 = load i64, i64* %14, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  store i32 %78, i32* %13, align 4
  %79 = add i64 %75, 12
  %80 = sub i64 0, %75
  %81 = and i64 %80, 3
  %82 = add i64 %79, %81
  store i64 %82, i64* %14, align 8
  ret %"struct.x11::Xkb::SetDebuggingFlagsReply"* %3
}

; Function Attrs: nounwind
declare void @_ZN3x115ErrorD2Ev(%"class.x11::Error"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb13KeyboardErrorD0Ev(%"struct.x11::Xkb::KeyboardError"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::KeyboardError", %"struct.x11::Xkb::KeyboardError"* %0, i64 0, i32 0
  tail call void @_ZN3x115ErrorD2Ev(%"class.x11::Error"* %2) #11
  %3 = bitcast %"struct.x11::Xkb::KeyboardError"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb10SetKeyTypeC2ERKS1_(%"struct.x11::Xkb::SetKeyType"*, %"struct.x11::Xkb::SetKeyType"* dereferenceable(64)) unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"struct.x11::Xkb::SetKeyType"* %0 to i8*
  %4 = bitcast %"struct.x11::Xkb::SetKeyType"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 14, i1 false)
  %5 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %1, i64 0, i32 5
  %7 = bitcast %"class.std::__1::vector.496"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %1, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.496"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 12
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 1537228672809129301
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.496"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #12
  %22 = bitcast i8* %21 to %"struct.x11::Xkb::KTSetMapEntry"*
  %23 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 5, i32 0, i32 1
  %24 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.496"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %22, i64 %14
  %27 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KTSetMapEntry"* %26, %"struct.x11::Xkb::KTSetMapEntry"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.496", %"class.std::__1::vector.496"* %6, i64 0, i32 0, i32 0
  %29 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = udiv exact i64 %34, 12
  %38 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %29, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #11
  %39 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %22, i64 %37
  %40 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 6
  %45 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %1, i64 0, i32 6
  %46 = bitcast %"class.std::__1::vector.496"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %1, i64 0, i32 6, i32 0, i32 1
  %48 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector.496"* %45 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = sdiv exact i64 %52, 12
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %43
  %56 = icmp ugt i64 %53, 1537228672809129301
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.496"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #13
  unreachable

59:                                               ; preds = %55
  %60 = tail call i8* @_Znwm(i64 %52) #12
  %61 = bitcast i8* %60 to %"struct.x11::Xkb::KTSetMapEntry"*
  %62 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 6, i32 0, i32 1
  %63 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %62 to i8**
  store i8* %60, i8** %63, align 8
  %64 = bitcast %"class.std::__1::vector.496"* %44 to i8**
  store i8* %60, i8** %64, align 8
  %65 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %61, i64 %53
  %66 = getelementptr inbounds %"struct.x11::Xkb::SetKeyType", %"struct.x11::Xkb::SetKeyType"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KTSetMapEntry"* %65, %"struct.x11::Xkb::KTSetMapEntry"** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::vector.496", %"class.std::__1::vector.496"* %45, i64 0, i32 0, i32 0
  %68 = load %"struct.x11::Xkb::KTSetMapEntry"*, %"struct.x11::Xkb::KTSetMapEntry"** %67, align 8
  %69 = load i64, i64* %48, align 8
  %70 = bitcast %"struct.x11::Xkb::KTSetMapEntry"** %62 to i64*
  %71 = ptrtoint i8* %60 to i64
  %72 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %68 to i64
  %73 = sub i64 %69, %72
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %59
  %76 = udiv exact i64 %73, 12
  %77 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %68, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 %77, i64 %73, i1 false) #11
  %78 = getelementptr inbounds %"struct.x11::Xkb::KTSetMapEntry", %"struct.x11::Xkb::KTSetMapEntry"* %61, i64 %76
  %79 = ptrtoint %"struct.x11::Xkb::KTSetMapEntry"* %78 to i64
  br label %80

80:                                               ; preds = %75, %59
  %81 = phi i64 [ %79, %75 ], [ %71, %59 ]
  store i64 %81, i64* %70, align 8
  br label %82

82:                                               ; preds = %43, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.382"*, %"class.std::__1::vector.382"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.382"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.x11::Xkb::KeySymMap"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.382"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %83, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 576460752303423487
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #13
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to %"struct.x11::Xkb::KeySymMap"*
  %19 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.x11::Xkb::KeySymMap"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.382"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::KeySymMap"* %22, %"struct.x11::Xkb::KeySymMap"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %24, align 8
  %26 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %4, align 8
  %27 = bitcast %"struct.x11::Xkb::KeySymMap"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.x11::Xkb::KeySymMap"* %25, %26
  br i1 %29, label %81, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.x11::Xkb::KeySymMap"*
  br label %32

32:                                               ; preds = %75, %30
  %33 = phi %"struct.x11::Xkb::KeySymMap"* [ %77, %75 ], [ %31, %30 ]
  %34 = phi %"struct.x11::Xkb::KeySymMap"* [ %76, %75 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %33, i64 0, i32 0, i32 0, i64 0
  %36 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 6, i1 false) #11
  %37 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %33, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 0, i32 3
  %39 = bitcast %"class.std::__1::vector.385"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #11
  %40 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 0, i32 3, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.385"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 2
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %32
  %49 = icmp ugt i64 %46, 4611686018427387903
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.385"* %37 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #13
  unreachable

52:                                               ; preds = %48
  %53 = tail call i8* @_Znwm(i64 %45) #12
  %54 = bitcast i8* %53 to i32*
  %55 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %33, i64 0, i32 3, i32 0, i32 1
  %56 = bitcast i32** %55 to i8**
  store i8* %53, i8** %56, align 8
  %57 = bitcast %"class.std::__1::vector.385"* %37 to i8**
  store i8* %53, i8** %57, align 8
  %58 = getelementptr inbounds i32, i32* %54, i64 %46
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %33, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %58, i32** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %38, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %41, align 8
  %63 = bitcast i32** %55 to i64*
  %64 = ptrtoint i8* %53 to i64
  %65 = ptrtoint i32* %61 to i64
  %66 = sub i64 %62, %65
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %52
  %69 = lshr exact i64 %66, 2
  %70 = bitcast i32* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %70, i64 %66, i1 false) #11
  %71 = getelementptr inbounds i32, i32* %54, i64 %69
  %72 = ptrtoint i32* %71 to i64
  br label %73

73:                                               ; preds = %68, %52
  %74 = phi i64 [ %72, %68 ], [ %64, %52 ]
  store i64 %74, i64* %63, align 8
  br label %75

75:                                               ; preds = %73, %32
  %76 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 1
  %77 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %33, i64 1
  %78 = icmp eq %"struct.x11::Xkb::KeySymMap"* %76, %26
  br i1 %78, label %79, label %32

79:                                               ; preds = %75
  %80 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %77 to i64
  br label %81

81:                                               ; preds = %16, %79
  %82 = phi i64 [ %28, %16 ], [ %80, %79 ]
  store i64 %82, i64* %27, align 8
  br label %83

83:                                               ; preds = %2, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.271"*, %"class.std::__1::vector.271"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.271"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.271"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #13
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #12
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #11
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #12
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"*, %"class.x11::WriteBuffer"*, i8*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb7KeyTypeENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.356"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.356", %"class.std::__1::vector.356"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeyType"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.356", %"class.std::__1::vector.356"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeyType"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 6
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeyType"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 64
  %25 = and i64 %24, -64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::KeyType"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %191

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.356"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 6
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 288230376151711743
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.356"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 6
  %41 = icmp ult i64 %40, 144115188075855871
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 5
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 288230376151711743
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 288230376151711743, %38 ]
  %52 = shl i64 %51, 6
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"struct.x11::Xkb::KeyType"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Xkb::KeyType"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %57, i64 %33
  %59 = ptrtoint %"struct.x11::Xkb::KeyType"* %58 to i64
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %58, i64 %1
  %62 = shl nsw i64 %1, 6
  %63 = add i64 %62, -64
  %64 = lshr exact i64 %63, 6
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"struct.x11::Xkb::KeyType"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 64, i1 false) #11
  %73 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %69, i64 1
  %74 = ptrtoint %"struct.x11::Xkb::KeyType"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !14

77:                                               ; preds = %68
  %78 = ptrtoint %"struct.x11::Xkb::KeyType"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"struct.x11::Xkb::KeyType"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 448
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.x11::Xkb::KeyType"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 64, i1 false) #11
  %87 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 1
  %88 = bitcast %"struct.x11::Xkb::KeyType"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 64, i1 false) #11
  %89 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 2
  %90 = bitcast %"struct.x11::Xkb::KeyType"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 64, i1 false) #11
  %91 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 3
  %92 = bitcast %"struct.x11::Xkb::KeyType"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 64, i1 false) #11
  %93 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 4
  %94 = bitcast %"struct.x11::Xkb::KeyType"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 64, i1 false) #11
  %95 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 5
  %96 = bitcast %"struct.x11::Xkb::KeyType"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 64, i1 false) #11
  %97 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 6
  %98 = bitcast %"struct.x11::Xkb::KeyType"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 64, i1 false) #11
  %99 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 7
  %100 = bitcast %"struct.x11::Xkb::KeyType"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 64, i1 false) #11
  %101 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %84, i64 8
  %102 = ptrtoint %"struct.x11::Xkb::KeyType"* %101 to i64
  %103 = icmp eq %"struct.x11::Xkb::KeyType"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"struct.x11::Xkb::KeyType"* %60 to i64
  %106 = ptrtoint %"struct.x11::Xkb::KeyType"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.356", %"class.std::__1::vector.356"* %0, i64 0, i32 0, i32 0
  %108 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %107, align 8
  %109 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %6, align 8
  %110 = icmp eq %"struct.x11::Xkb::KeyType"* %109, %108
  br i1 %110, label %111, label %113

111:                                              ; preds = %104
  %112 = ptrtoint %"struct.x11::Xkb::KeyType"* %108 to i64
  br label %159

113:                                              ; preds = %104, %113
  %114 = phi %"struct.x11::Xkb::KeyType"* [ %116, %113 ], [ %58, %104 ]
  %115 = phi %"struct.x11::Xkb::KeyType"* [ %117, %113 ], [ %109, %104 ]
  %116 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1
  %117 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1
  %118 = bitcast %"struct.x11::Xkb::KeyType"* %116 to i8*
  %119 = bitcast %"struct.x11::Xkb::KeyType"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 14, i1 false) #11
  %120 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 5
  %121 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 5
  %122 = bitcast %"class.std::__1::vector.358"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #11
  %123 = bitcast %"class.std::__1::vector.358"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.358"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 5, i32 0, i32 1
  %127 = bitcast %"struct.x11::Xkb::KTMapEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 5, i32 0, i32 1
  %130 = bitcast %"struct.x11::Xkb::KTMapEntry"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast %"struct.x11::Xkb::KTMapEntry"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"struct.x11::Xkb::KTMapEntry"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.std::__1::vector.358"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #11
  %137 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 6
  %138 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 6
  %139 = bitcast %"class.std::__1::vector.365"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #11
  %140 = bitcast %"class.std::__1::vector.365"* %138 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.365"* %137 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 6, i32 0, i32 1
  %144 = bitcast %"struct.x11::Xkb::ModDef"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 6, i32 0, i32 1
  %147 = bitcast %"struct.x11::Xkb::ModDef"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %115, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"struct.x11::Xkb::ModDef"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %114, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"struct.x11::Xkb::ModDef"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.std::__1::vector.365"* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #11
  %154 = icmp eq %"struct.x11::Xkb::KeyType"* %117, %108
  br i1 %154, label %155, label %113

155:                                              ; preds = %113
  %156 = ptrtoint %"struct.x11::Xkb::KeyType"* %116 to i64
  %157 = load i64, i64* %30, align 8
  %158 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %6, align 8
  br label %159

159:                                              ; preds = %111, %155
  %160 = phi %"struct.x11::Xkb::KeyType"* [ %108, %111 ], [ %158, %155 ]
  %161 = phi i64 [ %59, %111 ], [ %156, %155 ]
  %162 = phi i64 [ %112, %111 ], [ %157, %155 ]
  store i64 %161, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %163 = inttoptr i64 %162 to %"struct.x11::Xkb::KeyType"*
  %164 = icmp eq %"struct.x11::Xkb::KeyType"* %160, %163
  br i1 %164, label %187, label %165

165:                                              ; preds = %159, %185
  %166 = phi %"struct.x11::Xkb::KeyType"* [ %167, %185 ], [ %160, %159 ]
  %167 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %166, i64 -1
  %168 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %166, i64 -1, i32 6, i32 0, i32 0
  %169 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %168, align 8
  %170 = icmp eq %"struct.x11::Xkb::ModDef"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %165
  %172 = ptrtoint %"struct.x11::Xkb::ModDef"* %169 to i64
  %173 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %166, i64 -1, i32 6, i32 0, i32 1
  %174 = bitcast %"struct.x11::Xkb::ModDef"** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast %"struct.x11::Xkb::ModDef"* %169 to i8*
  tail call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %171, %165
  %177 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %166, i64 -1, i32 5, i32 0, i32 0
  %178 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %177, align 8
  %179 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %178 to i64
  %182 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %166, i64 -1, i32 5, i32 0, i32 1
  %183 = bitcast %"struct.x11::Xkb::KTMapEntry"** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %178, i64 0, i32 0
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %180, %176
  %186 = icmp eq %"struct.x11::Xkb::KeyType"* %167, %163
  br i1 %186, label %187, label %165

187:                                              ; preds = %185, %159
  %188 = icmp eq i64 %162, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %162 to i8*
  tail call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %189, %187, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb10KTMapEntryENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.358"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KTMapEntry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KTMapEntry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 20
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KTMapEntry"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %13, i64 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %13, i64 %18, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = urem i64 %22, 20
  %24 = add i64 %22, 20
  %25 = sub i64 %24, %23
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %88

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.358"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = sdiv exact i64 %32, 20
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 922337203685477580
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.358"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = sdiv exact i64 %39, 20
  %41 = icmp ult i64 %40, 461168601842738790
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = shl nsw i64 %40, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 922337203685477580, %38 ]
  %49 = mul i64 %48, 20
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.x11::Xkb::KTMapEntry"*
  br label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %54 = phi %"struct.x11::Xkb::KTMapEntry"* [ %51, %47 ], [ null, %42 ]
  %55 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %54, i64 %33
  %56 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %55 to i64
  %57 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %54, i64 %53
  %58 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %55, i64 %1
  %59 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %55, i64 0, i32 0
  %60 = add i64 %1, -1
  %61 = getelementptr %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %55, i64 %60, i32 0
  %62 = sub i64 0, %56
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = ptrtoint i8* %63 to i64
  %65 = urem i64 %64, 20
  %66 = add i64 %64, 20
  %67 = sub i64 %66, %65
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %67, i1 false) #11
  %68 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %57 to i64
  %69 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %58 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.358", %"class.std::__1::vector.358"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %70, align 8
  %72 = load i64, i64* %7, align 8
  %73 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -20
  %76 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %55, i64 %75
  %77 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %76, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %71, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %74, i1 false) #11
  %82 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %70, align 8
  br label %83

83:                                               ; preds = %52, %79
  %84 = phi %"struct.x11::Xkb::KTMapEntry"* [ %71, %52 ], [ %82, %79 ]
  store i64 %77, i64* %30, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %85 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %84, i64 0, i32 0
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %86, %83, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb6ModDefENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.365"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::ModDef"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::ModDef"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 12
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::ModDef"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 12
  %25 = add i64 %23, 12
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #11
  %27 = ptrtoint %"struct.x11::Xkb::ModDef"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.365"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 12
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 1537228672809129301
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.365"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 12
  %42 = icmp ult i64 %41, 768614336404564650
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 1537228672809129301, %39 ]
  %50 = mul i64 %49, 12
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.x11::Xkb::ModDef"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Xkb::ModDef"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %55, i64 %34
  %57 = bitcast %"struct.x11::Xkb::ModDef"* %56 to i8*
  %58 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %56, i64 %1
  %60 = mul nsw i64 %1, 12
  %61 = add i64 %60, -12
  %62 = urem i64 %61, 12
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.x11::Xkb::ModDef"* %58 to i64
  %66 = ptrtoint %"struct.x11::Xkb::ModDef"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.365", %"class.std::__1::vector.365"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.x11::Xkb::ModDef"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -12
  %73 = getelementptr inbounds %"struct.x11::Xkb::ModDef", %"struct.x11::Xkb::ModDef"* %56, i64 %72
  %74 = ptrtoint %"struct.x11::Xkb::ModDef"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.x11::Xkb::ModDef"* %73 to i8*
  %78 = bitcast %"struct.x11::Xkb::ModDef"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #11
  %79 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.x11::Xkb::ModDef"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.x11::Xkb::ModDef"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.x11::Xkb::ModDef"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb9KeySymMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.382"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeySymMap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeySymMap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeySymMap"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %13, i64 0, i32 0, i32 0, i64 0
  %18 = add i64 %1, -1
  %19 = sub i64 0, %8
  %20 = getelementptr %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %13, i64 %18, i32 0, i32 0, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = add i64 %21, 32
  %23 = and i64 %22, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %23, i1 false) #11
  %24 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %16 to i64
  br label %25

25:                                               ; preds = %12, %15
  %26 = phi i64 [ %24, %15 ], [ %8, %12 ]
  store i64 %26, i64* %7, align 8
  br label %176

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.382"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %8, %29
  %31 = ashr exact i64 %30, 5
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 576460752303423487
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #13
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %5, %29
  %38 = ashr exact i64 %37, 5
  %39 = icmp ult i64 %38, 288230376151711743
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 4
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 576460752303423487
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %36, %45
  %49 = phi i64 [ %43, %45 ], [ 576460752303423487, %36 ]
  %50 = shl i64 %49, 5
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.x11::Xkb::KeySymMap"*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"struct.x11::Xkb::KeySymMap"* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %55, i64 %31
  %57 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %56 to i64
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 %1
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 0, i32 0, i32 0, i64 0
  %61 = add i64 %1, -1
  %62 = sub i64 0, %57
  %63 = getelementptr %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 %61, i32 0, i32 0, i64 %62
  %64 = ptrtoint i8* %63 to i64
  %65 = add i64 %64, 32
  %66 = and i64 %65, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %66, i1 false) #11
  %67 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %58 to i64
  %68 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %59 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 0
  %70 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %69, align 8
  %71 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %6, align 8
  %72 = icmp eq %"struct.x11::Xkb::KeySymMap"* %71, %70
  br i1 %72, label %107, label %73

73:                                               ; preds = %53
  %74 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %70 to i64
  %75 = sub i64 0, %74
  %76 = getelementptr %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %71, i64 -1, i32 0, i32 0, i64 %75
  %77 = ptrtoint i8* %76 to i64
  %78 = and i64 %77, 32
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %102

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %71, i64 -1
  %82 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 -1, i32 0, i32 0, i64 0
  %83 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %81, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 6, i1 false) #11
  %84 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 -1, i32 3
  %85 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %71, i64 -1, i32 3
  %86 = bitcast %"class.std::__1::vector.385"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #11
  %87 = bitcast %"class.std::__1::vector.385"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.385"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %71, i64 -1, i32 3, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 -1, i32 3, i32 0, i32 1
  %94 = bitcast i32** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %71, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast i32** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast i32** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.385"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #11
  %101 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %56, i64 -1
  br label %102

102:                                              ; preds = %80, %73
  %103 = phi %"struct.x11::Xkb::KeySymMap"* [ undef, %73 ], [ %101, %80 ]
  %104 = phi %"struct.x11::Xkb::KeySymMap"* [ %56, %73 ], [ %101, %80 ]
  %105 = phi %"struct.x11::Xkb::KeySymMap"* [ %71, %73 ], [ %81, %80 ]
  %106 = icmp ult i8* %76, inttoptr (i64 32 to i8*)
  br i1 %106, label %152, label %108

107:                                              ; preds = %53
  store i64 %57, i64* %28, align 8
  store i64 %68, i64* %7, align 8
  store i64 %67, i64* %4, align 8
  br label %171

108:                                              ; preds = %102, %108
  %109 = phi %"struct.x11::Xkb::KeySymMap"* [ %150, %108 ], [ %104, %102 ]
  %110 = phi %"struct.x11::Xkb::KeySymMap"* [ %130, %108 ], [ %105, %102 ]
  %111 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -1, i32 0, i32 0, i64 0
  %112 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 6, i1 false) #11
  %113 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -1, i32 3
  %114 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 3
  %115 = bitcast %"class.std::__1::vector.385"* %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #11
  %116 = bitcast %"class.std::__1::vector.385"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::vector.385"* %113 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 3, i32 0, i32 1
  %120 = bitcast i32** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -1, i32 3, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %125 = bitcast i32** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %128 = bitcast i32** %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = bitcast %"class.std::__1::vector.385"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #11
  %130 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -2
  %131 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -2, i32 0, i32 0, i64 0
  %132 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %130, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 6, i1 false) #11
  %133 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -2, i32 3
  %134 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -2, i32 3
  %135 = bitcast %"class.std::__1::vector.385"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #11
  %136 = bitcast %"class.std::__1::vector.385"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::vector.385"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -2, i32 3, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -2, i32 3, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %110, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast i32** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %148 = bitcast i32** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = bitcast %"class.std::__1::vector.385"* %134 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #11
  %150 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %109, i64 -2
  %151 = icmp eq %"struct.x11::Xkb::KeySymMap"* %130, %70
  br i1 %151, label %152, label %108

152:                                              ; preds = %108, %102
  %153 = phi %"struct.x11::Xkb::KeySymMap"* [ %103, %102 ], [ %150, %108 ]
  %154 = ptrtoint %"struct.x11::Xkb::KeySymMap"* %153 to i64
  %155 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %69, align 8
  %156 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %6, align 8
  store i64 %154, i64* %28, align 8
  store i64 %68, i64* %7, align 8
  store i64 %67, i64* %4, align 8
  %157 = icmp eq %"struct.x11::Xkb::KeySymMap"* %156, %155
  br i1 %157, label %171, label %158

158:                                              ; preds = %152, %169
  %159 = phi %"struct.x11::Xkb::KeySymMap"* [ %160, %169 ], [ %156, %152 ]
  %160 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %159, i64 -1
  %161 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %159, i64 -1, i32 3, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  %165 = ptrtoint i32* %162 to i64
  %166 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %159, i64 -1, i32 3, i32 0, i32 1
  %167 = bitcast i32** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i32* %162 to i8*
  tail call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %164, %158
  %170 = icmp eq %"struct.x11::Xkb::KeySymMap"* %160, %155
  br i1 %170, label %171, label %158

171:                                              ; preds = %169, %107, %152
  %172 = phi %"struct.x11::Xkb::KeySymMap"* [ %70, %107 ], [ %155, %152 ], [ %155, %169 ]
  %173 = icmp eq %"struct.x11::Xkb::KeySymMap"* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %172, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %174, %171, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x116KeySymENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.385"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.385"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.385"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.271"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.271"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.271"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #12
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #12
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb6ActionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.407"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.407", %"class.std::__1::vector.407"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"union.x11::Xkb::Action"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.407", %"class.std::__1::vector.407"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"union.x11::Xkb::Action"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"union.x11::Xkb::Action"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"union.x11::Xkb::Action"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.407"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.407"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"union.x11::Xkb::Action"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"union.x11::Xkb::Action"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %57, i64 %33
  %59 = bitcast %"union.x11::Xkb::Action"* %58 to i8*
  %60 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %57, i64 %56
  %61 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"union.x11::Xkb::Action"* %60 to i64
  %64 = ptrtoint %"union.x11::Xkb::Action"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.407", %"class.std::__1::vector.407"* %0, i64 0, i32 0, i32 0
  %66 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"union.x11::Xkb::Action"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 5
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"union.x11::Xkb::Action", %"union.x11::Xkb::Action"* %58, i64 %71
  %73 = ptrtoint %"union.x11::Xkb::Action"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"union.x11::Xkb::Action"* %72 to i8*
  %77 = bitcast %"union.x11::Xkb::Action"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"union.x11::Xkb::Action"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"union.x11::Xkb::Action"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"union.x11::Xkb::Action"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb11SetBehaviorENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.420"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::SetBehavior"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::SetBehavior"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::SetBehavior"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %13, i64 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %13, i64 %18, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = urem i64 %22, 3
  %24 = add i64 %22, 3
  %25 = sub i64 %24, %23
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %88

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.420"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = sdiv exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 6148914691236517205
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.420"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = sdiv exact i64 %39, 3
  %41 = icmp ult i64 %40, 3074457345618258602
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = shl nsw i64 %40, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 6148914691236517205, %38 ]
  %49 = mul i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.x11::Xkb::SetBehavior"*
  br label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %54 = phi %"struct.x11::Xkb::SetBehavior"* [ %51, %47 ], [ null, %42 ]
  %55 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %54, i64 %33
  %56 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %55 to i64
  %57 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %54, i64 %53
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %55, i64 %1
  %59 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %55, i64 0, i32 0
  %60 = add i64 %1, -1
  %61 = getelementptr %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %55, i64 %60, i32 0
  %62 = sub i64 0, %56
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = ptrtoint i8* %63 to i64
  %65 = urem i64 %64, 3
  %66 = add i64 %64, 3
  %67 = sub i64 %66, %65
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 %67, i1 false) #11
  %68 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %57 to i64
  %69 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %58 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %70, align 8
  %72 = load i64, i64* %7, align 8
  %73 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -3
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %55, i64 %75
  %77 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %76, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %71, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %81, i64 %74, i1 false) #11
  %82 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %70, align 8
  br label %83

83:                                               ; preds = %52, %79
  %84 = phi %"struct.x11::Xkb::SetBehavior"* [ %71, %52 ], [ %82, %79 ]
  store i64 %77, i64* %30, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %85 = icmp eq %"struct.x11::Xkb::SetBehavior"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %84, i64 0, i32 0
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %86, %83, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x117ModMaskENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.432"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.432", %"class.std::__1::vector.432"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.432", %"class.std::__1::vector.432"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.432"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.432"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.432", %"class.std::__1::vector.432"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb11SetExplicitENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.444"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.444", %"class.std::__1::vector.444"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::SetExplicit"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.444", %"class.std::__1::vector.444"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::SetExplicit"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::SetExplicit"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %13, i64 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %13, i64 %18, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = add i64 %22, 8
  %24 = and i64 %23, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %24, i1 false) #11
  %25 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %16 to i64
  br label %26

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %25, %15 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %83

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.444"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = ashr exact i64 %31, 3
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.444"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

49:                                               ; preds = %37, %46
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #12
  %53 = bitcast i8* %52 to %"struct.x11::Xkb::SetExplicit"*
  br label %54

54:                                               ; preds = %41, %49
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.x11::Xkb::SetExplicit"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %56, i64 %32
  %58 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %56, i64 %55
  %60 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %57, i64 %1
  %61 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %61, i1 false)
  %62 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %59 to i64
  %63 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %60 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.444", %"class.std::__1::vector.444"* %0, i64 0, i32 0, i32 0
  %65 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %64, align 8
  %66 = load i64, i64* %7, align 8
  %67 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 3
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %57, i64 %70
  %72 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %71, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %65, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %68, i1 false) #11
  %77 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %64, align 8
  br label %78

78:                                               ; preds = %54, %74
  %79 = phi %"struct.x11::Xkb::SetExplicit"* [ %65, %54 ], [ %77, %74 ]
  store i64 %72, i64* %29, align 8
  store i64 %63, i64* %7, align 8
  store i64 %62, i64* %4, align 8
  %80 = icmp eq %"struct.x11::Xkb::SetExplicit"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %79, i64 0, i32 0
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %81, %78, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb9KeyModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.456"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.456", %"class.std::__1::vector.456"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeyModMap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.456", %"class.std::__1::vector.456"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeyModMap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeyModMap"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %13, i64 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %13, i64 %18, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = add i64 %22, 8
  %24 = and i64 %23, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %24, i1 false) #11
  %25 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %16 to i64
  br label %26

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %25, %15 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %83

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.456"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = ashr exact i64 %31, 3
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.456"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

49:                                               ; preds = %37, %46
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #12
  %53 = bitcast i8* %52 to %"struct.x11::Xkb::KeyModMap"*
  br label %54

54:                                               ; preds = %41, %49
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.x11::Xkb::KeyModMap"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %56, i64 %32
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %56, i64 %55
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %57, i64 %1
  %61 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %61, i1 false)
  %62 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %59 to i64
  %63 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %60 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.456", %"class.std::__1::vector.456"* %0, i64 0, i32 0, i32 0
  %65 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %64, align 8
  %66 = load i64, i64* %7, align 8
  %67 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 3
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %57, i64 %70
  %72 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %71, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %65, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %68, i1 false) #11
  %77 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %64, align 8
  br label %78

78:                                               ; preds = %54, %74
  %79 = phi %"struct.x11::Xkb::KeyModMap"* [ %65, %54 ], [ %77, %74 ]
  store i64 %72, i64* %29, align 8
  store i64 %63, i64* %7, align 8
  store i64 %62, i64* %4, align 8
  %80 = icmp eq %"struct.x11::Xkb::KeyModMap"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %79, i64 0, i32 0
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %81, %78, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb10KeyVModMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.468"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeyVModMap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeyVModMap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeyVModMap"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %13, i64 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %13, i64 %18, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = add i64 %22, 8
  %24 = and i64 %23, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %24, i1 false) #11
  %25 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %16 to i64
  br label %26

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %25, %15 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %83

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.468"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = ashr exact i64 %31, 3
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.468"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

49:                                               ; preds = %37, %46
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #12
  %53 = bitcast i8* %52 to %"struct.x11::Xkb::KeyVModMap"*
  br label %54

54:                                               ; preds = %41, %49
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.x11::Xkb::KeyVModMap"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %56, i64 %32
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %56, i64 %55
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %57, i64 %1
  %61 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %61, i1 false)
  %62 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %59 to i64
  %63 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %60 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %0, i64 0, i32 0, i32 0
  %65 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %64, align 8
  %66 = load i64, i64* %7, align 8
  %67 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 3
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %57, i64 %70
  %72 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %71, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %65, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %68, i1 false) #11
  %77 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %64, align 8
  br label %78

78:                                               ; preds = %54, %74
  %79 = phi %"struct.x11::Xkb::KeyVModMap"* [ %65, %54 ], [ %77, %74 ]
  store i64 %72, i64* %29, align 8
  store i64 %63, i64* %7, align 8
  store i64 %62, i64* %4, align 8
  %80 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %79, i64 0, i32 0
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %81, %78, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb12SymInterpretENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.522"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.522", %"class.std::__1::vector.522"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::SymInterpret"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.522", %"class.std::__1::vector.522"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::SymInterpret"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::SymInterpret"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.522"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.522"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"struct.x11::Xkb::SymInterpret"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Xkb::SymInterpret"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %57, i64 %33
  %59 = bitcast %"struct.x11::Xkb::SymInterpret"* %58 to i8*
  %60 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %60 to i64
  %64 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.522", %"class.std::__1::vector.522"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 5
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::SymInterpret", %"struct.x11::Xkb::SymInterpret"* %58, i64 %71
  %73 = ptrtoint %"struct.x11::Xkb::SymInterpret"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.x11::Xkb::SymInterpret"* %72 to i8*
  %77 = bitcast %"struct.x11::Xkb::SymInterpret"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load %"struct.x11::Xkb::SymInterpret"*, %"struct.x11::Xkb::SymInterpret"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.x11::Xkb::SymInterpret"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.x11::Xkb::SymInterpret"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.x11::Xkb::SymInterpret"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb12IndicatorMapENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.547"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::IndicatorMap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::IndicatorMap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::IndicatorMap"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.547"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.547"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"struct.x11::Xkb::IndicatorMap"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Xkb::IndicatorMap"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %57, i64 %33
  %59 = bitcast %"struct.x11::Xkb::IndicatorMap"* %58 to i8*
  %60 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %60 to i64
  %64 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 5
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %58, i64 %71
  %73 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.x11::Xkb::IndicatorMap"* %72 to i8*
  %77 = bitcast %"struct.x11::Xkb::IndicatorMap"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.x11::Xkb::IndicatorMap"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.x11::Xkb::IndicatorMap"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x114AtomENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.580"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.580"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.580"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb7KeyNameENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.592"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeyName"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeyName"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeyName"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %13, i64 0, i32 0, i32 0, i64 0
  %18 = add i64 %1, -1
  %19 = sub i64 0, %8
  %20 = getelementptr %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %13, i64 %18, i32 0, i32 0, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = add i64 %21, 4
  %23 = and i64 %22, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %23, i1 false) #11
  %24 = ptrtoint %"struct.x11::Xkb::KeyName"* %16 to i64
  br label %25

25:                                               ; preds = %12, %15
  %26 = phi i64 [ %24, %15 ], [ %8, %12 ]
  store i64 %26, i64* %7, align 8
  br label %82

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.592"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %8, %29
  %31 = ashr exact i64 %30, 2
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 4611686018427387903
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.592"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #13
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %5, %29
  %38 = ashr exact i64 %37, 2
  %39 = icmp ult i64 %38, 2305843009213693951
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 1
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %36, %45
  %49 = phi i64 [ %43, %45 ], [ 4611686018427387903, %36 ]
  %50 = shl i64 %49, 2
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.x11::Xkb::KeyName"*
  br label %53

53:                                               ; preds = %40, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"struct.x11::Xkb::KeyName"* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %55, i64 %31
  %57 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %56, i64 0, i32 0, i32 0, i64 0
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %56, i64 %1
  %60 = shl nsw i64 %1, 2
  call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %60, i1 false)
  %61 = ptrtoint %"struct.x11::Xkb::KeyName"* %58 to i64
  %62 = ptrtoint %"struct.x11::Xkb::KeyName"* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %0, i64 0, i32 0, i32 0
  %64 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %63, align 8
  %65 = load i64, i64* %7, align 8
  %66 = ptrtoint %"struct.x11::Xkb::KeyName"* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 2
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %56, i64 %69
  %71 = ptrtoint %"struct.x11::Xkb::KeyName"* %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %70, i64 0, i32 0, i32 0, i64 0
  %75 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %64, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %75, i64 %67, i1 false) #11
  %76 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %63, align 8
  br label %77

77:                                               ; preds = %53, %73
  %78 = phi %"struct.x11::Xkb::KeyName"* [ %64, %53 ], [ %76, %73 ]
  store i64 %71, i64* %28, align 8
  store i64 %62, i64* %7, align 8
  store i64 %61, i64* %4, align 8
  %79 = icmp eq %"struct.x11::Xkb::KeyName"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %78, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %77, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb8KeyAliasENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.605"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.605", %"class.std::__1::vector.605"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::KeyAlias"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.605", %"class.std::__1::vector.605"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::KeyAlias"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::KeyAlias"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %13, i64 0, i32 0, i32 0, i64 0
  %18 = add i64 %1, -1
  %19 = sub i64 0, %8
  %20 = getelementptr %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %13, i64 %18, i32 0, i32 0, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = add i64 %21, 8
  %23 = and i64 %22, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %23, i1 false) #11
  %24 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %16 to i64
  br label %25

25:                                               ; preds = %12, %15
  %26 = phi i64 [ %24, %15 ], [ %8, %12 ]
  store i64 %26, i64* %7, align 8
  br label %82

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.605"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %8, %29
  %31 = ashr exact i64 %30, 3
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.605"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #13
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %5, %29
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %36, %45
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %36 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.x11::Xkb::KeyAlias"*
  br label %53

53:                                               ; preds = %40, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"struct.x11::Xkb::KeyAlias"* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %55, i64 %31
  %57 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %56, i64 0, i32 0, i32 0, i64 0
  %58 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %56, i64 %1
  %60 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %60, i1 false)
  %61 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %58 to i64
  %62 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.605", %"class.std::__1::vector.605"* %0, i64 0, i32 0, i32 0
  %64 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %63, align 8
  %65 = load i64, i64* %7, align 8
  %66 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 3
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %56, i64 %69
  %71 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %70, i64 0, i32 0, i32 0, i64 0
  %75 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %64, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %75, i64 %67, i1 false) #11
  %76 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %63, align 8
  br label %77

77:                                               ; preds = %53, %73
  %78 = phi %"struct.x11::Xkb::KeyAlias"* [ %64, %53 ], [ %76, %73 ]
  store i64 %71, i64* %28, align 8
  store i64 %62, i64* %7, align 8
  store i64 %61, i64* %4, align 8
  %79 = icmp eq %"struct.x11::Xkb::KeyAlias"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %78, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %77, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb7ListingENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.634"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.634", %"class.std::__1::vector.634"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::Listing"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.634", %"class.std::__1::vector.634"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::Listing"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::Listing"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %13, i64 %18, i32 0
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"struct.x11::Xkb::Listing"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %219

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.634"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.634"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"struct.x11::Xkb::Listing"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.x11::Xkb::Listing"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %57, i64 %33
  %59 = ptrtoint %"struct.x11::Xkb::Listing"* %58 to i64
  %60 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  %63 = add i64 %62, -32
  %64 = lshr exact i64 %63, 5
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"struct.x11::Xkb::Listing"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #11
  %73 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %69, i64 1
  %74 = ptrtoint %"struct.x11::Xkb::Listing"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !15

77:                                               ; preds = %68
  %78 = ptrtoint %"struct.x11::Xkb::Listing"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"struct.x11::Xkb::Listing"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 224
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.x11::Xkb::Listing"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 32, i1 false) #11
  %87 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 1
  %88 = bitcast %"struct.x11::Xkb::Listing"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 32, i1 false) #11
  %89 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 2
  %90 = bitcast %"struct.x11::Xkb::Listing"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 32, i1 false) #11
  %91 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 3
  %92 = bitcast %"struct.x11::Xkb::Listing"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #11
  %93 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 4
  %94 = bitcast %"struct.x11::Xkb::Listing"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 32, i1 false) #11
  %95 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 5
  %96 = bitcast %"struct.x11::Xkb::Listing"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #11
  %97 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 6
  %98 = bitcast %"struct.x11::Xkb::Listing"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 32, i1 false) #11
  %99 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 7
  %100 = bitcast %"struct.x11::Xkb::Listing"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #11
  %101 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %84, i64 8
  %102 = ptrtoint %"struct.x11::Xkb::Listing"* %101 to i64
  %103 = icmp eq %"struct.x11::Xkb::Listing"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"struct.x11::Xkb::Listing"* %60 to i64
  %106 = ptrtoint %"struct.x11::Xkb::Listing"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.634", %"class.std::__1::vector.634"* %0, i64 0, i32 0, i32 0
  %108 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %107, align 8
  %109 = ptrtoint %"struct.x11::Xkb::Listing"* %108 to i64
  %110 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %6, align 8
  %111 = icmp eq %"struct.x11::Xkb::Listing"* %110, %108
  br i1 %111, label %197, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %110, i64 -1, i32 0
  %114 = ptrtoint i16* %113 to i64
  %115 = sub i64 %114, %109
  %116 = and i64 %115, 32
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %141

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %110, i64 -1
  %120 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 -1, i32 0
  %121 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %119, i64 0, i32 0
  %122 = load i16, i16* %121, align 8
  store i16 %122, i16* %120, align 8
  %123 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 -1, i32 1
  %124 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %110, i64 -1, i32 1
  %125 = bitcast %"class.std::__1::vector.636"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #11
  %126 = bitcast %"class.std::__1::vector.636"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector.636"* %123 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %110, i64 -1, i32 1, i32 0, i32 1
  %130 = bitcast i8** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 -1, i32 1, i32 0, i32 1
  %133 = bitcast i8** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %110, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast i8** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = bitcast %"class.std::__1::vector.636"* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #11
  %140 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %58, i64 -1
  br label %141

141:                                              ; preds = %118, %112
  %142 = phi %"struct.x11::Xkb::Listing"* [ undef, %112 ], [ %140, %118 ]
  %143 = phi %"struct.x11::Xkb::Listing"* [ %58, %112 ], [ %140, %118 ]
  %144 = phi %"struct.x11::Xkb::Listing"* [ %110, %112 ], [ %119, %118 ]
  %145 = icmp ult i64 %115, 32
  br i1 %145, label %192, label %146

146:                                              ; preds = %141, %146
  %147 = phi %"struct.x11::Xkb::Listing"* [ %190, %146 ], [ %143, %141 ]
  %148 = phi %"struct.x11::Xkb::Listing"* [ %169, %146 ], [ %144, %141 ]
  %149 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -1, i32 0
  %150 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -1, i32 0
  %151 = load i16, i16* %150, align 8
  store i16 %151, i16* %149, align 8
  %152 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -1, i32 1
  %153 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -1, i32 1
  %154 = bitcast %"class.std::__1::vector.636"* %152 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #11
  %155 = bitcast %"class.std::__1::vector.636"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::vector.636"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -1, i32 1, i32 0, i32 1
  %159 = bitcast i8** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -1, i32 1, i32 0, i32 1
  %162 = bitcast i8** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast i8** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast i8** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast %"class.std::__1::vector.636"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #11
  %169 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -2
  %170 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -2, i32 0
  %171 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %169, i64 0, i32 0
  %172 = load i16, i16* %171, align 8
  store i16 %172, i16* %170, align 8
  %173 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -2, i32 1
  %174 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -2, i32 1
  %175 = bitcast %"class.std::__1::vector.636"* %173 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 24, i1 false) #11
  %176 = bitcast %"class.std::__1::vector.636"* %174 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.std::__1::vector.636"* %173 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -2, i32 1, i32 0, i32 1
  %180 = bitcast i8** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -2, i32 1, i32 0, i32 1
  %183 = bitcast i8** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %148, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %185 = bitcast i8** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -2, i32 1, i32 0, i32 2, i32 0, i32 0
  %188 = bitcast i8** %187 to i64*
  store i64 %186, i64* %188, align 8
  %189 = bitcast %"class.std::__1::vector.636"* %174 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #11
  %190 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %147, i64 -2
  %191 = icmp eq %"struct.x11::Xkb::Listing"* %169, %108
  br i1 %191, label %192, label %146

192:                                              ; preds = %146, %141
  %193 = phi %"struct.x11::Xkb::Listing"* [ %142, %141 ], [ %190, %146 ]
  %194 = ptrtoint %"struct.x11::Xkb::Listing"* %193 to i64
  %195 = load i64, i64* %30, align 8
  %196 = load %"struct.x11::Xkb::Listing"*, %"struct.x11::Xkb::Listing"** %6, align 8
  br label %197

197:                                              ; preds = %104, %192
  %198 = phi %"struct.x11::Xkb::Listing"* [ %196, %192 ], [ %108, %104 ]
  %199 = phi i64 [ %194, %192 ], [ %59, %104 ]
  %200 = phi i64 [ %195, %192 ], [ %109, %104 ]
  store i64 %199, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %201 = inttoptr i64 %200 to %"struct.x11::Xkb::Listing"*
  %202 = icmp eq %"struct.x11::Xkb::Listing"* %198, %201
  br i1 %202, label %215, label %203

203:                                              ; preds = %197, %213
  %204 = phi %"struct.x11::Xkb::Listing"* [ %205, %213 ], [ %198, %197 ]
  %205 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %204, i64 -1
  %206 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %204, i64 -1, i32 1, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %203
  %210 = ptrtoint i8* %207 to i64
  %211 = getelementptr inbounds %"struct.x11::Xkb::Listing", %"struct.x11::Xkb::Listing"* %204, i64 -1, i32 1, i32 0, i32 1
  %212 = bitcast i8** %211 to i64*
  store i64 %210, i64* %212, align 8
  tail call void @_ZdlPv(i8* nonnull %207) #12
  br label %213

213:                                              ; preds = %209, %203
  %214 = icmp eq %"struct.x11::Xkb::Listing"* %205, %201
  br i1 %214, label %215, label %203

215:                                              ; preds = %213, %197
  %216 = icmp eq i64 %200, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = inttoptr i64 %200 to i8*
  tail call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %217, %215, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb7String8ENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.636"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.636"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.636"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #12
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.636", %"class.std::__1::vector.636"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #12
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb17GetKbdByNameReply8KeyNamesD2Ev(%"struct.x11::Xkb::GetKbdByNameReply::KeyNames"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i32* %7 to i64
  %11 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.x11::Xkb::KeyAlias"*, %"struct.x11::Xkb::KeyAlias"** %20, align 8
  %22 = icmp eq %"struct.x11::Xkb::KeyAlias"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.x11::Xkb::KeyAlias"* %21 to i64
  %25 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.x11::Xkb::KeyAlias"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyAlias", %"struct.x11::Xkb::KeyAlias"* %21, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.x11::Xkb::KeyName"*, %"struct.x11::Xkb::KeyName"** %34, align 8
  %36 = icmp eq %"struct.x11::Xkb::KeyName"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.x11::Xkb::KeyName"* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.x11::Xkb::KeyName"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::KeyName", %"struct.x11::Xkb::KeyName"* %35, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %37, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %47
  store i8 0, i8* %44, align 8
  br label %57

57:                                               ; preds = %43, %56
  %58 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint i32* %63 to i64
  %67 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i32* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %65, %61
  store i8 0, i8* %58, align 8
  br label %71

71:                                               ; preds = %57, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = ptrtoint i32* %77 to i64
  %81 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = bitcast i32** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast i32* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %79, %75
  store i8 0, i8* %72, align 8
  br label %85

85:                                               ; preds = %71, %84
  %86 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint i32* %91 to i64
  %95 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %96 = bitcast i32** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast i32* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 8
  br label %99

99:                                               ; preds = %85, %98
  %100 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i8* %105 to i64
  %109 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %110 = bitcast i8** %109 to i64*
  store i64 %108, i64* %110, align 8
  tail call void @_ZdlPv(i8* nonnull %105) #12
  br label %111

111:                                              ; preds = %107, %103
  store i8 0, i8* %100, align 8
  br label %112

112:                                              ; preds = %99, %111
  %113 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint i32* %118 to i64
  %122 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::KeyNames", %"struct.x11::Xkb::GetKbdByNameReply::KeyNames"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast i32* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %120, %116
  store i8 0, i8* %113, align 8
  br label %126

126:                                              ; preds = %112, %125
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb17GetKbdByNameReply5TypesD2Ev(%"struct.x11::Xkb::GetKbdByNameReply::Types"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %6, align 8
  %8 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %7 to i64
  %11 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.x11::Xkb::KeyVModMap"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %7, i64 0, i32 0
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %20, align 8
  %22 = icmp eq %"struct.x11::Xkb::KeyModMap"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %21 to i64
  %25 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.x11::Xkb::KeyModMap"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %34, align 8
  %36 = icmp eq %"struct.x11::Xkb::SetExplicit"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.x11::Xkb::SetExplicit"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %35, i64 0, i32 0
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %37, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %47
  store i8 0, i8* %44, align 8
  br label %57

57:                                               ; preds = %43, %56
  %58 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %62, align 8
  %64 = icmp eq %"struct.x11::Xkb::SetBehavior"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %63 to i64
  %67 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast %"struct.x11::Xkb::SetBehavior"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %63, i64 0, i32 0
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %65, %61
  store i8 0, i8* %58, align 8
  br label %71

71:                                               ; preds = %57, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %76, align 8
  %78 = icmp eq %"union.x11::Xkb::Action"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = ptrtoint %"union.x11::Xkb::Action"* %77 to i64
  %81 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = bitcast %"union.x11::Xkb::Action"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast %"union.x11::Xkb::Action"* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %79, %75
  store i8 0, i8* %72, align 8
  br label %85

85:                                               ; preds = %71, %84
  %86 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = ptrtoint i8* %91 to i64
  %95 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %96 = bitcast i8** %95 to i64*
  store i64 %94, i64* %96, align 8
  tail call void @_ZdlPv(i8* nonnull %91) #12
  br label %97

97:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 8
  br label %98

98:                                               ; preds = %85, %97
  %99 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %103, align 8
  %105 = icmp eq %"struct.x11::Xkb::KeySymMap"* %104, null
  br i1 %105, label %128, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %108 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %107, align 8
  %109 = icmp eq %"struct.x11::Xkb::KeySymMap"* %108, %104
  br i1 %109, label %125, label %110

110:                                              ; preds = %106, %121
  %111 = phi %"struct.x11::Xkb::KeySymMap"* [ %112, %121 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1
  %113 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1, i32 3, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = ptrtoint i32* %114 to i64
  %118 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1, i32 3, i32 0, i32 1
  %119 = bitcast i32** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast i32* %114 to i8*
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %116, %110
  %122 = icmp eq %"struct.x11::Xkb::KeySymMap"* %112, %104
  br i1 %122, label %123, label %110

123:                                              ; preds = %121
  %124 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %103, align 8
  br label %125

125:                                              ; preds = %123, %106
  %126 = phi %"struct.x11::Xkb::KeySymMap"* [ %124, %123 ], [ %104, %106 ]
  store %"struct.x11::Xkb::KeySymMap"* %104, %"struct.x11::Xkb::KeySymMap"** %107, align 8
  %127 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %126, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %125, %102
  store i8 0, i8* %99, align 8
  br label %129

129:                                              ; preds = %98, %128
  %130 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %171, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.std::__1::vector.356", %"class.std::__1::vector.356"* %134, i64 0, i32 0, i32 0
  %136 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %135, align 8
  %137 = icmp eq %"struct.x11::Xkb::KeyType"* %136, null
  br i1 %137, label %170, label %138

138:                                              ; preds = %133
  %139 = bitcast %"struct.x11::Xkb::KeyType"* %136 to i8*
  %140 = getelementptr inbounds %"struct.x11::Xkb::GetKbdByNameReply::Types", %"struct.x11::Xkb::GetKbdByNameReply::Types"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %141 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %140, align 8
  %142 = icmp eq %"struct.x11::Xkb::KeyType"* %141, %136
  br i1 %142, label %168, label %143

143:                                              ; preds = %138, %163
  %144 = phi %"struct.x11::Xkb::KeyType"* [ %145, %163 ], [ %141, %138 ]
  %145 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1
  %146 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 6, i32 0, i32 0
  %147 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %146, align 8
  %148 = icmp eq %"struct.x11::Xkb::ModDef"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %143
  %150 = ptrtoint %"struct.x11::Xkb::ModDef"* %147 to i64
  %151 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 6, i32 0, i32 1
  %152 = bitcast %"struct.x11::Xkb::ModDef"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"struct.x11::Xkb::ModDef"* %147 to i8*
  tail call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %149, %143
  %155 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 5, i32 0, i32 0
  %156 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %155, align 8
  %157 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %156 to i64
  %160 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 5, i32 0, i32 1
  %161 = bitcast %"struct.x11::Xkb::KTMapEntry"** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %156, i64 0, i32 0
  tail call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %158, %154
  %164 = icmp eq %"struct.x11::Xkb::KeyType"* %145, %136
  br i1 %164, label %165, label %143

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector.356"* %134 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %138
  %169 = phi i8* [ %167, %165 ], [ %139, %138 ]
  store %"struct.x11::Xkb::KeyType"* %136, %"struct.x11::Xkb::KeyType"** %140, align 8
  tail call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %168, %133
  store i8 0, i8* %130, align 8
  br label %171

171:                                              ; preds = %129, %170
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x113Xkb13DeviceLedInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.692"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xkb::DeviceLedInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 72
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xkb::DeviceLedInfo"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 72
  %25 = add i64 %23, 72
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #11
  %27 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %154

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.692"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 72
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 256204778801521550
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.692"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 72
  %42 = icmp ult i64 %41, 128102389400760775
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 256204778801521550, %39 ]
  %50 = mul i64 %49, 72
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.x11::Xkb::DeviceLedInfo"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %55, i64 %34
  %57 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %56 to i64
  %58 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 72, i1 false) #11
  %64 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %61, i64 1
  %65 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %64 to i64
  %66 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %58 to i64
  %69 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.692", %"class.std::__1::vector.692"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %70, align 8
  %72 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %6, align 8
  %73 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %71 to i64
  br label %122

76:                                               ; preds = %67, %76
  %77 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1
  %81 = bitcast %"struct.x11::Xkb::DeviceLedInfo"* %79 to i8*
  %82 = bitcast %"struct.x11::Xkb::DeviceLedInfo"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #11
  %83 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 6
  %84 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 6
  %85 = bitcast %"class.std::__1::vector.580"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #11
  %86 = bitcast %"class.std::__1::vector.580"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.580"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 6, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 6, i32 0, i32 1
  %93 = bitcast i32** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast i32** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 6, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector.580"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #11
  %100 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 7
  %101 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 7
  %102 = bitcast %"class.std::__1::vector.547"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #11
  %103 = bitcast %"class.std::__1::vector.547"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector.547"* %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 7, i32 0, i32 1
  %107 = bitcast %"struct.x11::Xkb::IndicatorMap"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 7, i32 0, i32 1
  %110 = bitcast %"struct.x11::Xkb::IndicatorMap"** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %78, i64 -1, i32 7, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast %"struct.x11::Xkb::IndicatorMap"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %77, i64 -1, i32 7, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"struct.x11::Xkb::IndicatorMap"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.std::__1::vector.547"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11
  %117 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %80, %71
  br i1 %117, label %118, label %76

118:                                              ; preds = %76
  %119 = ptrtoint %"struct.x11::Xkb::DeviceLedInfo"* %79 to i64
  %120 = load i64, i64* %31, align 8
  %121 = load %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"** %6, align 8
  br label %122

122:                                              ; preds = %74, %118
  %123 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %71, %74 ], [ %121, %118 ]
  %124 = phi i64 [ %57, %74 ], [ %119, %118 ]
  %125 = phi i64 [ %75, %74 ], [ %120, %118 ]
  store i64 %124, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %126 = inttoptr i64 %125 to %"struct.x11::Xkb::DeviceLedInfo"*
  %127 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %123, %126
  br i1 %127, label %150, label %128

128:                                              ; preds = %122, %148
  %129 = phi %"struct.x11::Xkb::DeviceLedInfo"* [ %130, %148 ], [ %123, %122 ]
  %130 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %129, i64 -1
  %131 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %129, i64 -1, i32 7, i32 0, i32 0
  %132 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %131, align 8
  %133 = icmp eq %"struct.x11::Xkb::IndicatorMap"* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %128
  %135 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %132 to i64
  %136 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %129, i64 -1, i32 7, i32 0, i32 1
  %137 = bitcast %"struct.x11::Xkb::IndicatorMap"** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = bitcast %"struct.x11::Xkb::IndicatorMap"* %132 to i8*
  tail call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %134, %128
  %140 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %129, i64 -1, i32 6, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = ptrtoint i32* %141 to i64
  %145 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %129, i64 -1, i32 6, i32 0, i32 1
  %146 = bitcast i32** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast i32* %141 to i8*
  tail call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %143, %139
  %149 = icmp eq %"struct.x11::Xkb::DeviceLedInfo"* %130, %126
  br i1 %149, label %150, label %128

150:                                              ; preds = %148, %122
  %151 = icmp eq i64 %125, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %152, %150, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN3x113Xkb13DeviceLedInfoEE9constructIS3_JRS3_EEEvPT_DpOT0_(%"class.std::__1::allocator.697"*, %"struct.x11::Xkb::DeviceLedInfo"*, %"struct.x11::Xkb::DeviceLedInfo"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.x11::Xkb::DeviceLedInfo"* %1 to i8*
  %5 = bitcast %"struct.x11::Xkb::DeviceLedInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 6
  %7 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %2, i64 0, i32 6
  %8 = bitcast %"class.std::__1::vector.580"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %2, i64 0, i32 6, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.580"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %3
  %18 = icmp ugt i64 %15, 4611686018427387903
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.580"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #13
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #12
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 6, i32 0, i32 1
  %25 = bitcast i32** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.580"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds i32, i32* %23, i64 %15
  %28 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %27, i32** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %7, i64 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast i32** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint i32* %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 2
  %39 = bitcast i32* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %39, i64 %35, i1 false) #11
  %40 = getelementptr inbounds i32, i32* %23, i64 %38
  %41 = ptrtoint i32* %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %42, %3
  %45 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 7
  %46 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %2, i64 0, i32 7
  %47 = bitcast %"class.std::__1::vector.547"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #11
  %48 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %2, i64 0, i32 7, i32 0, i32 1
  %49 = bitcast %"struct.x11::Xkb::IndicatorMap"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.547"* %46 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 5
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %44
  %57 = icmp ugt i64 %54, 576460752303423487
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.547"* %45 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #13
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #12
  %62 = bitcast i8* %61 to %"struct.x11::Xkb::IndicatorMap"*
  %63 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 7, i32 0, i32 1
  %64 = bitcast %"struct.x11::Xkb::IndicatorMap"** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector.547"* %45 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %62, i64 %54
  %67 = getelementptr inbounds %"struct.x11::Xkb::DeviceLedInfo", %"struct.x11::Xkb::DeviceLedInfo"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"struct.x11::Xkb::IndicatorMap"* %66, %"struct.x11::Xkb::IndicatorMap"** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.547", %"class.std::__1::vector.547"* %46, i64 0, i32 0, i32 0
  %69 = load %"struct.x11::Xkb::IndicatorMap"*, %"struct.x11::Xkb::IndicatorMap"** %68, align 8
  %70 = load i64, i64* %49, align 8
  %71 = bitcast %"struct.x11::Xkb::IndicatorMap"** %63 to i64*
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %69 to i64
  %74 = sub i64 %70, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %60
  %77 = lshr exact i64 %74, 5
  %78 = bitcast %"struct.x11::Xkb::IndicatorMap"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %78, i64 %74, i1 false) #11
  %79 = getelementptr inbounds %"struct.x11::Xkb::IndicatorMap", %"struct.x11::Xkb::IndicatorMap"* %62, i64 %77
  %80 = ptrtoint %"struct.x11::Xkb::IndicatorMap"* %79 to i64
  br label %81

81:                                               ; preds = %76, %60
  %82 = phi i64 [ %80, %76 ], [ %72, %60 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %44, %81
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i64 0, i64 65}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10, !6}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10, !6}
!14 = distinct !{!14, !8}
!15 = distinct !{!15, !8}
