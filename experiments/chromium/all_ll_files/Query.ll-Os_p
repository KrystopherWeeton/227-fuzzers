; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/Query.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/Query.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.es2::Query" = type <{ %"class.gl::NamedObject", %"struct.sw::Query"*, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"struct.sw::Query" = type { i8, %"class.sw::AtomicInt", i32, %"class.sw::AtomicInt" }
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.es2::Device" = type { %"class.sw::Renderer", %"class.sw::Context"*, %"struct.es2::Viewport", %"struct.sw::RectT", i8, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, i8, i32, i8, i32, [264 x [4 x float]], [259 x [4 x float]], [8 x %"class.egl::Image"*], %"class.egl::Image"*, %"class.egl::Image"*, [8 x i8] }
%"class.sw::Renderer" = type { %"class.sw::VertexProcessor.base", [15 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"class.sw::Context"*, %"class.sw::Clipper"*, %"class.sw::Blitter"*, %"struct.sw::Viewport", %"struct.sw::RectT", i32, [16 x %"struct.sw::Triangle"*], [16 x %"struct.sw::Primitive"*], [6 x %"struct.sw::Plane"], [6 x %"struct.sw::Plane"], i8, %"class.sw::AtomicInt", %"class.sw::AtomicInt", [16 x %"class.sw::Thread"*], [16 x %"class.sw::Event"*], [16 x %"class.sw::Event"*], %"class.sw::Event"*, [16 x %"struct.sw::Renderer::PrimitiveProgress"], [16 x %"struct.sw::Renderer::PixelProgress"], [16 x %"struct.sw::Renderer::Task"], [16 x %"struct.sw::DrawCall"*], [16 x %"struct.sw::DrawCall"*], %"class.sw::AtomicInt", %"class.sw::AtomicInt", [32 x %"struct.sw::Renderer::Task"], %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::MutexLock", [16 x %"struct.sw::VertexTask"*], %"class.sw::SwiftConfig"*, %"class.std::__1::list", %"class.sw::Resource"*, %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", %"struct.sw::PixelProcessor::State", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr" }
%"class.sw::VertexProcessor.base" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8 }>
%"struct.sw::float4" = type { float, float, float, float }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%"struct.sw::VertexProcessor::PointSprite" = type { %"struct.sw::float4", float, float, float, float, float, [12 x i8] }
%"struct.sw::VertexProcessor::FixedFunction" = type { [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [8 x [4 x %"struct.sw::float4"]], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x float], %"struct.sw::float4", %"struct.sw::float4", float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::VertexProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"struct.sw::VertexProcessor::TransformFeedbackInfo" = type <{ %"class.sw::Resource"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.sw::LRUCache" = type opaque
%"struct.sw::Matrix" = type { [4 x [4 x float]] }
%"class.sw::PixelProcessor" = type { i32 (...)**, [8 x [4 x [4 x i16]]], [8 x i8], [264 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [24 x %"struct.sw::PixelProcessor::UniformBufferInfo"], %"class.sw::Context"*, %"class.sw::LRUCache.17"* }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.sw::PixelProcessor::Fog" = type { %"struct.sw::float4", %"struct.sw::float4", [3 x [4 x i16]], [8 x i8], [3 x %"struct.sw::float4"], %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::PixelProcessor::Factor" = type { [4 x [4 x i16]], [4 x i16], [4 x [4 x i16]], [8 x i8], [4 x %"struct.sw::float4"], [4 x [4 x i16]], [4 x %"struct.sw::float4"] }
%"struct.sw::PixelProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"class.sw::LRUCache.17" = type opaque
%"class.sw::SetupProcessor" = type { %"class.sw::Context"*, %"class.sw::LRUCache.18"* }
%"class.sw::LRUCache.18" = type opaque
%"class.sw::Clipper" = type opaque
%"class.sw::Blitter" = type { i32 (...)**, %"class.sw::LRUCache.19"*, %"class.sw::MutexLock" }
%"class.sw::LRUCache.19" = type opaque
%"struct.sw::Viewport" = type { float, float, float, float, float, float }
%"struct.sw::Triangle" = type opaque
%"struct.sw::Primitive" = type opaque
%"struct.sw::Plane" = type { float, float, float, float }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.1 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.sw::Renderer::PrimitiveProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::PixelProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::Task" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::DrawCall" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)*, { i64, i64 }, %"struct.sw::SetupProcessor::State", [32 x %"class.sw::Resource"*], %"class.sw::Resource"*, [8 x %"class.sw::Surface"*], %"class.sw::Surface"*, %"class.sw::Surface"*, [32 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [64 x %"class.sw::Resource"*], i32, i32, i32, i32, i32, i32, %"class.std::__1::list"*, %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"struct.sw::DrawData"* }
%"struct.sw::Vertex" = type { %union.anon.20, i32, i32, float, float, i32, [3 x i32] }
%union.anon.20 = type { [34 x %"struct.sw::float4"] }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [16 x [4 x %"struct.sw::Vertex"]], [16 x i32], i32, [12 x i8] }
%"struct.sw::Polygon" = type opaque
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, [32 x i8*], [32 x i32], [8 x i8], [32 x %"struct.sw::Texture"], i8*, [8 x i8], %union.anon.22, %"struct.sw::DrawData::PS", i32, [12 x i8], %"struct.sw::VertexProcessor::PointSprite", float, [2 x %"struct.sw::PixelProcessor::Stencil"], [8 x i8], %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [16 x i32], [8 x %"struct.sw::TextureStage::Uniforms"], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", float, float, float, float, [6 x %"struct.sw::Plane"], [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::Constants" = type opaque
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%union.anon.22 = type { %"struct.sw::DrawData::VS" }
%"struct.sw::DrawData::VS" = type { [260 x %"struct.sw::float4"], [24 x i8*], [64 x i8*], [64 x i32], [64 x i32], [64 x i32], [64 x i32], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::DrawData::PS" = type { [8 x [4 x [4 x i16]]], [264 x %"struct.sw::float4"], [24 x i8*], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::TextureStage::Uniforms" = type { [4 x [4 x i16]], [2 x [2 x %"struct.sw::float4"]], [2 x [2 x [4 x i16]]], [4 x i16], [4 x i16] }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%"class.sw::SwiftConfig" = type opaque
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"struct.sw::VertexProcessor::State" = type <{ %"struct.sw::VertexProcessor::States", i32, [4 x i8] }>
%"struct.sw::VertexProcessor::States" = type { i64, i48, [9 x i8], [3 x i8], [8 x %"struct.sw::VertexProcessor::States::TextureState"], [16 x %"struct.sw::Sampler::State"], [32 x %"struct.sw::VertexProcessor::States::Input"], [34 x %"struct.sw::VertexProcessor::States::Output"] }
%"struct.sw::VertexProcessor::States::TextureState" = type { i8, i8, [2 x i8] }
%"struct.sw::Sampler::State" = type { [6 x i8], [2 x i8] }
%"struct.sw::VertexProcessor::States::Input" = type { i16, [2 x i8] }
%"struct.sw::VertexProcessor::States::Output" = type { %union.anon.32, %union.anon.34 }
%union.anon.32 = type { i8 }
%union.anon.34 = type { i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States", i32 }
%"struct.sw::SetupProcessor::States" = type { i32, %union.anon.23 }
%union.anon.23 = type { [32 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]] }
%"struct.sw::SetupProcessor::States::Gradient" = type { i8 }
%"struct.sw::PixelProcessor::State" = type { %"struct.sw::PixelProcessor::States", i32 }
%"struct.sw::PixelProcessor::States" = type { i32, i32, i32, i16, i32, [8 x i32], i16, [2 x i8], [16 x %"struct.sw::Sampler::State"], [8 x %"struct.sw::TextureStage::State"], %union.anon.38 }
%"struct.sw::TextureStage::State" = type { [6 x i8], [2 x i8] }
%union.anon.38 = type { [32 x %"struct.sw::PixelProcessor::States::Interpolant"] }
%"struct.sw::PixelProcessor::States::Interpolant" = type { i16 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.sw::Context" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], float, float, float, [8 x i8], [8 x %"class.sw::TextureStage"], [32 x %"class.sw::Sampler"], [32 x %"class.sw::Resource"*], [32 x %"struct.sw::Stream"], %"class.sw::Resource"*, i8, [3 x i8], float, float, i8, [16 x i8], [3 x i8], [8 x i32], i8, i8, [2 x i8], [8 x i32], [8 x i8], [4 x i8], [8 x %"class.sw::Surface"*], [8 x i32], %"class.sw::Surface"*, i32, [4 x i8], %"class.sw::Surface"*, i32, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, float, i32, i8, i8, [8 x i8], [2 x i8], [8 x %"struct.sw::Point"], i32, i32, i32, i32, i8, i8, i8, i8, i64, i8, i8, [2 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, i8, [2 x i8], float, [8 x i32], i8, [3 x i8], i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sw::TextureStage" = type { %"struct.sw::TextureStage::Uniforms", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.sw::Sampler"*, %"class.sw::TextureStage"*, [8 x i8] }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Stream" = type <{ %"struct.sw::StreamResource", i32, i8, i8, [2 x i8] }>
%"struct.sw::StreamResource" = type { %"class.sw::Resource"*, i8*, i32 }
%"struct.sw::Point" = type { %union.anon.15 }
%union.anon.15 = type { [3 x float] }
%"struct.es2::Viewport" = type { i32, i32, i32, i32, float, float }
%"struct.sw::RectT" = type { i32, i32, i32, i32 }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.3, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.3 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.5, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.12, [4 x i8] }>
%union.anon.5 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.10, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.7, i8 }>
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.10 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.12 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"class.egl::Image" = type { %"class.sw::Surface.base", [6 x i8], %"class.gl::Object.base", i32, i32, i32, i32, i8, %"class.egl::Texture"* }
%"class.sw::Surface.base" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8 }>
%"class.egl::Texture" = type { %"class.gl::NamedObject" }
%"class.sw::VertexProcessor" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8, [15 x i8] }>
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>

@_ZTVN3es25QueryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.es2::Query"*)* @_ZN3es25QueryD2Ev to i8*), i8* bitcast (void (%"class.es2::Query"*)* @_ZN3es25QueryD0Ev to i8*)] }, align 8

@_ZN3es25QueryC1Ejj = hidden unnamed_addr alias void (%"class.es2::Query"*, i32, i32), void (%"class.es2::Query"*, i32, i32)* @_ZN3es25QueryC2Ejj
@_ZN3es25QueryD1Ev = hidden unnamed_addr alias void (%"class.es2::Query"*), void (%"class.es2::Query"*)* @_ZN3es25QueryD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25QueryC2Ejj(%"class.es2::Query"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"* %4, i32 %1) #7
  %5 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es25QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  store %"struct.sw::Query"* null, %"struct.sw::Query"** %6, align 8
  %7 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 5
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25QueryD2Ev(%"class.es2::Query"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es25QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %4 = load %"struct.sw::Query"*, %"struct.sw::Query"** %3, align 8
  tail call void @_ZN2sw5Query7releaseEv(%"struct.sw::Query"* %4) #7
  %5 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %5) #7
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5Query7releaseEv(%"struct.sw::Query"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25QueryD0Ev(%"class.es2::Query"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es25QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %4 = load %"struct.sw::Query"*, %"struct.sw::Query"** %3, align 8
  tail call void @_ZN2sw5Query7releaseEv(%"struct.sw::Query"* %4) #7
  %5 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %5) #7
  %6 = bitcast %"class.es2::Query"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25Query5beginEv(%"class.es2::Query"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %3 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %4 = icmp eq %"struct.sw::Query"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %27 [
    i32 35887, label %9
    i32 36202, label %9
    i32 35976, label %8
  ]

8:                                                ; preds = %5
  br label %9

9:                                                ; preds = %5, %5, %8
  %10 = phi i32 [ 1, %8 ], [ 0, %5 ], [ 0, %5 ]
  %11 = tail call i8* @_Znwm(i64 16) #8
  %12 = bitcast i8* %11 to %"struct.sw::Query"*
  tail call void @_ZN2sw5QueryC1ENS0_4TypeE(%"struct.sw::Query"* nonnull %12, i32 %10) #7
  %13 = bitcast %"struct.sw::Query"** %2 to i8**
  store i8* %11, i8** %13, align 8
  br label %14

14:                                               ; preds = %9, %1
  %15 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #7
  %16 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %17 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %16, i64 0, i32 0
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %18 release, align 4
  %19 = getelementptr inbounds %"class.es2::Device", %"class.es2::Device"* %15, i64 0, i32 0
  %20 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  tail call void @_ZN2sw8Renderer8addQueryEPNS_5QueryE(%"class.sw::Renderer"* %19, %"struct.sw::Query"* %20) #7
  %21 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %27 [
    i32 35887, label %23
    i32 36202, label %23
    i32 35976, label %25
  ]

23:                                               ; preds = %14, %14
  %24 = getelementptr inbounds %"class.es2::Device", %"class.es2::Device"* %15, i64 0, i32 0, i32 2
  tail call void @_ZN2sw14PixelProcessor19setOcclusionEnabledEb(%"class.sw::PixelProcessor"* %24, i1 zeroext true) #7
  br label %27

25:                                               ; preds = %14
  %26 = bitcast %"class.es2::Device"* %15 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor32setTransformFeedbackQueryEnabledEb(%"class.sw::VertexProcessor"* %26, i1 zeroext true) #7
  br label %27

27:                                               ; preds = %23, %25, %14, %5
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN2sw5QueryC1ENS0_4TypeE(%"struct.sw::Query"*, i32) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN3es25errorEj(i32) local_unnamed_addr #1

; Function Attrs: optsize
declare %"class.es2::Device"* @_ZN3es29getDeviceEv() local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw8Renderer8addQueryEPNS_5QueryE(%"class.sw::Renderer"*, %"struct.sw::Query"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor19setOcclusionEnabledEb(%"class.sw::PixelProcessor"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor32setTransformFeedbackQueryEnabledEb(%"class.sw::VertexProcessor"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25Query3endEv(%"class.es2::Query"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %3 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %4 = icmp eq %"struct.sw::Query"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN3es25errorEj(i32 1282) #7
  br label %21

6:                                                ; preds = %1
  %7 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #7
  %8 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %9 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %8, i64 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.es2::Device", %"class.es2::Device"* %7, i64 0, i32 0
  %11 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  tail call void @_ZN2sw8Renderer11removeQueryEPNS_5QueryE(%"class.sw::Renderer"* %10, %"struct.sw::Query"* %11) #7
  %12 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %18 [
    i32 35887, label %14
    i32 36202, label %14
    i32 35976, label %16
  ]

14:                                               ; preds = %6, %6
  %15 = getelementptr inbounds %"class.es2::Device", %"class.es2::Device"* %7, i64 0, i32 0, i32 2
  tail call void @_ZN2sw14PixelProcessor19setOcclusionEnabledEb(%"class.sw::PixelProcessor"* %15, i1 zeroext false) #7
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.es2::Device"* %7 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor32setTransformFeedbackQueryEnabledEb(%"class.sw::VertexProcessor"* %17, i1 zeroext false) #7
  br label %18

18:                                               ; preds = %6, %16, %14
  %19 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 5
  store i32 0, i32* %20, align 8
  br label %21

21:                                               ; preds = %18, %5
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Renderer11removeQueryEPNS_5QueryE(%"class.sw::Renderer"*, %"struct.sw::Query"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3es25Query9getResultEv(%"class.es2::Query"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %3 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %4 = icmp eq %"struct.sw::Query"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i8 @_ZN3es25Query9testQueryEv(%"class.es2::Query"* %0) #9
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %5, %8
  %9 = tail call i32 @sched_yield() #7
  %10 = tail call zeroext i8 @_ZN3es25Query9testQueryEv(%"class.es2::Query"* %0) #9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %8, label %12

12:                                               ; preds = %8, %5, %1
  %13 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i8 @_ZN3es25Query9testQueryEv(%"class.es2::Query"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %3 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %4 = icmp eq %"struct.sw::Query"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %3, i64 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = load i8, i8* %6, align 4
  br label %31

19:                                               ; preds = %13
  %20 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %21 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 acquire, align 4
  store i8 1, i8* %6, align 4
  %23 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %31 [
    i32 35887, label %25
    i32 36202, label %25
    i32 35976, label %29
  ]

25:                                               ; preds = %19, %19
  %26 = icmp ne i32 %22, 0
  %27 = zext i1 %26 to i32
  %28 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 5
  store i32 %27, i32* %28, align 8
  br label %31

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 5
  store i32 %22, i32* %30, align 8
  br label %31

31:                                               ; preds = %9, %19, %29, %25, %17, %1, %5
  %32 = phi i8 [ 1, %5 ], [ 1, %1 ], [ %18, %17 ], [ 1, %25 ], [ 1, %29 ], [ 1, %19 ], [ %7, %9 ]
  ret i8 %32
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i8 @_ZN3es25Query17isResultAvailableEv(%"class.es2::Query"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 1
  %3 = load %"struct.sw::Query"*, %"struct.sw::Query"** %2, align 8
  %4 = icmp eq %"struct.sw::Query"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i8 @_ZN3es25Query9testQueryEv(%"class.es2::Query"* %0) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 4
  ret i8 %9
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3es25Query7getTypeEv(%"class.es2::Query"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Query", %"class.es2::Query"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2gl6Object7releaseEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: nounwind optsize
declare i32 @sched_yield() local_unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize }
attributes #8 = { builtin nounwind optsize }
attributes #9 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
