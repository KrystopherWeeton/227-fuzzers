; ModuleID = '../../third_party/blink/renderer/platform/text/platform_locale.cc'
source_filename = "../../third_party/blink/renderer/platform/text/platform_locale.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::DateTimeStringBuilder" = type { %"class.blink::DateTimeFormat::TokenHandler", %"class.WTF::StringBuilder", %"class.blink::Locale"*, %"class.blink::DateComponents"* }
%"class.blink::DateTimeFormat::TokenHandler" = type { i32 (...)** }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.blink::DateComponents" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Platform" = type { i32 (...)** }
%"class.WTF::IntegerToStringConverter.34" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.8", [96 x i8] }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [16 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF12IsASCIISpaceIDsEEbT_ = comdat any

$_ZN5blink21DateTimeStringBuilderD2Ev = comdat any

$_ZN5blink21DateTimeStringBuilderD0Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs = comdat any

$_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5blink21DateTimeStringBuilderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DateTimeStringBuilder"*)* @_ZN5blink21DateTimeStringBuilderD2Ev to i8*), i8* bitcast (void (%"class.blink::DateTimeStringBuilder"*)* @_ZN5blink21DateTimeStringBuilderD0Ev to i8*), i8* bitcast (void (%"class.blink::DateTimeStringBuilder"*, i32, i32)* @_ZN5blink21DateTimeStringBuilder10VisitFieldENS_14DateTimeFormat9FieldTypeEi to i8*), i8* bitcast (void (%"class.blink::DateTimeStringBuilder"*, %"class.WTF::String"*)* @_ZN5blink21DateTimeStringBuilder12VisitLiteralERKN3WTF6StringE to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c"%.03f\00", align 1
@_ZN5blink12_GLOBAL__N_116g_default_localeE = internal unnamed_addr global %"class.blink::Locale"* null, align 8
@_ZTVN5blink6LocaleE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::Locale"*)* @_ZN5blink6LocaleD2Ev to i8*), i8* bitcast (void (%"class.blink::Locale"*)* @_ZN5blink6LocaleD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"yyyy\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"ww\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink21DateTimeStringBuilderC1ERNS_6LocaleERKNS_14DateComponentsE = hidden unnamed_addr alias void (%"class.blink::DateTimeStringBuilder"*, %"class.blink::Locale"*, %"class.blink::DateComponents"*), void (%"class.blink::DateTimeStringBuilder"*, %"class.blink::Locale"*, %"class.blink::DateComponents"*)* @_ZN5blink21DateTimeStringBuilderC2ERNS_6LocaleERKNS_14DateComponentsE
@_ZN5blink6LocaleD1Ev = hidden unnamed_addr alias void (%"class.blink::Locale"*), void (%"class.blink::Locale"*)* @_ZN5blink6LocaleD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21DateTimeStringBuilderC2ERNS_6LocaleERKNS_14DateComponentsE(%"class.blink::DateTimeStringBuilder"* nocapture, %"class.blink::Locale"* dereferenceable(152), %"class.blink::DateComponents"* dereferenceable(36)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21DateTimeStringBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1, i32 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  store %"class.blink::Locale"* %1, %"class.blink::Locale"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  store %"class.blink::DateComponents"* %2, %"class.blink::DateComponents"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21DateTimeStringBuilder5BuildERKN3WTF6StringE(%"class.blink::DateTimeStringBuilder"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %2 ]
  tail call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %3, i32 %11) #16
  %12 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::DateTimeFormat::TokenHandler"* dereferenceable(8) %12) #16
  ret i1 %13
}

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* dereferenceable(8), %"class.blink::DateTimeFormat::TokenHandler"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21DateTimeStringBuilder13ZeroPadStringERKN3WTF6StringEm(%"class.blink::DateTimeStringBuilder"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %12, %9 ], [ 0, %3 ]
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  br i1 %8, label %92, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %92

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #16
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #16
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %92

34:                                               ; preds = %13
  %35 = trunc i64 %2 to i32
  %36 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %39 = bitcast %union.anon* %38 to i8*
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %41, align 4
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %42, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %4, i32 %35) #16
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %34, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %34 ]
  %50 = icmp ult i32 %49, %35
  br i1 %50, label %88, label %53

51:                                               ; preds = %88
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi %"class.WTF::StringImpl"* [ %52, %51 ], [ %43, %48 ]
  %55 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %59, i64* %60, align 8
  br label %68

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %67, align 8
  br label %68

68:                                               ; preds = %57, %61
  %69 = phi i32 [ %64, %61 ], [ 0, %57 ]
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  %71 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #16
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #16
  br label %87

87:                                               ; preds = %68, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #16
  br label %92

88:                                               ; preds = %48, %88
  %89 = phi i32 [ %90, %88 ], [ %49, %48 ]
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 48) #16
  %90 = add i32 %89, 1
  %91 = icmp eq i32 %90, %35
  br i1 %91, label %51, label %88

92:                                               ; preds = %32, %17, %16, %87
  %93 = phi %"class.WTF::StringImpl"* [ %71, %87 ], [ null, %16 ], [ %7, %17 ], [ %7, %32 ]
  ret %"class.WTF::StringImpl"* %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #16
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #16
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #16
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"*, i32, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  %16 = icmp slt i32 %1, 0
  %17 = sub i32 0, %1
  %18 = select i1 %16, i32 %17, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #16
  store i8* %12, i8** %13, align 8
  %19 = urem i32 %18, 10
  %20 = udiv i32 %18, 10
  %21 = trunc i32 %19 to i8
  %22 = or i8 %21, 48
  store i8 %22, i8* %12, align 4
  %23 = icmp ugt i32 %18, 9
  br i1 %23, label %24, label %46

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %25, i8** %13, align 8
  %26 = urem i32 %20, 10
  %27 = trunc i32 %26 to i8
  %28 = or i8 %27, 48
  store i8 %28, i8* %25, align 1
  %29 = icmp ugt i32 %18, 99
  br i1 %29, label %30, label %46

30:                                               ; preds = %24
  %31 = udiv i32 %18, 100
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %32, i8** %13, align 8
  %33 = urem i32 %31, 10
  %34 = trunc i32 %33 to i8
  %35 = or i8 %34, 48
  store i8 %35, i8* %32, align 2
  %36 = icmp ugt i32 %18, 999
  br i1 %36, label %37, label %46

37:                                               ; preds = %30, %37
  %38 = phi i32 [ %40, %37 ], [ %31, %30 ]
  %39 = load i8*, i8** %13, align 8
  %40 = udiv i32 %38, 10
  %41 = getelementptr inbounds i8, i8* %39, i64 -1
  store i8* %41, i8** %13, align 8
  %42 = urem i32 %40, 10
  %43 = trunc i32 %42 to i8
  %44 = or i8 %43, 48
  store i8 %44, i8* %41, align 1
  %45 = icmp ugt i32 %38, 99
  br i1 %45, label %37, label %46

46:                                               ; preds = %37, %30, %24, %3
  br i1 %16, label %47, label %50

47:                                               ; preds = %46
  %48 = load i8*, i8** %13, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 -1
  store i8* %49, i8** %13, align 8
  store i8 45, i8* %49, align 1
  br label %50

50:                                               ; preds = %46, %47
  %51 = bitcast i8** %13 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint i8* %15 to i64
  %54 = sub i64 %53, %52
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %14, align 8
  %56 = inttoptr i64 %52 to i8*
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %56, i32 %55) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  %59 = call %"class.WTF::StringImpl"* @_ZN5blink21DateTimeStringBuilder13ZeroPadStringERKN3WTF6StringEm(%"class.blink::DateTimeStringBuilder"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %6, i64 %2)
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %9, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #16
  br label %74

74:                                               ; preds = %50, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  %75 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %76 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #16
  %77 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %78 = load %"class.blink::Locale"*, %"class.blink::Locale"** %77, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %78, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %86

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %82, align 8
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %85, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %75, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %106

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 1
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %92 = bitcast i8** %91 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %89, i32* %93, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %75, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %86
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %86
  %103 = phi i32 [ %101, %100 ], [ %99, %86 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #16
  br label %106

106:                                              ; preds = %81, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #16
  %107 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %121

121:                                              ; preds = %106, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = bitcast %"class.blink::Locale"* %0 to void (%"class.blink::Locale"*)***
  %10 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %10, i64 17
  %12 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %11, align 8
  tail call void %12(%"class.blink::Locale"* %0) #16
  %13 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 7
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %15, label %24, label %19

19:                                               ; preds = %2
  br i1 %18, label %239, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %42

24:                                               ; preds = %2
  br i1 %18, label %239, label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %239

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #16
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  tail call void @llvm.trap() #16
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %239

42:                                               ; preds = %20
  %43 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 48, i1 false)
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %46 = bitcast %union.anon* %45 to i8*
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %48, align 4
  %49 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %49, align 1
  %50 = load i32, i32* %21, align 4
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %3, i32 %50) #16
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %89, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %89, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  br i1 %61, label %67, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.WTF::StringImpl"* %62 to i8*
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  br label %70

67:                                               ; preds = %57
  %68 = bitcast %"class.WTF::StringImpl"* %62 to i16*
  %69 = load i16, i16* %68, align 2
  br label %70

70:                                               ; preds = %63, %67
  %71 = phi i16 [ %66, %63 ], [ %69, %67 ]
  %72 = icmp eq i16 %71, 45
  br i1 %72, label %73, label %89

73:                                               ; preds = %70
  %74 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #16
  %75 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %80, i64* %81, align 8
  br label %105

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %88 = bitcast i8** %87 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %88, align 8
  br label %105

89:                                               ; preds = %53, %42, %70
  %90 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #16
  %91 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %95, align 8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %96, i64* %97, align 8
  br label %105

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %104, align 8
  br label %105

105:                                              ; preds = %98, %94, %82, %78
  %106 = phi %"class.WTF::StringView"* [ %4, %78 ], [ %4, %82 ], [ %5, %94 ], [ %5, %98 ]
  %107 = phi i32 [ 0, %78 ], [ %85, %82 ], [ 0, %94 ], [ %101, %98 ]
  %108 = phi i8* [ %74, %78 ], [ %74, %82 ], [ %90, %94 ], [ %90, %98 ]
  %109 = phi i64 [ 1, %78 ], [ 1, %82 ], [ 0, %94 ], [ 0, %98 ]
  %110 = phi i1 [ true, %78 ], [ true, %82 ], [ false, %94 ], [ false, %98 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %106, i64 0, i32 2
  store i32 %107, i32* %111, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %106)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #16
  %112 = bitcast %"class.WTF::StringView"* %7 to i8*
  %113 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 10, i32 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %116 = bitcast i8** %115 to %"class.WTF::StringImpl"**
  %117 = bitcast %"class.WTF::StringView"* %7 to i64*
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %119 = bitcast %"class.WTF::StringView"* %6 to i8*
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %122 = bitcast i8** %121 to %"class.WTF::StringImpl"**
  %123 = bitcast %"class.WTF::StringView"* %6 to i64*
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %125

125:                                              ; preds = %198, %105
  %126 = phi i64 [ %199, %198 ], [ %109, %105 ]
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  br label %132

132:                                              ; preds = %125, %129
  %133 = phi i32 [ %131, %129 ], [ 0, %125 ]
  %134 = zext i32 %133 to i64
  %135 = icmp ult i64 %126, %134
  br i1 %135, label %136, label %200

136:                                              ; preds = %132
  br i1 %128, label %198, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  %141 = icmp ult i64 %126, %140
  br i1 %141, label %142, label %198

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 1
  br i1 %146, label %153, label %148

148:                                              ; preds = %142
  %149 = bitcast %"class.WTF::StringImpl"* %147 to i8*
  %150 = getelementptr inbounds i8, i8* %149, i64 %126
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  br label %157

153:                                              ; preds = %142
  %154 = bitcast %"class.WTF::StringImpl"* %147 to i16*
  %155 = getelementptr inbounds i16, i16* %154, i64 %126
  %156 = load i16, i16* %155, align 2
  br label %157

157:                                              ; preds = %148, %153
  %158 = phi i16 [ %152, %148 ], [ %156, %153 ]
  switch i16 %158, label %198 [
    i16 48, label %159
    i16 49, label %159
    i16 50, label %159
    i16 51, label %159
    i16 52, label %159
    i16 53, label %159
    i16 54, label %159
    i16 55, label %159
    i16 56, label %159
    i16 57, label %159
    i16 46, label %187
  ]

159:                                              ; preds = %157, %157, %157, %157, %157, %157, %157, %157, %157, %157
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #16
  %160 = load atomic i32, i32* %143 monotonic, align 4
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"class.WTF::StringImpl"* %147 to i8*
  %165 = getelementptr inbounds i8, i8* %164, i64 %126
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i16
  br label %172

168:                                              ; preds = %159
  %169 = bitcast %"class.WTF::StringImpl"* %147 to i16*
  %170 = getelementptr inbounds i16, i16* %169, i64 %126
  %171 = load i16, i16* %170, align 2
  br label %172

172:                                              ; preds = %163, %168
  %173 = phi i16 [ %167, %163 ], [ %171, %168 ]
  %174 = zext i16 %173 to i64
  %175 = add nsw i64 %174, -48
  %176 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 %175, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  store i8* null, i8** %121, align 8
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %180, i64* %123, align 8
  br label %185

181:                                              ; preds = %172
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %120, align 8
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 1
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %122, align 8
  br label %185

185:                                              ; preds = %179, %181
  %186 = phi i32 [ %183, %181 ], [ 0, %179 ]
  store i32 %186, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #16
  br label %198

187:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #16
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  store i8* null, i8** %115, align 8
  %191 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %191, i64* %117, align 8
  br label %196

192:                                              ; preds = %187
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %114, align 8
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 1
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %116, align 8
  br label %196

196:                                              ; preds = %190, %192
  %197 = phi i32 [ %194, %192 ], [ 0, %190 ]
  store i32 %197, i32* %118, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #16
  br label %198

198:                                              ; preds = %136, %137, %185, %196, %157
  %199 = add nuw nsw i64 %126, 1
  br label %125

200:                                              ; preds = %132
  %201 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #16
  %202 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 5
  %203 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 3
  %204 = select i1 %110, %"class.WTF::String"* %202, %"class.WTF::String"* %203
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %208, label %212

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %209, align 8
  %210 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %211 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %210, i64* %211, align 8
  br label %219

212:                                              ; preds = %200
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %213, align 8
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 1
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %218 = bitcast i8** %217 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %218, align 8
  br label %219

219:                                              ; preds = %208, %212
  %220 = phi i32 [ %215, %212 ], [ 0, %208 ]
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %220, i32* %221, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #16
  %222 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #16
  br label %238

238:                                              ; preds = %219, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #16
  br label %239

239:                                              ; preds = %19, %40, %25, %24, %238
  %240 = phi %"class.WTF::StringImpl"* [ %222, %238 ], [ null, %24 ], [ %17, %25 ], [ %17, %40 ], [ null, %19 ]
  ret %"class.WTF::StringImpl"* %240
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DateTimeStringBuilder10VisitFieldENS_14DateTimeFormat9FieldTypeEi(%"class.blink::DateTimeStringBuilder"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  switch i32 %1, label %324 [
    i32 121, label %12
    i32 77, label %17
    i32 76, label %88
    i32 100, label %159
    i32 119, label %164
    i32 97, label %169
    i32 104, label %203
    i32 72, label %212
    i32 75, label %218
    i32 107, label %225
    i32 109, label %233
    i32 115, label %239
  ]

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %14 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %14, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %16, i64 4)
  br label %324

17:                                               ; preds = %3
  switch i32 %2, label %82 [
    i32 3, label %18
    i32 4, label %50
  ]

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %22 = load %"class.blink::Locale"*, %"class.blink::Locale"** %21, align 8
  %23 = bitcast %"class.blink::Locale"* %22 to %"class.WTF::Vector.6"* (%"class.blink::Locale"*)***
  %24 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)**, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %24, i64 7
  %26 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %25, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::Vector.6"* %26(%"class.blink::Locale"* %22) #16
  %28 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %29 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %29, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %27, i32 %31) #16
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %38, i64* %39, align 8
  br label %47

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  br label %47

47:                                               ; preds = %36, %40
  %48 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %19, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  br label %324

50:                                               ; preds = %17
  %51 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %52 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #16
  %53 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %54 = load %"class.blink::Locale"*, %"class.blink::Locale"** %53, align 8
  %55 = bitcast %"class.blink::Locale"* %54 to %"class.WTF::Vector.6"* (%"class.blink::Locale"*)***
  %56 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)**, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %56, i64 11
  %58 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %57, align 8
  %59 = tail call dereferenceable(16) %"class.WTF::Vector.6"* %58(%"class.blink::Locale"* %54) #16
  %60 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %61 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %61, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %59, i32 %63) #16
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %50
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %70, i64* %71, align 8
  br label %79

72:                                               ; preds = %50
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  br label %79

79:                                               ; preds = %68, %72
  %80 = phi i32 [ %75, %72 ], [ 0, %68 ]
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %80, i32* %81, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  br label %324

82:                                               ; preds = %17
  %83 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %84 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %84, i64 0, i32 5
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, 1
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %87, i64 2)
  br label %324

88:                                               ; preds = %3
  switch i32 %2, label %153 [
    i32 3, label %89
    i32 4, label %121
  ]

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %91 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #16
  %92 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %93 = load %"class.blink::Locale"*, %"class.blink::Locale"** %92, align 8
  %94 = bitcast %"class.blink::Locale"* %93 to %"class.WTF::Vector.6"* (%"class.blink::Locale"*)***
  %95 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)**, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %95, i64 9
  %97 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %96, align 8
  %98 = tail call dereferenceable(16) %"class.WTF::Vector.6"* %97(%"class.blink::Locale"* %93) #16
  %99 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %100 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %100, i64 0, i32 5
  %102 = load i32, i32* %101, align 4
  %103 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %98, i32 %102) #16
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %89
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %110 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %109, i64* %110, align 8
  br label %118

111:                                              ; preds = %89
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 1
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %117 = bitcast i8** %116 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %117, align 8
  br label %118

118:                                              ; preds = %107, %111
  %119 = phi i32 [ %114, %111 ], [ 0, %107 ]
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %119, i32* %120, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %90, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #16
  br label %324

121:                                              ; preds = %88
  %122 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %123 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #16
  %124 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %125 = load %"class.blink::Locale"*, %"class.blink::Locale"** %124, align 8
  %126 = bitcast %"class.blink::Locale"* %125 to %"class.WTF::Vector.6"* (%"class.blink::Locale"*)***
  %127 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)**, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %127, i64 8
  %129 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %128, align 8
  %130 = tail call dereferenceable(16) %"class.WTF::Vector.6"* %129(%"class.blink::Locale"* %125) #16
  %131 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %132 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %132, i64 0, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %130, i32 %134) #16
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %139, label %143

139:                                              ; preds = %121
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %140, align 8
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %141, i64* %142, align 8
  br label %150

143:                                              ; preds = %121
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %149 = bitcast i8** %148 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %149, align 8
  br label %150

150:                                              ; preds = %139, %143
  %151 = phi i32 [ %146, %143 ], [ 0, %139 ]
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %151, i32* %152, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %122, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #16
  br label %324

153:                                              ; preds = %88
  %154 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %155 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %155, i64 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = add nsw i32 %157, 1
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %158, i64 2)
  br label %324

159:                                              ; preds = %3
  %160 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %161 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %161, i64 0, i32 4
  %163 = load i32, i32* %162, align 4
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %163, i64 2)
  br label %324

164:                                              ; preds = %3
  %165 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %166 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %166, i64 0, i32 7
  %168 = load i32, i32* %167, align 4
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %168, i64 2)
  br label %324

169:                                              ; preds = %3
  %170 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %171 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #16
  %172 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %173 = load %"class.blink::Locale"*, %"class.blink::Locale"** %172, align 8
  %174 = bitcast %"class.blink::Locale"* %173 to %"class.WTF::Vector.6"* (%"class.blink::Locale"*)***
  %175 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)**, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*** %174, align 8
  %176 = getelementptr inbounds %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %175, i64 10
  %177 = load %"class.WTF::Vector.6"* (%"class.blink::Locale"*)*, %"class.WTF::Vector.6"* (%"class.blink::Locale"*)** %176, align 8
  %178 = tail call dereferenceable(16) %"class.WTF::Vector.6"* %177(%"class.blink::Locale"* %173) #16
  %179 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %180 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %180, i64 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = icmp sgt i32 %182, 11
  %184 = zext i1 %183 to i32
  %185 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %178, i32 %184) #16
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %169
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %190, align 8
  %191 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %192 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %191, i64* %192, align 8
  br label %200

193:                                              ; preds = %169
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 1
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %199 = bitcast i8** %198 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %199, align 8
  br label %200

200:                                              ; preds = %189, %193
  %201 = phi i32 [ %196, %193 ], [ 0, %189 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %170, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #16
  br label %324

203:                                              ; preds = %3
  %204 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %205 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %205, i64 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = srem i32 %207, 12
  %209 = icmp eq i32 %208, 0
  %210 = select i1 %209, i32 12, i32 %208
  %211 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %210, i64 %211)
  br label %324

212:                                              ; preds = %3
  %213 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %214 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %214, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %216, i64 %217)
  br label %324

218:                                              ; preds = %3
  %219 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %220 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %220, i64 0, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = srem i32 %222, 12
  %224 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %223, i64 %224)
  br label %324

225:                                              ; preds = %3
  %226 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %227 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %227, i64 0, i32 3
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  %231 = select i1 %230, i32 24, i32 %229
  %232 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %231, i64 %232)
  br label %324

233:                                              ; preds = %3
  %234 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %235 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %235, i64 0, i32 2
  %237 = load i32, i32* %236, align 4
  %238 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %237, i64 %238)
  br label %324

239:                                              ; preds = %3
  %240 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 3
  %241 = load %"class.blink::DateComponents"*, %"class.blink::DateComponents"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %241, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %241, i64 0, i32 1
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %239
  %248 = sext i32 %2 to i64
  tail call void @_ZN5blink21DateTimeStringBuilder12AppendNumberEim(%"class.blink::DateTimeStringBuilder"* %0, i32 %246, i64 %248)
  br label %324

249:                                              ; preds = %239
  %250 = sitofp i32 %246 to double
  %251 = sitofp i32 %243 to double
  %252 = fdiv double %251, 1.000000e+03
  %253 = fadd double %252, %250
  %254 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #16
  %255 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %256 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #16
  %257 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), double %253) #16
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %257, %"class.WTF::StringImpl"** %258, align 8
  %259 = add nsw i32 %2, 4
  %260 = sext i32 %259 to i64
  %261 = call %"class.WTF::StringImpl"* @_ZN5blink21DateTimeStringBuilder13ZeroPadStringERKN3WTF6StringEm(%"class.blink::DateTimeStringBuilder"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %10, i64 %260)
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %255, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %262, label %276, label %263

263:                                              ; preds = %249
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #16
  br label %276

276:                                              ; preds = %249, %272, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #16
  %277 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %278 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #16
  %279 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 2
  %280 = load %"class.blink::Locale"*, %"class.blink::Locale"** %279, align 8
  %281 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %280, %"class.WTF::String"* nonnull dereferenceable(8) %9)
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %283, label %288

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %284, align 8
  %285 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %286 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 0, i32* %287, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %277, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  br label %308

288:                                              ; preds = %276
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %289, align 8
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 1
  %293 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %294 = bitcast i8** %293 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %292, %"class.WTF::StringImpl"** %294, align 8
  %295 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %291, i32* %295, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %277, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %288
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %288
  %305 = phi i32 [ %303, %302 ], [ %301, %288 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #16
  br label %308

308:                                              ; preds = %283, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #16
  %309 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %308
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %261) #16
  br label %323

323:                                              ; preds = %308, %319, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #16
  br label %324

324:                                              ; preds = %3, %247, %323, %118, %153, %150, %47, %82, %79, %233, %225, %218, %212, %203, %200, %164, %159, %12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DateTimeStringBuilder12VisitLiteralERKN3WTF6StringE(%"class.blink::DateTimeStringBuilder"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %10, align 8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  br label %20

20:                                               ; preds = %9, %13
  %21 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %21, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21DateTimeStringBuilder8ToStringEv(%"class.blink::DateTimeStringBuilder"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  %3 = tail call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %2) #16
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() local_unnamed_addr #1 align 2 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = load %"class.blink::Locale"*, %"class.blink::Locale"** @_ZN5blink12_GLOBAL__N_116g_default_localeE, align 8
  %3 = icmp eq %"class.blink::Locale"* %2, null
  br i1 %3, label %4, label %27

4:                                                ; preds = %0
  %5 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #16
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %9 = call %"class.blink::Locale"* @_ZN5blink6Locale6CreateERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %8) #16
  store %"class.blink::Locale"* %9, %"class.blink::Locale"** @_ZN5blink12_GLOBAL__N_116g_default_localeE, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %4, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %26 = load %"class.blink::Locale"*, %"class.blink::Locale"** @_ZN5blink12_GLOBAL__N_116g_default_localeE, align 8
  br label %27

27:                                               ; preds = %0, %25
  %28 = phi %"class.blink::Locale"* [ %2, %0 ], [ %26, %25 ]
  ret %"class.blink::Locale"* %28
}

declare %"class.blink::Locale"* @_ZN5blink6Locale6CreateERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6Locale18ResetDefaultLocaleEv() local_unnamed_addr #1 align 2 {
  %1 = load %"class.blink::Locale"*, %"class.blink::Locale"** @_ZN5blink12_GLOBAL__N_116g_default_localeE, align 8
  %2 = icmp eq %"class.blink::Locale"* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.blink::Locale"* %1 to void (%"class.blink::Locale"*)***
  %5 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %5, i64 16
  %7 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %6, align 8
  tail call void %7(%"class.blink::Locale"* nonnull %1) #16
  br label %8

8:                                                ; preds = %3, %0
  store %"class.blink::Locale"* null, %"class.blink::Locale"** @_ZN5blink12_GLOBAL__N_116g_default_localeE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6LocaleD2Ev(%"class.blink::Locale"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink6LocaleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 4, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #16
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #16
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #16
  br label %87

87:                                               ; preds = %70, %83, %86
  %88 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 12
  br label %90

90:                                               ; preds = %109, %87
  %91 = phi %"class.WTF::String"* [ %89, %87 ], [ %92, %109 ]
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 -1
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #16
  br label %109

109:                                              ; preds = %90, %105, %108
  %110 = icmp eq %"class.WTF::String"* %92, %88
  br i1 %110, label %111, label %90

111:                                              ; preds = %109
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink6LocaleD0Ev(%"class.blink::Locale"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %6 = bitcast %"class.blink::Platform"* %5 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)***
  %7 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)** %7, i64 34
  %9 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)** %8, align 8
  call void %9(%"class.blink::WebString"* nonnull sret %3, %"class.blink::Platform"* %5, i32 %1) #16
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %3) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret %"class.WTF::StringImpl"* %10
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* nocapture readnone, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %8 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2) #16
  %9 = bitcast %"class.blink::Platform"* %7 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)***
  %10 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)** %10, i64 35
  %12 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*)** %11, align 8
  call void %12(%"class.blink::WebString"* nonnull sret %4, %"class.blink::Platform"* %7, i32 %1, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #16
  %13 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret %"class.WTF::StringImpl"* %13
}

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringES4_(%"class.blink::Locale"* nocapture readnone, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %10 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %2) #16
  %11 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %3) #16
  %12 = bitcast %"class.blink::Platform"* %9 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %13 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %13, i64 36
  %15 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %14, align 8
  call void %15(%"class.blink::WebString"* nonnull sret %5, %"class.blink::Platform"* %9, i32 %1, %"class.blink::WebString"* nonnull dereferenceable(8) %6, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #16
  %16 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %5) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret %"class.WTF::StringImpl"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale28ValidationMessageTooLongTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter.34", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 11
  %17 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 3
  %19 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false) #16
  store i8* %16, i8** %17, align 8
  %20 = urem i32 %1, 10
  %21 = udiv i32 %1, 10
  %22 = trunc i32 %20 to i8
  %23 = or i8 %22, 48
  store i8 %23, i8* %16, align 1
  %24 = icmp ugt i32 %1, 9
  br i1 %24, label %25, label %40

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 10
  store i8* %26, i8** %17, align 8
  %27 = urem i32 %21, 10
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, 48
  store i8 %29, i8* %26, align 2
  %30 = icmp ugt i32 %1, 99
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = udiv i32 %1, 100
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 9
  store i8* %33, i8** %17, align 8
  %34 = urem i32 %32, 10
  %35 = trunc i32 %34 to i8
  %36 = or i8 %35, 48
  store i8 %36, i8* %33, align 1
  %37 = icmp ugt i32 %1, 999
  br i1 %37, label %42, label %51

38:                                               ; preds = %25
  %39 = ptrtoint i8* %26 to i64
  br label %54

40:                                               ; preds = %3
  %41 = ptrtoint i8* %16 to i64
  br label %54

42:                                               ; preds = %31, %42
  %43 = phi i32 [ %45, %42 ], [ %32, %31 ]
  %44 = load i8*, i8** %17, align 8
  %45 = udiv i32 %43, 10
  %46 = getelementptr inbounds i8, i8* %44, i64 -1
  store i8* %46, i8** %17, align 8
  %47 = urem i32 %45, 10
  %48 = trunc i32 %47 to i8
  %49 = or i8 %48, 48
  store i8 %49, i8* %46, align 1
  %50 = icmp ugt i32 %43, 99
  br i1 %50, label %42, label %51

51:                                               ; preds = %42, %31
  %52 = bitcast i8** %17 to i64*
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %51, %38, %40
  %55 = phi i64 [ %41, %40 ], [ %53, %51 ], [ %39, %38 ]
  %56 = ptrtoint i8* %19 to i64
  %57 = sub i64 %56, %55
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %18, align 8
  %59 = inttoptr i64 %55 to i8*
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %59, i32 %58) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %61, align 8
  %62 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #16
  %65 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #16
  %66 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 13
  %71 = icmp slt i32 %2, 0
  %72 = sub i32 0, %2
  %73 = select i1 %71, i32 %72, i32 %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 32, i1 false) #16
  store i8* %67, i8** %68, align 8
  %74 = urem i32 %73, 10
  %75 = udiv i32 %73, 10
  %76 = trunc i32 %74 to i8
  %77 = or i8 %76, 48
  store i8 %77, i8* %67, align 4
  %78 = icmp ugt i32 %73, 9
  br i1 %78, label %79, label %101

79:                                               ; preds = %54
  %80 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  store i8* %80, i8** %68, align 8
  %81 = urem i32 %75, 10
  %82 = trunc i32 %81 to i8
  %83 = or i8 %82, 48
  store i8 %83, i8* %80, align 1
  %84 = icmp ugt i32 %73, 99
  br i1 %84, label %85, label %101

85:                                               ; preds = %79
  %86 = udiv i32 %73, 100
  %87 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %87, i8** %68, align 8
  %88 = urem i32 %86, 10
  %89 = trunc i32 %88 to i8
  %90 = or i8 %89, 48
  store i8 %90, i8* %87, align 2
  %91 = icmp ugt i32 %73, 999
  br i1 %91, label %92, label %101

92:                                               ; preds = %85, %92
  %93 = phi i32 [ %95, %92 ], [ %86, %85 ]
  %94 = load i8*, i8** %68, align 8
  %95 = udiv i32 %93, 10
  %96 = getelementptr inbounds i8, i8* %94, i64 -1
  store i8* %96, i8** %68, align 8
  %97 = urem i32 %95, 10
  %98 = trunc i32 %97 to i8
  %99 = or i8 %98, 48
  store i8 %99, i8* %96, align 1
  %100 = icmp ugt i32 %93, 99
  br i1 %100, label %92, label %101

101:                                              ; preds = %92, %85, %79, %54
  br i1 %71, label %102, label %105

102:                                              ; preds = %101
  %103 = load i8*, i8** %68, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 -1
  store i8* %104, i8** %68, align 8
  store i8 45, i8* %104, align 1
  br label %105

105:                                              ; preds = %101, %102
  %106 = bitcast i8** %68 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = ptrtoint i8* %70 to i64
  %109 = sub i64 %108, %107
  %110 = trunc i64 %109 to i32
  store i32 %110, i32* %69, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %111, i32 %110) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #16
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %113, align 8
  %114 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %12)
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  %116 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #16
  %117 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %118 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %9) #16
  %119 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %11) #16
  %120 = bitcast %"class.blink::Platform"* %117 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %121 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %121, i64 36
  %123 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %122, align 8
  call void %123(%"class.blink::WebString"* nonnull sret %4, %"class.blink::Platform"* %117, i32 25051, %"class.blink::WebString"* nonnull dereferenceable(8) %5, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #16
  %124 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #16
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %105
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #16
  br label %140

140:                                              ; preds = %105, %136, %139
  %141 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #16
  br label %155

155:                                              ; preds = %140, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #16
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #16
  br label %171

171:                                              ; preds = %155, %167, %170
  %172 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #16
  br label %186

186:                                              ; preds = %171, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret %"class.WTF::StringImpl"* %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale29ValidationMessageTooShortTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter.34", align 8
  %9 = alloca %"class.blink::WebString", align 8
  %10 = alloca %"class.blink::WebString", align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %13 = alloca %"class.WTF::IntegerToStringConverter.34", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = icmp eq i32 %1, 1
  br i1 %22, label %23, label %156

23:                                               ; preds = %3
  %24 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %13, i64 0, i32 0, i64 11
  %28 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %13, i64 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %13, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false) #16
  store i8* %27, i8** %28, align 8
  store i8 49, i8* %27, align 1
  store i32 1, i32* %29, align 8
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %27, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #16
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %15)
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #16
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 12
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 2
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 3
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 13
  %41 = icmp slt i32 %2, 0
  %42 = sub i32 0, %2
  %43 = select i1 %41, i32 %42, i32 %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false) #16
  store i8* %37, i8** %38, align 8
  %44 = urem i32 %43, 10
  %45 = udiv i32 %43, 10
  %46 = trunc i32 %44 to i8
  %47 = or i8 %46, 48
  store i8 %47, i8* %37, align 4
  %48 = icmp ugt i32 %43, 9
  br i1 %48, label %49, label %71

49:                                               ; preds = %23
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 11
  store i8* %50, i8** %38, align 8
  %51 = urem i32 %45, 10
  %52 = trunc i32 %51 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %50, align 1
  %54 = icmp ugt i32 %43, 99
  br i1 %54, label %55, label %71

55:                                               ; preds = %49
  %56 = udiv i32 %43, 100
  %57 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 10
  store i8* %57, i8** %38, align 8
  %58 = urem i32 %56, 10
  %59 = trunc i32 %58 to i8
  %60 = or i8 %59, 48
  store i8 %60, i8* %57, align 2
  %61 = icmp ugt i32 %43, 999
  br i1 %61, label %62, label %71

62:                                               ; preds = %55, %62
  %63 = phi i32 [ %65, %62 ], [ %56, %55 ]
  %64 = load i8*, i8** %38, align 8
  %65 = udiv i32 %63, 10
  %66 = getelementptr inbounds i8, i8* %64, i64 -1
  store i8* %66, i8** %38, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %63, 99
  br i1 %70, label %62, label %71

71:                                               ; preds = %62, %55, %49, %23
  br i1 %41, label %72, label %75

72:                                               ; preds = %71
  %73 = load i8*, i8** %38, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 -1
  store i8* %74, i8** %38, align 8
  store i8 45, i8* %74, align 1
  br label %75

75:                                               ; preds = %71, %72
  %76 = bitcast i8** %38 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint i8* %40 to i64
  %79 = sub i64 %78, %77
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %39, align 8
  %81 = inttoptr i64 %77 to i8*
  %82 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %81, i32 %80) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #16
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %17)
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  %86 = bitcast %"class.blink::WebString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #16
  %87 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %88 = bitcast %"class.blink::WebString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %14) #16
  %89 = bitcast %"class.blink::WebString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %16) #16
  %90 = bitcast %"class.blink::Platform"* %87 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %91 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %91, i64 36
  %93 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %92, align 8
  call void %93(%"class.blink::WebString"* nonnull sret %9, %"class.blink::Platform"* %87, i32 25052, %"class.blink::WebString"* nonnull dereferenceable(8) %10, %"class.blink::WebString"* nonnull dereferenceable(8) %11) #16
  %94 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %9) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %9) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #16
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %75
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #16
  br label %110

110:                                              ; preds = %75, %106, %109
  %111 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #16
  br label %125

125:                                              ; preds = %110, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #16
  br label %141

141:                                              ; preds = %125, %137, %140
  %142 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %142, label %330, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %330

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #16
  br label %330

156:                                              ; preds = %3
  %157 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #16
  %158 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #16
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #16
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 11
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 2
  %162 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 3
  %163 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 32, i1 false) #16
  store i8* %160, i8** %161, align 8
  %164 = urem i32 %1, 10
  %165 = udiv i32 %1, 10
  %166 = trunc i32 %164 to i8
  %167 = or i8 %166, 48
  store i8 %167, i8* %160, align 1
  %168 = icmp ugt i32 %1, 9
  br i1 %168, label %169, label %184

169:                                              ; preds = %156
  %170 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 10
  store i8* %170, i8** %161, align 8
  %171 = urem i32 %165, 10
  %172 = trunc i32 %171 to i8
  %173 = or i8 %172, 48
  store i8 %173, i8* %170, align 2
  %174 = icmp ugt i32 %1, 99
  br i1 %174, label %175, label %182

175:                                              ; preds = %169
  %176 = udiv i32 %1, 100
  %177 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.34", %"class.WTF::IntegerToStringConverter.34"* %8, i64 0, i32 0, i64 9
  store i8* %177, i8** %161, align 8
  %178 = urem i32 %176, 10
  %179 = trunc i32 %178 to i8
  %180 = or i8 %179, 48
  store i8 %180, i8* %177, align 1
  %181 = icmp ugt i32 %1, 999
  br i1 %181, label %186, label %195

182:                                              ; preds = %169
  %183 = ptrtoint i8* %170 to i64
  br label %198

184:                                              ; preds = %156
  %185 = ptrtoint i8* %160 to i64
  br label %198

186:                                              ; preds = %175, %186
  %187 = phi i32 [ %189, %186 ], [ %176, %175 ]
  %188 = load i8*, i8** %161, align 8
  %189 = udiv i32 %187, 10
  %190 = getelementptr inbounds i8, i8* %188, i64 -1
  store i8* %190, i8** %161, align 8
  %191 = urem i32 %189, 10
  %192 = trunc i32 %191 to i8
  %193 = or i8 %192, 48
  store i8 %193, i8* %190, align 1
  %194 = icmp ugt i32 %187, 99
  br i1 %194, label %186, label %195

195:                                              ; preds = %186, %175
  %196 = bitcast i8** %161 to i64*
  %197 = load i64, i64* %196, align 8
  br label %198

198:                                              ; preds = %195, %182, %184
  %199 = phi i64 [ %185, %184 ], [ %197, %195 ], [ %183, %182 ]
  %200 = ptrtoint i8* %163 to i64
  %201 = sub i64 %200, %199
  %202 = trunc i64 %201 to i32
  store i32 %202, i32* %162, align 8
  %203 = inttoptr i64 %199 to i8*
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %203, i32 %202) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #16
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %205, align 8
  %206 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %19)
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  %208 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #16
  %209 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #16
  %210 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #16
  %211 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  %212 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %213 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %214 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 13
  %215 = icmp slt i32 %2, 0
  %216 = sub i32 0, %2
  %217 = select i1 %215, i32 %216, i32 %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 32, i1 false) #16
  store i8* %211, i8** %212, align 8
  %218 = urem i32 %217, 10
  %219 = udiv i32 %217, 10
  %220 = trunc i32 %218 to i8
  %221 = or i8 %220, 48
  store i8 %221, i8* %211, align 4
  %222 = icmp ugt i32 %217, 9
  br i1 %222, label %223, label %245

223:                                              ; preds = %198
  %224 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  store i8* %224, i8** %212, align 8
  %225 = urem i32 %219, 10
  %226 = trunc i32 %225 to i8
  %227 = or i8 %226, 48
  store i8 %227, i8* %224, align 1
  %228 = icmp ugt i32 %217, 99
  br i1 %228, label %229, label %245

229:                                              ; preds = %223
  %230 = udiv i32 %217, 100
  %231 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %231, i8** %212, align 8
  %232 = urem i32 %230, 10
  %233 = trunc i32 %232 to i8
  %234 = or i8 %233, 48
  store i8 %234, i8* %231, align 2
  %235 = icmp ugt i32 %217, 999
  br i1 %235, label %236, label %245

236:                                              ; preds = %229, %236
  %237 = phi i32 [ %239, %236 ], [ %230, %229 ]
  %238 = load i8*, i8** %212, align 8
  %239 = udiv i32 %237, 10
  %240 = getelementptr inbounds i8, i8* %238, i64 -1
  store i8* %240, i8** %212, align 8
  %241 = urem i32 %239, 10
  %242 = trunc i32 %241 to i8
  %243 = or i8 %242, 48
  store i8 %243, i8* %240, align 1
  %244 = icmp ugt i32 %237, 99
  br i1 %244, label %236, label %245

245:                                              ; preds = %236, %229, %223, %198
  br i1 %215, label %246, label %249

246:                                              ; preds = %245
  %247 = load i8*, i8** %212, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 -1
  store i8* %248, i8** %212, align 8
  store i8 45, i8* %248, align 1
  br label %249

249:                                              ; preds = %245, %246
  %250 = bitcast i8** %212 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = ptrtoint i8* %214 to i64
  %253 = sub i64 %252, %251
  %254 = trunc i64 %253 to i32
  store i32 %254, i32* %213, align 8
  %255 = inttoptr i64 %251 to i8*
  %256 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %255, i32 %254) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #16
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %257, align 8
  %258 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %21)
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  %260 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #16
  %261 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %262 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %18) #16
  %263 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #16
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %20) #16
  %264 = bitcast %"class.blink::Platform"* %261 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %265 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %265, i64 36
  %267 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32, %"class.blink::WebString"*, %"class.blink::WebString"*)** %266, align 8
  call void %267(%"class.blink::WebString"* nonnull sret %4, %"class.blink::Platform"* %261, i32 25053, %"class.blink::WebString"* nonnull dereferenceable(8) %5, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #16
  %268 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #16
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %249
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #16
  br label %284

284:                                              ; preds = %249, %280, %283
  %285 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #16
  br label %299

299:                                              ; preds = %284, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #16
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #16
  br label %315

315:                                              ; preds = %299, %311, %314
  %316 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %315
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #16
  br label %330

330:                                              ; preds = %329, %326, %315, %155, %152, %141
  %331 = phi i8* [ %25, %141 ], [ %25, %152 ], [ %25, %155 ], [ %158, %315 ], [ %158, %326 ], [ %158, %329 ]
  %332 = phi i8* [ %24, %141 ], [ %24, %152 ], [ %24, %155 ], [ %157, %315 ], [ %157, %326 ], [ %157, %329 ]
  %333 = phi %"class.WTF::StringImpl"* [ %94, %141 ], [ %94, %152 ], [ %94, %155 ], [ %268, %315 ], [ %268, %326 ], [ %268, %329 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #16
  ret %"class.WTF::StringImpl"* %333
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale16WeekFormatInLDMLEv(%"class.blink::Locale"* nocapture readnone) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::WebString", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.blink::WebString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #16
  %12 = bitcast %"class.blink::Platform"* %11 to void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)***
  %13 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)**, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)** %13, i64 34
  %15 = load void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)*, void (%"class.blink::WebString"*, %"class.blink::Platform"*, i32)** %14, align 8
  call void %15(%"class.blink::WebString"* nonnull sret %2, %"class.blink::Platform"* %11, i32 25020) #16
  %16 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %2) #16
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %9, align 8
  %17 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %20 = bitcast %union.anon* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %24, label %195, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::StringView"* %6 to i8*
  %33 = bitcast %"class.WTF::StringView"* %6 to i64*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %39

36:                                               ; preds = %166, %25
  %37 = phi i32 [ 0, %25 ], [ %167, %166 ]
  %38 = icmp ugt i32 %27, %37
  br i1 %38, label %174, label %195

39:                                               ; preds = %171, %29
  %40 = phi %"class.WTF::StringImpl"* [ %16, %29 ], [ %173, %171 ]
  %41 = phi i32 [ 1, %29 ], [ %169, %171 ]
  %42 = phi i32 [ 0, %29 ], [ %172, %171 ]
  %43 = phi i32 [ 0, %29 ], [ %167, %171 ]
  %44 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %44, label %166, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp ugt i32 %47, %42
  br i1 %48, label %49, label %166

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  br i1 %53, label %61, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.WTF::StringImpl"* %54 to i8*
  %57 = zext i32 %42 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %66

61:                                               ; preds = %49
  %62 = bitcast %"class.WTF::StringImpl"* %54 to i16*
  %63 = zext i32 %42 to i64
  %64 = getelementptr inbounds i16, i16* %62, i64 %63
  %65 = load i16, i16* %64, align 2
  br label %66

66:                                               ; preds = %55, %61
  %67 = phi i16 [ %60, %55 ], [ %65, %61 ]
  %68 = icmp eq i16 %67, 36
  %69 = icmp ugt i32 %47, %41
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %166

71:                                               ; preds = %66
  %72 = load atomic i32, i32* %50 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.WTF::StringImpl"* %54 to i8*
  %77 = zext i32 %41 to i64
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  br label %86

81:                                               ; preds = %71
  %82 = bitcast %"class.WTF::StringImpl"* %54 to i16*
  %83 = zext i32 %41 to i64
  %84 = getelementptr inbounds i16, i16* %82, i64 %83
  %85 = load i16, i16* %84, align 2
  br label %86

86:                                               ; preds = %75, %81
  %87 = phi i16 [ %80, %75 ], [ %85, %81 ]
  %88 = icmp eq i16 %87, 49
  br i1 %88, label %107, label %89

89:                                               ; preds = %86
  %90 = load atomic i32, i32* %50 monotonic, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.WTF::StringImpl"* %54 to i8*
  %95 = zext i32 %41 to i64
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  br label %104

99:                                               ; preds = %89
  %100 = bitcast %"class.WTF::StringImpl"* %54 to i16*
  %101 = zext i32 %41 to i64
  %102 = getelementptr inbounds i16, i16* %100, i64 %101
  %103 = load i16, i16* %102, align 2
  br label %104

104:                                              ; preds = %93, %99
  %105 = phi i16 [ %98, %93 ], [ %103, %99 ]
  %106 = icmp eq i16 %105, 50
  br i1 %106, label %107, label %166

107:                                              ; preds = %104, %86
  %108 = icmp ugt i32 %42, %43
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  br label %131

110:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %111 = sub i32 %42, %43
  %112 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 %43, i32 %111) #16
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZN5blink14DateTimeFormat14QuoteAndappendERKN3WTF6StringERNS1_13StringBuilderE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %4) #16
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #16
  br label %128

128:                                              ; preds = %127, %124, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %157, label %131

131:                                              ; preds = %109, %128
  %132 = phi %"class.WTF::StringImpl"* [ %40, %109 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp ugt i32 %134, %41
  br i1 %135, label %136, label %157

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 1
  br i1 %140, label %148, label %142

142:                                              ; preds = %136
  %143 = bitcast %"class.WTF::StringImpl"* %141 to i8*
  %144 = zext i32 %41 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i16
  br label %153

148:                                              ; preds = %136
  %149 = bitcast %"class.WTF::StringImpl"* %141 to i16*
  %150 = zext i32 %41 to i64
  %151 = getelementptr inbounds i16, i16* %149, i64 %150
  %152 = load i16, i16* %151, align 2
  br label %153

153:                                              ; preds = %142, %148
  %154 = phi i16 [ %147, %142 ], [ %152, %148 ]
  %155 = icmp eq i16 %154, 49
  %156 = select i1 %155, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)
  br label %157

157:                                              ; preds = %153, %128, %131
  %158 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %131 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %128 ], [ %156, %153 ]
  %159 = call i64 @strlen(i8* nonnull %158) #18
  %160 = icmp ult i64 %159, 4294967296
  br i1 %160, label %162, label %161, !prof !4

161:                                              ; preds = %157
  call void @llvm.trap() #16
  unreachable

162:                                              ; preds = %157
  %163 = trunc i64 %159 to i32
  %164 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %164, i64* %33, align 8
  store i8* %158, i8** %34, align 8
  store i32 %163, i32* %35, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  %165 = add nuw i32 %42, 2
  br label %166

166:                                              ; preds = %39, %45, %66, %104, %162
  %167 = phi i32 [ %165, %162 ], [ %43, %104 ], [ %43, %66 ], [ %43, %45 ], [ %43, %39 ]
  %168 = phi i32 [ %41, %162 ], [ %42, %104 ], [ %42, %66 ], [ %42, %45 ], [ %42, %39 ]
  %169 = add i32 %168, 2
  %170 = icmp ult i32 %169, %27
  br i1 %170, label %171, label %36

171:                                              ; preds = %166
  %172 = add i32 %168, 1
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %39

174:                                              ; preds = %36
  %175 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #16
  %176 = sub i32 %27, %37
  %177 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 %37, i32 %176) #16
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %178, align 8
  call void @_ZN5blink14DateTimeFormat14QuoteAndappendERKN3WTF6StringERNS1_13StringBuilderE(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %4) #16
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #16
  br label %194

194:                                              ; preds = %174, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #16
  br label %195

195:                                              ; preds = %1, %194, %36
  %196 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #16
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #16
  br label %212

212:                                              ; preds = %195, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #16
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #16
  br label %228

228:                                              ; preds = %212, %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret %"class.WTF::StringImpl"* %196
}

declare void @_ZN5blink14DateTimeFormat14QuoteAndappendERKN3WTF6StringERNS1_13StringBuilderE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6Locale13SetLocaleDataERKN3WTF6VectorINS1_6StringELj12ENS1_18PartitionAllocatorEEERKS3_S9_S9_S9_(%"class.blink::Locale"*, %"class.WTF::Vector.12"* dereferenceable(112), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %195

16:                                               ; preds = %239, %6
  %17 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #16
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #16
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %16
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %17 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #16
  br label %57

57:                                               ; preds = %38, %53, %56
  %58 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 3
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #16
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #16
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %77, %62, %57
  %80 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %81 = bitcast %"class.WTF::String"* %58 to i64*
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  store i64 %80, i64* %81, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #16
  br label %98

98:                                               ; preds = %79, %94, %97
  %99 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #16
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %108
  tail call void @llvm.trap() #16
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %118, %103, %98
  %121 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %122 = bitcast %"class.WTF::String"* %99 to i64*
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #16
  br label %139

139:                                              ; preds = %120, %135, %138
  %140 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 5
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %161, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #16
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !2

158:                                              ; preds = %149
  tail call void @llvm.trap() #16
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %161

161:                                              ; preds = %159, %144, %139
  %162 = ptrtoint %"class.WTF::StringImpl"* %142 to i64
  %163 = bitcast %"class.WTF::String"* %140 to i64*
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  store i64 %162, i64* %163, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #16
  br label %180

180:                                              ; preds = %161, %176, %179
  %181 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 7
  store i8 1, i8* %181, align 8
  %182 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %182) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 48, i1 false)
  %183 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %185 = bitcast %union.anon* %184 to i8*
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %187, align 4
  %188 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %188, align 1
  %189 = bitcast %"class.WTF::StringView"* %8 to i8*
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %192 = bitcast i8** %191 to %"class.WTF::StringImpl"**
  %193 = bitcast %"class.WTF::StringView"* %8 to i64*
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  br label %342

195:                                              ; preds = %6, %239
  %196 = phi i64 [ %240, %239 ], [ 0, %6 ]
  %197 = trunc i64 %196 to i32
  %198 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %1, i32 %197) #16
  %199 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 %196
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %198, i64 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %220, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = zext i32 %210 to i33
  %212 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %211, i33 1) #16
  %213 = extractvalue { i33, i1 } %212, 1
  %214 = extractvalue { i33, i1 } %212, 0
  %215 = icmp slt i33 %214, 0
  %216 = or i1 %213, %215
  br i1 %216, label %217, label %218, !prof !2

217:                                              ; preds = %208
  tail call void @llvm.trap() #16
  unreachable

218:                                              ; preds = %208
  %219 = trunc i33 %214 to i32
  store i32 %219, i32* %209, align 4
  br label %220

220:                                              ; preds = %218, %203, %195
  %221 = ptrtoint %"class.WTF::StringImpl"* %201 to i64
  %222 = bitcast %"class.WTF::String"* %199 to i64*
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  store i64 %221, i64* %222, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #16
  br label %239

239:                                              ; preds = %220, %235, %238
  %240 = add nuw nsw i64 %196, 1
  %241 = load i32, i32* %13, align 4
  %242 = zext i32 %241 to i64
  %243 = icmp ult i64 %240, %242
  br i1 %243, label %195, label %16

244:                                              ; preds = %353
  %245 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #16
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %248, label %252

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %249, align 8
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %251 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %250, i64* %251, align 8
  br label %259

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %253, align 8
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 1
  %257 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %258 = bitcast i8** %257 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %258, align 8
  br label %259

259:                                              ; preds = %248, %252
  %260 = phi i32 [ %255, %252 ], [ 0, %248 ]
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %260, i32* %261, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #16
  %262 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #16
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %265, label %269

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %266, align 8
  %267 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %268 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %267, i64* %268, align 8
  br label %276

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %270, align 8
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 1
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %275 = bitcast i8** %274 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %275, align 8
  br label %276

276:                                              ; preds = %265, %269
  %277 = phi i32 [ %272, %269 ], [ 0, %265 ]
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %277, i32* %278, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #16
  %279 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #16
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %283, align 8
  %284 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %285 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %284, i64* %285, align 8
  br label %293

286:                                              ; preds = %276
  %287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 1
  %291 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %292 = bitcast i8** %291 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %292, align 8
  br label %293

293:                                              ; preds = %282, %286
  %294 = phi i32 [ %289, %286 ], [ 0, %282 ]
  %295 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %294, i32* %295, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #16
  %296 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #16
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %299, label %303

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %300, align 8
  %301 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %302 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %301, i64* %302, align 8
  br label %310

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %304, align 8
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 1
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %309 = bitcast i8** %308 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %307, %"class.WTF::StringImpl"** %309, align 8
  br label %310

310:                                              ; preds = %299, %303
  %311 = phi i32 [ %306, %303 ], [ 0, %299 ]
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %311, i32* %312, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #16
  %313 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #16
  %314 = ptrtoint %"class.WTF::StringImpl"* %313 to i64
  %315 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 6
  %316 = bitcast %"class.WTF::String"* %315 to i64*
  %317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %315, i64 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  store i64 %314, i64* %316, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %310
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #16
  br label %333

333:                                              ; preds = %332, %329, %310
  %334 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 8
  store i8 0, i8* %334, align 1
  %335 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 10, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %404, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 1
  br i1 %341, label %357, label %404

342:                                              ; preds = %180, %353
  %343 = phi i64 [ 0, %180 ], [ %355, %353 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #16
  %344 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 %343, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  store i8* null, i8** %191, align 8
  %348 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %348, i64* %193, align 8
  br label %353

349:                                              ; preds = %342
  store %"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"** %190, align 8
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 1
  store %"class.WTF::StringImpl"* %352, %"class.WTF::StringImpl"** %192, align 8
  br label %353

353:                                              ; preds = %349, %347
  %354 = phi i32 [ %351, %349 ], [ 0, %347 ]
  store i32 %354, i32* %194, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #16
  %355 = add nuw nsw i64 %343, 1
  %356 = icmp eq i64 %355, 11
  br i1 %356, label %244, label %342

357:                                              ; preds = %338
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %364, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = icmp ult i32 %362, 2
  br i1 %363, label %364, label %404

364:                                              ; preds = %357, %360
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %404, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = icmp eq i32 %369, 1
  br i1 %370, label %371, label %404

371:                                              ; preds = %367
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %372, null
  br i1 %373, label %378, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %404

378:                                              ; preds = %371, %374
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %385, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %404

385:                                              ; preds = %378, %381
  %386 = bitcast %"class.blink::Locale"* %0 to i1 (%"class.blink::Locale"*)***
  %387 = load i1 (%"class.blink::Locale"*)**, i1 (%"class.blink::Locale"*)*** %386, align 8
  %388 = getelementptr inbounds i1 (%"class.blink::Locale"*)*, i1 (%"class.blink::Locale"*)** %387, i64 14
  %389 = load i1 (%"class.blink::Locale"*)*, i1 (%"class.blink::Locale"*)** %388, align 8
  %390 = call zeroext i1 %389(%"class.blink::Locale"* %0) #16
  br i1 %390, label %404, label %391

391:                                              ; preds = %385
  store i8 1, i8* %334, align 1
  %392 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 0, i32 0, i32 0
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %392, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %403, label %399

395:                                              ; preds = %399
  %396 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 1, i32 0, i32 0
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %403, label %421

399:                                              ; preds = %391
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 1
  %401 = load i32, i32* %400, align 4
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %395, label %403

403:                                              ; preds = %485, %481, %477, %473, %469, %465, %461, %457, %453, %449, %445, %441, %437, %433, %429, %425, %421, %395, %391, %399
  store i8 0, i8* %334, align 1
  br label %404

404:                                              ; preds = %485, %364, %333, %403, %385, %381, %374, %367, %360, %338
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #16
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %420, label %407

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #16
  br label %420

420:                                              ; preds = %404, %416, %419
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %182) #16
  ret void

421:                                              ; preds = %395
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, 1
  br i1 %424, label %425, label %403

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 2, i32 0, i32 0
  %427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  %428 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %428, label %403, label %429

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %433, label %403

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 3, i32 0, i32 0
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %434, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %403, label %437

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = icmp eq i32 %439, 1
  br i1 %440, label %441, label %403

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 4, i32 0, i32 0
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %403, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %447, 1
  br i1 %448, label %449, label %403

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 5, i32 0, i32 0
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %450, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %403, label %453

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 1
  %455 = load i32, i32* %454, align 4
  %456 = icmp eq i32 %455, 1
  br i1 %456, label %457, label %403

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 6, i32 0, i32 0
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %403, label %461

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = icmp eq i32 %463, 1
  br i1 %464, label %465, label %403

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 7, i32 0, i32 0
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %403, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = icmp eq i32 %471, 1
  br i1 %472, label %473, label %403

473:                                              ; preds = %469
  %474 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 8, i32 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %403, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 1
  %479 = load i32, i32* %478, align 4
  %480 = icmp eq i32 %479, 1
  br i1 %480, label %481, label %403

481:                                              ; preds = %477
  %482 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 9, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %483, null
  br i1 %484, label %403, label %485

485:                                              ; preds = %481
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %404, label %403
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale26DetectSignAndGetDigitRangeERKN3WTF6StringERbRjS6_(%"class.blink::Locale"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), i8* nocapture dereferenceable(1), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  store i32 0, i32* %3, align 4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %5, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %5 ]
  store i32 %19, i32* %4, align 4
  %20 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  br label %115

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %109

37:                                               ; preds = %29, %33
  %38 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #16
  %39 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %44, i64* %45, align 8
  br label %53

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %52 = bitcast i8** %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %52, align 8
  br label %53

53:                                               ; preds = %42, %46
  %54 = phi i32 [ %49, %46 ], [ 0, %42 ]
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %54, i32* %55, align 8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = icmp eq i32 %54, 0
  %60 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  br i1 %59, label %64, label %106

61:                                               ; preds = %53
  %62 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %56, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #16
  %63 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #16
  br i1 %62, label %64, label %106

64:                                               ; preds = %58, %61
  %65 = phi i8* [ %60, %58 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %71, i64* %72, align 8
  br label %80

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  br label %80

80:                                               ; preds = %69, %73
  %81 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %81, i32* %82, align 8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = icmp eq i32 %81, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br i1 %86, label %89, label %108

87:                                               ; preds = %80
  %88 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %83, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br i1 %88, label %89, label %108

89:                                               ; preds = %85, %87
  store i8 0, i8* %2, align 1
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  br label %95

95:                                               ; preds = %89, %92
  %96 = phi i32 [ %94, %92 ], [ 0, %89 ]
  store i32 %96, i32* %3, align 4
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  br label %102

102:                                              ; preds = %95, %99
  %103 = phi i32 [ %101, %99 ], [ 0, %95 ]
  %104 = load i32, i32* %4, align 4
  %105 = sub i32 %104, %103
  store i32 %105, i32* %4, align 4
  br label %250

106:                                              ; preds = %58, %61
  %107 = phi i8* [ %60, %58 ], [ %63, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br label %108

108:                                              ; preds = %85, %106, %87
  store i8 1, i8* %2, align 1
  br label %250

109:                                              ; preds = %33
  %110 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #16
  br i1 %22, label %111, label %115

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %112, align 8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %113, i64* %114, align 8
  br label %123

115:                                              ; preds = %27, %109
  %116 = phi i8* [ %28, %27 ], [ %110, %109 ]
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %122 = bitcast i8** %121 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %122, align 8
  br label %123

123:                                              ; preds = %111, %115
  %124 = phi i8* [ %116, %115 ], [ %110, %111 ]
  %125 = phi i32 [ %119, %115 ], [ 0, %111 ]
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %125, i32* %126, align 8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = icmp eq i32 %125, 0
  %131 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #16
  br i1 %130, label %135, label %177

132:                                              ; preds = %123
  %133 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %127, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #16
  %134 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #16
  br i1 %133, label %135, label %177

135:                                              ; preds = %129, %132
  %136 = phi i8* [ %131, %129 ], [ %134, %132 ]
  %137 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 5, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %141, align 8
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %143 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %142, i64* %143, align 8
  br label %151

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 1
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %150, align 8
  br label %151

151:                                              ; preds = %140, %144
  %152 = phi i32 [ %147, %144 ], [ 0, %140 ]
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %152, i32* %153, align 8
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #16
  br i1 %157, label %160, label %179

158:                                              ; preds = %151
  %159 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %154, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #16
  br i1 %159, label %160, label %179

160:                                              ; preds = %156, %158
  store i8 1, i8* %2, align 1
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 1
  %165 = load i32, i32* %164, align 4
  br label %166

166:                                              ; preds = %160, %163
  %167 = phi i32 [ %165, %163 ], [ 0, %160 ]
  store i32 %167, i32* %3, align 4
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi i32 [ %172, %170 ], [ 0, %166 ]
  %175 = load i32, i32* %4, align 4
  %176 = sub i32 %175, %174
  store i32 %176, i32* %4, align 4
  br label %250

177:                                              ; preds = %129, %132
  %178 = phi i8* [ %131, %129 ], [ %134, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #16
  br label %179

179:                                              ; preds = %156, %177, %158
  store i8 0, i8* %2, align 1
  %180 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #16
  %181 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %184, label %188

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %185, align 8
  %186 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %187 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %186, i64* %187, align 8
  br label %195

188:                                              ; preds = %179
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %189, align 8
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 1
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %194 = bitcast i8** %193 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %194, align 8
  br label %195

195:                                              ; preds = %184, %188
  %196 = phi i32 [ %191, %188 ], [ 0, %184 ]
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %196, i32* %197, align 8
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %200, label %203

200:                                              ; preds = %195
  %201 = icmp eq i32 %196, 0
  %202 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #16
  br i1 %201, label %206, label %248

203:                                              ; preds = %195
  %204 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %198, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #16
  %205 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #16
  br i1 %204, label %206, label %248

206:                                              ; preds = %200, %203
  %207 = phi i8* [ %202, %200 ], [ %205, %203 ]
  %208 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 3, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %211, label %215

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %212, align 8
  %213 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %214 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %213, i64* %214, align 8
  br label %222

215:                                              ; preds = %206
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 1
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %221 = bitcast i8** %220 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %221, align 8
  br label %222

222:                                              ; preds = %211, %215
  %223 = phi i32 [ %218, %215 ], [ 0, %211 ]
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %223, i32* %224, align 8
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %227, label %229

227:                                              ; preds = %222
  %228 = icmp eq i32 %223, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #16
  br i1 %228, label %231, label %250

229:                                              ; preds = %222
  %230 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %225, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #16
  br i1 %230, label %231, label %250

231:                                              ; preds = %227, %229
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %231, %234
  %238 = phi i32 [ %236, %234 ], [ 0, %231 ]
  store i32 %238, i32* %3, align 4
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  br label %244

244:                                              ; preds = %237, %241
  %245 = phi i32 [ %243, %241 ], [ 0, %237 ]
  %246 = load i32, i32* %4, align 4
  %247 = sub i32 %246, %245
  store i32 %247, i32* %4, align 4
  br label %250

248:                                              ; preds = %200, %203
  %249 = phi i8* [ %202, %200 ], [ %205, %203 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #16
  br label %250

250:                                              ; preds = %227, %108, %102, %244, %173, %229, %248
  %251 = phi i1 [ false, %248 ], [ false, %229 ], [ true, %173 ], [ true, %244 ], [ true, %102 ], [ true, %108 ], [ false, %227 ]
  ret i1 %251
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink6Locale25MatchedDecimalSymbolIndexERKN3WTF6StringERj(%"class.blink::Locale"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture dereferenceable(4)) local_unnamed_addr #7 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %11 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %12 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  br label %13

13:                                               ; preds = %72, %3
  %14 = phi i64 [ 0, %3 ], [ %73, %72 ]
  %15 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 %14, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %72, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %72, label %22

22:                                               ; preds = %18
  %23 = add i32 %20, %4
  br i1 %7, label %26, label %24

24:                                               ; preds = %22
  %25 = load i32, i32* %8, align 4
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i32 [ %25, %24 ], [ 0, %22 ]
  %28 = icmp ugt i32 %23, %27
  br i1 %28, label %72, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %32 = bitcast %"class.WTF::StringImpl"* %31 to i8*
  %33 = bitcast %"class.WTF::StringImpl"* %31 to i16*
  %34 = zext i32 %20 to i64
  br label %35

35:                                               ; preds = %68, %29
  %36 = phi i64 [ %71, %68 ], [ 0, %29 ]
  %37 = icmp eq i64 %36, %34
  br i1 %37, label %75, label %38

38:                                               ; preds = %35
  %39 = trunc i64 %36 to i32
  %40 = add i32 %4, %39
  br i1 %7, label %56, label %41

41:                                               ; preds = %38
  %42 = load i32, i32* %8, align 4
  %43 = icmp ugt i32 %42, %40
  br i1 %43, label %44, label %56

44:                                               ; preds = %41
  %45 = load atomic i32, i32* %9 monotonic, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = zext i32 %40 to i64
  br i1 %47, label %53, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %11, i64 %48
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  br label %56

53:                                               ; preds = %44
  %54 = getelementptr inbounds i16, i16* %12, i64 %48
  %55 = load i16, i16* %54, align 2
  br label %56

56:                                               ; preds = %53, %49, %41, %38
  %57 = phi i16 [ 0, %41 ], [ 0, %38 ], [ %52, %49 ], [ %55, %53 ]
  %58 = load atomic i32, i32* %30 monotonic, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %32, i64 %36
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  br label %68

65:                                               ; preds = %56
  %66 = getelementptr inbounds i16, i16* %33, i64 %36
  %67 = load i16, i16* %66, align 2
  br label %68

68:                                               ; preds = %65, %61
  %69 = phi i16 [ %64, %61 ], [ %67, %65 ]
  %70 = icmp eq i16 %57, %69
  %71 = add nuw nsw i64 %36, 1
  br i1 %70, label %35, label %72

72:                                               ; preds = %68, %13, %26, %18
  %73 = add nuw nsw i64 %14, 1
  %74 = icmp eq i64 %73, 12
  br i1 %74, label %77, label %13

75:                                               ; preds = %35
  %76 = trunc i64 %14 to i32
  store i32 %23, i32* %2, align 4
  br label %77

77:                                               ; preds = %72, %75
  %78 = phi i32 [ %76, %75 ], [ 12, %72 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale26ConvertFromLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = bitcast %"class.blink::Locale"* %0 to void (%"class.blink::Locale"*)***
  %11 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %11, i64 17
  %13 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %12, align 8
  tail call void %13(%"class.blink::Locale"* %0) #16
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"* %1, i1 (i16)* nonnull @_ZN3WTF12IsASCIISpaceIDsEEbT_) #16
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  %20 = icmp eq %"class.WTF::StringImpl"* %16, null
  %21 = or i1 %20, %19
  %22 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  br i1 %21, label %27, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %2
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  br label %282

28:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #16
  store i8 -86, i8* %5, align 1
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #16
  store i32 -1431655766, i32* %6, align 4
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #16
  store i32 -1431655766, i32* %7, align 4
  %31 = call zeroext i1 @_ZN5blink6Locale26DetectSignAndGetDigitRangeERKN3WTF6StringERbRjS6_(%"class.blink::Locale"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7)
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  br label %265

33:                                               ; preds = %28
  %34 = load i8, i8* %5, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %66

36:                                               ; preds = %33
  %37 = load i32, i32* %7, align 4
  %38 = load i32, i32* %6, align 4
  %39 = sub i32 %37, %38
  %40 = icmp ugt i32 %39, 1
  br i1 %40, label %41, label %66

41:                                               ; preds = %36
  %42 = load i32, i32* %24, align 4
  %43 = icmp ugt i32 %42, %38
  br i1 %43, label %44, label %66

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  br i1 %48, label %56, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.WTF::StringImpl"* %49 to i8*
  %52 = zext i32 %38 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  br label %61

56:                                               ; preds = %44
  %57 = bitcast %"class.WTF::StringImpl"* %49 to i16*
  %58 = zext i32 %38 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = load i16, i16* %59, align 2
  br label %61

61:                                               ; preds = %50, %56
  %62 = phi i16 [ %55, %50 ], [ %60, %56 ]
  %63 = icmp eq i16 %62, 43
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = add nuw i32 %38, 1
  store i32 %65, i32* %6, align 4
  br label %66

66:                                               ; preds = %41, %33, %64, %61, %36
  %67 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 48, i1 false)
  %68 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %70 = bitcast %union.anon* %69 to i8*
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %72, align 4
  %73 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %73, align 1
  %74 = load i32, i32* %24, align 4
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %8, i32 %74) #16
  br i1 %35, label %76, label %75

75:                                               ; preds = %66
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext 45) #16
  br label %76

76:                                               ; preds = %66, %75
  %77 = load i32, i32* %6, align 4
  %78 = load i32, i32* %7, align 4
  %79 = icmp ult i32 %77, %78
  br i1 %79, label %80, label %191

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %83 = bitcast %"class.WTF::StringImpl"* %82 to i8*
  %84 = bitcast %"class.WTF::StringImpl"* %82 to i16*
  %85 = bitcast i16* %3 to i8*
  %86 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %87 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast %union.anon* %69 to i16**
  %89 = bitcast %union.anon* %69 to %"class.WTF::Vector.1"*
  br label %90

90:                                               ; preds = %80, %188
  %91 = phi i32 [ 0, %80 ], [ %189, %188 ]
  %92 = phi i32 [ %77, %80 ], [ %103, %188 ]
  br label %93

93:                                               ; preds = %148, %90
  %94 = phi i64 [ 0, %90 ], [ %149, %148 ]
  %95 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 %94, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %148, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %148, label %102

102:                                              ; preds = %98
  %103 = add i32 %100, %92
  %104 = load i32, i32* %24, align 4
  %105 = icmp ugt i32 %103, %104
  br i1 %105, label %148, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %109 = bitcast %"class.WTF::StringImpl"* %108 to i8*
  %110 = bitcast %"class.WTF::StringImpl"* %108 to i16*
  %111 = zext i32 %100 to i64
  br label %112

112:                                              ; preds = %144, %106
  %113 = phi i64 [ %147, %144 ], [ 0, %106 ]
  %114 = icmp eq i64 %113, %111
  br i1 %114, label %151, label %115

115:                                              ; preds = %112
  %116 = trunc i64 %113 to i32
  %117 = add i32 %92, %116
  %118 = load i32, i32* %24, align 4
  %119 = icmp ugt i32 %118, %117
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = load atomic i32, i32* %81 monotonic, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = zext i32 %117 to i64
  br i1 %123, label %129, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds i8, i8* %83, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  br label %132

129:                                              ; preds = %120
  %130 = getelementptr inbounds i16, i16* %84, i64 %124
  %131 = load i16, i16* %130, align 2
  br label %132

132:                                              ; preds = %129, %125, %115
  %133 = phi i16 [ 0, %115 ], [ %128, %125 ], [ %131, %129 ]
  %134 = load atomic i32, i32* %107 monotonic, align 4
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds i8, i8* %109, i64 %113
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  br label %144

141:                                              ; preds = %132
  %142 = getelementptr inbounds i16, i16* %110, i64 %113
  %143 = load i16, i16* %142, align 2
  br label %144

144:                                              ; preds = %141, %137
  %145 = phi i16 [ %140, %137 ], [ %143, %141 ]
  %146 = icmp eq i16 %133, %145
  %147 = add nuw nsw i64 %113, 1
  br i1 %146, label %112, label %148

148:                                              ; preds = %144, %102, %98, %93
  %149 = add nuw nsw i64 %94, 1
  %150 = icmp eq i64 %149, 12
  br i1 %150, label %154, label %93

151:                                              ; preds = %112
  %152 = trunc i64 %94 to i32
  %153 = icmp ugt i32 %152, 11
  br i1 %153, label %154, label %155

154:                                              ; preds = %151, %148
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  br label %246

155:                                              ; preds = %151
  switch i32 %152, label %159 [
    i32 10, label %156
    i32 11, label %158
  ]

156:                                              ; preds = %155
  %157 = add i32 %91, 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext 46) #16
  br label %188

158:                                              ; preds = %155
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  br label %246

159:                                              ; preds = %155
  %160 = trunc i64 %94 to i16
  %161 = add nuw nsw i16 %160, 48
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %85)
  store i16 %161, i16* %3, align 2
  %162 = load i8, i8* %72, align 4, !range !3
  %163 = icmp ne i8 %162, 0
  %164 = icmp ult i16 %161, 256
  %165 = and i1 %164, %163
  br i1 %165, label %166, label %168

166:                                              ; preds = %159
  %167 = trunc i16 %161 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext %167) #16
  br label %187

168:                                              ; preds = %159
  %169 = load i8, i8* %73, align 1
  %170 = icmp eq i8 %169, 0
  %171 = or i1 %163, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %168
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %8, i32 1) #16
  br label %173

173:                                              ; preds = %168, %172
  %174 = load i32, i32* %86, align 4
  %175 = load i32, i32* %87, align 8
  %176 = icmp eq i32 %174, %175
  br i1 %176, label %183, label %177, !prof !2

177:                                              ; preds = %173
  %178 = load i16*, i16** %88, align 8
  %179 = zext i32 %174 to i64
  %180 = getelementptr inbounds i16, i16* %178, i64 %179
  store i16 %161, i16* %180, align 2
  %181 = load i32, i32* %86, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %86, align 4
  br label %184

183:                                              ; preds = %173
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %89, i16* nonnull dereferenceable(2) %3) #16
  br label %184

184:                                              ; preds = %183, %177
  %185 = load i32, i32* %71, align 8
  %186 = add i32 %185, 1
  store i32 %186, i32* %71, align 8
  br label %187

187:                                              ; preds = %166, %184
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %85)
  br label %188

188:                                              ; preds = %156, %187
  %189 = phi i32 [ %157, %156 ], [ %91, %187 ]
  %190 = icmp ult i32 %103, %78
  br i1 %190, label %90, label %191

191:                                              ; preds = %188, %76
  %192 = phi i32 [ 0, %76 ], [ %189, %188 ]
  %193 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #16
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %195 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #16
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %243, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp ugt i32 %199, 1
  br i1 %200, label %201, label %243

201:                                              ; preds = %197
  %202 = add i32 %199, -1
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 1
  br i1 %206, label %214, label %208

208:                                              ; preds = %201
  %209 = bitcast %"class.WTF::StringImpl"* %207 to i8*
  %210 = zext i32 %202 to i64
  %211 = getelementptr inbounds i8, i8* %209, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i16
  br label %219

214:                                              ; preds = %201
  %215 = bitcast %"class.WTF::StringImpl"* %207 to i16*
  %216 = zext i32 %202 to i64
  %217 = getelementptr inbounds i16, i16* %215, i64 %216
  %218 = load i16, i16* %217, align 2
  br label %219

219:                                              ; preds = %208, %214
  %220 = phi i16 [ %213, %208 ], [ %218, %214 ]
  %221 = icmp eq i16 %220, 46
  %222 = icmp ult i32 %192, 2
  %223 = and i1 %222, %221
  br i1 %223, label %224, label %243

224:                                              ; preds = %219
  %225 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %9, i32 0, i32 %202) #16
  %226 = ptrtoint %"class.WTF::StringImpl"* %225 to i64
  %227 = bitcast %"class.WTF::String"* %9 to i64*
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  store i64 %226, i64* %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #16
  br label %243

243:                                              ; preds = %191, %197, %219, %242, %239, %224
  %244 = bitcast %"class.WTF::String"* %9 to i64*
  %245 = load i64, i64* %244, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #16
  br label %246

246:                                              ; preds = %158, %154, %243
  %247 = phi %"class.WTF::StringImpl"* [ %16, %243 ], [ null, %158 ], [ null, %154 ]
  %248 = phi i64 [ %245, %243 ], [ %22, %158 ], [ %22, %154 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #16
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #16
  br label %264

264:                                              ; preds = %246, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #16
  br label %265

265:                                              ; preds = %32, %264
  %266 = phi %"class.WTF::StringImpl"* [ null, %32 ], [ %247, %264 ]
  %267 = phi i64 [ %22, %32 ], [ %248, %264 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  %268 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #16
  br label %282

282:                                              ; preds = %27, %265, %278, %281
  %283 = phi i64 [ %22, %27 ], [ %267, %265 ], [ %267, %278 ], [ %267, %281 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %284 = inttoptr i64 %283 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %284
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"*, i1 (i16)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF12IsASCIISpaceIDsEEbT_(i16 zeroext) #8 comdat {
  %2 = icmp ult i16 %0, 33
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = icmp eq i16 %0, 32
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = add nsw i16 %0, -9
  %7 = icmp ult i16 %6, 5
  br label %8

8:                                                ; preds = %3, %5, %1
  %9 = phi i1 [ false, %1 ], [ true, %3 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale28StripInvalidNumberCharactersERKN3WTF6StringES4_(%"class.blink::Locale"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = bitcast %"class.blink::Locale"* %0 to void (%"class.blink::Locale"*)***
  %8 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %8, i64 17
  %10 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %9, align 8
  tail call void %10(%"class.blink::Locale"* %0) #16
  %11 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %3, %21
  %25 = phi i32 [ %23, %21 ], [ 0, %3 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %6, i32 %25) #16
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %27 = bitcast i16* %4 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %union.anon* %13 to i16**
  %31 = bitcast %union.anon* %13 to %"class.WTF::Vector.1"*
  %32 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 6, i32 0, i32 0
  %33 = bitcast i16* %5 to i8*
  br label %34

34:                                               ; preds = %227, %24
  %35 = phi i64 [ %228, %227 ], [ 0, %24 ]
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi i32 [ %40, %38 ], [ 0, %34 ]
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %35, %43
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #16
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #16
  br label %62

62:                                               ; preds = %45, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #16
  ret %"class.WTF::StringImpl"* %46

63:                                               ; preds = %41
  br i1 %37, label %84, label %64

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %35, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  br i1 %73, label %80, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::StringImpl"* %74 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %35
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  br label %84

80:                                               ; preds = %69
  %81 = bitcast %"class.WTF::StringImpl"* %74 to i16*
  %82 = getelementptr inbounds i16, i16* %81, i64 %35
  %83 = load i16, i16* %82, align 2
  br label %84

84:                                               ; preds = %63, %64, %75, %80
  %85 = phi i16 [ 0, %64 ], [ 0, %63 ], [ %79, %75 ], [ %83, %80 ]
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %156, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1
  br i1 %92, label %110, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp ult i16 %85, 256
  %98 = icmp ne i32 %96, 0
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %156

100:                                              ; preds = %94
  %101 = bitcast %"class.WTF::StringImpl"* %93 to i8*
  %102 = and i16 %85, 255
  %103 = zext i16 %102 to i32
  %104 = zext i32 %96 to i64
  %105 = call i8* @memchr(i8* %101, i32 %103, i64 %104) #18
  %106 = icmp eq i8* %105, null
  %107 = ptrtoint i8* %105 to i64
  %108 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %109 = sub i64 %107, %108
  br i1 %106, label %156, label %125

110:                                              ; preds = %88
  %111 = bitcast %"class.WTF::StringImpl"* %93 to i16*
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %156, label %115

115:                                              ; preds = %110
  %116 = zext i32 %113 to i64
  br label %117

117:                                              ; preds = %115, %122
  %118 = phi i64 [ %123, %122 ], [ 0, %115 ]
  %119 = getelementptr inbounds i16, i16* %111, i64 %118
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, %85
  br i1 %121, label %125, label %122

122:                                              ; preds = %117
  %123 = add nuw nsw i64 %118, 1
  %124 = icmp eq i64 %123, %116
  br i1 %124, label %156, label %117

125:                                              ; preds = %117, %100
  %126 = phi i64 [ %109, %100 ], [ %118, %117 ]
  %127 = trunc i64 %126 to i32
  %128 = icmp eq i32 %127, -1
  br i1 %128, label %156, label %129

129:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27)
  store i16 %85, i16* %4, align 2
  %130 = load i8, i8* %16, align 4, !range !3
  %131 = icmp ne i8 %130, 0
  %132 = icmp ult i16 %85, 256
  %133 = and i1 %132, %131
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = trunc i16 %85 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext %135) #16
  br label %155

136:                                              ; preds = %129
  %137 = load i8, i8* %17, align 1
  %138 = icmp eq i8 %137, 0
  %139 = or i1 %131, %138
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %6, i32 1) #16
  br label %141

141:                                              ; preds = %136, %140
  %142 = load i32, i32* %28, align 4
  %143 = load i32, i32* %29, align 8
  %144 = icmp eq i32 %142, %143
  br i1 %144, label %151, label %145, !prof !2

145:                                              ; preds = %141
  %146 = load i16*, i16** %30, align 8
  %147 = zext i32 %142 to i64
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  store i16 %85, i16* %148, align 2
  %149 = load i32, i32* %28, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %28, align 4
  br label %152

151:                                              ; preds = %141
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %31, i16* nonnull dereferenceable(2) %4) #16
  br label %152

152:                                              ; preds = %151, %145
  %153 = load i32, i32* %15, align 8
  %154 = add i32 %153, 1
  store i32 %154, i32* %15, align 8
  br label %155

155:                                              ; preds = %134, %152
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27)
  br label %227

156:                                              ; preds = %122, %110, %100, %94, %84, %125
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %227, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 1
  br i1 %163, label %181, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp ult i16 %85, 256
  %169 = icmp ne i32 %167, 0
  %170 = and i1 %168, %169
  br i1 %170, label %171, label %227

171:                                              ; preds = %165
  %172 = bitcast %"class.WTF::StringImpl"* %164 to i8*
  %173 = and i16 %85, 255
  %174 = zext i16 %173 to i32
  %175 = zext i32 %167 to i64
  %176 = call i8* @memchr(i8* %172, i32 %174, i64 %175) #18
  %177 = icmp eq i8* %176, null
  %178 = ptrtoint i8* %176 to i64
  %179 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  %180 = sub i64 %178, %179
  br i1 %177, label %227, label %196

181:                                              ; preds = %159
  %182 = bitcast %"class.WTF::StringImpl"* %164 to i16*
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %227, label %186

186:                                              ; preds = %181
  %187 = zext i32 %184 to i64
  br label %188

188:                                              ; preds = %186, %193
  %189 = phi i64 [ %194, %193 ], [ 0, %186 ]
  %190 = getelementptr inbounds i16, i16* %182, i64 %189
  %191 = load i16, i16* %190, align 2
  %192 = icmp eq i16 %191, %85
  br i1 %192, label %196, label %193

193:                                              ; preds = %188
  %194 = add nuw nsw i64 %189, 1
  %195 = icmp eq i64 %194, %187
  br i1 %195, label %227, label %188

196:                                              ; preds = %188, %171
  %197 = phi i64 [ %180, %171 ], [ %189, %188 ]
  %198 = trunc i64 %197 to i32
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %227, label %200

200:                                              ; preds = %196
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33)
  store i16 %85, i16* %5, align 2
  %201 = load i8, i8* %16, align 4, !range !3
  %202 = icmp ne i8 %201, 0
  %203 = icmp ult i16 %85, 256
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = trunc i16 %85 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext %206) #16
  br label %226

207:                                              ; preds = %200
  %208 = load i8, i8* %17, align 1
  %209 = icmp eq i8 %208, 0
  %210 = or i1 %202, %209
  br i1 %210, label %211, label %212

211:                                              ; preds = %207
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %6, i32 1) #16
  br label %212

212:                                              ; preds = %207, %211
  %213 = load i32, i32* %28, align 4
  %214 = load i32, i32* %29, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %222, label %216, !prof !2

216:                                              ; preds = %212
  %217 = load i16*, i16** %30, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds i16, i16* %217, i64 %218
  store i16 %85, i16* %219, align 2
  %220 = load i32, i32* %28, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %28, align 4
  br label %223

222:                                              ; preds = %212
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %31, i16* nonnull dereferenceable(2) %5) #16
  br label %223

223:                                              ; preds = %222, %216
  %224 = load i32, i32* %15, align 8
  %225 = add i32 %224, 1
  store i32 %225, i32* %15, align 8
  br label %226

226:                                              ; preds = %205, %223
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33)
  br label %227

227:                                              ; preds = %193, %181, %171, %165, %156, %196, %226, %155
  %228 = add nuw nsw i64 %35, 1
  br label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale25LocalizedDecimalSeparatorEv(%"class.blink::Locale"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::Locale"* %0 to void (%"class.blink::Locale"*)***
  %3 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %3, i64 17
  %5 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %4, align 8
  tail call void %5(%"class.blink::Locale"* %0) #16
  %6 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 10, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #16
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #16
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %1, %9, %24
  ret %"class.WTF::StringImpl"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale29UsesSingleCharNumberFilteringEv(%"class.blink::Locale"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale12IsSignPrefixEDs(%"class.blink::Locale"* nocapture readonly, i16 zeroext) #7 align 2 {
  switch i16 %1, label %3 [
    i16 43, label %52
    i16 45, label %52
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %15, label %21, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  br label %24

21:                                               ; preds = %11
  %22 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %23 = load i16, i16* %22, align 2
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i16 [ %20, %17 ], [ %23, %21 ]
  %26 = icmp eq i16 %25, %1
  br i1 %26, label %52, label %27

27:                                               ; preds = %3, %24, %7
  %28 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %51

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  br i1 %39, label %45, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  br label %48

45:                                               ; preds = %35
  %46 = bitcast %"class.WTF::StringImpl"* %40 to i16*
  %47 = load i16, i16* %46, align 2
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i16 [ %44, %41 ], [ %47, %45 ]
  %50 = icmp eq i16 %49, %1
  br i1 %50, label %52, label %51

51:                                               ; preds = %27, %48, %31
  br label %52

52:                                               ; preds = %48, %24, %2, %2, %51
  %53 = phi i1 [ false, %51 ], [ true, %2 ], [ true, %2 ], [ true, %24 ], [ true, %48 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale15HasTwoSignCharsERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = ptrtoint %"class.blink::Locale"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 56) #19, !noalias !5
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i16)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !5
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.blink::Locale"*, i16)* @_ZN5blink6Locale12IsSignPrefixEDs to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !5
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !5
  %12 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %6, i8** %12, align 8, !alias.scope !5
  %13 = call i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"* %1, %"class.base::RepeatingCallback"* nonnull %3, i32 0) #16
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #16
  %15 = icmp eq i32 %13, -1
  br i1 %15, label %28, label %16

16:                                               ; preds = %2
  %17 = call i8* @_Znwm(i64 56) #19, !noalias !12
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i16)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !12
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.blink::Locale"*, i16)* @_ZN5blink6Locale12IsSignPrefixEDs to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !12
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %5, i64* %22, align 8, !noalias !12
  %23 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !12
  %24 = add nuw i32 %13, 1
  %25 = call i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"* %1, %"class.base::RepeatingCallback"* nonnull %4, i32 %24) #16
  %26 = icmp ne i32 %25, -1
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #16
  br label %28

28:                                               ; preds = %2, %16
  %29 = phi i1 [ %26, %16 ], [ false, %2 ]
  ret i1 %29
}

declare i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"*, %"class.base::RepeatingCallback"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale16HasSignNotAfterEERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = ptrtoint %"class.blink::Locale"* %0 to i64
  %5 = tail call i8* @_Znwm(i64 56) #19, !noalias !19
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %6, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i16)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !19
  %7 = getelementptr inbounds i8, i8* %5, i64 32
  %8 = bitcast i8* %7 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.blink::Locale"*, i16)* @_ZN5blink6Locale12IsSignPrefixEDs to i64), i64 0>, <2 x i64>* %8, align 8, !noalias !19
  %9 = getelementptr inbounds i8, i8* %5, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 %4, i64* %10, align 8, !noalias !19
  %11 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %5, i8** %11, align 8, !alias.scope !19
  %12 = call i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"* %1, %"class.base::RepeatingCallback"* nonnull %3, i32 0) #16
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #16
  switch i32 %12, label %14 [
    i32 -1, label %46
    i32 0, label %44
  ]

14:                                               ; preds = %2
  %15 = add i32 %12, -1
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, %15
  br i1 %22, label %23, label %40

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  br i1 %27, label %35, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  %31 = zext i32 %15 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  br label %40

35:                                               ; preds = %23
  %36 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  %37 = zext i32 %15 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = load i16, i16* %38, align 2
  br label %40

40:                                               ; preds = %14, %19, %29, %35
  %41 = phi i16 [ 0, %19 ], [ 0, %14 ], [ %34, %29 ], [ %39, %35 ]
  %42 = or i16 %41, 32
  %43 = icmp ne i16 %42, 101
  br label %44

44:                                               ; preds = %2, %40
  %45 = phi i1 [ %43, %40 ], [ true, %2 ]
  br label %46

46:                                               ; preds = %2, %44
  %47 = phi i1 [ %45, %44 ], [ false, %2 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale7IsDigitEDs(%"class.blink::Locale"* nocapture readonly, i16 zeroext) local_unnamed_addr #1 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::String", align 8
  store i16 %1, i16* %3, align 2
  %5 = add i16 %1, -48
  %6 = icmp ult i16 %5, 10
  br i1 %6, label %77, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* nonnull %3, i32 1) #16
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %12) #16
  br i1 %13, label %59, label %14

14:                                               ; preds = %7
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %16 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %17) #16
  br i1 %18, label %59, label %19

19:                                               ; preds = %14
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %21 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 2, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %22) #16
  br i1 %23, label %59, label %24

24:                                               ; preds = %19
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 3, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"* %27) #16
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %31 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"* %32) #16
  br i1 %33, label %59, label %34

34:                                               ; preds = %29
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %36 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 5, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"* %37) #16
  br i1 %38, label %59, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %41 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 6, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"* %42) #16
  br i1 %43, label %59, label %44

44:                                               ; preds = %39
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %46 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 7, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"* %47) #16
  br i1 %48, label %59, label %49

49:                                               ; preds = %44
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %51 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 8, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"* %52) #16
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %56 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 9, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %57) #16
  br label %59

59:                                               ; preds = %54, %49, %44, %39, %34, %29, %24, %19, %14, %7
  %60 = phi i1 [ true, %49 ], [ true, %44 ], [ true, %39 ], [ true, %34 ], [ true, %29 ], [ true, %24 ], [ true, %19 ], [ true, %14 ], [ true, %7 ], [ %58, %54 ]
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %59, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %77

77:                                               ; preds = %2, %76
  %78 = phi i1 [ %60, %76 ], [ true, %2 ]
  ret i1 %78
}

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale18IsDecimalSeparatorEDs(%"class.blink::Locale"*, i16 zeroext) #1 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::String", align 8
  store i16 %1, i16* %3, align 2
  %5 = icmp eq i16 %1, 46
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::Locale"* %0 to void (%"class.blink::Locale"*)***
  %8 = load void (%"class.blink::Locale"*)**, void (%"class.blink::Locale"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %8, i64 17
  %10 = load void (%"class.blink::Locale"*)*, void (%"class.blink::Locale"*)** %9, align 8
  tail call void %10(%"class.blink::Locale"* %0) #16
  %11 = getelementptr inbounds %"class.blink::Locale", %"class.blink::Locale"* %0, i64 0, i32 1, i64 10, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #16
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #16
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %6, %14, %29
  %32 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* nonnull %3, i32 1) #16
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %34) #16
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #16
  br label %51

51:                                               ; preds = %31, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br i1 %13, label %65, label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #16
  br label %65

65:                                               ; preds = %64, %61, %51, %2
  %66 = phi i1 [ true, %2 ], [ %35, %51 ], [ %35, %61 ], [ %35, %64 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink6Locale19HasDecimalSeparatorERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = ptrtoint %"class.blink::Locale"* %0 to i64
  %5 = tail call i8* @_Znwm(i64 56) #19, !noalias !26
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %6, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i16)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !26
  %7 = getelementptr inbounds i8, i8* %5, i64 32
  %8 = bitcast i8* %7 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.blink::Locale"*, i16)* @_ZN5blink6Locale18IsDecimalSeparatorEDs to i64), i64 0>, <2 x i64>* %8, align 8, !noalias !26
  %9 = getelementptr inbounds i8, i8* %5, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 %4, i64* %10, align 8, !noalias !26
  %11 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %5, i8** %11, align 8, !alias.scope !26
  %12 = call i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"* %1, %"class.base::RepeatingCallback"* nonnull %3, i32 0) #16
  %13 = icmp ne i32 %12, -1
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #16
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink6Locale14FormatDateTimeERKNS_14DateComponentsENS0_10FormatTypeE(%"class.blink::Locale"*, %"class.blink::DateComponents"* dereferenceable(36), i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::DateTimeStringBuilder", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::DateComponents", %"class.blink::DateComponents"* %1, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %225, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::DateTimeStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21DateTimeStringBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1, i32 1
  %18 = bitcast %union.anon* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1, i32 4
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 2
  store %"class.blink::Locale"* %0, %"class.blink::Locale"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 3
  store %"class.blink::DateComponents"* %1, %"class.blink::DateComponents"** %23, align 8
  switch i32 %11, label %205 [
    i32 4, label %24
    i32 1, label %64
    i32 3, label %95
    i32 5, label %135
    i32 2, label %163
  ]

24:                                               ; preds = %13
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = icmp eq i32 %2, 1
  %27 = bitcast %"class.blink::Locale"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Locale"*)***
  %28 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)**, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*** %27, align 8
  br i1 %26, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %28, i64 4
  %31 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %30, align 8
  %32 = tail call %"class.WTF::StringImpl"* %31(%"class.blink::Locale"* %0) #16
  br label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %28, i64 3
  %35 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %34, align 8
  %36 = tail call %"class.WTF::StringImpl"* %35(%"class.blink::Locale"* %0) #16
  br label %37

37:                                               ; preds = %33, %29
  %38 = phi %"class.WTF::StringImpl"* [ %36, %33 ], [ %32, %29 ]
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %41 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %37, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %37 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %40, i32 %46) #16
  %47 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0
  %48 = call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::DateTimeFormat::TokenHandler"* nonnull dereferenceable(8) %47) #16
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %203, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %203

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #16
  br label %203

64:                                               ; preds = %13
  %65 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #16
  %66 = bitcast %"class.blink::Locale"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Locale"*)***
  %67 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)**, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*** %66, align 8
  %68 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %67, align 8
  %69 = tail call %"class.WTF::StringImpl"* %68(%"class.blink::Locale"* %0) #16
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %72 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %64, %73
  %77 = phi i32 [ %75, %73 ], [ 0, %64 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %71, i32 %77) #16
  %78 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0
  %79 = call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::DateTimeFormat::TokenHandler"* nonnull dereferenceable(8) %78) #16
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %203, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %203

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %203

95:                                               ; preds = %13
  %96 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #16
  %97 = icmp eq i32 %2, 1
  %98 = bitcast %"class.blink::Locale"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Locale"*)***
  %99 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)**, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*** %98, align 8
  br i1 %97, label %100, label %104

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %99, i64 2
  %102 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %101, align 8
  %103 = tail call %"class.WTF::StringImpl"* %102(%"class.blink::Locale"* %0) #16
  br label %108

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %99, i64 1
  %106 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %105, align 8
  %107 = tail call %"class.WTF::StringImpl"* %106(%"class.blink::Locale"* %0) #16
  br label %108

108:                                              ; preds = %104, %100
  %109 = phi %"class.WTF::StringImpl"* [ %107, %104 ], [ %103, %100 ]
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %110, align 8
  %111 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %112 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  br label %116

116:                                              ; preds = %108, %113
  %117 = phi i32 [ %115, %113 ], [ 0, %108 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %111, i32 %117) #16
  %118 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0
  %119 = call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::DateTimeFormat::TokenHandler"* nonnull dereferenceable(8) %118) #16
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %203, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %203

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #16
  br label %203

135:                                              ; preds = %13
  %136 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #16
  %137 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale16WeekFormatInLDMLEv(%"class.blink::Locale"* undef)
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %138, align 8
  %139 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %140 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  br label %144

144:                                              ; preds = %135, %141
  %145 = phi i32 [ %143, %141 ], [ 0, %135 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %139, i32 %145) #16
  %146 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0
  %147 = call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::DateTimeFormat::TokenHandler"* nonnull dereferenceable(8) %146) #16
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %203, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %203

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #16
  br label %203

163:                                              ; preds = %13
  %164 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #16
  %165 = icmp eq i32 %2, 1
  %166 = bitcast %"class.blink::Locale"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Locale"*)***
  %167 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)**, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*** %166, align 8
  br i1 %165, label %168, label %172

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %167, i64 6
  %170 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %169, align 8
  %171 = tail call %"class.WTF::StringImpl"* %170(%"class.blink::Locale"* %0) #16
  br label %176

172:                                              ; preds = %163
  %173 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %167, i64 5
  %174 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %173, align 8
  %175 = tail call %"class.WTF::StringImpl"* %174(%"class.blink::Locale"* %0) #16
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi %"class.WTF::StringImpl"* [ %175, %172 ], [ %171, %168 ]
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %178, align 8
  %179 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %180 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 1
  %183 = load i32, i32* %182, align 4
  br label %184

184:                                              ; preds = %176, %181
  %185 = phi i32 [ %183, %181 ], [ 0, %176 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* %179, i32 %185) #16
  %186 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 0
  %187 = call zeroext i1 @_ZN5blink14DateTimeFormat5ParseERKN3WTF6StringERNS0_12TokenHandlerE(%"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::DateTimeFormat::TokenHandler"* nonnull dereferenceable(8) %186) #16
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #16
  br label %203

203:                                              ; preds = %202, %199, %184, %162, %159, %144, %134, %131, %116, %94, %91, %76, %63, %60, %45
  %204 = phi i8* [ %25, %45 ], [ %25, %60 ], [ %25, %63 ], [ %65, %76 ], [ %65, %91 ], [ %65, %94 ], [ %96, %116 ], [ %96, %131 ], [ %96, %134 ], [ %136, %144 ], [ %136, %159 ], [ %136, %162 ], [ %164, %184 ], [ %164, %199 ], [ %164, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #16
  br label %205

205:                                              ; preds = %203, %13
  %206 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %4, i64 0, i32 1
  %207 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %206) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21DateTimeStringBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %206) #16
  %208 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %206, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #16
  br label %224

224:                                              ; preds = %205, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #16
  br label %225

225:                                              ; preds = %3, %224
  %226 = phi %"class.WTF::StringImpl"* [ %207, %224 ], [ null, %3 ]
  ret %"class.WTF::StringImpl"* %226
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21DateTimeStringBuilderD2Ev(%"class.blink::DateTimeStringBuilder"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21DateTimeStringBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %3) #16
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #16
  br label %20

20:                                               ; preds = %1, %16, %19
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21DateTimeStringBuilderD0Ev(%"class.blink::DateTimeStringBuilder"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21DateTimeStringBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DateTimeStringBuilder", %"class.blink::DateTimeStringBuilder"* %0, i64 0, i32 1
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %3) #16
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #16
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = bitcast %"class.blink::DateTimeStringBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #19
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %30, i16* nonnull dereferenceable(2) %3) #16
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #16
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #16
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #16
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #16
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #16
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #16
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #16
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #16
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #11 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #16
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"*, i16* dereferenceable(2)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #16
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #16
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %19, i16* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #16
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %53, i16* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"*, i16*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #13

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj12ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEFbDsEE3RunEPNS0_13BindStateBaseEDs(%"class.base::internal::BindStateBase"*, i16 zeroext) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.blink::Locale"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i1 (%"class.blink::Locale"*, i16)**
  %22 = load i1 (%"class.blink::Locale"*, i16)*, i1 (%"class.blink::Locale"*, i16)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to i1 (%"class.blink::Locale"*, i16)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi i1 (%"class.blink::Locale"*, i16)* [ %22, %16 ], [ %24, %23 ]
  %27 = tail call zeroext i1 %26(%"class.blink::Locale"* %13, i16 zeroext %1) #16
  ret i1 %27
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!10 = distinct !{!10, !11, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!12 = !{!13, !15, !17}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!16 = distinct !{!16, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!17 = distinct !{!17, !18, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!23 = distinct !{!23, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!24 = distinct !{!24, !25, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!26 = !{!27, !29, !31}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!30 = distinct !{!30, !"_ZN4base13BindRepeatingIRMN5blink6LocaleEFbDsEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!31 = distinct !{!31, !32, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF13BindRepeatingIMN5blink6LocaleEFbDsEJNS_17UnretainedWrapperIS2_EEEFbDsEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
