; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_clock.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_clock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::QuicWallTime" = type { i64 }

@_ZTVN4quic9QuicClockE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicClock"*)* @_ZN4quic9QuicClockD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicClock"*)* @_ZN4quic9QuicClockD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.quic::QuicClock"*, %"class.quic::QuicWallTime"*)* @_ZNK4quic9QuicClock25ConvertWallTimeToQuicTimeERKNS_12QuicWallTimeE to i8*)] }, align 8

@_ZN4quic9QuicClockD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicClock"*), void (%"class.quic::QuicClock"*)* @_ZN4quic9QuicClockD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic9QuicClockC2Ev(%"class.quic::QuicClock"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic9QuicClockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic9QuicClockD2Ev(%"class.quic::QuicClock"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4quic9QuicClockD0Ev(%"class.quic::QuicClock"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic9QuicClock24ComputeCalibrationOffsetEv(%"class.quic::QuicClock"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.quic::QuicWallTime", align 8
  %3 = bitcast %"class.quic::QuicClock"* %0 to i64 (%"class.quic::QuicClock"*)***
  %4 = bitcast %"class.quic::QuicWallTime"* %2 to i8*
  %5 = getelementptr inbounds %"class.quic::QuicWallTime", %"class.quic::QuicWallTime"* %2, i64 0, i32 0
  br label %7

6:                                                ; preds = %7
  ret i64 %21

7:                                                ; preds = %7, %1
  %8 = phi i64 [ 9223372036854775807, %1 ], [ %21, %7 ]
  %9 = phi i32 [ 0, %1 ], [ %22, %7 ]
  %10 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %3, align 8
  %11 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %10, i64 3
  %12 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %11, align 8
  %13 = call i64 %12(%"class.quic::QuicClock"* %0) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %14 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %3, align 8
  %15 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %14, i64 4
  %16 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %15, align 8
  %17 = call i64 %16(%"class.quic::QuicClock"* %0) #8
  store i64 %17, i64* %5, align 8
  %18 = call i64 @_ZNK4quic12QuicWallTime18ToUNIXMicrosecondsEv(%"class.quic::QuicWallTime"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %19 = sub nsw i64 %18, %13
  %20 = icmp slt i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  %22 = add nuw nsw i32 %9, 1
  %23 = icmp eq i32 %22, 128
  br i1 %23, label %6, label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZNK4quic12QuicWallTime18ToUNIXMicrosecondsEv(%"class.quic::QuicWallTime"*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic9QuicClock20SetCalibrationOffsetENS_8QuicTime5DeltaE(%"class.quic::QuicClock"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 2, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic9QuicClock25ConvertWallTimeToQuicTimeERKNS_12QuicWallTimeE(%"class.quic::QuicClock"*, %"class.quic::QuicWallTime"* dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.quic::QuicWallTime", align 8
  %4 = alloca %"class.quic::QuicWallTime", align 8
  %5 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @_ZNK4quic12QuicWallTime18ToUNIXMicrosecondsEv(%"class.quic::QuicWallTime"* %1) #8
  %10 = getelementptr inbounds %"class.quic::QuicClock", %"class.quic::QuicClock"* %0, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  br label %31

13:                                               ; preds = %2
  %14 = bitcast %"class.quic::QuicClock"* %0 to i64 (%"class.quic::QuicClock"*)***
  %15 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %15, i64 3
  %17 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.quic::QuicClock"* %0) #8
  %19 = bitcast %"class.quic::QuicWallTime"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = bitcast %"class.quic::QuicWallTime"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %14, align 8
  %22 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %21, i64 4
  %23 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.quic::QuicClock"* %0) #8
  %25 = getelementptr inbounds %"class.quic::QuicWallTime", %"class.quic::QuicWallTime"* %4, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = tail call i64 @_ZNK4quic12QuicWallTime18ToUNIXMicrosecondsEv(%"class.quic::QuicWallTime"* %1) #8
  %27 = call i64 @_ZNK4quic12QuicWallTime8SubtractENS_8QuicTime5DeltaE(%"class.quic::QuicWallTime"* nonnull %4, i64 %26) #8
  %28 = getelementptr inbounds %"class.quic::QuicWallTime", %"class.quic::QuicWallTime"* %3, i64 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZNK4quic12QuicWallTime18ToUNIXMicrosecondsEv(%"class.quic::QuicWallTime"* nonnull %3) #8
  %30 = sub nsw i64 %18, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  br label %31

31:                                               ; preds = %13, %8
  %32 = phi i64 [ %12, %8 ], [ %30, %13 ]
  ret i64 %32
}

declare i64 @_ZNK4quic12QuicWallTime8SubtractENS_8QuicTime5DeltaE(%"class.quic::QuicWallTime"*, i64) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
