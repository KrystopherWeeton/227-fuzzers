; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_psfunc.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_psfunc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PSFunc = type { %class.CPDF_Function, %class.CPDF_PSEngine }
%class.CPDF_Function = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%class.CPDF_PSEngine = type { i32, %class.CPDF_PSProc, [100 x float] }
%class.CPDF_PSProc = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.CPDF_PSOP* }
%class.CPDF_PSOP = type { i8, float, %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CPDF_PSProc* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"* }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::set" = type opaque
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.46", i64 }
%"class.fxcrt::UnownedPtr.46" = type { i8* }
%"class.pdfium::span.47" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.30", %"class.std::__1::unique_ptr.11", %"class.fxcrt::RetainPtr.36" }
%"class.fxcrt::RetainPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8* }
%"class.fxcrt::RetainPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.20", %"class.fxcrt::RetainPtr.26" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.11", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.15" }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.20" = type { %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.26" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CPDF_Stream* }

@_ZTV11CPDF_PSFunc = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PSFunc*)* @_ZN11CPDF_PSFuncD2Ev to i8*), i8* bitcast (void (%class.CPDF_PSFunc*)* @_ZN11CPDF_PSFuncD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_PSFunc*, %class.CPDF_Object*, %"class.std::__1::set"*)* @_ZN11CPDF_PSFunc6v_InitEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE to i8*), i8* bitcast (i1 (%class.CPDF_PSFunc*, float*, float*)* @_ZNK11CPDF_PSFunc6v_CallEPKfPf to i8*)] }, align 8

@_ZN11CPDF_PSFuncC1Ev = hidden unnamed_addr alias void (%class.CPDF_PSFunc*), void (%class.CPDF_PSFunc*)* @_ZN11CPDF_PSFuncC2Ev
@_ZN11CPDF_PSFuncD1Ev = hidden unnamed_addr alias void (%class.CPDF_PSFunc*), void (%class.CPDF_PSFunc*)* @_ZN11CPDF_PSFuncD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_PSFuncC2Ev(%class.CPDF_PSFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0
  tail call void @_ZN13CPDF_FunctionC2ENS_4TypeE(%class.CPDF_Function* %2, i32 4) #6
  %3 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV11CPDF_PSFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 1
  tail call void @_ZN13CPDF_PSEngineC1Ev(%class.CPDF_PSEngine* %4) #6
  ret void
}

declare void @_ZN13CPDF_FunctionC2ENS_4TypeE(%class.CPDF_Function*, i32) unnamed_addr #1

declare void @_ZN13CPDF_PSEngineC1Ev(%class.CPDF_PSEngine*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_PSFuncD2Ev(%class.CPDF_PSFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV11CPDF_PSFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 1
  tail call void @_ZN13CPDF_PSEngineD1Ev(%class.CPDF_PSEngine* %3) #6
  %4 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0
  tail call void @_ZN13CPDF_FunctionD2Ev(%class.CPDF_Function* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CPDF_PSEngineD1Ev(%class.CPDF_PSEngine*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13CPDF_FunctionD2Ev(%class.CPDF_Function*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_PSFuncD0Ev(%class.CPDF_PSFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV11CPDF_PSFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 1
  tail call void @_ZN13CPDF_PSEngineD1Ev(%class.CPDF_PSEngine* %3) #6
  %4 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0
  tail call void @_ZN13CPDF_FunctionD2Ev(%class.CPDF_Function* %4) #6
  %5 = bitcast %class.CPDF_PSFunc* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CPDF_PSFunc6v_InitEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE(%class.CPDF_PSFunc*, %class.CPDF_Object*, %"class.std::__1::set"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.pdfium::span"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"class.pdfium::span.47"*
  %8 = bitcast %class.CPDF_Object* %1 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %9 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %9, i64 36
  %11 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %10, align 8
  %12 = tail call %class.CPDF_Stream* %11(%class.CPDF_Object* %1) #6
  %13 = tail call i8* @_Znwm(i64 64) #7, !noalias !2
  %14 = bitcast i8* %13 to %class.CPDF_StreamAcc*
  tail call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %14, %class.CPDF_Stream* %12) #6, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !2
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8, !noalias !2
  tail call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* nonnull %14) #6
  %19 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 1
  %20 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.47"* nonnull sret %7, %class.CPDF_StreamAcc* nonnull %14) #6
  %21 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %21, <2 x i64>* %4, align 16
  %22 = call zeroext i1 @_ZN13CPDF_PSEngine5ParseEN6pdfium4spanIKhEE(%class.CPDF_PSEngine* %19, %"class.pdfium::span"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  %23 = load i64, i64* %16, align 8
  %24 = add nsw i64 %23, -1
  store i64 %24, i64* %16, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %3
  %27 = bitcast i8* %13 to %"class.fxcrt::Retainable"*
  %28 = bitcast i8* %13 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  call void %31(%"class.fxcrt::Retainable"* nonnull %27) #6
  br label %32

32:                                               ; preds = %3, %26
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPDF_PSEngine5ParseEN6pdfium4spanIKhEE(%class.CPDF_PSEngine*, %"class.pdfium::span"*) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.47"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11CPDF_PSFunc6v_CallEPKfPf(%class.CPDF_PSFunc*, float* nocapture readonly, float* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.CPDF_PSEngine, %class.CPDF_PSEngine* %4, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %17, %3
  %10 = tail call zeroext i1 @_ZN13CPDF_PSEngine7ExecuteEv(%class.CPDF_PSEngine* %4) #6
  %11 = load i32, i32* %5, align 8
  %12 = getelementptr inbounds %class.CPDF_PSFunc, %class.CPDF_PSFunc* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %11, %13
  br i1 %14, label %36, label %15

15:                                               ; preds = %9
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %36, label %25

17:                                               ; preds = %3, %17
  %18 = phi i64 [ %21, %17 ], [ 0, %3 ]
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = load float, float* %19, align 4
  tail call void @_ZN13CPDF_PSEngine4PushEf(%class.CPDF_PSEngine* %4, float %20) #6
  %21 = add nuw nsw i64 %18, 1
  %22 = load i32, i32* %6, align 4
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %17, label %9

25:                                               ; preds = %15, %25
  %26 = phi i32 [ %33, %25 ], [ 0, %15 ]
  %27 = tail call float @_ZN13CPDF_PSEngine3PopEv(%class.CPDF_PSEngine* %4) #6
  %28 = load i32, i32* %12, align 8
  %29 = xor i32 %26, -1
  %30 = add i32 %28, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds float, float* %2, i64 %31
  store float %27, float* %32, align 4
  %33 = add nuw i32 %26, 1
  %34 = load i32, i32* %12, align 8
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %25, label %36

36:                                               ; preds = %25, %15, %9
  %37 = phi i1 [ false, %9 ], [ true, %15 ], [ true, %25 ]
  ret i1 %37
}

declare void @_ZN13CPDF_PSEngine4PushEf(%class.CPDF_PSEngine*, float) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPDF_PSEngine7ExecuteEv(%class.CPDF_PSEngine*) local_unnamed_addr #1

declare float @_ZN13CPDF_PSEngine3PopEv(%class.CPDF_PSEngine*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
