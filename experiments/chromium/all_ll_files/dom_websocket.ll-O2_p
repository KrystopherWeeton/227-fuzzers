; ModuleID = '../../third_party/blink/renderer/modules/websockets/dom_websocket.cc'
source_filename = "../../third_party/blink/renderer/modules/websockets/dom_websocket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.243", i32, [4 x i8], %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.381", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.387", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.392", %"class.std::__1::unique_ptr.398", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.416", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.423", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.361", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__cxx_atomic_impl.282" }
%"struct.std::__1::__cxx_atomic_impl.282" = type { %"struct.std::__1::__cxx_atomic_base_impl.283" }
%"struct.std::__1::__cxx_atomic_base_impl.283" = type { i64 }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::Worklist.290"* }
%"class.blink::Worklist.290" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::Worklist.297"* }
%"class.blink::Worklist.297" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::Worklist.304"* }
%"class.blink::Worklist.304" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::Worklist.311"* }
%"class.blink::Worklist.311" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::Worklist.318"* }
%"class.blink::Worklist.318" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::Worklist.325"* }
%"class.blink::Worklist.325" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::Worklist.332"* }
%"class.blink::Worklist.332" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.279" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.339", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.354", [4 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64 }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { float }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.364", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.387" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.404" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.290"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.297"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.304"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.311"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.318"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.427" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.422 }
%class.scoped_refptr.422 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.423" = type { %"struct.std::__1::__atomic_base.424" }
%"struct.std::__1::__atomic_base.424" = type { %"struct.std::__1::__cxx_atomic_impl.425" }
%"struct.std::__1::__cxx_atomic_impl.425" = type { %"struct.std::__1::__cxx_atomic_base_impl.426" }
%"struct.std::__1::__cxx_atomic_base_impl.426" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.507", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.521" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.512" }
%"class.blink::HeapHashMap.512" = type { %"class.WTF::HashMap.515" }
%"class.WTF::HashMap.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"struct.WTF::KeyValuePair.518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.518" = type { %"class.blink::WeakMember.519", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.521" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i32 }
%"class.blink::DOMWebSocket::EventQueue" = type { i32, %"class.blink::Member", %"class.blink::HeapDeque" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::EventTarget"* }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::Event>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::Event>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.4"*, i32, i32 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.7", %"class.blink::Member.9", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::Event"* }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::DOMWebSocket" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::WebSocketChannelClient", %"class.blink::Member.455", %"class.blink::WebSocketCommon", %"class.WTF::String", i64, i64, i64, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.465", i8, [7 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.446" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.434" }
%"class.blink::HeapVector.434" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439", [32 x i8] }
%"class.WTF::VectorBufferBase.439" = type { %"struct.std::__1::pair.440"*, i32, i32 }
%"struct.std::__1::pair.440" = type { %"class.WTF::AtomicString", %"class.blink::Member.441" }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::HeapVector.443"* }
%"class.blink::HeapVector.443" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.WTF::Vector.449"* }
%"class.WTF::Vector.449" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.453" }
%"class.blink::WeakMember.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.22" }
%"class.WTF::HashTable.22" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::WebSocketChannelClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::WebSocketChannel"* }
%"class.blink::WebSocketChannel" = type { i32 (...)** }
%"class.blink::WebSocketCommon" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.459" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::KURL"* }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DOMWebSocket::EventQueue"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.73", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.81", %"class.blink::Member.83", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.92", %"class.blink::Member.228", %"class.blink::Member.230", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.24" }
%"class.blink::Supplementable.24" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.25" }
%"class.blink::HeapHashMap.25" = type { %"class.WTF::HashMap.28" }
%"class.WTF::HashMap.28" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ %"struct.WTF::KeyValuePair.31"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.31" = type { i8*, %"class.blink::Member.1719" }
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1721" }
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.blink::Member.68", i32, [4 x i8], %"class.WTF::HashSet.70", i32, i32 }
%class.scoped_refptr.32 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.33", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.38 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.38 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.51", %"class.std::__1::map.60"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.33" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::map.60" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::Member.79" = type opaque
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.85", i32, i32 }
%"class.blink::HeapHashMap.85" = type { %"class.WTF::HashMap.88" }
%"class.WTF::HashMap.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"struct.WTF::KeyValuePair.91"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.91" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.98" }
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.mojo::StructPtr.101"*, i32, i32 }
%"class.mojo::StructPtr.101" = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.105", %"class.WTF::HashMap.112", %"class.WTF::HashMap.117", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.122", i32, %"class.mojo::StructPtr.127", %"class.WTF::Vector.122" }
%"class.mojo::StructPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.112" = type { %"class.WTF::HashTable.113" }
%"class.WTF::HashTable.113" = type <{ %"struct.WTF::KeyValuePair.116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.116" = type opaque
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.121" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.127" = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.122", i8, i8, [6 x i8] }>
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.219" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.142", i32 }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.147", %"class.absl::optional.152", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.172", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.194", %"class.std::__1::map.205", i64, %"class.base::OnceCallback.165", %"class.base::OnceCallback.214", i8, %class.scoped_refptr.157, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.215" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.145 }
%class.scoped_refptr.145 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.146", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.12" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.152" = type { %"class.absl::optional_internal::optional_data.153" }
%"class.absl::optional_internal::optional_data.153" = type { %"class.absl::optional_internal::optional_data_base.154" }
%"class.absl::optional_internal::optional_data_base.154" = type { %"class.absl::optional_internal::optional_data_dtor_base.155" }
%"class.absl::optional_internal::optional_data_dtor_base.155" = type { i8, %union.anon.156 }
%union.anon.156 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.165" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.157, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.159", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.159" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.160" }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.242", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.157, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.242" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.175", %class.scoped_refptr.176 }
%"class.base::RepeatingCallback.175" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.176 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.177", [4 x i8] }>
%"class.base::RefCountedThreadSafe.177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.193" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.194" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::map.205" = type { %"class.std::__1::__tree.206" }
%"class.std::__1::__tree.206" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.base::OnceCallback.165" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.214" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.157 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.165" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.215" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.83", i8, [7 x i8], %"class.WTF::Vector.98", %"class.blink::HeapVector.234", i8, [7 x i8], %"class.WTF::HashSet.70", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.234" = type { %"class.WTF::Vector.237" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.blink::Member.240"*, i32, i32 }
%"class.blink::Member.240" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent" }
%"class.blink::ExecutionContextLifecycleStateObserver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8] }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.469", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.481", %"class.WTF::Vector.483" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.472", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.667", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.675", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.689", %"class.blink::FrameLoader", %"class.blink::Member.710", %"class.blink::Member.712", %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.745", %"class.blink::Member.747", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.749", %class.scoped_refptr.751, %"class.blink::Member.752", %"class.blink::Member.754", %"class.blink::Member.756", %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.762", %"class.blink::Member.764", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.768", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.789", %"class.std::__1::unique_ptr.790", %"class.absl::optional.654", i32, [4 x i8], %"class.std::__1::unique_ptr.796", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.804", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.809", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.814", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.mojo::StructPtr.826", %"class.blink::Member.835", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.837", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", i8, i32, i8, i32, %"class.blink::Member.636", %"class.blink::Member.498", %"class.blink::FrameLifecycle", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.638", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.647", i8, %"class.base::UnguessableToken", %"class.absl::optional.649", %"class.absl::optional.654", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.490", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.490", %"class.blink::Member.498", %"class.blink::Member.529", %"class.blink::Member.531", i8, %"class.WTF::Vector.533" }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.628" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.536, %"class.std::__1::unique_ptr.142", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.157, i32 }>
%class.scoped_refptr.536 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.157, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.594", %"class.absl::optional.599", %"class.absl::optional.553", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.619", i8, [7 x i8], %class.scoped_refptr.157, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.177" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.165", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.157, %"class.std::__1::unique_ptr.537", %"class.absl::optional.547", %"struct.std::__1::atomic.423", i8, i8, i8, i8, i32, i32, %"class.absl::optional.553", %"class.std::__1::unique_ptr.558", i8, i64, %class.scoped_refptr.591, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.593" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.157, i8, %"class.mojo::ScopedHandleBase.540", %class.scoped_refptr.541, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.542", i8*, %"class.base::WeakPtrFactory.543" }
%"class.mojo::ScopedHandleBase.540" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.541 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.542" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.543" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.547" = type { %"class.absl::optional_internal::optional_data.548" }
%"class.absl::optional_internal::optional_data.548" = type { %"class.absl::optional_internal::optional_data_base.549" }
%"class.absl::optional_internal::optional_data_base.549" = type { %"class.absl::optional_internal::optional_data_dtor_base.550" }
%"class.absl::optional_internal::optional_data_dtor_base.550" = type { i8, %union.anon.551 }
%union.anon.551 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.552", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.552" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.561", i8, i64, %class.scoped_refptr.562, %class.scoped_refptr.587 }
%"class.base::RepeatingCallback.561" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.562 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.563", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.565", %"class.std::__1::map.576", i8, [7 x i8] }>
%"class.base::RefCounted.563" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.564 }
%class.scoped_refptr.564 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.565" = type { %"class.std::__1::__tree.566" }
%"class.std::__1::__tree.566" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::map.576" = type { %"class.std::__1::__tree.577" }
%"class.std::__1::__tree.577" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%class.scoped_refptr.587 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.591 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.592 }
%class.scoped_refptr.592 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.593" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.594" = type { %"class.absl::optional_internal::optional_data.595" }
%"class.absl::optional_internal::optional_data.595" = type { %"class.absl::optional_internal::optional_data_base.596" }
%"class.absl::optional_internal::optional_data_base.596" = type { %"class.absl::optional_internal::optional_data_dtor_base.597" }
%"class.absl::optional_internal::optional_data_dtor_base.597" = type { i8, %union.anon.598 }
%union.anon.598 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.599" = type { %"class.absl::optional_internal::optional_data.600" }
%"class.absl::optional_internal::optional_data.600" = type { %"class.absl::optional_internal::optional_data_base.601" }
%"class.absl::optional_internal::optional_data_base.601" = type { %"class.absl::optional_internal::optional_data_dtor_base.602" }
%"class.absl::optional_internal::optional_data_dtor_base.602" = type { i8, [7 x i8], %union.anon.603 }
%union.anon.603 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.553" = type { %"class.absl::optional_internal::optional_data.554" }
%"class.absl::optional_internal::optional_data.554" = type { %"class.absl::optional_internal::optional_data_base.555" }
%"class.absl::optional_internal::optional_data_base.555" = type { %"class.absl::optional_internal::optional_data_dtor_base.556" }
%"class.absl::optional_internal::optional_data_dtor_base.556" = type { i8, %union.anon.557 }
%union.anon.557 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.604 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.604 = type { %"class.std::__1::map.607" }
%"class.std::__1::map.607" = type { %"class.std::__1::__tree.608" }
%"class.std::__1::__tree.608" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.609", %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.618"*, i64 }
%"class.std::__1::unique_ptr.618" = type opaque
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.490", i32, %"class.blink::Member.502", %"class.blink::HeapHashMap.522" }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.490", %class.scoped_refptr.506, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr.506 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapHashMap.522" = type { %"class.WTF::HashMap.525" }
%"class.WTF::HashMap.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"struct.WTF::KeyValuePair.528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.528" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::Frame"* }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.482" }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.490", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.639" }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"struct.std::__1::pair.641"*, %"struct.std::__1::pair.641"*, %"class.std::__1::__compressed_pair.642" }
%"struct.std::__1::pair.641" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"struct.std::__1::pair.641"* }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.649" = type { %"class.absl::optional_internal::optional_data.650" }
%"class.absl::optional_internal::optional_data.650" = type { %"class.absl::optional_internal::optional_data_base.651" }
%"class.absl::optional_internal::optional_data_base.651" = type { %"class.absl::optional_internal::optional_data_dtor_base.652" }
%"class.absl::optional_internal::optional_data_dtor_base.652" = type { i8, %union.anon.653 }
%union.anon.653 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.659 }
%class.scoped_refptr.659 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.660" }
%"class.blink::HeapHashSet.660" = type { %"class.WTF::HashSet.663" }
%"class.WTF::HashSet.663" = type { %"class.WTF::HashTable.664" }
%"class.WTF::HashTable.664" = type <{ %"class.blink::WeakMember.666"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.666" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.667" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.668" }
%"class.blink::HeapHashMap.668" = type { %"class.WTF::HashMap.671" }
%"class.WTF::HashMap.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"struct.WTF::KeyValuePair.674"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.674" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.678", %"class.base::WeakPtrFactory.683" }
%"class.WTF::HashMap.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"struct.WTF::KeyValuePair.682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.682" = type opaque
%"class.base::WeakPtrFactory.683" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.687" }
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1731", i64, %"class.std::__1::map.1732", i8*, i64, %"class.base::WeakPtrFactory.1741" }
%"class.base::RepeatingCallback.1731" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1732" = type { %"class.std::__1::__tree.1733" }
%"class.std::__1::__tree.1733" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1734", %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.base::WeakPtrFactory.1741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.689" = type { %"class.WTF::HashSet.692" }
%"class.WTF::HashSet.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"class.blink::WeakMember.695"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.695" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.638", %"class.blink::Member.696", %"class.blink::Member.698", %"class.std::__1::unique_ptr.700", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.706" }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.706" = type { %"class.WTF::HashTable.707" }
%"class.WTF::HashTable.707" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1341", %"class.blink::Member.638", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1346", i8, i32, %"class.blink::Color", %"class.absl::optional.1348", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1353", %"class.blink::Member.1355", %"class.blink::Member.1355", %"class.std::__1::unique_ptr.1358", i32, [4 x i8], %"class.WTF::HashSet.1361", %"class.blink::Member.1368", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1370", %"class.blink::HeapHashSet.1377", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1385", i8, %"class.blink::Member.1391", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1403", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1417", i8, %"class.std::__1::unique_ptr.1423", %"class.std::__1::unique_ptr.1539", %"class.WTF::Vector.1545", i32, %class.scoped_refptr.1550, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1551", %"class.blink::Member.1553", %"class.blink::Member.1555", %"class.blink::HeapHashSet.1557", %"class.blink::HeapHashSet.1564", %"class.std::__1::unique_ptr.1571", %"class.std::__1::unique_ptr.1578", %"class.WTF::Vector.930" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1341" = type { %"class.WTF::HashTable.1342" }
%"class.WTF::HashTable.1342" = type <{ %class.scoped_refptr.1345*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1345 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1346" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1347", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.11, %"class.base::WeakPtrFactory.1111" }
%class.scoped_refptr.11 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory.1111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1347" = type { %"class.blink::MemberBase.711" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1348" = type { %"class.absl::optional_internal::optional_data.1349" }
%"class.absl::optional_internal::optional_data.1349" = type { %"class.absl::optional_internal::optional_data_base.1350" }
%"class.absl::optional_internal::optional_data_base.1350" = type { %"class.absl::optional_internal::optional_data_dtor_base.1351" }
%"class.absl::optional_internal::optional_data_dtor_base.1351" = type { i8, %union.anon.1352 }
%union.anon.1352 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::HeapHashSet.1357"* }
%"class.blink::HeapHashSet.1357" = type opaque
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.WTF::HashSet.1361"* }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1370" = type { %"class.WTF::HashSet.1373" }
%"class.WTF::HashSet.1373" = type { %"class.WTF::HashTable.1374" }
%"class.WTF::HashTable.1374" = type <{ %"class.blink::Member.1376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1376" = type opaque
%"class.blink::HeapHashSet.1377" = type { %"class.WTF::HashSet.1380" }
%"class.WTF::HashSet.1380" = type { %"class.WTF::HashTable.1381" }
%"class.WTF::HashTable.1381" = type <{ %"class.blink::Member.1383"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1612", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1623", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.712" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1614", %"class.blink::Member.1615", %"class.blink::Member.1617", %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.WTF::Vector.930", i16, %class.scoped_refptr.11 }
%"class.blink::ThreadState::PrefinalizerRegistration.1614" = type { i8 }
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1623" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1624", { i64, i64 } }
%"class.blink::WeakMember.1624" = type { %"class.blink::MemberBase.1384" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1395", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1399", i32, i32 }
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401" }
%"class.WTF::VectorBufferBase.1401" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1403" = type { %"class.WTF::LinkedHashSet.1406" }
%"class.WTF::LinkedHashSet.1406" = type { %"class.WTF::HashMap.1407", %"class.WTF::VectorBackedLinkedList.1411" }
%"class.WTF::HashMap.1407" = type { %"class.WTF::HashTable.1408" }
%"class.WTF::HashTable.1408" = type <{ %"struct.WTF::KeyValuePair.1410"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1410" = type opaque
%"class.WTF::VectorBackedLinkedList.1411" = type { %"class.WTF::Vector.1412", i32, i32 }
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { %"class.WTF::VectorBackedLinkedListNode.1415"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1415" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1516", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1521", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1426 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1427", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1434" }
%"class.WTF::RefCounted.1427" = type { %"class.base::RefCounted.1428" }
%"class.base::RefCounted.1428" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1429", i32, [4 x i8] }>
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1440", %"class.std::__1::unique_ptr.1489", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1437, %class.scoped_refptr.1438, %class.scoped_refptr.1439 }
%class.scoped_refptr.1437 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1453", i8, i8, %class.scoped_refptr.1437, i32, i32 }
%"class.WTF::RefCounted.1453" = type { %"class.base::RefCounted.1454" }
%"class.base::RefCounted.1454" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1438 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1607" }
%"class.blink::PaintPropertyNode.1607" = type { %"class.WTF::RefCounted.1608", i8, i8, %class.scoped_refptr.1438, i32, i32 }
%"class.WTF::RefCounted.1608" = type { %"class.base::RefCounted.1609" }
%"class.base::RefCounted.1609" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1439 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1604" }
%"class.blink::PaintPropertyNode.1604" = type { %"class.WTF::RefCounted.1605", i8, i8, %class.scoped_refptr.1439, i32, i32 }
%"class.WTF::RefCounted.1605" = type { %"class.base::RefCounted.1606" }
%"class.base::RefCounted.1606" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1443", %"class.WTF::Vector.1448", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1468" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1461, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1462", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1455" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1461 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1589", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1589" = type { %"class.WTF::RefCounted.1590", i8, i8, %class.scoped_refptr.1461, i32, i32 }
%"class.WTF::RefCounted.1590" = type { %"class.base::RefCounted.1591" }
%"class.base::RefCounted.1591" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1592" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1592" = type { %"class.absl::optional_internal::optional_data.1593" }
%"class.absl::optional_internal::optional_data.1593" = type { %"class.absl::optional_internal::optional_data_base.1594" }
%"class.absl::optional_internal::optional_data_base.1594" = type { %"class.absl::optional_internal::optional_data_dtor_base.1595" }
%"class.absl::optional_internal::optional_data_dtor_base.1595" = type { i8, %union.anon.1596 }
%union.anon.1596 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1597", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1597" = type { %"class.std::__1::__vector_base.1598" }
%"class.std::__1::__vector_base.1598" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1599" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1462" = type { %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1468" = type { %"class.std::__1::__compressed_pair.1469" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1471", %"class.std::__1::unique_ptr.1477", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1489" = type { %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1491" }
%"struct.std::__1::__compressed_pair_elem.1491" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1492", %"class.absl::optional.1492" }
%"class.absl::optional.1492" = type { %"class.absl::optional_internal::optional_data.1493" }
%"class.absl::optional_internal::optional_data.1493" = type { %"class.absl::optional_internal::optional_data_base.1494" }
%"class.absl::optional_internal::optional_data_base.1494" = type { %"class.absl::optional_internal::optional_data_dtor_base.1495" }
%"class.absl::optional_internal::optional_data_dtor_base.1495" = type { i8, [3 x i8], %union.anon.1496 }
%union.anon.1496 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1434"*, %"class.absl::optional.1502", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1502" = type { %"class.absl::optional_internal::optional_data.1503" }
%"class.absl::optional_internal::optional_data.1503" = type { %"class.absl::optional_internal::optional_data_base.1504" }
%"class.absl::optional_internal::optional_data_base.1504" = type { %"class.absl::optional_internal::optional_data_dtor_base.1505" }
%"class.absl::optional_internal::optional_data_dtor_base.1505" = type { i8, %union.anon.1506 }
%union.anon.1506 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1507", %"class.WTF::Vector.1511" }
%"class.WTF::Vector.1507" = type { %"class.WTF::VectorBuffer.1508" }
%"class.WTF::VectorBuffer.1508" = type { %"class.WTF::VectorBufferBase.485", [128 x i8] }
%"class.WTF::VectorBufferBase.485" = type { i32*, i32, i32 }
%"class.WTF::Vector.1511" = type { %"class.WTF::VectorBuffer.1512" }
%"class.WTF::VectorBuffer.1512" = type { %"class.WTF::VectorBufferBase.1513", [128 x i8] }
%"class.WTF::VectorBufferBase.1513" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"struct.WTF::KeyValuePair.1525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1525" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1526", %"class.WTF::Vector.1531" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1530"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1530" = type opaque
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533" }
%"class.WTF::VectorBufferBase.1533" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1539" = type { %"class.std::__1::__compressed_pair.1540" }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1545" = type { %"class.WTF::VectorBuffer.1546" }
%"class.WTF::VectorBuffer.1546" = type { %"class.WTF::VectorBufferBase.1547" }
%"class.WTF::VectorBufferBase.1547" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1550 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1557" = type { %"class.WTF::HashSet.1560" }
%"class.WTF::HashSet.1560" = type { %"class.WTF::HashTable.1561" }
%"class.WTF::HashTable.1561" = type <{ %"class.blink::WeakMember.1563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1563" = type opaque
%"class.blink::HeapHashSet.1564" = type { %"class.WTF::HashSet.1567" }
%"class.WTF::HashSet.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %"class.blink::WeakMember.1570"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1570" = type opaque
%"class.std::__1::unique_ptr.1571" = type { %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1573" }
%"struct.std::__1::__compressed_pair_elem.1573" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1574" }
%"class.base::time_internal::TimeBase.1574" = type { i64 }
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1581", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1581" = type { %"class.absl::optional_internal::optional_data.1582" }
%"class.absl::optional_internal::optional_data.1582" = type { %"class.absl::optional_internal::optional_data_base.1583" }
%"class.absl::optional_internal::optional_data_base.1583" = type { %"class.absl::optional_internal::optional_data_dtor_base.1584" }
%"class.absl::optional_internal::optional_data_dtor_base.1584" = type { i8, %union.anon.1585 }
%union.anon.1585 = type { %"class.base::Time" }
%"class.WTF::Vector.930" = type { %"class.WTF::VectorBuffer.931" }
%"class.WTF::VectorBuffer.931" = type { %"class.WTF::VectorBufferBase.932" }
%"class.WTF::VectorBufferBase.932" = type { %"class.base::OnceCallback.165"*, i32, i32 }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.725" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.714", %"class.blink::Member.714" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.714", %"class.blink::Member.716", %"class.blink::Member.714", %"class.blink::Member.714", %"class.blink::Member.718" }
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.842", %"class.blink::Member.844", %"class.blink::Member.716", %"class.blink::Member.846", %"class.blink::Member.846", %"class.blink::Member.868", %"class.blink::Member.870", %"class.blink::Member.872", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.877", %"class.blink::HeapVector.879" }
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.922", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.930", %"class.WTF::Vector.930", i8, i32, %"class.blink::Member.935", %"class.blink::Member.68", %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::Member.1093", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1095", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1101", %"class.blink::Member.1103", %"class.blink::Member.885", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1105", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.861", %"class.blink::Member.712", %"class.blink::Member.1062", %"class.blink::Member.712", %"class.blink::Member.712", %"class.blink::Member.712", %"class.blink::UserActionElementSet", %"class.blink::Member.1120", double, double, i64, i64, %"class.blink::HeapHashSet.1122", %"class.blink::HeapHashSet.1129", i16, i8, %"class.blink::Member.1136", %"class.blink::Member.1138", %"class.blink::Member.1140", %"class.blink::Member.1142", %"class.blink::TextLinkColors", %"class.blink::Member.1144", i8, [7 x i8], %"class.blink::HeapHashMap.1146", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.712", %"class.WTF::Vector.1153", %"class.blink::Member.1158", %"class.blink::Member.1160", i8, %"class.blink::Member.712", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1162", %"class.blink::HeapVector.1164", %"class.std::__1::unique_ptr.1172", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1178", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1191", %"class.WTF::Vector.1193", i8, i8, %"class.std::__1::unique_ptr.1198", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.861", %"class.blink::HeapVector.1204", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1212", i8, i32, %"class.blink::Member.1214", %"class.blink::Member.1216", %"class.blink::Member.1218", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1220", %"class.WTF::HashMap.1222", %"class.blink::Member.1227", %"class.blink::Member.1229", %"class.blink::Member.1231", %"class.blink::Member.1233", %"class.blink::Member.844", %"class.blink::Member.844", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1235", i8, i32, %"class.blink::Member.1242", %"class.blink::Member.1244", i32, %"class.blink::Member.1246", %"class.blink::Member.1248", %"class.blink::Member.1250", %"class.std::__1::unique_ptr.1252", i64, %"class.std::__1::unique_ptr.1258", i32, i32, %"class.blink::Member.1264", %"class.blink::Member.1266", %"class.blink::Member.1268", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1270", %"class.WTF::Vector.1073", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1272", %"class.blink::Member.1279", %"class.std::__1::unique_ptr.1281", %"class.blink::Member.1287", i8, i8, %"class.WTF::String", %"class.blink::Member.1289", i8, [7 x i8], %"class.blink::HeapHashMap.1291", %"class.blink::HeapObserverSet.1298", %"class.blink::Member.1306", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1308", i32, i8, i8, %"class.blink::WeakMember.1310", %"class.blink::Member.1311" }
%"class.blink::Supplementable.922" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.923" }
%"class.blink::HeapHashMap.923" = type { %"class.WTF::HashMap.926" }
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.929" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.937", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.945", %"class.blink::Member.844", %"class.blink::Member.947", i8, %"class.blink::Member.949", %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.957", %"class.blink::Member.959", %"class.blink::Member.961", %"class.blink::Member.963", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.122", %"class.blink::Member.965", %class.scoped_refptr.967, %"class.blink::HeapHashSet.1029", %"class.blink::Member.4", %"class.blink::HeapHashMap.1036", %"class.std::__1::unique_ptr.1043", %"class.blink::Member.1049", %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.WTF::Vector.1073", %"class.util::TokenType", %"class.WTF::HashSet.1078", %"class.WTF::Deque.1082" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.73", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.81", %"class.blink::Member.83", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.92", %"class.blink::Member.228", %"class.blink::Member.230", i8 }>
%"class.blink::Supplementable.937" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.938" }
%"class.blink::HeapHashMap.938" = type { %"class.WTF::HashMap.941" }
%"class.WTF::HashMap.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"struct.WTF::KeyValuePair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.944" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type { %"class.blink::Member.935", %"class.blink::Member.1337" }
%"class.blink::Member.1337" = type { %"class.blink::MemberBase.1338" }
%"class.blink::MemberBase.1338" = type { %"class.blink::LocalWindowProxyManager"* }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.967 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.969", i64, %"class.WTF::Vector.973", %"class.WTF::Vector.978", %"class.WTF::Vector.984", %"class.WTF::Vector.1002", %class.scoped_refptr.32, %"class.WTF::HashMap.1008", %"class.WTF::Vector.1013", %"class.WTF::Vector.973", %"class.WTF::Vector.1019", %"class.WTF::HashMap.1024", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.968" }
%"class.base::RefCountedThreadSafe.968" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { i8* }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980", [8 x i8] }
%"class.WTF::VectorBufferBase.980" = type { %class.scoped_refptr.981*, i32, i32 }
%class.scoped_refptr.981 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.988", %"class.std::__1::unique_ptr.994" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.987 }
%class.scoped_refptr.987 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1002" = type { %"class.WTF::VectorBuffer.1003" }
%"class.WTF::VectorBuffer.1003" = type { %"class.WTF::VectorBufferBase.1004" }
%"class.WTF::VectorBufferBase.1004" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1005", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1005" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"class.mojo::ScopedHandleBase.1016"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1016" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.973" = type { %"class.WTF::VectorBuffer.974" }
%"class.WTF::VectorBuffer.974" = type { %"class.WTF::VectorBufferBase.975", [16 x i8] }
%"class.WTF::VectorBufferBase.975" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ %"struct.WTF::KeyValuePair.1028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1028" = type { i8**, %"class.std::__1::unique_ptr.1723" }
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1029" = type { %"class.WTF::HashSet.1032" }
%"class.WTF::HashSet.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"class.blink::WeakMember.1035"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1035" = type opaque
%"class.blink::HeapHashMap.1036" = type { %"class.WTF::HashMap.1039" }
%"class.WTF::HashMap.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"struct.WTF::KeyValuePair.1042"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1042" = type opaque
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.638", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1062", %"class.blink::Member.1064", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1053", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1055", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1055" = type { %"class.WTF::HashMap.1058" }
%"class.WTF::HashMap.1058" = type { %"class.WTF::HashTable.1059" }
%"class.WTF::HashTable.1059" = type <{ %"struct.WTF::KeyValuePair.1061"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1061" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.714", i32, i32 }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.935", %"class.blink::Member.1331", %"class.blink::Member.1333" }
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.935", %"class.blink::HeapMojoRemote.1326" }
%"class.blink::HeapMojoRemote.1326" = type { %"class.blink::Member.1327" }
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::HeapHashMap.1072"* }
%"class.blink::HeapHashMap.1072" = type opaque
%"class.WTF::HashSet.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1082" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1085" }
%"class.WTF::VectorBuffer.1085" = type { %"class.WTF::VectorBufferBase.1086" }
%"class.WTF::VectorBufferBase.1086" = type { i64*, i32, i32 }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.887", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.889, %"class.WTF::Vector.890", %"class.WTF::Vector.890", %"class.blink::Member.714", %"class.blink::Member.895", %"class.blink::HeapHashSet.899", %"class.blink::Member.844", %"class.WTF::HashSet.906", %"class.WTF::TextPosition", %"class.blink::Member.910", %"class.blink::HeapVector.912", %"class.blink::Member.919" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.889 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.890" = type { %"class.WTF::VectorBuffer.891" }
%"class.WTF::VectorBuffer.891" = type { %"class.WTF::VectorBufferBase.892" }
%"class.WTF::VectorBufferBase.892" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.897" }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.899" = type { %"class.WTF::HashSet.902" }
%"class.WTF::HashSet.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"class.blink::WeakMember.905"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.905" = type { %"class.blink::MemberBase.717" }
%"class.WTF::HashSet.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.912" = type { %"class.WTF::Vector.915" }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::Member.895"*, i32, i32 }
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1105" = type { %"class.WTF::VectorBuffer.1106" }
%"class.WTF::VectorBuffer.1106" = type { %"class.WTF::VectorBufferBase.1107" }
%"class.WTF::VectorBufferBase.1107" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1108 }
%class.scoped_refptr.1108 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.844", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.714", %"class.blink::Member.714", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1113" }
%"class.blink::HeapHashMap.1113" = type { %"class.WTF::HashMap.1116" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1122" = type { %"class.WTF::HashSet.1125" }
%"class.WTF::HashSet.1125" = type { %"class.WTF::HashTable.1126" }
%"class.WTF::HashTable.1126" = type <{ %"class.blink::WeakMember.1128"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1128" = type opaque
%"class.blink::HeapHashSet.1129" = type { %"class.WTF::HashSet.1132" }
%"class.WTF::HashSet.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"class.blink::WeakMember.1135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1135" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.716", %"class.blink::HeapVector.879" }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1146" = type { %"class.WTF::HashMap.1149" }
%"class.WTF::HashMap.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"struct.WTF::KeyValuePair.1152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1152" = type opaque
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1164" = type { %"class.WTF::Vector.1167" }
%"class.WTF::Vector.1167" = type { %"class.WTF::VectorBuffer.1168" }
%"class.WTF::VectorBuffer.1168" = type { %"class.WTF::VectorBufferBase.1169" }
%"class.WTF::VectorBufferBase.1169" = type { %"class.blink::Member.1170"*, i32, i32 }
%"class.blink::Member.1170" = type opaque
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1178" = type { %"class.WTF::HashSet.1181" }
%"class.WTF::HashSet.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"class.blink::WeakMember.1184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1184" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1185", i32, [4 x i8] }>
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"struct.std::__1::pair.1188"*, i32, i32 }
%"struct.std::__1::pair.1188" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.861" = type { %"class.WTF::Vector.864" }
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { %"class.blink::Member.712"*, i32, i32 }
%"class.blink::HeapVector.1204" = type { %"class.WTF::Vector.1207" }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"class.blink::Member.1210"*, i32, i32 }
%"class.blink::Member.1210" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.844" }
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1222" = type { %"class.WTF::HashTable.1223" }
%"class.WTF::HashTable.1223" = type <{ %"struct.WTF::KeyValuePair.1226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1226" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1112", { i64, i64 } }
%"class.blink::WeakMember.1112" = type { %"class.blink::MemberBase.845" }
%"class.blink::HeapHashSet.1235" = type { %"class.WTF::HashSet.1238" }
%"class.WTF::HashSet.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %"class.blink::Member.1241"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1241" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1073" = type { %"class.WTF::VectorBuffer.1074" }
%"class.WTF::VectorBuffer.1074" = type { %"class.WTF::VectorBufferBase.1075" }
%"class.WTF::VectorBufferBase.1075" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1291" = type { %"class.WTF::HashMap.1294" }
%"class.WTF::HashMap.1294" = type { %"class.WTF::HashTable.1295" }
%"class.WTF::HashTable.1295" = type <{ %"struct.WTF::KeyValuePair.1297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1297" = type opaque
%"class.blink::HeapObserverSet.1298" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1299" }
%"class.blink::HeapHashSet.1299" = type { %"class.WTF::HashSet.1302" }
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"class.blink::WeakMember.1305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1305" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.844", %"class.blink::HeapHashSet.1315", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1322", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1315" = type { %"class.WTF::HashSet.1318" }
%"class.WTF::HashSet.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"class.blink::Member.1321"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1321" = type opaque
%"class.blink::HeapTaskRunnerTimer.1322" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1323", { i64, i64 } }
%"class.blink::WeakMember.1323" = type { %"class.blink::MemberBase.1309" }
%"class.blink::WeakMember.1310" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::Node"* }
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.850" }
%"class.blink::HeapHashMap.850" = type { %"class.WTF::HashMap.853" }
%"class.WTF::HashMap.853" = type { %"class.WTF::HashTable.854" }
%"class.WTF::HashTable.854" = type <{ %"struct.WTF::KeyValuePair.856"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.856" = type { %"class.WTF::AtomicString", %"class.blink::Member.857" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.712", i32, %"class.blink::HeapVector.861" }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::HeapHashMap.876"* }
%"class.blink::HeapHashMap.876" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.879" = type { %"class.WTF::Vector.882" }
%"class.WTF::Vector.882" = type { %"class.WTF::VectorBuffer.883" }
%"class.WTF::VectorBuffer.883" = type { %"class.WTF::VectorBufferBase.884" }
%"class.WTF::VectorBufferBase.884" = type { %"class.blink::Member.885"*, i32, i32 }
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.722 }
%class.scoped_refptr.722 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.723", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.729", %"class.blink::Member.731", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.729" = type { %"class.WTF::SingleThreadedBitField.730" }
%"class.WTF::SingleThreadedBitField.730" = type { i32 }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.733 }
%class.scoped_refptr.733 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.734", %"class.WTF::AtomicString", %"class.WTF::Vector.736" }
%"class.WTF::RefCounted.734" = type { %"class.base::RefCounted.735" }
%"class.base::RefCounted.735" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.736" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738", [32 x i8] }
%"class.WTF::VectorBufferBase.738" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.751 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.766" }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1744" }
%"class.mojo::Remote.1744" = type { %"class.mojo::internal::InterfacePtrState.1745" }
%"class.mojo::internal::InterfacePtrState.1745" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1746" }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.771, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.771 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.772", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.772" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.773" }
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.780, i8, [7 x i8] }>
%class.scoped_refptr.780 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.781", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.781" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.782" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.789" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.654" = type { %"class.absl::optional_internal::optional_data.655" }
%"class.absl::optional_internal::optional_data.655" = type { %"class.absl::optional_internal::optional_data_base.656" }
%"class.absl::optional_internal::optional_data_base.656" = type { %"class.absl::optional_internal::optional_data_dtor_base.657" }
%"class.absl::optional_internal::optional_data_dtor_base.657" = type { i8, %union.anon.658 }
%union.anon.658 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.802" }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1754" }
%"class.mojo::AssociatedRemote.1754" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1755" }
%"class.mojo::internal::AssociatedInterfacePtrState.1755" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1756" }
%"class.std::__1::unique_ptr.1756" = type { %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.804" = type { %"class.blink::Member.805" }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1764" }
%"class.mojo::AssociatedRemote.1764" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1765" }
%"class.mojo::internal::AssociatedInterfacePtrState.1765" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1766" }
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.807" }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1774", %"class.blink::Member.638", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1774" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1775" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.142" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1775" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.809" = type { %"class.blink::Member.810" }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1778", %"class.blink::Member.638", %"class.mojo::AssociatedReceiver.1779" }
%"class.blink::ThreadState::PrefinalizerRegistration.1778" = type { i8 }
%"class.mojo::AssociatedReceiver.1779" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1780" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1780" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1783", %"class.blink::Member.638", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1783" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.536, %"class.std::__1::unique_ptr.142", %"class.base::WeakPtrFactory.1784" }
%"class.base::WeakPtrFactory.1784" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.814" = type { %"class.blink::Member.815" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1787", %"class.blink::Member.638", %"class.mojo::AssociatedReceiver.1788" }
%"class.blink::ThreadState::PrefinalizerRegistration.1787" = type { i8 }
%"class.mojo::AssociatedReceiver.1788" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1789" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1789" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::HeapHashMap.825"* }
%"class.blink::HeapHashMap.825" = type opaque
%"class.mojo::StructPtr.826" = type { %"class.std::__1::unique_ptr.827" }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.830", %"class.mojo::InlinedStructPtr.831" }
%"class.mojo::InlinedStructPtr.830" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.831" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.837" = type { %"class.absl::optional_internal::optional_data.838" }
%"class.absl::optional_internal::optional_data.838" = type { %"class.absl::optional_internal::optional_data_base.839" }
%"class.absl::optional_internal::optional_data_base.839" = type { %"class.absl::optional_internal::optional_data_dtor_base.840" }
%"class.absl::optional_internal::optional_data_dtor_base.840" = type { i8, %union.anon.841 }
%union.anon.841 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1625" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1625" = type { %"class.v8::TracedReference.1626" }
%"class.v8::TracedReference.1626" = type { %"class.v8::BasicTracedReference.1627" }
%"class.v8::BasicTracedReference.1627" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::V8UnionStringOrStringSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.WTF::Vector.122" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::WeakPersistent.1630" = type { %"class.blink::PersistentBase.1631" }
%"class.blink::PersistentBase.1631" = type { %"class.blink::DOMWebSocket"*, %"class.blink::PersistentNodePtr" }
%"struct.base::internal::BindState.1902" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.1903" }
%"class.std::__1::tuple.1903" = type { %"struct.std::__1::__tuple_impl.1904" }
%"struct.std::__1::__tuple_impl.1904" = type { %"class.std::__1::__tuple_leaf.1905" }
%"class.std::__1::__tuple_leaf.1905" = type { %"class.blink::WeakPersistent.1630" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::NotShared" = type { %"class.blink::Member.1632" }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1634" }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1636 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.1636 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.1637", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.1639", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.1637" = type { %"class.base::RefCountedThreadSafe.1638" }
%"class.base::RefCountedThreadSafe.1638" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.1639" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.1640", %"class.WTF::String", %"class.blink::Member.1659", %"class.blink::Member.1661", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.blink::Member.1663", i8, [7 x i8], %"class.WTF::Vector.1681", %"class.blink::Member.1686", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1625", %class.scoped_refptr.1108 }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.967, %"class.blink::HeapVector.1644", %"class.blink::HeapVector.1651" }
%"class.blink::HeapVector.1644" = type { %"class.WTF::Vector.1647" }
%"class.WTF::Vector.1647" = type { %"class.WTF::VectorBuffer.1648" }
%"class.WTF::VectorBuffer.1648" = type { %"class.WTF::VectorBufferBase.1649" }
%"class.WTF::VectorBufferBase.1649" = type { %"class.blink::Member.1634"*, i32, i32 }
%"class.blink::HeapVector.1651" = type { %"class.WTF::Vector.1654" }
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"class.blink::Member.1657"*, i32, i32 }
%"class.blink::Member.1657" = type opaque
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::Blob"* }
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::HeapVector.1665"* }
%"class.blink::HeapVector.1665" = type { %"class.WTF::Vector.1668" }
%"class.WTF::Vector.1668" = type { %"class.WTF::VectorBuffer.1669" }
%"class.WTF::VectorBuffer.1669" = type { %"class.WTF::VectorBufferBase.1670" }
%"class.WTF::VectorBufferBase.1670" = type { %"class.blink::Member.1671"*, i32, i32 }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable.1673", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.1674", i8, i8, %class.scoped_refptr.11, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable.1673" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::UserActivation"* }
%"class.blink::UserActivation" = type opaque
%"class.WTF::Vector.1688" = type { %"class.WTF::VectorBuffer.1689" }
%"class.WTF::VectorBuffer.1689" = type { %"class.WTF::VectorBufferBase.1690" }
%"class.WTF::VectorBufferBase.1690" = type { %"class.base::span"*, i32, i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.1696", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.1696" = type { %"class.WTF::VectorBuffer.1697" }
%"class.WTF::VectorBuffer.1697" = type { %"class.WTF::VectorBufferBase.1698" }
%"class.WTF::VectorBufferBase.1698" = type { %"class.mojo::StructPtr.1699"*, i32, i32 }
%"class.mojo::StructPtr.1699" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.506, %"class.blink::Member.1709", %"class.blink::SelfKeepAlive", %"class.util::TokenType.1713" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1711" }
%"class.blink::Persistent.1711" = type { %"class.blink::PersistentBase.1712" }
%"class.blink::PersistentBase.1712" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.521" }
%"class.util::TokenType.1713" = type { %"class.base::StrongAlias.1714" }
%"class.base::StrongAlias.1714" = type { %"class.base::UnguessableToken" }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1717", i8, [7 x i8] }>
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::EventListener"* }
%"class.blink::WebSocketChannelImpl" = type { %"class.blink::WebSocketChannel", %"class.network::mojom::blink::WebSocketHandshakeClient", %"class.network::mojom::blink::WebSocketClient", %"class.blink::ThreadState::PrefinalizerRegistration.1805", %"class.blink::Member.1806", %"class.blink::KURL", i64, %"class.blink::Member.1808", %"class.WTF::Deque.1810", %"class.blink::WebSocketMessageChunkAccumulator", %"class.blink::Member.68", i8, i8, i8, i8, i8, i64, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.WTF::String", %"class.std::__1::unique_ptr.1829", %"class.mojo::StructPtr.1835", %"class.std::__1::unique_ptr.1849", %"class.std::__1::unique_ptr.1855", %"class.blink::HeapMojoRemote.1861", %"class.blink::HeapMojoReceiver.1864", %"class.blink::HeapMojoReceiver.1867", %"class.mojo::ScopedHandleBase.1870", %"class.mojo::SimpleWatcher", %"class.WTF::Deque.1871", %"class.mojo::ScopedHandleBase.1876", %"class.mojo::SimpleWatcher", i8, %"class.blink::WebSocketChannelImpl::ConnectionCountTrackerHandle", %class.scoped_refptr.11 }
%"class.network::mojom::blink::WebSocketHandshakeClient" = type { i32 (...)** }
%"class.network::mojom::blink::WebSocketClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1805" = type { i8 }
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::WebSocketChannelClient"* }
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::WebSocketChannelImpl::BlobLoader"* }
%"class.blink::WebSocketChannelImpl::BlobLoader" = type opaque
%"class.WTF::Deque.1810" = type { %"class.WTF::Deque<blink::WebSocketChannelImpl::Message, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebSocketChannelImpl::Message, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"class.blink::WebSocketChannelImpl::Message"*, i32, i32 }
%"class.blink::WebSocketChannelImpl::Message" = type { %"class.std::__1::unique_ptr.1815", i32, %class.scoped_refptr.1636, %"class.base::span", %"class.base::StrongAlias.1819", i16, %"class.WTF::String", %"class.base::OnceCallback.165" }
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817", %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::WebSocketChannelImpl::MessageDataDeleter" }
%"class.blink::WebSocketChannelImpl::MessageDataDeleter" = type { %"class.v8::Isolate"*, i64 }
%"class.base::StrongAlias.1819" = type { i8 }
%"class.blink::WebSocketMessageChunkAccumulator" = type { %"class.WTF::Vector.1820", %"class.WTF::Vector.1820", i64, i32, %"class.blink::TaskRunnerTimer" }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822" }
%"class.WTF::VectorBufferBase.1822" = type { %"class.std::__1::unique_ptr.1823"*, i32, i32 }
%"class.std::__1::unique_ptr.1823" = type { %"class.std::__1::__compressed_pair.1824" }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WebSocketMessageChunkAccumulator"*, { i64, i64 } }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1828" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1828" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.blink::SourceLocation"* }
%"class.mojo::StructPtr.1835" = type { %"class.std::__1::unique_ptr.1836" }
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"class.network::mojom::blink::WebSocketHandshakeRequest"* }
%"class.network::mojom::blink::WebSocketHandshakeRequest" = type { %"class.blink::KURL", %"class.WTF::Vector.1839", %"class.WTF::String" }
%"class.WTF::Vector.1839" = type { %"class.WTF::VectorBuffer.1840" }
%"class.WTF::VectorBuffer.1840" = type { %"class.WTF::VectorBufferBase.1841" }
%"class.WTF::VectorBufferBase.1841" = type { %"class.mojo::InlinedStructPtr.1842"*, i32, i32 }
%"class.mojo::InlinedStructPtr.1842" = type <{ %"class.network::mojom::blink::HttpHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::HttpHeader" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.std::__1::unique_ptr.1849" = type { %"class.std::__1::__compressed_pair.1850" }
%"class.std::__1::__compressed_pair.1850" = type { %"struct.std::__1::__compressed_pair_elem.1851" }
%"struct.std::__1::__compressed_pair_elem.1851" = type { %"class.blink::WebSocketHandshakeThrottle"* }
%"class.blink::WebSocketHandshakeThrottle" = type opaque
%"class.std::__1::unique_ptr.1855" = type { %"class.std::__1::__compressed_pair.1856" }
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"struct.blink::WebSocketChannelImpl::ConnectInfo"* }
%"struct.blink::WebSocketChannelImpl::ConnectInfo" = type opaque
%"class.blink::HeapMojoRemote.1861" = type { %"class.blink::Member.1862" }
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::WebSocket, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::WebSocket, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.1864" = type { %"class.blink::Member.1865" }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketHandshakeClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketHandshakeClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.1867" = type { %"class.blink::Member.1868" }
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.mojo::ScopedHandleBase.1870" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.WTF::Deque.1871" = type { %"class.WTF::Deque<blink::WebSocketChannelImpl::DataFrame, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebSocketChannelImpl::DataFrame, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { %"struct.blink::WebSocketChannelImpl::DataFrame"*, i32, i32 }
%"struct.blink::WebSocketChannelImpl::DataFrame" = type { i8, i32, i32 }
%"class.mojo::ScopedHandleBase.1876" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.blink::WebSocketChannelImpl::ConnectionCountTrackerHandle" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::CloseEvent" = type { %"class.blink::Event", i8, i16, %"class.WTF::String" }
%"class.blink::EventDispatcher" = type opaque

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink12DOMWebSocket18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink12DOMWebSocket13CreateChannelEPNS_16ExecutionContextEPNS_22WebSocketChannelClientE = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_12DOMWebSocketEED0Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12DOMWebSocket10EventQueueEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12DOMWebSocket10EventQueueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12DOMWebSocket10EventQueueEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink10CloseEventD2Ev = comdat any

$_ZN5blink10CloseEventD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink10CloseEvent5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink10CloseEvent18GetWrapperTypeInfoEv = comdat any

$_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv = comdat any

$_ZNK5blink10CloseEvent13InterfaceNameEv = comdat any

$_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE = comdat any

$_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv = comdat any

$_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_12DOMWebSocketEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink10CloseEventE = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Unpause\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/modules/websockets/dom_websocket.cc\00", align 1
@_ZN5blink12DOMWebSocket11kConnectingE = hidden local_unnamed_addr constant i32 0, align 4
@_ZN5blink12DOMWebSocket5kOpenE = hidden local_unnamed_addr constant i32 1, align 4
@_ZN5blink12DOMWebSocket8kClosingE = hidden local_unnamed_addr constant i32 2, align 4
@_ZN5blink12DOMWebSocket7kClosedE = hidden local_unnamed_addr constant i32 3, align 4
@_ZTVN5blink12DOMWebSocketE = hidden unnamed_addr constant { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] } { [39 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocketD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocketD0Ev to i8*), i8* bitcast (i1 (%"class.blink::DOMWebSocket"*)* @_ZNK5blink12DOMWebSocket18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*)* @_ZNK5blink12DOMWebSocket5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMWebSocket"*)* @_ZNK5blink12DOMWebSocket18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::DOMWebSocket"*)* @_ZNK5blink12DOMWebSocket13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)* @_ZNK5blink12DOMWebSocket19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocket16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i32)* @_ZN5blink12DOMWebSocket28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink12DOMWebSocket10DidConnectERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::String"*)* @_ZN5blink12DOMWebSocket21DidReceiveTextMessageERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::Vector.1688"*)* @_ZN5blink12DOMWebSocket23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocket8DidErrorEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i64)* @_ZN5blink12DOMWebSocket24DidConsumeBufferedAmountEm to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocket24DidStartClosingHandshakeEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i32, i16, %"class.WTF::String"*)* @_ZN5blink12DOMWebSocket8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)* @_ZN5blink12DOMWebSocket13CreateChannelEPNS_16ExecutionContextEPNS_22WebSocketChannelClientE to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn72_N5blink12DOMWebSocketD1Ev to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn72_N5blink12DOMWebSocketD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE26DispatchHasPendingActivityEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn80_N5blink12DOMWebSocketD1Ev to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn80_N5blink12DOMWebSocketD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn80_N5blink12DOMWebSocket16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i32)* @_ZThn80_N5blink12DOMWebSocket28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*)], [12 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn104_N5blink12DOMWebSocketD1Ev to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn104_N5blink12DOMWebSocketD0Ev to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn104_N5blink12DOMWebSocket10DidConnectERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::String"*)* @_ZThn104_N5blink12DOMWebSocket21DidReceiveTextMessageERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, %"class.WTF::Vector.1688"*)* @_ZThn104_N5blink12DOMWebSocket23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn104_N5blink12DOMWebSocket8DidErrorEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i64)* @_ZThn104_N5blink12DOMWebSocket24DidConsumeBufferedAmountEm to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*)* @_ZThn104_N5blink12DOMWebSocket24DidStartClosingHandshakeEv to i8*), i8* bitcast (void (%"class.blink::DOMWebSocket"*, i32, i16, %"class.WTF::String"*)* @_ZThn104_N5blink12DOMWebSocket8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"Failed to create a WebSocket: the provided URL is invalid.\00", align 1
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.4 = private unnamed_addr constant [49 x i8] c"WebSocket is already in CLOSING or CLOSED state.\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"PostBufferedAmountUpdateTask\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"arraybuffer\00", align 1
@_ZN5blink18event_target_names10kWebSocketE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kOpenE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.8 = private unnamed_addr constant [27 x i8] c"WebCore.WebSocket.SendType\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.10 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_12DOMWebSocketEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_12DOMWebSocketEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.13 = private unnamed_addr constant [27 x i8] c"Still in CONNECTING state.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink12DOMWebSocket18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.16 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.17 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5EventEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [151 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Event>, WTF::VectorTraits<blink::Member<blink::Event> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12DOMWebSocket10EventQueueEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DOMWebSocket::EventQueue]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12DOMWebSocket10EventQueueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12DOMWebSocket10EventQueueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink16event_type_names6kCloseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink10CloseEventE = linkonce_odr hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CloseEvent"*)* @_ZN5blink10CloseEventD2Ev to i8*), i8* bitcast (void (%"class.blink::CloseEvent"*)* @_ZN5blink10CloseEventD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CloseEvent"*, %"class.blink::Visitor"*)* @_ZNK5blink10CloseEvent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CloseEvent"*)* @_ZNK5blink10CloseEvent18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::CloseEvent"*)* @_ZNK5blink10CloseEvent13InterfaceNameEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event9IsUIEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsMouseEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsFocusEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event15IsKeyboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsTouchEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsGestureEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsWheelEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsPointerEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsInputEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event18IsCompositionEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event11IsDragEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event16IsClipboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeTextInsertedEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event19IsBeforeUnloadEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsErrorEventEv to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14preventDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"*)* @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv to i8*), i8* bitcast (i32 (%"class.blink::Event"*, %"class.blink::EventDispatcher"*)* @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14ReceivedTargetEv to i8*)] }, comdat, align 8
@_ZN5blink10CloseEvent18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink21event_interface_names11kCloseEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

@_ZN5blink12DOMWebSocket10EventQueueC1EPNS_11EventTargetE = hidden unnamed_addr alias void (%"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::EventTarget"*), void (%"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::EventTarget"*)* @_ZN5blink12DOMWebSocket10EventQueueC2EPNS_11EventTargetE
@_ZN5blink12DOMWebSocket10EventQueueD1Ev = hidden unnamed_addr alias void (%"class.blink::DOMWebSocket::EventQueue"*), void (%"class.blink::DOMWebSocket::EventQueue"*)* @_ZN5blink12DOMWebSocket10EventQueueD2Ev
@_ZN5blink12DOMWebSocketC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*), void (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*)* @_ZN5blink12DOMWebSocketC2EPNS_16ExecutionContextE
@_ZN5blink12DOMWebSocketD1Ev = hidden unnamed_addr alias void (%"class.blink::DOMWebSocket"*), void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocketD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueueC2EPNS_11EventTargetE(%"class.blink::DOMWebSocket::EventQueue"* nocapture, %"class.blink::EventTarget"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::EventTarget"* %1, %"class.blink::EventTarget"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::HeapDeque"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueueD2Ev(%"class.blink::DOMWebSocket::EventQueue"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::Event"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::Event"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %49 [
    i32 0, label %6
    i32 1, label %10
    i32 2, label %10
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %7, align 8
  %9 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %8, %"class.blink::Event"* dereferenceable(104) %1) #8
  br label %49

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %20, label %17

17:                                               ; preds = %10
  %18 = add i32 %16, 1
  %19 = icmp eq i32 %18, %13
  br i1 %19, label %29, label %31

20:                                               ; preds = %10
  %21 = icmp eq i32 %16, 0
  %22 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  br i1 %21, label %27, label %24

24:                                               ; preds = %20
  %25 = add i32 %23, -1
  %26 = icmp eq i32 %16, %25
  br i1 %26, label %29, label %31

27:                                               ; preds = %20
  %28 = icmp eq i32 %23, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27, %24, %17
  tail call void @_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %11) #8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %29, %27, %24, %17
  %32 = phi i32 [ %16, %17 ], [ %16, %24 ], [ 0, %27 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %33, align 8
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %34, i64 %35
  %37 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, -1
  %40 = icmp eq i32 %32, %39
  %41 = add i32 %32, 1
  %42 = select i1 %40, i32 0, i32 %41
  store i32 %42, i32* %15, align 4
  %43 = bitcast %"class.blink::Member.4"* %36 to i64*
  store atomic i64 %3, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %31
  %47 = bitcast %"class.blink::Event"* %1 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %46, %31, %2, %6
  ret void
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMWebSocket10EventQueue7IsEmptyEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue5PauseEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 3, label %5
    i32 1, label %5
  ]

4:                                                ; preds = %1
  store i32 1, i32* %2, align 8
  br label %5

5:                                                ; preds = %1, %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue7UnpauseEv(%"class.blink::DOMWebSocket::EventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback.165", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.blink::WeakPersistent", align 8
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %95

10:                                               ; preds = %1
  store i32 2, i32* %7, align 8
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %11, align 8
  %13 = bitcast %"class.blink::EventTarget"* %12 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %14, i64 10
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %15, align 8
  %17 = tail call %"class.blink::ExecutionContext"* %16(%"class.blink::EventTarget"* %12) #8
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 0, i32 1
  %19 = bitcast %"class.blink::MojoBindingContext"* %18 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %20 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %19, align 8
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %20, i64 6
  %22 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %21, align 8
  %23 = tail call %"class.base::SingleThreadTaskRunner"* %22(%"class.blink::MojoBindingContext"* %18, i8 zeroext 12) #8
  %24 = bitcast %"class.base::SingleThreadTaskRunner"* %23 to %"class.base::TaskRunner"*
  %25 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 117) #8
  %26 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DOMWebSocket::EventQueue"*)* @_ZN5blink12DOMWebSocket10EventQueue11UnpauseTaskEv to i64), i64 0>, <2 x i64>* %4, align 16
  %27 = bitcast %"class.blink::WeakPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0, i32 0
  store %"class.blink::DOMWebSocket::EventQueue"* %0, %"class.blink::DOMWebSocket::EventQueue"** %29, align 8, !alias.scope !2
  %30 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %30, align 8, !alias.scope !2
  %31 = ptrtoint %"class.blink::DOMWebSocket::EventQueue"* %0 to i64
  switch i64 %31, label %32 [
    i64 0, label %58
    i64 -1, label %58
  ]

32:                                               ; preds = %10
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !2
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #8, !noalias !2
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !5

37:                                               ; preds = %32
  %38 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #8
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8, !noalias !2
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %43, align 8, !noalias !2
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8, !noalias !2
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %48, label %51, !prof !5

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %49) #8
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  br label %51

51:                                               ; preds = %48, %39
  %52 = phi %"class.blink::PersistentNode"* [ %50, %48 ], [ %46, %39 ]
  %53 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !2
  %55 = bitcast %"class.blink::PersistentRegion"* %44 to i64*
  store i64 %54, i64* %55, align 8, !noalias !2
  %56 = bitcast %"class.blink::PersistentNode"* %52 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %28, %"class.blink::PersistentBase"** %56, align 8, !noalias !2
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %30, align 8, !alias.scope !2
  br label %58

58:                                               ; preds = %10, %10, %51
  %59 = call i8* @_Znwm(i64 64) #15, !noalias !6
  %60 = bitcast i8* %59 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %5, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %6) #8, !noalias !6
  %61 = bitcast %"class.base::OnceCallback.165"* %3 to i8**
  store i8* %59, i8** %61, align 8, !alias.scope !6
  %62 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %24, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback.165"* nonnull %3) #8
  %63 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #8
  %64 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %65 = icmp eq %"class.blink::PersistentNode"* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %58
  %67 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %68 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %67, i64 0, i32 1
  %69 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %68) #8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %73, !prof !5

71:                                               ; preds = %66
  %72 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %68, i8* %72) #8
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i8* [ %72, %71 ], [ %69, %66 ]
  %75 = bitcast i8* %74 to %"class.blink::ThreadState"**
  %76 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %76, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %77, align 8
  %79 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0, i32 0
  %81 = bitcast %"class.blink::PersistentRegion"* %78 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::PersistentNode"* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %79, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %84, align 8
  store %"class.blink::PersistentNode"* %79, %"class.blink::PersistentNode"** %80, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %30, align 8
  br label %85

85:                                               ; preds = %58, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #8
  %86 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %88, i64 -2
  %94 = bitcast %"class.base::RefCountedThreadSafe"* %93 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %94) #8
  br label %95

95:                                               ; preds = %92, %87, %85, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.165"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue11UnpauseTaskEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i32 0, i32* %2, align 8
  tail call void @_ZN5blink12DOMWebSocket10EventQueue20DispatchQueuedEventsEv(%"class.blink::DOMWebSocket::EventQueue"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue16ContextDestroyedEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  store i32 3, i32* %2, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %8, %10
  %12 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %12, align 8
  br i1 %11, label %17, label %14

14:                                               ; preds = %5
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %13, i64 %15
  br label %27

17:                                               ; preds = %5
  %18 = zext i32 %10 to i64
  %19 = bitcast %"class.blink::Member.4"* %13 to i8*
  %20 = shl nuw nsw i64 %18, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %19, i64 %20) #8
  %21 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %12, align 8
  %22 = load i32, i32* %7, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %21, i64 %23
  br label %27

27:                                               ; preds = %14, %17
  %28 = phi i32 [ %10, %14 ], [ %25, %17 ]
  %29 = phi %"class.blink::Member.4"* [ %13, %14 ], [ %21, %17 ]
  %30 = phi %"class.blink::Member.4"* [ %16, %14 ], [ %26, %17 ]
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %29, i64 %31
  %33 = bitcast %"class.blink::Member.4"* %30 to i8*
  %34 = ptrtoint %"class.blink::Member.4"* %32 to i64
  %35 = ptrtoint %"class.blink::Member.4"* %30 to i64
  %36 = sub i64 %34, %35
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %33, i64 %36) #8
  store i32 0, i32* %7, align 8
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Deque"* %6 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %38) #8
  %39 = bitcast %"class.WTF::Deque"* %6 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  %40 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %40, align 8
  br label %41

41:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink12DOMWebSocket10EventQueue8IsPausedEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10EventQueue20DispatchQueuedEventsEv(%"class.blink::DOMWebSocket::EventQueue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapDeque", align 8
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %170

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HeapDeque"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.blink::HeapDeque"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false)
  %17 = load i32, i32* %15, align 8
  %18 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %17, %19
  %21 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = select i1 %20, i32 %22, i32 %19
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.WTF::Deque"* %14 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::HeapDeque"* %2 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  store i32 %22, i32* %9, align 8
  store i32 0, i32* %21, align 4
  store i32 %23, i32* %10, align 4
  store i32 0, i32* %24, align 4
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  %30 = inttoptr i64 %26 to %"class.blink::Member.4"*
  br i1 %29, label %34, label %31

31:                                               ; preds = %6
  %32 = inttoptr i64 %26 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #8
  br label %34

34:                                               ; preds = %31, %6
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.WTF::Deque"* %14 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #8
  br label %41

41:                                               ; preds = %34, %37
  %42 = load i32, i32* %15, align 4
  store i32 %42, i32* %11, align 8
  store i32 0, i32* %15, align 4
  %43 = load i32, i32* %18, align 4
  store i32 %43, i32* %12, align 4
  store i32 0, i32* %18, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %70, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = add i32 %22, -1
  br label %48

48:                                               ; preds = %45, %53
  %49 = phi i32 [ %42, %45 ], [ %67, %53 ]
  %50 = load i32, i32* %3, align 8
  %51 = add i32 %50, -1
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %46, align 8
  %55 = zext i32 %49 to i64
  %56 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %30, i64 %55
  %57 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::Event"*, %"class.blink::Event"** %57, align 8, !noalias !13
  %59 = add i32 %49, 1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %30, i64 %60
  %62 = bitcast %"class.blink::Member.4"* %56 to i8*
  %63 = ptrtoint %"class.blink::Member.4"* %61 to i64
  %64 = ptrtoint %"class.blink::Member.4"* %56 to i64
  %65 = sub i64 %63, %64
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %62, i64 %65) #8, !noalias !13
  %66 = icmp eq i32 %49, %47
  %67 = select i1 %66, i32 0, i32 %59
  store i32 %67, i32* %11, align 8, !noalias !13
  %68 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %54, %"class.blink::Event"* dereferenceable(104) %58) #8
  %69 = icmp eq i32 %67, %43
  br i1 %69, label %70, label %48

70:                                               ; preds = %53, %48, %41
  %71 = phi i32 [ %42, %41 ], [ %43, %53 ], [ %49, %48 ]
  %72 = load i32, i32* %3, align 8
  %73 = add i32 %72, -1
  %74 = icmp ult i32 %73, 2
  br i1 %74, label %75, label %169

75:                                               ; preds = %70
  %76 = load i32, i32* %15, align 8
  %77 = load i32, i32* %18, align 4
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %142, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %79, %133
  %82 = phi i32 [ %76, %79 ], [ %134, %133 ]
  %83 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %80, align 8, !noalias !16
  %84 = zext i32 %82 to i64
  %85 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %83, i64 %84
  %86 = bitcast %"class.blink::Member.4"* %85 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !16
  %88 = add i32 %82, 1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %83, i64 %89
  %91 = bitcast %"class.blink::Member.4"* %85 to i8*
  %92 = ptrtoint %"class.blink::Member.4"* %90 to i64
  %93 = ptrtoint %"class.blink::Member.4"* %85 to i64
  %94 = sub i64 %92, %93
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %91, i64 %94) #8, !noalias !16
  %95 = load i32, i32* %15, align 8, !noalias !16
  %96 = load i32, i32* %21, align 8, !noalias !16
  %97 = add i32 %96, -1
  %98 = icmp eq i32 %95, %97
  %99 = add i32 %95, 1
  %100 = select i1 %98, i32 0, i32 %99
  store i32 %100, i32* %15, align 8, !noalias !16
  %101 = load i32, i32* %11, align 8
  %102 = icmp eq i32 %101, 0
  %103 = load i32, i32* %12, align 4
  br i1 %102, label %107, label %104

104:                                              ; preds = %81
  %105 = add i32 %103, 1
  %106 = icmp eq i32 %105, %101
  br i1 %106, label %115, label %117

107:                                              ; preds = %81
  %108 = icmp eq i32 %103, 0
  %109 = load i32, i32* %9, align 8
  br i1 %108, label %113, label %110

110:                                              ; preds = %107
  %111 = add i32 %109, -1
  %112 = icmp eq i32 %103, %111
  br i1 %112, label %115, label %117

113:                                              ; preds = %107
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %113, %110, %104
  call void @_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* nonnull %13) #8
  %116 = load i32, i32* %12, align 4
  br label %117

117:                                              ; preds = %115, %113, %110, %104
  %118 = phi i32 [ %103, %104 ], [ %103, %110 ], [ 0, %113 ], [ %116, %115 ]
  %119 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %8, align 8
  %120 = zext i32 %118 to i64
  %121 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %119, i64 %120
  %122 = load i32, i32* %9, align 8
  %123 = add i32 %122, -1
  %124 = icmp eq i32 %118, %123
  %125 = add i32 %118, 1
  %126 = select i1 %124, i32 0, i32 %125
  store i32 %126, i32* %12, align 4
  %127 = bitcast %"class.blink::Member.4"* %121 to i64*
  store atomic i64 %87, i64* %127 monotonic, align 8
  %128 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %117
  %131 = inttoptr i64 %87 to i8*
  %132 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %131) #8
  br label %133

133:                                              ; preds = %117, %130
  %134 = load i32, i32* %15, align 8
  %135 = load i32, i32* %18, align 4
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %137, label %81

137:                                              ; preds = %133
  %138 = load i32, i32* %11, align 8
  %139 = load i32, i32* %12, align 4
  %140 = load i32, i32* %9, align 8
  %141 = load i64, i64* %27, align 8
  br label %142

142:                                              ; preds = %137, %75
  %143 = phi i64 [ %26, %75 ], [ %141, %137 ]
  %144 = phi i32 [ %22, %75 ], [ %140, %137 ]
  %145 = phi i32 [ %43, %75 ], [ %139, %137 ]
  %146 = phi i32 [ %71, %75 ], [ %138, %137 ]
  %147 = phi i32 [ %76, %75 ], [ %134, %137 ]
  %148 = icmp ugt i32 %146, %145
  %149 = select i1 %148, i32 %144, i32 %145
  %150 = load i64, i64* %25, align 8
  store atomic i64 %143, i64* %25 monotonic, align 8
  store atomic i64 %150, i64* %27 monotonic, align 8
  %151 = load i32, i32* %21, align 4
  store i32 %151, i32* %9, align 8
  store i32 %144, i32* %21, align 4
  store i32 %147, i32* %10, align 4
  store i32 %149, i32* %24, align 4
  %152 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %142
  %155 = inttoptr i64 %150 to i8*
  %156 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %155) #8
  br label %157

157:                                              ; preds = %154, %142
  %158 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.WTF::Deque"* %14 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #8
  br label %164

164:                                              ; preds = %157, %160
  %165 = load i32, i32* %11, align 8
  %166 = load i32, i32* %15, align 4
  store i32 %166, i32* %11, align 8
  store i32 %165, i32* %15, align 4
  %167 = load i32, i32* %12, align 4
  %168 = load i32, i32* %18, align 4
  store i32 %168, i32* %12, align 4
  store i32 %167, i32* %18, align 4
  br label %169

169:                                              ; preds = %70, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  br label %170

170:                                              ; preds = %1, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMWebSocket10EventQueue5TraceEPNS_7VisitorE(%"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::HeapDeque"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapDeque"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #8
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocketC2EPNS_16ExecutionContextE(%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %3) #8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::EventTargetData"* %5 to i8*
  %7 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %8 = bitcast i8* %7 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %8) #8
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_12DOMWebSocketEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %10 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"* %11, %"class.blink::ExecutionContext"* %1) #8
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %13 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::WebSocketChannel"* null, %"class.blink::WebSocketChannel"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %15) #8
  %16 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 13
  %19 = bitcast %"class.WTF::StringImpl"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false)
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #8
  %20 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 14
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #8
  %21 = ptrtoint %"class.blink::DOMWebSocket"* %0 to i64
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12DOMWebSocket10EventQueueEEEPhm(i64 40) #8
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #8
  %27 = getelementptr inbounds i8, i8* %22, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %32 = bitcast %"class.blink::DOMWebSocket::EventQueue"** %31 to i8**
  store i8* %22, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 16
  store i8 0, i8* %33, align 8
  ret void
}

declare void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 2
  %5 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %23

23:                                               ; preds = %1, %19, %22
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 13, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #8
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %58) #8
  %59 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %4 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %59) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %60 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 1
  %61 = bitcast %"class.blink::EventTargetData"* %60 to i8*
  %62 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %61, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %63 = bitcast i8* %62 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %63) #8
  %64 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %64) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink12DOMWebSocketD1Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 7
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink12DOMWebSocketD1Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 1
  %3 = bitcast i32* %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocketD1Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %3 = bitcast %"struct.url::Parsed"** %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocketD0Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink12DOMWebSocketD0Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 7
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink12DOMWebSocketD0Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 1
  %3 = bitcast i32* %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocketD0Ev(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %3 = bitcast %"struct.url::Parsed"** %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocketD2Ev(%"class.blink::DOMWebSocket"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket8LogErrorERKN3WTF6StringE(%"class.blink::DOMWebSocket"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::DOMWebSocket"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)***
  %4 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %4, i64 10
  %6 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %5, align 8
  %7 = tail call %"class.blink::ExecutionContext"* %6(%"class.blink::DOMWebSocket"* %0) #8
  %8 = icmp eq %"class.blink::ExecutionContext"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %10, i64 10
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %11, align 8
  %13 = tail call %"class.blink::ExecutionContext"* %12(%"class.blink::DOMWebSocket"* %0) #8
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #8
  %15 = bitcast i8* %14 to %"class.blink::ConsoleMessage"*
  %16 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #8
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %15, i32 1, i32 3, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::SourceLocation"* %16) #8
  %17 = getelementptr inbounds i8, i8* %14, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = bitcast %"class.blink::ExecutionContext"* %13 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %22 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %22, i64 52
  %24 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %23, align 8
  tail call void %24(%"class.blink::ExecutionContext"* %13, %"class.blink::ConsoleMessage"* %15, i1 zeroext false) #8
  br label %25

25:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWebSocket"* @_ZN5blink12DOMWebSocket6CreateEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.122", align 8
  %5 = bitcast %"class.WTF::Vector.122"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #8
  %7 = bitcast i8* %6 to %"class.blink::V8UnionStringOrStringSequence"*
  call void @_ZN5blink29V8UnionStringOrStringSequenceC1EON3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionStringOrStringSequence"* %7, %"class.WTF::Vector.122"* nonnull dereferenceable(16) %4) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = call %"class.blink::DOMWebSocket"* @_ZN5blink12DOMWebSocket6CreateEPNS_16ExecutionContextERKN3WTF6StringEPKNS_29V8UnionStringOrStringSequenceERNS_14ExceptionStateE(%"class.blink::ExecutionContext"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::V8UnionStringOrStringSequence"* %7, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %13 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %13, align 8
  %15 = icmp eq %"class.WTF::String"* %14, null
  br i1 %15, label %50, label %16, !prof !19

16:                                               ; preds = %3
  %17 = bitcast %"class.WTF::String"* %14 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %4, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %48, label %21, !prof !5

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 %22
  br label %24

24:                                               ; preds = %42, %21
  %25 = phi %"class.WTF::String"* [ %43, %42 ], [ %14, %21 ]
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %42

42:                                               ; preds = %41, %38, %24
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 1
  %44 = icmp eq %"class.WTF::String"* %43, %23
  br i1 %44, label %45, label %24

45:                                               ; preds = %42
  store i32 0, i32* %18, align 4
  %46 = bitcast %"class.WTF::Vector.122"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %16
  %49 = phi i8* [ %47, %45 ], [ %17, %16 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %13, align 8
  br label %50

50:                                               ; preds = %3, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret %"class.blink::DOMWebSocket"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWebSocket"* @_ZN5blink12DOMWebSocket6CreateEPNS_16ExecutionContextERKN3WTF6StringEPKNS_29V8UnionStringOrStringSequenceERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::V8UnionStringOrStringSequence"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.122", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %104

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 312) #8
  %12 = bitcast i8* %11 to %"class.blink::DOMWebSocket"*
  %13 = bitcast i8* %11 to %"class.blink::EventTarget"*
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %13) #8
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %17 = bitcast i8* %16 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %17) #8
  %18 = getelementptr inbounds i8, i8* %11, i64 72
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_12DOMWebSocketEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 80
  %21 = bitcast i8* %20 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"* %21, %"class.blink::ExecutionContext"* %0) #8
  %22 = getelementptr inbounds i8, i8* %11, i64 104
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %24 = bitcast i8* %18 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }, { [39 x i8*], [7 x i8*], [9 x i8*], [12 x i8*] }* @_ZTVN5blink12DOMWebSocketE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 112
  %26 = bitcast i8* %25 to %"class.blink::WebSocketChannel"**
  store %"class.blink::WebSocketChannel"* null, %"class.blink::WebSocketChannel"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %11, i64 120
  %28 = bitcast i8* %27 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %28) #8
  %29 = getelementptr inbounds i8, i8* %11, i64 232
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %11, i64 240
  %32 = getelementptr inbounds i8, i8* %11, i64 280
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 36, i1 false) #8
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #8
  %34 = getelementptr inbounds i8, i8* %11, i64 288
  %35 = bitcast i8* %34 to %"class.WTF::String"*
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #8
  %36 = ptrtoint i8* %11 to i64
  %37 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12DOMWebSocket10EventQueueEEEPhm(i64 40) #8
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #8
  %42 = getelementptr inbounds i8, i8* %37, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = getelementptr inbounds i8, i8* %11, i64 296
  %47 = bitcast i8* %46 to i8**
  store i8* %37, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %11, i64 304
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds i8, i8* %11, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = bitcast i8* %18 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %53) #8
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"* %21) #8
  %54 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %99 [
    i32 0, label %56
    i32 1, label %97
  ]

56:                                               ; preds = %10
  %57 = bitcast %"class.WTF::Vector.122"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #8
  %60 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 2
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.122"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %60) #8
  call void @_ZN5blink12DOMWebSocket7ConnectERKN3WTF6StringERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Vector.122"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %61 = load %"class.WTF::String"*, %"class.WTF::String"** %58, align 8
  %62 = icmp eq %"class.WTF::String"* %61, null
  br i1 %62, label %96, label %63, !prof !19

63:                                               ; preds = %56
  %64 = bitcast %"class.WTF::String"* %61 to i8*
  %65 = load i32, i32* %59, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %94, label %67, !prof !5

67:                                               ; preds = %63
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 %68
  br label %70

70:                                               ; preds = %88, %67
  %71 = phi %"class.WTF::String"* [ %89, %88 ], [ %61, %67 ]
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %87, %84, %70
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 1
  %90 = icmp eq %"class.WTF::String"* %89, %69
  br i1 %90, label %91, label %70

91:                                               ; preds = %88
  store i32 0, i32* %59, align 4
  %92 = bitcast %"class.WTF::Vector.122"* %5 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %63
  %95 = phi i8* [ %93, %91 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %58, align 8
  br label %96

96:                                               ; preds = %56, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  br label %99

97:                                               ; preds = %10
  %98 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 3
  tail call void @_ZN5blink12DOMWebSocket7ConnectERKN3WTF6StringERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Vector.122"* dereferenceable(16) %98, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %99

99:                                               ; preds = %10, %97, %96
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  %103 = select i1 %102, %"class.blink::DOMWebSocket"* %12, %"class.blink::DOMWebSocket"* null
  br label %104

104:                                              ; preds = %99, %9
  %105 = phi %"class.blink::DOMWebSocket"* [ null, %9 ], [ %103, %99 ]
  ret %"class.blink::DOMWebSocket"* %105
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket7ConnectERKN3WTF6StringERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.122"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::DOMWebSocket"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)***
  %6 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %6, i64 10
  %8 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %7, align 8
  %9 = tail call %"class.blink::ExecutionContext"* %8(%"class.blink::DOMWebSocket"* %0) #8
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1149) #8
  br label %19

19:                                               ; preds = %4, %14
  %20 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %5, align 8
  %21 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %20, i64 10
  %22 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %21, align 8
  %23 = tail call %"class.blink::ExecutionContext"* %22(%"class.blink::DOMWebSocket"* %0) #8
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 4
  %25 = bitcast %"class.blink::DOMWebSocket"* %0 to %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)***
  %26 = load %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)**, %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)*, %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)** %26, i64 36
  %28 = load %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)*, %"class.blink::WebSocketChannel"* (%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*)** %27, align 8
  %29 = tail call %"class.blink::WebSocketChannel"* %28(%"class.blink::DOMWebSocket"* %0, %"class.blink::ExecutionContext"* %23, %"class.blink::WebSocketChannelClient"* %24) #8
  %30 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5
  %31 = ptrtoint %"class.blink::WebSocketChannel"* %29 to i64
  %32 = bitcast %"class.blink::Member.455"* %30 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %19
  %36 = bitcast %"class.blink::WebSocketChannel"* %29 to i8*
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #8
  br label %38

38:                                               ; preds = %19, %35
  %39 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6
  %40 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %5, align 8
  %41 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %40, i64 10
  %42 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %41, align 8
  %43 = tail call %"class.blink::ExecutionContext"* %42(%"class.blink::DOMWebSocket"* %0) #8
  %44 = getelementptr inbounds %"class.blink::Member.455", %"class.blink::Member.455"* %30, i64 0, i32 0, i32 0
  %45 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %44, align 8
  %46 = tail call i32 @_ZN5blink15WebSocketCommon7ConnectEPNS_16ExecutionContextERKN3WTF6StringERKNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* %39, %"class.blink::ExecutionContext"* %43, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Vector.122"* dereferenceable(16) %2, %"class.blink::WebSocketChannel"* %45, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  switch i32 %46, label %97 [
    i32 0, label %47
    i32 1, label %79
    i32 2, label %80
  ]

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %39, i64 0, i32 0
  %49 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %48) #8
  %50 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %49) #8
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 %51, i64* %53, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #8
  br label %70

70:                                               ; preds = %69, %66, %47
  %71 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %71, label %97, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #8
  %74 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %97

77:                                               ; preds = %72
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %49) #8
  %78 = bitcast %"class.blink::SecurityOrigin"* %49 to i8*
  tail call void @free(i8* %78) #8
  br label %97

79:                                               ; preds = %38
  store atomic i64 0, i64* %32 monotonic, align 8
  br label %97

80:                                               ; preds = %38
  %81 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %82 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %85 [
    i32 3, label %87
    i32 1, label %87
  ]

85:                                               ; preds = %80
  store i32 1, i32* %83, align 8
  %86 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %81, align 8
  br label %87

87:                                               ; preds = %80, %80, %85
  %88 = phi %"class.blink::DOMWebSocket::EventQueue"* [ %82, %80 ], [ %82, %80 ], [ %86, %85 ]
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %90 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %91 = bitcast i8* %90 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %91, %"class.WTF::AtomicString"* dereferenceable(8) %89, i32 1, i32 1, i32 1) #8
  %92 = getelementptr inbounds i8, i8* %90, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %88, %"class.blink::Event"* %91)
  %96 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %81, align 8
  tail call void @_ZN5blink12DOMWebSocket10EventQueue7UnpauseEv(%"class.blink::DOMWebSocket::EventQueue"* %96)
  br label %97

97:                                               ; preds = %77, %72, %70, %38, %87, %79
  ret void
}

declare i32 @_ZN5blink15WebSocketCommon7ConnectEPNS_16ExecutionContextERKN3WTF6StringERKNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.122"* dereferenceable(16), %"class.blink::WebSocketChannel"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket30UpdateBufferedAmountAfterCloseEm(%"class.blink::DOMWebSocket"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 10
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %1
  store i64 %6, i64* %4, align 8
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i64 48) #8
  %8 = bitcast %"class.blink::DOMWebSocket"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)***
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %9, i64 10
  %11 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %10, align 8
  %12 = call %"class.blink::ExecutionContext"* %11(%"class.blink::DOMWebSocket"* %0) #8
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %2
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %8, align 8
  %16 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %15, i64 10
  %17 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %16, align 8
  %18 = call %"class.blink::ExecutionContext"* %17(%"class.blink::DOMWebSocket"* %0) #8
  %19 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #8
  %20 = bitcast i8* %19 to %"class.blink::ConsoleMessage"*
  %21 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #8
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %20, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::SourceLocation"* %21) #8
  %22 = getelementptr inbounds i8, i8* %19, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = bitcast %"class.blink::ExecutionContext"* %18 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %27 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %27, i64 52
  %29 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %28, align 8
  call void %29(%"class.blink::ExecutionContext"* %18, %"class.blink::ConsoleMessage"* %20, i1 zeroext false) #8
  br label %30

30:                                               ; preds = %2, %14
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #8
  br label %47

47:                                               ; preds = %30, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket28PostBufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback.165", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.blink::WeakPersistent.1630", align 8
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 8, !range !20
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %93

10:                                               ; preds = %1
  store i8 1, i8* %7, align 8
  %11 = bitcast %"class.blink::DOMWebSocket"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)***
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %12, i64 10
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %13, align 8
  %15 = tail call %"class.blink::ExecutionContext"* %14(%"class.blink::DOMWebSocket"* %0) #8
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 0, i32 1
  %17 = bitcast %"class.blink::MojoBindingContext"* %16 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %17, align 8
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %18, i64 6
  %20 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %19, align 8
  %21 = tail call %"class.base::SingleThreadTaskRunner"* %20(%"class.blink::MojoBindingContext"* %16, i8 zeroext 12) #8
  %22 = bitcast %"class.base::SingleThreadTaskRunner"* %21 to %"class.base::TaskRunner"*
  %23 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 294) #8
  %24 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DOMWebSocket"*)* @_ZN5blink12DOMWebSocket24BufferedAmountUpdateTaskEv to i64), i64 0>, <2 x i64>* %4, align 16
  %25 = bitcast %"class.blink::WeakPersistent.1630"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.blink::WeakPersistent.1630", %"class.blink::WeakPersistent.1630"* %6, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::WeakPersistent.1630", %"class.blink::WeakPersistent.1630"* %6, i64 0, i32 0, i32 0
  store %"class.blink::DOMWebSocket"* %0, %"class.blink::DOMWebSocket"** %27, align 8, !alias.scope !21
  %28 = getelementptr inbounds %"class.blink::WeakPersistent.1630", %"class.blink::WeakPersistent.1630"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !21
  %29 = ptrtoint %"class.blink::DOMWebSocket"* %0 to i64
  switch i64 %29, label %30 [
    i64 0, label %56
    i64 -1, label %56
  ]

30:                                               ; preds = %10
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !21
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8, !noalias !21
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8, !noalias !21
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8, !noalias !21
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8, !noalias !21
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %46, label %49, !prof !5

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %47) #8
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi %"class.blink::PersistentNode"* [ %48, %46 ], [ %44, %37 ]
  %51 = bitcast %"class.blink::PersistentNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !21
  %53 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  store i64 %52, i64* %53, align 8, !noalias !21
  %54 = bitcast %"class.blink::PersistentNode"* %50 to %"class.blink::PersistentBase.1631"**
  store %"class.blink::PersistentBase.1631"* %26, %"class.blink::PersistentBase.1631"** %54, align 8, !noalias !21
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %50, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %50, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !21
  br label %56

56:                                               ; preds = %10, %10, %49
  %57 = call i8* @_Znwm(i64 64) #15, !noalias !24
  %58 = bitcast i8* %57 to %"struct.base::internal::BindState.1902"*
  call void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1902"* nonnull %58, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %5, %"class.blink::WeakPersistent.1630"* nonnull dereferenceable(16) %6) #8, !noalias !24
  %59 = bitcast %"class.base::OnceCallback.165"* %3 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !24
  %60 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %22, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback.165"* nonnull %3) #8
  %61 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #8
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %56
  %65 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !5

69:                                               ; preds = %64
  %70 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #8
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::ThreadState"**
  %74 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %75, align 8
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %78 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %76, i64 0, i32 0, i32 0
  %79 = bitcast %"class.blink::PersistentRegion"* %76 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %78, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8
  br label %83

83:                                               ; preds = %56, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #8
  %84 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i32* %87, i32 1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %86, i64 -2
  %92 = bitcast %"class.base::RefCountedThreadSafe"* %91 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %92) #8
  br label %93

93:                                               ; preds = %90, %85, %83, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket24BufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"* nocapture) #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 16
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %4 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  store i64 %14, i64* %12, align 8
  store i64 0, i64* %10, align 8
  br label %15

15:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket32ReflectBufferedAmountConsumptionEv(%"class.blink::DOMWebSocket"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  store i64 %13, i64* %11, align 8
  store i64 0, i64* %9, align 8
  br label %14

14:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket14ReleaseChannelEv(%"class.blink::DOMWebSocket"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::Member.455", %"class.blink::Member.455"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %3, align 8
  %5 = bitcast %"class.blink::WebSocketChannel"* %4 to void (%"class.blink::WebSocketChannel"*)***
  %6 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %6, i64 8
  %8 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %7, align 8
  tail call void %8(%"class.blink::WebSocketChannel"* %4) #8
  %9 = bitcast %"class.blink::Member.455"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket4sendERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::OnceCallback.165", align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %54

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %1, i32 0) #8
  %15 = load i32, i32* %6, align 8
  %16 = and i32 %15, -2
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %26

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i64, i64* %13, align 8
  %24 = zext i8 %21 to i64
  %25 = select i1 %22, i64 %23, i64 %24
  call void @_ZN5blink12DOMWebSocket30UpdateBufferedAmountAfterCloseEm(%"class.blink::DOMWebSocket"* %0, i64 %25)
  br label %46

26:                                               ; preds = %10
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 0, i32 4) #8
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i64, i64* %13, align 8
  %32 = zext i8 %29 to i64
  %33 = select i1 %30, i64 %31, i64 %32
  %34 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, %33
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %37, align 8
  %39 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  %40 = bitcast %"class.blink::WebSocketChannel"* %38 to i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)***
  %41 = load i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)**, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)** %41, i64 3
  %43 = load i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.165"*)** %42, align 8
  %44 = call i32 %43(%"class.blink::WebSocketChannel"* %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::OnceCallback.165"* nonnull %5) #8
  %45 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #8
  br label %46

46:                                               ; preds = %26, %18
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %26 ], [ %19, %18 ]
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  br label %54

54:                                               ; preds = %53, %9
  ret void
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket23RecordSendTypeHistogramENS0_17WebSocketSendTypeE(%"class.blink::DOMWebSocket"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 %1, i32 4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket4sendEPNS_14DOMArrayBufferERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.blink::DOMArrayBuffer"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.165", align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %16 [
    i32 0, label %7
    i32 2, label %8
    i32 3, label %8
  ]

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %42

8:                                                ; preds = %3, %3
  %9 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %9, align 8
  %11 = icmp eq %"class.v8::BackingStore"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %10) #8
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %8 ]
  tail call void @_ZN5blink12DOMWebSocket30UpdateBufferedAmountAfterCloseEm(%"class.blink::DOMWebSocket"* %0, i64 %15)
  br label %42

16:                                               ; preds = %3
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 4) #8
  %17 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %17, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %18) #8
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi i64 [ %21, %20 ], [ 0, %16 ]
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %27, align 8
  %29 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %17, align 8
  %30 = icmp eq %"class.v8::BackingStore"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %29) #8
  br label %33

33:                                               ; preds = %22, %31
  %34 = phi i64 [ %32, %31 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %36 = bitcast %"class.blink::WebSocketChannel"* %28 to i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)***
  %37 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)**, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)** %37, i64 4
  %39 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)** %38, align 8
  %40 = call i32 %39(%"class.blink::WebSocketChannel"* %28, %"class.blink::DOMArrayBuffer"* dereferenceable(40) %1, i64 0, i64 %34, %"class.base::OnceCallback.165"* nonnull %4) #8
  %41 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  br label %42

42:                                               ; preds = %33, %14, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket4sendENS_9NotSharedINS_18DOMArrayBufferViewEEERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.165", align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %16 [
    i32 0, label %7
    i32 2, label %8
    i32 3, label %8
  ]

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %53

8:                                                ; preds = %3, %3
  %9 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %9, align 8
  %11 = bitcast %"class.blink::DOMArrayBufferView"* %10 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %12 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %12, i64 10
  %14 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %13, align 8
  %15 = tail call i64 %14(%"class.blink::DOMArrayBufferView"* %10) #8
  tail call void @_ZN5blink12DOMWebSocket30UpdateBufferedAmountAfterCloseEm(%"class.blink::DOMWebSocket"* %0, i64 %15)
  br label %53

16:                                               ; preds = %3
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 2, i32 4) #8
  %17 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %17, align 8
  %19 = bitcast %"class.blink::DOMArrayBufferView"* %18 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %20 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %20, i64 10
  %22 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %21, align 8
  %23 = tail call i64 %22(%"class.blink::DOMArrayBufferView"* %18) #8
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %27, align 8
  %29 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %17, align 8
  %30 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %29, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"class.blink::DOMArrayBufferBase"** %30 to %"class.blink::DOMArrayBuffer"**
  %32 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %32, i64 0, i32 0, i32 2
  %34 = load i8, i8* %33, align 8, !range !20
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %16
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %29, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %16, %36
  %40 = phi i64 [ %38, %36 ], [ 0, %16 ]
  %41 = bitcast %"class.blink::DOMArrayBufferView"* %29 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %42 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %42, i64 10
  %44 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %43, align 8
  %45 = tail call i64 %44(%"class.blink::DOMArrayBufferView"* %29) #8
  %46 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %47 = bitcast %"class.blink::WebSocketChannel"* %28 to i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)***
  %48 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)**, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)** %48, i64 4
  %50 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback.165"*)** %49, align 8
  %51 = call i32 %50(%"class.blink::WebSocketChannel"* %28, %"class.blink::DOMArrayBuffer"* dereferenceable(40) %32, i64 %40, i64 %45, %"class.base::OnceCallback.165"* nonnull %4) #8
  %52 = getelementptr inbounds %"class.base::OnceCallback.165", %"class.base::OnceCallback.165"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #8
  br label %53

53:                                               ; preds = %39, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket4sendEPNS_4BlobERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.blink::Blob"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %15 [
    i32 0, label %8
    i32 2, label %9
    i32 3, label %9
  ]

8:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %75

9:                                                ; preds = %3, %3
  %10 = bitcast %"class.blink::Blob"* %1 to i64 (%"class.blink::Blob"*)***
  %11 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %11, i64 9
  %13 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::Blob"* %1) #8
  tail call void @_ZN5blink12DOMWebSocket30UpdateBufferedAmountAfterCloseEm(%"class.blink::DOMWebSocket"* %0, i64 %14)
  br label %75

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::Blob"* %1 to i64 (%"class.blink::Blob"*)***
  %17 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %17, i64 9
  %19 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %18, align 8
  %20 = tail call i64 %19(%"class.blink::Blob"* %1) #8
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 3, i32 4) #8
  %21 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %20
  store i64 %23, i64* %21, align 8
  %24 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %24, align 8
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %1, i64 0, i32 3, i32 0
  %28 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %28, i64 0, i32 1
  %30 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %29) #8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %27, align 8
  %34 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %33, i64 0, i32 2
  %35 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %34) #8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = tail call noalias i8* @malloc(i64 88) #8
  %38 = bitcast i8* %37 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ERKN3WTF6StringES4_m(%"class.blink::BlobDataHandle"* %38, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i64 %20) #8
  %39 = bitcast %"class.blink::WebSocketChannel"* %25 to void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)***
  %40 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)** %40, i64 5
  %42 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::BlobDataHandle"*)** %41, align 8
  call void %42(%"class.blink::WebSocketChannel"* %25, %"class.blink::BlobDataHandle"* %38) #8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %15
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #8
  br label %58

58:                                               ; preds = %15, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #8
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %75

75:                                               ; preds = %74, %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket5closeEtRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, i16 zeroext, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = zext i16 %1 to i32
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %7, align 8
  tail call void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* %6, i32 %5, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WebSocketChannel"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket13CloseInternalEiRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %6, align 8
  tail call void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* %5, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WebSocketChannel"* %7, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket5closeERNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %7, align 8
  call void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* %6, i32 -1, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebSocketChannel"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %1) #8
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #8
  br label %24

24:                                               ; preds = %2, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket5closeEtRNS_14ExceptionStateE(%"class.blink::DOMWebSocket"*, i16 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = zext i16 %1 to i32
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %9, align 8
  call void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* %8, i32 %5, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::WebSocketChannel"* %10, %"class.blink::ExceptionState"* dereferenceable(72) %2) #8
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #8
  br label %26

26:                                               ; preds = %3, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

declare void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebSocketChannel"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink12DOMWebSocket3urlEv(%"class.blink::DOMWebSocket"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 0
  ret %"class.blink::KURL"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink12DOMWebSocket10readyStateEv(%"class.blink::DOMWebSocket"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink12DOMWebSocket14bufferedAmountEv(%"class.blink::DOMWebSocket"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 10
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12DOMWebSocket8protocolEv(%"class.blink::DOMWebSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #8
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !5

19:                                               ; preds = %10
  tail call void @llvm.trap() #8
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12DOMWebSocket10extensionsEv(%"class.blink::DOMWebSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #8
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !5

19:                                               ; preds = %10
  tail call void @llvm.trap() #8
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12DOMWebSocket10binaryTypeEv(%"class.blink::DOMWebSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %7 [
    i32 0, label %5
    i32 1, label %6
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #8
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i64 11) #8
  br label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  br label %9

9:                                                ; preds = %7, %6, %5
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket13setBinaryTypeERKN3WTF6StringE(%"class.blink::DOMWebSocket"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  br i1 %31, label %57, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %38, i64* %39, align 8
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %48

48:                                               ; preds = %40, %36
  %49 = phi i64 [ %47, %40 ], [ %38, %36 ]
  %50 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8
  %53 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 11, i32* %55, align 8
  %56 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  br i1 %56, label %57, label %60

57:                                               ; preds = %48, %23
  %58 = phi i32 [ 0, %23 ], [ 1, %48 ]
  %59 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 11
  store i32 %58, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %48
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12DOMWebSocket13InterfaceNameEv(%"class.blink::DOMWebSocket"* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names10kWebSocketE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink12DOMWebSocket19GetExecutionContextEv(%"class.blink::DOMWebSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #8
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket16ContextDestroyedEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  store i32 3, i32* %4, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 2, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %10, %12
  %14 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %14, align 8
  br i1 %13, label %19, label %16

16:                                               ; preds = %7
  %17 = zext i32 %10 to i64
  %18 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %15, i64 %17
  br label %29

19:                                               ; preds = %7
  %20 = zext i32 %12 to i64
  %21 = bitcast %"class.blink::Member.4"* %15 to i8*
  %22 = shl nuw nsw i64 %20, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %21, i64 %22) #8
  %23 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %14, align 8
  %24 = load i32, i32* %9, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %23, i64 %25
  br label %29

29:                                               ; preds = %19, %16
  %30 = phi i32 [ %27, %19 ], [ %12, %16 ]
  %31 = phi %"class.blink::Member.4"* [ %23, %19 ], [ %15, %16 ]
  %32 = phi %"class.blink::Member.4"* [ %28, %19 ], [ %18, %16 ]
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %31, i64 %33
  %35 = bitcast %"class.blink::Member.4"* %32 to i8*
  %36 = ptrtoint %"class.blink::Member.4"* %34 to i64
  %37 = ptrtoint %"class.blink::Member.4"* %32 to i64
  %38 = sub i64 %36, %37
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %35, i64 %38) #8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %11, align 4
  %39 = bitcast %"class.WTF::Deque"* %8 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %40) #8
  %41 = bitcast %"class.WTF::Deque"* %8 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  %42 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %42, align 8
  br label %43

43:                                               ; preds = %1, %29
  %44 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %44, align 8
  %46 = icmp eq %"class.blink::WebSocketChannel"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5
  %49 = bitcast %"class.blink::WebSocketChannel"* %45 to void (%"class.blink::WebSocketChannel"*)***
  %50 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %50, i64 8
  %52 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %51, align 8
  tail call void %52(%"class.blink::WebSocketChannel"* nonnull %45) #8
  %53 = bitcast %"class.blink::Member.455"* %48 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  br label %54

54:                                               ; preds = %43, %47
  %55 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  store i32 3, i32* %55, align 8
  br label %59

59:                                               ; preds = %54, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink12DOMWebSocket16ContextDestroyedEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 1
  %3 = bitcast i32* %2 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocket16ContextDestroyedEv(%"class.blink::DOMWebSocket"* %3)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMWebSocket18HasPendingActivityEv(%"class.blink::DOMWebSocket"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %2, align 8
  %4 = icmp eq %"class.blink::WebSocketChannel"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %7, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %7, i64 0, i32 2, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %9, %11
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ true, %1 ], [ %12, %5 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::DOMWebSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %5 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %4, align 8
  br i1 %3, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue7UnpauseEv(%"class.blink::DOMWebSocket::EventQueue"* %5)
  tail call void @_ZN5blink12DOMWebSocket28PostBufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"* %0)
  br label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %5, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %10 [
    i32 3, label %11
    i32 1, label %11
  ]

10:                                               ; preds = %7
  store i32 1, i32* %8, align 8
  br label %11

11:                                               ; preds = %10, %7, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink12DOMWebSocket28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::DOMWebSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 1
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds i32, i32* %3, i64 74
  %6 = bitcast i32* %5 to %"class.blink::DOMWebSocket::EventQueue"**
  %7 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %6, align 8
  br i1 %4, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocket10EventQueue7UnpauseEv(%"class.blink::DOMWebSocket::EventQueue"* %7) #8
  tail call void @_ZN5blink12DOMWebSocket28PostBufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"* %9) #8
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %7, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %13 [
    i32 3, label %14
    i32 1, label %14
  ]

13:                                               ; preds = %10
  store i32 1, i32* %11, align 8
  br label %14

14:                                               ; preds = %8, %10, %10, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket10DidConnectERKN3WTF6StringES4_(%"class.blink::DOMWebSocket"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %99

7:                                                ; preds = %3
  store i32 1, i32* %4, align 8
  %8 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 13
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !5

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %7
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #8
  br label %48

48:                                               ; preds = %29, %44, %47
  %49 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 14
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #8
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !5

67:                                               ; preds = %58
  tail call void @llvm.trap() #8
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %68, %53, %48
  %71 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %72 = bitcast %"class.WTF::String"* %49 to i64*
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #8
  br label %89

89:                                               ; preds = %70, %85, %88
  %90 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %91 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %90, align 8
  %92 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kOpenE, align 8
  %93 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %94 = bitcast i8* %93 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %94, %"class.WTF::AtomicString"* dereferenceable(8) %92, i32 1, i32 1, i32 1) #8
  %95 = getelementptr inbounds i8, i8* %93, i64 -4
  %96 = bitcast i8* %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = or i16 %97, 1
  store atomic i16 %98, i16* %96 release, align 2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %91, %"class.blink::Event"* %94)
  br label %99

99:                                               ; preds = %3, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket10DidConnectERKN3WTF6StringES4_(%"class.blink::DOMWebSocket"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %5 = bitcast %"struct.url::Parsed"** %4 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocket10DidConnectERKN3WTF6StringES4_(%"class.blink::DOMWebSocket"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket21DidReceiveTextMessageERKN3WTF6StringE(%"class.blink::DOMWebSocket"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %4 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  store i64 %14, i64* %12, align 8
  store i64 0, i64* %10, align 8
  br label %15

15:                                               ; preds = %2, %9
  %16 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #8
  %22 = bitcast i8* %21 to %"class.blink::MessageEvent"*
  tail call void @_ZN5blink12MessageEventC1ERKN3WTF6StringES4_(%"class.blink::MessageEvent"* %22, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %20) #8
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = bitcast i8* %21 to %"class.blink::Event"*
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %4, %"class.blink::Event"* %27)
  br label %28

28:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket21DidReceiveTextMessageERKN3WTF6StringE(%"class.blink::DOMWebSocket"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %4 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 37
  %5 = bitcast %"struct.url::Parsed"** %4 to %"class.blink::DOMWebSocket::EventQueue"**
  %6 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 32
  %13 = bitcast %"struct.url::Parsed"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 31
  %16 = bitcast %"struct.url::Parsed"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  store i64 %18, i64* %16, align 8
  store i64 0, i64* %13, align 8
  br label %19

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 29
  %21 = bitcast %"struct.url::Parsed"** %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 30
  %26 = bitcast %"struct.url::Parsed"** %25 to %"class.WTF::String"*
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #8
  %28 = bitcast i8* %27 to %"class.blink::MessageEvent"*
  tail call void @_ZN5blink12MessageEventC1ERKN3WTF6StringES4_(%"class.blink::MessageEvent"* %28, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %26) #8
  %29 = getelementptr inbounds i8, i8* %27, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast i8* %27 to %"class.blink::Event"*
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %6, %"class.blink::Event"* %33) #8
  br label %34

34:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DOMWebSocket"*, %"class.WTF::Vector.1688"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1688", %"class.WTF::Vector.1688"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::span"*, %"class.base::span"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1688", %"class.WTF::Vector.1688"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 4
  %11 = add nsw i64 %10, -16
  %12 = lshr exact i64 %11, 4
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 7
  %15 = icmp ult i64 %11, 112
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = sub nsw i64 %13, %14
  br label %51

18:                                               ; preds = %51, %8
  %19 = phi i64 [ undef, %8 ], [ %78, %51 ]
  %20 = phi i64 [ 0, %8 ], [ %78, %51 ]
  %21 = phi %"class.base::span"* [ %4, %8 ], [ %79, %51 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %29, %23 ], [ %20, %18 ]
  %25 = phi %"class.base::span"* [ %30, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %31, %23 ], [ %14, %18 ]
  %27 = getelementptr inbounds %"class.base::span", %"class.base::span"* %25, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %24
  %30 = getelementptr inbounds %"class.base::span", %"class.base::span"* %25, i64 1
  %31 = add i64 %26, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !31

33:                                               ; preds = %18, %23, %2
  %34 = phi i64 [ 0, %2 ], [ %19, %18 ], [ %29, %23 ]
  %35 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %36 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, -1
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %47, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  store i64 %46, i64* %44, align 8
  store i64 0, i64* %42, align 8
  br label %47

47:                                               ; preds = %33, %41
  %48 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %82, label %130

51:                                               ; preds = %51, %16
  %52 = phi i64 [ 0, %16 ], [ %78, %51 ]
  %53 = phi %"class.base::span"* [ %4, %16 ], [ %79, %51 ]
  %54 = phi i64 [ %17, %16 ], [ %80, %51 ]
  %55 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %52
  %58 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 1, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %57
  %61 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %60
  %64 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 3, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %63
  %67 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 4, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %66
  %70 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 5, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %69
  %73 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 6, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %72
  %76 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 7, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %75
  %79 = getelementptr inbounds %"class.base::span", %"class.base::span"* %53, i64 8
  %80 = add i64 %54, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %18, label %51

82:                                               ; preds = %47
  %83 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 11
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %130 [
    i32 0, label %85
    i32 1, label %119
  ]

85:                                               ; preds = %82
  %86 = tail call noalias i8* @malloc(i64 48) #8
  %87 = bitcast i8* %86 to %"class.blink::BlobData"*
  tail call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %87, i32 1) #8
  %88 = load %"class.base::span"*, %"class.base::span"** %3, align 8
  %89 = load i32, i32* %5, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"class.base::span", %"class.base::span"* %88, i64 %90
  %92 = icmp eq i32 %89, 0
  br i1 %92, label %93, label %111

93:                                               ; preds = %111, %85
  %94 = tail call noalias i8* @malloc(i64 88) #8
  %95 = bitcast i8* %94 to %"class.blink::BlobDataHandle"*
  tail call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %95, %"class.blink::BlobData"* %87, i64 %34) #8
  %96 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #8
  %97 = bitcast i8* %96 to %"class.blink::Blob"*
  tail call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %97, %"class.blink::BlobDataHandle"* %95) #8
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  %102 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %35, align 8
  %103 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7
  %104 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #8
  %105 = bitcast i8* %104 to %"class.blink::MessageEvent"*
  tail call void @_ZN5blink12MessageEventC1EPNS_4BlobERKN3WTF6StringE(%"class.blink::MessageEvent"* %105, %"class.blink::Blob"* %97, %"class.WTF::String"* dereferenceable(8) %103) #8
  %106 = getelementptr inbounds i8, i8* %104, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  %110 = bitcast i8* %104 to %"class.blink::Event"*
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %102, %"class.blink::Event"* %110)
  br label %130

111:                                              ; preds = %85, %111
  %112 = phi %"class.base::span"* [ %117, %111 ], [ %88, %85 ]
  %113 = getelementptr inbounds %"class.base::span", %"class.base::span"* %112, i64 0, i32 1
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.base::span", %"class.base::span"* %112, i64 0, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  tail call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %87, i8* %114, i64 %116) #8
  %117 = getelementptr inbounds %"class.base::span", %"class.base::span"* %112, i64 1
  %118 = icmp eq %"class.base::span"* %117, %91
  br i1 %118, label %93, label %111

119:                                              ; preds = %82
  %120 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.1688"* dereferenceable(16) %1) #8
  %121 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %35, align 8
  %122 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 7
  %123 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #8
  %124 = bitcast i8* %123 to %"class.blink::MessageEvent"*
  tail call void @_ZN5blink12MessageEventC1EPNS_14DOMArrayBufferERKN3WTF6StringE(%"class.blink::MessageEvent"* %124, %"class.blink::DOMArrayBuffer"* %120, %"class.WTF::String"* dereferenceable(8) %122) #8
  %125 = getelementptr inbounds i8, i8* %123, i64 -4
  %126 = bitcast i8* %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = or i16 %127, 1
  store atomic i16 %128, i16* %126 release, align 2
  %129 = bitcast i8* %123 to %"class.blink::Event"*
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %121, %"class.blink::Event"* %129)
  br label %130

130:                                              ; preds = %93, %119, %82, %47
  ret void
}

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.1688"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DOMWebSocket"*, %"class.WTF::Vector.1688"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %4 = bitcast %"struct.url::Parsed"** %3 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocket23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DOMWebSocket"* %4, %"class.WTF::Vector.1688"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket8DidErrorEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  store i64 %13, i64* %11, align 8
  store i64 0, i64* %9, align 8
  br label %14

14:                                               ; preds = %1, %8
  %15 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  store i32 3, i32* %15, align 8
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %18 = bitcast i8* %17 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %18, %"class.WTF::AtomicString"* dereferenceable(8) %16, i32 1, i32 1, i32 1) #8
  %19 = getelementptr inbounds i8, i8* %17, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %3, %"class.blink::Event"* %18)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket8DidErrorEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %3 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 37
  %4 = bitcast %"struct.url::Parsed"** %3 to %"class.blink::DOMWebSocket::EventQueue"**
  %5 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 32
  %12 = bitcast %"struct.url::Parsed"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 31
  %15 = bitcast %"struct.url::Parsed"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %13
  store i64 %17, i64* %15, align 8
  store i64 0, i64* %12, align 8
  br label %18

18:                                               ; preds = %1, %10
  %19 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 29
  %20 = bitcast %"struct.url::Parsed"** %19 to i32*
  store i32 3, i32* %20, align 8
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %23 = bitcast i8* %22 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %21, i32 1, i32 1, i32 1) #8
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %5, %"class.blink::Event"* %23) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket24DidConsumeBufferedAmountEm(%"class.blink::DOMWebSocket"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %1
  store i64 %9, i64* %7, align 8
  tail call void @_ZN5blink12DOMWebSocket28PostBufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"* %0)
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket24DidConsumeBufferedAmountEm(%"class.blink::DOMWebSocket"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %4 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 29
  %5 = bitcast %"struct.url::Parsed"** %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.url::Parsed"** %3 to %"class.blink::DOMWebSocket"*
  %10 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 32
  %11 = bitcast %"struct.url::Parsed"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %1
  store i64 %13, i64* %11, align 8
  tail call void @_ZN5blink12DOMWebSocket28PostBufferedAmountUpdateTaskEv(%"class.blink::DOMWebSocket"* %9) #8
  br label %14

14:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket24DidStartClosingHandshakeEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  store i64 %13, i64* %11, align 8
  store i64 0, i64* %9, align 8
  br label %14

14:                                               ; preds = %1, %8
  %15 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  store i32 2, i32* %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket24DidStartClosingHandshakeEv(%"class.blink::DOMWebSocket"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %3 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 37
  %4 = bitcast %"struct.url::Parsed"** %3 to %"class.blink::DOMWebSocket::EventQueue"**
  %5 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 32
  %12 = bitcast %"struct.url::Parsed"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 31
  %15 = bitcast %"struct.url::Parsed"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %13
  store i64 %17, i64* %15, align 8
  store i64 0, i64* %12, align 8
  br label %18

18:                                               ; preds = %1, %10
  %19 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, i64 29
  %20 = bitcast %"struct.url::Parsed"** %19 to i32*
  store i32 2, i32* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMWebSocket8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE(%"class.blink::DOMWebSocket"* nocapture, i32, i16 zeroext, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15, i32 0, i32 0
  %6 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  store i64 %16, i64* %14, align 8
  store i64 0, i64* %12, align 8
  br label %17

17:                                               ; preds = %4, %11
  %18 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %18, align 8
  %20 = icmp eq %"class.blink::WebSocketChannel"* %19, null
  br i1 %20, label %79, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 6, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %36

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 9
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 8
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, %27
  %31 = icmp eq i32 %1, 1
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %36

33:                                               ; preds = %25
  %34 = icmp ne i16 %2, 1006
  %35 = zext i1 %34 to i8
  br label %36

36:                                               ; preds = %33, %25, %21
  %37 = phi i8 [ 0, %25 ], [ 0, %21 ], [ %35, %33 ]
  store i32 3, i32* %22, align 8
  %38 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5
  %39 = bitcast %"class.blink::WebSocketChannel"* %19 to void (%"class.blink::WebSocketChannel"*)***
  %40 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %40, i64 8
  %42 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %41, align 8
  tail call void %42(%"class.blink::WebSocketChannel"* nonnull %19) #8
  %43 = bitcast %"class.blink::Member.455"* %38 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  %44 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %5, align 8
  %45 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #8
  %46 = bitcast i8* %45 to %"class.blink::Event"*
  %47 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kCloseE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %46, %"class.WTF::AtomicString"* dereferenceable(8) %47, i32 1, i32 1, i32 1) #8
  %48 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink10CloseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 104
  store i8 %37, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %45, i64 106
  %51 = bitcast i8* %50 to i16*
  store i16 %2, i16* %51, align 2
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds i8, i8* %45, i64 112
  %55 = bitcast i8* %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %36
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #8
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !5

71:                                               ; preds = %62
  tail call void @llvm.trap() #8
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %36, %57, %72
  %75 = getelementptr inbounds i8, i8* %45, i64 -4
  %76 = bitcast i8* %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = or i16 %77, 1
  store atomic i16 %78, i16* %76 release, align 2
  tail call void @_ZN5blink12DOMWebSocket10EventQueue8DispatchEPNS_5EventE(%"class.blink::DOMWebSocket::EventQueue"* %44, %"class.blink::Event"* %46)
  br label %79

79:                                               ; preds = %17, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink12DOMWebSocket8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE(%"class.blink::DOMWebSocket"* nocapture, i32, i16 zeroext, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %6 = bitcast %"struct.url::Parsed"** %5 to %"class.blink::DOMWebSocket"*
  tail call void @_ZN5blink12DOMWebSocket8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE(%"class.blink::DOMWebSocket"* %6, i32 %1, i16 zeroext %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMWebSocket5TraceEPNS_7VisitorE(%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member.455"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 15
  %15 = bitcast %"class.blink::Member.465"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %"class.blink::EventTargetData"* %25 to i8*
  %27 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %28 = bitcast i8* %27 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %28, %"class.blink::Visitor"* %1) #8
  %29 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %29, %"class.blink::Visitor"* %1) #8
  %30 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 0, i32 2
  %31 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %30 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %31, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #8
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE(%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 7
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 14
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 37
  %16 = bitcast %"class.WTF::String"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 2
  %27 = bitcast %"class.WTF::String"* %26 to i8*
  %28 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %29 = bitcast i8* %28 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %29, %"class.blink::Visitor"* %1) #8
  %30 = bitcast %"class.WTF::String"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %30, %"class.blink::Visitor"* %1) #8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 10
  %32 = bitcast %"class.WTF::String"* %31 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %32, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE(%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 28
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i32, i32* %3, i64 74
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds i32, i32* %3, i64 4
  %27 = bitcast i32* %26 to i8*
  %28 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %29 = bitcast i8* %28 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %29, %"class.blink::Visitor"* %1) #8
  %30 = bitcast i32* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %30, %"class.blink::Visitor"* %1) #8
  %31 = getelementptr inbounds i32, i32* %3, i64 20
  %32 = bitcast i32* %31 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %32, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink12DOMWebSocket5TraceEPNS_7VisitorE(%"class.blink::DOMWebSocket"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %0, i64 -1, i32 6, i32 0, i32 3, i32 9
  %4 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 14
  %5 = bitcast %"struct.url::Parsed"** %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 37
  %16 = bitcast %"struct.url::Parsed"** %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 2
  %27 = bitcast %"struct.url::Parsed"** %26 to i8*
  %28 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261) #8
  %29 = bitcast i8* %28 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %29, %"class.blink::Visitor"* %1) #8
  %30 = bitcast %"struct.url::Parsed"** %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %30, %"class.blink::Visitor"* %1) #8
  %31 = getelementptr inbounds %"struct.url::Parsed"*, %"struct.url::Parsed"** %3, i64 10
  %32 = bitcast %"struct.url::Parsed"** %31 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %32, %"class.blink::Visitor"* %1) #8
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #8
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12DOMWebSocket18GetWrapperTypeInfoEv(%"class.blink::DOMWebSocket"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12DOMWebSocket18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebSocketChannel"* @_ZN5blink12DOMWebSocket13CreateChannelEPNS_16ExecutionContextEPNS_22WebSocketChannelClientE(%"class.blink::DOMWebSocket"*, %"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %1) #8
  %5 = tail call %"class.blink::WebSocketChannelImpl"* @_ZN5blink20WebSocketChannelImpl6CreateEPNS_16ExecutionContextEPNS_22WebSocketChannelClientENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEE(%"class.blink::ExecutionContext"* %1, %"class.blink::WebSocketChannelClient"* %2, %"class.blink::SourceLocation"* %4) #8
  %6 = getelementptr inbounds %"class.blink::WebSocketChannelImpl", %"class.blink::WebSocketChannelImpl"* %5, i64 0, i32 0
  ret %"class.blink::WebSocketChannel"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::DOMWebSocket"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)**, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)*, %"class.blink::ExecutionContext"* (%"class.blink::DOMWebSocket"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::DOMWebSocket"* %3) #8
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_12DOMWebSocketEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 5
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::WebSocketChannel"**
  %4 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %3, align 8
  %5 = icmp eq %"class.blink::WebSocketChannel"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 28
  %8 = bitcast %"class.blink::ActiveScriptWrappable"* %7 to %"class.blink::DOMWebSocket::EventQueue"**
  %9 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %9, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %9, i64 0, i32 2, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %11, %13
  br label %15

15:                                               ; preds = %1, %6
  %16 = phi i1 [ true, %1 ], [ %14, %6 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #8

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #8
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_12DOMWebSocketEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN5blink14BlobDataHandleC1ERKN3WTF6StringES4_m(%"class.blink::BlobDataHandle"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #12

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink12MessageEventC1ERKN3WTF6StringES4_(%"class.blink::MessageEvent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

declare void @_ZN5blink12MessageEventC1EPNS_4BlobERKN3WTF6StringE(%"class.blink::MessageEvent"*, %"class.blink::Blob"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink12MessageEventC1EPNS_14DOMArrayBufferERKN3WTF6StringE(%"class.blink::MessageEvent"*, %"class.blink::DOMArrayBuffer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare %"class.blink::WebSocketChannelImpl"* @_ZN5blink20WebSocketChannelImpl6CreateEPNS_16ExecutionContextEPNS_22WebSocketChannelClientENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEE(%"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*, %"class.blink::SourceLocation"*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #8
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #8
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64 %11) #8
  %13 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %14 = icmp eq %"class.blink::Member.4"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.4"* %13 to i8*
  %17 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %16, i64 %12) #8
  br i1 %17, label %18, label %104

18:                                               ; preds = %15
  %19 = lshr i64 %12, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %2, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %245

26:                                               ; preds = %18
  %27 = sub i32 %22, %3
  %28 = add i32 %27, %20
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %29
  %31 = zext i32 %3 to i64
  %32 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %31
  %33 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %33, i64 %34
  %36 = icmp ne %"class.blink::Member.4"* %35, null
  %37 = icmp ne %"class.blink::Member.4"* %30, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %92, !prof !19

39:                                               ; preds = %26
  %40 = icmp eq %"class.blink::Member.4"* %30, %35
  br i1 %40, label %72, label %41

41:                                               ; preds = %39
  %42 = icmp ult %"class.blink::Member.4"* %35, %30
  br i1 %42, label %43, label %54

43:                                               ; preds = %41
  %44 = icmp ult i32 %22, %3
  br i1 %44, label %45, label %72

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::Member.4"* [ %52, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::Member.4"* [ %51, %45 ], [ %30, %43 ]
  %48 = bitcast %"class.blink::Member.4"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.4"* %46 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %47, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %46, i64 1
  %53 = icmp ult %"class.blink::Member.4"* %51, %32
  br i1 %53, label %45, label %72

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %32, i64 -1
  %56 = icmp ult %"class.blink::Member.4"* %55, %30
  br i1 %56, label %72, label %57

57:                                               ; preds = %54
  %58 = ptrtoint %"class.blink::Member.4"* %55 to i64
  %59 = ptrtoint %"class.blink::Member.4"* %30 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %35, i64 %61
  br label %63

63:                                               ; preds = %63, %57
  %64 = phi %"class.blink::Member.4"* [ %70, %63 ], [ %62, %57 ]
  %65 = phi %"class.blink::Member.4"* [ %69, %63 ], [ %55, %57 ]
  %66 = bitcast %"class.blink::Member.4"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member.4"* %64 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %65, i64 -1
  %70 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %64, i64 -1
  %71 = icmp ult %"class.blink::Member.4"* %69, %30
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %45, %54, %43, %39
  %73 = ptrtoint %"class.blink::Member.4"* %32 to i64
  %74 = ptrtoint %"class.blink::Member.4"* %30 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = ashr exact i64 %75, 3
  br label %79

79:                                               ; preds = %89, %77
  %80 = phi i64 [ %82, %89 ], [ %78, %77 ]
  %81 = phi %"class.blink::Member.4"* [ %90, %89 ], [ %35, %77 ]
  %82 = add i64 %80, -1
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Member.4"* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #8
  br label %89

89:                                               ; preds = %85, %79
  %90 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %81, i64 1
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %92, label %79

92:                                               ; preds = %89, %26, %72
  %93 = load i32, i32* %21, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %94
  %96 = icmp ult i32 %28, %3
  %97 = select i1 %96, i32 %28, i32 %3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %98
  %100 = bitcast %"class.blink::Member.4"* %95 to i8*
  %101 = ptrtoint %"class.blink::Member.4"* %99 to i64
  %102 = ptrtoint %"class.blink::Member.4"* %95 to i64
  %103 = sub i64 %101, %102
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %100, i64 %103) #8
  store i32 %28, i32* %21, align 8
  br label %245

104:                                              ; preds = %1, %15
  %105 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64 %11) #8
  %106 = lshr i64 %105, 3
  %107 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %106) #8
  %108 = ptrtoint %"class.blink::HeapVectorBacking"* %107 to i64
  %109 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = trunc i64 %106 to i32
  store i32 %110, i32* %2, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %107, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #8
  br label %116

116:                                              ; preds = %104, %113
  %117 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %118, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %123
  %125 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %126 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %125, i64 %123
  %127 = icmp ne %"class.blink::Member.4"* %126, null
  %128 = icmp ne %"class.blink::Member.4"* %124, null
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %154, !prof !19

130:                                              ; preds = %122
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %131
  %133 = bitcast %"class.blink::Member.4"* %124 to i8*
  %134 = ptrtoint %"class.blink::Member.4"* %132 to i64
  %135 = ptrtoint %"class.blink::Member.4"* %124 to i64
  %136 = sub i64 %134, %135
  %137 = bitcast %"class.blink::Member.4"* %126 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %133, i64 %136) #8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %130
  %140 = ashr exact i64 %136, 3
  br label %141

141:                                              ; preds = %151, %139
  %142 = phi i64 [ %144, %151 ], [ %140, %139 ]
  %143 = phi %"class.blink::Member.4"* [ %152, %151 ], [ %126, %139 ]
  %144 = add i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.4"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #8
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %122, %130
  %155 = load i32, i32* %117, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %156
  %158 = load i32, i32* %119, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %159
  %161 = bitcast %"class.blink::Member.4"* %157 to i8*
  %162 = ptrtoint %"class.blink::Member.4"* %160 to i64
  %163 = ptrtoint %"class.blink::Member.4"* %157 to i64
  %164 = sub i64 %162, %163
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %161, i64 %164) #8
  %165 = bitcast %"class.blink::Member.4"* %5 to i8*
  br label %243

166:                                              ; preds = %116
  %167 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %168 = icmp ne %"class.blink::Member.4"* %167, null
  %169 = icmp ne %"class.blink::Member.4"* %5, null
  %170 = and i1 %169, %168
  br i1 %170, label %173, label %171, !prof !19

171:                                              ; preds = %166
  %172 = bitcast %"class.blink::Member.4"* %5 to i8*
  br label %192

173:                                              ; preds = %166
  %174 = zext i32 %120 to i64
  %175 = bitcast %"class.blink::Member.4"* %5 to i8*
  %176 = shl nuw nsw i64 %174, 3
  %177 = bitcast %"class.blink::Member.4"* %167 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %177, i8* nonnull %175, i64 %176) #8
  %178 = icmp eq i32 %120, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %173, %189
  %180 = phi i64 [ %182, %189 ], [ %174, %173 ]
  %181 = phi %"class.blink::Member.4"* [ %190, %189 ], [ %167, %173 ]
  %182 = add nsw i64 %180, -1
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.blink::Member.4"* %181 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #8
  br label %189

189:                                              ; preds = %185, %179
  %190 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %181, i64 1
  %191 = icmp eq i64 %182, 0
  br i1 %191, label %192, label %179

192:                                              ; preds = %189, %171, %173
  %193 = phi i8* [ %172, %171 ], [ %175, %173 ], [ %175, %189 ]
  %194 = load i32, i32* %119, align 4
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %193, i64 %196) #8
  %197 = load i32, i32* %2, align 8
  %198 = load i32, i32* %117, align 8
  %199 = sub i32 %198, %3
  %200 = add i32 %199, %197
  %201 = zext i32 %198 to i64
  %202 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %201
  %203 = zext i32 %3 to i64
  %204 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %203
  %205 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %206 = zext i32 %200 to i64
  %207 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %205, i64 %206
  %208 = icmp ne %"class.blink::Member.4"* %207, null
  %209 = icmp ne %"class.blink::Member.4"* %202, null
  %210 = and i1 %209, %208
  br i1 %210, label %213, label %211, !prof !19

211:                                              ; preds = %192
  %212 = ptrtoint %"class.blink::Member.4"* %204 to i64
  br label %235

213:                                              ; preds = %192
  %214 = bitcast %"class.blink::Member.4"* %202 to i8*
  %215 = ptrtoint %"class.blink::Member.4"* %204 to i64
  %216 = ptrtoint %"class.blink::Member.4"* %202 to i64
  %217 = sub i64 %215, %216
  %218 = bitcast %"class.blink::Member.4"* %207 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %218, i8* nonnull %214, i64 %217) #8
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %213
  %221 = ashr exact i64 %217, 3
  br label %222

222:                                              ; preds = %232, %220
  %223 = phi i64 [ %225, %232 ], [ %221, %220 ]
  %224 = phi %"class.blink::Member.4"* [ %233, %232 ], [ %207, %220 ]
  %225 = add i64 %223, -1
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::Member.4"* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #8
  br label %232

232:                                              ; preds = %228, %222
  %233 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %224, i64 1
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %232, %211, %213
  %236 = phi i64 [ %212, %211 ], [ %215, %213 ], [ %215, %232 ]
  %237 = load i32, i32* %117, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %5, i64 %238
  %240 = bitcast %"class.blink::Member.4"* %239 to i8*
  %241 = ptrtoint %"class.blink::Member.4"* %239 to i64
  %242 = sub i64 %236, %241
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %240, i64 %242) #8
  store i32 %200, i32* %117, align 8
  br label %243

243:                                              ; preds = %235, %154
  %244 = phi i8* [ %193, %235 ], [ %165, %154 ]
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %244) #8
  br label %245

245:                                              ; preds = %92, %18, %243
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5EventEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.4"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.4"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Event"*
  %4 = bitcast i8* %1 to void (%"class.blink::Event"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Event"*, %"class.blink::Visitor"*)**, void (%"class.blink::Event"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Event"*, %"class.blink::Visitor"*)*, void (%"class.blink::Event"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Event"*, %"class.blink::Visitor"*)*, void (%"class.blink::Event"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Event"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMWebSocket::EventQueue"**
  %4 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %3, align 8
  %5 = icmp eq %"class.blink::DOMWebSocket::EventQueue"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !5

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DOMWebSocket::EventQueue", %"class.blink::DOMWebSocket::EventQueue"* %4, i64 -1, i32 2, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::DOMWebSocket::EventQueue"* null, %"class.blink::DOMWebSocket::EventQueue"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::DOMWebSocket::EventQueue"**
  %4 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %3, align 8
  %5 = icmp eq %"class.blink::DOMWebSocket::EventQueue"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::DOMWebSocket::EventQueue"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::DOMWebSocket::EventQueue"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::DOMWebSocket::EventQueue"*)**
  %24 = load void (%"class.blink::DOMWebSocket::EventQueue"*)*, void (%"class.blink::DOMWebSocket::EventQueue"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::DOMWebSocket::EventQueue"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::DOMWebSocket::EventQueue"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::DOMWebSocket::EventQueue"* %15) #8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #8
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #8
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #8
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %11, %"class.blink::PersistentBase"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocket10EventQueueELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #8
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::DOMWebSocket::EventQueue"**
  %6 = load %"class.blink::DOMWebSocket::EventQueue"*, %"class.blink::DOMWebSocket::EventQueue"** %5, align 8
  %7 = icmp eq %"class.blink::DOMWebSocket::EventQueue"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12DOMWebSocket10EventQueueEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12DOMWebSocket10EventQueueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12DOMWebSocket10EventQueueEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMWebSocket10EventQueueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast i8* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %0, i8** %17) #8
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %0, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12DOMWebSocket10EventQueueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12DOMWebSocket10EventQueueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #6

declare void @_ZN5blink29V8UnionStringOrStringSequenceC1EON3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionStringOrStringSequence"*, %"class.WTF::Vector.122"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.122"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !19

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !19

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !19

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #8
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !5

122:                                              ; preds = %113
  tail call void @llvm.trap() #8
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMWebSocket"**
  %4 = load %"class.blink::DOMWebSocket"*, %"class.blink::DOMWebSocket"** %3, align 8
  %5 = icmp eq %"class.blink::DOMWebSocket"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !5

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DOMWebSocket", %"class.blink::DOMWebSocket"* %4, i64 -1, i32 16
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::DOMWebSocket"* null, %"class.blink::DOMWebSocket"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::DOMWebSocket"**
  %4 = load %"class.blink::DOMWebSocket"*, %"class.blink::DOMWebSocket"** %3, align 8
  %5 = icmp eq %"class.blink::DOMWebSocket"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::DOMWebSocket"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::DOMWebSocket"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::DOMWebSocket"*)**
  %24 = load void (%"class.blink::DOMWebSocket"*)*, void (%"class.blink::DOMWebSocket"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::DOMWebSocket"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::DOMWebSocket"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::DOMWebSocket"* %15) #8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1902"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent.1630"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.1902", %"struct.base::internal::BindState.1902"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.1902", %"struct.base::internal::BindState.1902"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1902", %"struct.base::internal::BindState.1902"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple.1903", %"class.std::__1::tuple.1903"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent.1630"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple.1903"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.1902", %"struct.base::internal::BindState.1902"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #8
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #8
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1631"**
  store %"class.blink::PersistentBase.1631"* %11, %"class.blink::PersistentBase.1631"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMWebSocketELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink12DOMWebSocketEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #8
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::DOMWebSocket"**
  %6 = load %"class.blink::DOMWebSocket"*, %"class.blink::DOMWebSocket"** %5, align 8
  %7 = icmp eq %"class.blink::DOMWebSocket"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

declare void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10CloseEventD2Ev(%"class.blink::CloseEvent"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink10CloseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #8
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5EventD2Ev(%"class.blink::Event"* %20) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10CloseEventD0Ev(%"class.blink::CloseEvent"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink10CloseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #8
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5EventD2Ev(%"class.blink::Event"* %20) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10CloseEvent5TraceEPNS_7VisitorE(%"class.blink::CloseEvent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CloseEvent", %"class.blink::CloseEvent"* %0, i64 0, i32 0
  tail call void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"* %3, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10CloseEvent18GetWrapperTypeInfoEv(%"class.blink::CloseEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10CloseEvent18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink10CloseEvent13InterfaceNameEv(%"class.blink::CloseEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink21event_interface_names11kCloseEventE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare zeroext i1 @_ZNK5blink5Event9IsUIEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsMouseEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsFocusEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event15IsKeyboardEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsTouchEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event14IsGestureEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsWheelEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event14IsPointerEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsInputEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event18IsCompositionEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event11IsDragEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event16IsClipboardEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event25IsBeforeTextInsertedEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event19IsBeforeUnloadEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsErrorEventEv(%"class.blink::Event"*) unnamed_addr #2

declare void @_ZN5blink5Event14preventDefaultEv(%"class.blink::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE(%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE(%"class.blink::Event"*, %"class.blink::EventDispatcher"*) unnamed_addr #2

declare void @_ZN5blink5Event14ReceivedTargetEv(%"class.blink::Event"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5EventD2Ev(%"class.blink::Event"*) unnamed_addr #6

declare void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebSocketChannel"*
  %4 = bitcast i8* %1 to void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)**, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WebSocketChannel"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink18WrapWeakPersistentINS_12DOMWebSocket10EventQueueEEENS_14WeakPersistentIT_EEPS4_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink18WrapWeakPersistentINS_12DOMWebSocket10EventQueueEEENS_14WeakPersistentIT_EEPS4_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DOMWebSocket10EventQueueEFvvEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN5blink12DOMWebSocket10EventQueueEFvvEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN5blink12DOMWebSocket10EventQueueEFvvEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!11 = distinct !{!11, !12, !"_ZN3WTF4BindIMN5blink12DOMWebSocket10EventQueueEFvvEJNS1_14WeakPersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF4BindIMN5blink12DOMWebSocket10EventQueueEFvvEJNS1_14WeakPersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF5DequeIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv"}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{i8 0, i8 2}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink18WrapWeakPersistentINS_12DOMWebSocketEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!23 = distinct !{!23, !"_ZN5blink18WrapWeakPersistentINS_12DOMWebSocketEEENS_14WeakPersistentIT_EEPS3_"}
!24 = !{!25, !27, !29}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DOMWebSocketEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIMN5blink12DOMWebSocketEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIMN5blink12DOMWebSocketEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!29 = distinct !{!29, !30, !"_ZN3WTF4BindIMN5blink12DOMWebSocketEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF4BindIMN5blink12DOMWebSocketEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
