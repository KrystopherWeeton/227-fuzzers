; ModuleID = '../../media/video/h264_bit_reader.cc'
source_filename = "../../media/video/h264_bit_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::H264BitReader" = type { i8*, i64, i32, i32, i32, i64 }

@_ZN5media13H264BitReaderC1Ev = hidden unnamed_addr alias void (%"class.media::H264BitReader"*), void (%"class.media::H264BitReader"*)* @_ZN5media13H264BitReaderC2Ev
@_ZN5media13H264BitReaderD1Ev = hidden unnamed_addr alias void (%"class.media::H264BitReader"*), void (%"class.media::H264BitReader"*)* @_ZN5media13H264BitReaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media13H264BitReaderC2Ev(%"class.media::H264BitReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  store i64 0, i64* %2, align 8
  %3 = bitcast %"class.media::H264BitReader"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media13H264BitReaderD2Ev(%"class.media::H264BitReader"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN5media13H264BitReader10InitializeEPKhl(%"class.media::H264BitReader"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i64 %2, 1
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 4
  store i32 65535, i32* %9, align 8
  %10 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  store i64 0, i64* %10, align 8
  br label %11

11:                                               ; preds = %3, %5
  %12 = phi i1 [ true, %5 ], [ false, %3 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13H264BitReader14UpdateCurrByteEv(%"class.media::H264BitReader"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp slt i64 %3, 1
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 3
  %10 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 65535
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %9, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %7, i64 1
  store i8* %16, i8** %6, align 8
  %17 = add nsw i64 %3, -1
  store i64 %17, i64* %2, align 8
  %18 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  store i32 65535, i32* %10, align 8
  %21 = icmp slt i64 %3, 2
  br i1 %21, label %36, label %22

22:                                               ; preds = %5, %15
  %23 = phi i32 [ 65535, %15 ], [ %11, %5 ]
  %24 = phi i64 [ %17, %15 ], [ %3, %5 ]
  %25 = phi i8* [ %16, %15 ], [ %7, %5 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %26, i8** %6, align 8
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = add nsw i64 %24, -1
  store i64 %30, i64* %2, align 8
  %31 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 3
  store i32 8, i32* %31, align 4
  %32 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 4
  %33 = shl i32 %23, 8
  %34 = and i32 %33, 65280
  %35 = or i32 %34, %28
  store i32 %35, i32* %32, align 8
  br label %36

36:                                               ; preds = %15, %1, %22
  %37 = phi i1 [ true, %22 ], [ false, %1 ], [ false, %15 ]
  ret i1 %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13H264BitReader8ReadBitsEiPi(%"class.media::H264BitReader"* nocapture, i32, i32* nocapture) local_unnamed_addr #2 align 2 {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  %7 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %9, label %61

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  %14 = sub nsw i32 %1, %5
  %15 = shl i32 %8, %14
  store i32 %15, i32* %2, align 4
  %16 = load i64, i64* %10, align 8
  %17 = icmp slt i64 %16, 1
  br i1 %17, label %74, label %18

18:                                               ; preds = %9
  %19 = load i32, i32* %4, align 4
  %20 = sub nsw i32 %1, %19
  br label %21

21:                                               ; preds = %18, %49
  %22 = phi i64 [ %16, %18 ], [ %56, %49 ]
  %23 = phi i32 [ %20, %18 ], [ %55, %49 ]
  %24 = load i8*, i8** %11, align 8
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 3
  %27 = load i32, i32* %12, align 8
  %28 = and i32 %27, 65535
  %29 = icmp eq i32 %28, 0
  %30 = and i1 %26, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %21
  %32 = getelementptr inbounds i8, i8* %24, i64 1
  store i8* %32, i8** %11, align 8
  %33 = add nsw i64 %22, -1
  store i64 %33, i64* %10, align 8
  %34 = load i64, i64* %13, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %13, align 8
  store i32 65535, i32* %12, align 8
  %36 = icmp slt i64 %22, 2
  br i1 %36, label %74, label %37

37:                                               ; preds = %21, %31
  %38 = phi i32 [ 65535, %31 ], [ %27, %21 ]
  %39 = phi i64 [ %33, %31 ], [ %22, %21 ]
  %40 = phi i8* [ %32, %31 ], [ %24, %21 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  store i8* %41, i8** %11, align 8
  %42 = load i8, i8* %40, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %7, align 8
  %44 = add nsw i64 %39, -1
  store i64 %44, i64* %10, align 8
  store i32 8, i32* %4, align 4
  %45 = shl i32 %38, 8
  %46 = and i32 %45, 65280
  %47 = or i32 %46, %43
  store i32 %47, i32* %12, align 8
  %48 = icmp sgt i32 %23, 8
  br i1 %48, label %49, label %58

49:                                               ; preds = %37
  %50 = load i32, i32* %2, align 4
  %51 = add nsw i32 %23, -8
  %52 = shl i32 %43, %51
  %53 = or i32 %50, %52
  store i32 %53, i32* %2, align 4
  %54 = load i32, i32* %4, align 4
  %55 = sub nsw i32 %23, %54
  %56 = load i64, i64* %10, align 8
  %57 = icmp slt i64 %56, 1
  br i1 %57, label %74, label %21

58:                                               ; preds = %37
  %59 = zext i8 %42 to i32
  %60 = load i32, i32* %2, align 4
  br label %61

61:                                               ; preds = %58, %3
  %62 = phi i32 [ 0, %3 ], [ %60, %58 ]
  %63 = phi i32 [ %1, %3 ], [ %23, %58 ]
  %64 = phi i32 [ %5, %3 ], [ 8, %58 ]
  %65 = phi i32 [ %8, %3 ], [ %59, %58 ]
  %66 = sub nsw i32 %64, %63
  %67 = ashr i32 %65, %66
  %68 = or i32 %62, %67
  %69 = shl nsw i32 -1, %1
  %70 = xor i32 %69, -1
  %71 = and i32 %68, %70
  store i32 %71, i32* %2, align 4
  %72 = load i32, i32* %4, align 4
  %73 = sub nsw i32 %72, %63
  store i32 %73, i32* %4, align 4
  br label %74

74:                                               ; preds = %49, %31, %9, %61
  %75 = phi i1 [ true, %61 ], [ false, %9 ], [ false, %31 ], [ false, %49 ]
  ret i1 %75
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5media13H264BitReader11NumBitsLeftEv(%"class.media::H264BitReader"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %6, 3
  %8 = add nsw i64 %7, %4
  ret i64 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13H264BitReader15HasMoreRBSPDataEv(%"class.media::H264BitReader"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %3, -1
  br label %42

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %11, 1
  br i1 %12, label %65, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 3
  %18 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 65535
  %21 = icmp eq i32 %20, 0
  %22 = and i1 %17, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %13
  %24 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %24, i8** %14, align 8
  %25 = add nsw i64 %11, -1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %26, align 8
  store i32 65535, i32* %18, align 8
  %29 = icmp slt i64 %11, 2
  br i1 %29, label %65, label %30

30:                                               ; preds = %13, %23
  %31 = phi i32 [ 65535, %23 ], [ %19, %13 ]
  %32 = phi i64 [ %25, %23 ], [ %11, %13 ]
  %33 = phi i8* [ %24, %23 ], [ %15, %13 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %34, i8** %14, align 8
  %35 = load i8, i8* %33, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 2
  store i32 %36, i32* %37, align 8
  %38 = add nsw i64 %32, -1
  store i64 %38, i64* %10, align 8
  store i32 8, i32* %2, align 4
  %39 = shl i32 %31, 8
  %40 = and i32 %39, 65280
  %41 = or i32 %40, %36
  store i32 %41, i32* %18, align 8
  br label %42

42:                                               ; preds = %5, %30
  %43 = phi i32 [ %8, %5 ], [ 7, %30 ]
  %44 = phi i32 [ %7, %5 ], [ %36, %30 ]
  %45 = shl nsw i32 -1, %43
  %46 = xor i32 %45, -1
  %47 = and i32 %44, %46
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp sgt i64 %51, 0
  br i1 %52, label %53, label %64

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  br label %58

56:                                               ; preds = %58
  %57 = icmp slt i64 %63, %51
  br i1 %57, label %58, label %64

58:                                               ; preds = %53, %56
  %59 = phi i64 [ 0, %53 ], [ %63, %56 ]
  %60 = getelementptr inbounds i8, i8* %55, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  %63 = add nuw nsw i64 %59, 1
  br i1 %62, label %56, label %65

64:                                               ; preds = %56, %49
  store i64 0, i64* %50, align 8
  br label %65

65:                                               ; preds = %58, %23, %9, %42, %64
  %66 = phi i1 [ false, %64 ], [ true, %42 ], [ false, %9 ], [ false, %23 ], [ true, %58 ]
  ret i1 %66
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5media13H264BitReader31NumEmulationPreventionBytesReadEv(%"class.media::H264BitReader"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitReader", %"class.media::H264BitReader"* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
