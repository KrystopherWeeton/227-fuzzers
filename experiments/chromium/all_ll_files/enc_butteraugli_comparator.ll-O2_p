; ModuleID = '../../third_party/libjxl/src/lib/jxl/enc_butteraugli_comparator.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/enc_butteraugli_comparator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.jxl::Fields" = type { i32 (...)** }
%"struct.jxl::BitDepth" = type <{ %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.jxl::PaddedBytes" = type { i64, i64, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"struct.jxl::Customxy" = type { %"class.jxl::Fields", i32, i32 }
%"struct.jxl::ToneMapping" = type <{ %"class.jxl::Fields", i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8] }>
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"*, %"class.std::__1::__compressed_pair.86" }
%"struct.jxl::ExtraChannelInfo" = type { %"class.jxl::Fields", i8, i32, %"struct.jxl::BitDepth", i32, %"class.std::__1::basic_string", i8, [4 x float], i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.jxl::ExtraChannelInfo"* }
%"struct.jxl::CustomTransformData" = type <{ %"class.jxl::Fields", i8, i8, [6 x i8], %"struct.jxl::OpsinInverseMatrix", i32, [15 x float], [55 x float], [210 x float], [4 x i8] }>
%"struct.jxl::OpsinInverseMatrix" = type <{ %"class.jxl::Fields", i8, [3 x i8], [9 x float], [3 x float], [4 x float], [4 x i8] }>
%"struct.jxl::AnimationHeader" = type <{ %"class.jxl::Fields", i32, i32, i32, i8, [3 x i8] }>
%"class.jxl::JxlButteraugliComparator" = type { %"class.jxl::Comparator", %"struct.jxl::ButteraugliParams", %"class.std::__1::unique_ptr", i64, i64 }
%"class.jxl::Comparator" = type { i32 (...)** }
%"struct.jxl::ButteraugliParams" = type <{ float, float, float, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.jxl::ButteraugliComparator"* }
%"class.jxl::ButteraugliComparator" = type { i32 (...)**, i64, i64, %"struct.jxl::ButteraugliParams", %"struct.jxl::PsychoImage", %"class.jxl::Image3", %"struct.std::__1::atomic_flag", %"struct.jxl::BlurTemp", %"class.std::__1::unique_ptr" }
%"struct.jxl::PsychoImage" = type { [2 x %"class.jxl::Plane"], [2 x %"class.jxl::Plane"], %"class.jxl::Image3", %"class.jxl::Image3" }
%"class.jxl::Plane" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::PlaneBase" = type { i32, i32, i32, i32, i64, %"class.std::__1::unique_ptr.1" }
%"class.jxl::Image3" = type { [3 x %"class.jxl::Plane"] }
%"struct.std::__1::atomic_flag" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"struct.jxl::BlurTemp" = type { %"class.jxl::Plane", %"class.jxl::Plane" }
%"class.jxl::ImageBundle" = type { %"class.std::__1::unique_ptr.5", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", %"struct.jxl::ColorEncoding", %"class.std::__1::vector.91", i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.jxl::jpeg::JPEGData"* }
%"struct.jxl::jpeg::JPEGData" = type { %"class.jxl::Fields", i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.17", %"class.std::__1::vector", %"class.std::__1::vector.24", %"class.std::__1::vector.31", %"class.std::__1::vector.40", %"class.std::__1::vector.54", %"class.std::__1::vector.8", %"class.std::__1::vector", %"class.std::__1::vector.8", i32, i8, %"class.std::__1::vector.8" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i32*, i32*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i32* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.jxl::jpeg::JPEGQuantTable"*, %"struct.jxl::jpeg::JPEGQuantTable"*, %"class.std::__1::__compressed_pair.26" }
%"struct.jxl::jpeg::JPEGQuantTable" = type <{ %"struct.std::__1::array", i32, i32, i8, [3 x i8] }>
%"struct.std::__1::array" = type { [64 x i32] }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.jxl::jpeg::JPEGQuantTable"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.jxl::jpeg::JPEGHuffmanCode"*, %"struct.jxl::jpeg::JPEGHuffmanCode"*, %"class.std::__1::__compressed_pair.35" }
%"struct.jxl::jpeg::JPEGHuffmanCode" = type <{ %"struct.std::__1::array.33", %"struct.std::__1::array.34", i32, i8, [3 x i8] }>
%"struct.std::__1::array.33" = type { [17 x i32] }
%"struct.std::__1::array.34" = type { [257 x i32] }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.jxl::jpeg::JPEGHuffmanCode"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.jxl::jpeg::JPEGComponent"*, %"struct.jxl::jpeg::JPEGComponent"*, %"class.std::__1::__compressed_pair.49" }
%"struct.jxl::jpeg::JPEGComponent" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.42" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { i16*, i16*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i16* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.jxl::jpeg::JPEGComponent"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.jxl::jpeg::JPEGScanInfo"*, %"struct.jxl::jpeg::JPEGScanInfo"*, %"class.std::__1::__compressed_pair.71" }
%"struct.jxl::jpeg::JPEGScanInfo" = type { i32, i32, i32, i32, i32, %"struct.std::__1::array.56", i32, %"class.std::__1::vector.57", %"class.std::__1::vector.64" }
%"struct.std::__1::array.56" = type { [4 x %"struct.jxl::jpeg::JPEGComponentScanInfo"] }
%"struct.jxl::jpeg::JPEGComponentScanInfo" = type { i32, i32, i32 }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"*, %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"*, %"class.std::__1::__compressed_pair.66" }
%"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo" = type { i32, i32 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.jxl::jpeg::JPEGScanInfo"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::vector.8"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i8*, i8*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.jxl::YCbCrChromaSubsampling" = type <{ %"class.jxl::Fields", [3 x i32], i8, i8, [2 x i8] }>
%"struct.jxl::FrameOrigin" = type { i32, i32 }
%"struct.jxl::ImageMetadata" = type <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], %"struct.jxl::ColorEncoding", i32, i8, i8, i8, i8, %"class.jxl::SizeHeader", %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.84", %"struct.jxl::CustomTransformData", %"class.jxl::PreviewHeader", %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>
%"class.jxl::SizeHeader" = type { %"class.jxl::Fields", i8, i32, i32, i32, i32, i32 }
%"class.jxl::PreviewHeader" = type { %"class.jxl::Fields", i8, i32, i32, i32, i32, i32 }
%"struct.jxl::ColorEncoding" = type { %"class.jxl::Fields", i8, i32, i32, %"struct.jxl::CustomTransferFunction", i32, i8, i8, %"class.jxl::PaddedBytes", i32, %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }
%"struct.jxl::CustomTransferFunction" = type { %"class.jxl::Fields", i32, i8, i32, i32 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.jxl::Plane"*, %"class.jxl::Plane"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.jxl::Plane"* }
%"class.jxl::ThreadPool" = type { i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.jxl::CodecInOut" = type { %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", %"struct.jxl::CodecMetadata", %"class.jxl::ImageBundle", %"class.std::__1::vector.105", i8, i64 }
%"struct.jxl::SizeConstraints" = type { i32, i32, i64 }
%"class.jxl::DecoderHints" = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.jxl::DecoderHints::KeyValue"*, %"struct.jxl::DecoderHints::KeyValue"*, %"class.std::__1::__compressed_pair.100" }
%"struct.jxl::DecoderHints::KeyValue" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.jxl::DecoderHints::KeyValue"* }
%"struct.jxl::Blobs" = type { %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes" }
%"struct.jxl::CodecMetadata" = type { %"struct.jxl::ImageMetadata", %"class.jxl::SizeHeader", %"struct.jxl::CustomTransformData" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.jxl::ImageBundle"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3jxl11ImageBundleD2Ev = comdat any

$_ZN3jxl24JxlButteraugliComparatorD2Ev = comdat any

$_ZN3jxl24JxlButteraugliComparatorD0Ev = comdat any

$_ZNSt3__16vectorIN3jxl16ExtraChannelInfoENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

@_ZTVN3jxl24JxlButteraugliComparatorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jxl::JxlButteraugliComparator"*)* @_ZN3jxl24JxlButteraugliComparatorD2Ev to i8*), i8* bitcast (void (%"class.jxl::JxlButteraugliComparator"*)* @_ZN3jxl24JxlButteraugliComparatorD0Ev to i8*), i8* bitcast (i32 (%"class.jxl::JxlButteraugliComparator"*, %"class.jxl::ImageBundle"*)* @_ZN3jxl24JxlButteraugliComparator17SetReferenceImageERKNS_11ImageBundleE to i8*), i8* bitcast (i32 (%"class.jxl::JxlButteraugliComparator"*, %"class.jxl::ImageBundle"*, %"class.jxl::Plane"*, float*)* @_ZN3jxl24JxlButteraugliComparator11CompareWithERKNS_11ImageBundleEPNS_5PlaneIfEEPf to i8*), i8* bitcast (float (%"class.jxl::JxlButteraugliComparator"*)* @_ZNK3jxl24JxlButteraugliComparator16GoodQualityScoreEv to i8*), i8* bitcast (float (%"class.jxl::JxlButteraugliComparator"*)* @_ZNK3jxl24JxlButteraugliComparator15BadQualityScoreEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [67 x i8] c"../../third_party/libjxl/src/lib/jxl/enc_butteraugli_comparator.cc\00", align 1
@__const._ZN3jxl24JxlButteraugliComparator11CompareWithERKNS_11ImageBundleEPNS_5PlaneIfEEPf.metadata = private unnamed_addr constant <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.84", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }> <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.jxl::BitDepth" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::ToneMapping" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.84" { %"class.std::__1::__vector_base.85" { %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*), %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*), %"class.std::__1::__compressed_pair.86" { %"struct.std::__1::__compressed_pair_elem.87" { %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*) } } } }, %"struct.jxl::CustomTransformData" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"struct.jxl::OpsinInverseMatrix" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, [15 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [55 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [210 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::AnimationHeader" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"%s:%d: JXL_ASSERT: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"rgb0.frames.size() == rgb1.frames.size()\00", align 1
@_ZTVN3jxl13ImageMetadataE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl8BitDepthE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl13ColorEncodingE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl22CustomTransferFunctionE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl8CustomxyE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl10SizeHeaderE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl11ToneMappingE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl16ExtraChannelInfoE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl19CustomTransformDataE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl18OpsinInverseMatrixE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl13PreviewHeaderE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl15AnimationHeaderE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN3jxl24JxlButteraugliComparatorC1ERKNS_17ButteraugliParamsE = hidden unnamed_addr alias void (%"class.jxl::JxlButteraugliComparator"*, %"struct.jxl::ButteraugliParams"*), void (%"class.jxl::JxlButteraugliComparator"*, %"struct.jxl::ButteraugliParams"*)* @_ZN3jxl24JxlButteraugliComparatorC2ERKNS_17ButteraugliParamsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl24JxlButteraugliComparatorC2ERKNS_17ButteraugliParamsE(%"class.jxl::JxlButteraugliComparator"* nocapture, %"struct.jxl::ButteraugliParams"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 1
  %5 = bitcast %"struct.jxl::ButteraugliParams"* %4 to i8*
  %6 = bitcast %"struct.jxl::ButteraugliParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl24JxlButteraugliComparator17SetReferenceImageERKNS_11ImageBundleE(%"class.jxl::JxlButteraugliComparator"*, %"class.jxl::ImageBundle"* dereferenceable(368)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.jxl::ImageBundle"*, align 8
  %4 = alloca %"struct.jxl::ImageMetadata", align 8
  %5 = alloca %"class.jxl::ImageBundle", align 8
  %6 = bitcast %"class.jxl::ImageBundle"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), %"class.jxl::ImageBundle"** %3, align 8
  %7 = bitcast %"struct.jxl::ImageMetadata"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.84", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>* @__const._ZN3jxl24JxlButteraugliComparator11CompareWithERKNS_11ImageBundleEPNS_5PlaneIfEEPf.metadata to i8*), i64 1600, i1 false)
  %8 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 9
  %9 = load %"struct.jxl::ImageMetadata"*, %"struct.jxl::ImageMetadata"** %8, align 8
  %10 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ImageMetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8BitDepthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 3, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 12, i1 false) #7
  %17 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 4
  %19 = bitcast i8* %18 to i16*
  %20 = bitcast i8* %17 to i16*
  %21 = load i16, i16* %19, align 8
  store i16 %21, i16* %20, align 8
  %22 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 1
  %24 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 12, i1 false) #7
  %25 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 4, i32 1
  %27 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 4, i32 1
  %28 = bitcast i32* %26 to i8*
  %29 = bitcast i32* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #7
  %30 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 5
  %31 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 5
  %32 = bitcast i32* %30 to i8*
  %33 = bitcast i32* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 6, i1 false) #7
  %34 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 8
  %35 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 8, i32 0
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 8, i32 1
  %39 = icmp eq i64 %37, 0
  %40 = bitcast i64* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  br i1 %39, label %49, label %41

41:                                               ; preds = %2
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %34, i64 %37) #7
  %42 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = load i64, i64* %35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %47, i64 %48, i1 false) #7
  br label %49

49:                                               ; preds = %2, %41, %45
  %50 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 9
  %51 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 9
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %50, align 8
  %53 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 10, i32 1
  %55 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 10, i32 1
  %56 = bitcast i32* %55 to i64*
  %57 = bitcast i32* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 11, i32 1
  %61 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 11, i32 1
  %62 = bitcast i32* %61 to i64*
  %63 = bitcast i32* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 12, i32 1
  %67 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 12, i32 1
  %68 = bitcast i32* %67 to i64*
  %69 = bitcast i32* %66 to i64*
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 13, i32 1
  %73 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 7, i32 13, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = bitcast i32* %72 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 8
  %78 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 8
  %79 = bitcast i32* %77 to i8*
  %80 = bitcast i32* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 7, i1 false) #7
  %81 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl10SizeHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 13, i32 1
  %83 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 13, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #7
  %84 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl11ToneMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 14, i32 1
  %86 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 14, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 20, i1 false) #7
  %87 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 15
  %88 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 15
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 17
  %91 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 17
  call void @_ZNSt3__16vectorIN3jxl16ExtraChannelInfoENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.84"* %90, %"class.std::__1::vector.84"* dereferenceable(24) %91) #7
  %92 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl19CustomTransformDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 18, i32 1
  %94 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 18, i32 1
  %95 = bitcast i8* %94 to i16*
  %96 = bitcast i8* %93 to i16*
  %97 = load i16, i16* %95, align 8
  store i16 %97, i16* %96, align 8
  %98 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 18, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl18OpsinInverseMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 18, i32 4, i32 1
  %100 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 18, i32 4, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 68, i1 false) #7
  %101 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 18, i32 5
  %102 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 18, i32 5
  %103 = bitcast i32* %101 to i8*
  %104 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 1124, i1 false) #7
  %105 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13PreviewHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 19, i32 1
  %107 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 19, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 24, i1 false) #7
  %108 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl15AnimationHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 20, i32 1
  %110 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 20, i32 1
  %111 = bitcast i32* %109 to i8*
  %112 = bitcast i32* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 13, i1 false) #7
  %113 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 21
  %114 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %9, i64 0, i32 21
  %115 = bitcast i64* %113 to i8*
  %116 = bitcast i64* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 9, i1 false) #7
  %117 = bitcast %"class.jxl::ImageBundle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %117) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 368, i1 false)
  %118 = bitcast %"class.jxl::ImageBundle"* %5 to i64*
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 1
  store i32 1, i32* %119, align 8
  %120 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 3
  call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %120) #7
  %121 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 4, i32 0
  %122 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 8
  %123 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #7
  %124 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 9
  %125 = bitcast i32* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 14, i1 false) #7
  store %"struct.jxl::ImageMetadata"* %4, %"struct.jxl::ImageMetadata"** %124, align 8
  %126 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 10
  %127 = bitcast %"class.jxl::Image3"* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 96, i1 false) #7
  %128 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 11
  call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %128) #7
  %129 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %5, i64 0, i32 12
  %130 = bitcast %"class.std::__1::vector.91"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 32, i1 false) #7
  %131 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 9
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 1
  %134 = call dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext %133) #7
  %135 = call i32 @_ZN3jxl17TransformIfNeededERKNS_11ImageBundleERKNS_13ColorEncodingEPNS_10ThreadPoolEPS0_PPS1_(%"class.jxl::ImageBundle"* dereferenceable(368) %1, %"struct.jxl::ColorEncoding"* dereferenceable(152) %134, %"class.jxl::ThreadPool"* null, %"class.jxl::ImageBundle"* nonnull %5, %"class.jxl::ImageBundle"** nonnull %3) #7
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %202

137:                                              ; preds = %49
  %138 = call i8* @_Znwm(i64 536) #8
  %139 = bitcast i8* %138 to %"class.jxl::ButteraugliComparator"*
  %140 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %3, align 8
  %141 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %140, i64 0, i32 10
  %142 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 1
  call void @_ZN3jxl21ButteraugliComparatorC1ERKNS_6Image3IfEERKNS_17ButteraugliParamsE(%"class.jxl::ButteraugliComparator"* nonnull %139, %"class.jxl::Image3"* dereferenceable(96) %141, %"struct.jxl::ButteraugliParams"* dereferenceable(16) %142) #7
  %143 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %144 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %143, align 8
  %145 = bitcast %"class.jxl::ButteraugliComparator"** %143 to i8**
  store i8* %138, i8** %145, align 8
  %146 = icmp eq %"class.jxl::ButteraugliComparator"* %144, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %137
  %148 = bitcast %"class.jxl::ButteraugliComparator"* %144 to void (%"class.jxl::ButteraugliComparator"*)***
  %149 = load void (%"class.jxl::ButteraugliComparator"*)**, void (%"class.jxl::ButteraugliComparator"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %149, i64 1
  %151 = load void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %150, align 8
  call void %151(%"class.jxl::ButteraugliComparator"* nonnull %144) #7
  br label %152

152:                                              ; preds = %137, %147
  %153 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %153, align 8
  %155 = icmp eq %"struct.jxl::jpeg::JPEGData"* %154, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %154, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = sext i32 %158 to i64
  br label %175

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = zext i32 %162 to i64
  %164 = icmp eq i32 %162, 0
  br i1 %164, label %165, label %175

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 0
  %167 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %166, align 8
  %168 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %169 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %168, align 8
  %170 = icmp eq %"class.jxl::Plane"* %167, %169
  br i1 %170, label %175, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %167, i64 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = zext i32 %173 to i64
  br label %175

175:                                              ; preds = %156, %160, %165, %171
  %176 = phi i64 [ %159, %156 ], [ %174, %171 ], [ 0, %165 ], [ %163, %160 ]
  %177 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 3
  store i64 %176, i64* %177, align 8
  %178 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %153, align 8
  %179 = icmp eq %"struct.jxl::jpeg::JPEGData"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %178, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  br label %199

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i64
  %188 = icmp eq i32 %186, 0
  br i1 %188, label %189, label %199

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 0
  %191 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %190, align 8
  %192 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %193 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %192, align 8
  %194 = icmp eq %"class.jxl::Plane"* %191, %193
  br i1 %194, label %199, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %191, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  br label %199

199:                                              ; preds = %180, %184, %189, %195
  %200 = phi i64 [ %183, %180 ], [ %198, %195 ], [ 0, %189 ], [ %187, %184 ]
  %201 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 4
  store i64 %200, i64* %201, align 8
  br label %202

202:                                              ; preds = %49, %199
  %203 = phi i32 [ 0, %199 ], [ 1, %49 ]
  call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %117) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ImageMetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %204 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %90, i64 0, i32 0, i32 0
  %205 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %204, align 8
  %206 = icmp eq %"struct.jxl::ExtraChannelInfo"* %205, null
  br i1 %206, label %224, label %207

207:                                              ; preds = %202
  %208 = bitcast %"struct.jxl::ExtraChannelInfo"* %205 to i8*
  %209 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 17, i32 0, i32 1
  %210 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %209, align 8
  %211 = icmp eq %"struct.jxl::ExtraChannelInfo"* %210, %205
  br i1 %211, label %222, label %212

212:                                              ; preds = %207, %212
  %213 = phi %"struct.jxl::ExtraChannelInfo"* [ %214, %212 ], [ %210, %207 ]
  %214 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %213, i64 -1
  %215 = bitcast %"struct.jxl::ExtraChannelInfo"* %214 to void (%"struct.jxl::ExtraChannelInfo"*)***
  %216 = load void (%"struct.jxl::ExtraChannelInfo"*)**, void (%"struct.jxl::ExtraChannelInfo"*)*** %215, align 8
  %217 = load void (%"struct.jxl::ExtraChannelInfo"*)*, void (%"struct.jxl::ExtraChannelInfo"*)** %216, align 8
  call void %217(%"struct.jxl::ExtraChannelInfo"* %214) #7
  %218 = icmp eq %"struct.jxl::ExtraChannelInfo"* %214, %205
  br i1 %218, label %219, label %212

219:                                              ; preds = %212
  %220 = bitcast %"class.std::__1::vector.84"* %90 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %219, %207
  %223 = phi i8* [ %221, %219 ], [ %208, %207 ]
  store %"struct.jxl::ExtraChannelInfo"* %205, %"struct.jxl::ExtraChannelInfo"** %209, align 8
  call void @_ZdlPv(i8* %223) #8
  br label %224

224:                                              ; preds = %222, %202
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %225 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %4, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  store i8* null, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %224
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %226) #7
  br label %229

229:                                              ; preds = %224, %228
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i32 %203
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN3jxl17TransformIfNeededERKNS_11ImageBundleERKNS_13ColorEncodingEPNS_10ThreadPoolEPS0_PPS1_(%"class.jxl::ImageBundle"* dereferenceable(368), %"struct.jxl::ColorEncoding"* dereferenceable(152), %"class.jxl::ThreadPool"*, %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"**) local_unnamed_addr #2

declare dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3jxl21ButteraugliComparatorC1ERKNS_6Image3IfEERKNS_17ButteraugliParamsE(%"class.jxl::ButteraugliComparator"*, %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::ButteraugliParams"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %3, align 8
  %5 = icmp eq %"class.jxl::Plane"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jxl::Plane"* %4 to i8*
  %8 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 1
  %9 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %8, align 8
  %10 = icmp eq %"class.jxl::Plane"* %9, %4
  br i1 %10, label %23, label %11

11:                                               ; preds = %6, %18
  %12 = phi %"class.jxl::Plane"* [ %13, %18 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %12, i64 -1
  %14 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %12, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* null, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %15) #7
  br label %18

18:                                               ; preds = %17, %11
  %19 = icmp eq %"class.jxl::Plane"* %13, %4
  br i1 %19, label %20, label %11

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.91"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %6
  %24 = phi i8* [ %22, %20 ], [ %7, %6 ]
  store %"class.jxl::Plane"* %4, %"class.jxl::Plane"** %8, align 8
  tail call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  store i8* null, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %28) #7
  br label %31

31:                                               ; preds = %25, %30
  %32 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  store i8* null, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %33) #7
  br label %36

36:                                               ; preds = %35, %31
  %37 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* null, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %38) #7
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  store i8* null, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %43) #7
  br label %46

46:                                               ; preds = %41, %45
  %47 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 8
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %56, align 8
  store %"struct.jxl::jpeg::JPEGData"* null, %"struct.jxl::jpeg::JPEGData"** %56, align 8
  %58 = icmp eq %"struct.jxl::jpeg::JPEGData"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.jxl::jpeg::JPEGData"* %57 to void (%"struct.jxl::jpeg::JPEGData"*)***
  %61 = load void (%"struct.jxl::jpeg::JPEGData"*)**, void (%"struct.jxl::jpeg::JPEGData"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %61, i64 1
  %63 = load void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %62, align 8
  tail call void %63(%"struct.jxl::jpeg::JPEGData"* nonnull %57) #7
  br label %64

64:                                               ; preds = %55, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl24JxlButteraugliComparator11CompareWithERKNS_11ImageBundleEPNS_5PlaneIfEEPf(%"class.jxl::JxlButteraugliComparator"*, %"class.jxl::ImageBundle"* dereferenceable(368), %"class.jxl::Plane"*, float*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.jxl::ImageBundle"*, align 8
  %6 = alloca %"struct.jxl::ImageMetadata", align 8
  %7 = alloca %"class.jxl::ImageBundle", align 8
  %8 = alloca %"class.jxl::Plane", align 8
  %9 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %9, align 8
  %11 = icmp eq %"class.jxl::ButteraugliComparator"* %10, null
  br i1 %11, label %249, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %15, align 8
  %17 = icmp eq %"struct.jxl::jpeg::JPEGData"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  br label %37

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 0
  %29 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %28, align 8
  %30 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %31 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %30, align 8
  %32 = icmp eq %"class.jxl::Plane"* %29, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %29, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %22, %27, %33
  %38 = phi i64 [ %21, %18 ], [ %36, %33 ], [ 0, %27 ], [ %25, %22 ]
  %39 = icmp eq i64 %14, %38
  br i1 %39, label %40, label %249

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  br i1 %17, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %16, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  br label %62

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = icmp eq i32 %49, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 0
  %54 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %53, align 8
  %55 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %56 = load %"class.jxl::Plane"*, %"class.jxl::Plane"** %55, align 8
  %57 = icmp eq %"class.jxl::Plane"* %54, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %54, i64 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %43, %47, %52, %58
  %63 = phi i64 [ %46, %43 ], [ %61, %58 ], [ 0, %52 ], [ %50, %47 ]
  %64 = icmp eq i64 %42, %63
  br i1 %64, label %65, label %249

65:                                               ; preds = %62
  %66 = bitcast %"class.jxl::ImageBundle"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #7
  store %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), %"class.jxl::ImageBundle"** %5, align 8
  %67 = bitcast %"struct.jxl::ImageMetadata"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %67) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 bitcast (<{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.84", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>* @__const._ZN3jxl24JxlButteraugliComparator11CompareWithERKNS_11ImageBundleEPNS_5PlaneIfEEPf.metadata to i8*), i64 1600, i1 false)
  %68 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 9
  %69 = load %"struct.jxl::ImageMetadata"*, %"struct.jxl::ImageMetadata"** %68, align 8
  %70 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ImageMetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 1
  %73 = load i8, i8* %72, align 8, !range !2
  store i8 %73, i8* %71, align 8
  %74 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8BitDepthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 3, i32 1
  %76 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 3, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 12, i1 false) #7
  %77 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 4
  %78 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 4
  %79 = bitcast i8* %78 to i16*
  %80 = bitcast i8* %77 to i16*
  %81 = load i16, i16* %79, align 8
  store i16 %81, i16* %80, align 8
  %82 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 1
  %84 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 12, i1 false) #7
  %85 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 4, i32 1
  %87 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 4, i32 1
  %88 = bitcast i32* %86 to i8*
  %89 = bitcast i32* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #7
  %90 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 5
  %91 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 5
  %92 = bitcast i32* %90 to i8*
  %93 = bitcast i32* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 6, i1 false) #7
  %94 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 8
  %95 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 8, i32 0
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 8, i32 1
  %99 = icmp eq i64 %97, 0
  %100 = bitcast i64* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #7
  br i1 %99, label %109, label %101

101:                                              ; preds = %65
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %94, i64 %97) #7
  %102 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = load i64, i64* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %103, i8* align 1 %107, i64 %108, i1 false) #7
  br label %109

109:                                              ; preds = %65, %101, %105
  %110 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 9
  %111 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 9
  %112 = load i32, i32* %111, align 8
  store i32 %112, i32* %110, align 8
  %113 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %114 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 10, i32 1
  %115 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 10, i32 1
  %116 = bitcast i32* %115 to i64*
  %117 = bitcast i32* %114 to i64*
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 11, i32 1
  %121 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 11, i32 1
  %122 = bitcast i32* %121 to i64*
  %123 = bitcast i32* %120 to i64*
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 12, i32 1
  %127 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 12, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast i32* %126 to i64*
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 13, i32 1
  %133 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 7, i32 13, i32 1
  %134 = bitcast i32* %133 to i64*
  %135 = bitcast i32* %132 to i64*
  %136 = load i64, i64* %134, align 8
  store i64 %136, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 8
  %138 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 8
  %139 = bitcast i32* %137 to i8*
  %140 = bitcast i32* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 7, i1 false) #7
  %141 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl10SizeHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 13, i32 1
  %143 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 13, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false) #7
  %144 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl11ToneMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  %145 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 14, i32 1
  %146 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 14, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 20, i1 false) #7
  %147 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 15
  %148 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 15
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %147, align 8
  %150 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 17
  %151 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 17
  call void @_ZNSt3__16vectorIN3jxl16ExtraChannelInfoENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.84"* %150, %"class.std::__1::vector.84"* dereferenceable(24) %151) #7
  %152 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl19CustomTransformDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %153 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 18, i32 1
  %154 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 18, i32 1
  %155 = bitcast i8* %154 to i16*
  %156 = bitcast i8* %153 to i16*
  %157 = load i16, i16* %155, align 8
  store i16 %157, i16* %156, align 8
  %158 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 18, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl18OpsinInverseMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %159 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 18, i32 4, i32 1
  %160 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 18, i32 4, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 68, i1 false) #7
  %161 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 18, i32 5
  %162 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 18, i32 5
  %163 = bitcast i32* %161 to i8*
  %164 = bitcast i32* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 1124, i1 false) #7
  %165 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13PreviewHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %166 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 19, i32 1
  %167 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 19, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #7
  %168 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl15AnimationHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8
  %169 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 20, i32 1
  %170 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 20, i32 1
  %171 = bitcast i32* %169 to i8*
  %172 = bitcast i32* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 13, i1 false) #7
  %173 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 21
  %174 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %69, i64 0, i32 21
  %175 = bitcast i64* %173 to i8*
  %176 = bitcast i64* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 9, i1 false) #7
  %177 = bitcast %"class.jxl::ImageBundle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %177) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 368, i1 false)
  %178 = bitcast %"class.jxl::ImageBundle"* %7 to i64*
  store i64 0, i64* %178, align 8
  %179 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 1
  store i32 1, i32* %179, align 8
  %180 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 3
  call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %180) #7
  %181 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 4, i32 0
  %182 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 8
  %183 = bitcast %"class.std::__1::basic_string"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #7
  %184 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 9
  %185 = bitcast i32* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 14, i1 false) #7
  store %"struct.jxl::ImageMetadata"* %6, %"struct.jxl::ImageMetadata"** %184, align 8
  %186 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 10
  %187 = bitcast %"class.jxl::Image3"* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 96, i1 false) #7
  %188 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 11
  call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %188) #7
  %189 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %7, i64 0, i32 12
  %190 = bitcast %"class.std::__1::vector.91"* %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 32, i1 false) #7
  %191 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 9
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %192, 1
  %194 = call dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext %193) #7
  %195 = call i32 @_ZN3jxl17TransformIfNeededERKNS_11ImageBundleERKNS_13ColorEncodingEPNS_10ThreadPoolEPS0_PPS1_(%"class.jxl::ImageBundle"* dereferenceable(368) %1, %"struct.jxl::ColorEncoding"* dereferenceable(152) %194, %"class.jxl::ThreadPool"* null, %"class.jxl::ImageBundle"* nonnull %7, %"class.jxl::ImageBundle"** nonnull %5) #7
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %221

197:                                              ; preds = %109
  %198 = bitcast %"class.jxl::Plane"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %198) #7
  %199 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %8, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %200 = bitcast %"class.jxl::Plane"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  %201 = load i64, i64* %13, align 8
  %202 = load i64, i64* %41, align 8
  %203 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %8, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %203, i64 %201, i64 %202, i64 4) #7
  %204 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %9, align 8
  %205 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %5, align 8
  %206 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %205, i64 0, i32 10
  call void @_ZNK3jxl21ButteraugliComparator7DiffmapERKNS_6Image3IfEERNS_5PlaneIfEE(%"class.jxl::ButteraugliComparator"* %204, %"class.jxl::Image3"* dereferenceable(96) %206, %"class.jxl::Plane"* nonnull dereferenceable(32) %8) #7
  %207 = icmp eq float* %3, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %197
  %209 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 1
  %210 = call double @_ZN3jxl27ButteraugliScoreFromDiffmapERKNS_5PlaneIfEEPKNS_17ButteraugliParamsE(%"class.jxl::Plane"* nonnull dereferenceable(32) %8, %"struct.jxl::ButteraugliParams"* %209) #7
  %211 = fptrunc double %210 to float
  store float %211, float* %3, align 4
  br label %212

212:                                              ; preds = %197, %208
  %213 = icmp eq %"class.jxl::Plane"* %2, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0
  call void @_ZN3jxl9PlaneBase4SwapERS0_(%"struct.jxl::PlaneBase"* %215, %"struct.jxl::PlaneBase"* nonnull dereferenceable(32) %203) #7
  br label %216

216:                                              ; preds = %212, %214
  %217 = load i8*, i8** %199, align 8
  store i8* null, i8** %199, align 8
  %218 = icmp eq i8* %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %217) #7
  br label %220

220:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %198) #7
  br label %221

221:                                              ; preds = %109, %220
  %222 = phi i32 [ 0, %220 ], [ 1, %109 ]
  call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %177) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ImageMetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %150, i64 0, i32 0, i32 0
  %224 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %223, align 8
  %225 = icmp eq %"struct.jxl::ExtraChannelInfo"* %224, null
  br i1 %225, label %243, label %226

226:                                              ; preds = %221
  %227 = bitcast %"struct.jxl::ExtraChannelInfo"* %224 to i8*
  %228 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 17, i32 0, i32 1
  %229 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %228, align 8
  %230 = icmp eq %"struct.jxl::ExtraChannelInfo"* %229, %224
  br i1 %230, label %241, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"struct.jxl::ExtraChannelInfo"* [ %233, %231 ], [ %229, %226 ]
  %233 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %232, i64 -1
  %234 = bitcast %"struct.jxl::ExtraChannelInfo"* %233 to void (%"struct.jxl::ExtraChannelInfo"*)***
  %235 = load void (%"struct.jxl::ExtraChannelInfo"*)**, void (%"struct.jxl::ExtraChannelInfo"*)*** %234, align 8
  %236 = load void (%"struct.jxl::ExtraChannelInfo"*)*, void (%"struct.jxl::ExtraChannelInfo"*)** %235, align 8
  call void %236(%"struct.jxl::ExtraChannelInfo"* %233) #7
  %237 = icmp eq %"struct.jxl::ExtraChannelInfo"* %233, %224
  br i1 %237, label %238, label %231

238:                                              ; preds = %231
  %239 = bitcast %"class.std::__1::vector.84"* %150 to i8**
  %240 = load i8*, i8** %239, align 8
  br label %241

241:                                              ; preds = %238, %226
  %242 = phi i8* [ %240, %238 ], [ %227, %226 ]
  store %"struct.jxl::ExtraChannelInfo"* %224, %"struct.jxl::ExtraChannelInfo"** %228, align 8
  call void @_ZdlPv(i8* %242) #8
  br label %243

243:                                              ; preds = %241, %221
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %244 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %6, i64 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  store i8* null, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %248, label %247

247:                                              ; preds = %243
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %245) #7
  br label %248

248:                                              ; preds = %243, %247
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #7
  br label %249

249:                                              ; preds = %4, %37, %62, %248
  %250 = phi i32 [ %222, %248 ], [ 1, %4 ], [ 1, %62 ], [ 1, %37 ]
  ret i32 %250
}

declare void @_ZNK3jxl21ButteraugliComparator7DiffmapERKNS_6Image3IfEERNS_5PlaneIfEE(%"class.jxl::ButteraugliComparator"*, %"class.jxl::Image3"* dereferenceable(96), %"class.jxl::Plane"* dereferenceable(32)) local_unnamed_addr #2

declare double @_ZN3jxl27ButteraugliScoreFromDiffmapERKNS_5PlaneIfEEPKNS_17ButteraugliParamsE(%"class.jxl::Plane"* dereferenceable(32), %"struct.jxl::ButteraugliParams"*) local_unnamed_addr #2

declare void @_ZN3jxl9PlaneBase4SwapERS0_(%"struct.jxl::PlaneBase"*, %"struct.jxl::PlaneBase"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3jxl24JxlButteraugliComparator16GoodQualityScoreEv(%"class.jxl::JxlButteraugliComparator"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call double @_ZN3jxl23ButteraugliFuzzyInverseEd(double 1.500000e+00) #7
  %3 = fptrunc double %2 to float
  ret float %3
}

declare double @_ZN3jxl23ButteraugliFuzzyInverseEd(double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3jxl24JxlButteraugliComparator15BadQualityScoreEv(%"class.jxl::JxlButteraugliComparator"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call double @_ZN3jxl23ButteraugliFuzzyInverseEd(double 5.000000e-01) #7
  %3 = fptrunc double %2 to float
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3jxl19ButteraugliDistanceERKNS_11ImageBundleES2_RKNS_17ButteraugliParamsEPNS_5PlaneIfEEPNS_10ThreadPoolE(%"class.jxl::ImageBundle"* dereferenceable(368), %"class.jxl::ImageBundle"* dereferenceable(368), %"struct.jxl::ButteraugliParams"* nocapture readonly dereferenceable(16), %"class.jxl::Plane"*, %"class.jxl::ThreadPool"*) local_unnamed_addr #0 {
  %6 = alloca %"class.jxl::JxlButteraugliComparator", align 8
  %7 = bitcast %"class.jxl::JxlButteraugliComparator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 1
  %11 = bitcast %"struct.jxl::ButteraugliParams"* %10 to i8*
  %12 = bitcast %"struct.jxl::ButteraugliParams"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 16, i1 false) #7
  %13 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 2
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #7
  %15 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 0
  %16 = call float @_ZN3jxl12ComputeScoreERKNS_11ImageBundleES2_PNS_10ComparatorEPNS_5PlaneIfEEPNS_10ThreadPoolE(%"class.jxl::ImageBundle"* dereferenceable(368) %0, %"class.jxl::ImageBundle"* dereferenceable(368) %1, %"class.jxl::Comparator"* nonnull %15, %"class.jxl::Plane"* %3, %"class.jxl::ThreadPool"* %4) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %17 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %9, align 8
  store %"class.jxl::ButteraugliComparator"* null, %"class.jxl::ButteraugliComparator"** %9, align 8
  %18 = icmp eq %"class.jxl::ButteraugliComparator"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %5
  %20 = bitcast %"class.jxl::ButteraugliComparator"* %17 to void (%"class.jxl::ButteraugliComparator"*)***
  %21 = load void (%"class.jxl::ButteraugliComparator"*)**, void (%"class.jxl::ButteraugliComparator"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %21, i64 1
  %23 = load void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %22, align 8
  call void %23(%"class.jxl::ButteraugliComparator"* nonnull %17) #7
  br label %24

24:                                               ; preds = %5, %19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  ret float %16
}

declare float @_ZN3jxl12ComputeScoreERKNS_11ImageBundleES2_PNS_10ComparatorEPNS_5PlaneIfEEPNS_10ThreadPoolE(%"class.jxl::ImageBundle"* dereferenceable(368), %"class.jxl::ImageBundle"* dereferenceable(368), %"class.jxl::Comparator"*, %"class.jxl::Plane"*, %"class.jxl::ThreadPool"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl24JxlButteraugliComparatorD2Ev(%"class.jxl::JxlButteraugliComparator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %3, align 8
  store %"class.jxl::ButteraugliComparator"* null, %"class.jxl::ButteraugliComparator"** %3, align 8
  %5 = icmp eq %"class.jxl::ButteraugliComparator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jxl::ButteraugliComparator"* %4 to void (%"class.jxl::ButteraugliComparator"*)***
  %8 = load void (%"class.jxl::ButteraugliComparator"*)**, void (%"class.jxl::ButteraugliComparator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %8, i64 1
  %10 = load void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %9, align 8
  tail call void %10(%"class.jxl::ButteraugliComparator"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3jxl19ButteraugliDistanceERKNS_10CodecInOutES2_RKNS_17ButteraugliParamsEPNS_5PlaneIfEEPNS_10ThreadPoolE(%"class.jxl::CodecInOut"* nocapture readonly dereferenceable(3416), %"class.jxl::CodecInOut"* nocapture readonly dereferenceable(3416), %"struct.jxl::ButteraugliParams"* nocapture readonly dereferenceable(16), %"class.jxl::Plane"*, %"class.jxl::ThreadPool"*) local_unnamed_addr #0 {
  %6 = alloca %"class.jxl::JxlButteraugliComparator", align 8
  %7 = bitcast %"class.jxl::JxlButteraugliComparator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 1
  %11 = bitcast %"struct.jxl::ButteraugliParams"* %10 to i8*
  %12 = bitcast %"struct.jxl::ButteraugliParams"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 16, i1 false) #7
  %13 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 2
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #7
  %15 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8, i32 0, i32 1
  %17 = bitcast %"class.jxl::ImageBundle"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.105"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %1, i64 0, i32 8
  %23 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %1, i64 0, i32 8, i32 0, i32 1
  %24 = bitcast %"class.jxl::ImageBundle"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.105"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %21, %28
  %30 = inttoptr i64 %27 to %"class.jxl::ImageBundle"*
  br i1 %29, label %34, label %31

31:                                               ; preds = %5
  %32 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #7
  %33 = tail call zeroext i1 @_ZN3jxl5AbortEv() #9
  unreachable

34:                                               ; preds = %5
  %35 = icmp eq i64 %18, %20
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %"class.jxl::ButteraugliComparator"* null, %"class.jxl::ButteraugliComparator"** %9, align 8
  br label %48

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %22, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %6, i64 0, i32 0
  br label %50

40:                                               ; preds = %50
  %41 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %"class.jxl::ButteraugliComparator"* null, %"class.jxl::ButteraugliComparator"** %9, align 8
  %42 = icmp eq %"class.jxl::ButteraugliComparator"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.jxl::ButteraugliComparator"* %41 to void (%"class.jxl::ButteraugliComparator"*)***
  %45 = load void (%"class.jxl::ButteraugliComparator"*)**, void (%"class.jxl::ButteraugliComparator"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %45, i64 1
  %47 = load void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %46, align 8
  call void %47(%"class.jxl::ButteraugliComparator"* nonnull %41) #7
  br label %48

48:                                               ; preds = %36, %40, %43
  %49 = phi float [ 0.000000e+00, %36 ], [ %60, %40 ], [ %60, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  ret float %49

50:                                               ; preds = %67, %37
  %51 = phi %"class.jxl::ImageBundle"* [ %30, %37 ], [ %68, %67 ]
  %52 = phi i64 [ %20, %37 ], [ %63, %67 ]
  %53 = phi float [ 0.000000e+00, %37 ], [ %60, %67 ]
  %54 = phi i64 [ 0, %37 ], [ %61, %67 ]
  %55 = inttoptr i64 %52 to %"class.jxl::ImageBundle"*
  %56 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %55, i64 %54
  %57 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %51, i64 %54
  %58 = call float @_ZN3jxl12ComputeScoreERKNS_11ImageBundleES2_PNS_10ComparatorEPNS_5PlaneIfEEPNS_10ThreadPoolE(%"class.jxl::ImageBundle"* dereferenceable(368) %56, %"class.jxl::ImageBundle"* dereferenceable(368) %57, %"class.jxl::Comparator"* nonnull %39, %"class.jxl::Plane"* %3, %"class.jxl::ThreadPool"* %4) #7
  %59 = fcmp olt float %53, %58
  %60 = select i1 %59, float %58, float %53
  %61 = add nuw i64 %54, 1
  %62 = load i64, i64* %17, align 8
  %63 = load i64, i64* %19, align 8
  %64 = sub i64 %62, %63
  %65 = sdiv exact i64 %64, 368
  %66 = icmp ult i64 %61, %65
  br i1 %66, label %67, label %40

67:                                               ; preds = %50
  %68 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %38, align 8
  br label %50
}

declare zeroext i1 @_ZN3jxl5DebugEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn
declare zeroext i1 @_ZN3jxl5AbortEv() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl24JxlButteraugliComparatorD0Ev(%"class.jxl::JxlButteraugliComparator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3jxl24JxlButteraugliComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jxl::JxlButteraugliComparator", %"class.jxl::JxlButteraugliComparator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.jxl::ButteraugliComparator"*, %"class.jxl::ButteraugliComparator"** %3, align 8
  store %"class.jxl::ButteraugliComparator"* null, %"class.jxl::ButteraugliComparator"** %3, align 8
  %5 = icmp eq %"class.jxl::ButteraugliComparator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jxl::ButteraugliComparator"* %4 to void (%"class.jxl::ButteraugliComparator"*)***
  %8 = load void (%"class.jxl::ButteraugliComparator"*)**, void (%"class.jxl::ButteraugliComparator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %8, i64 1
  %10 = load void (%"class.jxl::ButteraugliComparator"*)*, void (%"class.jxl::ButteraugliComparator"*)** %9, align 8
  tail call void %10(%"class.jxl::ButteraugliComparator"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.jxl::JxlButteraugliComparator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl16ExtraChannelInfoENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.84"*, %"class.std::__1::vector.84"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.84"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  %4 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.jxl::ExtraChannelInfo"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.84"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 96
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 192153584101141162
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #8
  %18 = bitcast i8* %17 to %"struct.jxl::ExtraChannelInfo"*
  %19 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.jxl::ExtraChannelInfo"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.84"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.jxl::ExtraChannelInfo"* %22, %"struct.jxl::ExtraChannelInfo"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %24, align 8
  %26 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %4, align 8
  %27 = bitcast %"struct.jxl::ExtraChannelInfo"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.jxl::ExtraChannelInfo"* %25, %26
  br i1 %29, label %69, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.jxl::ExtraChannelInfo"*
  br label %32

32:                                               ; preds = %61, %30
  %33 = phi %"struct.jxl::ExtraChannelInfo"* [ %65, %61 ], [ %31, %30 ]
  %34 = phi %"struct.jxl::ExtraChannelInfo"* [ %64, %61 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl16ExtraChannelInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 1
  %38 = bitcast i8* %37 to i64*
  %39 = bitcast i8* %36 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8BitDepthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 3, i32 1
  %43 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 3, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 12, i1 false) #7
  %44 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 4
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 5
  %48 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 5
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %32
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #7
  br label %61

56:                                               ; preds = %32
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #7
  br label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 0, i32 6
  %63 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 0, i32 6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #7
  %64 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %34, i64 1
  %65 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 1
  %66 = icmp eq %"struct.jxl::ExtraChannelInfo"* %64, %26
  br i1 %66, label %67, label %32

67:                                               ; preds = %61
  %68 = ptrtoint %"struct.jxl::ExtraChannelInfo"* %65 to i64
  br label %69

69:                                               ; preds = %16, %67
  %70 = phi i64 [ %28, %16 ], [ %68, %67 ]
  store i64 %70, i64* %27, align 8
  br label %71

71:                                               ; preds = %2, %69
  ret void
}

declare void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"*) unnamed_addr #2

declare void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN3jxl12CacheAligned4FreeEPKv(i8*) local_unnamed_addr #2

declare void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"*, i64, i64, i64) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
