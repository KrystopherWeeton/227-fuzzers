; ModuleID = '../../third_party/dawn/third_party/tint/src/sem/call.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/sem/call.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::sem::Call" = type { %"class.tint::Castable", %"class.tint::sem::CallTarget"* }
%"class.tint::Castable" = type { %"class.tint::sem::Expression" }
%"class.tint::sem::Expression" = type { %"class.tint::Castable.0", %"class.tint::ast::Expression"*, %"class.tint::sem::Type"*, %"class.tint::sem::Statement"* }
%"class.tint::Castable.0" = type { %"class.tint::sem::Node" }
%"class.tint::sem::Node" = type { %"class.tint::Castable.1" }
%"class.tint::Castable.1" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::sem::Type" = type { %"class.tint::Castable.11" }
%"class.tint::Castable.11" = type { %"class.tint::sem::Node" }
%"class.tint::ast::Expression" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Node" = type { %"class.tint::Castable.3", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.3" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.4" }
%"class.tint::Castable.4" = type { %"class.tint::CastableBase" }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::basic_string"* }
%"class.tint::sem::CallTarget" = type { %"class.tint::Castable.12", %"class.tint::sem::Type"*, %"class.std::__1::vector.13" }
%"class.tint::Castable.12" = type { %"class.tint::sem::Node" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.tint::sem::Parameter"*, %"struct.tint::sem::Parameter"*, %"class.std::__1::__compressed_pair.15" }
%"struct.tint::sem::Parameter" = type <{ %"class.tint::sem::Type"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.tint::sem::Parameter"* }
%"class.tint::sem::Statement" = type opaque

$_ZNK4tint8CastableINS_3sem4CallENS1_10ExpressionEE8TypeInfoEv = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3sem10ExpressionEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [16 x i8] c"tint::sem::Call\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3sem4CallEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem10ExpressionEE4infoE, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint3sem4CallE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::sem::Call"*)* @_ZN4tint3sem4CallD2Ev to i8*), i8* bitcast (void (%"class.tint::sem::Call"*)* @_ZN4tint3sem4CallD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3sem4CallENS1_10ExpressionEE8TypeInfoEv to i8*)] }, align 8

@_ZN4tint3sem4CallC1EPNS_3ast10ExpressionEPKNS0_10CallTargetEPNS0_9StatementE = hidden unnamed_addr alias void (%"class.tint::sem::Call"*, %"class.tint::ast::Expression"*, %"class.tint::sem::CallTarget"*, %"class.tint::sem::Statement"*), void (%"class.tint::sem::Call"*, %"class.tint::ast::Expression"*, %"class.tint::sem::CallTarget"*, %"class.tint::sem::Statement"*)* @_ZN4tint3sem4CallC2EPNS_3ast10ExpressionEPKNS0_10CallTargetEPNS0_9StatementE
@_ZN4tint3sem4CallD1Ev = hidden unnamed_addr alias void (%"class.tint::sem::Call"*), void (%"class.tint::sem::Call"*)* @_ZN4tint3sem4CallD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem4CallC2EPNS_3ast10ExpressionEPKNS0_10CallTargetEPNS0_9StatementE(%"class.tint::sem::Call"*, %"class.tint::ast::Expression"*, %"class.tint::sem::CallTarget"*, %"class.tint::sem::Statement"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.tint::sem::CallTarget", %"class.tint::sem::CallTarget"* %2, i64 0, i32 1
  %6 = load %"class.tint::sem::Type"*, %"class.tint::sem::Type"** %5, align 8
  %7 = getelementptr inbounds %"class.tint::sem::Call", %"class.tint::sem::Call"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3sem10ExpressionC2EPNS_3ast10ExpressionEPKNS0_4TypeEPNS0_9StatementE(%"class.tint::sem::Expression"* %7, %"class.tint::ast::Expression"* %1, %"class.tint::sem::Type"* %6, %"class.tint::sem::Statement"* %3) #4
  %8 = getelementptr inbounds %"class.tint::sem::Call", %"class.tint::sem::Call"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint3sem4CallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.tint::sem::Call", %"class.tint::sem::Call"* %0, i64 0, i32 1
  store %"class.tint::sem::CallTarget"* %2, %"class.tint::sem::CallTarget"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem4CallD2Ev(%"class.tint::sem::Call"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Call", %"class.tint::sem::Call"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN4tint3sem4NodeD2Ev(%"class.tint::sem::Node"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem4CallD0Ev(%"class.tint::sem::Call"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Call", %"class.tint::sem::Call"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN4tint3sem4NodeD2Ev(%"class.tint::sem::Node"* %2) #4
  %3 = bitcast %"class.tint::sem::Call"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3sem4CallENS1_10ExpressionEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem4CallEE4infoE
}

declare void @_ZN4tint3sem10ExpressionC2EPNS_3ast10ExpressionEPKNS0_4TypeEPNS0_9StatementE(%"class.tint::sem::Expression"*, %"class.tint::ast::Expression"*, %"class.tint::sem::Type"*, %"class.tint::sem::Statement"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint3sem4NodeD2Ev(%"class.tint::sem::Node"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
