; ModuleID = '../../media/base/decoder_factory.cc'
source_filename = "../../media/base/decoder_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::DecoderFactory" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::MediaLog" = type opaque
%"class.std::__1::vector" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"*, %"class.std::__1::__compressed_pair" }
%"struct.media::SupportedVideoDecoderConfig" = type <{ i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, i8, [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::SupportedVideoDecoderConfig"* }
%"class.media::GpuVideoAcceleratorFactories" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.5", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.3" = type opaque

@_ZTVN5media14DecoderFactoryE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::DecoderFactory"*)* @_ZN5media14DecoderFactoryD2Ev to i8*), i8* bitcast (void (%"class.media::DecoderFactory"*)* @_ZN5media14DecoderFactoryD0Ev to i8*), i8* bitcast (void (%"class.media::DecoderFactory"*, %"class.base::SequencedTaskRunner"*, %"class.media::MediaLog"*, %"class.std::__1::vector"*)* @_ZN5media14DecoderFactory19CreateAudioDecodersE13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_8MediaLogEPNSt3__16vectorINS7_10unique_ptrINS_12AudioDecoderENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEE to i8*), i8* bitcast (void (%"class.std::__1::vector.1"*, %"class.media::DecoderFactory"*)* @_ZN5media14DecoderFactory40GetSupportedVideoDecoderConfigsForWebRTCEv to i8*), i8* bitcast (void (%"class.media::DecoderFactory"*, %"class.base::SequencedTaskRunner"*, %"class.media::GpuVideoAcceleratorFactories"*, %"class.media::MediaLog"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*, %"class.std::__1::vector.3"*)* @_ZN5media14DecoderFactory19CreateVideoDecodersE13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_28GpuVideoAcceleratorFactoriesEPNS_8MediaLogENS2_17RepeatingCallbackIFvbNS9_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceEPNSt3__16vectorINSL_10unique_ptrINS_12VideoDecoderENSL_14default_deleteISO_EEEENSL_9allocatorISR_EEEE to i8*)] }, align 8

@_ZN5media14DecoderFactoryC1Ev = hidden unnamed_addr alias void (%"class.media::DecoderFactory"*), void (%"class.media::DecoderFactory"*)* @_ZN5media14DecoderFactoryC2Ev
@_ZN5media14DecoderFactoryD1Ev = hidden unnamed_addr alias void (%"class.media::DecoderFactory"*), void (%"class.media::DecoderFactory"*)* @_ZN5media14DecoderFactoryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media14DecoderFactoryC2Ev(%"class.media::DecoderFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::DecoderFactory", %"class.media::DecoderFactory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media14DecoderFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media14DecoderFactoryD2Ev(%"class.media::DecoderFactory"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14DecoderFactoryD0Ev(%"class.media::DecoderFactory"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::DecoderFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14DecoderFactory19CreateAudioDecodersE13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_8MediaLogEPNSt3__16vectorINS7_10unique_ptrINS_12AudioDecoderENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEE(%"class.media::DecoderFactory"* nocapture readnone, %"class.base::SequencedTaskRunner"*, %"class.media::MediaLog"* nocapture readnone, %"class.std::__1::vector"* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #7
  br label %14

14:                                               ; preds = %4, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14DecoderFactory40GetSupportedVideoDecoderConfigsForWebRTCEv(%"class.std::__1::vector.1"* noalias nocapture sret, %"class.media::DecoderFactory"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14DecoderFactory19CreateVideoDecodersE13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_28GpuVideoAcceleratorFactoriesEPNS_8MediaLogENS2_17RepeatingCallbackIFvbNS9_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceEPNSt3__16vectorINSL_10unique_ptrINS_12VideoDecoderENSL_14default_deleteISO_EEEENSL_9allocatorISR_EEEE(%"class.media::DecoderFactory"* nocapture readnone, %"class.base::SequencedTaskRunner"*, %"class.media::GpuVideoAcceleratorFactories"* nocapture readnone, %"class.media::MediaLog"* nocapture readnone, %"class.base::RepeatingCallback"* nocapture readnone, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), %"class.std::__1::vector.3"* nocapture readnone) unnamed_addr #2 align 2 {
  %8 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %16) #7
  br label %17

17:                                               ; preds = %7, %9, %14
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
