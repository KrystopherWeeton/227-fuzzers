; ModuleID = '../../v8/src/codegen/code-reference.cc'
source_filename = "../../v8/src/codegen/code-reference.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::CodeReference" = type { i32, %union.anon }
%union.anon = type { i8* }
%"class.v8::internal::Handle<v8::internal::Code>::ObjectRef" = type { %"class.v8::internal::Code" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.210", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.313" }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.29", %"class.std::__1::unique_ptr.225", %"class.std::__1::shared_ptr.252", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.270", %"class.std::__1::vector.279", %"class.std::__1::unique_ptr.287", %"class.std::__1::vector.293", %"class.std::__1::unique_ptr.300", i8, %"class.std::__1::unique_ptr.306", i8, i8, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector", i32, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::shared_ptr" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.8" }
%"class.std::__1::__tree.8" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.15" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.20", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.20" = type { i64 }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.21", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::unique_ptr"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.28 }
%union.anon.28 = type { i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.324", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.957", %"class.std::__1::unique_ptr.978", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.1112", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.1125", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.1135", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.1140", %"struct.std::__1::atomic.481", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1215", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1258"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1266", i32, i8, i8, i32, i32, %"class.std::__1::vector.1272", %"class.std::__1::vector.1272", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1279", i64, %"class.std::__1::unordered_map.1280", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.853", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.490", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1332", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1370", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1404", %"class.std::__1::vector.1408", %"class.std::__1::vector.1408", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.318", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__cxx_atomic_impl.320" }
%"struct.std::__1::__cxx_atomic_impl.320" = type { %"struct.std::__1::__cxx_atomic_base_impl.321" }
%"struct.std::__1::__cxx_atomic_base_impl.321" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.322", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.322" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.330", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.361", %"class.std::__1::vector.365", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.475", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.491", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.495", %"class.std::__1::vector.495", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.508", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.644", %"class.std::__1::unique_ptr.650", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"class.std::__1::unique_ptr.774", %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.786", %"class.std::__1::unique_ptr.792", %"class.std::__1::unique_ptr.792", %"class.std::__1::unique_ptr.798", %"class.std::__1::unique_ptr.804", %"class.std::__1::shared_ptr.810", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.815", %"class.std::__1::unique_ptr.841", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.847", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.860", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.660", i8, [7 x i8], %"class.std::__1::unordered_map.866", %"class.std::__1::unordered_map.892", %"class.std::__1::unordered_map.866", %"class.std::__1::unordered_map.916", %"class.std::__1::vector.944", i8, %"class.std::__1::unique_ptr.951", i32, i32 }
%"class.std::__1::unordered_map.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.356", %"struct.std::__1::atomic.356", %"struct.std::__1::atomic.356" }
%"struct.std::__1::atomic.356" = type { %"struct.std::__1::__atomic_base.357" }
%"struct.std::__1::__atomic_base.357" = type { %"struct.std::__1::__atomic_base.358" }
%"struct.std::__1::__atomic_base.358" = type { %"struct.std::__1::__cxx_atomic_impl.359" }
%"struct.std::__1::__cxx_atomic_impl.359" = type { %"struct.std::__1::__cxx_atomic_base_impl.360" }
%"struct.std::__1::__cxx_atomic_base_impl.360" = type { i64 }
%"struct.std::__1::atomic.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i32 }
%"class.std::__1::vector.365" = type { %"class.std::__1::__vector_base.366" }
%"class.std::__1::__vector_base.366" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.367" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.433" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.427" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.372", %"class.std::__1::vector.372", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.374" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.399", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.356", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.415"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.423", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.356", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.356", %"struct.std::__1::atomic.404", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.408" }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.410" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.415" = type { %"class.std::__1::__tree.416" }
%"class.std::__1::__tree.416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::atomic.423" = type { %"struct.std::__1::__atomic_base.424" }
%"struct.std::__1::__atomic_base.424" = type { %"struct.std::__1::__cxx_atomic_impl.425" }
%"struct.std::__1::__cxx_atomic_impl.425" = type { %"struct.std::__1::__cxx_atomic_base_impl.426" }
%"struct.std::__1::__cxx_atomic_base_impl.426" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.228", i8, [7 x i8] }>
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { i64*, i64*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.433" = type { %"class.std::__1::__vector_base.434" }
%"class.std::__1::__vector_base.434" = type { %"struct.std::__1::pair.435"*, %"struct.std::__1::pair.435"*, %"class.std::__1::__compressed_pair.436" }
%"struct.std::__1::pair.435" = type { i32, i64 }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.std::__1::pair.435"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.441" }
%"class.std::__1::unordered_map.441" = type { %"class.std::__1::__hash_table.442" }
%"class.std::__1::__hash_table.442" = type <{ %"class.std::__1::unique_ptr.443", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.458", %"class.std::__1::__compressed_pair.463", [4 x i8] }>
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445", %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.446"** }
%"struct.std::__1::__hash_node_base.446" = type { %"struct.std::__1::__hash_node_base.446"* }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::__bucket_list_deallocator.448" }
%"class.std::__1::__bucket_list_deallocator.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.std::__1::__hash_node_base.446" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.468", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.470" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1337", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1341", %"class.std::__1::unique_ptr.1347", %"class.std::__1::unique_ptr.804", %"class.std::__1::vector.1353", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1337" = type { %"struct.std::__1::__atomic_base.1338" }
%"struct.std::__1::__atomic_base.1338" = type { %"struct.std::__1::__cxx_atomic_impl.1339" }
%"struct.std::__1::__cxx_atomic_impl.1339" = type { %"struct.std::__1::__cxx_atomic_base_impl.1340" }
%"struct.std::__1::__cxx_atomic_base_impl.1340" = type { i32 }
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.1105" }
%"class.std::__1::vector.1105" = type { %"class.std::__1::__vector_base.1106" }
%"class.std::__1::__vector_base.1106" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { i64** }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.1105", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1353" = type { %"class.std::__1::__vector_base.1354" }
%"class.std::__1::__vector_base.1354" = type { %"struct.std::__1::pair.1355"*, %"struct.std::__1::pair.1355"*, %"class.std::__1::__compressed_pair.1356" }
%"struct.std::__1::pair.1355" = type opaque
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"struct.std::__1::pair.1355"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.481", %"struct.std::__1::atomic.485", %"class.std::__1::shared_ptr.489", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.485" = type { %"struct.std::__1::__atomic_base.486" }
%"struct.std::__1::__atomic_base.486" = type { %"struct.std::__1::__cxx_atomic_impl.487" }
%"struct.std::__1::__cxx_atomic_impl.487" = type { %"struct.std::__1::__cxx_atomic_base_impl.488" }
%"struct.std::__1::__cxx_atomic_base_impl.488" = type { i8 }
%"class.std::__1::shared_ptr.489" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.490" }
%"struct.std::__1::atomic.491" = type { %"struct.std::__1::__atomic_base.492" }
%"struct.std::__1::__atomic_base.492" = type { %"struct.std::__1::__cxx_atomic_impl.493" }
%"struct.std::__1::__cxx_atomic_impl.493" = type { %"struct.std::__1::__cxx_atomic_base_impl.494" }
%"struct.std::__1::__cxx_atomic_base_impl.494" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.495" = type { %"class.std::__1::__vector_base.496" }
%"class.std::__1::__vector_base.496" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.497" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.550", %"class.std::__1::unique_ptr.556", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.610", %"class.std::__1::vector.610", %"class.std::__1::vector.610", %"class.std::__1::vector.617", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.511", %"class.std::__1::vector.512", %"class.std::__1::vector.519", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.511" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.514" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"class.std::__1::unique_ptr.521"*, %"class.std::__1::unique_ptr.521"*, %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::unique_ptr.521" = type opaque
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.std::__1::unique_ptr.521"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.527", %"class.v8::internal::Worklist.529", %"class.v8::internal::Worklist.529", %"class.v8::internal::Worklist.529", %"class.v8::internal::Worklist.531", %"class.v8::internal::Worklist.533", %"class.v8::internal::Worklist.535", %"class.v8::internal::Worklist.537", %"class.v8::internal::Worklist.539", %"class.v8::internal::Worklist.541" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.527" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.529" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.531" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.533" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.535" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.537" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.539" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.541" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.543", i8, i64 }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.559" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.511"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.559" = type { %"class.std::__1::__hash_table.560" }
%"class.std::__1::__hash_table.560" = type <{ %"class.std::__1::unique_ptr.561", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.576", %"class.std::__1::__compressed_pair.579", [4 x i8] }>
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563", %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"struct.std::__1::__hash_node_base.564"** }
%"struct.std::__1::__hash_node_base.564" = type { %"struct.std::__1::__hash_node_base.564"* }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.std::__1::__bucket_list_deallocator.566" }
%"class.std::__1::__bucket_list_deallocator.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.std::__1::__hash_node_base.564" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.586" }
%"class.std::__1::unordered_map.586" = type { %"class.std::__1::__hash_table.587" }
%"class.std::__1::__hash_table.587" = type <{ %"class.std::__1::unique_ptr.588", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.606", [4 x i8] }>
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590", %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"struct.std::__1::__hash_node_base.591"** }
%"struct.std::__1::__hash_node_base.591" = type { %"struct.std::__1::__hash_node_base.591"* }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.std::__1::__bucket_list_deallocator.593" }
%"class.std::__1::__bucket_list_deallocator.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::__hash_node_base.591" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::vector.610" = type { %"class.std::__1::__vector_base.611" }
%"class.std::__1::__vector_base.611" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %"struct.std::__1::pair.619"*, %"struct.std::__1::pair.619"*, %"class.std::__1::__compressed_pair.620" }
%"struct.std::__1::pair.619" = type opaque
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::pair.619"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.625", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.610"], [3 x %"class.std::__1::vector.610"], i8, %"struct.std::__1::atomic.481", [6 x i8], %"class.std::__1::vector.610", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.635"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.610", %"class.std::__1::vector.610", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.635" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.660", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.653"], %"class.std::__1::unique_ptr.625" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.692", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.696", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.701" }
%"struct.std::__1::atomic.692" = type { %"struct.std::__1::__atomic_base.693" }
%"struct.std::__1::__atomic_base.693" = type { %"struct.std::__1::__cxx_atomic_impl.694" }
%"struct.std::__1::__cxx_atomic_impl.694" = type { %"struct.std::__1::__cxx_atomic_base_impl.695" }
%"struct.std::__1::__cxx_atomic_base_impl.695" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.696" = type { %"struct.std::__1::__atomic_base.697" }
%"struct.std::__1::__atomic_base.697" = type { %"struct.std::__1::__cxx_atomic_impl.698" }
%"struct.std::__1::__cxx_atomic_impl.698" = type { %"struct.std::__1::__cxx_atomic_base_impl.699" }
%"struct.std::__1::__cxx_atomic_base_impl.699" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.701" = type { %"class.std::__1::__hash_table.702" }
%"class.std::__1::__hash_table.702" = type <{ %"class.std::__1::unique_ptr.703", %"class.std::__1::__compressed_pair.713", %"class.std::__1::__compressed_pair.718", %"class.std::__1::__compressed_pair.721", [4 x i8] }>
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705", %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.std::__1::__hash_node_base.706"** }
%"struct.std::__1::__hash_node_base.706" = type { %"struct.std::__1::__hash_node_base.706"* }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.std::__1::__bucket_list_deallocator.708" }
%"class.std::__1::__bucket_list_deallocator.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.std::__1::__hash_node_base.706" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.625", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.481", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.731", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.731" = type { %"class.std::__1::__hash_table.732" }
%"class.std::__1::__hash_table.732" = type <{ %"class.std::__1::unique_ptr.733", %"class.std::__1::__compressed_pair.743", %"class.std::__1::__compressed_pair.748", %"class.std::__1::__compressed_pair.751", [4 x i8] }>
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735", %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"struct.std::__1::__hash_node_base.736"** }
%"struct.std::__1::__hash_node_base.736" = type { %"struct.std::__1::__hash_node_base.736"* }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.std::__1::__bucket_list_deallocator.738" }
%"class.std::__1::__bucket_list_deallocator.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::__hash_node_base.736" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.767" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.810" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.811", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.36", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.39", %"class.std::__1::set.47" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.39" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::set.47" = type { %"class.std::__1::__tree.48" }
%"class.std::__1::__tree.48" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::atomic.811" = type { %"struct.std::__1::__atomic_base.812" }
%"struct.std::__1::__atomic_base.812" = type { %"struct.std::__1::__cxx_atomic_impl.813" }
%"struct.std::__1::__cxx_atomic_impl.813" = type { %"struct.std::__1::__cxx_atomic_base_impl.814" }
%"struct.std::__1::__cxx_atomic_base_impl.814" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.815" = type { %"class.std::__1::__hash_table.816" }
%"class.std::__1::__hash_table.816" = type <{ %"class.std::__1::unique_ptr.817", %"class.std::__1::__compressed_pair.827", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.835", [4 x i8] }>
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819", %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"struct.std::__1::__hash_node_base.820"** }
%"struct.std::__1::__hash_node_base.820" = type { %"struct.std::__1::__hash_node_base.820"* }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.std::__1::__bucket_list_deallocator.822" }
%"class.std::__1::__bucket_list_deallocator.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::__hash_node_base.820" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.853", %"class.std::__1::vector.853" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.660" = type { %"class.std::__1::__hash_table.661" }
%"class.std::__1::__hash_table.661" = type <{ %"class.std::__1::unique_ptr.662", %"class.std::__1::__compressed_pair.672", %"class.std::__1::__compressed_pair.677", %"class.std::__1::__compressed_pair.681", [4 x i8] }>
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664", %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::__hash_node_base.665"** }
%"struct.std::__1::__hash_node_base.665" = type { %"struct.std::__1::__hash_node_base.665"* }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::__bucket_list_deallocator.667" }
%"class.std::__1::__bucket_list_deallocator.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::__hash_node_base.665" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.892" = type { %"class.std::__1::__hash_table.893" }
%"class.std::__1::__hash_table.893" = type <{ %"class.std::__1::unique_ptr.894", %"class.std::__1::__compressed_pair.904", %"class.std::__1::__compressed_pair.909", %"class.std::__1::__compressed_pair.912", [4 x i8] }>
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896", %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"struct.std::__1::__hash_node_base.897"** }
%"struct.std::__1::__hash_node_base.897" = type { %"struct.std::__1::__hash_node_base.897"* }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.std::__1::__bucket_list_deallocator.899" }
%"class.std::__1::__bucket_list_deallocator.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"struct.std::__1::__hash_node_base.897" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.866" = type { %"class.std::__1::__hash_table.867" }
%"class.std::__1::__hash_table.867" = type <{ %"class.std::__1::unique_ptr.868", %"class.std::__1::__compressed_pair.878", %"class.std::__1::__compressed_pair.883", %"class.std::__1::__compressed_pair.886", [4 x i8] }>
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870", %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::__hash_node_base.871"** }
%"struct.std::__1::__hash_node_base.871" = type { %"struct.std::__1::__hash_node_base.871"* }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"class.std::__1::__bucket_list_deallocator.873" }
%"class.std::__1::__bucket_list_deallocator.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.std::__1::__hash_node_base.871" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.916" = type { %"class.std::__1::__hash_table.917" }
%"class.std::__1::__hash_table.917" = type <{ %"class.std::__1::unique_ptr.918", %"class.std::__1::__compressed_pair.928", %"class.std::__1::__compressed_pair.933", %"class.std::__1::__compressed_pair.938", [4 x i8] }>
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920", %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::__hash_node_base.921"** }
%"struct.std::__1::__hash_node_base.921" = type { %"struct.std::__1::__hash_node_base.921"* }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.std::__1::__bucket_list_deallocator.923" }
%"class.std::__1::__bucket_list_deallocator.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"struct.std::__1::__hash_node_base.921" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::vector.944" = type { %"class.std::__1::__vector_base.945" }
%"class.std::__1::__vector_base.945" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.946" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.853" }
%"class.std::__1::shared_ptr.957" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.468", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.958", %"class.std::__1::unique_ptr.972" }
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.961" }
%"class.std::__1::vector.961" = type { %"class.std::__1::__vector_base.962" }
%"class.std::__1::__vector_base.962" = type { %"class.std::__1::unique_ptr.963"*, %"class.std::__1::unique_ptr.963"*, %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.std::__1::unique_ptr.963"* }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.981", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.981" = type { %"struct.std::__1::__atomic_base.982" }
%"struct.std::__1::__atomic_base.982" = type { %"struct.std::__1::__cxx_atomic_impl.983" }
%"struct.std::__1::__cxx_atomic_impl.983" = type { %"struct.std::__1::__cxx_atomic_base_impl.984" }
%"struct.std::__1::__cxx_atomic_base_impl.984" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.988", %"class.std::__1::unique_ptr.994", %"struct.std::__1::atomic.481", %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1006", %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1018", %"class.std::__1::unique_ptr.1024", %"class.std::__1::set.1030", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1030" = type { %"class.std::__1::__tree.1031" }
%"class.std::__1::__tree.1031" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.1040" }
%"class.v8::internal::TaggedImpl.1040" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.1039" }
%"class.v8::internal::TaggedImpl.1039" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.1041", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.1047", %"class.v8::internal::DetachableVector.1048", %"class.v8::internal::DetachableVector.1047", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.1048" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.1047" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1049", %"class.std::__1::vector.1055", %"class.std::__1::unique_ptr.1062", %"class.std::__1::vector.1069", %"class.std::__1::unique_ptr.1076", i64, %"class.std::__1::vector.1082", %"class.std::__1::vector.1090", %"class.std::__1::vector.1098", i8, i8, i32 }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.1055" = type { %"class.std::__1::__vector_base.1056" }
%"class.std::__1::__vector_base.1056" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.1057" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::GlobalHandles::NodeSpace.1065"* }
%"class.v8::internal::GlobalHandles::NodeSpace.1065" = type opaque
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.1071" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.1082" = type { %"class.std::__1::__vector_base.1083" }
%"class.std::__1::__vector_base.1083" = type { %"struct.std::__1::pair.1084"*, %"struct.std::__1::pair.1084"*, %"class.std::__1::__compressed_pair.1085" }
%"struct.std::__1::pair.1084" = type opaque
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::pair.1084"* }
%"class.std::__1::vector.1090" = type { %"class.std::__1::__vector_base.1091" }
%"class.std::__1::__vector_base.1091" = type { %"struct.std::__1::pair.1092"*, %"struct.std::__1::pair.1092"*, %"class.std::__1::__compressed_pair.1093" }
%"struct.std::__1::pair.1092" = type opaque
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"struct.std::__1::pair.1092"* }
%"class.std::__1::vector.1098" = type { %"class.std::__1::__vector_base.1099" }
%"class.std::__1::__vector_base.1099" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.1100" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.1105", %"class.std::__1::vector.1112" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.1119" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.1112" = type { %"class.std::__1::__vector_base.1113" }
%"class.std::__1::__vector_base.1113" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.1125" = type { %"struct.std::__1::__atomic_base.1126" }
%"struct.std::__1::__atomic_base.1126" = type { %"struct.std::__1::__cxx_atomic_impl.1127" }
%"struct.std::__1::__cxx_atomic_impl.1127" = type { %"struct.std::__1::__cxx_atomic_base_impl.1128" }
%"struct.std::__1::__cxx_atomic_base_impl.1128" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.1135" = type { %"struct.std::__1::__atomic_base.1136" }
%"struct.std::__1::__atomic_base.1136" = type { %"struct.std::__1::__cxx_atomic_impl.1137" }
%"struct.std::__1::__cxx_atomic_impl.1137" = type { %"struct.std::__1::__cxx_atomic_base_impl.1138" }
%"struct.std::__1::__cxx_atomic_base_impl.1138" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.239 }
%union.anon.239 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.1140" = type { %"class.std::__1::__hash_table.1141" }
%"class.std::__1::__hash_table.1141" = type <{ %"class.std::__1::unique_ptr.1142", %"class.std::__1::__compressed_pair.1152", %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1160", [4 x i8] }>
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144", %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"struct.std::__1::__hash_node_base.1145"** }
%"struct.std::__1::__hash_node_base.1145" = type { %"struct.std::__1::__hash_node_base.1145"* }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.std::__1::__bucket_list_deallocator.1147" }
%"class.std::__1::__bucket_list_deallocator.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.std::__1::__hash_node_base.1145" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::atomic.481" = type { %"struct.std::__1::__atomic_base.482" }
%"struct.std::__1::__atomic_base.482" = type { %"struct.std::__1::__cxx_atomic_impl.483" }
%"struct.std::__1::__cxx_atomic_impl.483" = type { %"struct.std::__1::__cxx_atomic_base_impl.484" }
%"struct.std::__1::__cxx_atomic_base_impl.484" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1166", %"class.v8::internal::Handle.1172", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1173", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1166" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1172" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1173" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.1174", %"class.std::__1::vector.1180", %"class.std::__1::unique_ptr.1188", %"class.std::__1::unique_ptr.1194", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1200", %"class.std::__1::vector.1206", %"struct.std::__1::pair.1214" }
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.1180" = type { %"class.std::__1::__vector_base.1181" }
%"class.std::__1::__vector_base.1181" = type { %"class.std::__1::unique_ptr.1182"*, %"class.std::__1::unique_ptr.1182"*, %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::unique_ptr.1182" = type opaque
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.std::__1::unique_ptr.1182"* }
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1206" = type { %"class.std::__1::__vector_base.1207" }
%"class.std::__1::__vector_base.1207" = type { %"struct.std::__1::pair.1208"*, %"struct.std::__1::pair.1208"*, %"class.std::__1::__compressed_pair.1209" }
%"struct.std::__1::pair.1208" = type opaque
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"struct.std::__1::pair.1208"* }
%"struct.std::__1::pair.1214" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.323"*, i16, i8*)*, i8* }
%"class.v8::Local.323" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1218", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1218" = type { %"class.std::__1::__hash_table.1219" }
%"class.std::__1::__hash_table.1219" = type <{ %"class.std::__1::unique_ptr.1220", %"class.std::__1::__compressed_pair.1230", %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1239", [4 x i8] }>
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222", %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"struct.std::__1::__hash_node_base.1223"** }
%"struct.std::__1::__hash_node_base.1223" = type { %"struct.std::__1::__hash_node_base.1223"* }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.std::__1::__bucket_list_deallocator.1225" }
%"class.std::__1::__bucket_list_deallocator.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"struct.std::__1::__hash_node_base.1223" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1253" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1247"**, %"struct.std::__1::pair.1247"**, %"struct.std::__1::pair.1247"**, %"class.std::__1::__compressed_pair.1248" }
%"struct.std::__1::pair.1247" = type opaque
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::pair.1247"** }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1258" = type { %"class.std::__1::__vector_base.1259" }
%"class.std::__1::__vector_base.1259" = type { %"class.v8::internal::Handle.1260"*, %"class.v8::internal::Handle.1260"*, %"class.std::__1::__compressed_pair.1261" }
%"class.v8::internal::Handle.1260" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.v8::internal::Handle.1260"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.1130", i32, %"class.v8::Local.323" }
%"class.v8::Local.1130" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1272" = type { %"class.std::__1::__vector_base.1273" }
%"class.std::__1::__vector_base.1273" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1279" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1280" = type { %"class.std::__1::__hash_table.1281" }
%"class.std::__1::__hash_table.1281" = type <{ %"class.std::__1::unique_ptr.1282", %"class.std::__1::__compressed_pair.1292", %"class.std::__1::__compressed_pair.1297", %"class.std::__1::__compressed_pair.1300", [4 x i8] }>
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284", %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"struct.std::__1::__hash_node_base.1285"** }
%"struct.std::__1::__hash_node_base.1285" = type { %"struct.std::__1::__hash_node_base.1285"* }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.std::__1::__bucket_list_deallocator.1287" }
%"class.std::__1::__bucket_list_deallocator.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.std::__1::__hash_node_base.1285" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.490" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1304", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1329", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1330", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1304" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::weak_ptr.1329" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1330" = type { %"class.v8::PersistentBase.1331" }
%"class.v8::PersistentBase.1331" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1305", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1305" = type { %"class.std::__1::__hash_table.1306" }
%"class.std::__1::__hash_table.1306" = type <{ %"class.std::__1::unique_ptr.1307", %"class.std::__1::__compressed_pair.1317", %"class.std::__1::__compressed_pair.1322", %"class.std::__1::__compressed_pair.1325", [4 x i8] }>
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309", %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"struct.std::__1::__hash_node_base.1310"** }
%"struct.std::__1::__hash_node_base.1310" = type { %"struct.std::__1::__hash_node_base.1310"* }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.std::__1::__bucket_list_deallocator.1312" }
%"class.std::__1::__bucket_list_deallocator.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.std::__1::__hash_node_base.1310" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1361", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.1131", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.1131" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1378" }
%"class.std::__1::unordered_map.1378" = type { %"class.std::__1::__hash_table.1379" }
%"class.std::__1::__hash_table.1379" = type <{ %"class.std::__1::unique_ptr.1380", %"class.std::__1::__compressed_pair.1390", %"class.std::__1::__compressed_pair.1395", %"class.std::__1::__compressed_pair.1398", [4 x i8] }>
%"class.std::__1::unique_ptr.1380" = type { %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382", %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"struct.std::__1::__hash_node_base.1383"** }
%"struct.std::__1::__hash_node_base.1383" = type { %"struct.std::__1::__hash_node_base.1383"* }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.std::__1::__bucket_list_deallocator.1385" }
%"class.std::__1::__bucket_list_deallocator.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.1391" }
%"struct.std::__1::__compressed_pair_elem.1391" = type { %"struct.std::__1::__hash_node_base.1383" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::atomic.1404" = type { %"struct.std::__1::__atomic_base.1405" }
%"struct.std::__1::__atomic_base.1405" = type { %"struct.std::__1::__cxx_atomic_impl.1406" }
%"struct.std::__1::__cxx_atomic_impl.1406" = type { %"struct.std::__1::__cxx_atomic_base_impl.1407" }
%"struct.std::__1::__cxx_atomic_base_impl.1407" = type { %"class.std::__1::vector.1408"* }
%"class.std::__1::vector.1408" = type { %"class.std::__1::__vector_base.1409" }
%"class.std::__1::__vector_base.1409" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1410" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.29" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.30", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.57", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.71", %"class.std::__1::vector.79", %"class.std::__1::vector.86", %"class.std::__1::vector.93", %"class.std::__1::vector.100", %"class.std::__1::vector.107", %"class.std::__1::vector.114", %"class.std::__1::vector.121", %"class.std::__1::vector.128", %"class.std::__1::vector.135", %"class.std::__1::vector.148", %"class.std::__1::unordered_map", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.207" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.66" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.65, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.59" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.65 = type { i32 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.73 }
%union.anon.73 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { i8*, i8*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { i32*, i32*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i32* }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.95" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.102" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.109" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.116" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.123" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.130" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.143" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.137", i32, [4 x i8] }>
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.150" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.170", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.174" }
%"class.std::__1::unordered_map.174" = type { %"class.std::__1::__hash_table.175" }
%"class.std::__1::__hash_table.175" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.194", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.179"** }
%"struct.std::__1::__hash_node_base.179" = type { %"struct.std::__1::__hash_node_base.179"* }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__bucket_list_deallocator.181" }
%"class.std::__1::__bucket_list_deallocator.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base.179" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.std::__1::unordered_map.203"* }
%"class.std::__1::unordered_map.203" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.216" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.210", i64 }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.228", %"class.std::__1::vector.235", %"class.std::__1::vector.228", %"class.std::__1::vector.228", i8, [7 x i8] }>
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.252" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::map.270" = type { %"class.std::__1::__tree.271" }
%"class.std::__1::__tree.271" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"class.std::__1::unique_ptr.281"*, %"class.std::__1::unique_ptr.281"*, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::unique_ptr.281" = type opaque
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::unique_ptr.281"* }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.295" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::map.309"* }
%"class.std::__1::map.309" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { i8* }
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i32 }
%"class.v8::internal::CodeDesc" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %"class.v8::internal::Assembler"* }
%"class.v8::internal::Assembler" = type opaque

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13CodeReference13constant_poolEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %56 [
    i32 1, label %5
    i32 2, label %41
    i32 3, label %46
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %13 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %12) #4
  br i1 %13, label %14, label %39

14:                                               ; preds = %5
  %15 = load i64, i64* %11, align 8
  %16 = add i64 %15, 27
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 536870912
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21, !prof !2

21:                                               ; preds = %14
  %22 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %12) #4
  %23 = load i64, i64* %11, align 8
  br label %31

24:                                               ; preds = %14
  %25 = add i64 %15, 63
  %26 = add i64 %15, 19
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = add i64 %25, %29
  br label %31

31:                                               ; preds = %24, %21
  %32 = phi i64 [ %23, %21 ], [ %15, %24 ]
  %33 = phi i64 [ %22, %21 ], [ %30, %24 ]
  %34 = add i64 %32, 43
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = add i64 %33, %37
  br label %39

39:                                               ; preds = %5, %31
  %40 = phi i64 [ %38, %31 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %57

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %43 = bitcast %union.anon* %42 to %"class.v8::internal::wasm::WasmCode"**
  %44 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %43, align 8
  %45 = tail call i64 @_ZNK2v88internal4wasm8WasmCode13constant_poolEv(%"class.v8::internal::wasm::WasmCode"* %44) #4
  br label %57

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %48 = bitcast %union.anon* %47 to i64**
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i64, i64* %49, i64 4
  %52 = bitcast i64* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = add i64 %50, %54
  br label %57

56:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

57:                                               ; preds = %46, %41, %39
  %58 = phi i64 [ %55, %46 ], [ %45, %41 ], [ %40, %39 ]
  ret i64 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13CodeReference17instruction_startEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %36 [
    i32 1, label %5
    i32 2, label %24
    i32 3, label %31
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = add i64 %10, 27
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 536870912
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17, !prof !2

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %19 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %18) #4
  br label %22

20:                                               ; preds = %5
  %21 = add i64 %10, 63
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %37

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to %"class.v8::internal::wasm::WasmCode"**
  %27 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %26, align 8
  %28 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %27, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  br label %37

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %33 = bitcast %union.anon* %32 to i64**
  %34 = load i64*, i64** %33, align 8
  %35 = load i64, i64* %34, align 8
  br label %37

36:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

37:                                               ; preds = %31, %24, %22
  %38 = phi i64 [ %35, %31 ], [ %30, %24 ], [ %23, %22 ]
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13CodeReference15instruction_endEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %50 [
    i32 1, label %5
    i32 2, label %29
    i32 3, label %40
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = add i64 %10, 27
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 536870912
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17, !prof !2

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %19 = call i64 @_ZNK2v88internal4Code21OffHeapInstructionEndEv(%"class.v8::internal::Code"* nonnull %18) #4
  br label %27

20:                                               ; preds = %5
  %21 = add i64 %10, 63
  %22 = add i64 %10, 19
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = add i64 %21, %25
  br label %27

27:                                               ; preds = %17, %20
  %28 = phi i64 [ %19, %17 ], [ %26, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %51

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %31 = bitcast %union.anon* %30 to %"class.v8::internal::wasm::WasmCode"**
  %32 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %31, align 8
  %33 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %32, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %32, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = ptrtoint i8* %38 to i64
  br label %51

40:                                               ; preds = %1
  %41 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i64* %43 to %"class.v8::internal::CodeDesc"*
  %46 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %45, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = add i64 %44, %48
  br label %51

50:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

51:                                               ; preds = %40, %29, %27
  %52 = phi i64 [ %49, %40 ], [ %39, %29 ], [ %28, %27 ]
  ret i64 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13CodeReference16instruction_sizeEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %38 [
    i32 1, label %5
    i32 2, label %26
    i32 3, label %32
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = add i64 %10, 27
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 536870912
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17, !prof !2

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %19 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %18) #4
  br label %24

20:                                               ; preds = %5
  %21 = add i64 %10, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi i32 [ %19, %17 ], [ %23, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %39

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to %"class.v8::internal::wasm::WasmCode"**
  %29 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %28, align 8
  %30 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  br label %39

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %34 = bitcast %union.anon* %33 to %"class.v8::internal::CodeDesc"**
  %35 = load %"class.v8::internal::CodeDesc"*, %"class.v8::internal::CodeDesc"** %34, align 8
  %36 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  br label %39

38:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

39:                                               ; preds = %32, %26, %24
  %40 = phi i32 [ %37, %32 ], [ %31, %26 ], [ %25, %24 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal13CodeReference16relocation_startEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %37 [
    i32 1, label %4
    i32 2, label %17
    i32 3, label %27
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i8*
  br label %38

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %19 = bitcast %union.anon* %18 to %"class.v8::internal::wasm::WasmCode"**
  %20 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %19, align 8
  %21 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %20, i64 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  br label %38

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to %"class.v8::internal::CodeDesc"**
  %30 = load %"class.v8::internal::CodeDesc"*, %"class.v8::internal::CodeDesc"** %29, align 8
  %31 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %30, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %30, i64 0, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  br label %38

37:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

38:                                               ; preds = %27, %17, %4
  %39 = phi i8* [ %36, %27 ], [ %26, %17 ], [ %16, %4 ]
  ret i8* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal13CodeReference14relocation_endEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %41 [
    i32 1, label %4
    i32 2, label %21
    i32 3, label %33
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i8*
  %17 = add i64 %14, 3
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = ashr i32 %19, 1
  br label %42

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to %"class.v8::internal::wasm::WasmCode"**
  %24 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %23, align 8
  %25 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %24, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %24, i64 0, i32 7
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  br label %42

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %35 = bitcast %union.anon* %34 to %"class.v8::internal::CodeDesc"**
  %36 = load %"class.v8::internal::CodeDesc"*, %"class.v8::internal::CodeDesc"** %35, align 8
  %37 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  br label %42

41:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

42:                                               ; preds = %33, %21, %4
  %43 = phi i32 [ %40, %33 ], [ %28, %21 ], [ %20, %4 ]
  %44 = phi i8* [ %38, %33 ], [ %32, %21 ], [ %16, %4 ]
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  ret i8* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13CodeReference15relocation_sizeEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %31 [
    i32 1, label %4
    i32 2, label %19
    i32 3, label %25
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = ashr i32 %17, 1
  br label %32

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to %"class.v8::internal::wasm::WasmCode"**
  %22 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %21, align 8
  %23 = getelementptr %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to %"class.v8::internal::CodeDesc"**
  %28 = load %"class.v8::internal::CodeDesc"*, %"class.v8::internal::CodeDesc"** %27, align 8
  %29 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %28, i64 0, i32 12
  %30 = load i32, i32* %29, align 4
  br label %32

31:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

32:                                               ; preds = %25, %19, %4
  %33 = phi i32 [ %30, %25 ], [ %24, %19 ], [ %18, %4 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13CodeReference13code_commentsEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %51 [
    i32 1, label %5
    i32 2, label %36
    i32 3, label %41
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = add i64 %10, 27
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 536870912
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17, !prof !2

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %19 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %18) #4
  %20 = load i64, i64* %11, align 8
  br label %28

21:                                               ; preds = %5
  %22 = add i64 %10, 63
  %23 = add i64 %10, 19
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = add i64 %22, %26
  br label %28

28:                                               ; preds = %17, %21
  %29 = phi i64 [ %20, %17 ], [ %10, %21 ]
  %30 = phi i64 [ %19, %17 ], [ %27, %21 ]
  %31 = add i64 %29, 43
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = add i64 %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %52

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to %"class.v8::internal::wasm::WasmCode"**
  %39 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %38, align 8
  %40 = tail call i64 @_ZNK2v88internal4wasm8WasmCode13code_commentsEv(%"class.v8::internal::wasm::WasmCode"* %39) #4
  br label %52

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %43 = bitcast %union.anon* %42 to i64**
  %44 = load i64*, i64** %43, align 8
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i64, i64* %44, i64 5
  %47 = bitcast i64* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = add i64 %45, %49
  br label %52

51:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

52:                                               ; preds = %41, %36, %28
  %53 = phi i64 [ %50, %41 ], [ %40, %36 ], [ %35, %28 ]
  ret i64 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13CodeReference18code_comments_sizeEv(%"class.v8::internal::CodeReference"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %25 [
    i32 1, label %5
    i32 2, label %14
    i32 3, label %19
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %2, i64 0, i32 0
  %13 = call i32 @_ZNK2v88internal4Code18code_comments_sizeEv(%"class.v8::internal::Code"* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %16 = bitcast %union.anon* %15 to %"class.v8::internal::wasm::WasmCode"**
  %17 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %16, align 8
  %18 = tail call i32 @_ZNK2v88internal4wasm8WasmCode18code_comments_sizeEv(%"class.v8::internal::wasm::WasmCode"* %17) #4
  br label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::CodeReference", %"class.v8::internal::CodeReference"* %0, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to %"class.v8::internal::CodeDesc"**
  %22 = load %"class.v8::internal::CodeDesc"*, %"class.v8::internal::CodeDesc"** %21, align 8
  %23 = getelementptr %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %22, i64 0, i32 10
  %24 = load i32, i32* %23, align 4
  br label %26

25:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

26:                                               ; preds = %19, %14, %5
  %27 = phi i32 [ %24, %19 ], [ %18, %14 ], [ %13, %5 ]
  ret i32 %27
}

declare zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4wasm8WasmCode13constant_poolEv(%"class.v8::internal::wasm::WasmCode"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4Code21OffHeapInstructionEndEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4wasm8WasmCode13code_commentsEv(%"class.v8::internal::wasm::WasmCode"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal4Code18code_comments_sizeEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal4wasm8WasmCode18code_comments_sizeEv(%"class.v8::internal::wasm::WasmCode"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
