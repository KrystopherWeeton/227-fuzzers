; ModuleID = '../../third_party/webrtc/modules/audio_processing/rms_level.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/rms_level.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::RmsLevel" = type { float, i64, float, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }

@_ZN6webrtc8RmsLevelC1Ev = hidden unnamed_addr alias void (%"class.webrtc::RmsLevel"*), void (%"class.webrtc::RmsLevel"*)* @_ZN6webrtc8RmsLevelC2Ev
@_ZN6webrtc8RmsLevelD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RmsLevel"*), void (%"class.webrtc::RmsLevel"*)* @_ZN6webrtc8RmsLevelD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc8RmsLevelC2Ev(%"class.webrtc::RmsLevel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %5, align 8
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc8RmsLevel5ResetEv(%"class.webrtc::RmsLevel"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc8RmsLevelD2Ev(%"class.webrtc::RmsLevel"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8RmsLevel7AnalyzeEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::RmsLevel"* nocapture, i16*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca float, align 4
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %88, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %19, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %17, align 8
  store i8 1, i8* %7, align 8
  %18 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %2, i64* %18, align 8
  br label %19

19:                                               ; preds = %14, %10
  %20 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %21 = getelementptr inbounds i16, i16* %1, i64 %2
  %22 = shl nsw i64 %2, 1
  %23 = add i64 %22, -2
  %24 = lshr exact i64 %23, 1
  %25 = add nuw i64 %24, 1
  %26 = and i64 %25, 3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %19, %28
  %29 = phi float [ %36, %28 ], [ 0.000000e+00, %19 ]
  %30 = phi i16* [ %37, %28 ], [ %1, %19 ]
  %31 = phi i64 [ %38, %28 ], [ %26, %19 ]
  %32 = load i16, i16* %30, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %33
  %35 = sitofp i32 %34 to float
  %36 = fadd float %29, %35
  %37 = getelementptr inbounds i16, i16* %30, i64 1
  %38 = add i64 %31, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %28, !llvm.loop !3

40:                                               ; preds = %28, %19
  %41 = phi float [ undef, %19 ], [ %36, %28 ]
  %42 = phi float [ 0.000000e+00, %19 ], [ %36, %28 ]
  %43 = phi i16* [ %1, %19 ], [ %37, %28 ]
  %44 = icmp ult i64 %23, 6
  br i1 %44, label %73, label %45

45:                                               ; preds = %40, %45
  %46 = phi float [ %70, %45 ], [ %42, %40 ]
  %47 = phi i16* [ %71, %45 ], [ %43, %40 ]
  %48 = load i16, i16* %47, align 2
  %49 = sext i16 %48 to i32
  %50 = mul nsw i32 %49, %49
  %51 = sitofp i32 %50 to float
  %52 = fadd float %46, %51
  %53 = getelementptr inbounds i16, i16* %47, i64 1
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i32
  %56 = mul nsw i32 %55, %55
  %57 = sitofp i32 %56 to float
  %58 = fadd float %52, %57
  %59 = getelementptr inbounds i16, i16* %47, i64 2
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = mul nsw i32 %61, %61
  %63 = sitofp i32 %62 to float
  %64 = fadd float %58, %63
  %65 = getelementptr inbounds i16, i16* %47, i64 3
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i32
  %68 = mul nsw i32 %67, %67
  %69 = sitofp i32 %68 to float
  %70 = fadd float %64, %69
  %71 = getelementptr inbounds i16, i16* %47, i64 4
  %72 = icmp eq i16* %71, %21
  br i1 %72, label %73, label %45

73:                                               ; preds = %45, %40
  %74 = phi float [ %41, %40 ], [ %70, %45 ]
  store float %74, float* %4, align 4
  %75 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  %76 = load float, float* %75, align 8
  %77 = fadd float %74, %76
  store float %77, float* %75, align 8
  %78 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %2
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  %82 = load float, float* %81, align 4
  %83 = fcmp olt float %82, %74
  %84 = select i1 %83, float* %4, float* %81
  %85 = bitcast float* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = bitcast float* %81 to i32*
  store i32 %86, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  br label %88

88:                                               ; preds = %3, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8RmsLevel14CheckBlockSizeEm(%"class.webrtc::RmsLevel"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %1
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %13, align 8
  store i8 1, i8* %3, align 8
  %14 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %14, align 8
  br label %15

15:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8RmsLevel7AnalyzeEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::RmsLevel"* nocapture, float*, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %78, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %2
  br i1 %12, label %18, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %16, align 8
  store i8 1, i8* %6, align 8
  %17 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %2, i64* %17, align 8
  br label %18

18:                                               ; preds = %13, %9
  %19 = getelementptr inbounds float, float* %1, i64 %2
  %20 = shl nsw i64 %2, 2
  %21 = add i64 %20, -4
  %22 = and i64 %21, 4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %18
  %25 = load float, float* %1, align 4
  %26 = fcmp olt float %25, -3.276800e+04
  %27 = select i1 %26, float -3.276800e+04, float %25
  %28 = fcmp ogt float %27, 3.276700e+04
  %29 = select i1 %28, float 3.276700e+04, float %27
  %30 = fptosi float %29 to i16
  %31 = sext i16 %30 to i32
  %32 = mul nsw i32 %31, %31
  %33 = sitofp i32 %32 to float
  %34 = getelementptr inbounds float, float* %1, i64 1
  br label %35

35:                                               ; preds = %24, %18
  %36 = phi float [ undef, %18 ], [ %33, %24 ]
  %37 = phi float [ 0.000000e+00, %18 ], [ %33, %24 ]
  %38 = phi float* [ %1, %18 ], [ %34, %24 ]
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %52, %35
  %41 = phi float [ %36, %35 ], [ %75, %52 ]
  %42 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  %43 = load float, float* %42, align 8
  %44 = fadd float %41, %43
  store float %44, float* %42, align 8
  %45 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %2
  store i64 %47, i64* %45, align 8
  %48 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  %49 = load float, float* %48, align 4
  %50 = fcmp olt float %49, %41
  %51 = select i1 %50, float %41, float %49
  store float %51, float* %48, align 8
  br label %78

52:                                               ; preds = %35, %52
  %53 = phi float [ %75, %52 ], [ %37, %35 ]
  %54 = phi float* [ %76, %52 ], [ %38, %35 ]
  %55 = load float, float* %54, align 4
  %56 = fcmp olt float %55, -3.276800e+04
  %57 = select i1 %56, float -3.276800e+04, float %55
  %58 = fcmp ogt float %57, 3.276700e+04
  %59 = select i1 %58, float 3.276700e+04, float %57
  %60 = fptosi float %59 to i16
  %61 = sext i16 %60 to i32
  %62 = mul nsw i32 %61, %61
  %63 = sitofp i32 %62 to float
  %64 = fadd float %53, %63
  %65 = getelementptr inbounds float, float* %54, i64 1
  %66 = load float, float* %65, align 4
  %67 = fcmp olt float %66, -3.276800e+04
  %68 = select i1 %67, float -3.276800e+04, float %66
  %69 = fcmp ogt float %68, 3.276700e+04
  %70 = select i1 %69, float 3.276700e+04, float %68
  %71 = fptosi float %70 to i16
  %72 = sext i16 %71 to i32
  %73 = mul nsw i32 %72, %72
  %74 = sitofp i32 %73 to float
  %75 = fadd float %64, %74
  %76 = getelementptr inbounds float, float* %54, i64 2
  %77 = icmp eq float* %76, %19
  br i1 %77, label %40, label %52

78:                                               ; preds = %3, %40
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc8RmsLevel12AnalyzeMutedEm(%"class.webrtc::RmsLevel"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %1
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %18

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %16, align 8
  store i8 1, i8* %3, align 8
  %17 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %17, align 8
  br label %18

18:                                               ; preds = %10, %13
  %19 = phi i64 [ %12, %10 ], [ 0, %13 ]
  %20 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %21 = add i64 %19, %1
  store i64 %21, i64* %20, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6webrtc8RmsLevel7AverageEv(%"class.webrtc::RmsLevel"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = uitofp i64 %3 to float
  %9 = fdiv float %7, %8
  %10 = fcmp ugt float %9, 0x3F2C14B0A0000000
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = fmul float %9, 0x3E10000000000000
  %13 = tail call float @log10f(float %12) #8
  %14 = fmul float %13, 1.000000e+01
  %15 = fsub float 5.000000e-01, %14
  %16 = fptosi float %15 to i32
  br label %17

17:                                               ; preds = %11, %5, %1
  %18 = phi i32 [ 127, %1 ], [ %16, %11 ], [ 127, %5 ]
  %19 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %19, align 8
  store i64 0, i64* %2, align 8
  %20 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc8RmsLevel14AverageAndPeakEv(%"class.webrtc::RmsLevel"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = uitofp i64 %3 to float
  %9 = fdiv float %7, %8
  %10 = fcmp ugt float %9, 0x3F2C14B0A0000000
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = fmul float %9, 0x3E10000000000000
  %13 = tail call float @log10f(float %12) #8
  %14 = fmul float %13, 1.000000e+01
  %15 = fsub float 5.000000e-01, %14
  %16 = fptosi float %15 to i32
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %5, %11
  %19 = phi i64 [ %17, %11 ], [ 127, %5 ]
  %20 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %18
  tail call void @llvm.trap() #8
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = uitofp i64 %28 to float
  %30 = fdiv float %26, %29
  %31 = fcmp ugt float %30, 0x3F2C14B0A0000000
  br i1 %31, label %32, label %40

32:                                               ; preds = %24
  %33 = fmul float %30, 0x3E10000000000000
  %34 = tail call float @log10f(float %33) #8
  %35 = fmul float %34, 1.000000e+01
  %36 = fsub float 5.000000e-01, %35
  %37 = fptosi float %36 to i32
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  br label %40

40:                                               ; preds = %32, %24, %1
  %41 = phi i64 [ 127, %1 ], [ %19, %24 ], [ %19, %32 ]
  %42 = phi i64 [ 545460846592, %1 ], [ 545460846592, %24 ], [ %39, %32 ]
  %43 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %43, align 8
  store i64 0, i64* %2, align 8
  %44 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %44, align 8
  %45 = getelementptr inbounds %"class.webrtc::RmsLevel", %"class.webrtc::RmsLevel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = or i64 %42, %41
  ret i64 %46
}

; Function Attrs: nofree nounwind
declare float @log10f(float) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!"branch_weights", i32 1, i32 2000}
