; ModuleID = '../../third_party/blink/renderer/core/html/html_embed_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_embed_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1965", i32, i32, %"class.blink::Persistent.1967" }
%"class.WTF::RefCounted.1965" = type { %"class.base::RefCounted.1966" }
%"class.base::RefCounted.1966" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1967" = type { %"class.blink::PersistentBase.1968" }
%"class.blink::PersistentBase.1968" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1971" }
%"class.blink::HeapHashMap.1971" = type { %"class.WTF::HashMap.1974" }
%"class.WTF::HashMap.1974" = type { %"class.WTF::HashTable.1975" }
%"class.WTF::HashTable.1975" = type <{ %"struct.WTF::KeyValuePair.1977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1977" = type { %"class.blink::WeakMember.1978", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.1070" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.81", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.261", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.199", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist.170"* }
%"class.blink::Worklist.170" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.177", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179", %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { i64 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { float }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.202", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.std::__1::pair.229"*, i32, i32 }
%"struct.std::__1::pair.229" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.242" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.156"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.296", i64 }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.298" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__cxx_atomic_impl.263" }
%"struct.std::__1::__cxx_atomic_impl.263" = type { %"struct.std::__1::__cxx_atomic_base_impl.264" }
%"struct.std::__1::__cxx_atomic_base_impl.264" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.62" }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i32 }
%"class.blink::HTMLEmbedElement" = type { %"class.blink::HTMLPlugInElement.base", [7 x i8] }
%"class.blink::HTMLPlugInElement.base" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.49", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.294", i8 }>
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1117", %"class.blink::Member.1119", %"class.blink::Member.0", %"class.blink::Member.1121", %"class.blink::Member.1121", %"class.blink::Member.1143", %"class.blink::Member.1145", %"class.blink::Member.1147", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1152", %"class.blink::HeapVector.1154" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::Document"* }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1125" }
%"class.blink::HeapHashMap.1125" = type { %"class.WTF::HashMap.1128" }
%"class.WTF::HashMap.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"struct.WTF::KeyValuePair.1131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1131" = type { %"class.WTF::AtomicString", %"class.blink::Member.1132" }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.53", i32, %"class.blink::HeapVector.1136" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.1136" = type { %"class.WTF::Vector.1139" }
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.blink::Member.53"*, i32, i32 }
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1149" }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::HeapHashMap.1151"* }
%"class.blink::HeapHashMap.1151" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1154" = type { %"class.WTF::Vector.1157" }
%"class.WTF::Vector.1157" = type { %"class.WTF::VectorBuffer.1158" }
%"class.WTF::VectorBuffer.1158" = type { %"class.WTF::VectorBufferBase.1159" }
%"class.WTF::VectorBufferBase.1159" = type { %"class.blink::Member.1160"*, i32, i32 }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1162", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1164, %"class.WTF::Vector.1165", %"class.WTF::Vector.1165", %"class.blink::Member", %"class.blink::Member.1170", %"class.blink::HeapHashSet.1174", %"class.blink::Member.1119", %"class.WTF::HashSet.1181", %"class.WTF::TextPosition", %"class.blink::Member.1185", %"class.blink::HeapVector.1187", %"class.blink::Member.1194" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1164 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1165" = type { %"class.WTF::VectorBuffer.1166" }
%"class.WTF::VectorBuffer.1166" = type { %"class.WTF::VectorBufferBase.1167" }
%"class.WTF::VectorBufferBase.1167" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1172" }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1174" = type { %"class.WTF::HashSet.1177" }
%"class.WTF::HashSet.1177" = type { %"class.WTF::HashTable.1178" }
%"class.WTF::HashTable.1178" = type <{ %"class.blink::WeakMember.1180"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1180" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1187" = type { %"class.WTF::Vector.1190" }
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"class.blink::Member.1170"*, i32, i32 }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.305", %"class.blink::Member.307", %"class.blink::Member.309", i8, i32, i8, i32, %"class.blink::Member.510", %"class.blink::Member.332", %"class.blink::FrameLifecycle", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.514", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.516", i8, %"class.base::UnguessableToken", %"class.absl::optional.518", %"class.absl::optional.523", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.19", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.19", %"class.blink::Member.332", %"class.blink::Member.334", %"class.blink::Member.336", i8, %"class.WTF::Vector.338" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.325" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.313" }
%"class.blink::HeapVector.313" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318", [32 x i8] }
%"class.WTF::VectorBufferBase.318" = type { %"struct.std::__1::pair.319"*, i32, i32 }
%"struct.std::__1::pair.319" = type { %"class.WTF::AtomicString", %"class.blink::Member.320" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::HeapVector.322"* }
%"class.blink::HeapVector.322" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.WTF::Vector.328"* }
%"class.WTF::Vector.328" = type opaque
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340" }
%"class.WTF::VectorBufferBase.340" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.502" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.341, %"class.std::__1::unique_ptr.452", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.343, i32 }>
%class.scoped_refptr.341 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.343, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.418", %"class.absl::optional.423", %"class.absl::optional.379", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.443", i8, [7 x i8], %class.scoped_refptr.343, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.342" }>
%"class.base::RefCountedThreadSafe.342" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.62" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.274", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.274" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.275" }
%"struct.std::__1::atomic.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__cxx_atomic_impl.278" }
%"struct.std::__1::__cxx_atomic_impl.278" = type { %"struct.std::__1::__cxx_atomic_base_impl.279" }
%"struct.std::__1::__cxx_atomic_base_impl.279" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.343, %"class.std::__1::unique_ptr.360", %"class.absl::optional.369", %"struct.std::__1::atomic.261", i8, i8, i8, i8, i32, i32, %"class.absl::optional.379", %"class.std::__1::unique_ptr.384", i8, i64, %class.scoped_refptr.414, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.416", %"class.base::WeakPtrFactory.417" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.359", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.359" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.343, i8, %"class.mojo::ScopedHandleBase.363", %class.scoped_refptr.364, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.365" }
%"class.mojo::ScopedHandleBase.363" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.364 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.365" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.374", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.374" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.387", i8, i64, %class.scoped_refptr.388, %class.scoped_refptr.410 }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.388 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.389", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.399", i8, [7 x i8] }>
%"class.base::RefCounted.389" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.390 }
%class.scoped_refptr.390 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.399" = type { %"class.std::__1::__tree.400" }
%"class.std::__1::__tree.400" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%class.scoped_refptr.410 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.414 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2675", [4 x i8], %"class.base::RepeatingCallback.455", %class.scoped_refptr.343, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2675" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.455" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.416" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.273 }
%class.scoped_refptr.273 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.417" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.423" = type { %"class.absl::optional_internal::optional_data.424" }
%"class.absl::optional_internal::optional_data.424" = type { %"class.absl::optional_internal::optional_data_base.425" }
%"class.absl::optional_internal::optional_data_base.425" = type { %"class.absl::optional_internal::optional_data_dtor_base.426" }
%"class.absl::optional_internal::optional_data_dtor_base.426" = type { i8, [7 x i8], %union.anon.427 }
%union.anon.427 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.379" = type { %"class.absl::optional_internal::optional_data.380" }
%"class.absl::optional_internal::optional_data.380" = type { %"class.absl::optional_internal::optional_data_base.381" }
%"class.absl::optional_internal::optional_data_base.381" = type { %"class.absl::optional_internal::optional_data_dtor_base.382" }
%"class.absl::optional_internal::optional_data_dtor_base.382" = type { i8, %union.anon.383 }
%union.anon.383 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.428 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.428 = type { %"class.std::__1::map.431" }
%"class.std::__1::map.431" = type { %"class.std::__1::__tree.432" }
%"class.std::__1::__tree.432" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.442"*, i64 }
%"class.std::__1::unique_ptr.442" = type opaque
%"class.std::__1::map.443" = type { %"class.std::__1::__tree.444" }
%"class.std::__1::__tree.444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.455", %"class.base::OnceCallback.456", %"class.absl::optional.457", %"class.absl::optional.462", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.469", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.477", %"class.std::__1::map.488", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.497", i8, %class.scoped_refptr.343, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.498" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.456" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.457" = type { %"class.absl::optional_internal::optional_data.458" }
%"class.absl::optional_internal::optional_data.458" = type { %"class.absl::optional_internal::optional_data_base.459" }
%"class.absl::optional_internal::optional_data_base.459" = type { %"class.absl::optional_internal::optional_data_dtor_base.460" }
%"class.absl::optional_internal::optional_data_dtor_base.460" = type { i8, %union.anon.461 }
%union.anon.461 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.462" = type { %"class.absl::optional_internal::optional_data.463" }
%"class.absl::optional_internal::optional_data.463" = type { %"class.absl::optional_internal::optional_data_base.464" }
%"class.absl::optional_internal::optional_data_base.464" = type { %"class.absl::optional_internal::optional_data_dtor_base.465" }
%"class.absl::optional_internal::optional_data_dtor_base.465" = type { i8, %union.anon.466 }
%union.anon.466 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.343, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.467" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.467" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.468 }
%class.scoped_refptr.468 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.472", %class.scoped_refptr.473 }
%"class.base::RepeatingCallback.472" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.473 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.342", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.477" = type { %"class.std::__1::__tree.478" }
%"class.std::__1::__tree.478" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.488" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::OnceCallback.497" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.498" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.343 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.344" }>
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.538", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.552", %"class.blink::FrameLoader", %"class.blink::Member.573", %"class.blink::Member.53", %"class.blink::Member.575", %"class.blink::Member.577", %"class.blink::Member.579", %"class.blink::Member.581", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.583", %class.scoped_refptr.803, %"class.blink::Member.804", %"class.blink::Member.806", %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::Member.812", %"class.blink::Member.816", %"class.blink::Member.818", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.822", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.843", %"class.std::__1::unique_ptr.844", %"class.absl::optional.523", i32, [4 x i8], %"class.std::__1::unique_ptr.850", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.858", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.863", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.868", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", %"class.mojo::StructPtr", %"class.blink::Member.887", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.889", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.534" }
%"class.WTF::HashMap.534" = type { %"class.WTF::HashTable.535" }
%"class.WTF::HashTable.535" = type <{ %"struct.WTF::KeyValuePair.537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.537" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.541", %"class.base::WeakPtrFactory.546" }
%"class.WTF::HashMap.541" = type { %"class.WTF::HashTable.542" }
%"class.WTF::HashTable.542" = type <{ %"struct.WTF::KeyValuePair.545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.545" = type opaque
%"class.base::WeakPtrFactory.546" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.550" }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2704" }
%"class.blink::WeakMember.2704" = type { %"class.blink::MemberBase.2705" }
%"class.blink::MemberBase.2705" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.2214" }
%"class.blink::HeapObserverSet.2214" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2215" }
%"class.blink::HeapHashSet.2215" = type { %"class.WTF::HashSet.2218" }
%"class.WTF::HashSet.2218" = type { %"class.WTF::HashTable.2219" }
%"class.WTF::HashTable.2219" = type <{ %"class.blink::WeakMember.2221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2221" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.455", %"class.base::RepeatingCallback.2785", i64, %"class.std::__1::map.2786", i8*, i64, %"class.base::WeakPtrFactory.2795" }
%"class.base::RepeatingCallback.2785" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2786" = type { %"class.std::__1::__tree.2787" }
%"class.std::__1::__tree.2787" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2788", %"class.std::__1::__compressed_pair.2792" }
%"class.std::__1::__compressed_pair.2788" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.2792" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::WeakPtrFactory.2795" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.552" = type { %"class.WTF::HashSet.555" }
%"class.WTF::HashSet.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"class.blink::WeakMember.558"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.558" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.514", %"class.blink::Member.559", %"class.blink::Member.561", %"class.std::__1::unique_ptr.563", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.569" }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2366", %"class.blink::Member.2371", %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2302", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2537, %"class.WTF::AtomicString", i32, %"class.absl::optional.2449", %class.scoped_refptr.2233, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2414", i8, %"class.absl::optional.2421", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.514", %"class.blink::Member.2538", %"class.blink::Member.1945", %"class.blink::Member.2611", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2613", %class.scoped_refptr.2230, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2626", %"class.std::__1::unique_ptr.2426", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2628", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.67, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2633, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2634", %"class.blink::Member.2649", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2662", %"class.WTF::Vector.1387", i8, i8, i8, %"class.blink::WebVector.2526", %"class.blink::WebVector.2526", %"class.mojo::Remote.2667" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2366" = type { %"class.WTF::VectorBuffer.2367" }
%"class.WTF::VectorBuffer.2367" = type { %"class.WTF::VectorBufferBase.2368" }
%"class.WTF::VectorBufferBase.2368" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2373" = type { %"class.std::__1::__compressed_pair.2374" }
%"class.std::__1::__compressed_pair.2374" = type { %"struct.std::__1::__compressed_pair_elem.2375" }
%"struct.std::__1::__compressed_pair_elem.2375" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2377", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2414", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2421", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2426", %"class.base::UnguessableToken", %"class.blink::WebVector.2432", %"class.base::TickClock"*, %"class.blink::WebVector.2441", %"class.absl::optional.2449", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2454", %"class.blink::WebVector", i8, %"class.blink::WebVector.2459", i8, %"class.std::__1::unique_ptr.2467", %"class.blink::WebVector.2526", %"class.blink::WebVector.2526" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector.2377" = type { %"class.std::__1::vector.2378" }
%"class.std::__1::vector.2378" = type { %"class.std::__1::__vector_base.2379" }
%"class.std::__1::__vector_base.2379" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2409" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2409" = type { %"struct.std::__1::__compressed_pair_elem.2410" }
%"struct.std::__1::__compressed_pair_elem.2410" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2380", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2380" = type { %"class.std::__1::__compressed_pair.2381" }
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.2382" }
%"struct.std::__1::__compressed_pair_elem.2382" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2420", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2420" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2376" }
%"class.blink::WebPrivatePtr.2376" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2432" = type { %"class.std::__1::vector.2433" }
%"class.std::__1::vector.2433" = type { %"class.std::__1::__vector_base.2434" }
%"class.std::__1::__vector_base.2434" = type { %"class.std::__1::unique_ptr.2435"*, %"class.std::__1::unique_ptr.2435"*, %"class.std::__1::__compressed_pair.2436" }
%"class.std::__1::unique_ptr.2435" = type opaque
%"class.std::__1::__compressed_pair.2436" = type { %"struct.std::__1::__compressed_pair_elem.2437" }
%"struct.std::__1::__compressed_pair_elem.2437" = type { %"class.std::__1::unique_ptr.2435"* }
%"class.blink::WebVector.2441" = type { %"class.std::__1::vector.2442" }
%"class.std::__1::vector.2442" = type { %"class.std::__1::__vector_base.2443" }
%"class.std::__1::__vector_base.2443" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2444" }
%"class.std::__1::__compressed_pair.2444" = type { %"struct.std::__1::__compressed_pair_elem.2445" }
%"struct.std::__1::__compressed_pair_elem.2445" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2454" = type { %"class.absl::optional_internal::optional_data.2455" }
%"class.absl::optional_internal::optional_data.2455" = type { %"class.absl::optional_internal::optional_data_base.2456" }
%"class.absl::optional_internal::optional_data_base.2456" = type { %"class.absl::optional_internal::optional_data_dtor_base.2457" }
%"class.absl::optional_internal::optional_data_dtor_base.2457" = type { i8, [7 x i8], %union.anon.2458 }
%union.anon.2458 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.827" }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2459" = type { %"class.std::__1::vector.2460" }
%"class.std::__1::vector.2460" = type { %"class.std::__1::__vector_base.2461" }
%"class.std::__1::__vector_base.2461" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2462" }
%"class.std::__1::__compressed_pair.2462" = type { %"struct.std::__1::__compressed_pair_elem.2463" }
%"struct.std::__1::__compressed_pair_elem.2463" = type { i32* }
%"class.std::__1::unique_ptr.2467" = type { %"class.std::__1::__compressed_pair.2468" }
%"class.std::__1::__compressed_pair.2468" = type { %"struct.std::__1::__compressed_pair_elem.2469" }
%"struct.std::__1::__compressed_pair_elem.2469" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2470" }
%"class.blink::WebVector.2470" = type { %"class.std::__1::vector.2471" }
%"class.std::__1::vector.2471" = type { %"class.std::__1::__vector_base.2472" }
%"class.std::__1::__vector_base.2472" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2518" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2473", %"class.blink::WebVector.2481", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2513", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2473" = type { %"class.std::__1::vector.2474" }
%"class.std::__1::vector.2474" = type { %"class.std::__1::__vector_base.2475" }
%"class.std::__1::__vector_base.2475" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2476" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2476" = type { %"struct.std::__1::__compressed_pair_elem.2477" }
%"struct.std::__1::__compressed_pair_elem.2477" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2481" = type { %"class.std::__1::vector.2482" }
%"class.std::__1::vector.2482" = type { %"class.std::__1::__vector_base.2483" }
%"class.std::__1::__vector_base.2483" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2508" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2484", %"class.blink::WebVector", %"class.blink::WebVector.2492", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2484" = type { %"class.std::__1::vector.2485" }
%"class.std::__1::vector.2485" = type { %"class.std::__1::__vector_base.2486" }
%"class.std::__1::__vector_base.2486" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2492" = type { %"class.std::__1::vector.2493" }
%"class.std::__1::vector.2493" = type { %"class.std::__1::__vector_base.2494" }
%"class.std::__1::__vector_base.2494" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2503" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2495" }
%"class.blink::WebVector.2495" = type { %"class.std::__1::vector.2496" }
%"class.std::__1::vector.2496" = type { %"class.std::__1::__vector_base.2497" }
%"class.std::__1::__vector_base.2497" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2498" }
%"class.std::__1::__compressed_pair.2498" = type { %"struct.std::__1::__compressed_pair_elem.2499" }
%"struct.std::__1::__compressed_pair_elem.2499" = type { i8* }
%"class.std::__1::__compressed_pair.2503" = type { %"struct.std::__1::__compressed_pair_elem.2504" }
%"struct.std::__1::__compressed_pair_elem.2504" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2508" = type { %"struct.std::__1::__compressed_pair_elem.2509" }
%"struct.std::__1::__compressed_pair_elem.2509" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2513" = type { %"class.absl::optional_internal::optional_data.2514" }
%"class.absl::optional_internal::optional_data.2514" = type { %"class.absl::optional_internal::optional_data_base.2515" }
%"class.absl::optional_internal::optional_data_base.2515" = type { %"class.absl::optional_internal::optional_data_dtor_base.2516" }
%"class.absl::optional_internal::optional_data_dtor_base.2516" = type { i8, [7 x i8], %union.anon.2517 }
%union.anon.2517 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2518" = type { %"struct.std::__1::__compressed_pair_elem.2519" }
%"struct.std::__1::__compressed_pair_elem.2519" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.2302" = type { %"class.std::__1::__compressed_pair.2303" }
%"class.std::__1::__compressed_pair.2303" = type { %"struct.std::__1::__compressed_pair_elem.2304" }
%"struct.std::__1::__compressed_pair_elem.2304" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.2305", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.2305" = type { %"class.std::__1::unique_ptr.2306" }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.2309" }
%"class.WTF::Vector.2309" = type { %"class.WTF::VectorBuffer.2310" }
%"class.WTF::VectorBuffer.2310" = type { %"class.WTF::VectorBufferBase.2311" }
%"class.WTF::VectorBufferBase.2311" = type { %"class.mojo::StructPtr.2312"*, i32, i32 }
%"class.mojo::StructPtr.2312" = type { %"class.std::__1::unique_ptr.2313" }
%"class.std::__1::unique_ptr.2313" = type { %"class.std::__1::__compressed_pair.2314" }
%"class.std::__1::__compressed_pair.2314" = type { %"struct.std::__1::__compressed_pair_elem.2315" }
%"struct.std::__1::__compressed_pair_elem.2315" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2316", %"class.WTF::HashMap.2323", %"class.WTF::HashMap.2328", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2333", i8, %"class.WTF::Vector.1387", i32, %"class.mojo::StructPtr.2334", %"class.WTF::Vector.1387" }
%"class.mojo::StructPtr.2316" = type { %"class.std::__1::unique_ptr.2317" }
%"class.std::__1::unique_ptr.2317" = type { %"class.std::__1::__compressed_pair.2318" }
%"class.std::__1::__compressed_pair.2318" = type { %"struct.std::__1::__compressed_pair_elem.2319" }
%"struct.std::__1::__compressed_pair_elem.2319" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2323" = type { %"class.WTF::HashTable.2324" }
%"class.WTF::HashTable.2324" = type <{ %"struct.WTF::KeyValuePair.2327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2327" = type opaque
%"class.WTF::HashMap.2328" = type { %"class.WTF::HashTable.2329" }
%"class.WTF::HashTable.2329" = type <{ %"struct.WTF::KeyValuePair.2332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2332" = type opaque
%"class.mojo::InlinedStructPtr.2333" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2334" = type { %"class.std::__1::unique_ptr.2335" }
%"class.std::__1::unique_ptr.2335" = type { %"class.std::__1::__compressed_pair.2336" }
%"class.std::__1::__compressed_pair.2336" = type { %"struct.std::__1::__compressed_pair_elem.2337" }
%"struct.std::__1::__compressed_pair_elem.2337" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1387", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2349" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.452", i32 }>
%"class.std::__1::unique_ptr.2349" = type { %"class.std::__1::__compressed_pair.2350" }
%"class.std::__1::__compressed_pair.2350" = type { %"struct.std::__1::__compressed_pair_elem.2351" }
%"struct.std::__1::__compressed_pair_elem.2351" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2537 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2449" = type { %"class.absl::optional_internal::optional_data.2450" }
%"class.absl::optional_internal::optional_data.2450" = type { %"class.absl::optional_internal::optional_data_base.2451" }
%"class.absl::optional_internal::optional_data_base.2451" = type { %"class.absl::optional_internal::optional_data_dtor_base.2452" }
%"class.absl::optional_internal::optional_data_dtor_base.2452" = type { i8, %union.anon.2453 }
%union.anon.2453 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.2233 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.2231", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2233 }
%"class.WTF::RefCounted.2231" = type { %"class.base::RefCounted.2232" }
%"class.base::RefCounted.2232" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2414" = type { %"class.std::__1::__compressed_pair.2415" }
%"class.std::__1::__compressed_pair.2415" = type { %"struct.std::__1::__compressed_pair_elem.2416" }
%"struct.std::__1::__compressed_pair_elem.2416" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2421" = type { %"class.absl::optional_internal::optional_data.2422" }
%"class.absl::optional_internal::optional_data.2422" = type { %"class.absl::optional_internal::optional_data_base.2423" }
%"class.absl::optional_internal::optional_data_base.2423" = type { %"class.absl::optional_internal::optional_data_dtor_base.2424" }
%"class.absl::optional_internal::optional_data_dtor_base.2424" = type { i8, %union.anon.2425 }
%union.anon.2425 = type { i32 }
%"class.blink::Member.2538" = type { %"class.blink::MemberBase.2539" }
%"class.blink::MemberBase.2539" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1387", %"class.blink::Member.2542", %"class.absl::optional.2544", i64, i64, i32, %class.scoped_refptr.2549, %class.scoped_refptr.2537, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2549 }
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2544" = type { %"class.absl::optional_internal::optional_data.2545" }
%"class.absl::optional_internal::optional_data.2545" = type { %"class.absl::optional_internal::optional_data_base.2546" }
%"class.absl::optional_internal::optional_data_base.2546" = type { %"class.absl::optional_internal::optional_data_dtor_base.2547" }
%"class.absl::optional_internal::optional_data_dtor_base.2547" = type { i8, %union.anon.2548 }
%union.anon.2548 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2549 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2550", [4 x i8], %"class.std::__1::unique_ptr.2552", i64, %"class.WTF::Vector.2555", %"class.WTF::Vector.2560", %"class.WTF::Vector.2566", %"class.WTF::Vector.2584", %class.scoped_refptr.2230, %"class.WTF::HashMap.2590", %"class.WTF::Vector.2595", %"class.WTF::Vector.2555", %"class.WTF::Vector.2601", %"class.WTF::HashMap.2606", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2550" = type { %"class.base::RefCountedThreadSafe.2551" }
%"class.base::RefCountedThreadSafe.2551" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2552" = type { %"class.std::__1::__compressed_pair.2553" }
%"class.std::__1::__compressed_pair.2553" = type { %"struct.std::__1::__compressed_pair_elem.2499" }
%"class.WTF::Vector.2560" = type { %"class.WTF::VectorBuffer.2561" }
%"class.WTF::VectorBuffer.2561" = type { %"class.WTF::VectorBufferBase.2562", [8 x i8] }
%"class.WTF::VectorBufferBase.2562" = type { %class.scoped_refptr.2563*, i32, i32 }
%class.scoped_refptr.2563 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2566" = type { %"class.WTF::VectorBuffer.2567" }
%"class.WTF::VectorBuffer.2567" = type { %"class.WTF::VectorBufferBase.2568" }
%"class.WTF::VectorBufferBase.2568" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2570", %"class.std::__1::unique_ptr.2576" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2569 }
%class.scoped_refptr.2569 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2570" = type { %"class.std::__1::__compressed_pair.2571" }
%"class.std::__1::__compressed_pair.2571" = type { %"struct.std::__1::__compressed_pair_elem.2572" }
%"struct.std::__1::__compressed_pair_elem.2572" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2576" = type { %"class.std::__1::__compressed_pair.2577" }
%"class.std::__1::__compressed_pair.2577" = type { %"struct.std::__1::__compressed_pair_elem.2578" }
%"struct.std::__1::__compressed_pair_elem.2578" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2584" = type { %"class.WTF::VectorBuffer.2585" }
%"class.WTF::VectorBuffer.2585" = type { %"class.WTF::VectorBufferBase.2586" }
%"class.WTF::VectorBufferBase.2586" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2587", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2587" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2590" = type { %"class.WTF::HashTable.2591" }
%"class.WTF::HashTable.2591" = type <{ %"struct.WTF::KeyValuePair.2594"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2594" = type opaque
%"class.WTF::Vector.2595" = type { %"class.WTF::VectorBuffer.2596" }
%"class.WTF::VectorBuffer.2596" = type { %"class.WTF::VectorBufferBase.2597" }
%"class.WTF::VectorBufferBase.2597" = type { %"class.mojo::ScopedHandleBase.2598"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2598" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2555" = type { %"class.WTF::VectorBuffer.2556" }
%"class.WTF::VectorBuffer.2556" = type { %"class.WTF::VectorBufferBase.2557", [16 x i8] }
%"class.WTF::VectorBufferBase.2557" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2601" = type { %"class.WTF::VectorBuffer.2602" }
%"class.WTF::VectorBuffer.2602" = type { %"class.WTF::VectorBufferBase.2603" }
%"class.WTF::VectorBufferBase.2603" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2606" = type { %"class.WTF::HashTable.2607" }
%"class.WTF::HashTable.2607" = type <{ %"struct.WTF::KeyValuePair.2610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2610" = type { i8**, %"class.std::__1::unique_ptr.2777" }
%"class.std::__1::unique_ptr.2777" = type { %"class.std::__1::__compressed_pair.2778" }
%"class.std::__1::__compressed_pair.2778" = type { %"struct.std::__1::__compressed_pair_elem.2779" }
%"struct.std::__1::__compressed_pair_elem.2779" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2611" = type { %"class.blink::MemberBase.2612" }
%"class.blink::MemberBase.2612" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2389", %class.scoped_refptr.2399, %class.scoped_refptr.2400, %"struct.blink::CacheControlHeader", %"class.absl::optional.457", %"class.absl::optional.1901", %"class.absl::optional.1901", %"class.absl::optional.1901", i64, %"class.blink::KURL", %"class.WTF::Vector.2366", %"class.WTF::String", %"class.WTF::Vector.1387", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.523", %"class.WTF::Vector.1387", %"class.blink::KURL", %"class.absl::optional.2401" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2383" }
%"class.WTF::HashMap.2383" = type { %"class.WTF::HashTable.2384" }
%"class.WTF::HashTable.2384" = type <{ %"struct.WTF::KeyValuePair.2387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2387" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2388", i8 }
%"struct.std::__1::array.2388" = type { [16 x i8] }
%"class.absl::optional.2389" = type { %"class.absl::optional_internal::optional_data.2390" }
%"class.absl::optional_internal::optional_data.2390" = type { %"class.absl::optional_internal::optional_data_base.2391" }
%"class.absl::optional_internal::optional_data_base.2391" = type { %"class.absl::optional_internal::optional_data_dtor_base.2392" }
%"class.absl::optional_internal::optional_data_dtor_base.2392" = type { i8, %union.anon.2393 }
%union.anon.2393 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1387", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1088", %"class.WTF::Vector.2394" }
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2394" = type { %"class.WTF::VectorBuffer.2395" }
%"class.WTF::VectorBuffer.2395" = type { %"class.WTF::VectorBufferBase.2396" }
%"class.WTF::VectorBufferBase.2396" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2399 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2400 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.457", %"class.absl::optional.457" }
%"class.absl::optional.1901" = type { %"class.absl::optional_internal::optional_data.1902" }
%"class.absl::optional_internal::optional_data.1902" = type { %"class.absl::optional_internal::optional_data_base.1903" }
%"class.absl::optional_internal::optional_data_base.1903" = type { %"class.absl::optional_internal::optional_data_dtor_base.1904" }
%"class.absl::optional_internal::optional_data_dtor_base.1904" = type { i8, %union.anon.1905 }
%union.anon.1905 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1894" }
%"class.base::time_internal::TimeBase.1894" = type { i64 }
%"class.absl::optional.2401" = type { %"class.absl::optional_internal::optional_data.2402" }
%"class.absl::optional_internal::optional_data.2402" = type { %"class.absl::optional_internal::optional_data_base.2403" }
%"class.absl::optional_internal::optional_data_base.2403" = type { %"class.absl::optional_internal::optional_data_dtor_base.2404" }
%"class.absl::optional_internal::optional_data_dtor_base.2404" = type { i8, %union.anon.2405 }
%union.anon.2405 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::Remote.2613" = type { %"class.mojo::internal::InterfacePtrState.2614" }
%"class.mojo::internal::InterfacePtrState.2614" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2615" }
%"class.std::__1::unique_ptr.2615" = type { %"class.std::__1::__compressed_pair.2616" }
%"class.std::__1::__compressed_pair.2616" = type { %"struct.std::__1::__compressed_pair_elem.2617" }
%"struct.std::__1::__compressed_pair_elem.2617" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.2230 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.457", %"class.absl::optional.457", %"class.absl::optional.457", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2621", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.561" }
%"class.WTF::Vector.2621" = type { %"class.WTF::VectorBuffer.2622" }
%"class.WTF::VectorBuffer.2622" = type { %"class.WTF::VectorBufferBase.2623" }
%"class.WTF::VectorBufferBase.2623" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2626" = type { %"class.blink::MemberBase.2627" }
%"class.blink::MemberBase.2627" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2426" = type { %"class.std::__1::__compressed_pair.2427" }
%"class.std::__1::__compressed_pair.2427" = type { %"struct.std::__1::__compressed_pair_elem.2428" }
%"struct.std::__1::__compressed_pair_elem.2428" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.2264" }
%"class.base::flat_map.2264" = type { %"class.base::internal::flat_tree.2265" }
%"class.base::internal::flat_tree.2265" = type { %"class.std::__1::vector.2266" }
%"class.std::__1::vector.2266" = type { %"class.std::__1::__vector_base.2267" }
%"class.std::__1::__vector_base.2267" = type { %"struct.std::__1::pair.2268"*, %"struct.std::__1::pair.2268"*, %"class.std::__1::__compressed_pair.2269" }
%"struct.std::__1::pair.2268" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.2270" }
%"struct.std::__1::__compressed_pair_elem.2270" = type { %"struct.std::__1::pair.2268"* }
%"class.WTF::Vector.2628" = type { %"class.WTF::VectorBuffer.2629" }
%"class.WTF::VectorBuffer.2629" = type { %"class.WTF::VectorBufferBase.2630" }
%"class.WTF::VectorBufferBase.2630" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.67 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.68", i64, %"class.WTF::Vector.70", %"class.WTF::Vector.75" }
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { i8*, i32, i32 }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.std::__1::unique_ptr.78"*, i32, i32 }
%"class.std::__1::unique_ptr.78" = type opaque
%class.scoped_refptr.2633 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2634" = type { %"class.blink::MemberBase.2635" }
%"class.blink::MemberBase.2635" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2638", %"class.std::__1::unique_ptr.2643", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2638" = type { %"class.WTF::HashTable.2639" }
%"class.WTF::HashTable.2639" = type <{ %"struct.WTF::KeyValuePair.2642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2642" = type { %"class.WTF::Vector.2844", %class.scoped_refptr.2849 }
%"class.WTF::Vector.2844" = type { %"class.WTF::VectorBuffer.2845" }
%"class.WTF::VectorBuffer.2845" = type { %"class.WTF::VectorBufferBase.2846", [32 x i8] }
%"class.WTF::VectorBufferBase.2846" = type { i8*, i32, i32 }
%class.scoped_refptr.2849 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2850", %"class.WTF::Vector.2852", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2850" = type { %"class.base::RefCounted.2851" }
%"class.base::RefCounted.2851" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2852" = type { %"class.WTF::VectorBuffer.2853" }
%"class.WTF::VectorBuffer.2853" = type { %"class.WTF::VectorBufferBase.2846" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2856", i64, %"class.absl::optional.2861" }
%"class.std::__1::unique_ptr.2856" = type { %"class.std::__1::__compressed_pair.2857" }
%"class.std::__1::__compressed_pair.2857" = type { %"struct.std::__1::__compressed_pair_elem.2499" }
%"class.absl::optional.2861" = type { %"class.absl::optional_internal::optional_data.2862" }
%"class.absl::optional_internal::optional_data.2862" = type { %"class.absl::optional_internal::optional_data_base.2863" }
%"class.absl::optional_internal::optional_data_base.2863" = type { %"class.absl::optional_internal::optional_data_dtor_base.2864" }
%"class.absl::optional_internal::optional_data_dtor_base.2864" = type { i8, %union.anon.2865 }
%union.anon.2865 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2866", %"class.std::__1::unique_ptr.2867" }
%"class.mojo::ScopedHandleBase.2866" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2867" = type { %"class.std::__1::__compressed_pair.2868" }
%"class.std::__1::__compressed_pair.2868" = type { %"struct.std::__1::__compressed_pair_elem.2869" }
%"struct.std::__1::__compressed_pair_elem.2869" = type { i8* }
%"class.std::__1::unique_ptr.2643" = type { %"class.std::__1::__compressed_pair.2644" }
%"class.std::__1::__compressed_pair.2644" = type { %"struct.std::__1::__compressed_pair_elem.2645" }
%"struct.std::__1::__compressed_pair_elem.2645" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2655" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2651", %"class.std::__1::bitset.2651", %"class.std::__1::bitset.2653" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2651" = type { %"class.std::__1::__bitset.2652" }
%"class.std::__1::__bitset.2652" = type { [11 x i64] }
%"class.std::__1::bitset.2653" = type { %"class.std::__1::__bitset.2654" }
%"class.std::__1::__bitset.2654" = type { [2 x i64] }
%"class.blink::HeapHashSet.2655" = type { %"class.WTF::HashSet.2658" }
%"class.WTF::HashSet.2658" = type { %"class.WTF::HashTable.2659" }
%"class.WTF::HashTable.2659" = type <{ %"class.blink::Member.2661"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2661" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2662" = type { %"class.WTF::VectorBuffer.2663" }
%"class.WTF::VectorBuffer.2663" = type { %"class.WTF::VectorBufferBase.2664" }
%"class.WTF::VectorBufferBase.2664" = type { i32*, i32, i32 }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.2526" = type { %"class.std::__1::vector.2527" }
%"class.std::__1::vector.2527" = type { %"class.std::__1::__vector_base.2528" }
%"class.std::__1::__vector_base.2528" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2529" }
%"class.std::__1::__compressed_pair.2529" = type { %"struct.std::__1::__compressed_pair_elem.2530" }
%"struct.std::__1::__compressed_pair_elem.2530" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2667" = type { %"class.mojo::internal::InterfacePtrState.2668" }
%"class.mojo::internal::InterfacePtrState.2668" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2669" }
%"class.std::__1::unique_ptr.2669" = type { %"class.std::__1::__compressed_pair.2670" }
%"class.std::__1::__compressed_pair.2670" = type { %"struct.std::__1::__compressed_pair_elem.2671" }
%"struct.std::__1::__compressed_pair_elem.2671" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.968", %"class.blink::Member.514", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1704", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1709", %"class.blink::Member.1711", %"class.blink::Member.1711", %"class.std::__1::unique_ptr.1714", i32, [4 x i8], %"class.WTF::HashSet.1717", %"class.blink::Member.1724", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1726", %"class.blink::HeapHashSet.1732", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1740", i8, %"class.blink::Member.1746", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1758", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1772", i8, %"class.std::__1::unique_ptr.1778", %"class.std::__1::unique_ptr.1859", %"class.WTF::Vector.1865", i32, %class.scoped_refptr.1870, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1871", %"class.blink::Member.1873", %"class.blink::Member.1875", %"class.blink::HeapHashSet.1877", %"class.blink::HeapHashSet.1884", %"class.std::__1::unique_ptr.1891", %"class.std::__1::unique_ptr.1898", %"class.WTF::Vector.1909" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %class.scoped_refptr.972*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.972 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type { %"class.blink::LayoutEmbeddedContent.base", i32, %"class.WTF::String" }
%"class.blink::LayoutEmbeddedContent.base" = type <{ %"class.blink::LayoutReplaced", i32 }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1657, %"class.WTF::Vector.1658", %"class.std::__1::unique_ptr.1663", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1684, %"class.blink::Persistent.1685" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.973, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.973 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1488", %"class.std::__1::unique_ptr.1490" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1038", %"class.blink::DataRef.1199", %"class.blink::DataRef.1203", %"class.blink::DataRef.1404", %"class.blink::DataRef.1471", %"class.blink::DataRef.1475", %"class.blink::DataRef.1479", %"class.blink::DataRef.1483", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.975", %"class.blink::DataRef.977", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.975" = type { %"class.base::RefCounted.976" }
%"class.base::RefCounted.976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.977" = type { %class.scoped_refptr.978 }
%class.scoped_refptr.978 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.979", %"class.blink::Font" }
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1007 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.982, %class.scoped_refptr.990, %class.scoped_refptr.1000, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1006 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.981 }
%class.scoped_refptr.981 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2362", [4 x i8] }>
%"class.WTF::RefCounted.2362" = type { %"class.base::RefCounted.2363" }
%"class.base::RefCounted.2363" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.982 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.988", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.983" }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.990 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.991", %"class.WTF::RefCounted.998", [4 x i8] }>
%"class.blink::FontSettings.991" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::FontTagValuePair.995"*, i32, i32 }
%"class.blink::FontTagValuePair.995" = type { i32, float }
%"class.WTF::RefCounted.998" = type { %"class.base::RefCounted.999" }
%"class.base::RefCounted.999" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1000 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1001", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1003, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1001" = type { %"class.base::RefCounted.1002" }
%"class.base::RefCounted.1002" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1003 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1004", [4 x i8] }>
%"class.WTF::RefCounted.1004" = type { %"class.base::RefCounted.1005" }
%"class.base::RefCounted.1005" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1006 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1007 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1008", %"class.WTF::Vector.1010", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1034", i32, i16, i8, %"class.base::WeakPtr.1036" }
%"class.WTF::RefCounted.1008" = type { %"class.base::RefCounted.1009" }
%"class.base::RefCounted.1009" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1010" = type { %"class.WTF::VectorBuffer.1011" }
%"class.WTF::VectorBuffer.1011" = type { %"class.WTF::VectorBufferBase.1012", [8 x i8] }
%"class.WTF::VectorBufferBase.1012" = type { %class.scoped_refptr.1013*, i32, i32 }
%class.scoped_refptr.1013 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1014", [4 x i8] }>
%"class.WTF::RefCounted.1014" = type { %"class.base::RefCounted.1015" }
%"class.base::RefCounted.1015" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1024", %class.scoped_refptr.1031, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1014" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1018", %"class.absl::optional.1018", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1018" = type { %"class.absl::optional_internal::optional_data.1019" }
%"class.absl::optional_internal::optional_data.1019" = type { %"class.absl::optional_internal::optional_data_base.1020" }
%"class.absl::optional_internal::optional_data_base.1020" = type { %"class.absl::optional_internal::optional_data_dtor_base.1021" }
%"class.absl::optional_internal::optional_data_dtor_base.1021" = type { i8, %union.anon.1022 }
%union.anon.1022 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1023, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.62" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.62" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.275" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1023 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1027, %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1031 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1032", [4 x i8] }>
%"class.WTF::RefCounted.1032" = type { %"class.base::RefCounted.1033" }
%"class.base::RefCounted.1033" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.1034" = type { %"class.blink::PersistentBase.1035" }
%"class.blink::PersistentBase.1035" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1036" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1037, i8, i8, i8, i8 }>
%union.anon.1037 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1038" = type { %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1040", [4 x i8], %"class.blink::DataRef.1042", %"class.blink::DataRef.1084", %"class.WTF::Vector.1088", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1092, %class.scoped_refptr.1101, %"class.blink::Persistent.1109", %"class.blink::Persistent.1111", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1040" = type { %"class.base::RefCounted.1041" }
%"class.base::RefCounted.1041" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1042" = type { %class.scoped_refptr.1043 }
%class.scoped_refptr.1043 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1044", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1046, %class.scoped_refptr.1054, %"class.blink::Persistent.1071", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1046 = type { %"class.base::RefCountedData.1047"* }
%"class.base::RefCountedData.1047" = type { %"class.base::RefCountedThreadSafe.1048", %"class.WTF::Vector.1049" }
%"class.base::RefCountedThreadSafe.1048" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1049" = type { %"class.WTF::VectorBuffer.1050" }
%"class.WTF::VectorBuffer.1050" = type { %"class.WTF::VectorBufferBase.1051" }
%"class.WTF::VectorBufferBase.1051" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1054 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1055", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1055" = type { %"class.base::RefCounted.1056" }
%"class.base::RefCounted.1056" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1057", %"class.blink::Persistent" }
%"class.WTF::HashMap.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"struct.WTF::KeyValuePair.1061"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1061" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2763 }
%class.scoped_refptr.2763 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2764", %"class.WTF::Vector.1387", %"class.WTF::Vector.2766", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2764" = type { %"class.base::RefCounted.2765" }
%"class.base::RefCounted.2765" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2766" = type { %"class.WTF::VectorBuffer.2767" }
%"class.WTF::VectorBuffer.2767" = type { %"class.WTF::VectorBufferBase.2768" }
%"class.WTF::VectorBufferBase.2768" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2769 }
%union.anon.2769 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1062" }
%"class.blink::PersistentBase.1062" = type { %"class.blink::HeapHashMap.1063"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::HeapHashMap.1063" = type { %"class.WTF::HashMap.1066" }
%"class.WTF::HashMap.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ %"struct.WTF::KeyValuePair.1069"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1069" = type opaque
%"class.blink::Persistent.1071" = type { %"class.blink::PersistentBase.1072" }
%"class.blink::PersistentBase.1072" = type { %"class.blink::HeapVector.1073"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::HeapVector.1073" = type { %"class.WTF::Vector.1076" }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1079", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1086", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1092 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1093", %"class.WTF::Vector.1095" }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1095" = type { %"class.WTF::VectorBuffer.1096" }
%"class.WTF::VectorBuffer.1096" = type { %"class.WTF::VectorBufferBase.1097" }
%"class.WTF::VectorBufferBase.1097" = type { %"struct.std::__1::pair.1098"*, i32, i32 }
%"struct.std::__1::pair.1098" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1101 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1102", [4 x i8], %"class.WTF::Vector.1104" }
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1106", [28 x i8] }>
%"class.WTF::VectorBufferBase.1106" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1109" = type { %"class.blink::PersistentBase.1110" }
%"class.blink::PersistentBase.1110" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::Persistent.1111" = type { %"class.blink::PersistentBase.1112" }
%"class.blink::PersistentBase.1112" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1115", %"class.blink::Member.1197" }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1199" = type { %class.scoped_refptr.1200 }
%class.scoped_refptr.1200 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1201", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1201" = type { %"class.base::RefCounted.1202" }
%"class.base::RefCounted.1202" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1203" = type { %class.scoped_refptr.1204 }
%class.scoped_refptr.1204 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1205", [4 x i8], %"class.blink::DataRef.1207", %"class.blink::DataRef.1273", %"class.blink::TransformOperations", %class.scoped_refptr.1101, %"class.blink::Persistent.1398", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1205" = type { %"class.base::RefCounted.1206" }
%"class.base::RefCounted.1206" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1207" = type { %class.scoped_refptr.1208 }
%class.scoped_refptr.1208 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1209", [4 x i8], %"class.blink::DataRef.1211", %"class.blink::Persistent.1249", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1209" = type { %"class.base::RefCounted.1210" }
%"class.base::RefCounted.1210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1211" = type { %class.scoped_refptr.1212 }
%class.scoped_refptr.1212 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1213", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1231, %class.scoped_refptr.1234, %class.scoped_refptr.1237, %class.scoped_refptr.1240, %class.scoped_refptr.1241, %class.scoped_refptr.1242, %"class.blink::Persistent.1249", %"class.blink::Persistent.1264", %"class.absl::optional.1268", %"class.absl::optional.1268", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1215", %"class.std::__1::unique_ptr.1220" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1223", %"class.WTF::Vector.1215", i32, i32 }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1231 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1232", [4 x i8] }>
%"class.WTF::RefCounted.1232" = type { %"class.base::RefCounted.1233" }
%"class.base::RefCounted.1233" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1234 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1235", [4 x i8] }>
%"class.WTF::RefCounted.1235" = type { %"class.base::RefCounted.1236" }
%"class.base::RefCounted.1236" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1237 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1238" }>
%"class.WTF::RefCounted.1238" = type { %"class.base::RefCounted.1239" }
%"class.base::RefCounted.1239" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1240 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1241 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1242 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1243", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1243" = type { %"class.base::RefCounted.1244" }
%"class.base::RefCounted.1244" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1245" }
%"class.blink::DataRef.1245" = type { %class.scoped_refptr.1246 }
%class.scoped_refptr.1246 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1109", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1247" }
%"class.WTF::RefCounted.1247" = type { %"class.base::RefCounted.1248" }
%"class.base::RefCounted.1248" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1264" = type { %"class.blink::PersistentBase.1265" }
%"class.blink::PersistentBase.1265" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1234, %"class.blink::Member.1079", i32, [4 x i8] }>
%"class.absl::optional.1268" = type { %"class.absl::optional_internal::optional_data.1269" }
%"class.absl::optional_internal::optional_data.1269" = type { %"class.absl::optional_internal::optional_data_base.1270" }
%"class.absl::optional_internal::optional_data_base.1270" = type { %"class.absl::optional_internal::optional_data_dtor_base.1271" }
%"class.absl::optional_internal::optional_data_dtor_base.1271" = type { i8, [3 x i8], %union.anon.1272 }
%union.anon.1272 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1249" = type { %"class.blink::PersistentBase.1250" }
%"class.blink::PersistentBase.1250" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1253" }
%"class.blink::HeapVector.1253" = type { %"class.WTF::Vector.1256" }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase.1258" }
%"class.WTF::VectorBufferBase.1258" = type { %"class.blink::Member.1259"*, i32, i32 }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1273" = type { %class.scoped_refptr.1274 }
%class.scoped_refptr.1274 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1275", %"class.blink::DataRef.1277", %"class.blink::DataRef.1281", %"class.blink::DataRef.1290", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1309", %"class.std::__1::unique_ptr.1320", %"class.std::__1::unique_ptr.1359", %"class.std::__1::unique_ptr.1370", %"class.std::__1::unique_ptr.1381", %"class.WTF::Vector.1387", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1275" = type { %"class.base::RefCounted.1276" }
%"class.base::RefCounted.1276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1277" = type { %class.scoped_refptr.1278 }
%class.scoped_refptr.1278 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1279", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1279" = type { %"class.base::RefCounted.1280" }
%"class.base::RefCounted.1280" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1281" = type { %class.scoped_refptr.1282 }
%class.scoped_refptr.1282 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1283", [4 x i8], %"class.WTF::Vector.1285", i8, [7 x i8] }>
%"class.WTF::RefCounted.1283" = type { %"class.base::RefCounted.1284" }
%"class.base::RefCounted.1284" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1285" = type { %"class.WTF::VectorBuffer.1286" }
%"class.WTF::VectorBuffer.1286" = type { %"class.WTF::VectorBufferBase.1287" }
%"class.WTF::VectorBufferBase.1287" = type { i32*, i32, i32 }
%"class.blink::DataRef.1290" = type { %class.scoped_refptr.1291 }
%class.scoped_refptr.1291 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1292", [4 x i8], %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1294", %"class.WTF::HashMap.1299", %"class.WTF::HashMap.1299", %"class.WTF::HashMap.1299", %"class.WTF::HashMap.1299", %"class.WTF::HashMap.1304", %"class.WTF::Vector.1215", %"class.WTF::Vector.1215", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1292" = type { %"class.base::RefCounted.1293" }
%"class.base::RefCounted.1293" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1294" = type { %"class.WTF::HashTable.1295" }
%"class.WTF::HashTable.1295" = type <{ %"struct.WTF::KeyValuePair.1298"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1298" = type { %"class.WTF::String", %"class.WTF::Vector.2753" }
%"class.WTF::Vector.2753" = type { %"class.WTF::VectorBuffer.2754" }
%"class.WTF::VectorBuffer.2754" = type { %"class.WTF::VectorBufferBase.2755" }
%"class.WTF::VectorBufferBase.2755" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1299" = type { %"class.WTF::HashTable.1300" }
%"class.WTF::HashTable.1300" = type <{ %"struct.WTF::KeyValuePair.1303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1303" = type { i64, %"class.WTF::Vector.1387" }
%"class.WTF::HashMap.1304" = type { %"class.WTF::HashTable.1305" }
%"class.WTF::HashTable.1305" = type <{ %"struct.WTF::KeyValuePair.1308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1308" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1312" }
%"class.WTF::HashMap.1312" = type { %"class.WTF::HashTable.1313" }
%"class.WTF::HashTable.1313" = type <{ %"struct.WTF::KeyValuePair.1316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1316" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2758", %"class.absl::optional.2758", %"class.absl::optional.2758" }
%"class.absl::optional.2758" = type { %"class.absl::optional_internal::optional_data.2759" }
%"class.absl::optional_internal::optional_data.2759" = type { %"class.absl::optional_internal::optional_data_base.2760" }
%"class.absl::optional_internal::optional_data_base.2760" = type { %"class.absl::optional_internal::optional_data_dtor_base.2761" }
%"class.absl::optional_internal::optional_data_dtor_base.2761" = type { i8, %union.anon.2762 }
%union.anon.2762 = type { i32 }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1088", %"class.WTF::Vector.1336", %"class.WTF::Vector.1323", %"class.WTF::Vector.1341", %"class.WTF::Vector.1346", %"class.WTF::Vector.1351" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1323", %"class.WTF::Vector.1323", %"class.WTF::Vector.1328" }
%"class.WTF::Vector.1328" = type { %"class.WTF::VectorBuffer.1329" }
%"class.WTF::VectorBuffer.1329" = type { %"class.WTF::VectorBufferBase.1330" }
%"class.WTF::VectorBufferBase.1330" = type { %class.scoped_refptr.1331*, i32, i32 }
%class.scoped_refptr.1331 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1332", i32 }
%"class.WTF::ThreadSafeRefCounted.1332" = type { %"class.base::RefCountedThreadSafe.1333" }
%"class.base::RefCountedThreadSafe.1333" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338" }
%"class.WTF::VectorBufferBase.1338" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1323" = type { %"class.WTF::VectorBuffer.1324" }
%"class.WTF::VectorBuffer.1324" = type { %"class.WTF::VectorBufferBase.1325" }
%"class.WTF::VectorBufferBase.1325" = type { double*, i32, i32 }
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { i32*, i32, i32 }
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { i32*, i32, i32 }
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353" }
%"class.WTF::VectorBufferBase.1353" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1362" }
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase.1364" }
%"class.WTF::VectorBufferBase.1364" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1373" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"class.blink::Persistent.1109"*, i32, i32 }
%"class.std::__1::unique_ptr.1381" = type { %"class.std::__1::__compressed_pair.1382" }
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1109", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1392" }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { %class.scoped_refptr.1395*, i32, i32 }
%class.scoped_refptr.1395 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1238", [4 x i8] }>
%"class.blink::Persistent.1398" = type { %"class.blink::PersistentBase.1399" }
%"class.blink::PersistentBase.1399" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1402" }
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1404" = type { %class.scoped_refptr.1405 }
%class.scoped_refptr.1405 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1406", [4 x i8], %"class.blink::DataRef.1408", %"class.blink::DataRef.1412", %"class.blink::DataRef.1433", %"class.blink::DataRef.1451", %"class.blink::DataRef.1463", %"class.blink::DataRef.1467", %class.scoped_refptr.1437, i32, [4 x i8] }>
%"class.WTF::RefCounted.1406" = type { %"class.base::RefCounted.1407" }
%"class.base::RefCounted.1407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1408" = type { %class.scoped_refptr.1409 }
%class.scoped_refptr.1409 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1410", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1410" = type { %"class.base::RefCounted.1411" }
%"class.base::RefCounted.1411" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1412" = type { %class.scoped_refptr.1413 }
%class.scoped_refptr.1413 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1414", %class.scoped_refptr.1416, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1414" = type { %"class.base::RefCounted.1415" }
%"class.base::RefCounted.1415" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1416 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1417", %"class.std::__1::unique_ptr.1423", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1235" }>
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1426, i32, %"struct.std::__1::atomic.275", %"struct.std::__1::atomic.275", i8, i8 }>
%class.sk_sp.1426 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1427, %class.SkTDArray.1428, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.62" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1427 = type { i8*, i32, i32 }
%class.SkTDArray.1428 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1429 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.62", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1429 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.261", [3 x i8] }
%"class.blink::DataRef.1433" = type { %class.scoped_refptr.1434 }
%class.scoped_refptr.1434 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1435", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1435" = type { %"class.base::RefCounted.1436" }
%"class.base::RefCounted.1436" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1437, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1451" = type { %class.scoped_refptr.1452 }
%class.scoped_refptr.1452 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1453", [4 x i8], %class.scoped_refptr.1455, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1453" = type { %"class.base::RefCounted.1454" }
%"class.base::RefCounted.1454" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1455 = type { %"class.base::RefCountedData.1456"* }
%"class.base::RefCountedData.1456" = type { %"class.base::RefCountedThreadSafe.1457", %"class.WTF::Vector.1458" }
%"class.base::RefCountedThreadSafe.1457" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1458" = type { %"class.WTF::VectorBuffer.1459" }
%"class.WTF::VectorBuffer.1459" = type { %"class.WTF::VectorBufferBase.1460" }
%"class.WTF::VectorBufferBase.1460" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1463" = type { %class.scoped_refptr.1464 }
%class.scoped_refptr.1464 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1465", %class.scoped_refptr.1437, %class.scoped_refptr.1437, %class.scoped_refptr.1437 }
%"class.WTF::RefCounted.1465" = type { %"class.base::RefCounted.1466" }
%"class.base::RefCounted.1466" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1467" = type { %class.scoped_refptr.1468 }
%class.scoped_refptr.1468 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1469", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1469" = type { %"class.base::RefCounted.1470" }
%"class.base::RefCounted.1470" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1437 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1438", %"class.blink::Persistent.1440", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1438" = type { %"class.base::RefCounted.1439" }
%"class.base::RefCounted.1439" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1440" = type { %"class.blink::PersistentBase.1441" }
%"class.blink::PersistentBase.1441" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.1070" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.53", %"class.blink::HeapHashMap.1444" }
%"class.blink::HeapHashMap.1444" = type { %"class.WTF::HashMap.1447" }
%"class.WTF::HashMap.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"struct.WTF::KeyValuePair.1450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1450" = type opaque
%"class.blink::DataRef.1471" = type { %class.scoped_refptr.1472 }
%class.scoped_refptr.1472 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1473", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1473" = type { %"class.base::RefCounted.1474" }
%"class.base::RefCounted.1474" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1475" = type { %class.scoped_refptr.1476 }
%class.scoped_refptr.1476 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1477", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1477" = type { %"class.base::RefCounted.1478" }
%"class.base::RefCounted.1478" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1479" = type { %class.scoped_refptr.1480 }
%class.scoped_refptr.1480 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1481", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1481" = type { %"class.base::RefCounted.1482" }
%"class.base::RefCounted.1482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1483" = type { %class.scoped_refptr.1484 }
%class.scoped_refptr.1484 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1485", %class.scoped_refptr.1487 }
%"class.WTF::RefCounted.1485" = type { %"class.base::RefCounted.1486" }
%"class.base::RefCounted.1486" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1487 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1929", %"class.blink::StyleVariables", %class.scoped_refptr.1487 }
%"class.WTF::RefCounted.1929" = type { %"class.base::RefCounted.1930" }
%"class.base::RefCounted.1930" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1488" = type { %"class.base::RefCounted.1489" }
%"class.base::RefCounted.1489" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1490" = type { %"class.std::__1::__compressed_pair.1491" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1493" }
%"class.std::__1::unique_ptr.1493" = type { %"class.std::__1::__compressed_pair.1494" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.WTF::Vector.1496"* }
%"class.WTF::Vector.1496" = type { %"class.WTF::VectorBuffer.2773" }
%"class.WTF::VectorBuffer.2773" = type { %"class.WTF::VectorBufferBase.2774", [32 x i8] }
%"class.WTF::VectorBufferBase.2774" = type { %class.scoped_refptr.973*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1504" }
%"class.std::__1::unique_ptr.1504" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1507", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1513", %"class.std::__1::unique_ptr.1637", i8, %"class.absl::optional.1643", %class.scoped_refptr.1619, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1648" }
%"class.std::__1::unique_ptr.1507" = type { %"class.std::__1::__compressed_pair.1508" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.1509" }
%"struct.std::__1::__compressed_pair_elem.1509" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1516, %class.scoped_refptr.1516, %class.scoped_refptr.1516, %class.scoped_refptr.1516, %class.scoped_refptr.1516, %class.scoped_refptr.1516, %class.scoped_refptr.1551, %class.scoped_refptr.1567, %class.scoped_refptr.1568, %class.scoped_refptr.1568, %class.scoped_refptr.1568, %class.scoped_refptr.1568, %class.scoped_refptr.1568, %class.scoped_refptr.1568, %class.scoped_refptr.1609, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1610, %class.scoped_refptr.1633 }
%class.scoped_refptr.1516 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1533" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1517", i8, i8, %class.scoped_refptr.1519, i32, i32 }
%"class.WTF::RefCounted.1517" = type { %"class.base::RefCounted.1518" }
%"class.base::RefCounted.1518" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1519 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1526, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1527", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1520" }
%"class.std::__1::unique_ptr.1520" = type { %"class.std::__1::__compressed_pair.1521" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1526 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1552", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1552" = type { %"class.WTF::RefCounted.1553", i8, i8, %class.scoped_refptr.1526, i32, i32 }
%"class.WTF::RefCounted.1553" = type { %"class.base::RefCounted.1554" }
%"class.base::RefCounted.1554" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1555" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1555" = type { %"class.absl::optional_internal::optional_data.1556" }
%"class.absl::optional_internal::optional_data.1556" = type { %"class.absl::optional_internal::optional_data_base.1557" }
%"class.absl::optional_internal::optional_data_base.1557" = type { %"class.absl::optional_internal::optional_data_dtor_base.1558" }
%"class.absl::optional_internal::optional_data_dtor_base.1558" = type { i8, %union.anon.1559 }
%union.anon.1559 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1560", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1560" = type { %"class.std::__1::__vector_base.1561" }
%"class.std::__1::__vector_base.1561" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1562" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1527" = type { %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1529" }
%"struct.std::__1::__compressed_pair_elem.1529" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1536", %"class.std::__1::unique_ptr.1542", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1536" = type { %"class.std::__1::__compressed_pair.1537" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1542" = type { %"class.std::__1::__compressed_pair.1543" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1551 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1567 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1568 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1569" }
%"class.blink::PaintPropertyNode.1569" = type { %"class.WTF::RefCounted.1570", i8, i8, %class.scoped_refptr.1572, i32, i32 }
%"class.WTF::RefCounted.1570" = type { %"class.base::RefCounted.1571" }
%"class.base::RefCounted.1571" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1572 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1519, %class.scoped_refptr.1573, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1595", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1573 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1611" }
%"class.blink::PaintPropertyNode.1611" = type { %"class.WTF::RefCounted.1612", i8, i8, %class.scoped_refptr.1573, i32, i32 }
%"class.WTF::RefCounted.1612" = type { %"class.base::RefCounted.1613" }
%"class.base::RefCounted.1613" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1574" }
%"class.std::__1::vector.1574" = type { %"class.std::__1::__vector_base.1575" }
%"class.std::__1::__vector_base.1575" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1590" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1576, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1583", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1576 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1577, i32, %"class.absl::optional.1578", i8, i32 }
%class.sk_sp.1577 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1578" = type { %"class.absl::optional_internal::optional_data.1579" }
%"class.absl::optional_internal::optional_data.1579" = type { %"class.absl::optional_internal::optional_data_base.1580" }
%"class.absl::optional_internal::optional_data_base.1580" = type { %"class.absl::optional_internal::optional_data_dtor_base.1581" }
%"class.absl::optional_internal::optional_data_dtor_base.1581" = type { i8, %union.anon.1582 }
%union.anon.1582 = type { %struct.SkRect }
%"class.std::__1::vector.1583" = type { %"class.std::__1::__vector_base.1584" }
%"class.std::__1::__vector_base.1584" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.1591" }
%"struct.std::__1::__compressed_pair_elem.1591" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1595" = type { %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1601" }
%"class.base::internal::flat_tree.1601" = type { %"class.std::__1::vector.1602" }
%"class.std::__1::vector.1602" = type { %"class.std::__1::__vector_base.1603" }
%"class.std::__1::__vector_base.1603" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { i32* }
%class.scoped_refptr.1609 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1610 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1622" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1519, %"class.absl::optional.1614", %class.scoped_refptr.1619, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1614" = type { %"class.absl::optional_internal::optional_data.1615" }
%"class.absl::optional_internal::optional_data.1615" = type { %"class.absl::optional_internal::optional_data_base.1616" }
%"class.absl::optional_internal::optional_data_base.1616" = type { %"class.absl::optional_internal::optional_data_dtor_base.1617" }
%"class.absl::optional_internal::optional_data_dtor_base.1617" = type { i8, [3 x i8], %union.anon.1618 }
%union.anon.1618 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1625", i32, [4 x i8] }>
%"class.WTF::Vector.1625" = type { %"class.WTF::VectorBuffer.1626" }
%"class.WTF::VectorBuffer.1626" = type { %"class.WTF::VectorBufferBase.1627" }
%"class.WTF::VectorBufferBase.1627" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1633 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1519, %class.scoped_refptr.1573, %class.scoped_refptr.1572 }
%"class.absl::optional.1643" = type { %"class.absl::optional_internal::optional_data.1644" }
%"class.absl::optional_internal::optional_data.1644" = type { %"class.absl::optional_internal::optional_data_base.1645" }
%"class.absl::optional_internal::optional_data_base.1645" = type { %"class.absl::optional_internal::optional_data_dtor_base.1646" }
%"class.absl::optional_internal::optional_data_dtor_base.1646" = type { i8, %union.anon.1647 }
%union.anon.1647 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1619 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1620", [4 x i8] }
%"class.WTF::RefCounted.1620" = type { %"class.base::RefCounted.1621" }
%"class.base::RefCounted.1621" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1657 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1658" = type { %"class.WTF::VectorBuffer.1659" }
%"class.WTF::VectorBuffer.1659" = type { %"class.WTF::VectorBufferBase.1660", [8 x i8] }
%"class.WTF::VectorBufferBase.1660" = type { %class.scoped_refptr.1657*, i32, i32 }
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1666", %"class.absl::optional.1671", %"class.absl::optional.1676" }
%"class.absl::optional.1666" = type { %"class.absl::optional_internal::optional_data.1667" }
%"class.absl::optional_internal::optional_data.1667" = type { %"class.absl::optional_internal::optional_data_base.1668" }
%"class.absl::optional_internal::optional_data_base.1668" = type { %"class.absl::optional_internal::optional_data_dtor_base.1669" }
%"class.absl::optional_internal::optional_data_dtor_base.1669" = type { i8, %union.anon.1670 }
%union.anon.1670 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, [3 x i8], %union.anon.1675 }
%union.anon.1675 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1676" = type { %"class.absl::optional_internal::optional_data.1677" }
%"class.absl::optional_internal::optional_data.1677" = type { %"class.absl::optional_internal::optional_data_base.1678" }
%"class.absl::optional_internal::optional_data_base.1678" = type { %"class.absl::optional_internal::optional_data_dtor_base.1679" }
%"class.absl::optional_internal::optional_data_dtor_base.1679" = type { i8, %union.anon.1680 }
%union.anon.1680 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1684 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1685" = type { %"class.blink::PersistentBase.1686" }
%"class.blink::PersistentBase.1686" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.1070" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1689", %"struct.blink::PhysicalRect", %"class.blink::Member.1699" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.WTF::HashSet.1692"* }
%"class.WTF::HashSet.1692" = type { %"class.WTF::HashTable.1693" }
%"class.WTF::HashTable.1693" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1703", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1701, %"class.base::WeakPtrFactory.1702" }
%class.scoped_refptr.1701 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1702" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1703" = type { %"class.blink::MemberBase.574" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1704" = type { %"class.absl::optional_internal::optional_data.1705" }
%"class.absl::optional_internal::optional_data.1705" = type { %"class.absl::optional_internal::optional_data_base.1706" }
%"class.absl::optional_internal::optional_data_base.1706" = type { %"class.absl::optional_internal::optional_data_dtor_base.1707" }
%"class.absl::optional_internal::optional_data_dtor_base.1707" = type { i8, %union.anon.1708 }
%union.anon.1708 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1711" = type { %"class.blink::MemberBase.1712" }
%"class.blink::MemberBase.1712" = type { %"class.blink::HeapHashSet.1713"* }
%"class.blink::HeapHashSet.1713" = type opaque
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"class.WTF::HashSet.1717"* }
%"class.WTF::HashSet.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1726" = type { %"class.WTF::HashSet.1729" }
%"class.WTF::HashSet.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"class.blink::Member.294"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.1732" = type { %"class.WTF::HashSet.1735" }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::Member.1738"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1738" = type { %"class.blink::MemberBase.1739" }
%"class.blink::MemberBase.1739" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1916", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1927", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.53" }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1918", %"class.blink::Member.1919", %"class.blink::Member.1921", %"class.blink::Member.1923", %"class.blink::Member.1925", %"class.WTF::Vector.1909", i16, %class.scoped_refptr.1701 }
%"class.blink::ThreadState::PrefinalizerRegistration.1918" = type { i8 }
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1927" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1928", { i64, i64 } }
%"class.blink::WeakMember.1928" = type { %"class.blink::MemberBase.1739" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1750", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1753" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1754", i32, i32 }
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756" }
%"class.WTF::VectorBufferBase.1756" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1758" = type { %"class.WTF::LinkedHashSet.1761" }
%"class.WTF::LinkedHashSet.1761" = type { %"class.WTF::HashMap.1762", %"class.WTF::VectorBackedLinkedList.1766" }
%"class.WTF::HashMap.1762" = type { %"class.WTF::HashTable.1763" }
%"class.WTF::HashTable.1763" = type <{ %"struct.WTF::KeyValuePair.1765"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1765" = type opaque
%"class.WTF::VectorBackedLinkedList.1766" = type { %"class.WTF::Vector.1767", i32, i32 }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769" }
%"class.WTF::VectorBufferBase.1769" = type { %"class.WTF::VectorBackedLinkedListNode.1770"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1770" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1781, %class.scoped_refptr.1781, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1836", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1841", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1781 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1782", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1789" }
%"class.WTF::RefCounted.1782" = type { %"class.base::RefCounted.1783" }
%"class.base::RefCounted.1783" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1784", i32, [4 x i8] }>
%"class.WTF::Vector.1784" = type { %"class.WTF::VectorBuffer.1785" }
%"class.WTF::VectorBuffer.1785" = type { %"class.WTF::VectorBufferBase.1786" }
%"class.WTF::VectorBufferBase.1786" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1792", %"class.std::__1::unique_ptr.1808", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1795", %"class.WTF::Vector.1800", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797" }
%"class.WTF::VectorBufferBase.1797" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1800" = type { %"class.WTF::VectorBuffer.1801" }
%"class.WTF::VectorBuffer.1801" = type { %"class.WTF::VectorBufferBase.1802" }
%"class.WTF::VectorBufferBase.1802" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1811", %"class.absl::optional.1811" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1789"*, %"class.absl::optional.1821", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1821" = type { %"class.absl::optional_internal::optional_data.1822" }
%"class.absl::optional_internal::optional_data.1822" = type { %"class.absl::optional_internal::optional_data_base.1823" }
%"class.absl::optional_internal::optional_data_base.1823" = type { %"class.absl::optional_internal::optional_data_dtor_base.1824" }
%"class.absl::optional_internal::optional_data_dtor_base.1824" = type { i8, %union.anon.1825 }
%union.anon.1825 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1826", %"class.WTF::Vector.1831" }
%"class.WTF::Vector.1826" = type { %"class.WTF::VectorBuffer.1827" }
%"class.WTF::VectorBuffer.1827" = type { %"class.WTF::VectorBufferBase.1828", [128 x i8] }
%"class.WTF::VectorBufferBase.1828" = type { i32*, i32, i32 }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833", [128 x i8] }
%"class.WTF::VectorBufferBase.1833" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1836" = type { %"class.WTF::VectorBuffer.1837" }
%"class.WTF::VectorBuffer.1837" = type { %"class.WTF::VectorBufferBase.1838" }
%"class.WTF::VectorBufferBase.1838" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1841" = type { %"class.WTF::HashTable.1842" }
%"class.WTF::HashTable.1842" = type <{ %"struct.WTF::KeyValuePair.1845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1845" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1846", %"class.WTF::Vector.1851" }
%"class.WTF::HashMap.1846" = type { %"class.WTF::HashTable.1847" }
%"class.WTF::HashTable.1847" = type <{ %"struct.WTF::KeyValuePair.1850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1850" = type opaque
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1859" = type { %"class.std::__1::__compressed_pair.1860" }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1870 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1877" = type { %"class.WTF::HashSet.1880" }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"class.blink::WeakMember.1883"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1883" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::WeakMember.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1890" = type opaque
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1901", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1909" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911" }
%"class.WTF::VectorBufferBase.1911" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.594", %"class.blink::HeapListHashSet.605", %"class.blink::HeapListHashSet.616", %"class.blink::HeapListHashSet.627", %"class.blink::HeapListHashSet.638", %"class.blink::HeapListHashSet.649", %"class.blink::HeapListHashSet.660", %"class.blink::HeapListHashSet.671", %"class.blink::HeapListHashSet.682", %"class.blink::HeapListHashSet.693", %"class.blink::HeapListHashSet.704", %"class.blink::HeapListHashSet.715", %"class.blink::HeapListHashSet.726", %"class.blink::HeapListHashSet.737", %"class.blink::HeapListHashSet.748", %"class.blink::HeapListHashSet.759", %"class.blink::HeapListHashSet.770", %"class.blink::HeapListHashSet.781", %"class.blink::HeapListHashSet.792" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.590", %"class.blink::Member.592", %"class.blink::Member.592", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.590" = type <{ %"class.blink::Member.592"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.806", %"class.blink::Member.592", %"class.blink::Member.592" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.594" = type { %"class.WTF::ListHashSet.base.604", [7 x i8] }
%"class.WTF::ListHashSet.base.604" = type <{ %"class.WTF::HashTable.599", %"class.blink::Member.601", %"class.blink::Member.601", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.599" = type <{ %"class.blink::Member.601"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::HeapListHashSetNode.603"* }
%"class.blink::HeapListHashSetNode.603" = type { %"class.blink::Member.962", %"class.blink::Member.601", %"class.blink::Member.601" }
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.605" = type { %"class.WTF::ListHashSet.base.615", [7 x i8] }
%"class.WTF::ListHashSet.base.615" = type <{ %"class.WTF::HashTable.610", %"class.blink::Member.612", %"class.blink::Member.612", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.610" = type <{ %"class.blink::Member.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::HeapListHashSetNode.614"* }
%"class.blink::HeapListHashSetNode.614" = type { %"class.blink::Member.958", %"class.blink::Member.612", %"class.blink::Member.612" }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.616" = type { %"class.WTF::ListHashSet.base.626", [7 x i8] }
%"class.WTF::ListHashSet.base.626" = type <{ %"class.WTF::HashTable.621", %"class.blink::Member.623", %"class.blink::Member.623", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.621" = type <{ %"class.blink::Member.623"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::HeapListHashSetNode.625"* }
%"class.blink::HeapListHashSetNode.625" = type { %"class.blink::Member.954", %"class.blink::Member.623", %"class.blink::Member.623" }
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.627" = type { %"class.WTF::ListHashSet.base.637", [7 x i8] }
%"class.WTF::ListHashSet.base.637" = type <{ %"class.WTF::HashTable.632", %"class.blink::Member.634", %"class.blink::Member.634", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.632" = type <{ %"class.blink::Member.634"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::HeapListHashSetNode.636"* }
%"class.blink::HeapListHashSetNode.636" = type { %"class.blink::Member.950", %"class.blink::Member.634", %"class.blink::Member.634" }
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.638" = type { %"class.WTF::ListHashSet.base.648", [7 x i8] }
%"class.WTF::ListHashSet.base.648" = type <{ %"class.WTF::HashTable.643", %"class.blink::Member.645", %"class.blink::Member.645", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.643" = type <{ %"class.blink::Member.645"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::HeapListHashSetNode.647"* }
%"class.blink::HeapListHashSetNode.647" = type { %"class.blink::Member.946", %"class.blink::Member.645", %"class.blink::Member.645" }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.649" = type { %"class.WTF::ListHashSet.base.659", [7 x i8] }
%"class.WTF::ListHashSet.base.659" = type <{ %"class.WTF::HashTable.654", %"class.blink::Member.656", %"class.blink::Member.656", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.654" = type <{ %"class.blink::Member.656"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::HeapListHashSetNode.658"* }
%"class.blink::HeapListHashSetNode.658" = type { %"class.blink::Member.942", %"class.blink::Member.656", %"class.blink::Member.656" }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.660" = type { %"class.WTF::ListHashSet.base.670", [7 x i8] }
%"class.WTF::ListHashSet.base.670" = type <{ %"class.WTF::HashTable.665", %"class.blink::Member.667", %"class.blink::Member.667", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.665" = type <{ %"class.blink::Member.667"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::HeapListHashSetNode.669"* }
%"class.blink::HeapListHashSetNode.669" = type { %"class.blink::Member.938", %"class.blink::Member.667", %"class.blink::Member.667" }
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.671" = type { %"class.WTF::ListHashSet.base.681", [7 x i8] }
%"class.WTF::ListHashSet.base.681" = type <{ %"class.WTF::HashTable.676", %"class.blink::Member.678", %"class.blink::Member.678", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.676" = type <{ %"class.blink::Member.678"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::HeapListHashSetNode.680"* }
%"class.blink::HeapListHashSetNode.680" = type { %"class.blink::Member.934", %"class.blink::Member.678", %"class.blink::Member.678" }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.682" = type { %"class.WTF::ListHashSet.base.692", [7 x i8] }
%"class.WTF::ListHashSet.base.692" = type <{ %"class.WTF::HashTable.687", %"class.blink::Member.689", %"class.blink::Member.689", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.687" = type <{ %"class.blink::Member.689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::HeapListHashSetNode.691"* }
%"class.blink::HeapListHashSetNode.691" = type { %"class.blink::Member.930", %"class.blink::Member.689", %"class.blink::Member.689" }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.693" = type { %"class.WTF::ListHashSet.base.703", [7 x i8] }
%"class.WTF::ListHashSet.base.703" = type <{ %"class.WTF::HashTable.698", %"class.blink::Member.700", %"class.blink::Member.700", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.698" = type <{ %"class.blink::Member.700"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::HeapListHashSetNode.702"* }
%"class.blink::HeapListHashSetNode.702" = type { %"class.blink::Member.810", %"class.blink::Member.700", %"class.blink::Member.700" }
%"class.blink::HeapListHashSet.704" = type { %"class.WTF::ListHashSet.base.714", [7 x i8] }
%"class.WTF::ListHashSet.base.714" = type <{ %"class.WTF::HashTable.709", %"class.blink::Member.711", %"class.blink::Member.711", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.709" = type <{ %"class.blink::Member.711"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::HeapListHashSetNode.713"* }
%"class.blink::HeapListHashSetNode.713" = type { %"class.blink::Member.924", %"class.blink::Member.711", %"class.blink::Member.711" }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.715" = type { %"class.WTF::ListHashSet.base.725", [7 x i8] }
%"class.WTF::ListHashSet.base.725" = type <{ %"class.WTF::HashTable.720", %"class.blink::Member.722", %"class.blink::Member.722", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.720" = type <{ %"class.blink::Member.722"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::HeapListHashSetNode.724"* }
%"class.blink::HeapListHashSetNode.724" = type { %"class.blink::Member.920", %"class.blink::Member.722", %"class.blink::Member.722" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.726" = type { %"class.WTF::ListHashSet.base.736", [7 x i8] }
%"class.WTF::ListHashSet.base.736" = type <{ %"class.WTF::HashTable.731", %"class.blink::Member.733", %"class.blink::Member.733", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.731" = type <{ %"class.blink::Member.733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::HeapListHashSetNode.735"* }
%"class.blink::HeapListHashSetNode.735" = type { %"class.blink::Member.916", %"class.blink::Member.733", %"class.blink::Member.733" }
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.737" = type { %"class.WTF::ListHashSet.base.747", [7 x i8] }
%"class.WTF::ListHashSet.base.747" = type <{ %"class.WTF::HashTable.742", %"class.blink::Member.744", %"class.blink::Member.744", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.742" = type <{ %"class.blink::Member.744"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::HeapListHashSetNode.746"* }
%"class.blink::HeapListHashSetNode.746" = type { %"class.blink::Member.912", %"class.blink::Member.744", %"class.blink::Member.744" }
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.748" = type { %"class.WTF::ListHashSet.base.758", [7 x i8] }
%"class.WTF::ListHashSet.base.758" = type <{ %"class.WTF::HashTable.753", %"class.blink::Member.755", %"class.blink::Member.755", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.753" = type <{ %"class.blink::Member.755"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::HeapListHashSetNode.757"* }
%"class.blink::HeapListHashSetNode.757" = type { %"class.blink::Member.908", %"class.blink::Member.755", %"class.blink::Member.755" }
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.759" = type { %"class.WTF::ListHashSet.base.769", [7 x i8] }
%"class.WTF::ListHashSet.base.769" = type <{ %"class.WTF::HashTable.764", %"class.blink::Member.766", %"class.blink::Member.766", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.764" = type <{ %"class.blink::Member.766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::HeapListHashSetNode.768"* }
%"class.blink::HeapListHashSetNode.768" = type { %"class.blink::Member.904", %"class.blink::Member.766", %"class.blink::Member.766" }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.770" = type { %"class.WTF::ListHashSet.base.780", [7 x i8] }
%"class.WTF::ListHashSet.base.780" = type <{ %"class.WTF::HashTable.775", %"class.blink::Member.777", %"class.blink::Member.777", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.775" = type <{ %"class.blink::Member.777"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::HeapListHashSetNode.779"* }
%"class.blink::HeapListHashSetNode.779" = type { %"class.blink::Member.900", %"class.blink::Member.777", %"class.blink::Member.777" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.781" = type { %"class.WTF::ListHashSet.base.791", [7 x i8] }
%"class.WTF::ListHashSet.base.791" = type <{ %"class.WTF::HashTable.786", %"class.blink::Member.788", %"class.blink::Member.788", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.786" = type <{ %"class.blink::Member.788"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::HeapListHashSetNode.790"* }
%"class.blink::HeapListHashSetNode.790" = type { %"class.blink::Member.812", %"class.blink::Member.788", %"class.blink::Member.788" }
%"class.blink::HeapListHashSet.792" = type { %"class.WTF::ListHashSet.base.802", [7 x i8] }
%"class.WTF::ListHashSet.base.802" = type <{ %"class.WTF::HashTable.797", %"class.blink::Member.799", %"class.blink::Member.799", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.797" = type <{ %"class.blink::Member.799"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::HeapListHashSetNode.801"* }
%"class.blink::HeapListHashSetNode.801" = type { %"class.blink::Member.804", %"class.blink::Member.799", %"class.blink::Member.799" }
%class.scoped_refptr.803 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.820" }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2798" }
%"class.mojo::Remote.2798" = type { %"class.mojo::internal::InterfacePtrState.2799" }
%"class.mojo::internal::InterfacePtrState.2799" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2800" }
%"class.std::__1::unique_ptr.2800" = type { %"class.std::__1::__compressed_pair.2801" }
%"class.std::__1::__compressed_pair.2801" = type { %"struct.std::__1::__compressed_pair_elem.2802" }
%"struct.std::__1::__compressed_pair_elem.2802" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.825, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.825 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.826", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.834, i8, [7 x i8] }>
%class.scoped_refptr.834 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.835", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.835" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.836" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.843" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.850" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.856" }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2808" }
%"class.mojo::AssociatedRemote.2808" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2809" }
%"class.mojo::internal::AssociatedInterfacePtrState.2809" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2810" }
%"class.std::__1::unique_ptr.2810" = type { %"class.std::__1::__compressed_pair.2811" }
%"class.std::__1::__compressed_pair.2811" = type { %"struct.std::__1::__compressed_pair_elem.2812" }
%"struct.std::__1::__compressed_pair_elem.2812" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.858" = type { %"class.blink::Member.859" }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2818" }
%"class.mojo::AssociatedRemote.2818" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2819" }
%"class.mojo::internal::AssociatedInterfacePtrState.2819" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2820" }
%"class.std::__1::unique_ptr.2820" = type { %"class.std::__1::__compressed_pair.2821" }
%"class.std::__1::__compressed_pair.2821" = type { %"struct.std::__1::__compressed_pair_elem.2822" }
%"struct.std::__1::__compressed_pair_elem.2822" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.861" }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2828", %"class.blink::Member.514", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2828" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2829" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.452" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2829" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.863" = type { %"class.blink::Member.864" }
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2832", %"class.blink::Member.514", %"class.mojo::AssociatedReceiver.2833" }
%"class.blink::ThreadState::PrefinalizerRegistration.2832" = type { i8 }
%"class.mojo::AssociatedReceiver.2833" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2834" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2834" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.866" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2837", %"class.blink::Member.514", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2837" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.341, %"class.std::__1::unique_ptr.452", %"class.base::WeakPtrFactory.2838" }
%"class.base::WeakPtrFactory.2838" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.868" = type { %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2841", %"class.blink::Member.514", %"class.mojo::AssociatedReceiver.2842" }
%"class.blink::ThreadState::PrefinalizerRegistration.2841" = type { i8 }
%"class.mojo::AssociatedReceiver.2842" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2843" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2843" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapHashMap.879"* }
%"class.blink::HeapHashMap.879" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.880" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.883" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.883" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.889" = type { %"class.absl::optional_internal::optional_data.890" }
%"class.absl::optional_internal::optional_data.890" = type { %"class.absl::optional_internal::optional_data_base.891" }
%"class.absl::optional_internal::optional_data_base.891" = type { %"class.absl::optional_internal::optional_data_dtor_base.892" }
%"class.absl::optional_internal::optional_data_dtor_base.892" = type { i8, %union.anon.893 }
%union.anon.893 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.19", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.518" = type { %"class.absl::optional_internal::optional_data.519" }
%"class.absl::optional_internal::optional_data.519" = type { %"class.absl::optional_internal::optional_data_base.520" }
%"class.absl::optional_internal::optional_data_base.520" = type { %"class.absl::optional_internal::optional_data_dtor_base.521" }
%"class.absl::optional_internal::optional_data_dtor_base.521" = type { i8, %union.anon.522 }
%union.anon.522 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.523" = type { %"class.absl::optional_internal::optional_data.524" }
%"class.absl::optional_internal::optional_data.524" = type { %"class.absl::optional_internal::optional_data_base.525" }
%"class.absl::optional_internal::optional_data_base.525" = type { %"class.absl::optional_internal::optional_data_dtor_base.526" }
%"class.absl::optional_internal::optional_data_dtor_base.526" = type { i8, %union.anon.527 }
%union.anon.527 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.286 }
%class.scoped_refptr.286 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.530" }
%"class.WTF::HashTable.530" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.32" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.23", i8, i8, [6 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::KURL"* }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.55", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.59", float, i8, %class.scoped_refptr.61, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.61 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.67, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.265" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type opaque
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Object"* }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1931", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1909", %"class.WTF::Vector.1909", i8, i32, %"class.blink::Member.1939", %"class.blink::Member.1941", %"class.blink::Member.1943", %"class.blink::Member.1945", %"class.blink::Member.1947", %"class.blink::Member.1949", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1951", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1957", %"class.blink::Member.1959", %"class.blink::Member.1160", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1961", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1982", %"class.blink::HeapVector.1136", %"class.blink::Member.53", %"class.blink::Member.1984", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::UserActionElementSet", %"class.blink::Member.1993", double, double, i64, i64, %"class.blink::HeapHashSet.1995", %"class.blink::HeapHashSet.2002", i16, i8, %"class.blink::Member.2009", %"class.blink::Member.2011", %"class.blink::Member.2013", %"class.blink::Member.2015", %"class.blink::TextLinkColors", %"class.blink::Member.2017", i8, [7 x i8], %"class.blink::HeapHashMap.2019", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.53", %"class.WTF::Vector.2026", %"class.blink::Member.2031", %"class.blink::Member.2033", i8, %"class.blink::Member.53", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2035", %"class.blink::HeapVector.2037", %"class.std::__1::unique_ptr.2045", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2051", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2064", %"class.WTF::Vector.2066", i8, i8, %"class.std::__1::unique_ptr.2071", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1136", %"class.blink::HeapVector.2077", i32, i8, %"class.blink::HeapTaskRunnerTimer.1982", %"class.blink::HeapTaskRunnerTimer.1982", %"class.blink::DocumentTiming", %"class.blink::Member.2085", i8, i32, %"class.blink::Member.2087", %"class.blink::Member.2089", %"class.blink::Member.2091", %"class.blink::HeapTaskRunnerTimer.1982", %"class.blink::Member.2093", %"class.WTF::HashMap.2095", %"class.blink::Member.2100", %"class.blink::Member.2102", %"class.blink::Member.2104", %"class.blink::Member.2106", %"class.blink::Member.1119", %"class.blink::Member.1119", %"class.blink::HeapTaskRunnerTimer.1982", %"class.blink::HeapHashSet.2108", i8, i32, %"class.blink::Member.2115", %"class.blink::Member.2117", i32, %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.std::__1::unique_ptr.2125", i64, %"class.std::__1::unique_ptr.2131", i32, i32, %"class.blink::Member.2142", %"class.blink::Member.2144", %"class.blink::Member.2146", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2148", %"class.WTF::Vector.2150", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2155", %"class.blink::Member.2162", %"class.std::__1::unique_ptr.2164", %"class.blink::Member.2170", i8, i8, %"class.WTF::String", %"class.blink::Member.2172", i8, [7 x i8], %"class.blink::HeapHashMap.2174", %"class.blink::HeapObserverSet", %"class.blink::Member.2188", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2190", i32, i8, i8, %"class.blink::WeakMember.2192", %"class.blink::Member.2193" }
%"class.blink::Supplementable.1931" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1932" }
%"class.blink::HeapHashMap.1932" = type { %"class.WTF::HashMap.1935" }
%"class.WTF::HashMap.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %"struct.WTF::KeyValuePair.1938"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1938" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.2206", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.2281", i32, i8, [3 x i8], %"class.blink::HeapVector.2283", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.2291", %"class.blink::Member.2293", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.2302", %"class.blink::Member.2358", %"class.blink::Member.2360", i8, [7 x i8] }>
%"class.blink::Supplementable.2206" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2207" }
%"class.blink::HeapHashMap.2207" = type { %"class.WTF::HashMap.2210" }
%"class.WTF::HashMap.2210" = type { %"class.WTF::HashTable.2211" }
%"class.WTF::HashTable.2211" = type <{ %"struct.WTF::KeyValuePair.2213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2213" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.2222" }
%"class.blink::Supplementable.2222" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2223" }
%"class.blink::HeapHashMap.2223" = type { %"class.WTF::HashMap.2226" }
%"class.WTF::HashMap.2226" = type { %"class.WTF::HashTable.2227" }
%"class.WTF::HashTable.2227" = type <{ %"struct.WTF::KeyValuePair.2229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2229" = type { i8*, %"class.blink::Member.2749" }
%"class.blink::Member.2749" = type { %"class.blink::MemberBase.2750" }
%"class.blink::MemberBase.2750" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2751" }
%"class.blink::Member.2751" = type { %"class.blink::MemberBase.2752" }
%"class.blink::MemberBase.2752" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.2230, %"class.std::__1::unique_ptr.2234", %"class.std::__1::unique_ptr.2234", %"class.std::__1::unique_ptr.2261", %"class.std::__1::unique_ptr.2261", %"class.blink::Member.1941", i32, [4 x i8], %"class.WTF::HashSet.2277", i32, i32 }
%"class.std::__1::unique_ptr.2234" = type { %"class.std::__1::__compressed_pair.2235" }
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.2237", %"class.std::__1::map.2248", %"class.std::__1::map.2257"* }
%"class.std::__1::map.2237" = type { %"class.std::__1::__tree.2238" }
%"class.std::__1::__tree.2238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2239", %"class.std::__1::__compressed_pair.2243" }
%"class.std::__1::__compressed_pair.2239" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.2243" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.2248" = type { %"class.std::__1::__tree.2249" }
%"class.std::__1::__tree.2249" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2250", %"class.std::__1::__compressed_pair.2254" }
%"class.std::__1::__compressed_pair.2250" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"class.std::__1::__compressed_pair.2254" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.2257" = type opaque
%"class.std::__1::unique_ptr.2261" = type { %"class.std::__1::__compressed_pair.2262" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.2264" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.2277" = type { %"class.WTF::HashTable.2278" }
%"class.WTF::HashTable.2278" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.2283" = type { %"class.WTF::Vector.2286" }
%"class.WTF::Vector.2286" = type { %"class.WTF::VectorBuffer.2287" }
%"class.WTF::VectorBuffer.2287" = type { %"class.WTF::VectorBufferBase.2288" }
%"class.WTF::VectorBufferBase.2288" = type { %"class.blink::Member.2289"*, i32, i32 }
%"class.blink::Member.2289" = type opaque
%"class.blink::Member.2291" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.2295", i32, i32 }
%"class.blink::HeapHashMap.2295" = type { %"class.WTF::HashMap.2298" }
%"class.WTF::HashMap.2298" = type { %"class.WTF::HashTable.2299" }
%"class.WTF::HashTable.2299" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1943" = type { %"class.blink::MemberBase.1944" }
%"class.blink::MemberBase.1944" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1961" = type { %"class.WTF::VectorBuffer.1962" }
%"class.WTF::VectorBuffer.1962" = type { %"class.WTF::VectorBufferBase.1963" }
%"class.WTF::VectorBufferBase.1963" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1964 }
%class.scoped_refptr.1964 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1986" }
%"class.blink::HeapHashMap.1986" = type { %"class.WTF::HashMap.1989" }
%"class.WTF::HashMap.1989" = type { %"class.WTF::HashTable.1990" }
%"class.WTF::HashTable.1990" = type <{ %"struct.WTF::KeyValuePair.1992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1992" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1995" = type { %"class.WTF::HashSet.1998" }
%"class.WTF::HashSet.1998" = type { %"class.WTF::HashTable.1999" }
%"class.WTF::HashTable.1999" = type <{ %"class.blink::WeakMember.2001"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2001" = type opaque
%"class.blink::HeapHashSet.2002" = type { %"class.WTF::HashSet.2005" }
%"class.WTF::HashSet.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"class.blink::WeakMember.2008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2008" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.1154" }
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2017" = type { %"class.blink::MemberBase.2018" }
%"class.blink::MemberBase.2018" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2019" = type { %"class.WTF::HashMap.2022" }
%"class.WTF::HashMap.2022" = type { %"class.WTF::HashTable.2023" }
%"class.WTF::HashTable.2023" = type <{ %"struct.WTF::KeyValuePair.2025"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2025" = type opaque
%"class.WTF::Vector.2026" = type { %"class.WTF::VectorBuffer.2027" }
%"class.WTF::VectorBuffer.2027" = type { %"class.WTF::VectorBufferBase.2028" }
%"class.WTF::VectorBufferBase.2028" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2031" = type { %"class.blink::MemberBase.2032" }
%"class.blink::MemberBase.2032" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2037" = type { %"class.WTF::Vector.2040" }
%"class.WTF::Vector.2040" = type { %"class.WTF::VectorBuffer.2041" }
%"class.WTF::VectorBuffer.2041" = type { %"class.WTF::VectorBufferBase.2042" }
%"class.WTF::VectorBufferBase.2042" = type { %"class.blink::Member.2043"*, i32, i32 }
%"class.blink::Member.2043" = type opaque
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2051" = type { %"class.WTF::HashSet.2054" }
%"class.WTF::HashSet.2054" = type { %"class.WTF::HashTable.2055" }
%"class.WTF::HashTable.2055" = type <{ %"class.blink::WeakMember.2057"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2057" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2058", i32, [4 x i8] }>
%"class.WTF::Vector.2058" = type { %"class.WTF::VectorBuffer.2059" }
%"class.WTF::VectorBuffer.2059" = type { %"class.WTF::VectorBufferBase.2060" }
%"class.WTF::VectorBufferBase.2060" = type { %"struct.std::__1::pair.2061"*, i32, i32 }
%"struct.std::__1::pair.2061" = type opaque
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2066" = type { %"class.WTF::VectorBuffer.2067" }
%"class.WTF::VectorBuffer.2067" = type { %"class.WTF::VectorBufferBase.2068" }
%"class.WTF::VectorBufferBase.2068" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2071" = type { %"class.std::__1::__compressed_pair.2072" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2077" = type { %"class.WTF::Vector.2080" }
%"class.WTF::Vector.2080" = type { %"class.WTF::VectorBuffer.2081" }
%"class.WTF::VectorBuffer.2081" = type { %"class.WTF::VectorBufferBase.2082" }
%"class.WTF::VectorBufferBase.2082" = type { %"class.blink::Member.2083"*, i32, i32 }
%"class.blink::Member.2083" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1119" }
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"struct.WTF::KeyValuePair.2099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2099" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2102" = type { %"class.blink::MemberBase.2103" }
%"class.blink::MemberBase.2103" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1982" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1983", { i64, i64 } }
%"class.blink::WeakMember.1983" = type { %"class.blink::MemberBase.1120" }
%"class.blink::HeapHashSet.2108" = type { %"class.WTF::HashSet.2111" }
%"class.WTF::HashSet.2111" = type { %"class.WTF::HashTable.2112" }
%"class.WTF::HashTable.2112" = type <{ %"class.blink::Member.2114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2114" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2125" = type { %"class.std::__1::__compressed_pair.2126" }
%"class.std::__1::__compressed_pair.2126" = type { %"struct.std::__1::__compressed_pair_elem.2127" }
%"struct.std::__1::__compressed_pair_elem.2127" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.2131" = type { %"class.std::__1::__compressed_pair.2132" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.2133" }
%"struct.std::__1::__compressed_pair_elem.2133" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1181", %"class.WTF::HashSet.1181", %"class.WTF::HashSet.1181", %"class.WTF::HashSet.1181", %"class.WTF::HashSet.1181", %"class.WTF::HashSet.1181", i32, [4 x i8], %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", %"class.WTF::HashMap.2134", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2134" = type { %"class.WTF::HashTable.2135" }
%"class.WTF::HashTable.2135" = type <{ %"struct.WTF::KeyValuePair.2138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2138" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.2150" = type { %"class.WTF::VectorBuffer.2151" }
%"class.WTF::VectorBuffer.2151" = type { %"class.WTF::VectorBufferBase.2152" }
%"class.WTF::VectorBufferBase.2152" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2155" = type { %"class.WTF::HashMap.2158" }
%"class.WTF::HashMap.2158" = type { %"class.WTF::HashTable.2159" }
%"class.WTF::HashTable.2159" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type opaque
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2164" = type { %"class.std::__1::__compressed_pair.2165" }
%"class.std::__1::__compressed_pair.2165" = type { %"struct.std::__1::__compressed_pair_elem.2166" }
%"struct.std::__1::__compressed_pair_elem.2166" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2174" = type { %"class.WTF::HashMap.2177" }
%"class.WTF::HashMap.2177" = type { %"class.WTF::HashTable.2178" }
%"class.WTF::HashTable.2178" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2181" }
%"class.blink::HeapHashSet.2181" = type { %"class.WTF::HashSet.2184" }
%"class.WTF::HashSet.2184" = type { %"class.WTF::HashTable.2185" }
%"class.WTF::HashTable.2185" = type <{ %"class.blink::WeakMember.2187"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2187" = type opaque
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1119", %"class.blink::HeapHashSet.2197", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2204", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2197" = type { %"class.WTF::HashSet.2200" }
%"class.WTF::HashSet.2200" = type { %"class.WTF::HashTable.2201" }
%"class.WTF::HashTable.2201" = type <{ %"class.blink::Member.2203"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2203" = type opaque
%"class.blink::HeapTaskRunnerTimer.2204" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2205", { i64, i64 } }
%"class.blink::WeakMember.2205" = type { %"class.blink::MemberBase.2191" }
%"class.blink::WeakMember.2192" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::HTMLPlugInElement" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.49", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.294", i8, [7 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.2013", %"class.blink::Member.2676", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.WTF::HashMap.2678" = type { %"class.WTF::HashTable.2679" }
%"class.WTF::HashTable.2679" = type <{ %"struct.WTF::KeyValuePair.2682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2682" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2877", %"class.blink::Member.2879", %"class.blink::Member.2881", %"class.blink::Member.2900", %"class.blink::Member.2902" }
%"class.blink::Member.2877" = type { %"class.blink::MemberBase.2878" }
%"class.blink::MemberBase.2878" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.973 }
%"class.blink::Member.2879" = type { %"class.blink::MemberBase.2880" }
%"class.blink::MemberBase.2880" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2881" = type { %"class.blink::MemberBase.2882" }
%"class.blink::MemberBase.2882" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2885", %"class.blink::HeapHashSet.2894" }
%"class.blink::HeapVector.2885" = type { %"class.WTF::Vector.2888" }
%"class.WTF::Vector.2888" = type { %"class.WTF::VectorBuffer.2889" }
%"class.WTF::VectorBuffer.2889" = type { %"class.WTF::VectorBufferBase.2890" }
%"class.WTF::VectorBufferBase.2890" = type { %"class.blink::Member.2891"*, i32, i32 }
%"class.blink::Member.2891" = type { %"class.blink::MemberBase.2892" }
%"class.blink::MemberBase.2892" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2894" = type { %"class.WTF::HashSet.2897" }
%"class.WTF::HashSet.2897" = type { %"class.WTF::HashTable.2898" }
%"class.WTF::HashTable.2898" = type <{ %"class.blink::Member.2891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2902" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::HeapHashSet.2904"* }
%"class.blink::HeapHashSet.2904" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2928" }
%"class.WTF::Vector.2928" = type { %"class.WTF::VectorBuffer.2929" }
%"class.WTF::VectorBuffer.2929" = type { %"class.WTF::VectorBufferBase.2930", [64 x i8] }
%"class.WTF::VectorBufferBase.2930" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8, [6 x i8] }>
%"class.blink::PluginParameters" = type { %"class.WTF::Vector.1387", %"class.WTF::Vector.1387" }
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"class.blink::HTMLObjectElement" = type <{ %"class.blink::HTMLPlugInElement.base", [7 x i8], %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2685", %"class.blink::Member.2687", %"class.blink::Member.2689", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.2687" = type { %"class.blink::MemberBase.2688" }
%"class.blink::MemberBase.2688" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.2689" = type { %"class.blink::MemberBase.2690" }
%"class.blink::MemberBase.2690" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2696, %"class.blink::Member.2697", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2701" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase.2695" }
%"class.v8::PersistentBase.2695" = type { %"class.v8::Context"* }
%class.scoped_refptr.2696 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2697" = type { %"class.blink::MemberBase.2698" }
%"class.blink::MemberBase.2698" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2699" }
%"class.blink::Persistent.2699" = type { %"class.blink::PersistentBase.2700" }
%"class.blink::PersistentBase.2700" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.1070" }
%"class.util::TokenType.2701" = type { %"class.base::StrongAlias.2702" }
%"class.base::StrongAlias.2702" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable.2703", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.2706", i8, i8, %class.scoped_refptr.1701, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable.2703" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.std::__1::unique_ptr.2706" = type { %"class.std::__1::__compressed_pair.2707" }
%"class.std::__1::__compressed_pair.2707" = type { %"struct.std::__1::__compressed_pair_elem.2708" }
%"struct.std::__1::__compressed_pair_elem.2708" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2717", %"class.blink::Member.2717", %"class.blink::Member.2719", %"class.blink::Member.2721", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2712" }
%"class.absl::optional.2712" = type { %"class.absl::optional_internal::optional_data.2713" }
%"class.absl::optional_internal::optional_data.2713" = type { %"class.absl::optional_internal::optional_data_base.2714" }
%"class.absl::optional_internal::optional_data_base.2714" = type { %"class.absl::optional_internal::optional_data_dtor_base.2715" }
%"class.absl::optional_internal::optional_data_dtor_base.2715" = type { i8, %union.anon.2716 }
%union.anon.2716 = type { i64 }
%"class.blink::Member.2717" = type { %"class.blink::MemberBase.2718" }
%"class.blink::MemberBase.2718" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::Event"* }
%"class.blink::Member.2721" = type { %"class.blink::MemberBase.2722" }
%"class.blink::MemberBase.2722" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2725", i8, [7 x i8] }>
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2727" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2727" = type { %"class.v8::TracedReference.2728" }
%"class.v8::TracedReference.2728" = type { %"class.v8::BasicTracedReference.2729" }
%"class.v8::BasicTracedReference.2729" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2730", %"class.WTF::String"* }
%"class.blink::HeapVector.2730" = type { %"class.WTF::Vector.2733" }
%"class.WTF::Vector.2733" = type { %"class.WTF::VectorBuffer.2734" }
%"class.WTF::VectorBuffer.2734" = type { %"class.WTF::VectorBufferBase.2735" }
%"class.WTF::VectorBufferBase.2735" = type { %"class.blink::Member"*, i32, i32 }
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.mojo::StructPtr.2737" = type { %"class.std::__1::unique_ptr.2738" }
%"class.std::__1::unique_ptr.2738" = type { %"class.std::__1::__compressed_pair.2739" }
%"class.std::__1::__compressed_pair.2739" = type { %"struct.std::__1::__compressed_pair_elem.2740" }
%"struct.std::__1::__compressed_pair_elem.2740" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2741", %"class.WTF::Vector.1387", %"class.WTF::String" }
%"class.WTF::Vector.2741" = type { %"class.WTF::VectorBuffer.2742" }
%"class.WTF::VectorBuffer.2742" = type { %"class.WTF::VectorBufferBase.2743" }
%"class.WTF::VectorBufferBase.2743" = type { %class.scoped_refptr.2233*, i32, i32 }
%class.anon.2905 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.2913" }
%"class.std::__1::list.2913" = type { %"class.std::__1::__list_imp.2914" }
%"class.std::__1::__list_imp.2914" = type { %"struct.std::__1::__list_node_base.2915", %"class.std::__1::__compressed_pair.2916" }
%"struct.std::__1::__list_node_base.2915" = type { %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"* }
%"class.std::__1::__compressed_pair.2916" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2906", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2906" = type { %"class.std::__1::__vector_base.2907" }
%"class.std::__1::__vector_base.2907" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2908" }
%"class.std::__1::__compressed_pair.2908" = type { %"struct.std::__1::__compressed_pair_elem.2909" }
%"struct.std::__1::__compressed_pair_elem.2909" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2856", i64, i64 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.2915", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink16HTMLEmbedElementD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16HTMLEmbedElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink17HTMLPlugInElement23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink17HTMLPlugInElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink16HTMLEmbedElement16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb = comdat any

$_ZNK5blink16HTMLEmbedElement9OwnerTypeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv = comdat any

$_ZNK5blink17HTMLPlugInElement8IsPluginEv = comdat any

$_ZThn104_N5blink16HTMLEmbedElementD1Ev = comdat any

$_ZThn104_N5blink16HTMLEmbedElementD0Ev = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZN5blink10FrameOwner19CSPAttributeChangedEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZThn208_N5blink16HTMLEmbedElementD1Ev = comdat any

$_ZThn208_N5blink16HTMLEmbedElementD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink16HTMLEmbedElementE = hidden unnamed_addr constant { [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] } { [207 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZN5blink16HTMLEmbedElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, i1, i32)* @_ZN5blink17HTMLPlugInElement10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink17HTMLPlugInElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, i1)* @_ZN5blink17HTMLPlugInElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLPlugInElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLPlugInElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Event"*)* @_ZN5blink17HTMLPlugInElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Document"*)* @_ZN5blink17HTMLPlugInElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2678"* (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLEmbedElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink16HTMLEmbedElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink16HTMLEmbedElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink16HTMLEmbedElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLPlugInElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink17HTMLPlugInElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::HTMLEmbedElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink16HTMLEmbedElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLEmbedElement"*, %"class.blink::Attribute"*)* @_ZNK5blink16HTMLEmbedElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink17HTMLPlugInElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink17HTMLPlugInElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement22DisconnectContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement9OwnerTypeEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement24ConstructContainerPolicyEv to i8*), i8* bitcast (void (%"class.base::flat_map"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv to i8*), i8* bitcast (void (%"class.mojo::StructPtr.2737"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement8IsPluginEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement18HasFallbackContentEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv to i8*), i8* bitcast (%"class.blink::LayoutEmbeddedContent"* (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement34LayoutEmbeddedContentForJSBindingsEv to i8*), i8* bitcast (%"class.blink::LayoutEmbeddedContent"* (%"class.blink::HTMLEmbedElement"*)* @_ZNK5blink16HTMLEmbedElement29ExistingLayoutEmbeddedContentEv to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZN5blink16HTMLEmbedElement20UpdatePluginInternalEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [28 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZThn104_N5blink16HTMLEmbedElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZThn104_N5blink16HTMLEmbedElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZThn104_N5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (void (%"class.blink::FrameOwner"*)* @_ZN5blink10FrameOwner19CSPAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -208 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*)* @_ZThn208_NK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZThn208_N5blink16HTMLEmbedElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLEmbedElement"*)* @_ZThn208_N5blink16HTMLEmbedElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@_ZZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global i64 0, align 8
@_ZN5blink10html_names11kHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Embed type changed\00", align 1
@_ZN5blink10html_names9kCodeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.5 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink16HTMLEmbedElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.8 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::SpecificTrustedType>]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink16HTMLEmbedElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::HTMLEmbedElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::HTMLEmbedElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink16HTMLEmbedElementC2ERNS_8DocumentENS_18CreateElementFlagsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLEmbedElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLEmbedElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink17HTMLPlugInElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLPlugInElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #12
  %6 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }, { [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLEmbedElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }, { [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLEmbedElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }, { [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLEmbedElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }, { [207 x i8*], [3 x i8*], [28 x i8*], [7 x i8*] }* @_ZTVN5blink16HTMLEmbedElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %10) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink17HTMLPlugInElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #2

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.2678"* @_ZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEv(%"class.blink::HTMLEmbedElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca [1 x %"struct.WTF::KeyValuePair.2682"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %30, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = bitcast [1 x %"struct.WTF::KeyValuePair.2682"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2682"], [1 x %"struct.WTF::KeyValuePair.2682"]* %2, i64 0, i64 0, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #12
  %11 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2682"], [1 x %"struct.WTF::KeyValuePair.2682"]* %2, i64 0, i64 0, i32 1
  store i32 3, i32* %11, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2679"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2679"*), i32 1) #12
  %12 = call { %"struct.WTF::KeyValuePair.2682"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2679"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2679"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, i32* dereferenceable(4) %11) #12
  %13 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2682"], [1 x %"struct.WTF::KeyValuePair.2682"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %8, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map) #12
  br label %30

30:                                               ; preds = %5, %29, %1
  ret %"class.WTF::HashMap.2678"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16HTMLEmbedElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashMap.2678"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink16HTMLEmbedElement29ExistingLayoutEmbeddedContentEv(%"class.blink::HTMLEmbedElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %20, label %49

20:                                               ; preds = %14
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #12
  %22 = icmp eq %"class.blink::ContainerNode"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %24, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %43, %23
  %27 = phi %"class.blink::ContainerNode"* [ %21, %23 ], [ %44, %43 ]
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 48
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %26
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %36 = bitcast %"class.blink::Member"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %33, %26
  %44 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %28) #12
  %45 = icmp eq %"class.blink::ContainerNode"* %44, null
  br i1 %45, label %46, label %26

46:                                               ; preds = %43, %33, %20
  %47 = phi %"class.blink::ContainerNode"* [ null, %20 ], [ %27, %33 ], [ null, %43 ]
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 0, i32 0
  br label %49

49:                                               ; preds = %46, %14
  %50 = phi %"class.blink::Node"* [ %2, %14 ], [ %48, %46 ]
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 6, i32 0, i32 0
  br i1 %56, label %62, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRareData"**
  %60 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %60, i64 0, i32 1, i32 0, i32 0
  br label %64

62:                                               ; preds = %52
  %63 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRenderingData"**
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi %"class.blink::NodeRenderingData"** [ %61, %58 ], [ %63, %62 ]
  %66 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %66, i64 0, i32 1
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp eq %"class.blink::LayoutObject"* %68, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::LayoutObject"* %68 to i1 (%"class.blink::LayoutObject"*)***
  %72 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %72, i64 27
  %74 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* nonnull %68) #12
  %76 = bitcast %"class.blink::LayoutObject"* %68 to %"class.blink::LayoutEmbeddedContent"*
  %77 = select i1 %75, %"class.blink::LayoutEmbeddedContent"* %76, %"class.blink::LayoutEmbeddedContent"* null
  br label %78

78:                                               ; preds = %49, %64, %70
  %79 = phi %"class.blink::LayoutEmbeddedContent"* [ null, %49 ], [ %77, %70 ], [ null, %64 ]
  ret %"class.blink::LayoutEmbeddedContent"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLEmbedElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLEmbedElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %11 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLPlugInElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ %11, %9 ], [ true, %2 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLEmbedElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLEmbedElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %117

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %97, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  %21 = icmp eq i32 %18, 3
  br i1 %21, label %22, label %95

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %22
  %28 = load i8, i8* %20, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %95

36:                                               ; preds = %27
  %37 = getelementptr inbounds i8, i8* %20, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 101), align 1
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %84, label %95

46:                                               ; preds = %22
  %47 = bitcast %"class.WTF::StringImpl"* %19 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = add i16 %48, -65
  %50 = icmp ult i16 %49, 26
  %51 = zext i1 %50 to i16
  %52 = shl nuw nsw i16 %51, 5
  %53 = or i16 %52, %48
  %54 = zext i16 %53 to i32
  %55 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %95

58:                                               ; preds = %46
  %59 = getelementptr inbounds i16, i16* %47, i64 1
  %60 = load i16, i16* %59, align 2
  %61 = add i16 %60, -65
  %62 = icmp ult i16 %61, 26
  %63 = zext i1 %62 to i16
  %64 = shl nuw nsw i16 %63, 5
  %65 = or i16 %64, %60
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 101), align 1
  %68 = sext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %95

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1, i32 1
  %72 = bitcast i32* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = add i16 %73, -65
  %75 = icmp ult i16 %74, 26
  %76 = zext i1 %75 to i16
  %77 = shl nuw nsw i16 %76, 5
  %78 = or i16 %77, %73
  %79 = zext i16 %78 to i32
  %80 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %79, %81
  %83 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #12
  br i1 %82, label %113, label %102

84:                                               ; preds = %36
  %85 = getelementptr inbounds i8, i8* %20, i64 2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %90, %92
  %94 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  br i1 %93, label %113, label %102

95:                                               ; preds = %16, %46, %58, %27, %36
  %96 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  br label %102

97:                                               ; preds = %12
  %98 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %100, i64* %101, align 8
  br label %108

102:                                              ; preds = %84, %70, %95
  %103 = phi i8* [ %96, %95 ], [ %83, %70 ], [ %94, %84 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %104, align 8
  %105 = load i32, i32* %17, align 4
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %107 = bitcast i8** %106 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %107, align 8
  br label %108

108:                                              ; preds = %97, %102
  %109 = phi i8* [ %103, %102 ], [ %98, %97 ]
  %110 = phi i32 [ %105, %102 ], [ 0, %97 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  %112 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #12
  br i1 %112, label %115, label %119

113:                                              ; preds = %70, %84
  %114 = phi i8* [ %83, %70 ], [ %94, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #12
  br label %115

115:                                              ; preds = %113, %108
  %116 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"* %116, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 438, double 0.000000e+00, i32 5) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"* %116, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 165, double 0.000000e+00, i32 5) #12
  br label %119

117:                                              ; preds = %4
  %118 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLPlugInElement"* %118, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %119

119:                                              ; preds = %108, %115, %117
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, double, i32) local_unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLEmbedElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLEmbedElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %164

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %14 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %14, align 8
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %15) #12
  %17 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 3
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #12
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #12
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %12
  %37 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %38 = bitcast %"class.WTF::String"* %17 to i64*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #12
  br label %55

55:                                               ; preds = %36, %51, %54
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %13) #12
  br i1 %18, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %69

69:                                               ; preds = %55, %65, %68
  %70 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 1, i32* %74, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br label %132

78:                                               ; preds = %69
  %79 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %75, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %132, label %81

81:                                               ; preds = %78
  %82 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %17, i32 0, i32 %79) #12
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #12
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %89
  call void @llvm.trap() #12
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %84, %81
  %102 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %102, i64* %38, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %101, %114, %117
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %13) #12
  br i1 %83, label %132, label %119

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #12
  br label %132

132:                                              ; preds = %131, %128, %118, %77, %78
  %133 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %136, label %142, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRareData"**
  %140 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %140, i64 0, i32 1, i32 0, i32 0
  br label %144

142:                                              ; preds = %132
  %143 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRenderingData"**
  br label %144

144:                                              ; preds = %138, %142
  %145 = phi %"class.blink::NodeRenderingData"** [ %141, %138 ], [ %143, %142 ]
  %146 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %146, i64 0, i32 1
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %422, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %151, align 8
  %152 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 14
  store i8 1, i8* %152, align 8
  br i1 %136, label %157, label %153

153:                                              ; preds = %150
  %154 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRareData"**
  %155 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %155, i64 0, i32 1, i32 0, i32 0
  br label %159

157:                                              ; preds = %150
  %158 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRenderingData"**
  br label %159

159:                                              ; preds = %153, %157
  %160 = phi %"class.blink::NodeRenderingData"** [ %156, %153 ], [ %158, %157 ]
  %161 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %161, i64 0, i32 1
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %162, align 8
  call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %163, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %163, i8 zeroext 3) #12
  br label %422

164:                                              ; preds = %2
  %165 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kCodeAttrE, align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %166, align 8
  %168 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %167
  br i1 %168, label %169, label %229

169:                                              ; preds = %164
  %170 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %171 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %172 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %171, align 8
  %173 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %172, i64 0, i32 0
  %174 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %173) #12
  %175 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 4
  %176 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %176, label %194, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %194

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i33
  %186 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #12
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !3

191:                                              ; preds = %182
  tail call void @llvm.trap() #12
  unreachable

192:                                              ; preds = %182
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %183, align 4
  br label %194

194:                                              ; preds = %192, %177, %169
  %195 = ptrtoint %"class.WTF::StringImpl"* %174 to i64
  %196 = bitcast %"class.WTF::String"* %175 to i64*
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  store i64 %195, i64* %196, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #12
  br label %213

213:                                              ; preds = %194, %209, %212
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %170) #12
  br i1 %176, label %227, label %214

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #12
  br label %227

227:                                              ; preds = %213, %223, %226
  %228 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 14
  store i8 1, i8* %228, align 8
  br label %422

229:                                              ; preds = %164
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %232
  %234 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  br i1 %233, label %235, label %420

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %237 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %236, align 8
  %238 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %237, i64 0, i32 0
  %239 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %238) #12
  %240 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 4
  %241 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %241, label %259, label %242

242:                                              ; preds = %235
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %259

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = zext i32 %249 to i33
  %251 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %250, i33 1) #12
  %252 = extractvalue { i33, i1 } %251, 1
  %253 = extractvalue { i33, i1 } %251, 0
  %254 = icmp slt i33 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %257, !prof !3

256:                                              ; preds = %247
  tail call void @llvm.trap() #12
  unreachable

257:                                              ; preds = %247
  %258 = trunc i33 %253 to i32
  store i32 %258, i32* %248, align 4
  br label %259

259:                                              ; preds = %257, %242, %235
  %260 = ptrtoint %"class.WTF::StringImpl"* %239 to i64
  %261 = bitcast %"class.WTF::String"* %240 to i64*
  %262 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %240, i64 0, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  store i64 %260, i64* %261, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #12
  br label %278

278:                                              ; preds = %259, %274, %277
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %234) #12
  br i1 %241, label %292, label %279

279:                                              ; preds = %278
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #12
  br label %292

292:                                              ; preds = %278, %288, %291
  %293 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %296, label %302, label %298

298:                                              ; preds = %292
  %299 = bitcast %"class.blink::NodeData"** %297 to %"class.blink::NodeRareData"**
  %300 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %300, i64 0, i32 1, i32 0, i32 0
  br label %304

302:                                              ; preds = %292
  %303 = bitcast %"class.blink::NodeData"** %297 to %"class.blink::NodeRenderingData"**
  br label %304

304:                                              ; preds = %298, %302
  %305 = phi %"class.blink::NodeRenderingData"** [ %301, %298 ], [ %303, %302 ]
  %306 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %306, i64 0, i32 1
  %308 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %307, align 8
  %309 = icmp eq %"class.blink::LayoutObject"* %308, null
  br i1 %309, label %339, label %310

310:                                              ; preds = %304
  %311 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"* %234) #12
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = load i32, i32* %293, align 8
  br label %339

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 14
  store i8 1, i8* %315, align 8
  %316 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 6
  %317 = getelementptr inbounds %"class.blink::Member.49", %"class.blink::Member.49"* %316, i64 0, i32 0, i32 0
  %318 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %317, align 8
  %319 = icmp eq %"class.blink::HTMLImageLoader"* %318, null
  br i1 %319, label %320, label %336

320:                                              ; preds = %314
  %321 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64 136) #12
  %322 = bitcast i8* %321 to %"class.blink::HTMLImageLoader"*
  %323 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"* %322, %"class.blink::Element"* %323) #12
  %324 = getelementptr inbounds i8, i8* %321, i64 -4
  %325 = bitcast i8* %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = or i16 %326, 1
  store atomic i16 %327, i16* %325 release, align 2
  %328 = ptrtoint i8* %321 to i64
  %329 = bitcast %"class.blink::Member.49"* %316 to i64*
  store atomic i64 %328, i64* %329 monotonic, align 8
  %330 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %331 = icmp eq i32 %330, 0
  %332 = bitcast i8* %321 to %"class.blink::HTMLImageLoader"*
  br i1 %331, label %336, label %333

333:                                              ; preds = %320
  %334 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %321) #12
  %335 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %317, align 8
  br label %336

336:                                              ; preds = %314, %333, %320
  %337 = phi %"class.blink::HTMLImageLoader"* [ %318, %314 ], [ %335, %333 ], [ %332, %320 ]
  %338 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %337, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %338, i32 1, i32 1) #12
  br label %422

339:                                              ; preds = %312, %304
  %340 = phi i32 [ %313, %312 ], [ %294, %304 ]
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %347, label %343

343:                                              ; preds = %339
  %344 = bitcast %"class.blink::NodeData"** %297 to %"class.blink::NodeRareData"**
  %345 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %345, i64 0, i32 1, i32 0, i32 0
  br label %349

347:                                              ; preds = %339
  %348 = bitcast %"class.blink::NodeData"** %297 to %"class.blink::NodeRenderingData"**
  br label %349

349:                                              ; preds = %343, %347
  %350 = phi %"class.blink::NodeRenderingData"** [ %346, %343 ], [ %348, %347 ]
  %351 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %351, i64 0, i32 1
  %353 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %352, align 8
  %354 = icmp eq %"class.blink::LayoutObject"* %353, null
  br i1 %354, label %422, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %357 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %356, align 8
  %358 = icmp eq %"class.blink::ElementData"* %357, null
  br i1 %358, label %408, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %357, i64 0, i32 0, i32 0, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %371, label %364

364:                                              ; preds = %359
  %365 = bitcast %"class.blink::ElementData"* %357 to %"class.blink::UniqueElementData"*
  %366 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %357, i64 1, i32 1
  %367 = bitcast %"class.blink::Member.14"* %366 to %"class.blink::Attribute"**
  %368 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %365, i64 0, i32 2, i32 0, i32 0, i32 2
  %370 = load i32, i32* %369, align 4
  br label %376

371:                                              ; preds = %359
  %372 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %357, i64 1
  %373 = bitcast %"class.blink::ElementData"* %372 to %"class.blink::Attribute"*
  %374 = lshr i32 %361, 1
  %375 = and i32 %374, 268435455
  br label %376

376:                                              ; preds = %371, %364
  %377 = phi %"class.blink::Attribute"* [ %373, %371 ], [ %368, %364 ]
  %378 = phi i32 [ %375, %371 ], [ %370, %364 ]
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %377, i64 %379
  %381 = icmp eq i32 %378, 0
  br i1 %381, label %408, label %382

382:                                              ; preds = %376
  %383 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %384 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %383, i64 0, i32 3, i32 0, i32 0, i32 0
  %385 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %383, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %386

386:                                              ; preds = %402, %382
  %387 = phi %"class.blink::Attribute"* [ %377, %382 ], [ %403, %402 ]
  %388 = phi i32 [ 0, %382 ], [ %404, %402 ]
  %389 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %387, i64 0, i32 0, i32 0, i32 0
  %390 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %389, align 8
  %391 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %390, %383
  br i1 %391, label %406, label %392

392:                                              ; preds = %386
  %393 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %390, i64 0, i32 3, i32 0, i32 0, i32 0
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %393, align 8
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %384, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %394, %395
  br i1 %396, label %397, label %402

397:                                              ; preds = %392
  %398 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %390, i64 0, i32 4, i32 0, i32 0, i32 0
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %399, %400
  br i1 %401, label %406, label %402

402:                                              ; preds = %397, %392
  %403 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %387, i64 1
  %404 = add i32 %388, 1
  %405 = icmp eq %"class.blink::Attribute"* %403, %380
  br i1 %405, label %408, label %386

406:                                              ; preds = %386, %397
  %407 = icmp eq i32 %388, -1
  br i1 %407, label %408, label %418

408:                                              ; preds = %402, %406, %376, %355
  %409 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %410 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %410, i64 0, i32 2, i32 0, i32 0
  %412 = load %"class.blink::Document"*, %"class.blink::Document"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %412, i64 0, i32 2
  %414 = bitcast %"class.blink::UseCounter"* %413 to void (%"class.blink::UseCounter"*, i32)***
  %415 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %415, i64 3
  %417 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %416, align 8
  tail call void %417(%"class.blink::UseCounter"* %413, i32 3749) #12
  br label %418

418:                                              ; preds = %406, %408
  %419 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %419, align 8
  tail call void @_ZN5blink17HTMLPlugInElement30ReattachOnPluginChangeIfNeededEv(%"class.blink::HTMLPlugInElement"* %234) #12
  br label %422

420:                                              ; preds = %229
  %421 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"* %421, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  br label %422

422:                                              ; preds = %159, %144, %349, %227, %336, %418, %420
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #2

declare void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement30ReattachOnPluginChangeIfNeededEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #2

declare void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLEmbedElement19ParametersForPluginERNS_16PluginParametersE(%"class.blink::HTMLEmbedElement"*, %"class.blink::PluginParameters"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %7) #12
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = load i32, i32* null, align 536870912
  br label %24

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.14"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %30

24:                                               ; preds = %12, %10
  %25 = phi i32 [ %11, %10 ], [ %14, %12 ]
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %25, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %17, %24
  %31 = phi i32 [ %29, %24 ], [ %23, %17 ]
  %32 = phi %"class.blink::Attribute"* [ %27, %24 ], [ %21, %17 ]
  %33 = zext i32 %31 to i64
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %33
  %35 = icmp eq i32 %31, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %37, %2, %30
  ret void

37:                                               ; preds = %30, %37
  %38 = phi %"class.blink::Attribute"* [ %39, %37 ], [ %32, %30 ]
  tail call void @_ZN5blink16PluginParameters15AppendAttributeERKNS_9AttributeE(%"class.blink::PluginParameters"* %1, %"class.blink::Attribute"* dereferenceable(16) %38) #12
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 1
  %40 = icmp eq %"class.blink::Attribute"* %39, %34
  br i1 %40, label %36, label %37
}

declare void @_ZN5blink16PluginParameters15AppendAttributeERKNS_9AttributeE(%"class.blink::PluginParameters"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLEmbedElement20UpdatePluginInternalEv(%"class.blink::HTMLEmbedElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PluginParameters", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %7 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 10
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %1, %12
  %17 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %278, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %278, label %24

24:                                               ; preds = %20, %12
  %25 = tail call zeroext i1 @_ZN5blink17HTMLPlugInElement21AllowedToLoadFrameURLERKN3WTF6StringE(%"class.blink::HTMLPlugInElement"* %6, %"class.WTF::String"* dereferenceable(8) %8) #12
  br i1 %25, label %26, label %278

26:                                               ; preds = %24
  %27 = bitcast %"class.blink::PluginParameters"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 32, i1 false) #12
  %31 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %68, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %35) #12
  %36 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %37 = icmp eq %"class.blink::ElementData"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = load i32, i32* null, align 536870912
  br label %52

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::ElementData"* %36 to %"class.blink::UniqueElementData"*
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 1, i32 1
  %48 = bitcast %"class.blink::Member.14"* %47 to %"class.blink::Attribute"**
  %49 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %46, i64 0, i32 2, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  br label %58

52:                                               ; preds = %40, %38
  %53 = phi i32 [ %39, %38 ], [ %42, %40 ]
  %54 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 1
  %55 = bitcast %"class.blink::ElementData"* %54 to %"class.blink::Attribute"*
  %56 = lshr i32 %53, 1
  %57 = and i32 %56, 268435455
  br label %58

58:                                               ; preds = %52, %45
  %59 = phi i32 [ %57, %52 ], [ %51, %45 ]
  %60 = phi %"class.blink::Attribute"* [ %55, %52 ], [ %49, %45 ]
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 %61
  %63 = icmp eq i32 %59, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %58, %64
  %65 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %60, %58 ]
  call void @_ZN5blink16PluginParameters15AppendAttributeERKNS_9AttributeE(%"class.blink::PluginParameters"* nonnull %2, %"class.blink::Attribute"* dereferenceable(16) %65) #12
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %26, %58
  %69 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %72, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::NodeData"** %73 to %"class.blink::NodeRareData"**
  %76 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %76, i64 0, i32 1, i32 0, i32 0
  br label %80

78:                                               ; preds = %68
  %79 = bitcast %"class.blink::NodeData"** %73 to %"class.blink::NodeRenderingData"**
  br label %80

80:                                               ; preds = %74, %78
  %81 = phi %"class.blink::NodeRenderingData"** [ %77, %74 ], [ %79, %78 ]
  %82 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %82, i64 0, i32 1
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %83, align 8
  %85 = icmp eq %"class.blink::LayoutObject"* %84, null
  br i1 %85, label %203, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %87) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 112, i1 false)
  %88 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  %92 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %91) #12
  %93 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %92) #12
  %94 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %94) #12
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Document"*, %"class.blink::Document"** %96, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::Document"* %97, %"class.WTF::String"* dereferenceable(8) %8) #12
  %98 = bitcast %"class.blink::LocalFrameClient"* %93 to void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)***
  %99 = load void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)**, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %99, i64 67
  %101 = load void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %100, align 8
  call void %101(%"class.blink::KURL"* nonnull sret %3, %"class.blink::LocalFrameClient"* %93, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %94) #12
  %102 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %3) #12
  br i1 %102, label %201, label %103

103:                                              ; preds = %86
  %104 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #12
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !3

121:                                              ; preds = %112
  call void @llvm.trap() #12
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %122, %107, %103
  %125 = ptrtoint %"class.WTF::StringImpl"* %105 to i64
  %126 = bitcast %"class.WTF::String"* %8 to i64*
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %125, i64* %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #12
  br label %142

142:                                              ; preds = %124, %138, %141
  %143 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #12
  %144 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 3
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %165, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %165

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i33
  %157 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #12
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !3

162:                                              ; preds = %153
  call void @llvm.trap() #12
  unreachable

163:                                              ; preds = %153
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %154, align 4
  br label %165

165:                                              ; preds = %163, %148, %142
  %166 = ptrtoint %"class.WTF::StringImpl"* %146 to i64
  %167 = bitcast %"class.WTF::String"* %144 to i64*
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %144, i64 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  store i64 %166, i64* %167, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #12
  br label %184

184:                                              ; preds = %165, %180, %183
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %6) #12
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #12
  br label %200

200:                                              ; preds = %184, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #12
  br label %201

201:                                              ; preds = %200, %86
  %202 = call zeroext i1 @_ZN5blink17HTMLPlugInElement13RequestObjectERKNS_16PluginParametersE(%"class.blink::HTMLPlugInElement"* %6, %"class.blink::PluginParameters"* nonnull dereferenceable(32) %2) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %87) #12
  br label %203

203:                                              ; preds = %80, %201
  %204 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %2, i64 0, i32 1
  %205 = getelementptr inbounds %"class.WTF::Vector.1387", %"class.WTF::Vector.1387"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::String"*, %"class.WTF::String"** %205, align 8
  %207 = icmp eq %"class.WTF::String"* %206, null
  br i1 %207, label %241, label %208, !prof !4

208:                                              ; preds = %203
  %209 = bitcast %"class.WTF::String"* %206 to i8*
  %210 = load i32, i32* %30, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212, !prof !3

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %206, i64 %213
  br label %215

215:                                              ; preds = %233, %212
  %216 = phi %"class.WTF::String"* [ %234, %233 ], [ %206, %212 ]
  %217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #12
  br label %233

233:                                              ; preds = %232, %229, %215
  %234 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %216, i64 1
  %235 = icmp eq %"class.WTF::String"* %234, %214
  br i1 %235, label %236, label %215

236:                                              ; preds = %233
  store i32 0, i32* %30, align 4
  %237 = bitcast %"class.WTF::Vector.1387"* %204 to i8**
  %238 = load i8*, i8** %237, align 8
  br label %239

239:                                              ; preds = %236, %208
  %240 = phi i8* [ %238, %236 ], [ %209, %208 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %240) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %205, align 8
  br label %241

241:                                              ; preds = %239, %203
  %242 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %243 = icmp eq %"class.WTF::String"* %242, null
  br i1 %243, label %277, label %244, !prof !4

244:                                              ; preds = %241
  %245 = bitcast %"class.WTF::String"* %242 to i8*
  %246 = load i32, i32* %29, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %275, label %248, !prof !3

248:                                              ; preds = %244
  %249 = zext i32 %246 to i64
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %242, i64 %249
  br label %251

251:                                              ; preds = %269, %248
  %252 = phi %"class.WTF::String"* [ %270, %269 ], [ %242, %248 ]
  %253 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %252, i64 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #12
  br label %269

269:                                              ; preds = %268, %265, %251
  %270 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %252, i64 1
  %271 = icmp eq %"class.WTF::String"* %270, %250
  br i1 %271, label %272, label %251

272:                                              ; preds = %269
  store i32 0, i32* %29, align 4
  %273 = bitcast %"class.blink::PluginParameters"* %2 to i8**
  %274 = load i8*, i8** %273, align 8
  br label %275

275:                                              ; preds = %272, %244
  %276 = phi i8* [ %274, %272 ], [ %245, %244 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %276) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %277

277:                                              ; preds = %241, %275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #12
  br label %278

278:                                              ; preds = %16, %24, %20, %277
  ret void
}

declare zeroext i1 @_ZN5blink17HTMLPlugInElement21AllowedToLoadFrameURLERKN3WTF6StringE(%"class.blink::HTMLPlugInElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17HTMLPlugInElement13RequestObjectERKNS_16PluginParametersE(%"class.blink::HTMLPlugInElement"*, %"class.blink::PluginParameters"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLEmbedElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::HTMLEmbedElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %4 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"* %3) #12
  %5 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %4, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %5, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #12
  br label %139

8:                                                ; preds = %2
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %10, align 8
  %12 = icmp eq %"class.blink::ElementData"* %11, null
  br i1 %12, label %139, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %11 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1, i32 1
  %21 = bitcast %"class.blink::Member.14"* %20 to %"class.blink::Attribute"**
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %30

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %15, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %25, %18
  %31 = phi %"class.blink::Attribute"* [ %27, %25 ], [ %22, %18 ]
  %32 = phi i32 [ %29, %25 ], [ %24, %18 ]
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %57, %36
  %42 = phi %"class.blink::Attribute"* [ %31, %36 ], [ %58, %57 ]
  %43 = phi i32 [ 0, %36 ], [ %59, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %38
  br i1 %46, label %61, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 1
  %59 = add i32 %43, 1
  %60 = icmp eq %"class.blink::Attribute"* %58, %34
  br i1 %60, label %63, label %41

61:                                               ; preds = %41, %52
  %62 = icmp eq i32 %43, -1
  br i1 %62, label %63, label %110

63:                                               ; preds = %57, %61, %30
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  br i1 %17, label %72, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.blink::ElementData"* %11 to %"class.blink::UniqueElementData"*
  %67 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1, i32 1
  %68 = bitcast %"class.blink::Member.14"* %67 to %"class.blink::Attribute"**
  %69 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %66, i64 0, i32 2, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  br label %77

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1
  %74 = bitcast %"class.blink::ElementData"* %73 to %"class.blink::Attribute"*
  %75 = lshr i32 %15, 1
  %76 = and i32 %75, 268435455
  br label %77

77:                                               ; preds = %72, %65
  %78 = phi %"class.blink::Attribute"* [ %74, %72 ], [ %69, %65 ]
  %79 = phi i32 [ %76, %72 ], [ %71, %65 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %139, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %88

88:                                               ; preds = %104, %83
  %89 = phi %"class.blink::Attribute"* [ %78, %83 ], [ %105, %104 ]
  %90 = phi i32 [ 0, %83 ], [ %106, %104 ]
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %92, %85
  br i1 %93, label %108, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %96, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %101, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %99, %94
  %105 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %89, i64 1
  %106 = add i32 %90, 1
  %107 = icmp eq %"class.blink::Attribute"* %105, %81
  br i1 %107, label %139, label %88

108:                                              ; preds = %88, %99
  %109 = icmp eq i32 %90, -1
  br i1 %109, label %139, label %110

110:                                              ; preds = %61, %108
  %111 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %111) #12
  %113 = icmp eq %"class.blink::ContainerNode"* %112, null
  br i1 %113, label %137, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %112, i64 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 48
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %137

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %112, i64 0, i32 0
  %121 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %122 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 1, i32 2
  %125 = bitcast %"class.blink::Member"* %124 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %128, %130
  %132 = bitcast %"class.blink::ContainerNode"* %112 to %"class.blink::HTMLObjectElement"*
  br i1 %131, label %133, label %137

133:                                              ; preds = %119
  %134 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement30WillUseFallbackContentAtLayoutEv(%"class.blink::HTMLObjectElement"* nonnull %132) #12
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement18UseFallbackContentEv(%"class.blink::HTMLObjectElement"* nonnull %132) #12
  br i1 %136, label %137, label %139

137:                                              ; preds = %119, %110, %114, %135, %133
  %138 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %5, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #12
  br label %139

139:                                              ; preds = %104, %108, %77, %8, %137, %135, %6
  %140 = phi i1 [ %7, %6 ], [ false, %108 ], [ %138, %137 ], [ false, %135 ], [ false, %8 ], [ false, %77 ], [ false, %104 ]
  ret i1 %140
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLObjectElement30WillUseFallbackContentAtLayoutEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLObjectElement18UseFallbackContentEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLEmbedElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLEmbedElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink16HTMLEmbedElement24SubResourceAttributeNameEv(%"class.blink::HTMLEmbedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  ret %"class.blink::QualifiedName"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLEmbedElement20IsInteractiveContentEv(%"class.blink::HTMLEmbedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLEmbedElement9IsExposedEv(%"class.blink::HTMLEmbedElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #12
  %4 = icmp eq %"class.blink::ContainerNode"* %3, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %25, %5
  %9 = phi %"class.blink::ContainerNode"* [ %3, %5 ], [ %26, %25 ]
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %8
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %15, %8
  %26 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #12
  %27 = icmp eq %"class.blink::ContainerNode"* %26, null
  br i1 %27, label %61, label %8

28:                                               ; preds = %15
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::HTMLObjectElement"*
  %32 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"* nonnull %31) #12
  br i1 %32, label %61, label %36

33:                                               ; preds = %48
  %34 = bitcast %"class.blink::ContainerNode"* %42 to %"class.blink::HTMLObjectElement"*
  %35 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"* nonnull %34) #12
  br i1 %35, label %61, label %36

36:                                               ; preds = %28, %33
  %37 = phi %"class.blink::ContainerNode"* [ %42, %33 ], [ %9, %28 ]
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  %39 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #12
  %40 = icmp eq %"class.blink::ContainerNode"* %39, null
  br i1 %40, label %61, label %41

41:                                               ; preds = %36, %58
  %42 = phi %"class.blink::ContainerNode"* [ %59, %58 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %41
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %51 = bitcast %"class.blink::Member"* %50 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %33, label %58

58:                                               ; preds = %48, %41
  %59 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %43) #12
  %60 = icmp eq %"class.blink::ContainerNode"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %25, %33, %36, %58, %28, %1
  %62 = phi i1 [ true, %1 ], [ false, %28 ], [ true, %58 ], [ true, %36 ], [ false, %33 ], [ true, %25 ]
  ret i1 %62
}

declare zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HTMLEmbedElementD0Ev(%"class.blink::HTMLEmbedElement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLEmbedElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %2) #12
  ret void
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16HTMLEmbedElement18GetWrapperTypeInfoEv(%"class.blink::HTMLEmbedElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLEmbedElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement23RemoveAllEventListenersEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLPlugInElement23CanContainRangeEndPointEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink17HTMLPlugInElement10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::HTMLPlugInElement"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement17CanStartSelectionEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLPlugInElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement16DetachLayoutTreeEb(%"class.blink::HTMLPlugInElement"*, i1 zeroext) unnamed_addr #2

declare i32 @_ZN5blink17HTMLPlugInElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink17HTMLPlugInElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink17HTMLPlugInElement29WillRespondToMouseClickEventsEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #12
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink17HTMLPlugInElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #2

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #2

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #2

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLPlugInElement13SupportsFocusEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement19IsKeyboardFocusableEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement21FinishParsingChildrenEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink17HTMLPlugInElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16HTMLEmbedElement16GetNamedItemTypeEv(%"class.blink::HTMLEmbedElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement16IsFocusableStyleEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink17HTMLPlugInElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement19HasCustomFocusLogicEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement15IsPluginElementEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

declare void @_ZN5blink17HTMLPlugInElement22DisconnectContentFrameEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16HTMLEmbedElement9OwnerTypeEv(%"class.blink::HTMLEmbedElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  ret %"class.blink::Frame"* %3
}

declare void @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #2

declare void @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

declare void @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #2

declare void @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 4
  ret %"struct.blink::FramePolicy"* %2
}

declare void @_ZN5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %2, align 8
  %4 = icmp eq %"class.blink::EmbeddedContentView"* %3, null
  ret i1 %4
}

declare i32 @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

declare void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SecurityOrigin"* @_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() #12
  ret %"class.blink::SecurityOrigin"* %2
}

declare void @_ZNK5blink17HTMLPlugInElement24ConstructContainerPolicyEv(%"class.std::__1::vector"* sret, %"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv(%"class.base::flat_map"* noalias sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv(%"class.mojo::StructPtr.2737"* sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLPlugInElement8IsPluginEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasFallbackContentEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

declare %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink17HTMLPlugInElement34LayoutEmbeddedContentForJSBindingsEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_NK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink16HTMLEmbedElementD1Ev(%"class.blink::HTMLEmbedElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 -1, i32 0, i32 5, i32 3, i32 5
  %3 = bitcast %"struct.url::Component"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink16HTMLEmbedElementD0Ev(%"class.blink::HTMLEmbedElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 -1, i32 0, i32 5, i32 3, i32 5
  %3 = bitcast %"struct.url::Component"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 14
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::Frame"**
  %5 = load %"class.blink::Frame"*, %"class.blink::Frame"** %4, align 8
  ret %"class.blink::Frame"* %5
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 16
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"struct.blink::FramePolicy"*
  ret %"struct.blink::FramePolicy"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 12
  %5 = bitcast %"class.blink::FrameOwner"* %4 to %"class.blink::ElementData"**
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #12
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 15
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::EmbeddedContentView"**
  %5 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %4, align 8
  %6 = icmp eq %"class.blink::EmbeddedContentView"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FrameOwner19CSPAttributeChangedEv(%"class.blink::FrameOwner"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %4, i64 0, i32 7
  store i8 %5, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn208_NK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn208_N5blink16HTMLEmbedElementD1Ev(%"class.blink::HTMLEmbedElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 -1, i32 0, i32 0, i32 4, i32 4
  %3 = bitcast i8* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn208_N5blink16HTMLEmbedElementD0Ev(%"class.blink::HTMLEmbedElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLEmbedElement", %"class.blink::HTMLEmbedElement"* %0, i64 -1, i32 0, i32 0, i32 4, i32 4
  %3 = bitcast i8* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -26
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Node"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::Node"* %3) #12
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #12
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -26
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::HTMLPlugInElement"*
  %4 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv(%"class.blink::HTMLPlugInElement"* %3) #12
  ret i1 %4
}

declare void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2905, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !4

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2905* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon.2905, %class.anon.2905* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2905, %class.anon.2905* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %class.anon.2905* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #12
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2905* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 192) #13
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #12
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #12
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #12
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list.2913"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.2913"* %31, i64 1) #12
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #12
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #12
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.anon.2905, %class.anon.2905* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #12
  %40 = getelementptr inbounds %class.anon.2905, %class.anon.2905* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #12
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #12
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #12
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #12
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #12
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.2913"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base.2915"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !5

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base.2915"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base.2915"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base.2915"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.2915"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !7

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.2915"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base.2915"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base.2915"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base.2915"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base.2915"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list.2913"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !8

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list.2913"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base.2915"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base.2915"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base.2915"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base.2915"*
  %155 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base.2915"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base.2915"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base.2915"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base.2915"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base.2915"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base.2915"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  %178 = icmp eq %"struct.std::__1::__list_node_base.2915"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #13, !noalias !9
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base.2915"**
  store %"struct.std::__1::__list_node_base.2915"* null, %"struct.std::__1::__list_node_base.2915"** %183, align 8, !noalias !9
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #13
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base.2915"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base.2915"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base.2915"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base.2915"*
  %210 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.2915"* %210, %"struct.std::__1::__list_node_base.2915"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list.2913", %"class.std::__1::list.2913"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base.2915"*, %"struct.std::__1::__list_node_base.2915"** %212, align 8
  store %"struct.std::__1::__list_node_base.2915"* %213, %"struct.std::__1::__list_node_base.2915"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base.2915", %"struct.std::__1::__list_node_base.2915"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base.2915"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base.2915"* %209, %"struct.std::__1::__list_node_base.2915"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2679"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2682"*
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %55 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %30, i64 %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"struct.WTF::KeyValuePair.2682"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %30, i64 %34, i32 1
  store i32 -128, i32* %58, align 8
  %59 = add nuw nsw i64 %34, 1
  %60 = icmp eq i64 %59, %27
  br i1 %60, label %61, label %33

61:                                               ; preds = %55
  %62 = call %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2679"* %0, %"struct.WTF::KeyValuePair.2682"* %30, i32 %17, %"struct.WTF::KeyValuePair.2682"* null) #12
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2679"*, %"struct.WTF::KeyValuePair.2682"*, i32, %"struct.WTF::KeyValuePair.2682"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2679"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.2682"*, %"struct.WTF::KeyValuePair.2682"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %16 to i64
  br label %61

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable.2679"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.2682"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.2682"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.2682"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #12
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair.2682"* %23

61:                                               ; preds = %13, %160
  %62 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %63 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %64 = phi %"struct.WTF::KeyValuePair.2682"* [ %16, %13 ], [ %163, %160 ]
  %65 = phi %"struct.WTF::KeyValuePair.2682"* [ null, %13 ], [ %164, %160 ]
  %66 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair.2682"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %160
    i64 0, label %160
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair.2682"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.2682"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair.2682"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair.2682"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.2682"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair.2682"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.2682"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %64, i64 %67, i32 1
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = load %"struct.WTF::KeyValuePair.2682"*, %"struct.WTF::KeyValuePair.2682"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %154, i64 %67
  %156 = icmp eq %"struct.WTF::KeyValuePair.2682"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair.2682"* %131, %"struct.WTF::KeyValuePair.2682"* %65
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair.2682"* %154 to i64
  br label %160

160:                                              ; preds = %61, %61, %148
  %161 = phi i64 [ %62, %61 ], [ %159, %148 ], [ %62, %61 ]
  %162 = phi i32 [ %63, %61 ], [ %158, %148 ], [ %63, %61 ]
  %163 = phi %"struct.WTF::KeyValuePair.2682"* [ %64, %61 ], [ %154, %148 ], [ %64, %61 ]
  %164 = phi %"struct.WTF::KeyValuePair.2682"* [ %65, %61 ], [ %157, %148 ], [ %65, %61 ]
  %165 = add i32 %66, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2682"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2679"*, %"class.WTF::AtomicString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2682"*, %"struct.WTF::KeyValuePair.2682"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2682"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2679"* %0, %"struct.WTF::KeyValuePair.2682"* null)
  %9 = load %"struct.WTF::KeyValuePair.2682"*, %"struct.WTF::KeyValuePair.2682"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2682"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %97, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.2682"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.2682"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.2682"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %151, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.2682"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.2682"* %53, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %62
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #12
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  tail call void @llvm.trap() #12
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %64, %69, %84
  %87 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %88 = bitcast %"struct.WTF::KeyValuePair.2682"* %53 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %53, i64 0, i32 1
  store i32 -128, i32* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %97

97:                                               ; preds = %10, %62, %86
  %98 = phi %"class.WTF::StringImpl"* [ %96, %86 ], [ %17, %62 ], [ %17, %10 ]
  %99 = phi %"struct.WTF::KeyValuePair.2682"* [ %53, %86 ], [ %58, %62 ], [ %23, %10 ]
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #12
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %106
  tail call void @llvm.trap() #12
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %101, %97
  %119 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair.2682"* %99 to i64*
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %119, i64* %120, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #12
  br label %137

137:                                              ; preds = %118, %133, %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %99, i64 0, i32 1
  %139 = load i32, i32* %2, align 4
  store i32 %139, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %137
  %150 = tail call %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2679"* %0, %"struct.WTF::KeyValuePair.2682"* %99)
  br label %151

151:                                              ; preds = %49, %137, %149
  %152 = phi i8 [ 1, %137 ], [ 1, %149 ], [ 0, %49 ]
  %153 = phi %"struct.WTF::KeyValuePair.2682"* [ %99, %137 ], [ %150, %149 ], [ %42, %49 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair.2682"*, i8 } undef, %"struct.WTF::KeyValuePair.2682"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair.2682"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair.2682"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2679"*, %"struct.WTF::KeyValuePair.2682"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2679", %"class.WTF::HashTable.2679"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2682"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %63, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #12
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %51
  call void @llvm.trap() #12
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %41
  %64 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %65 = bitcast %"struct.WTF::KeyValuePair.2682"* %43 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2682", %"struct.WTF::KeyValuePair.2682"* %36, i64 %42, i32 1
  store i32 -128, i32* %66, align 8
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %63, %31
  %70 = call %"struct.WTF::KeyValuePair.2682"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2679"* %0, %"struct.WTF::KeyValuePair.2682"* %36, i32 %32, %"struct.WTF::KeyValuePair.2682"* %1) #12
  ret %"struct.WTF::KeyValuePair.2682"* %70
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"*, %"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #12
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %40, i8* %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #12
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ImageLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::ImageLoader"*)***
  %4 = load void (%"class.blink::ImageLoader"*)**, void (%"class.blink::ImageLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::ImageLoader"*)*, void (%"class.blink::ImageLoader"*)** %4, align 8
  tail call void %5(%"class.blink::ImageLoader"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
