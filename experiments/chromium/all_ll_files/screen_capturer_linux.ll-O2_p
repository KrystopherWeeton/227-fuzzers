; ModuleID = '../../third_party/webrtc/modules/desktop_capture/screen_capturer_linux.cc'
source_filename = "../../third_party/webrtc/modules/desktop_capture/screen_capturer_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::DesktopCapturer" = type { i32 (...)** }
%"class.webrtc::DesktopCaptureOptions" = type <{ %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr.8", i8, i8, i8, i8, [4 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.webrtc::SharedXDisplay"* }
%"class.webrtc::SharedXDisplay" = type { %"class.rtc::RefCountedNonVirtual", %struct._XDisplay*, %"class.std::__1::map" }
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct._XDisplay = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.rtc::scoped_refptr.8" = type { %"class.webrtc::FullScreenWindowDetector"* }
%"class.webrtc::FullScreenWindowDetector" = type { %"class.rtc::RefCountedNonVirtual.9", %"class.std::__1::unique_ptr.10", %"class.std::__1::function", i64, i64, i64, %"class.std::__1::vector" }
%"class.rtc::RefCountedNonVirtual.9" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.webrtc::FullScreenApplicationHandler"* }
%"class.webrtc::FullScreenApplicationHandler" = type { i32 (...)**, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.webrtc::FullScreenApplicationHandler"* (%"union.std::__1::__function::__policy_storage"*, i64)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"*, %"class.std::__1::__compressed_pair.21" }
%"struct.webrtc::DesktopCapturer::Source" = type { i64, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.webrtc::DesktopCapturer::Source"* }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer23CreateRawScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN6webrtc15DesktopCapturer21IsRunningUnderWaylandEv() #2
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call %"class.webrtc::DesktopCapturer"* @_ZN6webrtc20BaseCapturerPipeWire17CreateRawCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0) #2
  br label %11

9:                                                ; preds = %1, %5
  %10 = tail call %"class.webrtc::DesktopCapturer"* @_ZN6webrtc17ScreenCapturerX1123CreateRawScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0) #2
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi %"class.webrtc::DesktopCapturer"* [ %8, %7 ], [ %10, %9 ]
  ret %"class.webrtc::DesktopCapturer"* %12
}

declare zeroext i1 @_ZN6webrtc15DesktopCapturer21IsRunningUnderWaylandEv() local_unnamed_addr #1

declare %"class.webrtc::DesktopCapturer"* @_ZN6webrtc20BaseCapturerPipeWire17CreateRawCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.webrtc::DesktopCapturer"* @_ZN6webrtc17ScreenCapturerX1123CreateRawScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
