; ModuleID = '../../third_party/abseil-cpp/absl/synchronization/internal/waiter.cc'
source_filename = "../../third_party/abseil-cpp/absl/synchronization/internal/waiter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::synchronization_internal::Waiter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.timespec = type { i64, i64 }
%"struct.absl::base_internal::ThreadIdentity" = type { %"struct.absl::base_internal::PerThreadSynch", %"struct.absl::base_internal::ThreadIdentity::WaiterState", %"struct.std::__1::atomic"*, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.5", %"struct.absl::base_internal::ThreadIdentity"* }
%"struct.absl::base_internal::PerThreadSynch" = type { %"struct.absl::base_internal::PerThreadSynch"*, %"struct.absl::base_internal::PerThreadSynch"*, i8, i8, i8, i8, i8, i32, %"struct.std::__1::atomic.1", %"struct.absl::SynchWaitParams"*, i64, i64, %"struct.absl::SynchLocksHeld"* }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }
%"struct.absl::SynchWaitParams" = type opaque
%"struct.absl::SynchLocksHeld" = type opaque
%"struct.absl::base_internal::ThreadIdentity::WaiterState" = type { [128 x i8] }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }

@.str = private unnamed_addr constant [69 x i8] c"../../third_party/abseil-cpp/absl/synchronization/internal/waiter.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Futex operation failed with error %d\0A\00", align 1

@_ZN4absl24synchronization_internal6WaiterC1Ev = hidden unnamed_addr alias void (%"class.absl::synchronization_internal::Waiter"*), void (%"class.absl::synchronization_internal::Waiter"*)* @_ZN4absl24synchronization_internal6WaiterC2Ev
@_ZN4absl24synchronization_internal6WaiterD1Ev = hidden unnamed_addr alias void (%"class.absl::synchronization_internal::Waiter"*), void (%"class.absl::synchronization_internal::Waiter"*)* @_ZN4absl24synchronization_internal6WaiterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal6WaiterC2Ev(%"class.absl::synchronization_internal::Waiter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::synchronization_internal::Waiter", %"class.absl::synchronization_internal::Waiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %2 monotonic, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4absl24synchronization_internal6WaiterD2Ev(%"class.absl::synchronization_internal::Waiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl24synchronization_internal6Waiter4WaitENS0_13KernelTimeoutE(%"class.absl::synchronization_internal::Waiter"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.timespec, align 8
  %4 = getelementptr inbounds %"class.absl::synchronization_internal::Waiter", %"class.absl::synchronization_internal::Waiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = icmp eq i64 %1, 0
  %6 = bitcast %struct.timespec* %3 to i8*
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %9 = icmp sgt i64 %1, 0
  %10 = select i1 %9, i64 %1, i64 0
  %11 = udiv i64 %10, 1000000000
  %12 = urem i64 %10, 1000000000
  br label %13

13:                                               ; preds = %50, %2
  %14 = phi i8 [ 1, %2 ], [ 0, %50 ]
  %15 = load atomic i32, i32* %4 monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %13, %22
  %18 = phi i32 [ %23, %22 ], [ %15, %13 ]
  %19 = add nsw i32 %18, -1
  %20 = cmpxchg weak i32* %4, i32 %18, i32 %19 acquire monotonic
  %21 = extractvalue { i32, i1 } %20, 1
  br i1 %21, label %56, label %22

22:                                               ; preds = %17
  %23 = extractvalue { i32, i1 } %20, 0
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %17

25:                                               ; preds = %22, %13
  %26 = icmp eq i8 %14, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %25
  %28 = call %"struct.absl::base_internal::ThreadIdentity"* @_ZN4absl13base_internal30CurrentThreadIdentityIfPresentEv() #7
  %29 = getelementptr inbounds %"struct.absl::base_internal::ThreadIdentity", %"struct.absl::base_internal::ThreadIdentity"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i8, i8* %29 monotonic, align 1
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"struct.absl::base_internal::ThreadIdentity", %"struct.absl::base_internal::ThreadIdentity"* %28, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = getelementptr inbounds %"struct.absl::base_internal::ThreadIdentity", %"struct.absl::base_internal::ThreadIdentity"* %28, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = sub nsw i32 %34, %36
  %38 = icmp sgt i32 %37, 60
  %39 = and i1 %32, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %27
  store atomic i8 1, i8* %29 monotonic, align 1
  br label %41

41:                                               ; preds = %40, %27, %25
  br i1 %5, label %44, label %42

42:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  store i64 %11, i64* %7, align 8
  store i64 %12, i64* %8, align 8
  %43 = call i64 (i64, ...) @syscall(i64 202, i32* %4, i32 393, i32 0, %struct.timespec* nonnull %3, i8* null, i32 -1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  br label %46

44:                                               ; preds = %41
  %45 = call i64 (i64, ...) @syscall(i64 202, i32* %4, i32 128, i32 0, i8* null) #7
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %43, %42 ], [ %45, %44 ]
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %46, %55, %51, %51, %51
  br label %13

51:                                               ; preds = %46
  %52 = tail call i32* @__errno_location() #8
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 0, %53
  switch i32 %54, label %55 [
    i32 0, label %50
    i32 -4, label %50
    i32 -11, label %50
    i32 -110, label %56
  ]

55:                                               ; preds = %51
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 59), i32 102, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %54) #7
  br label %50

56:                                               ; preds = %51, %17
  %57 = phi i1 [ true, %17 ], [ false, %51 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal6Waiter4PostEv(%"class.absl::synchronization_internal::Waiter"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::synchronization_internal::Waiter", %"class.absl::synchronization_internal::Waiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 release
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = tail call i64 (i64, ...) @syscall(i64 202, i32* %2, i32 129, i32 1) #7
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %15, !prof !3

9:                                                ; preds = %5
  %10 = tail call i32* @__errno_location() #8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %9
  %14 = sub nsw i32 0, %11
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 59), i32 120, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %14) #7
  br label %15

15:                                               ; preds = %13, %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal6Waiter4PokeEv(%"class.absl::synchronization_internal::Waiter"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::synchronization_internal::Waiter", %"class.absl::synchronization_internal::Waiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call i64 (i64, ...) @syscall(i64 202, i32* %2, i32 129, i32 1) #7
  %4 = trunc i64 %3 to i32
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %12, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32* @__errno_location() #8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %6
  %11 = sub nsw i32 0, %8
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 59), i32 120, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %11) #7
  br label %12

12:                                               ; preds = %1, %10, %6
  ret void
}

declare %"struct.absl::base_internal::ThreadIdentity"* @_ZN4absl13base_internal30CurrentThreadIdentityIfPresentEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
