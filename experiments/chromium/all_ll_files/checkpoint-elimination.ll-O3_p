; ModuleID = '../../v8/src/compiler/checkpoint-elimination.cc'
source_filename = "../../v8/src/compiler/checkpoint-elimination.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::CheckpointElimination" = type { %"class.v8::internal::compiler::AdvancedReducer" }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::FrameStateInfo" = type { %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", %"class.v8::internal::compiler::FrameStateFunctionInfo"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::FrameStateFunctionInfo" = type { i32, i32, i32, %"class.v8::internal::Handle" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }

$_ZN2v88internal8compiler21CheckpointEliminationD0Ev = comdat any

$_ZNK2v88internal8compiler21CheckpointElimination12reducer_nameEv = comdat any

$_ZN2v88internal8compiler7ReducerD2Ev = comdat any

@_ZTVN2v88internal8compiler21CheckpointEliminationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7ReducerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::CheckpointElimination"*)* @_ZN2v88internal8compiler21CheckpointEliminationD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::CheckpointElimination"*)* @_ZNK2v88internal8compiler21CheckpointElimination12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7Reducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::CheckpointElimination"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler21CheckpointElimination6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"OperatorProperties::HasFrameStateInput(node->op())\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"CheckpointElimination\00", align 1

@_ZN2v88internal8compiler21CheckpointEliminationC1EPNS1_15AdvancedReducer6EditorE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::CheckpointElimination"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*), void (%"class.v8::internal::compiler::CheckpointElimination"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*)* @_ZN2v88internal8compiler21CheckpointEliminationC2EPNS1_15AdvancedReducer6EditorE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler21CheckpointEliminationC2EPNS1_15AdvancedReducer6EditorE(%"class.v8::internal::compiler::CheckpointElimination"* nocapture, %"class.v8::internal::compiler::AdvancedReducer::Editor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CheckpointElimination", %"class.v8::internal::compiler::CheckpointElimination"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CheckpointElimination", %"class.v8::internal::compiler::CheckpointElimination"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler21CheckpointEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21CheckpointElimination16ReduceCheckpointEPNS1_4NodeE(%"class.v8::internal::compiler::CheckpointElimination"* nocapture readnone, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #5
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

7:                                                ; preds = %2
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #5
  %12 = zext i1 %11 to i32
  %13 = add nsw i32 %10, %12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %7
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %7, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %7 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = sext i32 %13 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, i64 %27
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 0
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 2
  %33 = load i16, i16* %32, align 8
  %34 = icmp eq i16 %33, 41
  br i1 %34, label %35, label %185

35:                                               ; preds = %24
  %36 = tail call dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %31) #5
  %37 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %36, i64 0, i32 2
  %38 = load %"class.v8::internal::compiler::FrameStateFunctionInfo"*, %"class.v8::internal::compiler::FrameStateFunctionInfo"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::FrameStateFunctionInfo"* %38, null
  br i1 %39, label %185, label %40

40:                                               ; preds = %35
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %41) #5
  %50 = zext i1 %49 to i32
  %51 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %52 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %51) #5
  %53 = zext i1 %52 to i32
  %54 = add i32 %48, %50
  %55 = add i32 %54, %53
  %56 = load i32, i32* %14, align 4
  %57 = and i32 %56, 251658240
  %58 = icmp eq i32 %57, 251658240
  br i1 %58, label %59, label %63

59:                                               ; preds = %46
  %60 = inttoptr i64 %19 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 16
  br label %63

63:                                               ; preds = %46, %59
  %64 = phi i64 [ %62, %59 ], [ %19, %46 ]
  %65 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  %66 = sext i32 %55 to i64
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, i64 %66
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 0
  %70 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %70, i64 0, i32 3, i32 0
  %72 = load i8, i8* %71, align 2
  %73 = and i8 %72, 16
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %185, label %75

75:                                               ; preds = %63, %141
  %76 = phi %"class.v8::internal::compiler::Operator"* [ %148, %141 ], [ %70, %63 ]
  %77 = phi %"class.v8::internal::compiler::Operator"** [ %147, %141 ], [ %69, %63 ]
  %78 = phi %"class.v8::internal::compiler::Node"* [ %146, %141 ], [ %68, %63 ]
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %76, i64 0, i32 6
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %185

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %76, i64 0, i32 2
  %84 = load i16, i16* %83, align 8
  %85 = icmp eq i16 %84, 38
  br i1 %85, label %86, label %121

86:                                               ; preds = %82
  %87 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %76) #5
  br i1 %87, label %89, label %88, !prof !2

88:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

89:                                               ; preds = %86
  %90 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %77, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %90, i64 0, i32 5
  %92 = load i32, i32* %91, align 4
  %93 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %90) #5
  %94 = zext i1 %93 to i32
  %95 = add nsw i32 %92, %94
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %78, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 251658240
  %99 = icmp eq i32 %98, 251658240
  %100 = ptrtoint %"class.v8::internal::compiler::Node"* %78 to i64
  %101 = add i64 %100, 32
  br i1 %99, label %102, label %106

102:                                              ; preds = %89
  %103 = inttoptr i64 %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 16
  br label %106

106:                                              ; preds = %89, %102
  %107 = phi i64 [ %105, %102 ], [ %101, %89 ]
  %108 = inttoptr i64 %107 to %"class.v8::internal::compiler::Node"**
  %109 = sext i32 %95 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %109
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %111, i64 0, i32 0
  %113 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %113, i64 0, i32 2
  %115 = load i16, i16* %114, align 8
  %116 = icmp eq i16 %115, 41
  br i1 %116, label %117, label %153

117:                                              ; preds = %106
  %118 = tail call dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %113) #5
  %119 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %118, i64 0, i32 2
  %120 = load %"class.v8::internal::compiler::FrameStateFunctionInfo"*, %"class.v8::internal::compiler::FrameStateFunctionInfo"** %119, align 8
  br label %153

121:                                              ; preds = %82
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %76, i64 0, i32 5
  %123 = load i32, i32* %122, align 4
  %124 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %76) #5
  %125 = zext i1 %124 to i32
  %126 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %77, align 8
  %127 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %126) #5
  %128 = zext i1 %127 to i32
  %129 = add i32 %123, %125
  %130 = add i32 %129, %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %78, i64 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 251658240
  %134 = icmp eq i32 %133, 251658240
  %135 = ptrtoint %"class.v8::internal::compiler::Node"* %78 to i64
  %136 = add i64 %135, 32
  br i1 %134, label %137, label %141

137:                                              ; preds = %121
  %138 = inttoptr i64 %136 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 16
  br label %141

141:                                              ; preds = %121, %137
  %142 = phi i64 [ %140, %137 ], [ %136, %121 ]
  %143 = inttoptr i64 %142 to %"class.v8::internal::compiler::Node"**
  %144 = sext i32 %130 to i64
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 %144
  %146 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %146, i64 0, i32 0
  %148 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %148, i64 0, i32 3, i32 0
  %150 = load i8, i8* %149, align 2
  %151 = and i8 %150, 16
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %185, label %75

153:                                              ; preds = %106, %117
  %154 = phi %"class.v8::internal::compiler::FrameStateFunctionInfo"* [ %120, %117 ], [ null, %106 ]
  %155 = icmp eq %"class.v8::internal::compiler::FrameStateFunctionInfo"* %154, %38
  br i1 %155, label %156, label %185

156:                                              ; preds = %153
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %162, label %161, !prof !2

161:                                              ; preds = %156
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 5
  %164 = load i32, i32* %163, align 4
  %165 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %157) #5
  %166 = zext i1 %165 to i32
  %167 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %168 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %167) #5
  %169 = zext i1 %168 to i32
  %170 = add i32 %164, %166
  %171 = add i32 %170, %169
  %172 = load i32, i32* %14, align 4
  %173 = and i32 %172, 251658240
  %174 = icmp eq i32 %173, 251658240
  br i1 %174, label %175, label %179

175:                                              ; preds = %162
  %176 = inttoptr i64 %19 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 16
  br label %179

179:                                              ; preds = %162, %175
  %180 = phi i64 [ %178, %175 ], [ %19, %162 ]
  %181 = inttoptr i64 %180 to %"class.v8::internal::compiler::Node"**
  %182 = sext i32 %171 to i64
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 %182
  %184 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %183, align 8
  br label %185

185:                                              ; preds = %75, %141, %63, %24, %35, %153, %179
  %186 = phi %"class.v8::internal::compiler::Node"* [ %184, %179 ], [ null, %153 ], [ null, %35 ], [ null, %24 ], [ null, %63 ], [ null, %141 ], [ null, %75 ]
  ret %"class.v8::internal::compiler::Node"* %186
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21CheckpointElimination6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::CheckpointElimination"* nocapture readnone, %"class.v8::internal::compiler::Node"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 38
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21CheckpointElimination16ReduceCheckpointEPNS1_4NodeE(%"class.v8::internal::compiler::CheckpointElimination"* undef, %"class.v8::internal::compiler::Node"* %1)
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.v8::internal::compiler::Node"* [ %9, %8 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::Node"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21CheckpointEliminationD0Ev(%"class.v8::internal::compiler::CheckpointElimination"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.v8::internal::compiler::CheckpointElimination"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler21CheckpointElimination12reducer_nameEv(%"class.v8::internal::compiler::CheckpointElimination"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)
}

declare void @_ZN2v88internal8compiler7Reducer8FinalizeEv(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler7ReducerD2Ev(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
