; ModuleID = '../../net/http/http_basic_state.cc'
source_filename = "../../net/http/http_basic_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::HttpBasicState" = type <{ %class.scoped_refptr, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.44", i8, [7 x i8], %class.GURL, %"class.std::__1::basic_string", %"struct.net::MutableNetworkTrafficAnnotationTag", [4 x i8] }>
%class.scoped_refptr = type { %"class.net::GrowableIOBuffer"* }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr", i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::ClientSocketHandle"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.net::HttpStreamParser"* }
%"class.net::HttpStreamParser" = type { i32 (...)**, i32, %"struct.net::HttpRequestInfo"*, %class.scoped_refptr.79, i32, %class.scoped_refptr, i32, i64, i64, i64, %"class.net::HttpResponseInfo"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i8, i64, %"class.std::__1::unique_ptr.118", %class.scoped_refptr.80, i32, %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::StreamSocket"*, i8, %"class.net::NetLogWithSource", %"class.base::RepeatingCallback", %class.scoped_refptr.124, %class.scoped_refptr.124, i8, i32, %"struct.net::MutableNetworkTrafficAnnotationTag", %"class.base::WeakPtrFactory" }
%"struct.net::HttpRequestInfo" = type <{ %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i8, [7 x i8], %"class.net::HttpRequestHeaders", %"class.net::UploadDataStream"*, i32, i32, i32, %"class.net::SocketTag", [3 x i8], %"struct.net::MutableNetworkTrafficAnnotationTag", i32, %"class.absl::optional.74", i32, [4 x i8] }>
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.18" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.53" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.55" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback", %"class.net::NetLogWithSource" }
%"class.net::SocketTag" = type { i8 }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.url::Origin" }
%class.scoped_refptr.79 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.80, i32, i32 }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.82", %class.scoped_refptr.25, %"class.net::SSLInfo", %class.scoped_refptr.117, %"class.net::HttpVaryData", %"class.std::__1::vector" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.81" }
%"class.base::time_internal::TimeBase.81" = type { i64 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.25 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.26", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector", %"class.std::__1::vector.27" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { i32*, i32*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i32* }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.87, %class.scoped_refptr.87, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.100", %"class.std::__1::basic_string", %"class.std::__1::vector.108", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.87 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.88", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.89", %"class.std::__1::vector.93" }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::unique_ptr.89"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.103" }
%"class.net::HashValue" = type { i32, %union.anon.102 }
%union.anon.102 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.112" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.110, i32, [4 x i8] }>
%class.scoped_refptr.110 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.111", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.117 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type opaque
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.net::HttpChunkedDecoder"* }
%"class.net::HttpChunkedDecoder" = type opaque
%class.scoped_refptr.80 = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.60", %"class.std::__1::vector.67" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.62" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.69" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.124 = type { %"class.net::HttpStreamParser::SeekableIOBuffer"* }
%"class.net::HttpStreamParser::SeekableIOBuffer" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.126", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.126" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.127" }
%"struct.std::__1::atomic.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__cxx_atomic_impl.130" }
%"struct.std::__1::__cxx_atomic_impl.130" = type { %"struct.std::__1::__cxx_atomic_base_impl.131" }
%"struct.std::__1::__cxx_atomic_base_impl.131" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.47" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.net::ClientSocketHandle" = type { i8, %"class.net::ClientSocketPool"*, %"class.net::HigherLayeredPool"*, %"class.std::__1::unique_ptr.5", %"class.net::ClientSocketPool::GroupId", i32, %"class.base::OnceCallback", %"class.base::TimeDelta", i64, %"struct.net::ResolveErrorInfo", i8, %class.scoped_refptr.25, %"class.std::__1::vector.34", %"struct.net::NetLogSource", %"struct.net::LoadTimingInfo::ConnectTiming" }
%"class.net::ClientSocketPool" = type { %"class.net::LowerLayeredPool" }
%"class.net::LowerLayeredPool" = type { i32 (...)** }
%"class.net::HigherLayeredPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::StreamSocket"* }
%"class.net::ClientSocketPool::GroupId" = type <{ %"class.net::HostPortPair", i32, i32, %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.36" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.net::ConnectionAttempt"* }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [35 x i8] c"../../net/http/http_basic_state.cc\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"connection_\00", align 1
@.str.2 = private unnamed_addr constant [83 x i8] c"ClientSocketHandle passed to HttpBasicState must not be NULL. See crbug.com/790776\00", align 1
@_ZZNK3net14HttpBasicState19GenerateRequestLineEvE7kSuffix = internal constant [12 x i8] c" HTTP/1.1\0D\0A\00", align 1
@_ZZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result = internal global i64 0, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net14HttpBasicStateC1ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb = hidden unnamed_addr alias void (%"class.net::HttpBasicState"*, %"class.net::ClientSocketHandle"*, i1), void (%"class.net::HttpBasicState"*, %"class.net::ClientSocketHandle"*, i1)* @_ZN3net14HttpBasicStateC2ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb
@_ZN3net14HttpBasicStateD1Ev = hidden unnamed_addr alias void (%"class.net::HttpBasicState"*), void (%"class.net::HttpBasicState"*)* @_ZN3net14HttpBasicStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14HttpBasicStateC2ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb(%"class.net::HttpBasicState"*, %"class.net::ClientSocketHandle"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.net::ClientSocketHandle"* %1 to i64
  %6 = zext i1 %2 to i8
  %7 = tail call i8* @_Znwm(i64 40) #9
  %8 = bitcast i8* %7 to %"class.net::GrowableIOBuffer"*
  tail call void @_ZN3net16GrowableIOBufferC1Ev(%"class.net::GrowableIOBuffer"* nonnull %8) #10
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = bitcast %"class.net::HttpBasicState"* %0 to i8**
  store i8* %7, i8** %12, align 8
  %13 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.2"* %13 to i64*
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::unique_ptr.44"* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 3
  store i8 %6, i8* %17, align 8
  %18 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1Ev(%class.GURL* %18) #10
  %19 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 6
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 7, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %13, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %22, align 8
  %24 = icmp eq %"class.net::ClientSocketHandle"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %3
  %26 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #10
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.2, i64 0, i64 0), i64 82) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %29

29:                                               ; preds = %3, %25
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14HttpBasicStateD2Ev(%"class.net::HttpBasicState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 6
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 5
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #10
  %12 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %12, align 8
  store %"class.net::HttpStreamParser"* null, %"class.net::HttpStreamParser"** %12, align 8
  %14 = icmp eq %"class.net::HttpStreamParser"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.net::HttpStreamParser"* %13 to void (%"class.net::HttpStreamParser"*)***
  %17 = load void (%"class.net::HttpStreamParser"*)**, void (%"class.net::HttpStreamParser"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %17, i64 1
  %19 = load void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %18, align 8
  tail call void %19(%"class.net::HttpStreamParser"* nonnull %13) #10
  br label %20

20:                                               ; preds = %10, %15
  %21 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %21, align 8
  store %"class.net::ClientSocketHandle"* null, %"class.net::ClientSocketHandle"** %21, align 8
  %23 = icmp eq %"class.net::ClientSocketHandle"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN3net18ClientSocketHandleD1Ev(%"class.net::ClientSocketHandle"* nonnull %22) #10
  %25 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %22, i64 0, i32 0
  tail call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 0, i32 0
  %28 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %27, align 8
  %29 = icmp eq %"class.net::GrowableIOBuffer"* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %28, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.net::IOBuffer"*
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %36 to void (%"class.net::IOBuffer"*)***
  %39 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %39, i64 1
  %41 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %40, align 8
  tail call void %41(%"class.net::IOBuffer"* nonnull %37) #10
  br label %42

42:                                               ; preds = %26, %30, %35
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14HttpBasicState10InitializeEPKNS_15HttpRequestInfoENS_15RequestPriorityERKNS_16NetLogWithSourceE(%"class.net::HttpBasicState"*, %"struct.net::HttpRequestInfo"*, i32, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 5
  %7 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %5) #10
  %8 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 12, i32 0
  %9 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 7, i32 0
  %10 = load i32, i32* %8, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 6
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %11
  br i1 %13, label %43, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %18, label %33, label %23

23:                                               ; preds = %14
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #10
  br label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %29, i64 %31) #10
  br label %43

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %39 = zext i8 %21 to i64
  %40 = select i1 %22, i8* %35, i8* %38
  %41 = select i1 %22, i64 %37, i64 %39
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %40, i64 %41) #10
  br label %43

43:                                               ; preds = %4, %24, %27, %33
  %44 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %44, align 8
  %46 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %46, align 8
  %48 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %45, i64 0, i32 5
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 2
  %51 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %51, align 8
  %53 = tail call i8* @_Znwm(i64 280) #9
  %54 = bitcast i8* %53 to %"class.net::HttpStreamParser"*
  tail call void @_ZN3net16HttpStreamParserC1EPNS_12StreamSocketEbPKNS_15HttpRequestInfoEPNS_16GrowableIOBufferERKNS_16NetLogWithSourceE(%"class.net::HttpStreamParser"* nonnull %54, %"class.net::StreamSocket"* %47, i1 zeroext %50, %"struct.net::HttpRequestInfo"* %1, %"class.net::GrowableIOBuffer"* %52, %"class.net::NetLogWithSource"* dereferenceable(24) %3) #10
  %55 = ptrtoint i8* %53 to i64
  %56 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.44"* %56 to i64*
  store i64 %55, i64* %59, align 8
  %60 = icmp eq %"class.net::HttpStreamParser"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %43
  %62 = bitcast %"class.net::HttpStreamParser"* %58 to void (%"class.net::HttpStreamParser"*)***
  %63 = load void (%"class.net::HttpStreamParser"*)**, void (%"class.net::HttpStreamParser"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %63, i64 1
  %65 = load void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %64, align 8
  tail call void %65(%"class.net::HttpStreamParser"* nonnull %58) #10
  br label %66

66:                                               ; preds = %61, %43
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.net::ClientSocketHandle"* @_ZN3net14HttpBasicState17ReleaseConnectionEv(%"class.net::HttpBasicState"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %2, align 8
  store %"class.net::ClientSocketHandle"* null, %"class.net::ClientSocketHandle"** %2, align 8
  ret %"class.net::ClientSocketHandle"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.net::GrowableIOBuffer"* @_ZNK3net14HttpBasicState8read_bufEv(%"class.net::HttpBasicState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %2, align 8
  %4 = icmp eq %"class.net::GrowableIOBuffer"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.net::GrowableIOBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14HttpBasicState12DeleteParserEv(%"class.net::HttpBasicState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %2, align 8
  store %"class.net::HttpStreamParser"* null, %"class.net::HttpStreamParser"** %2, align 8
  %4 = icmp eq %"class.net::HttpStreamParser"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::HttpStreamParser"* %3 to void (%"class.net::HttpStreamParser"*)***
  %7 = load void (%"class.net::HttpStreamParser"*)**, void (%"class.net::HttpStreamParser"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %7, i64 1
  %9 = load void (%"class.net::HttpStreamParser"*)*, void (%"class.net::HttpStreamParser"*)** %8, align 8
  tail call void %9(%"class.net::HttpStreamParser"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net14HttpBasicState19GenerateRequestLineEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::HttpBasicState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %1, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load i8, i8* %7, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %1, i64 0, i32 5
  br i1 %10, label %13, label %12

12:                                               ; preds = %2
  call void @_ZN3net8HttpUtil14SpecForRequestERK4GURL(%"class.std::__1::basic_string"* nonnull sret %3, %class.GURL* dereferenceable(120) %11) #10
  br label %14

13:                                               ; preds = %2
  call void @_ZNK4GURL14PathForRequestEv(%"class.std::__1::basic_string"* nonnull sret %3, %class.GURL* %11) #10
  br label %14

14:                                               ; preds = %13, %12
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %1, i64 0, i32 6
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %26

24:                                               ; preds = %14
  %25 = zext i8 %19 to i64
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi i64 [ %23, %21 ], [ %25, %24 ]
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i64, i64* %6, align 8
  %33 = zext i8 %30 to i64
  %34 = select i1 %31, i64 %32, i64 %33
  %35 = add i64 %27, 12
  %36 = add i64 %35, %34
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %36) #10
  %37 = load i8, i8* %18, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %44 = zext i8 %37 to i64
  %45 = select i1 %38, i8* %40, i8* %43
  %46 = select i1 %38, i64 %42, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %45, i64 %46) #10
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext 32) #10
  %49 = load i8, i8* %29, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %5, align 8
  %52 = load i64, i64* %6, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i8* %51, i8* %4
  %55 = select i1 %50, i64 %52, i64 %53
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %54, i64 %55) #10
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZNK3net14HttpBasicState19GenerateRequestLineEvE7kSuffix, i64 0, i64 0), i64 11) #10
  %58 = load i8, i8* %29, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %26
  %61 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %26, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZN3net8HttpUtil14SpecForRequestERK4GURL(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZNK4GURL14PathForRequestEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14HttpBasicState18IsConnectionReusedEv(%"class.net::HttpBasicState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %2, align 8
  %4 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net14HttpBasicState13GetDnsAliasesEv(%"class.net::HttpBasicState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #10
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result) #10
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::HttpBasicState", %"class.net::HttpBasicState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %10, align 8
  %12 = icmp eq %"class.net::ClientSocketHandle"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %14, align 8
  %16 = icmp eq %"class.net::StreamSocket"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %15, i64 0, i32 0
  %19 = bitcast %"class.net::StreamSocket"* %15 to %"class.std::__1::vector"* (%"class.net::Socket"*)***
  %20 = load %"class.std::__1::vector"* (%"class.net::Socket"*)**, %"class.std::__1::vector"* (%"class.net::Socket"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector"* (%"class.net::Socket"*)*, %"class.std::__1::vector"* (%"class.net::Socket"*)** %20, i64 9
  %22 = load %"class.std::__1::vector"* (%"class.net::Socket"*)*, %"class.std::__1::vector"* (%"class.net::Socket"*)** %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::vector"* %22(%"class.net::Socket"* %18) #10
  br label %24

24:                                               ; preds = %9, %13, %17
  %25 = phi %"class.std::__1::vector"* [ %23, %17 ], [ bitcast (%"class.base::NoDestructor"* @_ZZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result to %"class.std::__1::vector"*), %13 ], [ bitcast (%"class.base::NoDestructor"* @_ZZNK3net14HttpBasicState13GetDnsAliasesEvE18emptyvector_result to %"class.std::__1::vector"*), %9 ]
  ret %"class.std::__1::vector"* %25
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18ClientSocketHandleD1Ev(%"class.net::ClientSocketHandle"*) unnamed_addr #3

declare void @_ZN3net16GrowableIOBufferC1Ev(%"class.net::GrowableIOBuffer"*) unnamed_addr #1

declare void @_ZN3net16HttpStreamParserC1EPNS_12StreamSocketEbPKNS_15HttpRequestInfoEPNS_16GrowableIOBufferERKNS_16NetLogWithSourceE(%"class.net::HttpStreamParser"*, %"class.net::StreamSocket"*, i1 zeroext, %"struct.net::HttpRequestInfo"*, %"class.net::GrowableIOBuffer"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
