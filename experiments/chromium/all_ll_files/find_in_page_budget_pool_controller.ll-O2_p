; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/find_in_page_budget_pool_controller.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/find_in_page_budget_pool_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.387", i8, i8, [6 x i8] }>
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.154", %"class.absl::optional.154", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.159" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.150", i8 }>
%"class.WTF::HashSet.150" = type { %"class.WTF::HashTable.151" }
%"class.WTF::HashTable.151" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.22", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.23", %"class.base::WeakPtr", %class.scoped_refptr.26, %class.scoped_refptr, i32, i32, i8*, %"class.base::WeakPtrFactory.108" }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.26, %class.scoped_refptr.28, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.28 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.29", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.30", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.35, i8, [7 x i8] }>
%class.scoped_refptr.35 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.36", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.26 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.41" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.46", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.53", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.54", i8, [7 x i8] }>
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.54", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.91", %"class.base::RepeatingCallback.92", %"class.absl::optional.93", i8, [7 x i8], %"class.absl::optional.54", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.67", %"struct.std::__1::less" }>
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.71" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.70, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.69", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array.69" = type { [4 x i8*] }
%class.scoped_refptr.70 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.77", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.79" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.85", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.92" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.26, %"class.std::__1::unique_ptr.98", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.616", i64, [64 x %"class.base::RepeatingCallback.160"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.98", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.616" = type { %"struct.std::__1::__atomic_base.617" }
%"struct.std::__1::__atomic_base.617" = type { %"struct.std::__1::__atomic_base.618" }
%"struct.std::__1::__atomic_base.618" = type { %"struct.std::__1::__cxx_atomic_impl.619" }
%"struct.std::__1::__cxx_atomic_impl.619" = type { %"struct.std::__1::__cxx_atomic_base_impl.620" }
%"struct.std::__1::__cxx_atomic_base_impl.620" = type { i64 }
%"class.base::RepeatingCallback.160" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.26 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.27", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback.159" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.14", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr.19, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.212", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.236", %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %"class.std::__1::map", %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.253", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.160", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.160", %"class.base::RepeatingCallback.266", %"class.std::__1::unique_ptr.267", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.432", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.436" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array", i8, i8 }
%"struct.std::__1::array" = type { [6 x i8] }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr.19, %class.scoped_refptr.19 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.21, %class.scoped_refptr.197, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.210", %"class.base::WeakPtrFactory.211" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.21 = type { %"class.base::sequence_manager::TaskQueue"* }
%class.scoped_refptr.197 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.198", %class.scoped_refptr, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.208", %"class.base::WeakPtrFactory.209" }
%"class.base::RefCountedThreadSafe.198" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtr.208" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.209" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::WeakPtr.210" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.211" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.215", %"class.base::RepeatingCallback.220", %class.scoped_refptr, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.221", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional.54", i8, [7 x i8], %"class.WTF::HashMap.227", %"class.base::WeakPtrFactory.232" }
%"class.WTF::HashMap.215" = type { %"class.WTF::HashTable.216" }
%"class.WTF::HashTable.216" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type opaque
%"class.base::RepeatingCallback.220" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type opaque
%"class.base::WeakPtrFactory.232" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.242" }
%"class.std::__1::__tree.242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.19 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.20", %class.scoped_refptr.21, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.109", %"class.absl::optional.114", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.196" }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { i32 }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.19, %class.scoped_refptr, %class.scoped_refptr.19, %class.scoped_refptr, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.604" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.598" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.437, %"class.std::__1::unique_ptr.555", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.70, i32 }>
%class.scoped_refptr.437 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.70, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.519", %"class.absl::optional.524", %"class.absl::optional.478", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.543", %"class.std::__1::map.546", i8, [7 x i8], %class.scoped_refptr.70, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.438" }>
%"class.base::RefCountedThreadSafe.438" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.441 }
%union.anon.441 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.457" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.457" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.70, %"class.std::__1::unique_ptr.458", %"class.absl::optional.468", %"struct.std::__1::atomic.474", i8, i8, i8, i8, i32, i32, %"class.absl::optional.478", %"class.std::__1::unique_ptr.483", i8, i64, %class.scoped_refptr.515, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.517", %"class.base::WeakPtrFactory.518" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.70, i8, %"class.mojo::ScopedHandleBase.461", %class.scoped_refptr.462, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.463", i8*, %"class.base::WeakPtrFactory.464" }
%"class.mojo::ScopedHandleBase.461" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.462 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.463" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.464" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.468" = type { %"class.absl::optional_internal::optional_data.469" }
%"class.absl::optional_internal::optional_data.469" = type { %"class.absl::optional_internal::optional_data_base.470" }
%"class.absl::optional_internal::optional_data_base.470" = type { %"class.absl::optional_internal::optional_data_dtor_base.471" }
%"class.absl::optional_internal::optional_data_dtor_base.471" = type { i8, %union.anon.472 }
%union.anon.472 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.473", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.473" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.474" = type { %"struct.std::__1::__atomic_base.475" }
%"struct.std::__1::__atomic_base.475" = type { %"struct.std::__1::__cxx_atomic_impl.476" }
%"struct.std::__1::__cxx_atomic_impl.476" = type { %"struct.std::__1::__cxx_atomic_base_impl.477" }
%"struct.std::__1::__cxx_atomic_base_impl.477" = type { i8 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.486", i8, i64, %class.scoped_refptr.487, %class.scoped_refptr.511 }
%"class.base::RepeatingCallback.486" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.487 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.489", %"class.std::__1::map.500", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.489" = type { %"class.std::__1::__tree.490" }
%"class.std::__1::__tree.490" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.491", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.500" = type { %"class.std::__1::__tree.501" }
%"class.std::__1::__tree.501" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.511 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.515 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.615", [4 x i8], %"class.base::RepeatingCallback.160", %class.scoped_refptr.70, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.30", [4 x i8] }>
%"class.base::RefCountedThreadSafe.615" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.517" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.518" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.519" = type { %"class.absl::optional_internal::optional_data.520" }
%"class.absl::optional_internal::optional_data.520" = type { %"class.absl::optional_internal::optional_data_base.521" }
%"class.absl::optional_internal::optional_data_base.521" = type { %"class.absl::optional_internal::optional_data_dtor_base.522" }
%"class.absl::optional_internal::optional_data_dtor_base.522" = type { i8, %union.anon.523 }
%union.anon.523 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.524" = type { %"class.absl::optional_internal::optional_data.525" }
%"class.absl::optional_internal::optional_data.525" = type { %"class.absl::optional_internal::optional_data_base.526" }
%"class.absl::optional_internal::optional_data_base.526" = type { %"class.absl::optional_internal::optional_data_dtor_base.527" }
%"class.absl::optional_internal::optional_data_dtor_base.527" = type { i8, [7 x i8], %union.anon.528 }
%union.anon.528 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.529 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.529 = type { %"class.std::__1::map.532" }
%"class.std::__1::map.532" = type { %"class.std::__1::__tree.533" }
%"class.std::__1::__tree.533" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.534", %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque.543" = type { %"class.base::internal::VectorBuffer.544", i64, i64 }
%"class.base::internal::VectorBuffer.544" = type { %"class.std::__1::unique_ptr.545"*, i64 }
%"class.std::__1::unique_ptr.545" = type opaque
%"class.std::__1::map.546" = type { %"class.std::__1::__tree.547" }
%"class.std::__1::__tree.547" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.160", %"class.base::OnceCallback.558", %"class.absl::optional.154", %"class.absl::optional.559", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.565", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.573", %"class.std::__1::map.584", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.593", i8, %class.scoped_refptr.70, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.594" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.558" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.559" = type { %"class.absl::optional_internal::optional_data.560" }
%"class.absl::optional_internal::optional_data.560" = type { %"class.absl::optional_internal::optional_data_base.561" }
%"class.absl::optional_internal::optional_data_base.561" = type { %"class.absl::optional_internal::optional_data_dtor_base.562" }
%"class.absl::optional_internal::optional_data_dtor_base.562" = type { i8, %union.anon.563 }
%union.anon.563 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.70, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.252" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.252" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.564 }
%class.scoped_refptr.564 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.568", %class.scoped_refptr.569 }
%"class.base::RepeatingCallback.568" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.569 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.438", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.573" = type { %"class.std::__1::__tree.574" }
%"class.std::__1::__tree.574" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.584" = type { %"class.std::__1::__tree.585" }
%"class.std::__1::__tree.585" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.593" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.594" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.604" = type { %"class.std::__1::__tree.605" }
%"class.std::__1::__tree.605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.120", %"class.WTF::HashMap.141", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.170", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.172", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.187", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.189", %"class.base::WeakPtrFactory.195", %"class.base::WeakPtrFactory.195", %"class.base::WeakPtrFactory.195" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.119" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.119" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.123", %"class.WTF::HashSet", %"class.WTF::HashMap.131", %"class.WTF::Vector" }
%"class.WTF::HashMap.123" = type { %"class.WTF::HashTable.124" }
%"class.WTF::HashTable.124" = type <{ %"struct.WTF::KeyValuePair.127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.127" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %class.scoped_refptr.19*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.131" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"struct.WTF::KeyValuePair.135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.135" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.145" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.146", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.163", %"class.base::WeakPtrFactory.169" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional.54" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.170" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.172" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.175", %"class.base::WeakPtr.176" }
%"class.base::WeakPtr.175" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.176" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.179" }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.std::__1::pair.181"*, %"struct.std::__1::pair.181"*, %"class.std::__1::__compressed_pair.182" }
%"struct.std::__1::pair.181" = type opaque
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::pair.181"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.187" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.195" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.257" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.256" }
%"class.base::time_internal::TimeBase.256" = type { i64 }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.160", %"class.base::TimeTicks", %class.scoped_refptr }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.160", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.160", %"class.base::WeakPtrFactory.161" }
%"class.base::WeakPtrFactory.161" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.266" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.292", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.296", %"class.blink::scheduler::TraceableCounter.297", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.305", %"class.absl::optional.309", %"class.blink::scheduler::TraceableState.305", %"class.blink::scheduler::TraceableState.321", %"class.blink::scheduler::TraceableState.321", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.305", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState.323", %"class.blink::scheduler::TraceableState.323", %"class.base::TimeTicks", %"class.WTF::HashSet.327", %"class.base::ObserverList.331", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.352", %"class.blink::scheduler::TraceableState.354", %"class.blink::scheduler::TraceableState.365", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.321", %"class.WTF::Vector.379", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.396", %"class.WTF::Vector.398", %"class.std::__1::unique_ptr.189" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.282" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.273" }
%"class.std::__1::__tree.273" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.282" = type { %"class.base::internal::flat_tree.283" }
%"class.base::internal::flat_tree.283" = type { %"class.std::__1::vector.284" }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*, %"class.std::__1::__compressed_pair.287" }
%"struct.std::__1::pair.286" = type opaque
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::pair.286"* }
%"class.blink::scheduler::TraceableState.292" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.294", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.294" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.296" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.297" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.298" }
%"class.std::__1::list.298" = type { %"class.std::__1::__list_imp.299" }
%"class.std::__1::__list_imp.299" = type { %"struct.std::__1::__list_node_base.300", %"class.std::__1::__compressed_pair.301" }
%"struct.std::__1::__list_node_base.300" = type { %"struct.std::__1::__list_node_base.300"*, %"struct.std::__1::__list_node_base.300"* }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.309" = type { %"class.absl::optional_internal::optional_data.310" }
%"class.absl::optional_internal::optional_data.310" = type { %"class.absl::optional_internal::optional_data_base.311" }
%"class.absl::optional_internal::optional_data_base.311" = type { %"class.absl::optional_internal::optional_data_dtor_base.312" }
%"class.absl::optional_internal::optional_data_dtor_base.312" = type { i8, %union.anon.313 }
%union.anon.313 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.314" }
%"class.absl::optional.314" = type { %"class.absl::optional_internal::optional_data.315" }
%"class.absl::optional_internal::optional_data.315" = type { %"class.absl::optional_internal::optional_data_base.316" }
%"class.absl::optional_internal::optional_data_base.316" = type { %"class.absl::optional_internal::optional_data_dtor_base.317" }
%"class.absl::optional_internal::optional_data_dtor_base.317" = type { i8, %union.anon.318 }
%union.anon.318 = type { i64 }
%"class.blink::scheduler::TraceableState.305" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.307", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.307" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.323" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.325", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.325" = type <{ i8*, i8 }>
%"class.WTF::HashSet.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::ObserverList.331" = type <{ %"class.std::__1::vector.77", %"class.base::LinkedList.332", i64, i32, [4 x i8] }>
%"class.base::LinkedList.332" = type { %"class.base::LinkNode.333" }
%"class.base::LinkNode.333" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional.54", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TaskDurationMetricReporter.351", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.349", %"class.scheduling_metrics::TaskDurationMetricReporter.349", %"class.scheduling_metrics::TaskDurationMetricReporter.349", %"class.scheduling_metrics::TaskDurationMetricReporter.349", %"class.scheduling_metrics::TaskDurationMetricReporter.349", %"class.scheduling_metrics::TaskDurationMetricReporter.349" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.335" }
%"class.base::time_internal::TimeBase.335" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.339" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.30", [4 x i8] }>
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { i32*, i32*, %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.349" = type { %"class.std::__1::unique_ptr.336" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.350" }
%"class.base::RepeatingCallback.350" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.351" = type { %"class.std::__1::unique_ptr.336" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.154", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.352" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.307", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.354" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.355" }
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, %union.anon.359 }
%union.anon.359 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.360" }
%"class.absl::optional.360" = type { %"class.absl::optional_internal::optional_data.361" }
%"class.absl::optional_internal::optional_data.361" = type { %"class.absl::optional_internal::optional_data_base.362" }
%"class.absl::optional_internal::optional_data_base.362" = type { %"class.absl::optional_internal::optional_data_dtor_base.363" }
%"class.absl::optional_internal::optional_data_dtor_base.363" = type { i8, %union.anon.364 }
%union.anon.364 = type { i32 }
%"class.blink::scheduler::TraceableState.365" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.366", [6 x i8] }>
%"class.absl::optional.366" = type { %"class.absl::optional_internal::optional_data.367" }
%"class.absl::optional_internal::optional_data.367" = type { %"class.absl::optional_internal::optional_data_base.368" }
%"class.absl::optional_internal::optional_data_base.368" = type { %"class.absl::optional_internal::optional_data_dtor_base.369" }
%"class.absl::optional_internal::optional_data_dtor_base.369" = type { i8, %union.anon.370 }
%union.anon.370 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.372" }
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %class.scoped_refptr.19*, %class.scoped_refptr.19*, %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %class.scoped_refptr.19* }
%"class.blink::scheduler::TraceableState.321" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.294", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr.384", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.387", i8, [7 x i8] }>
%"class.blink::scheduler::TraceableState.396" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.294", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.401", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr, %class.scoped_refptr, i8*, i8* }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.404", %class.scoped_refptr, %"class.absl::optional.409", [6 x i8] }>
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.70 }
%"class.absl::optional.409" = type { %"class.absl::optional_internal::optional_data.410" }
%"class.absl::optional_internal::optional_data.410" = type { %"class.absl::optional_internal::optional_data_base.411" }
%"class.absl::optional_internal::optional_data_base.411" = type { %"class.absl::optional_internal::optional_data_dtor_base.412" }
%"class.absl::optional_internal::optional_data_dtor_base.412" = type { i8, %union.anon.413 }
%union.anon.413 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.424" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.423"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.423" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.424" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.426" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.436" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.blink::scheduler::BudgetPool" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.150", i8, [7 x i8] }>

$_ZN5blink9scheduler30FindInPageBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE = comdat any

$_ZN5blink9scheduler30FindInPageBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE = comdat any

$_ZN5blink9scheduler30FindInPageBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE = comdat any

$_ZN5blink9scheduler30FindInPageBudgetPoolController35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE = comdat any

$_ZNK5blink9scheduler30FindInPageBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE = comdat any

@_ZN5blink9scheduler30FindInPageBudgetPoolController37kFindInPageBudgetNotExhaustedPriorityE = hidden local_unnamed_addr constant i8 2, align 1
@_ZN5blink9scheduler30FindInPageBudgetPoolController34kFindInPageBudgetExhaustedPriorityE = hidden local_unnamed_addr constant i8 4, align 1
@_ZTVN5blink9scheduler30FindInPageBudgetPoolControllerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolControllerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolControllerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, i64, %"class.base::sequence_manager::TaskQueue"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolController35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*)* @_ZNK5blink9scheduler30FindInPageBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE to i8*)] }, align 8
@_ZN5blink9schedulerL32kBestEffortPriorityForFindInPageE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 0 }, align 8
@.str = private unnamed_addr constant [21 x i8] c"FindInPageBudgetPool\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"BlinkSchedulerBestEffortPriorityForFindInPage\00", align 1

@_ZN5blink9scheduler30FindInPageBudgetPoolControllerC1EPNS0_23MainThreadSchedulerImplE = hidden unnamed_addr alias void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*), void (%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolControllerC2EPNS0_23MainThreadSchedulerImplE
@_ZN5blink9scheduler30FindInPageBudgetPoolControllerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::FindInPageBudgetPoolController"*), void (%"class.blink::scheduler::FindInPageBudgetPoolController"*)* @_ZN5blink9scheduler30FindInPageBudgetPoolControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolControllerC2EPNS0_23MainThreadSchedulerImplE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler30FindInPageBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 1
  store %"class.blink::scheduler::MainThreadSchedulerImpl"* %1, %"class.blink::scheduler::MainThreadSchedulerImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr.387"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 4
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL32kBestEffortPriorityForFindInPageE) #4
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %7, align 1
  %10 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 3
  %11 = select i1 %8, i8 6, i8 2
  store i8 %11, i8* %10, align 8
  %12 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %4, align 8
  %13 = bitcast %"class.blink::scheduler::MainThreadSchedulerImpl"* %12 to %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)***
  %14 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %14, i64 32
  %16 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %15, align 8
  %17 = tail call %"class.base::TickClock"* %16(%"class.blink::scheduler::MainThreadSchedulerImpl"* %12) #4
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #4
  %23 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %4, align 8
  %24 = getelementptr inbounds %"class.blink::scheduler::MainThreadSchedulerImpl", %"class.blink::scheduler::MainThreadSchedulerImpl"* %23, i64 0, i32 9
  %25 = tail call noalias i8* @malloc(i64 160) #4
  %26 = bitcast i8* %25 to %"class.blink::scheduler::CPUTimeBudgetPool"*
  %27 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"* %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), %"class.blink::scheduler::BudgetPoolController"* %27, %"class.blink::scheduler::TraceableVariableController"* %24, i64 %22) #4
  %28 = ptrtoint i8* %25 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %29, align 8
  store i64 %28, i64* %6, align 8
  %31 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %30, null
  %32 = bitcast i8* %25 to %"class.blink::scheduler::CPUTimeBudgetPool"*
  br i1 %31, label %39, label %33

33:                                               ; preds = %2
  %34 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %30 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %35 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %35, i64 1
  %37 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %36, align 8
  tail call void %37(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %30) #4
  %38 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %29, align 8
  br label %39

39:                                               ; preds = %33, %2
  %40 = phi %"class.blink::scheduler::CPUTimeBudgetPool"* [ %38, %33 ], [ %32, %2 ]
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool22SetMinBudgetLevelToRunEN4base9TimeTicksENS2_9TimeDeltaE(%"class.blink::scheduler::CPUTimeBudgetPool"* %40, i64 %22, i64 0) #4
  %41 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %29, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool17SetMaxBudgetLevelEN4base9TimeTicksEN4absl8optionalINS2_9TimeDeltaEEE(%"class.blink::scheduler::CPUTimeBudgetPool"* %41, i64 %22, i8 1, i64 1000000) #4
  %42 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %29, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool25SetTimeBudgetRecoveryRateEN4base9TimeTicksEd(%"class.blink::scheduler::CPUTimeBudgetPool"* %42, i64 %22, double 2.500000e-01) #4
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool22SetMinBudgetLevelToRunEN4base9TimeTicksENS2_9TimeDeltaE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, i64) local_unnamed_addr #1

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool17SetMaxBudgetLevelEN4base9TimeTicksEN4absl8optionalINS2_9TimeDeltaEEE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, i8, i64) local_unnamed_addr #1

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool25SetTimeBudgetRecoveryRateEN4base9TimeTicksEd(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolControllerD2Ev(%"class.blink::scheduler::FindInPageBudgetPoolController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler30FindInPageBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %4 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %8 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolControllerD0Ev(%"class.blink::scheduler::FindInPageBudgetPoolController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler30FindInPageBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %4 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %8 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::scheduler::FindInPageBudgetPoolController"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolController15OnTaskCompletedEPNS0_19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue10TaskTimingE(%"class.blink::scheduler::FindInPageBudgetPoolController"* nocapture, %"class.blink::scheduler::MainThreadTaskQueue"* readonly, %"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %1, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %1, i64 0, i32 3, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 5
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %14, align 8
  %16 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 3, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool17RecordTaskRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::CPUTimeBudgetPool"* %15, %"class.base::sequence_manager::TaskQueue"* null, i64 %17, i64 %19) #4
  br label %20

20:                                               ; preds = %13, %9
  %21 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %21, align 8
  %23 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = tail call zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"* %22, i64 %24, i1 zeroext false) #4
  %26 = select i1 %25, i8 2, i8 4
  %27 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 3
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  store i8 %26, i8* %27, align 8
  %31 = getelementptr inbounds %"class.blink::scheduler::FindInPageBudgetPoolController", %"class.blink::scheduler::FindInPageBudgetPoolController"* %0, i64 0, i32 1
  %32 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %31, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl12UpdatePolicyEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %32) #4
  br label %33

33:                                               ; preds = %30, %20, %5, %3
  ret void
}

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool17RecordTaskRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink9scheduler23MainThreadSchedulerImpl12UpdatePolicyEv(%"class.blink::scheduler::MainThreadSchedulerImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler30FindInPageBudgetPoolController35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, i64, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9scheduler30FindInPageBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::FindInPageBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.blink::scheduler::TraceableVariableController"*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
