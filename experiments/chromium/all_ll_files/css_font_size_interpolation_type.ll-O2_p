; ModuleID = '../../third_party/blink/renderer/core/animation/css_font_size_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_font_size_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.169", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.173" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSFontSizeInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.178", %class.scoped_refptr.184 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.184 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.185", [4 x i8] }>
%"class.WTF::RefCounted.185" = type { %"class.base::RefCounted.186" }
%"class.base::RefCounted.186" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.std::__1::unique_ptr.190"*, i32, i32 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector.201", %"class.std::__1::bitset" }
%"class.WTF::Vector.201" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203", [80 x i8] }
%"class.WTF::VectorBufferBase.203" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.206" }
%"class.blink::PersistentBase.206" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::PersistentNodePtr.207" = type { %"class.blink::PersistentNode"* }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.733, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.235, %class.scoped_refptr.235, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.235, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.217" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.211", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.213" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.385", %"class.blink::Member.387", %"class.blink::Member.211", %"class.blink::Member.389", %"class.blink::Member.389", %"class.blink::Member.413", %"class.blink::Member.415", %"class.blink::Member.417", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.422", %"class.blink::HeapVector.424" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::Document"* }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.393" }
%"class.blink::HeapHashMap.393" = type { %"class.WTF::HashMap.396" }
%"class.WTF::HashMap.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"struct.WTF::KeyValuePair.399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.399" = type { %"class.WTF::AtomicString", %"class.blink::Member.400" }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.404", i32, %"class.blink::HeapVector.406" }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.404"*, i32, i32 }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::HeapHashMap.421"* }
%"class.blink::HeapHashMap.421" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.221", %"class.blink::Member.223", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.221" = type { %"class.WTF::SingleThreadedBitField.222" }
%"class.WTF::SingleThreadedBitField.222" = type { i32 }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.228", %"class.WTF::AtomicString", %"class.WTF::Vector.230" }
%"class.WTF::RefCounted.228" = type { %"class.base::RefCounted.229" }
%"class.base::RefCounted.229" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.230" = type { %"class.WTF::VectorBuffer.231" }
%"class.WTF::VectorBuffer.231" = type { %"class.WTF::VectorBufferBase.232", [32 x i8] }
%"class.WTF::VectorBufferBase.232" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.996", %"class.WTF::Vector.996", i8, i32, %"class.blink::Member.1003", %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::Member.1011", %"class.blink::Member.1013", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1021", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1027", %"class.blink::Member.1029", %"class.blink::Member.430", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1032", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.406", %"class.blink::Member.404", %"class.blink::Member.1057", %"class.blink::Member.404", %"class.blink::Member.404", %"class.blink::Member.404", %"class.blink::UserActionElementSet", %"class.blink::Member.1066", double, double, i64, i64, %"class.blink::HeapHashSet.1068", %"class.blink::HeapHashSet.1075", i16, i8, %"class.blink::Member.1082", %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088", %"class.blink::TextLinkColors", %"class.blink::Member.1090", i8, [7 x i8], %"class.blink::HeapHashMap.1092", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.404", %"class.WTF::Vector.1099", %"class.blink::Member.1104", %"class.blink::Member.1106", i8, %"class.blink::Member.404", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1108", %"class.blink::HeapVector.1110", %"class.std::__1::unique_ptr.1118", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1124", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1137", %"class.WTF::Vector.1139", i8, i8, %"class.std::__1::unique_ptr.1144", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.406", %"class.blink::HeapVector.1150", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1158", i8, i32, %"class.blink::Member.1160", %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1166", %"class.WTF::HashMap.1168", %"class.blink::Member.1173", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.387", %"class.blink::Member.387", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1181", i8, i32, %"class.blink::Member.1188", %"class.blink::Member.1190", i32, %"class.blink::Member.1192", %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.std::__1::unique_ptr.1198", i64, %"class.std::__1::unique_ptr.1204", i32, i32, %"class.blink::Member.1219", %"class.blink::Member.1221", %"class.blink::Member.1223", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1225", %"class.WTF::Vector.1227", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1232", %"class.blink::Member.1239", %"class.std::__1::unique_ptr.1241", %"class.blink::Member.1247", i8, i8, %"class.WTF::String", %"class.blink::Member.1249", i8, [7 x i8], %"class.blink::HeapHashMap.1251", %"class.blink::HeapObserverSet.1258", %"class.blink::Member.1266", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1268", i32, i8, i8, %"class.blink::WeakMember.1270", %"class.blink::Member.1271" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.989" }
%"class.blink::HeapHashMap.989" = type { %"class.WTF::HashMap.992" }
%"class.WTF::HashMap.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.996" = type { %"class.WTF::VectorBuffer.997" }
%"class.WTF::VectorBuffer.997" = type { %"class.WTF::VectorBufferBase.998" }
%"class.WTF::VectorBufferBase.998" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.999 }
%class.scoped_refptr.999 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1000", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1000" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.287" }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i32 }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1284", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1317", i32, i8, [3 x i8], %"class.blink::HeapVector.1319", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1327", %"class.blink::Member.1329", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1338", %"class.blink::Member.1344", %"class.blink::Member.1346", i8, [7 x i8] }>
%"class.blink::Supplementable.1284" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1285" }
%"class.blink::HeapHashMap.1285" = type { %"class.WTF::HashMap.1288" }
%"class.WTF::HashMap.1288" = type { %"class.WTF::HashTable.1289" }
%"class.WTF::HashTable.1289" = type <{ %"struct.WTF::KeyValuePair.1291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1291" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1292" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.957" }
%"class.blink::HeapHashSet.957" = type { %"class.WTF::HashSet.960" }
%"class.WTF::HashSet.960" = type { %"class.WTF::HashTable.961" }
%"class.WTF::HashTable.961" = type <{ %"class.blink::WeakMember.963"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.963" = type opaque
%"class.blink::Supplementable.1292" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1293" }
%"class.blink::HeapHashMap.1293" = type { %"class.WTF::HashMap.1296" }
%"class.WTF::HashMap.1296" = type { %"class.WTF::HashTable.1297" }
%"class.WTF::HashTable.1297" = type <{ %"struct.WTF::KeyValuePair.1299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1299" = type { i8*, %"class.blink::Member.1358" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1360" }
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1300, %"class.std::__1::unique_ptr.1301", %"class.std::__1::unique_ptr.1301", %"class.std::__1::unique_ptr.1307", %"class.std::__1::unique_ptr.1307", %"class.blink::Member.1005", i32, [4 x i8], %"class.WTF::HashSet.1313", i32, i32 }
%class.scoped_refptr.1300 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1313" = type { %"class.WTF::HashTable.1314" }
%"class.WTF::HashTable.1314" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1319" = type { %"class.WTF::Vector.1322" }
%"class.WTF::Vector.1322" = type { %"class.WTF::VectorBuffer.1323" }
%"class.WTF::VectorBuffer.1323" = type { %"class.WTF::VectorBufferBase.1324" }
%"class.WTF::VectorBufferBase.1324" = type { %"class.blink::Member.1325"*, i32, i32 }
%"class.blink::Member.1325" = type opaque
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1331", i32, i32 }
%"class.blink::HeapHashMap.1331" = type { %"class.WTF::HashMap.1334" }
%"class.WTF::HashMap.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"struct.WTF::KeyValuePair.1337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1337" = type opaque
%"class.std::__1::unique_ptr.1338" = type { %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1015" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.blink::KURL"* }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1031 }
%class.scoped_refptr.1031 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1035 }
%class.scoped_refptr.1035 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1036", i32, i32, %"class.blink::Persistent.1038" }
%"class.WTF::RefCounted.1036" = type { %"class.base::RefCounted.1037" }
%"class.base::RefCounted.1037" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1038" = type { %"class.blink::PersistentBase.1039" }
%"class.blink::PersistentBase.1039" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1042" }
%"class.blink::HeapHashMap.1042" = type { %"class.WTF::HashMap.1045" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1048"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1048" = type { %"class.blink::WeakMember.1049", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1059" }
%"class.blink::HeapHashMap.1059" = type { %"class.WTF::HashMap.1062" }
%"class.WTF::HashMap.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"struct.WTF::KeyValuePair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1065" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1068" = type { %"class.WTF::HashSet.1071" }
%"class.WTF::HashSet.1071" = type { %"class.WTF::HashTable.1072" }
%"class.WTF::HashTable.1072" = type <{ %"class.blink::WeakMember.1074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1074" = type opaque
%"class.blink::HeapHashSet.1075" = type { %"class.WTF::HashSet.1078" }
%"class.WTF::HashSet.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"class.blink::WeakMember.1081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1081" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1092" = type { %"class.WTF::HashMap.1095" }
%"class.WTF::HashMap.1095" = type { %"class.WTF::HashTable.1096" }
%"class.WTF::HashTable.1096" = type <{ %"struct.WTF::KeyValuePair.1098"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1098" = type opaque
%"class.WTF::Vector.1099" = type { %"class.WTF::VectorBuffer.1100" }
%"class.WTF::VectorBuffer.1100" = type { %"class.WTF::VectorBufferBase.1101" }
%"class.WTF::VectorBufferBase.1101" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1110" = type { %"class.WTF::Vector.1113" }
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %"class.blink::Member.1116"*, i32, i32 }
%"class.blink::Member.1116" = type opaque
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1124" = type { %"class.WTF::HashSet.1127" }
%"class.WTF::HashSet.1127" = type { %"class.WTF::HashTable.1128" }
%"class.WTF::HashTable.1128" = type <{ %"class.blink::WeakMember.1130"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1130" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1131", i32, [4 x i8] }>
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %"struct.std::__1::pair.1134"*, i32, i32 }
%"struct.std::__1::pair.1134" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1150" = type { %"class.WTF::Vector.1153" }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"class.blink::Member.1156"*, i32, i32 }
%"class.blink::Member.1156" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.387" }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1172" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1056", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1053, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1053 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1054" }>
%"class.base::RefCountedThreadSafe.1054" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1055 }
%class.scoped_refptr.1055 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.292" }
%"struct.std::__1::atomic.292" = type { %"struct.std::__1::__atomic_base.293" }
%"struct.std::__1::__atomic_base.293" = type { %"struct.std::__1::__atomic_base.294" }
%"struct.std::__1::__atomic_base.294" = type { %"struct.std::__1::__cxx_atomic_impl.295" }
%"struct.std::__1::__cxx_atomic_impl.295" = type { %"struct.std::__1::__cxx_atomic_base_impl.296" }
%"struct.std::__1::__cxx_atomic_base_impl.296" = type { i8 }
%"class.blink::WeakMember.1056" = type { %"class.blink::MemberBase.388" }
%"class.blink::HeapHashSet.1181" = type { %"class.WTF::HashSet.1184" }
%"class.WTF::HashSet.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ %"class.blink::Member.1187"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1187" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1207", %"class.WTF::HashSet.1207", %"class.WTF::HashSet.1207", %"class.WTF::HashSet.1207", %"class.WTF::HashSet.1207", %"class.WTF::HashSet.1207", i32, [4 x i8], %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", %"class.WTF::HashMap.1211", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"struct.WTF::KeyValuePair.1215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1215" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1232" = type { %"class.WTF::HashMap.1235" }
%"class.WTF::HashMap.1235" = type { %"class.WTF::HashTable.1236" }
%"class.WTF::HashTable.1236" = type <{ %"struct.WTF::KeyValuePair.1238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1238" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1251" = type { %"class.WTF::HashMap.1254" }
%"class.WTF::HashMap.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"struct.WTF::KeyValuePair.1257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1257" = type opaque
%"class.blink::HeapObserverSet.1258" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1259" }
%"class.blink::HeapHashSet.1259" = type { %"class.WTF::HashSet.1262" }
%"class.WTF::HashSet.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"class.blink::WeakMember.1265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1265" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.387", %"class.blink::HeapHashSet.1275", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1282", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1275" = type { %"class.WTF::HashSet.1278" }
%"class.WTF::HashSet.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"class.blink::Member.1281"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1281" = type opaque
%"class.blink::HeapTaskRunnerTimer.1282" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1283", { i64, i64 } }
%"class.blink::WeakMember.1283" = type { %"class.blink::MemberBase.1269" }
%"class.blink::WeakMember.1270" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.733 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.718", %"class.std::__1::unique_ptr.720" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.312", %"class.blink::DataRef.435", %"class.blink::DataRef.439", %"class.blink::DataRef.638", %"class.blink::DataRef.701", %"class.blink::DataRef.705", %"class.blink::DataRef.709", %"class.blink::DataRef.713", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.237", %"class.blink::DataRef.239", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.237" = type { %"class.base::RefCounted.238" }
%"class.base::RefCounted.238" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.239" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.241", %"class.blink::Font" }
%"class.WTF::RefCounted.241" = type { %"class.base::RefCounted.242" }
%"class.base::RefCounted.242" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.275 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.244, %class.scoped_refptr.252, %class.scoped_refptr.262, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.274 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1348", [4 x i8] }>
%"class.WTF::RefCounted.1348" = type { %"class.base::RefCounted.1349" }
%"class.base::RefCounted.1349" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.244 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.250", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.245" }
%"class.WTF::Vector.245" = type { %"class.WTF::VectorBuffer.246" }
%"class.WTF::VectorBuffer.246" = type { %"class.WTF::VectorBufferBase.247" }
%"class.WTF::VectorBufferBase.247" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.253", %"class.WTF::RefCounted.260", [4 x i8] }>
%"class.blink::FontSettings.253" = type { %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::FontTagValuePair.257"*, i32, i32 }
%"class.blink::FontTagValuePair.257" = type { i32, float }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.262 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.263", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.271, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.263" = type { %"class.base::RefCounted.264" }
%"class.base::RefCounted.264" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.267 }
%union.anon.267 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.271 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.272", [4 x i8] }>
%"class.WTF::RefCounted.272" = type { %"class.base::RefCounted.273" }
%"class.base::RefCounted.273" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.274 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.275 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.276", %"class.WTF::Vector.278", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.308", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.276" = type { %"class.base::RefCounted.277" }
%"class.base::RefCounted.277" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280", [8 x i8] }
%"class.WTF::VectorBufferBase.280" = type { %class.scoped_refptr.281*, i32, i32 }
%class.scoped_refptr.281 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.282", [4 x i8] }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.298", %class.scoped_refptr.305, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.282" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.286 }
%union.anon.286 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.297, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.287" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.287" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.292" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.297 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.301, %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.305 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.306", [4 x i8] }>
%"class.WTF::RefCounted.306" = type { %"class.base::RefCounted.307" }
%"class.base::RefCounted.307" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.311, i8, i8, i8, i8 }>
%union.anon.311 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.312" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.314", [4 x i8], %"class.blink::DataRef.316", %"class.blink::DataRef.352", %"class.WTF::Vector.356", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.360, %class.scoped_refptr.369, %"class.blink::Persistent.377", %"class.blink::Persistent.379", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.314" = type { %"class.base::RefCounted.315" }
%"class.base::RefCounted.315" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.316" = type { %class.scoped_refptr.317 }
%class.scoped_refptr.317 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.318", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.320, %class.scoped_refptr.327, %"class.blink::Persistent.340", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.318" = type { %"class.base::RefCounted.319" }
%"class.base::RefCounted.319" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.320 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.321", %"class.WTF::Vector.322" }
%"class.base::RefCountedThreadSafe.321" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324" }
%"class.WTF::VectorBufferBase.324" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.327 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.328", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.328" = type { %"class.base::RefCounted.329" }
%"class.base::RefCounted.329" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent.332" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1402 }
%class.scoped_refptr.1402 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1403", %"class.WTF::Vector.621", %"class.WTF::Vector.1405", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1403" = type { %"class.base::RefCounted.1404" }
%"class.base::RefCounted.1404" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.622" }
%"class.WTF::VectorBuffer.622" = type { %"class.WTF::VectorBufferBase.623" }
%"class.WTF::VectorBufferBase.623" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1408 }
%union.anon.1408 = type { double }
%"class.blink::Persistent.332" = type { %"class.blink::PersistentBase.333" }
%"class.blink::PersistentBase.333" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.336" }
%"class.WTF::HashMap.336" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type opaque
%"class.blink::Persistent.340" = type { %"class.blink::PersistentBase.341" }
%"class.blink::PersistentBase.341" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.344" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.347", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.352" = type { %class.scoped_refptr.353 }
%class.scoped_refptr.353 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.354", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.354" = type { %"class.base::RefCounted.355" }
%"class.base::RefCounted.355" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.356" = type { %"class.WTF::VectorBuffer.357" }
%"class.WTF::VectorBuffer.357" = type { %"class.WTF::VectorBufferBase.232" }
%class.scoped_refptr.360 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.361", %"class.WTF::Vector.363" }
%"class.WTF::RefCounted.361" = type { %"class.base::RefCounted.362" }
%"class.base::RefCounted.362" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.363" = type { %"class.WTF::VectorBuffer.364" }
%"class.WTF::VectorBuffer.364" = type { %"class.WTF::VectorBufferBase.365" }
%"class.WTF::VectorBufferBase.365" = type { %"struct.std::__1::pair.366"*, i32, i32 }
%"struct.std::__1::pair.366" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.369 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.370", [4 x i8], %"class.WTF::Vector.372" }
%"class.WTF::RefCounted.370" = type { %"class.base::RefCounted.371" }
%"class.base::RefCounted.371" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.374", [28 x i8] }>
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.377" = type { %"class.blink::PersistentBase.378" }
%"class.blink::PersistentBase.378" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::Persistent.379" = type { %"class.blink::PersistentBase.380" }
%"class.blink::PersistentBase.380" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.383", %"class.blink::Member.433" }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.435" = type { %class.scoped_refptr.436 }
%class.scoped_refptr.436 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.437", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.439" = type { %class.scoped_refptr.440 }
%class.scoped_refptr.440 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.441", [4 x i8], %"class.blink::DataRef.443", %"class.blink::DataRef.509", %"class.blink::TransformOperations", %class.scoped_refptr.369, %"class.blink::Persistent.632", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.441" = type { %"class.base::RefCounted.442" }
%"class.base::RefCounted.442" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.445", [4 x i8], %"class.blink::DataRef.447", %"class.blink::Persistent.485", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.449", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.467, %class.scoped_refptr.470, %class.scoped_refptr.473, %class.scoped_refptr.476, %class.scoped_refptr.477, %class.scoped_refptr.478, %"class.blink::Persistent.485", %"class.blink::Persistent.500", %"class.absl::optional.504", %"class.absl::optional.504", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.451", %"class.std::__1::unique_ptr.456" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.459", %"class.WTF::Vector.451", i32, i32 }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.467 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.468", [4 x i8] }>
%"class.WTF::RefCounted.468" = type { %"class.base::RefCounted.469" }
%"class.base::RefCounted.469" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.470 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.471", [4 x i8] }>
%"class.WTF::RefCounted.471" = type { %"class.base::RefCounted.472" }
%"class.base::RefCounted.472" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.473 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.474" }>
%"class.WTF::RefCounted.474" = type { %"class.base::RefCounted.475" }
%"class.base::RefCounted.475" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.476 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.477 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.478 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.479", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.481" }
%"class.blink::DataRef.481" = type { %class.scoped_refptr.482 }
%class.scoped_refptr.482 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.377", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.483" }
%"class.WTF::RefCounted.483" = type { %"class.base::RefCounted.484" }
%"class.base::RefCounted.484" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.500" = type { %"class.blink::PersistentBase.501" }
%"class.blink::PersistentBase.501" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.470, %"class.blink::Member.347", i32, [4 x i8] }>
%"class.absl::optional.504" = type { %"class.absl::optional_internal::optional_data.505" }
%"class.absl::optional_internal::optional_data.505" = type { %"class.absl::optional_internal::optional_data_base.506" }
%"class.absl::optional_internal::optional_data_base.506" = type { %"class.absl::optional_internal::optional_data_dtor_base.507" }
%"class.absl::optional_internal::optional_data_dtor_base.507" = type { i8, [3 x i8], %union.anon.508 }
%union.anon.508 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.485" = type { %"class.blink::PersistentBase.486" }
%"class.blink::PersistentBase.486" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.489" }
%"class.blink::HeapVector.489" = type { %"class.WTF::Vector.492" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { %"class.blink::Member.495"*, i32, i32 }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.509" = type { %class.scoped_refptr.510 }
%class.scoped_refptr.510 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.511", %"class.blink::DataRef.513", %"class.blink::DataRef.517", %"class.blink::DataRef.526", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.545", %"class.std::__1::unique_ptr.556", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.615", %"class.WTF::Vector.621", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.511" = type { %"class.base::RefCounted.512" }
%"class.base::RefCounted.512" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.513" = type { %class.scoped_refptr.514 }
%class.scoped_refptr.514 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.515", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.519", [4 x i8], %"class.WTF::Vector.521", i8, [7 x i8] }>
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { i32*, i32, i32 }
%"class.blink::DataRef.526" = type { %class.scoped_refptr.527 }
%class.scoped_refptr.527 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.528", [4 x i8], %"class.WTF::HashMap.530", %"class.WTF::HashMap.530", %"class.WTF::HashMap.530", %"class.WTF::HashMap.530", %"class.WTF::HashMap.530", %"class.WTF::HashMap.530", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.540", %"class.WTF::Vector.451", %"class.WTF::Vector.451", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.528" = type { %"class.base::RefCounted.529" }
%"class.base::RefCounted.529" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"struct.WTF::KeyValuePair.534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.534" = type { %"class.WTF::String", %"class.WTF::Vector.1392" }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { i64*, i32, i32 }
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type { i64, %"class.WTF::Vector.621" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.544" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.548" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1397", %"class.absl::optional.1397", %"class.absl::optional.1397" }
%"class.absl::optional.1397" = type { %"class.absl::optional_internal::optional_data.1398" }
%"class.absl::optional_internal::optional_data.1398" = type { %"class.absl::optional_internal::optional_data_base.1399" }
%"class.absl::optional_internal::optional_data_base.1399" = type { %"class.absl::optional_internal::optional_data_dtor_base.1400" }
%"class.absl::optional_internal::optional_data_dtor_base.1400" = type { i8, %union.anon.1401 }
%union.anon.1401 = type { i32 }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.356", %"class.WTF::Vector.570", %"class.WTF::Vector.559", %"class.WTF::Vector.575", %"class.WTF::Vector.580", %"class.WTF::Vector.585" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.559", %"class.WTF::Vector.559", %"class.WTF::Vector.563" }
%"class.WTF::Vector.563" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { %class.scoped_refptr.566*, i32, i32 }
%class.scoped_refptr.566 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.567" }
%"class.base::RefCountedThreadSafe.567" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { i32*, i32, i32 }
%"class.WTF::Vector.580" = type { %"class.WTF::VectorBuffer.581" }
%"class.WTF::VectorBuffer.581" = type { %"class.WTF::VectorBufferBase.582" }
%"class.WTF::VectorBufferBase.582" = type { i32*, i32, i32 }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::Persistent.377"*, i32, i32 }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.377", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.626" }
%"class.WTF::Vector.626" = type { %"class.WTF::VectorBuffer.627" }
%"class.WTF::VectorBuffer.627" = type { %"class.WTF::VectorBufferBase.628" }
%"class.WTF::VectorBufferBase.628" = type { %class.scoped_refptr.629*, i32, i32 }
%class.scoped_refptr.629 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.474", [4 x i8] }>
%"class.blink::Persistent.632" = type { %"class.blink::PersistentBase.633" }
%"class.blink::PersistentBase.633" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.636" }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.638" = type { %class.scoped_refptr.639 }
%class.scoped_refptr.639 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.640", [4 x i8], %"class.blink::DataRef.642", %"class.blink::DataRef.646", %"class.blink::DataRef.663", %"class.blink::DataRef.681", %"class.blink::DataRef.693", %"class.blink::DataRef.697", %class.scoped_refptr.667, i32, [4 x i8] }>
%"class.WTF::RefCounted.640" = type { %"class.base::RefCounted.641" }
%"class.base::RefCounted.641" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.642" = type { %class.scoped_refptr.643 }
%class.scoped_refptr.643 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.644", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.644" = type { %"class.base::RefCounted.645" }
%"class.base::RefCounted.645" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.646" = type { %class.scoped_refptr.647 }
%class.scoped_refptr.647 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.648", %class.scoped_refptr.650, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.648" = type { %"class.base::RefCounted.649" }
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.650 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.651", %"class.std::__1::unique_ptr.657", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.471" }>
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.665", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.667, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.683", [4 x i8], %class.scoped_refptr.685, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.685 = type { %"class.base::RefCountedData.686"* }
%"class.base::RefCountedData.686" = type { %"class.base::RefCountedThreadSafe.687", %"class.WTF::Vector.688" }
%"class.base::RefCountedThreadSafe.687" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.693" = type { %class.scoped_refptr.694 }
%class.scoped_refptr.694 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.695", %class.scoped_refptr.667, %class.scoped_refptr.667, %class.scoped_refptr.667 }
%"class.WTF::RefCounted.695" = type { %"class.base::RefCounted.696" }
%"class.base::RefCounted.696" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.697" = type { %class.scoped_refptr.698 }
%class.scoped_refptr.698 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.699", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.667 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.668", %"class.blink::Persistent.670", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.668" = type { %"class.base::RefCounted.669" }
%"class.base::RefCounted.669" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.670" = type { %"class.blink::PersistentBase.671" }
%"class.blink::PersistentBase.671" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.207" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.404", %"class.blink::HeapHashMap.674" }
%"class.blink::HeapHashMap.674" = type { %"class.WTF::HashMap.677" }
%"class.WTF::HashMap.677" = type { %"class.WTF::HashTable.678" }
%"class.WTF::HashTable.678" = type <{ %"struct.WTF::KeyValuePair.680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.680" = type opaque
%"class.blink::DataRef.701" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.703", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.703" = type { %"class.base::RefCounted.704" }
%"class.base::RefCounted.704" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.705" = type { %class.scoped_refptr.706 }
%class.scoped_refptr.706 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.707", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.707" = type { %"class.base::RefCounted.708" }
%"class.base::RefCounted.708" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.711", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.713" = type { %class.scoped_refptr.714 }
%class.scoped_refptr.714 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.715", %class.scoped_refptr.717 }
%"class.WTF::RefCounted.715" = type { %"class.base::RefCounted.716" }
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.717 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.987", %"class.blink::StyleVariables", %class.scoped_refptr.717 }
%"class.WTF::RefCounted.987" = type { %"class.base::RefCounted.988" }
%"class.base::RefCounted.988" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.723" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.WTF::Vector.726"* }
%"class.WTF::Vector.726" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.235 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.734", %"class.WTF::Vector.886", %"class.blink::HeapHashSet.891", %"class.WTF::Vector.886", %"class.blink::HeapVector.898", %"class.blink::HeapVector.905", %"class.blink::HeapHashMap.912", %"class.WTF::HashSet.919", %"class.WTF::HashSet.919", %"class.blink::HeapHashMap.923", %"class.blink::HeapHashMap.923", %"class.blink::HeapHashMap.923", %"class.blink::HeapHashMap.923" }
%"class.blink::HeapVector.734" = type { %"class.WTF::Vector.737" }
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.740", %"struct.blink::Timing", %"class.blink::Member.816", i32, %"class.blink::Member.828", %"class.WTF::Vector.585" }
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.763", i8, %"class.absl::optional.744", %"class.absl::optional.811" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.742", %"struct.blink::Timing", %"class.blink::Member.749", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.744", %"class.absl::optional.758", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.753", %"class.absl::optional.753", i8, i8, i8, %"class.absl::optional.744", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.753" = type { %"class.absl::optional_internal::optional_data.754" }
%"class.absl::optional_internal::optional_data.754" = type { %"class.absl::optional_internal::optional_data_base.755" }
%"class.absl::optional_internal::optional_data_base.755" = type { %"class.absl::optional_internal::optional_data_dtor_base.756" }
%"class.absl::optional_internal::optional_data_dtor_base.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { double }
%"class.absl::optional.758" = type { %"class.absl::optional_internal::optional_data.759" }
%"class.absl::optional_internal::optional_data.759" = type { %"class.absl::optional_internal::optional_data_base.760" }
%"class.absl::optional_internal::optional_data_base.760" = type { %"class.absl::optional_internal::optional_data_dtor_base.761" }
%"class.absl::optional_internal::optional_data_dtor_base.761" = type { i8, %union.anon.762 }
%union.anon.762 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.767", %"class.blink::Member.775", %"class.blink::Member.799", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.566, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.767" = type { %"class.WTF::Vector.770" }
%"class.WTF::Vector.770" = type { %"class.WTF::VectorBuffer.771" }
%"class.WTF::VectorBuffer.771" = type { %"class.WTF::VectorBufferBase.772" }
%"class.WTF::VectorBufferBase.772" = type { %"class.blink::Member.773"*, i32, i32 }
%"class.blink::Member.773" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.753", %"class.absl::optional.1372", %class.scoped_refptr.566 }
%"class.absl::optional.1372" = type { %"class.absl::optional_internal::optional_data.1373" }
%"class.absl::optional_internal::optional_data.1373" = type { %"class.absl::optional_internal::optional_data_base.1374" }
%"class.absl::optional_internal::optional_data_base.1374" = type { %"class.absl::optional_internal::optional_data_dtor_base.1375" }
%"class.absl::optional_internal::optional_data_dtor_base.1375" = type { i8, %union.anon.1376 }
%union.anon.1376 = type { i32 }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::HeapHashMap.777"* }
%"class.blink::HeapHashMap.777" = type { %"class.WTF::HashMap.780" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type { %"class.blink::PropertyHandle", %"class.blink::Member.784" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.788" }
%"class.blink::HeapVector.788" = type { %"class.WTF::Vector.791" }
%"class.WTF::Vector.791" = type { %"class.WTF::VectorBuffer.792" }
%"class.WTF::VectorBuffer.792" = type { %"class.WTF::VectorBufferBase.793" }
%"class.WTF::VectorBufferBase.793" = type { %"class.blink::Member.794"*, i32, i32 }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.566, i32, [4 x i8] }>
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.803" }
%"class.blink::HeapVector.803" = type { %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %"class.blink::Member.809"*, i32, i32 }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1365", %class.scoped_refptr.566, double, double, double, double }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.744" = type { %"class.absl::optional_internal::optional_data.745" }
%"class.absl::optional_internal::optional_data.745" = type { %"class.absl::optional_internal::optional_data_base.746" }
%"class.absl::optional_internal::optional_data_base.746" = type { %"class.absl::optional_internal::optional_data_dtor_base.747" }
%"class.absl::optional_internal::optional_data_dtor_base.747" = type { i8, %union.anon.748 }
%union.anon.748 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.811" = type { %"class.absl::optional_internal::optional_data.812" }
%"class.absl::optional_internal::optional_data.812" = type { %"class.absl::optional_internal::optional_data_base.813" }
%"class.absl::optional_internal::optional_data_base.813" = type { %"class.absl::optional_internal::optional_data_dtor_base.814" }
%"class.absl::optional_internal::optional_data_dtor_base.814" = type { i8, %union.anon.815 }
%union.anon.815 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.744", i32, [4 x i8], %class.scoped_refptr.566, i16, [6 x i8] }>
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.820", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.820" = type { %"class.WTF::Vector.823" }
%"class.WTF::Vector.823" = type { %"class.WTF::VectorBuffer.824" }
%"class.WTF::VectorBuffer.824" = type { %"class.WTF::VectorBufferBase.825" }
%"class.WTF::VectorBufferBase.825" = type { %"class.blink::Member.826"*, i32, i32 }
%"class.blink::Member.826" = type opaque
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.387", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.836", %"class.std::__1::unique_ptr.842", %"class.absl::optional.875" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"class.blink::Member.834"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.753", %"class.absl::optional.744", %"class.absl::optional.744", %"class.absl::optional.811", %"class.absl::optional.744", i8, [3 x i8], i32, %"class.blink::Member.964", %"class.blink::Member.964", %"class.blink::Member.966", %"class.blink::Member.387", %"class.blink::Member.828", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.968", %"class.blink::Member.968", %"class.blink::Member.968", %"class.std::__1::unique_ptr.970", i8, [3 x i8], i32, %"class.blink::Member.976", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.948" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.936" }
%"class.blink::HeapVector.936" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941", [32 x i8] }
%"class.WTF::VectorBufferBase.941" = type { %"struct.std::__1::pair.942"*, i32, i32 }
%"struct.std::__1::pair.942" = type { %"class.WTF::AtomicString", %"class.blink::Member.943" }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::HeapVector.945"* }
%"class.blink::HeapVector.945" = type opaque
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.WTF::Vector.951"* }
%"class.WTF::Vector.951" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.955" }
%"class.blink::WeakMember.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.753", %"class.absl::optional.753", double, i8, i32 }
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.980", %"class.std::__1::unique_ptr.981", %"class.blink::Member.834" }
%"class.blink::ThreadState::PrefinalizerRegistration.980" = type { i8 }
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.836" = type { %"class.WTF::HashSet.839" }
%"class.WTF::HashSet.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.846", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.846" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.847" }
%"class.std::__1::__hash_table.847" = type <{ %"class.std::__1::unique_ptr.848", %"class.std::__1::__compressed_pair.858", %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.867", [4 x i8] }>
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850", %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"struct.std::__1::__hash_node_base.851"** }
%"struct.std::__1::__hash_node_base.851" = type { %"struct.std::__1::__hash_node_base.851"* }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.std::__1::__bucket_list_deallocator.853" }
%"class.std::__1::__bucket_list_deallocator.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"struct.std::__1::__hash_node_base.851" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.875" = type { %"class.absl::optional_internal::optional_data.876" }
%"class.absl::optional_internal::optional_data.876" = type { %"class.absl::optional_internal::optional_data_base.877" }
%"class.absl::optional_internal::optional_data_base.877" = type { %"class.absl::optional_internal::optional_data_dtor_base.878" }
%"class.absl::optional_internal::optional_data_dtor_base.878" = type { i8, %union.anon.879 }
%union.anon.879 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.880" }
%"class.absl::optional.880" = type { %"class.absl::optional_internal::optional_data.881" }
%"class.absl::optional_internal::optional_data.881" = type { %"class.absl::optional_internal::optional_data_base.882" }
%"class.absl::optional_internal::optional_data_base.882" = type { %"class.absl::optional_internal::optional_data_dtor_base.883" }
%"class.absl::optional_internal::optional_data_dtor_base.883" = type { i8, %union.anon.884 }
%union.anon.884 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.891" = type { %"class.WTF::HashSet.894" }
%"class.WTF::HashSet.894" = type { %"class.WTF::HashTable.895" }
%"class.WTF::HashTable.895" = type <{ %"class.blink::Member.897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.897" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888" }
%"class.WTF::VectorBufferBase.888" = type { i32*, i32, i32 }
%"class.blink::HeapVector.898" = type { %"class.WTF::Vector.901" }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.834", %"class.blink::Member.740", %"struct.blink::Timing", %"class.blink::Member.816", i32, %"class.blink::Member.828", %"class.WTF::Vector.585" }
%"class.blink::HeapVector.905" = type { %"class.WTF::Vector.908" }
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::VectorBufferBase.910" = type { %"class.blink::Member.834"*, i32, i32 }
%"class.blink::HeapHashMap.912" = type { %"class.WTF::HashMap.915" }
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1388" }
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.235, %class.scoped_refptr.235, %class.scoped_refptr.235, double, %"class.blink::Member.740" }
%"class.WTF::HashSet.919" = type { %"class.WTF::HashTable.920" }
%"class.WTF::HashTable.920" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.923" = type { %"class.WTF::HashMap.926" }
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.929" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1378" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::HeapVector.1380"* }
%"class.blink::HeapVector.1380" = type { %"class.WTF::Vector.1383" }
%"class.WTF::Vector.1383" = type { %"class.WTF::VectorBuffer.1384" }
%"class.WTF::VectorBuffer.1384" = type { %"class.WTF::VectorBufferBase.1385", [8 x i8] }
%"class.WTF::VectorBufferBase.1385" = type { %"class.blink::Member.1365"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.930", %"class.WTF::HashSet.930", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::(anonymous namespace)::IsMonospaceChecker"* }
%"class.blink::(anonymous namespace)::IsMonospaceChecker" = type <{ %"class.blink::CSSInterpolationType::CSSConversionChecker", i8, [7 x i8] }>
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"struct.blink::FontDescription::Size" = type { i8, float }
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* }
%"class.blink::(anonymous namespace)::InheritedFontSizeChecker" = type <{ %"class.blink::CSSInterpolationType::CSSConversionChecker", float, [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::cssvalue::CSSPendingSystemFontValue" = type { %"class.blink::CSSValue", i32 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", %class.scoped_refptr.184 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink28CSSFontSizeInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

@_ZTVN5blink28CSSFontSizeInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSFontSizeInterpolationType"*)* @_ZN5blink28CSSFontSizeInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSFontSizeInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink28CSSFontSizeInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.187"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink28CSSFontSizeInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink28CSSFontSizeInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZN5blink17font_family_names16kWebkitMonospaceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink12_GLOBAL__N_118IsMonospaceCheckerE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)* @_ZN5blink12_GLOBAL__N_118IsMonospaceCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink12_GLOBAL__N_118IsMonospaceChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink12_GLOBAL__N_124InheritedFontSizeCheckerE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)* @_ZN5blink12_GLOBAL__N_124InheritedFontSizeCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink12_GLOBAL__N_124InheritedFontSizeChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16), %"class.WTF::Vector.187"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #9
  %6 = ptrtoint %"class.blink::InterpolableLength"* %5 to i64
  %7 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %9 = bitcast %class.scoped_refptr.184* %8 to i64*
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.187"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN5blink12_GLOBAL__N_119MaybeConvertKeywordENS_10CSSValueIDERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS7_14default_deleteISA_EEEELj0ENS5_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret %0, i32 71, %"class.blink::StyleResolverState"* dereferenceable(600) %2, %"class.WTF::Vector.187"* dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_119MaybeConvertKeywordENS_10CSSValueIDERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS7_14default_deleteISA_EEEELj0ENS5_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, i32, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.187"* nocapture dereferenceable(16)) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::unique_ptr.1412", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::FontDescription::Size"*
  %8 = alloca %"class.std::__1::unique_ptr.1350", align 8
  %9 = icmp eq i32 %1, 78
  switch i32 %1, label %77 [
    i32 78, label %10
    i32 75, label %10
    i32 74, label %10
    i32 73, label %10
    i32 72, label %10
    i32 71, label %10
    i32 70, label %10
    i32 69, label %10
    i32 68, label %10
  ]

10:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 2, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %16, i64 0, i32 1, i32 0, i32 12, i32 0
  %18 = bitcast %"struct.blink::FontDescription::BitFields"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 1792
  %21 = icmp eq i64 %20, 1024
  br i1 %21, label %22, label %33

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %24 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %23, align 8
  %25 = icmp eq %"class.blink::SharedFontFamily"* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br label %33

33:                                               ; preds = %10, %22, %26
  %34 = phi i1 [ false, %22 ], [ false, %10 ], [ %32, %26 ]
  %35 = zext i1 %34 to i8
  %36 = bitcast %"class.std::__1::unique_ptr.1412"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = tail call noalias i8* @malloc(i64 24) #9
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %39, align 8
  %40 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_118IsMonospaceCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 16
  store i8 %35, i8* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.1412", %"class.std::__1::unique_ptr.1412"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.1412"* %5 to i8**
  store i8* %37, i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %58, label %49, !prof !2

49:                                               ; preds = %33
  %50 = ptrtoint i8* %37 to i64
  %51 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %51, align 8
  %53 = zext i32 %45 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %52, i64 %53
  %55 = bitcast %"class.std::__1::unique_ptr.190"* %54 to i64*
  store i64 %50, i64* %55, align 8
  %56 = load i32, i32* %44, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %44, align 4
  store %"class.blink::(anonymous namespace)::IsMonospaceChecker"* null, %"class.blink::(anonymous namespace)::IsMonospaceChecker"** %42, align 8
  br label %66

58:                                               ; preds = %33
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_118IsMonospaceCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.187"* %3, %"class.std::__1::unique_ptr.1412"* nonnull dereferenceable(8) %5) #9
  %59 = load %"class.blink::(anonymous namespace)::IsMonospaceChecker"*, %"class.blink::(anonymous namespace)::IsMonospaceChecker"** %42, align 8
  store %"class.blink::(anonymous namespace)::IsMonospaceChecker"* null, %"class.blink::(anonymous namespace)::IsMonospaceChecker"** %42, align 8
  %60 = icmp eq %"class.blink::(anonymous namespace)::IsMonospaceChecker"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::(anonymous namespace)::IsMonospaceChecker"* %59 to void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)***
  %63 = load void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)**, void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)*, void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)** %63, i64 1
  %65 = load void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)*, void (%"class.blink::(anonymous namespace)::IsMonospaceChecker"*)** %64, align 8
  tail call void %65(%"class.blink::(anonymous namespace)::IsMonospaceChecker"* nonnull %59) #9
  br label %66

66:                                               ; preds = %49, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  %67 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 9
  %68 = add nsw i32 %1, -67
  %69 = select i1 %9, i32 8, i32 %68
  %70 = tail call float @_ZNK5blink11FontBuilder18FontSizeForKeywordEjb(%"class.blink::FontBuilder"* %67, i32 %69, i1 zeroext %34) #9
  %71 = fpext float %70 to double
  %72 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %71) #9, !noalias !3
  %73 = ptrtoint %"class.blink::InterpolableLength"* %72 to i64
  %74 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %73, i64* %74, align 8, !alias.scope !3
  %75 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %76 = bitcast %class.scoped_refptr.184* %75 to i64*
  store i64 0, i64* %76, align 8, !alias.scope !3
  br label %147

77:                                               ; preds = %4
  %78 = or i32 %1, 1
  %79 = icmp eq i32 %78, 77
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #9
  br label %147

82:                                               ; preds = %77
  %83 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #9
  %84 = tail call dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"* %2) #9
  %85 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %84, i64 0, i32 12, i32 0
  %86 = bitcast %"struct.blink::FontDescription::BitFields"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = lshr i64 %87, 21
  %89 = and i64 %88, 15
  %90 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %84, i64 0, i32 4
  %91 = bitcast float* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = lshr i64 %87, 3
  %94 = zext i32 %92 to i64
  %95 = shl nuw i64 %94, 32
  %96 = and i64 %93, 16
  %97 = or i64 %96, %89
  %98 = or i64 %97, %95
  store i64 %98, i64* %6, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.1350"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #9
  %100 = tail call noalias i8* @malloc(i64 24) #9
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = bitcast i8* %101 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %102, align 8
  %103 = bitcast i8* %100 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124InheritedFontSizeCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to i32*
  store i32 %92, i32* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.1350", %"class.std::__1::unique_ptr.1350"* %8, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.1350"* %8 to i8**
  store i8* %100, i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %122, label %113, !prof !2

113:                                              ; preds = %82
  %114 = ptrtoint i8* %100 to i64
  %115 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %115, align 8
  %117 = zext i32 %109 to i64
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %116, i64 %117
  %119 = bitcast %"class.std::__1::unique_ptr.190"* %118 to i64*
  store i64 %114, i64* %119, align 8
  %120 = load i32, i32* %108, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %108, align 4
  store %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* null, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %106, align 8
  br label %130

122:                                              ; preds = %82
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_124InheritedFontSizeCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.187"* %3, %"class.std::__1::unique_ptr.1350"* nonnull dereferenceable(8) %8) #9
  %123 = load %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %106, align 8
  store %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* null, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %106, align 8
  %124 = icmp eq %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %123 to void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)***
  %127 = load void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)**, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)** %127, i64 1
  %129 = load void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)** %128, align 8
  tail call void %129(%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* nonnull %123) #9
  br label %130

130:                                              ; preds = %113, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #9
  %131 = icmp eq i32 %1, 76
  br i1 %131, label %132, label %134

132:                                              ; preds = %130
  %133 = call i64 @_ZN5blink15FontDescription11SmallerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nonnull dereferenceable(8) %7) #9
  br label %136

134:                                              ; preds = %130
  %135 = call i64 @_ZN5blink15FontDescription10LargerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nonnull dereferenceable(8) %7) #9
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %135, %134 ], [ %133, %132 ]
  %138 = lshr i64 %137, 32
  %139 = trunc i64 %138 to i32
  %140 = bitcast i32 %139 to float
  %141 = fpext float %140 to double
  %142 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %141) #9, !noalias !6
  %143 = ptrtoint %"class.blink::InterpolableLength"* %142 to i64
  %144 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %143, i64* %144, align 8, !alias.scope !7
  %145 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %146 = bitcast %class.scoped_refptr.184* %145 to i64*
  store i64 0, i64* %146, align 8, !alias.scope !7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #9
  br label %147

147:                                              ; preds = %136, %80, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.187"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.1350", align 8
  %6 = tail call dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"* %2) #9
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 4
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.1350"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = tail call noalias i8* @malloc(i64 24) #9
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %13, align 8
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124InheritedFontSizeCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 %9, i32* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.1350", %"class.std::__1::unique_ptr.1350"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.1350"* %5 to i8**
  store i8* %11, i8** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %33, label %24, !prof !2

24:                                               ; preds = %4
  %25 = ptrtoint i8* %11 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %26, align 8
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %27, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.190"* %29 to i64*
  store i64 %25, i64* %30, align 8
  %31 = load i32, i32* %19, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %19, align 4
  store %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* null, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %17, align 8
  br label %41

33:                                               ; preds = %4
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_124InheritedFontSizeCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.187"* %3, %"class.std::__1::unique_ptr.1350"* nonnull dereferenceable(8) %5) #9
  %34 = load %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %17, align 8
  store %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* null, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %17, align 8
  %35 = icmp eq %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %34 to void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)***
  %38 = load void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)**, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)** %38, i64 1
  %40 = load void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)*, void (%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"*)** %39, align 8
  tail call void %40(%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* nonnull %34) #9
  br label %41

41:                                               ; preds = %24, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %42 = bitcast i32 %9 to float
  %43 = fpext float %42 to double
  %44 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %43) #9, !noalias !12
  %45 = ptrtoint %"class.blink::InterpolableLength"* %44 to i64
  %46 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %45, i64* %46, align 8, !alias.scope !12
  %47 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %48 = bitcast %class.scoped_refptr.184* %47 to i64*
  store i64 0, i64* %48, align 8, !alias.scope !12
  ret void
}

declare dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %2) #9
  %7 = icmp eq %"class.blink::InterpolableLength"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = ptrtoint %"class.blink::InterpolableLength"* %6 to i64
  %10 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %12 = bitcast %class.scoped_refptr.184* %11 to i64*
  store i64 0, i64* %12, align 8
  br label %39

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 2
  %17 = icmp eq %"class.blink::CSSValue"* %2, null
  %18 = or i1 %17, %16
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  tail call fastcc void @_ZN5blink12_GLOBAL__N_119MaybeConvertKeywordENS_10CSSValueIDERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS7_14default_deleteISA_EEEELj0ENS5_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret %0, i32 %22, %"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.WTF::Vector.187"* dereferenceable(16) %4)
  br label %39

23:                                               ; preds = %13
  %24 = icmp ne i8 %15, 45
  %25 = or i1 %17, %24
  br i1 %25, label %37, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %28 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 1
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = tail call float @_ZNK5blink8cssvalue25CSSPendingSystemFontValue15ResolveFontSizeEPKNS_8DocumentE(%"class.blink::cssvalue::CSSPendingSystemFontValue"* nonnull %27, %"class.blink::Document"* %29) #9
  %31 = fpext float %30 to double
  %32 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %31) #9, !noalias !15
  %33 = ptrtoint %"class.blink::InterpolableLength"* %32 to i64
  %34 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %33, i64* %34, align 8, !alias.scope !15
  %35 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %36 = bitcast %class.scoped_refptr.184* %35 to i64*
  store i64 0, i64* %36, align 8, !alias.scope !15
  br label %39

37:                                               ; preds = %23
  %38 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #9
  br label %39

39:                                               ; preds = %37, %19, %26, %8
  ret void
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare float @_ZNK5blink8cssvalue25CSSPendingSystemFontValue15ResolveFontSizeEPKNS_8DocumentE(%"class.blink::cssvalue::CSSPendingSystemFontValue"*, %"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %7, i64 0, i32 1, i32 0, i32 4
  %9 = load float, float* %8, align 8
  %10 = fpext float %9 to double
  %11 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %10) #9, !noalias !18
  %12 = ptrtoint %"class.blink::InterpolableLength"* %11 to i64
  %13 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %12, i64* %13, align 8, !alias.scope !18
  %14 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %15 = bitcast %class.scoped_refptr.184* %14 to i64*
  store i64 0, i64* %15, align 8, !alias.scope !18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSFontSizeInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSFontSizeInterpolationType"* nocapture readnone, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %8 = alloca %"struct.blink::FontDescription::Size", align 4
  %9 = tail call dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"* %3) #9
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %12 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %13 = bitcast %"class.blink::CSSToLengthConversionData"* %7 to i8*
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #9
  call void @_ZNK5blink18StyleResolverState22FontSizeConversionDataEv(%"class.blink::CSSToLengthConversionData"* nonnull sret %7, %"class.blink::StyleResolverState"* %3) #9
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %6, %"class.blink::InterpolableLength"* %12, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %7, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %9, i64 0, i32 4
  %15 = load float, float* %14, align 8
  %16 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %6, float %15) #9
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 9
  %18 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = load i8, i8* %11, align 1
  switch i8 %19, label %27 [
    i8 8, label %20
    i8 1, label %20
  ]

20:                                               ; preds = %4, %4
  %21 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %9, i64 0, i32 12, i32 0
  %22 = bitcast %"struct.blink::FontDescription::BitFields"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i8
  %25 = lshr i8 %24, 7
  %26 = shl nuw nsw i8 %25, 4
  br label %27

27:                                               ; preds = %4, %20
  %28 = phi i8 [ 16, %4 ], [ %26, %20 ]
  store i8 %28, i8* %18, align 4
  %29 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %8, i64 0, i32 1
  store float %16, float* %29, align 4
  call void @_ZN5blink11FontBuilder7SetSizeERKNS_15FontDescription4SizeE(%"class.blink::FontBuilder"* %17, %"struct.blink::FontDescription::Size"* nonnull dereferenceable(8) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %30 = load i8, i8* %11, align 1
  %31 = icmp eq i8 %30, 8
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #9
  br label %33

33:                                               ; preds = %27, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #2

declare void @_ZNK5blink18StyleResolverState22FontSizeConversionDataEv(%"class.blink::CSSToLengthConversionData"* sret, %"class.blink::StyleResolverState"*) local_unnamed_addr #2

declare float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

declare void @_ZN5blink11FontBuilder7SetSizeERKNS_15FontDescription4SizeE(%"class.blink::FontBuilder"*, %"struct.blink::FontDescription::Size"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28CSSFontSizeInterpolationTypeD0Ev(%"class.blink::CSSFontSizeInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontSizeInterpolationType", %"class.blink::CSSFontSizeInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSFontSizeInterpolationType", %"class.blink::CSSFontSizeInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSFontSizeInterpolationType", %"class.blink::CSSFontSizeInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSFontSizeInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.187"* dereferenceable(16) %6) #9
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.187"* dereferenceable(16) %6) #9
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #9
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  %45 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.186"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.186"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #9
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #9
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #9
  %70 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.186"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.186"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #9
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #9
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.178"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.184* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #9
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #9
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare float @_ZNK5blink11FontBuilder18FontSizeForKeywordEjb(%"class.blink::FontBuilder"*, i32, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZN5blink15FontDescription11SmallerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZN5blink15FontDescription10LargerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_118IsMonospaceCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.187"* nocapture, %"class.std::__1::unique_ptr.1412"* nocapture dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  br i1 %15, label %18, label %45, !prof !21

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.190"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.190"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.190"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !21

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.190"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.190"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1412", %"class.std::__1::unique_ptr.1412"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1412"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::(anonymous namespace)::IsMonospaceChecker"* null, %"class.blink::(anonymous namespace)::IsMonospaceChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.190"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118IsMonospaceCheckerD0Ev(%"class.blink::(anonymous namespace)::IsMonospaceChecker"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::IsMonospaceChecker"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #9
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_118IsMonospaceChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::(anonymous namespace)::IsMonospaceChecker"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16)) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::IsMonospaceChecker", %"class.blink::(anonymous namespace)::IsMonospaceChecker"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !22
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %12, i64 0, i32 1, i32 0, i32 12, i32 0
  %14 = bitcast %"struct.blink::FontDescription::BitFields"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1792
  %17 = icmp eq i64 %16, 1024
  br i1 %17, label %18, label %30

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %12, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %20 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %19, align 8
  %21 = icmp eq %"class.blink::SharedFontFamily"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  %29 = zext i1 %28 to i32
  br label %30

30:                                               ; preds = %3, %18, %22
  %31 = phi i32 [ 0, %18 ], [ 0, %3 ], [ %29, %22 ]
  %32 = icmp eq i32 %31, %6
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124InheritedFontSizeCheckerD0Ev(%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_124InheritedFontSizeChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* nocapture readonly, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::InheritedFontSizeChecker", %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* %0, i64 0, i32 1
  %5 = load float, float* %4, align 8
  %6 = tail call dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"* %1) #9
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 4
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %5, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_124InheritedFontSizeCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector.187"* nocapture, %"class.std::__1::unique_ptr.1350"* nocapture dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  br i1 %15, label %18, label %45, !prof !21

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.190"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.190"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.190"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !21

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.190"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.190"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1350", %"class.std::__1::unique_ptr.1350"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1350"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"* null, %"class.blink::(anonymous namespace)::InheritedFontSizeChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.190"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!6 = !{}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!10 = distinct !{!10, !11, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!11 = distinct !{!11, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!14 = distinct !{!14, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!17 = distinct !{!17, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf: argument 0"}
!20 = distinct !{!20, !"_ZN5blink12_GLOBAL__N_115ConvertFontSizeEf"}
!21 = !{!"branch_weights", i32 2000, i32 1}
!22 = !{i8 0, i8 2}
