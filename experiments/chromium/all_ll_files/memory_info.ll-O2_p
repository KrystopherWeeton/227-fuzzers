; ModuleID = '../../third_party/blink/renderer/core/timing/memory_info.cc'
source_filename = "../../third_party/blink/renderer/core/timing/memory_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<unsigned long, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<unsigned long, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StaticSingleton.191" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::HeapSizeCache> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::HeapSizeCache> >::InstanceStorage" = type { [16 x i8] }
%"class.base::TimeDelta" = type { i64 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.169", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.109", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist.40"* }
%"class.blink::Worklist.40" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.89", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64 }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { float }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.112", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.121" }
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.40"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.173" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::MemoryInfo" = type { %"class.blink::ScriptWrappable", %"struct.blink::HeapInfo" }
%"struct.blink::HeapInfo" = type { i64, i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i64*, i32, i32 }
%"class.v8::HeapStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64 }
%"class.blink::HeapSizeCache" = type { %"class.absl::optional", %"class.base::TickClock"*, %"struct.blink::HeapInfo" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.187, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.187 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.189" }
%"class.blink::Persistent.189" = type { %"class.blink::PersistentBase.190" }
%"class.blink::PersistentBase.190" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.198 }
%union.anon.198 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink13HeapSizeCache16ForCurrentThreadEv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink10MemoryInfoD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink10MemoryInfo18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF14ThreadSpecificIN5blink13HeapSizeCacheEE7DestroyEPv = comdat any

$_ZN5blink13HeapSizeCache6UpdateENS_10MemoryInfo9PrecisionE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZTVN5blink10MemoryInfoE = comdat any

$_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache = comdat any

$_ZGVZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache = comdat any

@_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list = internal global i64 0, align 8
@_ZTVN5blink10MemoryInfoE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::MemoryInfo"*)* @_ZN5blink10MemoryInfoD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MemoryInfo"*)* @_ZNK5blink10MemoryInfo18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase31is_precise_memory_info_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache = linkonce_odr hidden global %"class.WTF::StaticSingleton.191" zeroinitializer, comdat, align 8
@_ZGVZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache = linkonce_odr hidden global i64 0, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HeapSizeCacheEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapSizeCache]\00", align 1
@_ZN5blinkL14kTwentyMinutesE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 1200000000 }, align 8
@_ZN5blinkL8kFiftyMsE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 50000 }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10MemoryInfo18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink10MemoryInfoC1ENS0_9PrecisionE = hidden unnamed_addr alias void (%"class.blink::MemoryInfo"*, i32), void (%"class.blink::MemoryInfo"*, i32)* @_ZN5blink10MemoryInfoC2ENS0_9PrecisionE

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink18QuantizeMemorySizeEm(i64) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list) #6
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %88

11:                                               ; preds = %8
  %12 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %13 = icmp ult i32 %12, 100
  br i1 %13, label %14, label %47

14:                                               ; preds = %11
  %15 = lshr i32 %12, 2
  %16 = add nuw nsw i32 %12, 1
  %17 = add nuw nsw i32 %16, %15
  %18 = icmp ugt i32 %17, 100
  %19 = select i1 %18, i32 %17, i32 100
  %20 = icmp ult i32 %12, %19
  br i1 %20, label %21, label %47, !prof !3

21:                                               ; preds = %14
  %22 = load i64*, i64** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i64**), align 8
  %23 = icmp eq i64* %22, null
  %24 = zext i32 %19 to i64
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %24) #6
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #6
  br i1 %23, label %27, label %31

27:                                               ; preds = %21
  %28 = ptrtoint i8* %26 to i64
  store atomic i64 %28, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i64*) monotonic, align 8
  %29 = lshr i64 %25, 3
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br label %47

31:                                               ; preds = %21
  %32 = lshr i64 %25, 3
  %33 = ptrtoint i8* %26 to i64
  %34 = load i64*, i64** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i64**), align 8
  %35 = icmp ne i8* %26, null
  %36 = icmp ne i64* %34, null
  %37 = and i1 %35, %36
  %38 = bitcast i64* %34 to i8*
  br i1 %37, label %39, label %44, !prof !3

39:                                               ; preds = %31
  %40 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %41 = zext i32 %40 to i64
  %42 = shl nuw nsw i64 %41, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %38, i64 %42, i1 false) #6
  %43 = load i8*, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i8**), align 8
  br label %44

44:                                               ; preds = %39, %31
  %45 = phi i8* [ %43, %39 ], [ %38, %31 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #6
  store atomic i64 %33, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i64*) monotonic, align 8
  %46 = trunc i64 %32 to i32
  store i32 %46, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br label %47

47:                                               ; preds = %11, %14, %27, %44
  %48 = load i64*, i64** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to i64**), align 8
  %49 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i64, i64* %48, i64 %50
  %52 = bitcast i64* %51 to i8*
  %53 = shl nuw nsw i64 %50, 3
  %54 = sub nsw i64 800, %53
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %54, i1 false) #6
  store i32 100, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  br label %55

55:                                               ; preds = %85, %47
  %56 = phi i32 [ 0, %47 ], [ %86, %85 ]
  %57 = phi i64 [ 100000, %47 ], [ %74, %85 ]
  %58 = phi i64 [ 100000000, %47 ], [ %73, %85 ]
  %59 = phi float [ 1.000000e+07, %47 ], [ %64, %85 ]
  %60 = fptoui float %59 to i64
  %61 = urem i64 %60, %57
  %62 = sub i64 %60, %61
  %63 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %56) #6
  store i64 %62, i64* %63, align 8
  %64 = fmul float %59, 0x3FF0FCE940000000
  %65 = uitofp i64 %58 to float
  %66 = fcmp ult float %64, %65
  br i1 %66, label %72, label %67

67:                                               ; preds = %55
  %68 = icmp ult i64 %58, 1844674407370955161
  br i1 %68, label %69, label %72

69:                                               ; preds = %67
  %70 = mul i64 %58, 10
  %71 = mul i64 %57, 10
  br label %72

72:                                               ; preds = %67, %55, %69
  %73 = phi i64 [ %70, %69 ], [ %58, %55 ], [ -1, %67 ]
  %74 = phi i64 [ %71, %69 ], [ %57, %55 ], [ %57, %67 ]
  %75 = icmp eq i32 %56, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %72
  %77 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %56) #6
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i32 %56, -1
  %80 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %79) #6
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %78, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %56) #6
  store i64 -1, i64* %84, align 8
  br label %85

85:                                               ; preds = %72, %83, %76
  %86 = add nuw nsw i32 %56, 1
  %87 = icmp eq i32 %86, 100
  br i1 %87, label %88, label %55

88:                                               ; preds = %85, %8
  br label %89

89:                                               ; preds = %88, %94
  %90 = phi i32 [ %95, %94 ], [ 0, %88 ]
  %91 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %90) #6
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %0
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = add nuw nsw i32 %90, 1
  %96 = icmp eq i32 %95, 100
  br i1 %96, label %97, label %89

97:                                               ; preds = %94, %89
  %98 = phi i32 [ %90, %89 ], [ 99, %94 ]
  %99 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18QuantizeMemorySizeEmE18s_bucket_size_list to %"class.WTF::Vector"*), i32 %98) #6
  %100 = load i64, i64* %99, align 8
  ret i64 %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MemoryInfoC2ENS0_9PrecisionE(%"class.blink::MemoryInfo"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::HeapStatistics", align 8
  %4 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MemoryInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %0, i64 0, i32 1
  %7 = bitcast %"struct.blink::HeapInfo"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_precise_memory_info_enabled_E, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::HeapStatistics"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false) #6
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %3) #6
  %12 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* %12, %"class.v8::HeapStatistics"* nonnull %3) #6
  %13 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 7
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  %18 = getelementptr inbounds %"struct.blink::HeapInfo", %"struct.blink::HeapInfo"* %6, i64 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %16
  %22 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %0, i64 0, i32 1, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 5
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %0, i64 0, i32 1, i32 2
  store i64 %24, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #6
  br label %55

26:                                               ; preds = %2
  %27 = tail call dereferenceable(48) %"class.blink::HeapSizeCache"* @_ZN5blink13HeapSizeCache16ForCurrentThreadEv()
  %28 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %27, i64 0, i32 1
  %29 = load %"class.base::TickClock"*, %"class.base::TickClock"** %28, align 8
  %30 = bitcast %"class.base::TickClock"* %29 to i64 (%"class.base::TickClock"*)***
  %31 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, i64 2
  %33 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %32, align 8
  %34 = tail call i64 %33(%"class.base::TickClock"* %29) #6
  %35 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %26
  %39 = icmp eq i32 %1, 1
  %40 = select i1 %39, %"class.base::TimeDelta"* @_ZN5blinkL14kTwentyMinutesE, %"class.base::TimeDelta"* @_ZN5blinkL8kFiftyMsE
  %41 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %40, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = sub nsw i64 %34, %44
  %46 = icmp slt i64 %45, %42
  br i1 %46, label %52, label %47

47:                                               ; preds = %38, %26
  tail call void @_ZN5blink13HeapSizeCache6UpdateENS_10MemoryInfo9PrecisionE(%"class.blink::HeapSizeCache"* %27, i32 %1) #6
  %48 = load i8, i8* %35, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  %50 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %34, i64* %50, align 8
  br i1 %49, label %51, label %52

51:                                               ; preds = %47
  store i8 1, i8* %35, align 8
  br label %52

52:                                               ; preds = %38, %47, %51
  %53 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %27, i64 0, i32 2
  %54 = bitcast %"struct.blink::HeapInfo"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %54, i64 24, i1 false) #6
  br label %55

55:                                               ; preds = %52, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.blink::HeapSizeCache"* @_ZN5blink13HeapSizeCache16ForCurrentThreadEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"class.blink::HeapSizeCache"* null, %"class.blink::HeapSizeCache"** bitcast (%"class.WTF::StaticSingleton.191"* @_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache to %"class.blink::HeapSizeCache"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.191", %"class.WTF::StaticSingleton.191"* @_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificIN5blink13HeapSizeCacheEE7DestroyEPv) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache) #6
  br label %7

7:                                                ; preds = %3, %6, %0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.191", %"class.WTF::StaticSingleton.191"* @_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #6
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %17, !prof !5

10:                                               ; preds = %7
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 48, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HeapSizeCacheEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.191", %"class.WTF::StaticSingleton.191"* @_ZZN5blink13HeapSizeCache16ForCurrentThreadEvE17s_heap_size_cache, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %11) #6
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  %13 = bitcast i8* %12 to %"class.base::TickClock"**
  %14 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #6
  %15 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %14, i64 0, i32 0
  store %"class.base::TickClock"* %15, %"class.base::TickClock"** %13, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #6
  br label %17

17:                                               ; preds = %7, %10
  %18 = phi i8* [ %11, %10 ], [ %8, %7 ]
  %19 = bitcast i8* %18 to %"class.blink::HeapSizeCache"*
  ret %"class.blink::HeapSizeCache"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MemoryInfo38SetTickClockForTestingForCurrentThreadEPKN4base9TickClockE(%"class.base::TickClock"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(48) %"class.blink::HeapSizeCache"* @_ZN5blink13HeapSizeCache16ForCurrentThreadEv()
  %3 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %2, i64 0, i32 1
  store %"class.base::TickClock"* %0, %"class.base::TickClock"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10MemoryInfoD0Ev(%"class.blink::MemoryInfo"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10MemoryInfo18GetWrapperTypeInfoEv(%"class.blink::MemoryInfo"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10MemoryInfo18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"*) unnamed_addr #3

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #3

declare void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"*, %"class.v8::HeapStatistics"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF14ThreadSpecificIN5blink13HeapSizeCacheEE7DestroyEPv(i8*) #4 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #6
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #6
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapSizeCache6UpdateENS_10MemoryInfo9PrecisionE(%"class.blink::HeapSizeCache"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::HeapStatistics", align 8
  %4 = bitcast %"class.v8::HeapStatistics"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 112, i1 false) #6
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %3) #6
  %5 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #6
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* %5, %"class.v8::HeapStatistics"* nonnull %3) #6
  %6 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 7
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %0, i64 0, i32 2, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %9
  %15 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %0, i64 0, i32 2, i32 1
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %3, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::HeapSizeCache", %"class.blink::HeapSizeCache"* %0, i64 0, i32 2, i32 2
  store i64 %17, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4) #6
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %2
  %21 = call i64 @_ZN5blink18QuantizeMemorySizeEm(i64 %10)
  store i64 %21, i64* %11, align 8
  %22 = load i64, i64* %15, align 8
  %23 = call i64 @_ZN5blink18QuantizeMemorySizeEm(i64 %22)
  store i64 %23, i64* %15, align 8
  %24 = load i64, i64* %18, align 8
  %25 = call i64 @_ZN5blink18QuantizeMemorySizeEm(i64 %24)
  store i64 %25, i64* %18, align 8
  br label %26

26:                                               ; preds = %2, %20
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  ret i64* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 2000}
