; ModuleID = '../../third_party/blink/renderer/platform/transforms/perspective_transform_operation.cc'
source_filename = "../../third_party/blink/renderer/platform/transforms/perspective_transform_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PerspectiveTransformOperation" = type { %"class.blink::TransformOperation.base", double }
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"struct.blink::TransformationMatrix::DecomposedType" = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.blink::FloatSize" = type { float, float }

$_ZN5blink18TransformOperationD2Ev = comdat any

$_ZN5blink29PerspectiveTransformOperationD0Ev = comdat any

$_ZNK5blink29PerspectiveTransformOperationeqERKNS_18TransformOperationE = comdat any

$_ZNK5blink29PerspectiveTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE = comdat any

$_ZNK5blink29PerspectiveTransformOperation7GetTypeEv = comdat any

$_ZNK5blink18TransformOperation13PrimitiveTypeEv = comdat any

$_ZNK5blink18TransformOperation22PreservesAxisAlignmentEv = comdat any

$_ZNK5blink18TransformOperation23IsIdentityOrTranslationEv = comdat any

$_ZNK5blink29PerspectiveTransformOperation24HasNonTrivial3DComponentEv = comdat any

$_ZNK5blink18TransformOperation19BoxSizeDependenciesEv = comdat any

@_ZTVN5blink29PerspectiveTransformOperationE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TransformOperation"*)* @_ZN5blink18TransformOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::PerspectiveTransformOperation"*)* @_ZN5blink29PerspectiveTransformOperationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZNK5blink29PerspectiveTransformOperationeqERKNS_18TransformOperationE to i8*), i8* bitcast (void (%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)* @_ZNK5blink29PerspectiveTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZN5blink29PerspectiveTransformOperation10AccumulateERKNS_18TransformOperationE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformOperation"*, double, i1)* @_ZN5blink29PerspectiveTransformOperation5BlendEPKNS_18TransformOperationEdb to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::PerspectiveTransformOperation"*, double)* @_ZN5blink29PerspectiveTransformOperation4ZoomEd to i8*), i8* bitcast (i32 (%"class.blink::PerspectiveTransformOperation"*)* @_ZNK5blink29PerspectiveTransformOperation7GetTypeEv to i8*), i8* bitcast (i32 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation13PrimitiveTypeEv to i8*), i8* bitcast (i1 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation22PreservesAxisAlignmentEv to i8*), i8* bitcast (i1 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation23IsIdentityOrTranslationEv to i8*), i8* bitcast (i1 (%"class.blink::PerspectiveTransformOperation"*)* @_ZNK5blink29PerspectiveTransformOperation24HasNonTrivial3DComponentEv to i8*), i8* bitcast (i32 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation19BoxSizeDependenciesEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink29PerspectiveTransformOperation10AccumulateERKNS_18TransformOperationE(%"class.blink::PerspectiveTransformOperation"* nocapture readonly, %"class.blink::TransformOperation"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %4 = bitcast %"class.blink::TransformOperation"* %3 to double*
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %7 = load double, double* %6, align 8
  %8 = fcmp oeq double %7, 0.000000e+00
  %9 = fcmp oeq double %5, 0.000000e+00
  %10 = and i1 %9, %8
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = fmul double %5, %7
  %13 = fadd double %5, %7
  %14 = fdiv double %12, %13
  %15 = tail call noalias i8* @malloc(i64 24) #6
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to double*
  store double %14, double* %20, align 8
  %21 = bitcast i8* %15 to %"class.blink::TransformOperation"*
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi %"class.blink::TransformOperation"* [ %21, %11 ], [ null, %2 ]
  ret %"class.blink::TransformOperation"* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink29PerspectiveTransformOperation5BlendEPKNS_18TransformOperationEdb(%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformOperation"*, double, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = alloca %"class.blink::TransformationMatrix", align 8
  %7 = alloca %"struct.blink::TransformationMatrix::DecomposedType", align 8
  %8 = icmp eq %"class.blink::TransformOperation"* %1, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::PerspectiveTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %11 = bitcast %"class.blink::PerspectiveTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %12 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %12, i64 7
  %14 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::TransformOperation"* %10) #6
  %16 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %17 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %17, i64 7
  %19 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::TransformOperation"* nonnull %1) #6
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %9
  %23 = ptrtoint %"class.blink::PerspectiveTransformOperation"* %0 to i64
  %24 = icmp eq %"class.blink::PerspectiveTransformOperation"* %0, null
  br i1 %24, label %123, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #6
  br label %123

27:                                               ; preds = %4, %9
  br i1 %3, label %28, label %49

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %30 = load double, double* %29, align 8
  %31 = fsub double 1.000000e+00, %30
  %32 = fmul double %31, %2
  %33 = fadd double %30, %32
  %34 = fcmp ult double %33, 0x41DFFFFFFFC00000
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = fcmp ugt double %33, 0.000000e+00
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = fptosi double %33 to i32
  %39 = sitofp i32 %38 to double
  br label %40

40:                                               ; preds = %37, %35, %28
  %41 = phi double [ %39, %37 ], [ 0x41DFFFFFFFC00000, %28 ], [ 0.000000e+00, %35 ]
  %42 = tail call noalias i8* @malloc(i64 24) #6
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 1, i32* %44, align 4
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to double*
  store double %41, double* %47, align 8
  %48 = ptrtoint i8* %42 to i64
  br label %123

49:                                               ; preds = %27
  %50 = bitcast %"class.blink::TransformOperation"* %1 to %"class.blink::PerspectiveTransformOperation"*
  %51 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %51) #6
  %52 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %52, align 8
  %53 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 1
  %54 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 1
  %55 = bitcast double* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %54, align 8
  %56 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 2
  %57 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 2
  %58 = bitcast double* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %57, align 8
  %59 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 3
  %60 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 3, i64 3
  %61 = bitcast double* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %60, align 8
  %62 = bitcast %"class.blink::TransformationMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %62) #6
  %63 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %63, align 8
  %64 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 1
  %65 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 1
  %66 = bitcast double* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %65, align 8
  %67 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 2
  %68 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 2
  %69 = bitcast double* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %68, align 8
  %70 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 3
  %71 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 3
  %72 = bitcast double* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #6
  store double 1.000000e+00, double* %71, align 8
  br i1 %8, label %77, label %73

73:                                               ; preds = %49
  %74 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %75 = bitcast %"class.blink::TransformOperation"* %74 to double*
  %76 = load double, double* %75, align 8
  br label %77

77:                                               ; preds = %49, %73
  %78 = phi double [ %76, %73 ], [ 0.000000e+00, %49 ]
  %79 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"* nonnull %5, double %78) #6
  %80 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %81 = load double, double* %80, align 8
  %82 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"* nonnull %6, double %81) #6
  call void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"* nonnull %6, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %5, double %2) #6
  %83 = bitcast %"struct.blink::TransformationMatrix::DecomposedType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %83) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -1, i64 136, i1 false)
  %84 = call zeroext i1 @_ZNK5blink20TransformationMatrix9DecomposeERNS0_14DecomposedTypeE(%"class.blink::TransformationMatrix"* nonnull %6, %"struct.blink::TransformationMatrix::DecomposedType"* nonnull dereferenceable(136) %7) #6
  br i1 %84, label %97, label %85

85:                                               ; preds = %77
  %86 = fcmp ogt double %2, 5.000000e-01
  %87 = select i1 %86, %"class.blink::PerspectiveTransformOperation"* %0, %"class.blink::PerspectiveTransformOperation"* %50
  %88 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %87, i64 0, i32 1
  %89 = bitcast double* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = call noalias i8* @malloc(i64 24) #6
  %92 = getelementptr inbounds i8, i8* %91, i64 8
  %93 = bitcast i8* %92 to i32*
  store i32 1, i32* %93, align 4
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %90, i64* %96, align 8
  br label %120

97:                                               ; preds = %77
  %98 = getelementptr inbounds %"struct.blink::TransformationMatrix::DecomposedType", %"struct.blink::TransformationMatrix::DecomposedType"* %7, i64 0, i32 15
  %99 = load double, double* %98, align 8
  %100 = fcmp une double %99, 0.000000e+00
  br i1 %100, label %101, label %113

101:                                              ; preds = %97
  %102 = fdiv double -1.000000e+00, %99
  %103 = fcmp ult double %102, 0x7FEFFFFFFFFFFFFF
  %104 = fcmp ole double %102, 0.000000e+00
  %105 = select i1 %104, double 0.000000e+00, double %102
  %106 = select i1 %103, double %105, double 0x7FEFFFFFFFFFFFFF
  %107 = call noalias i8* @malloc(i64 24) #6
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  %109 = bitcast i8* %108 to i32*
  store i32 1, i32* %109, align 4
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %107, i64 16
  %112 = bitcast i8* %111 to double*
  store double %106, double* %112, align 8
  br label %120

113:                                              ; preds = %97
  %114 = call noalias i8* @malloc(i64 24) #6
  %115 = getelementptr inbounds i8, i8* %114, i64 8
  %116 = bitcast i8* %115 to i32*
  store i32 1, i32* %116, align 4
  %117 = bitcast i8* %114 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %114, i64 16
  %119 = bitcast i8* %118 to double*
  store double 0.000000e+00, double* %119, align 8
  br label %120

120:                                              ; preds = %113, %101, %85
  %121 = phi i8* [ %107, %101 ], [ %114, %113 ], [ %91, %85 ]
  %122 = ptrtoint i8* %121 to i64
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %83) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %62) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %51) #6
  br label %123

123:                                              ; preds = %25, %22, %120, %40
  %124 = phi i64 [ %48, %40 ], [ %122, %120 ], [ %23, %22 ], [ %23, %25 ]
  %125 = inttoptr i64 %124 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"*, double) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128), double) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix9DecomposeERNS0_14DecomposedTypeE(%"class.blink::TransformationMatrix"*, %"struct.blink::TransformationMatrix::DecomposedType"* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink29PerspectiveTransformOperation4ZoomEd(%"class.blink::PerspectiveTransformOperation"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %4 = load double, double* %3, align 8
  %5 = fmul double %4, %1
  %6 = tail call noalias i8* @malloc(i64 24) #6
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink29PerspectiveTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to double*
  store double %5, double* %11, align 8
  %12 = bitcast i8* %6 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TransformOperationD2Ev(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PerspectiveTransformOperationD0Ev(%"class.blink::PerspectiveTransformOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::PerspectiveTransformOperation"* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink29PerspectiveTransformOperationeqERKNS_18TransformOperationE(%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::PerspectiveTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %4 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %5 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %5, i64 7
  %7 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::TransformOperation"* %1) #6
  %9 = bitcast %"class.blink::PerspectiveTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %10 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %10, i64 7
  %12 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::TransformOperation"* %3) #6
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %19 = bitcast %"class.blink::TransformOperation"* %18 to double*
  %20 = load double, double* %19, align 8
  %21 = fcmp oeq double %17, %20
  br label %22

22:                                               ; preds = %2, %15
  %23 = phi i1 [ %21, %15 ], [ false, %2 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink29PerspectiveTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE(%"class.blink::PerspectiveTransformOperation"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %0, i64 0, i32 1
  %5 = load double, double* %4, align 8
  %6 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"* %1, double %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink29PerspectiveTransformOperation7GetTypeEv(%"class.blink::PerspectiveTransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i32 19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18TransformOperation13PrimitiveTypeEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::TransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %3 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %3, i64 7
  %5 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::TransformOperation"* %0) #6
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransformOperation22PreservesAxisAlignmentEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransformOperation23IsIdentityOrTranslationEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink29PerspectiveTransformOperation24HasNonTrivial3DComponentEv(%"class.blink::PerspectiveTransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18TransformOperation19BoxSizeDependenciesEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
