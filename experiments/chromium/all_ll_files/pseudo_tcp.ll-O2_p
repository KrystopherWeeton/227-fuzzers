; ModuleID = '../../third_party/webrtc/p2p/base/pseudo_tcp.cc'
source_filename = "../../third_party/webrtc/p2p/base/pseudo_tcp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.cricket::PseudoTcp" = type <{ i32 (...)**, %"class.cricket::IPseudoTcpNotify"*, i32, i32, i32, i32, i8, i8, i8, i8, i32, %"class.std::__1::list", i32, i32, i32, i32, i8, [7 x i8], %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.std::__1::list.4", i32, i32, i32, i32, i32, i8, [3 x i8], %"class.cricket::PseudoTcp::LockedFifoBuffer", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::list.4" = type { %"class.std::__1::__list_imp.5" }
%"class.std::__1::__list_imp.5" = type { %"struct.std::__1::__list_node_base.6", %"class.std::__1::__compressed_pair.7" }
%"struct.std::__1::__list_node_base.6" = type { %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.cricket::PseudoTcp::LockedFifoBuffer" = type { %"class.std::__1::unique_ptr", i64, i64, i64, %"class.webrtc::Mutex" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cricket::IPseudoTcpNotify" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.rtc::ByteBufferWriter" = type { %"class.rtc::ByteBufferWriterT" }
%"class.rtc::ByteBufferWriterT" = type { %"class.rtc::BufferT" }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.6"* }
%"struct.std::__1::__list_node" = type <{ %"struct.std::__1::__list_node_base.6", %"struct.cricket::PseudoTcp::SSegment", [4 x i8] }>
%"struct.cricket::PseudoTcp::SSegment" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"struct.cricket::PseudoTcp::Segment" = type { i32, i32, i32, i8, i16, i8*, i32, i32, i32 }
%"struct.std::__1::__list_node.31" = type { %"struct.std::__1::__list_node_base", %"struct.cricket::PseudoTcp::RSegment" }
%"struct.cricket::PseudoTcp::RSegment" = type { i32, i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.rtc::ByteBufferReader" = type { i8*, i64, i64, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i8, [6 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN7cricket9PseudoTcpE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cricket::PseudoTcp"*)* @_ZN7cricket9PseudoTcpD2Ev to i8*), i8* bitcast (void (%"class.cricket::PseudoTcp"*)* @_ZN7cricket9PseudoTcpD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [48 x i8] c"../../third_party/webrtc/p2p/base/pseudo_tcp.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"State: TCP_SYN_SENT\00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp12NotifyPacketEPKcm = private unnamed_addr constant [13 x i8] c"NotifyPacket\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"packet too large\00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp5CloseEb = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c")\00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp7processERNS0_7SegmentE = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"wrong conversation\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"Missing control code\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"State: TCP_SYN_RECEIVED\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"State: TCP_ESTABLISHED\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Unknown control code: \00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"rtt < 0\00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj = private unnamed_addr constant [9 x i8] c"transmit\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"too many retransmits\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"packet failed\00", align 1
@_ZN7cricketL15PACKET_MAXIMUMSE = internal unnamed_addr constant [11 x i16] [i16 -1, i16 32000, i16 17914, i16 8166, i16 4352, i16 2002, i16 1492, i16 1006, i16 508, i16 296, i16 0], align 16
@.str.17 = private unnamed_addr constant [14 x i8] c"MTU too small\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"mss reduced to \00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE = private unnamed_addr constant [12 x i8] c"attemptSend\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"transmit failed\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"State: TCP_CLOSED\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Invalid option length received.\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"Peer doesn't support window scaling\00", align 1
@.str.23 = private unnamed_addr constant [50 x i8] c"Peer specified MSS option which is not supported.\00", align 1
@__FUNCTION__._ZN7cricket9PseudoTcp11applyOptionEcPKcj = private unnamed_addr constant [12 x i8] c"applyOption\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"Invalid window scale option received.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN7cricket9PseudoTcpC1EPNS_16IPseudoTcpNotifyEj = hidden unnamed_addr alias void (%"class.cricket::PseudoTcp"*, %"class.cricket::IPseudoTcpNotify"*, i32), void (%"class.cricket::PseudoTcp"*, %"class.cricket::IPseudoTcpNotify"*, i32)* @_ZN7cricket9PseudoTcpC2EPNS_16IPseudoTcpNotifyEj
@_ZN7cricket9PseudoTcpD1Ev = hidden unnamed_addr alias void (%"class.cricket::PseudoTcp"*), void (%"class.cricket::PseudoTcp"*)* @_ZN7cricket9PseudoTcpD2Ev
@_ZN7cricket9PseudoTcp16LockedFifoBufferC1Em = hidden unnamed_addr alias void (%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64), void (%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64)* @_ZN7cricket9PseudoTcp16LockedFifoBufferC2Em
@_ZN7cricket9PseudoTcp16LockedFifoBufferD1Ev = hidden unnamed_addr alias void (%"class.cricket::PseudoTcp::LockedFifoBuffer"*), void (%"class.cricket::PseudoTcp::LockedFifoBuffer"*)* @_ZN7cricket9PseudoTcp16LockedFifoBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp3NowEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i32 @_ZN3rtc6Time32Ev() #10
  ret i32 %1
}

declare i32 @_ZN3rtc6Time32Ev() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcpC2EPNS_16IPseudoTcpNotifyEj(%"class.cricket::PseudoTcp"*, %"class.cricket::IPseudoTcpNotify"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %union.pthread_mutexattr_t, align 4
  %5 = alloca %union.pthread_mutexattr_t, align 4
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket9PseudoTcpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  store %"class.cricket::IPseudoTcpNotify"* %1, %"class.cricket::IPseudoTcpNotify"** %7, align 8
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 12
  store i32 61440, i32* %15, align 8
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18
  %17 = tail call i8* @_Znam(i64 61440) #11
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.cricket::PseudoTcp::LockedFifoBuffer"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  store i64 61440, i64* %20, align 8
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 2
  %22 = bitcast %union.pthread_mutexattr_t* %5 to i8*
  %23 = bitcast i64* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #10
  %24 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %5, i64 0, i32 0
  store i32 -1431655766, i32* %24, align 4
  %25 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %5) #10
  %26 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %27 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %26, %union.pthread_mutexattr_t* nonnull %5) #10
  %28 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #10
  %29 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19
  %30 = getelementptr inbounds %"class.std::__1::list.4", %"class.std::__1::list.4"* %29, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::list.4", %"class.std::__1::list.4"* %29, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.6"* %30, %"struct.std::__1::__list_node_base.6"** %31, align 8
  %32 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.6"* %30, %"struct.std::__1::__list_node_base.6"** %32, align 8
  %33 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 20
  store i32 92160, i32* %34, align 8
  %35 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27
  %36 = call i8* @_Znam(i64 92160) #11
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast %"class.cricket::PseudoTcp::LockedFifoBuffer"* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  store i64 92160, i64* %39, align 8
  %40 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %41 = bitcast %union.pthread_mutexattr_t* %4 to i8*
  %42 = bitcast i64* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #10
  %43 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %4, i64 0, i32 0
  store i32 -1431655766, i32* %43, align 4
  %44 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %4) #10
  %45 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %46 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %45, %union.pthread_mutexattr_t* nonnull %4) #10
  %47 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #10
  %48 = call i32 @_ZN3rtc6Time32Ev() #10
  %49 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  store i32 %2, i32* %50, align 4
  %51 = load i32, i32* %15, align 8
  %52 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  store i32 1, i32* %56, align 8
  %57 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 6
  store i8 1, i8* %59, align 8
  %60 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 7
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 180, i32 0, i32 0, i32 65535>, <4 x i32>* %63, align 8
  %64 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 32
  %65 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  store i32 360, i32* %65, align 4
  %66 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  store i32 %51, i32* %66, align 8
  %67 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %48, i32* %67, align 4
  %68 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 23
  store i32 %48, i32* %68, align 4
  %69 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 15
  store i32 %48, i32* %69, align 4
  %70 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 0, i8* %70, align 2
  %71 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 40
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 42
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  store i32 3000, i32* %73, align 4
  %74 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %74, align 8
  %75 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 36
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 44
  store i8 1, i8* %76, align 4
  %77 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  store i32 100, i32* %77, align 8
  %78 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 47
  store i8 1, i8* %78, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcpD2Ev(%"class.cricket::PseudoTcp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket9PseudoTcpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #10
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8* null, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %6) #11
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__list_imp.5", %"class.std::__1::__list_imp.5"* %10, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::__list_imp.5", %"class.std::__1::__list_imp.5"* %10, i64 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base.6"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %16, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base.6"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base.6"* %16 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base.6"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  store i64 0, i64* %11, align 8
  %31 = icmp eq %"struct.std::__1::__list_node_base.6"* %16, %17
  br i1 %31, label %38, label %32

32:                                               ; preds = %14, %32
  %33 = phi %"struct.std::__1::__list_node_base.6"* [ %35, %32 ], [ %16, %14 ]
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %33, i64 0, i32 1
  %35 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %34, align 8
  %36 = bitcast %"struct.std::__1::__list_node_base.6"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  %37 = icmp eq %"struct.std::__1::__list_node_base.6"* %35, %17
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %9, %14
  %39 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %40 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %39) #10
  %41 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  store i8* null, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  tail call void @_ZdaPv(i8* nonnull %42) #11
  br label %45

45:                                               ; preds = %38, %44
  %46 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0
  %47 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %52 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %46, i64 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %46, i64 0, i32 0, i32 0
  %55 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 1
  %57 = bitcast %"struct.std::__1::__list_node_base"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %52, i64 0, i32 0
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %62 = bitcast %"struct.std::__1::__list_node_base"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"struct.std::__1::__list_node_base"* %52 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"struct.std::__1::__list_node_base"** %56 to i64**
  %66 = load i64*, i64** %65, align 8
  store i64 %64, i64* %66, align 8
  store i64 0, i64* %47, align 8
  %67 = icmp eq %"struct.std::__1::__list_node_base"* %52, %53
  br i1 %67, label %74, label %68

68:                                               ; preds = %50, %68
  %69 = phi %"struct.std::__1::__list_node_base"* [ %71, %68 ], [ %52, %50 ]
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = bitcast %"struct.std::__1::__list_node_base"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  %73 = icmp eq %"struct.std::__1::__list_node_base"* %71, %53
  br i1 %73, label %74, label %68

74:                                               ; preds = %68, %45, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcpD0Ev(%"class.cricket::PseudoTcp"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7cricket9PseudoTcpD2Ev(%"class.cricket::PseudoTcp"* %0) #10
  %2 = bitcast %"class.cricket::PseudoTcp"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp7ConnectEv(%"class.cricket::PseudoTcp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 22, i32* %7, align 4
  br label %13

8:                                                ; preds = %1
  store i32 1, i32* %3, align 8
  %9 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %9) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 269, i32 3, i32 0, i32 0) #10
  %10 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %11 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %9) #10
  call void @_ZN7cricket9PseudoTcp19queueConnectMessageEv(%"class.cricket::PseudoTcp"* %0)
  call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 0)
  br label %13

13:                                               ; preds = %8, %6
  %14 = phi i32 [ -1, %6 ], [ 0, %8 ]
  ret i32 %14
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp19queueConnectMessageEv(%"class.cricket::PseudoTcp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::ByteBufferWriter", align 8
  %3 = bitcast %"class.rtc::ByteBufferWriter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = bitcast %"class.rtc::ByteBufferWriter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN3rtc16ByteBufferWriterC1Ev(%"class.rtc::ByteBufferWriter"* nonnull %2) #10
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, 1
  %10 = load i64, i64* %5, align 8
  %11 = icmp ult i64 %10, %9
  br i1 %11, label %12, label %30

12:                                               ; preds = %1
  %13 = lshr i64 %10, 1
  %14 = add i64 %13, %10
  %15 = icmp ugt i64 %14, %9
  %16 = select i1 %15, i64 %14, i64 %9
  %17 = call i8* @_Znam(i64 %16) #11
  %18 = ptrtoint i8* %17 to i64
  %19 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %24, align 8
  br label %28

25:                                               ; preds = %12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* nonnull align 1 %21, i64 %8, i1 false) #10
  %26 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %26, align 8
  call void @_ZdaPv(i8* nonnull %21) #11
  %27 = load i64, i64* %4, align 8
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi i64 [ %27, %25 ], [ %8, %23 ]
  store i64 %16, i64* %5, align 8
  br label %30

30:                                               ; preds = %1, %28
  %31 = phi i64 [ %8, %1 ], [ %29, %28 ]
  %32 = load i8*, i8** %6, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  store i8 0, i8* %33, align 1
  store i64 %9, i64* %4, align 8
  %34 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 47
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %115, label %37

37:                                               ; preds = %30
  %38 = add i64 %8, 2
  %39 = load i64, i64* %5, align 8
  %40 = icmp ult i64 %39, %38
  br i1 %40, label %41, label %59

41:                                               ; preds = %37
  %42 = lshr i64 %39, 1
  %43 = add i64 %42, %39
  %44 = icmp ugt i64 %43, %38
  %45 = select i1 %44, i64 %43, i64 %38
  %46 = call i8* @_Znam(i64 %45) #11
  %47 = ptrtoint i8* %46 to i64
  %48 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %47, i64* %53, align 8
  br label %57

54:                                               ; preds = %41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* nonnull align 1 %50, i64 %9, i1 false) #10
  %55 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %47, i64* %55, align 8
  call void @_ZdaPv(i8* nonnull %50) #11
  %56 = load i64, i64* %4, align 8
  br label %57

57:                                               ; preds = %54, %52
  %58 = phi i64 [ %56, %54 ], [ %9, %52 ]
  store i64 %45, i64* %5, align 8
  br label %59

59:                                               ; preds = %37, %57
  %60 = phi i64 [ %9, %37 ], [ %58, %57 ]
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 3, i8* %62, align 1
  store i64 %38, i64* %4, align 8
  %63 = add i64 %8, 3
  %64 = load i64, i64* %5, align 8
  %65 = icmp ult i64 %64, %63
  br i1 %65, label %66, label %84

66:                                               ; preds = %59
  %67 = lshr i64 %64, 1
  %68 = add i64 %67, %64
  %69 = icmp ugt i64 %68, %63
  %70 = select i1 %69, i64 %68, i64 %63
  %71 = call i8* @_Znam(i64 %70) #11
  %72 = ptrtoint i8* %71 to i64
  %73 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %66
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %72, i64* %78, align 8
  br label %82

79:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* nonnull align 1 %75, i64 %38, i1 false) #10
  %80 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %72, i64* %80, align 8
  call void @_ZdaPv(i8* nonnull %75) #11
  %81 = load i64, i64* %4, align 8
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %81, %79 ], [ %38, %77 ]
  store i64 %70, i64* %5, align 8
  br label %84

84:                                               ; preds = %59, %82
  %85 = phi i64 [ %38, %59 ], [ %83, %82 ]
  %86 = load i8*, i8** %6, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %85
  store i8 1, i8* %87, align 1
  store i64 %63, i64* %4, align 8
  %88 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %89 = load i8, i8* %88, align 8
  %90 = add i64 %8, 4
  %91 = load i64, i64* %5, align 8
  %92 = icmp ult i64 %91, %90
  br i1 %92, label %93, label %111

93:                                               ; preds = %84
  %94 = lshr i64 %91, 1
  %95 = add i64 %94, %91
  %96 = icmp ugt i64 %95, %90
  %97 = select i1 %96, i64 %95, i64 %90
  %98 = call i8* @_Znam(i64 %97) #11
  %99 = ptrtoint i8* %98 to i64
  %100 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %2, i64 0, i32 0, i32 0, i32 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %93
  %105 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  store i64 %99, i64* %105, align 8
  br label %109

106:                                              ; preds = %93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* nonnull align 1 %102, i64 %63, i1 false) #10
  %107 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  store i64 %99, i64* %107, align 8
  call void @_ZdaPv(i8* nonnull %102) #11
  %108 = load i64, i64* %4, align 8
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %108, %106 ], [ %63, %104 ]
  store i64 %97, i64* %5, align 8
  br label %111

111:                                              ; preds = %84, %109
  %112 = phi i64 [ %63, %84 ], [ %110, %109 ]
  %113 = load i8*, i8** %6, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %112
  store i8 %89, i8* %114, align 1
  store i64 %90, i64* %4, align 8
  br label %115

115:                                              ; preds = %30, %111
  %116 = phi i64 [ %9, %30 ], [ %90, %111 ]
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  store i32 %117, i32* %118, align 8
  %119 = load i8*, i8** %6, align 8
  %120 = call i32 @_ZN7cricket9PseudoTcp5queueEPKcjb(%"class.cricket::PseudoTcp"* %0, i8* %119, i32 %117, i1 zeroext true)
  %121 = load i8*, i8** %6, align 8
  store i8* null, i8** %6, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %115
  call void @_ZdaPv(i8* nonnull %121) #11
  br label %124

124:                                              ; preds = %115, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__list_iterator", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 23
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %5, i32 %7) #10
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp sgt i64 %9, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  store i32 %16, i32* %17, align 4
  br label %18

18:                                               ; preds = %14, %2
  %19 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 40
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  %23 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %24 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %25 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %26 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %27 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 44
  %28 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base.6"** %28 to i64*
  %30 = bitcast %"class.std::__1::__list_iterator"* %3 to i8*
  %31 = bitcast %"class.std::__1::__list_iterator"* %3 to i64*
  %32 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  br label %33

33:                                               ; preds = %195, %18
  %34 = phi i32 [ %1, %18 ], [ 0, %195 ]
  %35 = load i32, i32* %19, align 4
  %36 = load i8, i8* %20, align 8
  %37 = add i8 %36, -1
  %38 = icmp ult i8 %37, 2
  br i1 %38, label %39, label %44

39:                                               ; preds = %33
  %40 = zext i8 %36 to i32
  %41 = load i32, i32* %21, align 8
  %42 = mul i32 %41, %40
  %43 = add i32 %42, %35
  br label %44

44:                                               ; preds = %33, %39
  %45 = phi i32 [ %43, %39 ], [ %35, %33 ]
  %46 = load i32, i32* %22, align 4
  %47 = icmp ult i32 %45, %46
  %48 = select i1 %47, i32 %45, i32 %46
  %49 = load i32, i32* %23, align 4
  %50 = load i32, i32* %24, align 8
  %51 = sub i32 %49, %50
  %52 = tail call i32 @llvm.usub.sat.i32(i32 %48, i32 %51)
  %53 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #10
  %54 = load i64, i64* %26, align 8
  %55 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %25) #10
  %56 = trunc i64 %54 to i32
  %57 = sub i32 %56, %51
  %58 = load i32, i32* %21, align 4
  %59 = icmp ult i32 %58, %57
  %60 = select i1 %59, i32 %58, i32 %57
  %61 = icmp ugt i32 %60, %52
  br i1 %61, label %62, label %65

62:                                               ; preds = %44
  %63 = shl i32 %52, 2
  %64 = icmp ult i32 %63, %48
  br i1 %64, label %68, label %65

65:                                               ; preds = %62, %44
  %66 = phi i32 [ %60, %44 ], [ %52, %62 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %122

68:                                               ; preds = %62, %65
  switch i32 %34, label %69 [
    i32 0, label %196
    i32 2, label %73
  ]

69:                                               ; preds = %68
  %70 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %68, %69
  %74 = load i32, i32* %23, align 4
  %75 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %76 = tail call i8* @_Znam(i64 65535) #11
  %77 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  %78 = load i32, i32* %77, align 4
  %79 = tail call i32 @llvm.bswap.i32(i32 %78) #10
  %80 = bitcast i8* %76 to i32*
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %76, i64 4
  %82 = tail call i32 @llvm.bswap.i32(i32 %74) #10
  %83 = bitcast i8* %81 to i32*
  store i32 %82, i32* %83, align 4
  %84 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds i8, i8* %76, i64 8
  %87 = tail call i32 @llvm.bswap.i32(i32 %85) #10
  %88 = bitcast i8* %86 to i32*
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %76, i64 12
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %76, i64 13
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %94 = load i8, i8* %93, align 8
  %95 = zext i8 %94 to i32
  %96 = lshr i32 %92, %95
  %97 = trunc i32 %96 to i16
  %98 = getelementptr inbounds i8, i8* %76, i64 14
  %99 = tail call i16 @llvm.bswap.i16(i16 %97) #10
  %100 = bitcast i8* %98 to i16*
  store i16 %99, i16* %100, align 2
  %101 = getelementptr inbounds i8, i8* %76, i64 16
  %102 = tail call i32 @llvm.bswap.i32(i32 %75) #10
  %103 = bitcast i8* %101 to i32*
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 33
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i8, i8* %76, i64 20
  %107 = tail call i32 @llvm.bswap.i32(i32 %105) #10
  %108 = bitcast i8* %106 to i32*
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 34
  store i32 %85, i32* %109, align 8
  %110 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %111 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %110, align 8
  %112 = bitcast %"class.cricket::IPseudoTcpNotify"* %111 to i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)***
  %113 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)**, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*** %112, align 8
  %114 = getelementptr inbounds i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %113, i64 4
  %115 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %114, align 8
  %116 = tail call i32 %115(%"class.cricket::IPseudoTcpNotify"* %111, %"class.cricket::PseudoTcp"* %0, i8* nonnull %76, i64 24) #10
  %117 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  store i32 0, i32* %117, align 8
  %118 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %75, i32* %118, align 4
  %119 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 1, i8* %119, align 2
  tail call void @_ZdaPv(i8* nonnull %76) #11
  br label %196

120:                                              ; preds = %69
  %121 = tail call i32 @_ZN3rtc6Time32Ev() #10
  store i32 %121, i32* %70, align 8
  br label %196

122:                                              ; preds = %65
  %123 = load i8, i8* %27, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %122
  %126 = load i32, i32* %23, align 4
  %127 = load i32, i32* %24, align 8
  %128 = icmp ugt i32 %126, %127
  %129 = icmp ult i32 %66, %58
  %130 = and i1 %129, %128
  br i1 %130, label %196, label %131

131:                                              ; preds = %122, %125
  %132 = load i64, i64* %29, align 8
  %133 = inttoptr i64 %132 to %"struct.std::__1::__list_node"*
  %134 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %133, i64 0, i32 1, i32 2
  %135 = load i8, i8* %134, align 4
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %131, %137
  %138 = phi i64 [ %142, %137 ], [ %132, %131 ]
  %139 = inttoptr i64 %138 to %"struct.std::__1::__list_node_base.6"*
  %140 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %139, i64 0, i32 1
  %141 = bitcast %"struct.std::__1::__list_node_base.6"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = inttoptr i64 %142 to %"struct.std::__1::__list_node"*
  %144 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %143, i64 0, i32 1, i32 2
  %145 = load i8, i8* %144, align 4
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %137

147:                                              ; preds = %137
  %148 = inttoptr i64 %142 to %"struct.std::__1::__list_node"*
  br label %149

149:                                              ; preds = %147, %131
  %150 = phi %"struct.std::__1::__list_node"* [ %133, %131 ], [ %148, %147 ]
  %151 = phi i64 [ %132, %131 ], [ %142, %147 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store i64 %151, i64* %31, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %150, i64 0, i32 1, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = icmp ugt i32 %153, %66
  br i1 %154, label %155, label %186

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %150, i64 0, i32 1, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, %66
  %159 = sub i32 %153, %66
  %160 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %150, i64 0, i32 1, i32 3
  %161 = load i8, i8* %160, align 1, !range !2
  store i32 %66, i32* %152, align 4
  %162 = inttoptr i64 %151 to %"struct.std::__1::__list_node_base.6"*
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %162, i64 0, i32 1
  %164 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %163, align 8
  %165 = tail call i8* @_Znwm(i64 32) #11, !noalias !3
  %166 = getelementptr inbounds i8, i8* %165, i64 16
  %167 = bitcast i8* %166 to i32*
  store i32 %158, i32* %167, align 4
  %168 = getelementptr inbounds i8, i8* %165, i64 20
  %169 = bitcast i8* %168 to i32*
  store i32 %159, i32* %169, align 4
  %170 = getelementptr inbounds i8, i8* %165, i64 24
  store i8 0, i8* %170, align 4
  %171 = getelementptr inbounds i8, i8* %165, i64 25
  store i8 %161, i8* %171, align 1
  %172 = getelementptr inbounds i8, i8* %165, i64 26
  store i8 -86, i8* %172, align 2
  %173 = getelementptr inbounds i8, i8* %165, i64 27
  store i8 -86, i8* %173, align 1
  %174 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %164, i64 0, i32 0
  %175 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %175, i64 0, i32 1
  %177 = bitcast %"struct.std::__1::__list_node_base.6"** %176 to i8**
  store i8* %165, i8** %177, align 8
  %178 = bitcast %"struct.std::__1::__list_node_base.6"* %164 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i8* %165 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast %"struct.std::__1::__list_node_base.6"* %164 to i8**
  store i8* %165, i8** %181, align 8
  %182 = getelementptr inbounds i8, i8* %165, i64 8
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base.6"**
  store %"struct.std::__1::__list_node_base.6"* %164, %"struct.std::__1::__list_node_base.6"** %183, align 8
  %184 = load i64, i64* %32, align 8
  %185 = add i64 %184, 1
  store i64 %185, i64* %32, align 8
  br label %186

186:                                              ; preds = %155, %149
  %187 = call zeroext i1 @_ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj(%"class.cricket::PseudoTcp"* %0, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %3, i32 %5)
  br i1 %187, label %195, label %188

188:                                              ; preds = %186
  %189 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %189) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1131, i32 4, i32 0, i32 0) #10
  %190 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %191 = bitcast %"class.std::__1::basic_ostringstream"* %190 to %"class.std::__1::basic_ostream"*
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE, i64 0, i64 0), i64 11) #10
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %194 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i64 15) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %189) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %196

195:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %33

196:                                              ; preds = %125, %73, %120, %68, %188
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp9NotifyMTUEt(%"class.cricket::PseudoTcp"* nocapture, i16 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i16 %1 to i32
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 31
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 29
  br label %10

10:                                               ; preds = %14, %8
  %11 = phi i64 [ %12, %14 ], [ 0, %8 ]
  %12 = add nuw nsw i64 %11, 1
  %13 = icmp eq i64 %12, 10
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds [11 x i16], [11 x i16]* @_ZN7cricketL15PACKET_MAXIMUMSE, i64 0, i64 %11
  %16 = load i16, i16* %15, align 2
  %17 = icmp ugt i16 %16, %1
  br i1 %17, label %10, label %18

18:                                               ; preds = %10, %14
  %19 = trunc i64 %11 to i32
  store i32 %19, i32* %9, align 4
  %20 = add nsw i32 %3, -116
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %23 = shl nsw i32 %20, 1
  %24 = load i32, i32* %22, align 4
  %25 = icmp ult i32 %24, %23
  %26 = select i1 %25, i32 %23, i32 %24
  store i32 %26, i32* %22, align 8
  %27 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, %20
  %30 = select i1 %29, i32 %20, i32 %28
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp9adjustMTUEv(%"class.cricket::PseudoTcp"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 29
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 31
  br label %4

4:                                                ; preds = %10, %1
  %5 = phi i32 [ 0, %1 ], [ %6, %10 ]
  %6 = add nuw nsw i32 %5, 1
  %7 = icmp eq i32 %6, 10
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = load i32, i32* %3, align 4
  br label %17

10:                                               ; preds = %4
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds [11 x i16], [11 x i16]* @_ZN7cricketL15PACKET_MAXIMUMSE, i64 0, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = load i32, i32* %3, align 4
  %16 = icmp ult i32 %15, %14
  br i1 %16, label %4, label %17

17:                                               ; preds = %10, %8
  %18 = phi i32 [ %9, %8 ], [ %15, %10 ]
  store i32 %5, i32* %2, align 4
  %19 = add i32 %18, -116
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %22 = shl i32 %19, 1
  %23 = load i32, i32* %21, align 4
  %24 = icmp ult i32 %23, %22
  %25 = select i1 %24, i32 %22, i32 %23
  store i32 %25, i32* %21, align 8
  %26 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, %19
  %29 = select i1 %28, i32 %19, i32 %27
  store i32 %29, i32* %26, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp11NotifyClockEj(%"class.cricket::PseudoTcp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.std::__1::__list_iterator", align 8
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %204, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 32
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %64, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, %11
  %17 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %16, i32 %1) #10
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %64

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %64, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::__list_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base.6"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::__list_iterator"* %5 to i64*
  store i64 %27, i64* %28, align 8
  %29 = call zeroext i1 @_ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj(%"class.cricket::PseudoTcp"* %0, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %5, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br i1 %29, label %43, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %31) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %32 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %31) #10
  store i32 4, i32* %6, align 8
  %35 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %36 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %35, align 8
  %37 = icmp eq %"class.cricket::IPseudoTcpNotify"* %36, null
  br i1 %37, label %204, label %38

38:                                               ; preds = %30
  %39 = bitcast %"class.cricket::IPseudoTcpNotify"* %36 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %40 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %40, i64 3
  %42 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %41, align 8
  call void %42(%"class.cricket::IPseudoTcpNotify"* nonnull %36, %"class.cricket::PseudoTcp"* %0, i32 103) #10
  br label %204

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %47 = load i32, i32* %46, align 8
  %48 = sub i32 %45, %47
  %49 = lshr i32 %48, 1
  %50 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %51 = load i32, i32* %50, align 8
  %52 = shl i32 %51, 1
  %53 = icmp ult i32 %49, %52
  %54 = select i1 %53, i32 %52, i32 %49
  %55 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  store i32 %54, i32* %55, align 8
  %56 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  store i32 %51, i32* %56, align 4
  %57 = load i32, i32* %6, align 8
  %58 = icmp slt i32 %57, 3
  %59 = select i1 %58, i32 3000, i32 60000
  %60 = load i32, i32* %14, align 4
  %61 = shl i32 %60, 1
  %62 = icmp ult i32 %61, %59
  %63 = select i1 %62, i32 %61, i32 %59
  store i32 %63, i32* %14, align 4
  store i32 %1, i32* %10, align 8
  br label %64

64:                                               ; preds = %9, %43, %19, %13
  %65 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %147

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 23
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, %70
  %74 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %73, i32 %1) #10
  %75 = icmp slt i32 %74, 1
  br i1 %75, label %76, label %147

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 15
  %78 = load i32, i32* %77, align 4
  %79 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %1, i32 %78) #10
  %80 = icmp sgt i32 %79, 14999
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %82) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %83 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %84 = bitcast %"class.std::__1::basic_ostringstream"* %83 to %"class.std::__1::basic_ostream"*
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %82) #10
  store i32 4, i32* %6, align 8
  %86 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %87 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %86, align 8
  %88 = icmp eq %"class.cricket::IPseudoTcpNotify"* %87, null
  br i1 %88, label %204, label %89

89:                                               ; preds = %81
  %90 = bitcast %"class.cricket::IPseudoTcpNotify"* %87 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %91 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %91, i64 3
  %93 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %92, align 8
  call void %93(%"class.cricket::IPseudoTcpNotify"* nonnull %87, %"class.cricket::PseudoTcp"* %0, i32 103) #10
  br label %204

94:                                               ; preds = %76
  %95 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, -1
  %98 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %99 = tail call i8* @_Znam(i64 65535) #11
  %100 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = tail call i32 @llvm.bswap.i32(i32 %101) #10
  %103 = bitcast i8* %99 to i32*
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %99, i64 4
  %105 = tail call i32 @llvm.bswap.i32(i32 %97) #10
  %106 = bitcast i8* %104 to i32*
  store i32 %105, i32* %106, align 4
  %107 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds i8, i8* %99, i64 8
  %110 = tail call i32 @llvm.bswap.i32(i32 %108) #10
  %111 = bitcast i8* %109 to i32*
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %99, i64 12
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds i8, i8* %99, i64 13
  store i8 0, i8* %113, align 1
  %114 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %117 = load i8, i8* %116, align 8
  %118 = zext i8 %117 to i32
  %119 = lshr i32 %115, %118
  %120 = trunc i32 %119 to i16
  %121 = getelementptr inbounds i8, i8* %99, i64 14
  %122 = tail call i16 @llvm.bswap.i16(i16 %120) #10
  %123 = bitcast i8* %121 to i16*
  store i16 %122, i16* %123, align 2
  %124 = getelementptr inbounds i8, i8* %99, i64 16
  %125 = tail call i32 @llvm.bswap.i32(i32 %98) #10
  %126 = bitcast i8* %124 to i32*
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 33
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds i8, i8* %99, i64 20
  %130 = tail call i32 @llvm.bswap.i32(i32 %128) #10
  %131 = bitcast i8* %129 to i32*
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 34
  store i32 %108, i32* %132, align 8
  %133 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %134 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %133, align 8
  %135 = bitcast %"class.cricket::IPseudoTcpNotify"* %134 to i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)***
  %136 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)**, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*** %135, align 8
  %137 = getelementptr inbounds i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %136, i64 4
  %138 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %137, align 8
  %139 = tail call i32 %138(%"class.cricket::IPseudoTcpNotify"* %134, %"class.cricket::PseudoTcp"* %0, i8* nonnull %99, i64 24) #10
  %140 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %98, i32* %141, align 4
  %142 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 1, i8* %142, align 2
  tail call void @_ZdaPv(i8* nonnull %99) #11
  store i32 %1, i32* %69, align 4
  %143 = load i32, i32* %71, align 4
  %144 = shl i32 %143, 1
  %145 = icmp ult i32 %144, 60000
  %146 = select i1 %145, i32 %144, i32 60000
  store i32 %146, i32* %71, align 4
  br label %147

147:                                              ; preds = %94, %68, %64
  %148 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %204, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, %149
  %155 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %154, i32 %1) #10
  %156 = icmp slt i32 %155, 1
  br i1 %156, label %157, label %204

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %159 = load i32, i32* %158, align 4
  %160 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %161 = tail call i8* @_Znam(i64 65535) #11
  %162 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  %163 = load i32, i32* %162, align 4
  %164 = tail call i32 @llvm.bswap.i32(i32 %163) #10
  %165 = bitcast i8* %161 to i32*
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds i8, i8* %161, i64 4
  %167 = tail call i32 @llvm.bswap.i32(i32 %159) #10
  %168 = bitcast i8* %166 to i32*
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds i8, i8* %161, i64 8
  %172 = tail call i32 @llvm.bswap.i32(i32 %170) #10
  %173 = bitcast i8* %171 to i32*
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds i8, i8* %161, i64 12
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds i8, i8* %161, i64 13
  store i8 0, i8* %175, align 1
  %176 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %179 = load i8, i8* %178, align 8
  %180 = zext i8 %179 to i32
  %181 = lshr i32 %177, %180
  %182 = trunc i32 %181 to i16
  %183 = getelementptr inbounds i8, i8* %161, i64 14
  %184 = tail call i16 @llvm.bswap.i16(i16 %182) #10
  %185 = bitcast i8* %183 to i16*
  store i16 %184, i16* %185, align 2
  %186 = getelementptr inbounds i8, i8* %161, i64 16
  %187 = tail call i32 @llvm.bswap.i32(i32 %160) #10
  %188 = bitcast i8* %186 to i32*
  store i32 %187, i32* %188, align 4
  %189 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 33
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds i8, i8* %161, i64 20
  %192 = tail call i32 @llvm.bswap.i32(i32 %190) #10
  %193 = bitcast i8* %191 to i32*
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 34
  store i32 %170, i32* %194, align 8
  %195 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %196 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %195, align 8
  %197 = bitcast %"class.cricket::IPseudoTcpNotify"* %196 to i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)***
  %198 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)**, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*** %197, align 8
  %199 = getelementptr inbounds i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %198, i64 4
  %200 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %199, align 8
  %201 = tail call i32 %200(%"class.cricket::IPseudoTcpNotify"* %196, %"class.cricket::PseudoTcp"* %0, i8* nonnull %161, i64 24) #10
  store i32 0, i32* %148, align 8
  %202 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %160, i32* %202, align 4
  %203 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 1, i8* %203, align 2
  tail call void @_ZdaPv(i8* nonnull %161) #11
  br label %204

204:                                              ; preds = %89, %81, %38, %30, %147, %2, %157, %151
  ret void
}

declare i32 @_ZN3rtc10TimeDiff32Ejj(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj(%"class.cricket::PseudoTcp"*, %"class.std::__1::__list_iterator"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = bitcast %"class.std::__1::__list_iterator"* %1 to %"struct.std::__1::__list_node"**
  %9 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %9, i64 0, i32 1, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 3
  %16 = select i1 %15, i32 15, i32 30
  %17 = icmp ugt i32 %16, %12
  br i1 %17, label %25, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 980, i32 4, i32 0, i32 0) #10
  %20 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj, i64 0, i64 0), i64 8) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i64 20) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #10
  br label %152

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %9, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* %26, align 4
  %30 = icmp ult i32 %28, %29
  %31 = select i1 %30, i32 %28, i32 %29
  %32 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %33 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 29
  %34 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  br label %37

35:                                               ; preds = %69
  %36 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  br label %37

37:                                               ; preds = %35, %25
  %38 = phi %"struct.std::__1::__list_node"* [ %9, %25 ], [ %36, %35 ]
  %39 = phi i32 [ %31, %25 ], [ %74, %35 ]
  %40 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %38, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %38, i64 0, i32 1, i32 3
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i8 0, i8 2
  %46 = load i32, i32* %32, align 8
  %47 = sub i32 %41, %46
  %48 = tail call i32 @_ZN7cricket9PseudoTcp6packetEjhjj(%"class.cricket::PseudoTcp"* %0, i32 %41, i8 zeroext %45, i32 %47, i32 %39)
  switch i32 %48, label %49 [
    i32 0, label %77
    i32 2, label %51
  ]

49:                                               ; preds = %37
  %50 = load i32, i32* %33, align 4
  br label %58

51:                                               ; preds = %37
  %52 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 996, i32 4, i32 0, i32 0) #10
  %53 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj, i64 0, i64 0), i64 8) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #10
  br label %152

58:                                               ; preds = %49, %69
  %59 = phi i32 [ %50, %49 ], [ %60, %69 ]
  %60 = add i32 %59, 1
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %62, label %69

62:                                               ; preds = %58
  %63 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %63) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1004, i32 4, i32 0, i32 0) #10
  %64 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %65 = bitcast %"class.std::__1::basic_ostringstream"* %64 to %"class.std::__1::basic_ostream"*
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj, i64 0, i64 0), i64 8) #10
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i64 13) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %63) #10
  br label %152

69:                                               ; preds = %58
  %70 = zext i32 %60 to i64
  %71 = getelementptr inbounds [11 x i16], [11 x i16]* @_ZN7cricketL15PACKET_MAXIMUMSE, i64 0, i64 %70
  store i32 %60, i32* %33, align 4
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %73, -116
  store i32 %74, i32* %27, align 8
  %75 = shl nsw i32 %74, 1
  store i32 %75, i32* %34, align 4
  %76 = icmp ult i32 %74, %39
  br i1 %76, label %35, label %58

77:                                               ; preds = %37
  %78 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %78, i64 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp ult i32 %39, %80
  br i1 %81, label %82, label %129

82:                                               ; preds = %77
  %83 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %83) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1023, i32 4, i32 0, i32 0) #10
  %84 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %85 = bitcast %"class.std::__1::basic_ostringstream"* %84 to %"class.std::__1::basic_ostream"*
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %85, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj, i64 0, i64 0), i64 8) #10
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i64 15) #10
  %89 = load i32, i32* %27, align 8
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %88, i32 %89) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %83) #10
  %91 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %91, i64 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, %39
  %95 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %91, i64 0, i32 1, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 %96, %39
  %98 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %91, i64 0, i32 1, i32 3
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %91, i64 0, i32 1, i32 2
  %101 = load i8, i8* %100, align 4
  store i32 %39, i32* %95, align 4
  %102 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %1, i64 0, i32 0
  %103 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %103, i64 0, i32 1
  %105 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %104, align 8
  %106 = call i8* @_Znwm(i64 32) #11, !noalias !6
  %107 = getelementptr inbounds i8, i8* %106, i64 16
  %108 = bitcast i8* %107 to i32*
  store i32 %94, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %106, i64 20
  %110 = bitcast i8* %109 to i32*
  store i32 %97, i32* %110, align 4
  %111 = getelementptr inbounds i8, i8* %106, i64 24
  store i8 %101, i8* %111, align 4
  %112 = getelementptr inbounds i8, i8* %106, i64 25
  store i8 %99, i8* %112, align 1
  %113 = getelementptr inbounds i8, i8* %106, i64 26
  store i8 -86, i8* %113, align 2
  %114 = getelementptr inbounds i8, i8* %106, i64 27
  store i8 -86, i8* %114, align 1
  %115 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %105, i64 0, i32 0
  %116 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %116, i64 0, i32 1
  %118 = bitcast %"struct.std::__1::__list_node_base.6"** %117 to i8**
  store i8* %106, i8** %118, align 8
  %119 = bitcast %"struct.std::__1::__list_node_base.6"* %105 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %106 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__list_node_base.6"* %105 to i8**
  store i8* %106, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %106, i64 8
  %124 = bitcast i8* %123 to %"struct.std::__1::__list_node_base.6"**
  store %"struct.std::__1::__list_node_base.6"* %105, %"struct.std::__1::__list_node_base.6"** %124, align 8
  %125 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  br label %129

129:                                              ; preds = %82, %77
  %130 = phi %"struct.std::__1::__list_node"* [ %128, %82 ], [ %78, %77 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %130, i64 0, i32 1, i32 2
  %132 = load i8, i8* %131, align 4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %143

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %130, i64 0, i32 1, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, %136
  store i32 %139, i32* %137, align 4
  %140 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %140, i64 0, i32 1, i32 2
  %142 = load i8, i8* %141, align 4
  br label %143

143:                                              ; preds = %134, %129
  %144 = phi i8 [ %142, %134 ], [ %132, %129 ]
  %145 = phi %"struct.std::__1::__list_node"* [ %140, %134 ], [ %130, %129 ]
  %146 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %145, i64 0, i32 1, i32 2
  %147 = add i8 %144, 1
  store i8 %147, i8* %146, align 4
  %148 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 32
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %143
  store i32 %2, i32* %148, align 8
  br label %152

152:                                              ; preds = %62, %51, %151, %143, %18
  %153 = phi i1 [ false, %18 ], [ true, %151 ], [ true, %143 ], [ false, %51 ], [ false, %62 ]
  ret i1 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp9closedownEj(%"class.cricket::PseudoTcp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %4) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %5 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %5 to %"class.std::__1::basic_ostream"*
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %4) #10
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  store i32 4, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %10 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %9, align 8
  %11 = icmp eq %"class.cricket::IPseudoTcpNotify"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.cricket::IPseudoTcpNotify"* %10 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %14 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %14, i64 3
  %16 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %15, align 8
  call void %16(%"class.cricket::IPseudoTcpNotify"* nonnull %10, %"class.cricket::PseudoTcp"* %0, i32 %1) #10
  br label %17

17:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp6packetEjhjj(%"class.cricket::PseudoTcp"*, i32, i8 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %7 = tail call i8* @_Znam(i64 65535) #11
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #10
  %11 = bitcast i8* %7 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %7, i64 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %1) #10
  %14 = bitcast i8* %12 to i32*
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 8
  %18 = tail call i32 @llvm.bswap.i32(i32 %16) #10
  %19 = bitcast i8* %17 to i32*
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %7, i64 13
  store i8 %2, i8* %21, align 1
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %25 = load i8, i8* %24, align 8
  %26 = zext i8 %25 to i32
  %27 = lshr i32 %23, %26
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds i8, i8* %7, i64 14
  %30 = tail call i16 @llvm.bswap.i16(i16 %28) #10
  %31 = bitcast i8* %29 to i16*
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 16
  %33 = tail call i32 @llvm.bswap.i32(i32 %6) #10
  %34 = bitcast i8* %32 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 33
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i8, i8* %7, i64 20
  %38 = tail call i32 @llvm.bswap.i32(i32 %36) #10
  %39 = bitcast i8* %37 to i32*
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 34
  store i32 %16, i32* %40, align 8
  %41 = icmp ne i32 %4, 0
  br i1 %41, label %42, label %71

42:                                               ; preds = %5
  %43 = getelementptr inbounds i8, i8* %7, i64 24
  %44 = zext i32 %4 to i64
  %45 = zext i32 %3 to i64
  %46 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %47 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %46) #10
  %48 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %49, %45
  br i1 %50, label %51, label %69

51:                                               ; preds = %42
  %52 = sub i64 %49, %45
  %53 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %45
  %56 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = urem i64 %55, %57
  %59 = icmp ult i64 %52, %44
  %60 = select i1 %59, i64 %52, i64 %44
  %61 = sub i64 %57, %58
  %62 = icmp ult i64 %61, %60
  %63 = select i1 %62, i64 %61, i64 %60
  %64 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %58
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %66, i64 %63, i1 false) #10
  %67 = getelementptr inbounds i8, i8* %43, i64 %63
  %68 = sub nsw i64 %60, %63
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %65, i64 %68, i1 false) #10
  br label %69

69:                                               ; preds = %42, %51
  %70 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %46) #10
  br label %71

71:                                               ; preds = %69, %5
  %72 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %73 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %72, align 8
  %74 = add i32 %4, 24
  %75 = zext i32 %74 to i64
  %76 = bitcast %"class.cricket::IPseudoTcpNotify"* %73 to i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)***
  %77 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)**, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*** %76, align 8
  %78 = getelementptr inbounds i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %77, i64 4
  %79 = load i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)*, i32 (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i8*, i64)** %78, align 8
  %80 = tail call i32 %79(%"class.cricket::IPseudoTcpNotify"* %73, %"class.cricket::PseudoTcp"* %0, i8* nonnull %7, i64 %75) #10
  %81 = icmp ne i32 %80, 0
  %82 = and i1 %41, %81
  br i1 %82, label %91, label %83

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  store i32 0, i32* %84, align 8
  %85 = icmp eq i32 %4, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 23
  store i32 %6, i32* %87, align 4
  br label %88

88:                                               ; preds = %83, %86
  %89 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %6, i32* %89, align 4
  %90 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 1, i8* %90, align 2
  br label %91

91:                                               ; preds = %71, %88
  %92 = phi i32 [ 0, %88 ], [ %80, %71 ]
  tail call void @_ZdaPv(i8* nonnull %7) #11
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp12NotifyPacketEPKcm(%"class.cricket::PseudoTcp"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cricket::PseudoTcp::Segment", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = icmp ugt i64 %2, 65535
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 358, i32 2, i32 0, i32 0) #10
  %9 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp12NotifyPacketEPKcm, i64 0, i64 0), i64 12) #10
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #10
  br label %56

14:                                               ; preds = %3
  %15 = trunc i64 %2 to i32
  %16 = icmp ult i32 %15, 24
  br i1 %16, label %56, label %17

17:                                               ; preds = %14
  %18 = bitcast %"struct.cricket::PseudoTcp::Segment"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #10
  %19 = bitcast i8* %1 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = tail call i32 @llvm.bswap.i32(i32 %20) #10
  %22 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %1, i64 4
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #10
  %27 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 1
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %1, i64 8
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #10
  %32 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %1, i64 13
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 3
  store i8 %34, i8* %35, align 4
  %36 = getelementptr inbounds i8, i8* %1, i64 14
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #10
  %40 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 4
  store i16 %39, i16* %40, align 2
  %41 = getelementptr inbounds i8, i8* %1, i64 16
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @llvm.bswap.i32(i32 %43) #10
  %45 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 7
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %1, i64 20
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @llvm.bswap.i32(i32 %48) #10
  %50 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 8
  store i32 %49, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %1, i64 24
  %52 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 5
  store i8* %51, i8** %52, align 8
  %53 = add nsw i32 %15, -24
  %54 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 6
  store i32 %53, i32* %54, align 8
  %55 = call zeroext i1 @_ZN7cricket9PseudoTcp7processERNS0_7SegmentE(%"class.cricket::PseudoTcp"* %0, %"struct.cricket::PseudoTcp::Segment"* nonnull dereferenceable(40) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  br label %56

56:                                               ; preds = %17, %14, %7
  %57 = phi i1 [ false, %7 ], [ %55, %17 ], [ false, %14 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp5parseEPKhj(%"class.cricket::PseudoTcp"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cricket::PseudoTcp::Segment", align 8
  %5 = icmp ult i32 %2, 24
  br i1 %5, label %45, label %6

6:                                                ; preds = %3
  %7 = bitcast %"struct.cricket::PseudoTcp::Segment"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = bitcast i8* %1 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #10
  %11 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 4
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #10
  %16 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %1, i64 8
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #10
  %21 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %1, i64 13
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 3
  store i8 %23, i8* %24, align 4
  %25 = getelementptr inbounds i8, i8* %1, i64 14
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #10
  %29 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 4
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds i8, i8* %1, i64 16
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = tail call i32 @llvm.bswap.i32(i32 %32) #10
  %34 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 7
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %1, i64 20
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = tail call i32 @llvm.bswap.i32(i32 %37) #10
  %39 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 8
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %1, i64 24
  %41 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 5
  store i8* %40, i8** %41, align 8
  %42 = add i32 %2, -24
  %43 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %4, i64 0, i32 6
  store i32 %42, i32* %43, align 8
  %44 = call zeroext i1 @_ZN7cricket9PseudoTcp7processERNS0_7SegmentE(%"class.cricket::PseudoTcp"* %0, %"struct.cricket::PseudoTcp::Segment"* nonnull dereferenceable(40) %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  br label %45

45:                                               ; preds = %3, %6
  %46 = phi i1 [ %44, %6 ], [ false, %3 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp12GetNextClockEjRl(%"class.cricket::PseudoTcp"*, i32, i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN7cricket9PseudoTcp11clock_checkEjRl(%"class.cricket::PseudoTcp"* %0, i32 %1, i64* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp11clock_checkEjRl(%"class.cricket::PseudoTcp"*, i32, i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %21 [
    i32 2, label %68
    i32 1, label %6
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %68

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #10
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #10
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %3, %17, %10
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i64 60000, i64* %2, align 8
  br label %68

26:                                               ; preds = %21
  store i64 4000, i64* %2, align 8
  %27 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 43
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, %28
  %34 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %33, i32 %1) #10
  %35 = icmp slt i32 %34, 4000
  %36 = select i1 %35, i32 %34, i32 4000
  %37 = sext i32 %36 to i64
  store i64 %37, i64* %2, align 8
  br label %38

38:                                               ; preds = %26, %30
  %39 = phi i64 [ 4000, %26 ], [ %37, %30 ]
  %40 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 32
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %38
  %44 = trunc i64 %39 to i32
  %45 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, %41
  %48 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %47, i32 %1) #10
  %49 = icmp slt i32 %48, %44
  %50 = select i1 %49, i32 %48, i32 %44
  %51 = sext i32 %50 to i64
  store i64 %51, i64* %2, align 8
  br label %52

52:                                               ; preds = %38, %43
  %53 = phi i64 [ %39, %38 ], [ %51, %43 ]
  %54 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %52
  %58 = trunc i64 %53 to i32
  %59 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 23
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, %60
  %64 = tail call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %63, i32 %1) #10
  %65 = icmp slt i32 %64, %58
  %66 = select i1 %65, i32 %64, i32 %58
  %67 = sext i32 %66 to i64
  store i64 %67, i64* %2, align 8
  br label %68

68:                                               ; preds = %52, %57, %17, %6, %3, %25
  %69 = phi i1 [ true, %25 ], [ false, %3 ], [ false, %6 ], [ false, %17 ], [ true, %57 ], [ true, %52 ]
  ret i1 %69
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp9GetOptionENS0_6OptionEPi(%"class.cricket::PseudoTcp"* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
    i32 3, label %12
    i32 2, label %15
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 44
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = xor i8 %6, 1
  %8 = zext i8 %7 to i32
  br label %18

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  %11 = load i32, i32* %10, align 8
  br label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 20
  %14 = load i32, i32* %13, align 8
  br label %18

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %4, %12, %15, %9
  %19 = phi i32 [ %11, %9 ], [ %17, %15 ], [ %14, %12 ], [ %8, %4 ]
  store i32 %19, i32* %2, align 4
  br label %20

20:                                               ; preds = %18, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp9SetOptionENS0_6OptionEi(%"class.cricket::PseudoTcp"*, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %40 [
    i32 0, label %4
    i32 1, label %8
    i32 3, label %10
    i32 2, label %39
  ]

4:                                                ; preds = %3
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 44
  %7 = zext i1 %5 to i8
  store i8 %7, i8* %6, align 4
  br label %40

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  store i32 %2, i32* %9, align 8
  br label %40

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 20
  store i32 %2, i32* %11, align 8
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #10
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %12
  br i1 %17, label %37, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %12
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = tail call i8* @_Znam(i64 %12) #11
  %24 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %20, %25
  %27 = icmp ult i64 %26, %16
  %28 = select i1 %27, i64 %26, i64 %16
  %29 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 %31, i64 %28, i1 false) #10
  %32 = getelementptr inbounds i8, i8* %23, i64 %28
  %33 = sub i64 %16, %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %30, i64 %33, i1 false) #10
  store i8* %23, i8** %29, align 8
  %34 = icmp eq i8* %30, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %30) #11
  br label %36

36:                                               ; preds = %35, %22
  store i64 0, i64* %24, align 8
  store i64 %12, i64* %19, align 8
  br label %37

37:                                               ; preds = %10, %18, %36
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #10
  br label %40

39:                                               ; preds = %3
  tail call void @_ZN7cricket9PseudoTcp19resizeReceiveBufferEj(%"class.cricket::PseudoTcp"* %0, i32 %2)
  br label %40

40:                                               ; preds = %3, %8, %39, %37, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp16resizeSendBufferEj(%"class.cricket::PseudoTcp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 20
  store i32 %1, i32* %3, align 8
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %4
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, %4
  br i1 %13, label %29, label %14

14:                                               ; preds = %10
  %15 = tail call i8* @_Znam(i64 %4) #11
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %12, %17
  %19 = icmp ult i64 %18, %8
  %20 = select i1 %19, i64 %18, i64 %8
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %23, i64 %20, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %15, i64 %20
  %25 = sub i64 %8, %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %22, i64 %25, i1 false) #10
  store i8* %15, i8** %21, align 8
  %26 = icmp eq i8* %22, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %14
  tail call void @_ZdaPv(i8* nonnull %22) #11
  br label %28

28:                                               ; preds = %27, %14
  store i64 0, i64* %16, align 8
  store i64 %4, i64* %11, align 8
  br label %29

29:                                               ; preds = %2, %10, %28
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp19resizeReceiveBufferEj(%"class.cricket::PseudoTcp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 65535
  br i1 %3, label %4, label %10

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %8, %4 ], [ %1, %2 ]
  %6 = phi i8 [ %7, %4 ], [ 0, %2 ]
  %7 = add nuw nsw i8 %6, 1
  %8 = lshr i32 %5, 1
  %9 = icmp ugt i32 %5, 131071
  br i1 %9, label %4, label %10

10:                                               ; preds = %4, %2
  %11 = phi i8 [ 0, %2 ], [ %7, %4 ]
  %12 = phi i32 [ %1, %2 ], [ %8, %4 ]
  %13 = zext i8 %11 to i32
  %14 = shl i32 %12, %13
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %17 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %16) #10
  %18 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %15
  br i1 %20, label %40, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %15
  br i1 %24, label %40, label %25

25:                                               ; preds = %21
  %26 = tail call i8* @_Znam(i64 %15) #11
  %27 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %23, %28
  %30 = icmp ult i64 %29, %19
  %31 = select i1 %30, i64 %29, i64 %19
  %32 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %34, i64 %31, i1 false) #10
  %35 = getelementptr inbounds i8, i8* %26, i64 %31
  %36 = sub i64 %19, %31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %33, i64 %36, i1 false) #10
  store i8* %26, i8** %32, align 8
  %37 = icmp eq i8* %33, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %33) #11
  br label %39

39:                                               ; preds = %38, %25
  store i64 0, i64* %27, align 8
  store i64 %15, i64* %22, align 8
  br label %40

40:                                               ; preds = %10, %21, %39
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #10
  %42 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 12
  store i32 %14, i32* %42, align 8
  %43 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  store i8 %11, i8* %43, align 8
  %44 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  store i32 %14, i32* %44, align 8
  %45 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %16) #10
  %46 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %18, align 8
  %49 = sub i64 %47, %48
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #10
  %51 = trunc i64 %49 to i32
  %52 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  store i32 %51, i32* %52, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7cricket9PseudoTcp19GetCongestionWindowEv(%"class.cricket::PseudoTcp"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7cricket9PseudoTcp16GetBytesInFlightEv(%"class.cricket::PseudoTcp"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %5 = load i32, i32* %4, align 8
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket9PseudoTcp23GetBytesBufferedNotSentEv(%"class.cricket::PseudoTcp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #10
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #10
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %10 = load i32, i32* %9, align 4
  %11 = trunc i64 %7 to i32
  %12 = add i32 %3, %11
  %13 = sub i32 %12, %10
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7cricket9PseudoTcp16LockedFifoBuffer11GetBufferedEv(%"class.cricket::PseudoTcp::LockedFifoBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #10
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #10
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7cricket9PseudoTcp26GetRoundTripTimeEstimateMsEv(%"class.cricket::PseudoTcp"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 36
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp4RecvEPcm(%"class.cricket::PseudoTcp"*, i8* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 107, i32* %8, align 4
  br label %65

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #10
  %12 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  %17 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 6
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 11, i32* %18, align 4
  br label %65

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = urem i64 %21, %23
  %25 = icmp ult i64 %13, %2
  %26 = select i1 %25, i64 %13, i64 %2
  %27 = sub i64 %23, %24
  %28 = icmp ult i64 %27, %26
  %29 = select i1 %28, i64 %27, i64 %26
  %30 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %32, i64 %29, i1 false) #10
  %33 = getelementptr inbounds i8, i8* %1, i64 %29
  %34 = load i8*, i8** %30, align 8
  %35 = sub i64 %26, %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %35, i1 false) #10
  %36 = load i64, i64* %20, align 8
  %37 = add i64 %36, %26
  %38 = load i64, i64* %22, align 8
  %39 = urem i64 %37, %38
  store i64 %39, i64* %20, align 8
  %40 = load i64, i64* %12, align 8
  %41 = sub i64 %40, %26
  store i64 %41, i64* %12, align 8
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  %43 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #10
  %44 = load i64, i64* %22, align 8
  %45 = load i64, i64* %12, align 8
  %46 = sub i64 %44, %45
  %47 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  %48 = trunc i64 %46 to i32
  %49 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %50 = load i32, i32* %49, align 8
  %51 = sub i32 %48, %50
  %52 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 12
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %53, 1
  %55 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %56, %54
  %58 = select i1 %57, i32 %56, i32 %54
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %19
  %61 = icmp eq i32 %50, 0
  store i32 %48, i32* %49, align 8
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 2)
  br label %63

63:                                               ; preds = %60, %62, %19
  %64 = trunc i64 %26 to i32
  br label %65

65:                                               ; preds = %15, %63, %7
  %66 = phi i32 [ -1, %7 ], [ %64, %63 ], [ -1, %15 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer4ReadEPvmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i8* nocapture, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = urem i64 %12, %14
  %16 = icmp ult i64 %8, %2
  %17 = select i1 %16, i64 %8, i64 %2
  %18 = sub i64 %14, %15
  %19 = icmp ult i64 %18, %17
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %23, i64 %20, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %1, i64 %20
  %25 = load i8*, i8** %21, align 8
  %26 = sub i64 %17, %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %25, i64 %26, i1 false) #10
  %27 = load i64, i64* %11, align 8
  %28 = add i64 %27, %17
  %29 = load i64, i64* %13, align 8
  %30 = urem i64 %28, %29
  store i64 %30, i64* %11, align 8
  %31 = load i64, i64* %7, align 8
  %32 = sub i64 %31, %17
  store i64 %32, i64* %7, align 8
  %33 = icmp eq i64* %3, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %10
  store i64 %17, i64* %3, align 8
  br label %35

35:                                               ; preds = %4, %34, %10
  %36 = phi i1 [ true, %10 ], [ true, %34 ], [ false, %4 ]
  %37 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket9PseudoTcp16LockedFifoBuffer17GetWriteRemainingEPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #10
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  store i64 %9, i64* %1, align 8
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp4SendEPKcm(%"class.cricket::PseudoTcp"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 107, i32* %8, align 4
  br label %24

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #10
  %12 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  %17 = icmp eq i64 %13, %15
  br i1 %17, label %18, label %21

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 7
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  store i32 11, i32* %20, align 4
  br label %24

21:                                               ; preds = %9
  %22 = trunc i64 %2 to i32
  %23 = tail call i32 @_ZN7cricket9PseudoTcp5queueEPKcjb(%"class.cricket::PseudoTcp"* %0, i8* %1, i32 %22, i1 zeroext false)
  tail call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 0)
  br label %24

24:                                               ; preds = %18, %21, %7
  %25 = phi i32 [ -1, %7 ], [ %23, %21 ], [ -1, %18 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp5queueEPKcjb(%"class.cricket::PseudoTcp"*, i8* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  %13 = trunc i64 %11 to i32
  %14 = icmp ult i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19
  %17 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %4
  %21 = bitcast %"class.std::__1::list.4"* %16 to %"struct.std::__1::__list_node"**
  %22 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 3
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = zext i8 %24 to i32
  %26 = zext i1 %3 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %28, label %36

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, %15
  store i32 %35, i32* %33, align 4
  br label %65

36:                                               ; preds = %28, %20, %4
  %37 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %38 = load i32, i32* %37, align 8
  %39 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %40 = load i64, i64* %9, align 8
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  %42 = trunc i64 %40 to i32
  %43 = add i32 %38, %42
  %44 = zext i1 %3 to i8
  %45 = tail call i8* @_Znwm(i64 32) #11, !noalias !9
  %46 = bitcast i8* %45 to %"struct.std::__1::__list_node_base.6"**
  %47 = getelementptr inbounds i8, i8* %45, i64 16
  %48 = bitcast i8* %47 to i32*
  store i32 %43, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %45, i64 20
  %50 = bitcast i8* %49 to i32*
  store i32 %15, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %45, i64 24
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %45, i64 25
  store i8 %44, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %45, i64 26
  store i8 -86, i8* %53, align 2
  %54 = getelementptr inbounds i8, i8* %45, i64 27
  store i8 -86, i8* %54, align 1
  %55 = getelementptr inbounds %"class.std::__1::list.4", %"class.std::__1::list.4"* %16, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds i8, i8* %45, i64 8
  %57 = bitcast i8* %56 to %"struct.std::__1::__list_node_base.6"**
  store %"struct.std::__1::__list_node_base.6"* %55, %"struct.std::__1::__list_node_base.6"** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::list.4", %"class.std::__1::list.4"* %16, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %58, align 8
  store %"struct.std::__1::__list_node_base.6"* %59, %"struct.std::__1::__list_node_base.6"** %46, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %59, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base.6"** %60 to i8**
  store i8* %45, i8** %61, align 8
  %62 = bitcast %"class.std::__1::list.4"* %16 to i8**
  store i8* %45, i8** %62, align 8
  %63 = load i64, i64* %17, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %17, align 8
  br label %65

65:                                               ; preds = %36, %32
  %66 = zext i32 %15 to i64
  %67 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %68 = load i64, i64* %9, align 8
  %69 = load i64, i64* %7, align 8
  %70 = icmp ugt i64 %69, %68
  br i1 %70, label %71, label %91

71:                                               ; preds = %65
  %72 = sub i64 %69, %68
  %73 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 3
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %68
  %76 = urem i64 %75, %69
  %77 = icmp ult i64 %72, %66
  %78 = select i1 %77, i64 %72, i64 %66
  %79 = sub i64 %69, %76
  %80 = icmp ult i64 %79, %78
  %81 = select i1 %80, i64 %79, i64 %78
  %82 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %76
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %1, i64 %81, i1 false) #10
  %85 = load i8*, i8** %82, align 8
  %86 = getelementptr inbounds i8, i8* %1, i64 %81
  %87 = sub nsw i64 %78, %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %87, i1 false) #10
  %88 = load i64, i64* %9, align 8
  %89 = add i64 %88, %78
  store i64 %89, i64* %9, align 8
  %90 = trunc i64 %78 to i32
  br label %91

91:                                               ; preds = %65, %71
  %92 = phi i32 [ %90, %71 ], [ 0, %65 ]
  %93 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp5CloseEb(%"class.cricket::PseudoTcp"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %4) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 468, i32 4, i32 0, i32 0) #10
  %5 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %5 to %"class.std::__1::basic_ostream"*
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp5CloseEb, i64 0, i64 0), i64 5) #10
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %10 = select i1 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)
  %11 = select i1 %1, i64 4, i64 5
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* %10, i64 %11) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %4) #10
  %14 = select i1 %1, i32 2, i32 1
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 2
  store i32 %14, i32* %15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7cricket9PseudoTcp8GetErrorEv(%"class.cricket::PseudoTcp"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer5WriteEPKvmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i8* nocapture readonly, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #10
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %33

12:                                               ; preds = %4
  %13 = sub i64 %10, %8
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %8
  %17 = urem i64 %16, %10
  %18 = icmp ult i64 %13, %2
  %19 = select i1 %18, i64 %13, i64 %2
  %20 = sub i64 %10, %17
  %21 = icmp ult i64 %20, %19
  %22 = select i1 %21, i64 %20, i64 %19
  %23 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %22, i1 false) #10
  %26 = load i8*, i8** %23, align 8
  %27 = getelementptr inbounds i8, i8* %1, i64 %22
  %28 = sub i64 %19, %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %28, i1 false) #10
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, %19
  store i64 %30, i64* %7, align 8
  %31 = icmp eq i64* %3, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %12
  store i64 %19, i64* %3, align 8
  br label %33

33:                                               ; preds = %4, %32, %12
  %34 = phi i1 [ true, %12 ], [ true, %32 ], [ false, %4 ]
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret i1 %34
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer10ReadOffsetEPvmmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i8* nocapture, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #10
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %3
  br i1 %10, label %11, label %32

11:                                               ; preds = %5
  %12 = sub i64 %9, %3
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %3
  %16 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = urem i64 %15, %17
  %19 = icmp ult i64 %12, %2
  %20 = select i1 %19, i64 %12, i64 %2
  %21 = sub i64 %17, %18
  %22 = icmp ult i64 %21, %20
  %23 = select i1 %22, i64 %21, i64 %20
  %24 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %26, i64 %23, i1 false) #10
  %27 = getelementptr inbounds i8, i8* %1, i64 %23
  %28 = load i8*, i8** %24, align 8
  %29 = sub i64 %20, %23
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false) #10
  %30 = icmp eq i64* %4, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %11
  store i64 %20, i64* %4, align 8
  br label %32

32:                                               ; preds = %5, %11, %31
  %33 = phi i1 [ false, %5 ], [ true, %11 ], [ true, %31 ]
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #10
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp7processERNS0_7SegmentE(%"class.cricket::PseudoTcp"*, %"struct.cricket::PseudoTcp::Segment"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %11 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %12 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %13 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %14 = alloca %"class.std::__1::__list_iterator", align 8
  %15 = alloca %"class.std::__1::__list_iterator", align 8
  %16 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %17 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 642, i32 1, i32 0, i32 0) #10
  %24 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp7processERNS0_7SegmentE, i64 0, i64 0), i64 7) #10
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i64 18) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #10
  br label %738

29:                                               ; preds = %2
  %30 = tail call i32 @_ZN3rtc6Time32Ev() #10
  %31 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 15
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 10
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 8
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %37, label %44

37:                                               ; preds = %29
  %38 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %38) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 652, i32 1, i32 0, i32 0) #10
  %39 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %39 to %"class.std::__1::basic_ostream"*
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp7processERNS0_7SegmentE, i64 0, i64 0), i64 7) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %38) #10
  br label %738

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 3
  %46 = load i8, i8* %45, align 4
  %47 = zext i8 %46 to i32
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %51) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %52 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %53 = bitcast %"class.std::__1::basic_ostringstream"* %52 to %"class.std::__1::basic_ostream"*
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %51) #10
  store i32 4, i32* %34, align 8
  %55 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %56 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %55, align 8
  %57 = icmp eq %"class.cricket::IPseudoTcpNotify"* %56, null
  br i1 %57, label %738, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.cricket::IPseudoTcpNotify"* %56 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %60 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %60, i64 3
  %62 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %61, align 8
  call void %62(%"class.cricket::IPseudoTcpNotify"* nonnull %56, %"class.cricket::PseudoTcp"* %0, i32 104) #10
  br label %738

63:                                               ; preds = %44
  %64 = and i32 %47, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %141, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %71) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 666, i32 1, i32 0, i32 0) #10
  %72 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %73 = bitcast %"class.std::__1::basic_ostringstream"* %72 to %"class.std::__1::basic_ostream"*
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp7processERNS0_7SegmentE, i64 0, i64 0), i64 7) #10
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %71) #10
  br label %738

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 5
  %79 = load i8*, i8** %78, align 8
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %131

82:                                               ; preds = %77
  %83 = getelementptr inbounds i8, i8* %79, i64 1
  %84 = add i32 %68, -1
  tail call void @_ZN7cricket9PseudoTcp12parseOptionsEPKcj(%"class.cricket::PseudoTcp"* %0, i8* %83, i32 %84)
  %85 = load i32, i32* %34, align 8
  switch i32 %85, label %141 [
    i32 0, label %86
    i32 1, label %91
  ]

86:                                               ; preds = %82
  store i32 2, i32* %34, align 8
  %87 = bitcast %"class.rtc::DiagnosticLogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %87) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %10, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 676, i32 3, i32 0, i32 0) #10
  %88 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %10, i64 0, i32 7
  %89 = bitcast %"class.std::__1::basic_ostringstream"* %88 to %"class.std::__1::basic_ostream"*
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %89, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 23) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %87) #10
  call void @_ZN7cricket9PseudoTcp19queueConnectMessageEv(%"class.cricket::PseudoTcp"* %0)
  br label %141

91:                                               ; preds = %82
  store i32 3, i32* %34, align 8
  %92 = bitcast %"class.rtc::DiagnosticLogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %92) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 681, i32 3, i32 0, i32 0) #10
  %93 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %11, i64 0, i32 7
  %94 = bitcast %"class.std::__1::basic_ostringstream"* %93 to %"class.std::__1::basic_ostream"*
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i64 22) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %92) #10
  %96 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 29
  %97 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 31
  br label %98

98:                                               ; preds = %104, %91
  %99 = phi i64 [ %100, %104 ], [ 0, %91 ]
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp eq i64 %100, 10
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = load i32, i32* %97, align 4
  br label %110

104:                                              ; preds = %98
  %105 = getelementptr inbounds [11 x i16], [11 x i16]* @_ZN7cricketL15PACKET_MAXIMUMSE, i64 0, i64 %99
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = load i32, i32* %97, align 4
  %109 = icmp ult i32 %108, %107
  br i1 %109, label %98, label %110

110:                                              ; preds = %104, %102
  %111 = phi i32 [ %103, %102 ], [ %108, %104 ]
  %112 = trunc i64 %99 to i32
  store i32 %112, i32* %96, align 4
  %113 = add i32 %111, -116
  %114 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %116 = shl i32 %113, 1
  %117 = load i32, i32* %115, align 4
  %118 = icmp ult i32 %117, %116
  %119 = select i1 %118, i32 %116, i32 %117
  store i32 %119, i32* %115, align 8
  %120 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %121 = load i32, i32* %120, align 4
  %122 = icmp ult i32 %121, %113
  %123 = select i1 %122, i32 %113, i32 %121
  store i32 %123, i32* %120, align 4
  %124 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %125 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %124, align 8
  %126 = icmp eq %"class.cricket::IPseudoTcpNotify"* %125, null
  br i1 %126, label %141, label %127

127:                                              ; preds = %110
  %128 = bitcast %"class.cricket::IPseudoTcpNotify"* %125 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)***
  %129 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*** %128, align 8
  %130 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %129, align 8
  call void %130(%"class.cricket::IPseudoTcpNotify"* nonnull %125, %"class.cricket::PseudoTcp"* %0) #10
  br label %141

131:                                              ; preds = %77
  %132 = bitcast %"class.rtc::DiagnosticLogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %132) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 689, i32 2, i32 0, i32 0) #10
  %133 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %12, i64 0, i32 7
  %134 = bitcast %"class.std::__1::basic_ostringstream"* %133 to %"class.std::__1::basic_ostream"*
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %134, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp7processERNS0_7SegmentE, i64 0, i64 0), i64 7) #10
  %136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %136, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i64 22) #10
  %138 = load i8*, i8** %78, align 8
  %139 = load i8, i8* %138, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 %139, i8* %5, align 1
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* nonnull %5, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %132) #10
  br label %738

141:                                              ; preds = %82, %110, %63, %86, %127
  %142 = phi i1 [ true, %86 ], [ true, %127 ], [ true, %110 ], [ false, %63 ], [ true, %82 ]
  %143 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 34
  %146 = load i32, i32* %145, align 8
  %147 = icmp ugt i32 %144, %146
  br i1 %147, label %157, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %144
  %152 = icmp ult i32 %146, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 7
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 33
  store i32 %155, i32* %156, align 4
  br label %157

157:                                              ; preds = %141, %153, %148
  %158 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 24
  %161 = load i32, i32* %160, align 8
  %162 = icmp ugt i32 %159, %161
  br i1 %162, label %163, label %342

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %165 = load i32, i32* %164, align 4
  %166 = icmp ugt i32 %159, %165
  br i1 %166, label %342, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 8
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %211, label %171

171:                                              ; preds = %167
  %172 = call i32 @_ZN3rtc10TimeDiff32Ejj(i32 %30, i32 %169) #10
  %173 = icmp sgt i32 %172, -1
  br i1 %173, label %174, label %206

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 36
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %174
  store i32 %172, i32* %175, align 8
  %179 = lshr i32 %172, 1
  %180 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 35
  store i32 %179, i32* %180, align 4
  br label %194

181:                                              ; preds = %174
  %182 = icmp ugt i32 %172, %176
  %183 = sub i32 %172, %176
  %184 = sub i32 %176, %172
  %185 = select i1 %182, i32 %183, i32 %184
  %186 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 35
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 %187, 3
  %189 = add i32 %188, %185
  %190 = lshr i32 %189, 2
  store i32 %190, i32* %186, align 4
  %191 = mul i32 %176, 7
  %192 = add i32 %191, %172
  %193 = lshr i32 %192, 3
  store i32 %193, i32* %175, align 8
  br label %194

194:                                              ; preds = %181, %178
  %195 = phi i32 [ %190, %181 ], [ %179, %178 ]
  %196 = phi i32 [ %193, %181 ], [ %172, %178 ]
  %197 = shl i32 %195, 2
  %198 = icmp eq i32 %197, 0
  %199 = select i1 %198, i32 1, i32 %197
  %200 = add i32 %199, %196
  %201 = icmp ult i32 %200, 60000
  %202 = select i1 %201, i32 %200, i32 60000
  %203 = icmp ugt i32 %202, 250
  %204 = select i1 %203, i32 %202, i32 250
  %205 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 37
  store i32 %204, i32* %205, align 4
  br label %211

206:                                              ; preds = %171
  %207 = bitcast %"class.rtc::DiagnosticLogMessage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %207) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %13, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 723, i32 2, i32 0, i32 0) #10
  %208 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %13, i64 0, i32 7
  %209 = bitcast %"class.std::__1::basic_ostringstream"* %208 to %"class.std::__1::basic_ostream"*
  %210 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i64 7) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %207) #10
  br label %211

211:                                              ; preds = %194, %206, %167
  %212 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 4
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  %216 = load i8, i8* %215, align 4
  %217 = zext i8 %216 to i32
  %218 = shl i32 %214, %217
  %219 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  store i32 %218, i32* %219, align 8
  %220 = load i32, i32* %158, align 8
  %221 = load i32, i32* %160, align 8
  %222 = sub i32 %220, %221
  store i32 %220, i32* %160, align 8
  %223 = load i32, i32* %164, align 4
  %224 = icmp eq i32 %220, %223
  %225 = select i1 %224, i32 0, i32 %30
  %226 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 32
  store i32 %225, i32* %226, align 8
  %227 = zext i32 %222 to i64
  %228 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %229 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %228) #10
  %230 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 3
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, %227
  %233 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = urem i64 %232, %234
  store i64 %235, i64* %230, align 8
  %236 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %237 = load i64, i64* %236, align 8
  %238 = sub i64 %237, %227
  store i64 %238, i64* %236, align 8
  %239 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %228) #10
  %240 = icmp eq i32 %222, 0
  br i1 %240, label %246, label %241

241:                                              ; preds = %211
  %242 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %243 = bitcast %"struct.std::__1::__list_node_base.6"** %242 to %"struct.std::__1::__list_node"**
  %244 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 30
  %245 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  br label %250

246:                                              ; preds = %263, %256, %211
  %247 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 40
  %248 = load i8, i8* %247, align 8
  %249 = icmp ugt i8 %248, 2
  br i1 %249, label %281, label %326

250:                                              ; preds = %241, %263
  %251 = phi i32 [ %222, %241 ], [ %265, %263 ]
  %252 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %243, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %252, i64 0, i32 1, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = icmp ugt i32 %254, %251
  br i1 %255, label %256, label %258

256:                                              ; preds = %250
  %257 = sub i32 %254, %251
  store i32 %257, i32* %253, align 4
  br label %246

258:                                              ; preds = %250
  %259 = load i32, i32* %244, align 8
  %260 = icmp ugt i32 %254, %259
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  store i32 %254, i32* %244, align 8
  %262 = load i32, i32* %253, align 4
  br label %263

263:                                              ; preds = %258, %261
  %264 = phi i32 [ %262, %261 ], [ %254, %258 ]
  %265 = sub i32 %251, %264
  %266 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %252, i64 0, i32 0, i32 1
  %267 = bitcast %"struct.std::__1::__list_node_base.6"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %252, i64 0, i32 0, i32 0
  %270 = load %"struct.std::__1::__list_node_base.6"*, %"struct.std::__1::__list_node_base.6"** %269, align 8
  %271 = getelementptr inbounds %"struct.std::__1::__list_node_base.6", %"struct.std::__1::__list_node_base.6"* %270, i64 0, i32 1
  %272 = bitcast %"struct.std::__1::__list_node_base.6"** %271 to i64*
  store i64 %268, i64* %272, align 8
  %273 = bitcast %"struct.std::__1::__list_node"* %252 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"struct.std::__1::__list_node_base.6"** %266 to i64**
  %276 = load i64*, i64** %275, align 8
  store i64 %274, i64* %276, align 8
  %277 = load i64, i64* %245, align 8
  %278 = add i64 %277, -1
  store i64 %278, i64* %245, align 8
  %279 = bitcast %"struct.std::__1::__list_node"* %252 to i8*
  call void @_ZdlPv(i8* %279) #11
  %280 = icmp eq i32 %265, 0
  br i1 %280, label %246, label %250

281:                                              ; preds = %246
  %282 = load i32, i32* %160, align 8
  %283 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 42
  %284 = load i32, i32* %283, align 4
  %285 = icmp ult i32 %282, %284
  br i1 %285, label %297, label %286

286:                                              ; preds = %281
  %287 = load i32, i32* %164, align 4
  %288 = sub i32 %287, %282
  %289 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %290 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %291 = load i32, i32* %290, align 8
  %292 = add i32 %288, %291
  %293 = load i32, i32* %289, align 4
  %294 = icmp ult i32 %292, %293
  %295 = select i1 %294, i32 %292, i32 %293
  %296 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  store i32 %295, i32* %296, align 4
  store i8 0, i8* %247, align 8
  br label %409

297:                                              ; preds = %281
  %298 = bitcast %"class.std::__1::__list_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #10
  %299 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %300 = bitcast %"struct.std::__1::__list_node_base.6"** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = bitcast %"class.std::__1::__list_iterator"* %14 to i64*
  store i64 %301, i64* %302, align 8
  %303 = call zeroext i1 @_ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj(%"class.cricket::PseudoTcp"* %0, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %14, i32 %30)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #10
  br i1 %303, label %317, label %304

304:                                              ; preds = %297
  %305 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %305) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %306 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %307 = bitcast %"class.std::__1::basic_ostringstream"* %306 to %"class.std::__1::basic_ostream"*
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %307, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %305) #10
  store i32 4, i32* %34, align 8
  %309 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %310 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %309, align 8
  %311 = icmp eq %"class.cricket::IPseudoTcpNotify"* %310, null
  br i1 %311, label %738, label %312

312:                                              ; preds = %304
  %313 = bitcast %"class.cricket::IPseudoTcpNotify"* %310 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %314 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %314, i64 3
  %316 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %315, align 8
  call void %316(%"class.cricket::IPseudoTcpNotify"* nonnull %310, %"class.cricket::PseudoTcp"* %0, i32 103) #10
  br label %738

317:                                              ; preds = %297
  %318 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %319 = load i32, i32* %318, align 8
  %320 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %321 = load i32, i32* %320, align 4
  %322 = icmp ult i32 %321, %222
  %323 = select i1 %322, i32 %321, i32 %222
  %324 = add i32 %321, %319
  %325 = sub i32 %324, %323
  store i32 %325, i32* %320, align 4
  br label %409

326:                                              ; preds = %246
  store i8 0, i8* %247, align 8
  %327 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %330 = load i32, i32* %329, align 8
  %331 = icmp ult i32 %328, %330
  %332 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %333 = load i32, i32* %332, align 8
  br i1 %331, label %334, label %336

334:                                              ; preds = %326
  %335 = add i32 %333, %328
  store i32 %335, i32* %327, align 4
  br label %409

336:                                              ; preds = %326
  %337 = mul i32 %333, %333
  %338 = udiv i32 %337, %328
  %339 = icmp ugt i32 %338, 1
  %340 = select i1 %339, i32 %338, i32 1
  %341 = add i32 %340, %328
  store i32 %341, i32* %327, align 4
  br label %409

342:                                              ; preds = %163, %157
  %343 = icmp eq i32 %159, %161
  br i1 %343, label %344, label %409

344:                                              ; preds = %342
  %345 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 4
  %346 = load i16, i16* %345, align 2
  %347 = zext i16 %346 to i32
  %348 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  %349 = load i8, i8* %348, align 4
  %350 = zext i8 %349 to i32
  %351 = shl i32 %347, %350
  %352 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 22
  store i32 %351, i32* %352, align 8
  %353 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %409

356:                                              ; preds = %344
  %357 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 21
  %358 = load i32, i32* %357, align 4
  %359 = icmp eq i32 %159, %358
  %360 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 40
  br i1 %359, label %408, label %361

361:                                              ; preds = %356
  %362 = load i8, i8* %360, align 8
  %363 = add i8 %362, 1
  store i8 %363, i8* %360, align 8
  %364 = icmp eq i8 %363, 3
  br i1 %364, label %365, label %400

365:                                              ; preds = %361
  %366 = bitcast %"class.std::__1::__list_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #10
  %367 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %368 = bitcast %"struct.std::__1::__list_node_base.6"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.std::__1::__list_iterator"* %15 to i64*
  store i64 %369, i64* %370, align 8
  %371 = call zeroext i1 @_ZN7cricket9PseudoTcp8transmitERKNSt3__115__list_iteratorINS0_8SSegmentEPvEEj(%"class.cricket::PseudoTcp"* %0, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %15, i32 %30)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #10
  br i1 %371, label %385, label %372

372:                                              ; preds = %365
  %373 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %373) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1141, i32 3, i32 0, i32 0) #10
  %374 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %375 = bitcast %"class.std::__1::basic_ostringstream"* %374 to %"class.std::__1::basic_ostream"*
  %376 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %375, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i64 17) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %373) #10
  store i32 4, i32* %34, align 8
  %377 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %378 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %377, align 8
  %379 = icmp eq %"class.cricket::IPseudoTcpNotify"* %378, null
  br i1 %379, label %738, label %380

380:                                              ; preds = %372
  %381 = bitcast %"class.cricket::IPseudoTcpNotify"* %378 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)***
  %382 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*** %381, align 8
  %383 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %382, i64 3
  %384 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*, i32)** %383, align 8
  call void %384(%"class.cricket::IPseudoTcpNotify"* nonnull %378, %"class.cricket::PseudoTcp"* %0, i32 103) #10
  br label %738

385:                                              ; preds = %365
  %386 = load i32, i32* %357, align 4
  %387 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 42
  store i32 %386, i32* %387, align 4
  %388 = load i32, i32* %160, align 8
  %389 = sub i32 %386, %388
  %390 = lshr i32 %389, 1
  %391 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %392 = load i32, i32* %391, align 8
  %393 = shl i32 %392, 1
  %394 = icmp ult i32 %390, %393
  %395 = select i1 %394, i32 %393, i32 %390
  %396 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  store i32 %395, i32* %396, align 8
  %397 = mul i32 %392, 3
  %398 = add i32 %395, %397
  %399 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  store i32 %398, i32* %399, align 4
  br label %409

400:                                              ; preds = %361
  %401 = icmp ugt i8 %363, 3
  br i1 %401, label %402, label %409

402:                                              ; preds = %400
  %403 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  %404 = load i32, i32* %403, align 8
  %405 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %406 = load i32, i32* %405, align 4
  %407 = add i32 %406, %404
  store i32 %407, i32* %405, align 4
  br label %409

408:                                              ; preds = %356
  store i8 0, i8* %360, align 8
  br label %409

409:                                              ; preds = %334, %336, %286, %317, %344, %342, %408, %400, %402, %385
  %410 = load i32, i32* %34, align 8
  %411 = icmp ne i32 %410, 2
  %412 = or i1 %142, %411
  br i1 %412, label %453, label %413

413:                                              ; preds = %409
  store i32 3, i32* %34, align 8
  %414 = bitcast %"class.rtc::DiagnosticLogMessage"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %414) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 813, i32 3, i32 0, i32 0) #10
  %415 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %16, i64 0, i32 7
  %416 = bitcast %"class.std::__1::basic_ostringstream"* %415 to %"class.std::__1::basic_ostream"*
  %417 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %416, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i64 22) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %414) #10
  %418 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 29
  %419 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 31
  br label %420

420:                                              ; preds = %426, %413
  %421 = phi i64 [ %422, %426 ], [ 0, %413 ]
  %422 = add nuw nsw i64 %421, 1
  %423 = icmp eq i64 %422, 10
  br i1 %423, label %424, label %426

424:                                              ; preds = %420
  %425 = load i32, i32* %419, align 4
  br label %432

426:                                              ; preds = %420
  %427 = getelementptr inbounds [11 x i16], [11 x i16]* @_ZN7cricketL15PACKET_MAXIMUMSE, i64 0, i64 %421
  %428 = load i16, i16* %427, align 2
  %429 = zext i16 %428 to i32
  %430 = load i32, i32* %419, align 4
  %431 = icmp ult i32 %430, %429
  br i1 %431, label %420, label %432

432:                                              ; preds = %426, %424
  %433 = phi i32 [ %425, %424 ], [ %430, %426 ]
  %434 = trunc i64 %421 to i32
  store i32 %434, i32* %418, align 4
  %435 = add i32 %433, -116
  %436 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 28
  store i32 %435, i32* %436, align 8
  %437 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 38
  %438 = shl i32 %435, 1
  %439 = load i32, i32* %437, align 4
  %440 = icmp ult i32 %439, %438
  %441 = select i1 %440, i32 %438, i32 %439
  store i32 %441, i32* %437, align 8
  %442 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 39
  %443 = load i32, i32* %442, align 4
  %444 = icmp ult i32 %443, %435
  %445 = select i1 %444, i32 %435, i32 %443
  store i32 %445, i32* %442, align 4
  %446 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %447 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %446, align 8
  %448 = icmp eq %"class.cricket::IPseudoTcpNotify"* %447, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %432
  %450 = bitcast %"class.cricket::IPseudoTcpNotify"* %447 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)***
  %451 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*** %450, align 8
  %452 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %451, align 8
  call void %452(%"class.cricket::IPseudoTcpNotify"* nonnull %447, %"class.cricket::PseudoTcp"* %0) #10
  br label %453

453:                                              ; preds = %409, %432, %449
  %454 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 7
  %455 = load i8, i8* %454, align 1, !range !2
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %480, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 20
  %459 = load i32, i32* %458, align 8
  %460 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 12
  %461 = load i32, i32* %460, align 8
  %462 = add i32 %461, %459
  %463 = lshr i32 %462, 1
  %464 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 4, i32 0, i32 0
  %465 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %464) #10
  %466 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 27, i32 2
  %467 = load i64, i64* %466, align 8
  %468 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %464) #10
  %469 = trunc i64 %467 to i32
  %470 = icmp ugt i32 %463, %469
  br i1 %470, label %471, label %480

471:                                              ; preds = %457
  store i8 0, i8* %454, align 1
  %472 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %473 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %472, align 8
  %474 = icmp eq %"class.cricket::IPseudoTcpNotify"* %473, null
  br i1 %474, label %480, label %475

475:                                              ; preds = %471
  %476 = bitcast %"class.cricket::IPseudoTcpNotify"* %473 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)***
  %477 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %477, i64 2
  %479 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %478, align 8
  call void %479(%"class.cricket::IPseudoTcpNotify"* nonnull %473, %"class.cricket::PseudoTcp"* %0) #10
  br label %480

480:                                              ; preds = %471, %453, %475, %457
  %481 = load i32, i32* %143, align 4
  %482 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 13
  %483 = load i32, i32* %482, align 4
  %484 = icmp eq i32 %483, %481
  br i1 %484, label %485, label %494

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %487 = load i32, i32* %486, align 8
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %494, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 46
  %491 = load i32, i32* %490, align 8
  %492 = icmp eq i32 %491, 0
  %493 = select i1 %492, i32 2, i32 1
  br label %494

494:                                              ; preds = %489, %480, %485
  %495 = phi i32 [ 0, %485 ], [ 2, %480 ], [ %493, %489 ]
  %496 = icmp ugt i32 %483, %481
  br i1 %496, label %497, label %510

497:                                              ; preds = %494
  %498 = sub i32 %483, %481
  %499 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %500 = load i32, i32* %499, align 8
  %501 = icmp ugt i32 %500, %498
  br i1 %501, label %502, label %508

502:                                              ; preds = %497
  store i32 %483, i32* %143, align 4
  %503 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 5
  %504 = load i8*, i8** %503, align 8
  %505 = zext i32 %498 to i64
  %506 = getelementptr inbounds i8, i8* %504, i64 %505
  store i8* %506, i8** %503, align 8
  %507 = sub i32 %500, %498
  br label %508

508:                                              ; preds = %497, %502
  %509 = phi i32 [ %507, %502 ], [ 0, %497 ]
  store i32 %509, i32* %499, align 8
  br label %510

510:                                              ; preds = %508, %494
  %511 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %512 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %513 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  %514 = load i64, i64* %513, align 8
  %515 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 2
  %516 = load i64, i64* %515, align 8
  %517 = sub i64 %514, %516
  %518 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %519 = load i32, i32* %143, align 4
  %520 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 6
  %521 = load i32, i32* %520, align 8
  %522 = add i32 %521, %519
  %523 = load i32, i32* %482, align 4
  %524 = sub i32 %522, %523
  %525 = trunc i64 %517 to i32
  %526 = icmp ugt i32 %524, %525
  br i1 %526, label %527, label %530

527:                                              ; preds = %510
  %528 = sub i32 %524, %525
  %529 = call i32 @llvm.usub.sat.i32(i32 %521, i32 %528)
  store i32 %529, i32* %520, align 8
  br label %530

530:                                              ; preds = %527, %510
  %531 = phi i32 [ %529, %527 ], [ %521, %510 ]
  %532 = load i8, i8* %45, align 4
  %533 = and i8 %532, 2
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %535, label %539

535:                                              ; preds = %530
  %536 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 2
  %537 = load i32, i32* %536, align 8
  %538 = icmp ne i32 %537, 0
  br label %539

539:                                              ; preds = %530, %535
  %540 = phi i1 [ true, %530 ], [ %538, %535 ]
  %541 = icmp eq i32 %531, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 %495)
  br label %738

543:                                              ; preds = %539
  %544 = load i32, i32* %482, align 4
  br i1 %540, label %545, label %571

545:                                              ; preds = %543
  %546 = icmp eq i32 %519, %544
  br i1 %546, label %547, label %719

547:                                              ; preds = %545
  %548 = add i32 %519, %531
  store i32 %548, i32* %482, align 4
  %549 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %550 = load i64, i64* %515, align 8
  %551 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %552 = icmp eq i64 %550, 0
  br i1 %552, label %553, label %719

553:                                              ; preds = %547
  %554 = load i32, i32* %520, align 8
  %555 = zext i32 %554 to i64
  %556 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %557 = load i64, i64* %515, align 8
  %558 = add i64 %557, %555
  store i64 %558, i64* %515, align 8
  %559 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %560 = load i32, i32* %520, align 8
  %561 = zext i32 %560 to i64
  %562 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %563 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 3
  %564 = load i64, i64* %563, align 8
  %565 = add i64 %564, %561
  %566 = load i64, i64* %513, align 8
  %567 = urem i64 %565, %566
  store i64 %567, i64* %563, align 8
  %568 = load i64, i64* %515, align 8
  %569 = sub i64 %568, %561
  store i64 %569, i64* %515, align 8
  %570 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  br label %661

571:                                              ; preds = %543
  %572 = sub i32 %519, %544
  %573 = getelementptr inbounds %"struct.cricket::PseudoTcp::Segment", %"struct.cricket::PseudoTcp::Segment"* %1, i64 0, i32 5
  %574 = load i8*, i8** %573, align 8
  %575 = zext i32 %531 to i64
  %576 = zext i32 %572 to i64
  %577 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %578 = load i64, i64* %515, align 8
  %579 = add i64 %578, %576
  %580 = load i64, i64* %513, align 8
  %581 = icmp ult i64 %579, %580
  br i1 %581, label %582, label %717

582:                                              ; preds = %571
  %583 = sub i64 %580, %578
  %584 = sub i64 %583, %576
  %585 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 3
  %586 = load i64, i64* %585, align 8
  %587 = add i64 %586, %579
  %588 = urem i64 %587, %580
  %589 = icmp ult i64 %584, %575
  %590 = select i1 %589, i64 %584, i64 %575
  %591 = sub i64 %580, %588
  %592 = icmp ult i64 %591, %590
  %593 = select i1 %592, i64 %591, i64 %590
  %594 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %595 = load i8*, i8** %594, align 8
  %596 = getelementptr inbounds i8, i8* %595, i64 %588
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %596, i8* align 1 %574, i64 %593, i1 false) #10
  %597 = load i8*, i8** %594, align 8
  %598 = getelementptr inbounds i8, i8* %574, i64 %593
  %599 = sub nsw i64 %590, %593
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %597, i8* align 1 %598, i64 %599, i1 false) #10
  %600 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %601 = load i32, i32* %143, align 4
  %602 = load i32, i32* %482, align 4
  %603 = icmp eq i32 %601, %602
  %604 = load i32, i32* %520, align 8
  br i1 %603, label %605, label %618

605:                                              ; preds = %582
  %606 = zext i32 %604 to i64
  %607 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %608 = load i64, i64* %515, align 8
  %609 = add i64 %608, %606
  store i64 %609, i64* %515, align 8
  %610 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %611 = load i32, i32* %520, align 8
  %612 = load i32, i32* %482, align 4
  %613 = add i32 %612, %611
  store i32 %613, i32* %482, align 4
  %614 = load i32, i32* %520, align 8
  %615 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %616 = load i32, i32* %615, align 8
  %617 = sub i32 %616, %614
  store i32 %617, i32* %615, align 8
  br label %661

618:                                              ; preds = %582
  %619 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %620 = bitcast %"struct.std::__1::__list_node_base"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0
  %623 = inttoptr i64 %621 to %"struct.std::__1::__list_node_base"*
  %624 = icmp eq %"struct.std::__1::__list_node_base"* %622, %623
  br i1 %624, label %638, label %625

625:                                              ; preds = %618, %632
  %626 = phi %"struct.std::__1::__list_node_base"* [ %636, %632 ], [ %623, %618 ]
  %627 = phi i64 [ %635, %632 ], [ %621, %618 ]
  %628 = inttoptr i64 %627 to %"struct.std::__1::__list_node.31"*
  %629 = getelementptr inbounds %"struct.std::__1::__list_node.31", %"struct.std::__1::__list_node.31"* %628, i64 0, i32 1, i32 0
  %630 = load i32, i32* %629, align 4
  %631 = icmp ult i32 %630, %601
  br i1 %631, label %632, label %638

632:                                              ; preds = %625
  %633 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %626, i64 0, i32 1
  %634 = bitcast %"struct.std::__1::__list_node_base"** %633 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = inttoptr i64 %635 to %"struct.std::__1::__list_node_base"*
  %637 = icmp eq %"struct.std::__1::__list_node_base"* %622, %636
  br i1 %637, label %638, label %625

638:                                              ; preds = %625, %632, %618
  %639 = phi i64 [ %621, %618 ], [ %627, %625 ], [ %635, %632 ]
  %640 = phi %"struct.std::__1::__list_node_base"* [ %622, %618 ], [ %626, %625 ], [ %622, %632 ]
  %641 = call i8* @_Znwm(i64 24) #11, !noalias !12
  %642 = getelementptr inbounds i8, i8* %641, i64 16
  %643 = bitcast i8* %642 to i64*
  %644 = zext i32 %604 to i64
  %645 = shl nuw i64 %644, 32
  %646 = zext i32 %601 to i64
  %647 = or i64 %645, %646
  store i64 %647, i64* %643, align 4
  %648 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %640, i64 0, i32 0
  %649 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %648, align 8
  %650 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %649, i64 0, i32 1
  %651 = bitcast %"struct.std::__1::__list_node_base"** %650 to i8**
  store i8* %641, i8** %651, align 8
  %652 = inttoptr i64 %639 to i64*
  %653 = load i64, i64* %652, align 8
  %654 = bitcast i8* %641 to i64*
  store i64 %653, i64* %654, align 8
  %655 = inttoptr i64 %639 to i8**
  store i8* %641, i8** %655, align 8
  %656 = getelementptr inbounds i8, i8* %641, i64 8
  %657 = bitcast i8* %656 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %640, %"struct.std::__1::__list_node_base"** %657, align 8
  %658 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %659 = load i64, i64* %658, align 8
  %660 = add i64 %659, 1
  store i64 %660, i64* %658, align 8
  br label %719

661:                                              ; preds = %605, %553
  %662 = phi i8 [ 0, %553 ], [ 1, %605 ]
  %663 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %664 = bitcast %"struct.std::__1::__list_node_base"** %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 0
  %667 = inttoptr i64 %665 to %"struct.std::__1::__list_node_base"*
  %668 = icmp eq %"struct.std::__1::__list_node_base"* %666, %667
  br i1 %668, label %720, label %669

669:                                              ; preds = %661
  %670 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 14
  %671 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  br label %672

672:                                              ; preds = %669, %698
  %673 = phi %"struct.std::__1::__list_node_base"* [ %667, %669 ], [ %715, %698 ]
  %674 = phi i8 [ %662, %669 ], [ %700, %698 ]
  %675 = phi i32 [ %495, %669 ], [ %699, %698 ]
  %676 = phi i64 [ %665, %669 ], [ %703, %698 ]
  %677 = inttoptr i64 %676 to %"struct.std::__1::__list_node.31"*
  %678 = getelementptr inbounds %"struct.std::__1::__list_node.31", %"struct.std::__1::__list_node.31"* %677, i64 0, i32 1, i32 0
  %679 = load i32, i32* %678, align 4
  %680 = load i32, i32* %482, align 4
  %681 = icmp ugt i32 %679, %680
  br i1 %681, label %720, label %682

682:                                              ; preds = %672
  %683 = getelementptr inbounds %"struct.std::__1::__list_node.31", %"struct.std::__1::__list_node.31"* %677, i64 0, i32 1, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = add i32 %684, %679
  %686 = icmp ugt i32 %685, %680
  br i1 %686, label %687, label %698

687:                                              ; preds = %682
  %688 = sub i32 %685, %680
  %689 = zext i32 %688 to i64
  %690 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %511) #10
  %691 = load i64, i64* %515, align 8
  %692 = add i64 %691, %689
  store i64 %692, i64* %515, align 8
  %693 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  %694 = load i32, i32* %482, align 4
  %695 = add i32 %694, %688
  store i32 %695, i32* %482, align 4
  %696 = load i32, i32* %670, align 8
  %697 = sub i32 %696, %688
  store i32 %697, i32* %670, align 8
  br label %698

698:                                              ; preds = %687, %682
  %699 = phi i32 [ 2, %687 ], [ %675, %682 ]
  %700 = phi i8 [ 1, %687 ], [ %674, %682 ]
  %701 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %673, i64 0, i32 1
  %702 = bitcast %"struct.std::__1::__list_node_base"** %701 to i64*
  %703 = load i64, i64* %702, align 8
  %704 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %673, i64 0, i32 0
  %705 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %704, align 8
  %706 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %705, i64 0, i32 1
  %707 = bitcast %"struct.std::__1::__list_node_base"** %706 to i64*
  store i64 %703, i64* %707, align 8
  %708 = inttoptr i64 %676 to i64*
  %709 = load i64, i64* %708, align 8
  %710 = bitcast %"struct.std::__1::__list_node_base"** %701 to i64**
  %711 = load i64*, i64** %710, align 8
  store i64 %709, i64* %711, align 8
  %712 = load i64, i64* %671, align 8
  %713 = add i64 %712, -1
  store i64 %713, i64* %671, align 8
  %714 = inttoptr i64 %676 to i8*
  call void @_ZdlPv(i8* %714) #11
  %715 = inttoptr i64 %703 to %"struct.std::__1::__list_node_base"*
  %716 = icmp eq %"struct.std::__1::__list_node_base"* %666, %715
  br i1 %716, label %720, label %672

717:                                              ; preds = %571
  %718 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %511) #10
  br label %738

719:                                              ; preds = %638, %547, %545
  call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 %495)
  br label %738

720:                                              ; preds = %672, %698, %661
  %721 = phi i32 [ %495, %661 ], [ %699, %698 ], [ %675, %672 ]
  %722 = phi i8 [ %662, %661 ], [ %700, %698 ], [ %674, %672 ]
  call void @_ZN7cricket9PseudoTcp11attemptSendENS0_9SendFlagsE(%"class.cricket::PseudoTcp"* %0, i32 %721)
  %723 = and i8 %722, 1
  %724 = icmp eq i8 %723, 0
  br i1 %724, label %738, label %725

725:                                              ; preds = %720
  %726 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 6
  %727 = load i8, i8* %726, align 8, !range !2
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %738, label %729

729:                                              ; preds = %725
  store i8 0, i8* %726, align 8
  %730 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 1
  %731 = load %"class.cricket::IPseudoTcpNotify"*, %"class.cricket::IPseudoTcpNotify"** %730, align 8
  %732 = icmp eq %"class.cricket::IPseudoTcpNotify"* %731, null
  br i1 %732, label %738, label %733

733:                                              ; preds = %729
  %734 = bitcast %"class.cricket::IPseudoTcpNotify"* %731 to void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)***
  %735 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)**, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*** %734, align 8
  %736 = getelementptr inbounds void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %735, i64 1
  %737 = load void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)*, void (%"class.cricket::IPseudoTcpNotify"*, %"class.cricket::PseudoTcp"*)** %736, align 8
  call void %737(%"class.cricket::IPseudoTcpNotify"* nonnull %731, %"class.cricket::PseudoTcp"* %0) #10
  br label %738

738:                                              ; preds = %729, %725, %720, %733, %717, %542, %719, %380, %372, %312, %304, %58, %50, %37, %131, %70, %22
  %739 = phi i1 [ false, %22 ], [ false, %37 ], [ false, %70 ], [ false, %131 ], [ false, %50 ], [ false, %58 ], [ false, %304 ], [ false, %312 ], [ false, %372 ], [ false, %380 ], [ false, %717 ], [ true, %729 ], [ true, %725 ], [ true, %720 ], [ true, %733 ], [ true, %542 ], [ true, %719 ]
  ret i1 %739
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp12parseOptionsEPKcj(%"class.cricket::PseudoTcp"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::set", align 8
  %5 = alloca %"class.rtc::ByteBufferReader", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = bitcast %"class.std::__1::set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %11, align 8
  %16 = bitcast %"class.rtc::ByteBufferReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %5, i64 0, i32 2
  %19 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %5, i64 0, i32 3
  %20 = zext i32 %2 to i64
  %21 = bitcast %"class.rtc::ByteBufferReader"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  call void @_ZN3rtc16ByteBufferReaderC1EPKcm(%"class.rtc::ByteBufferReader"* nonnull %5, i8* %1, i64 %20) #10
  %22 = load i64, i64* %19, align 8
  %23 = load i64, i64* %18, align 8
  %24 = icmp eq i64 %22, %23
  %25 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  br i1 %24, label %113, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  %28 = bitcast %"class.std::__1::set"* %4 to i64*
  %29 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  %30 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  br label %32

32:                                               ; preds = %26, %109
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  store i8 0, i8* %6, align 1
  %33 = call zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"* nonnull %5, i8* nonnull %6) #10
  %34 = load i8, i8* %6, align 1
  switch i8 %34, label %36 [
    i8 0, label %35
    i8 1, label %109
  ]

35:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %113

36:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 0, i8* %7, align 1
  %37 = call zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"* nonnull %5, i8* nonnull %7) #10
  %38 = load i8, i8* %7, align 1
  %39 = zext i8 %38 to i64
  %40 = load i64, i64* %19, align 8
  %41 = load i64, i64* %18, align 8
  %42 = sub i64 %40, %41
  %43 = icmp ult i64 %42, %39
  br i1 %43, label %147, label %44

44:                                               ; preds = %36
  %45 = load i8, i8* %6, align 1
  %46 = load i8*, i8** %17, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %41
  %48 = zext i8 %38 to i32
  call void @_ZN7cricket9PseudoTcp11applyOptionEcPKcj(%"class.cricket::PseudoTcp"* %0, i8 signext %45, i8* %47, i32 %48)
  %49 = load i8, i8* %7, align 1
  %50 = zext i8 %49 to i64
  %51 = call zeroext i1 @_ZN3rtc16ByteBufferReader7ConsumeEm(%"class.rtc::ByteBufferReader"* nonnull %5, i64 %50) #10
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %44
  %55 = load i8, i8* %6, align 1
  br label %56

56:                                               ; preds = %78, %54
  %57 = phi %"class.std::__1::__tree_node"* [ %81, %78 ], [ %52, %54 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %80, %78 ], [ %12, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp ult i8 %55, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

68:                                               ; preds = %56
  %69 = icmp ult i8 %60, %55
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

78:                                               ; preds = %70, %62
  %79 = phi %"class.std::__1::__tree_node_base"* [ %64, %62 ], [ %72, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %63, %62 ], [ %71, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"* %79 to %"class.std::__1::__tree_node"*
  br label %56

82:                                               ; preds = %44, %76, %74, %66
  %83 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %75, %74 ], [ %77, %76 ], [ %14, %44 ]
  %84 = phi %"class.std::__1::__tree_node_base"** [ %63, %66 ], [ %71, %74 ], [ %58, %76 ], [ %27, %44 ]
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node"* %86, null
  br i1 %87, label %88, label %108

88:                                               ; preds = %82
  %89 = call i8* @_Znwm(i64 32) #11, !noalias !15
  %90 = getelementptr inbounds i8, i8* %89, i64 25
  %91 = load i8, i8* %6, align 1, !noalias !15
  store i8 %91, i8* %90, align 1, !noalias !15
  %92 = bitcast i8* %89 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds i8, i8* %89, i64 16
  %94 = bitcast i8* %93 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %94, align 8
  %95 = bitcast %"class.std::__1::__tree_node_base"** %84 to i8**
  store i8* %89, i8** %95, align 8
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %88
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  store i64 %101, i64* %28, align 8
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  br label %103

103:                                              ; preds = %100, %88
  %104 = phi %"class.std::__1::__tree_node_base"* [ %92, %88 ], [ %102, %100 ]
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %105, %"class.std::__1::__tree_node_base"* %104) #10
  %106 = load i64, i64* %13, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %13, align 8
  br label %108

108:                                              ; preds = %82, %103
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %109

109:                                              ; preds = %32, %108
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %110 = load i64, i64* %19, align 8
  %111 = load i64, i64* %18, align 8
  %112 = icmp eq i64 %110, %111
  br i1 %112, label %113, label %32

113:                                              ; preds = %109, %3, %35
  %114 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %115 = icmp eq %"class.std::__1::__tree_node"* %114, null
  br i1 %115, label %137, label %116

116:                                              ; preds = %113, %116
  %117 = phi %"class.std::__1::__tree_end_node"* [ %127, %116 ], [ %14, %113 ]
  %118 = phi %"class.std::__1::__tree_node"* [ %128, %116 ], [ %114, %113 ]
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 1
  %120 = load i8, i8* %119, align 1
  %121 = icmp ult i8 %120, 3
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 1
  %123 = bitcast %"class.std::__1::__tree_node_base"** %122 to %"class.std::__1::__tree_node"**
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::__tree_node"* %118 to %"class.std::__1::__tree_node"**
  %126 = select i1 %121, %"class.std::__1::__tree_node"** %123, %"class.std::__1::__tree_node"** %125
  %127 = select i1 %121, %"class.std::__1::__tree_end_node"* %117, %"class.std::__1::__tree_end_node"* %124
  %128 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %126, align 8
  %129 = icmp eq %"class.std::__1::__tree_node"* %128, null
  br i1 %129, label %130, label %116

130:                                              ; preds = %116
  %131 = icmp eq %"class.std::__1::__tree_end_node"* %127, %14
  br i1 %131, label %137, label %132

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::__tree_end_node"* %127 to %"class.std::__1::__tree_node"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = icmp ugt i8 %135, 3
  br i1 %136, label %137, label %149

137:                                              ; preds = %132, %130, %113
  %138 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %138) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1224, i32 2, i32 0, i32 0) #10
  %139 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %140 = bitcast %"class.std::__1::basic_ostringstream"* %139 to %"class.std::__1::basic_ostream"*
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %140, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0), i64 35) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %138) #10
  %142 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 16
  %143 = load i8, i8* %142, align 8
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %137
  call void @_ZN7cricket9PseudoTcp19resizeReceiveBufferEj(%"class.cricket::PseudoTcp"* %0, i32 61440)
  %146 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  store i8 0, i8* %146, align 4
  br label %149

147:                                              ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %29) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1217, i32 1, i32 0, i32 0) #10
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i64 31) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %149

149:                                              ; preds = %147, %132, %145, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  %150 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* nonnull %150, %"class.std::__1::__tree_node"* %151) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp16LockedFifoBuffer15ConsumeReadDataEm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #10
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = urem i64 %7, %9
  store i64 %10, i64* %5, align 8
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %1
  store i64 %13, i64* %11, align 8
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp16LockedFifoBuffer18ConsumeWriteBufferEm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #10
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer11WriteOffsetEPKvmmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i8* nocapture readonly, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #10
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %3
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %34

14:                                               ; preds = %5
  %15 = sub i64 %12, %9
  %16 = sub i64 %15, %3
  %17 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %10
  %20 = urem i64 %19, %12
  %21 = icmp ult i64 %16, %2
  %22 = select i1 %21, i64 %16, i64 %2
  %23 = sub i64 %12, %20
  %24 = icmp ult i64 %23, %22
  %25 = select i1 %24, i64 %23, i64 %22
  %26 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %1, i64 %25, i1 false) #10
  %29 = load i8*, i8** %26, align 8
  %30 = getelementptr inbounds i8, i8* %1, i64 %25
  %31 = sub i64 %22, %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %31, i1 false) #10
  %32 = icmp eq i64* %4, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %14
  store i64 %22, i64* %4, align 8
  br label %34

34:                                               ; preds = %5, %14, %33
  %35 = phi i1 [ false, %5 ], [ true, %14 ], [ true, %33 ]
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #10
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket9PseudoTcp19isReceiveBufferFullEv(%"class.cricket::PseudoTcp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 4, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #10
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 18, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #10
  %9 = icmp eq i64 %5, %7
  ret i1 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7cricket9PseudoTcp18disableWindowScaleEv(%"class.cricket::PseudoTcp"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 47
  store i8 0, i8* %2, align 4
  ret void
}

declare void @_ZN3rtc16ByteBufferWriterC1Ev(%"class.rtc::ByteBufferWriter"*) unnamed_addr #1

declare void @_ZN3rtc16ByteBufferReaderC1EPKcm(%"class.rtc::ByteBufferReader"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp11applyOptionEcPKcj(%"class.cricket::PseudoTcp"* nocapture, i8 signext, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  switch i8 %1, label %24 [
    i8 2, label %7
    i8 3, label %12
  ]

7:                                                ; preds = %4
  %8 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1237, i32 2, i32 0, i32 0) #10
  %9 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i64 0, i64 0), i64 49) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #10
  br label %24

12:                                               ; preds = %4
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %15) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 1243, i32 2, i32 0, i32 0) #10
  %16 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__._ZN7cricket9PseudoTcp11applyOptionEcPKcj, i64 0, i64 0), i64 11) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0), i64 37) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %15) #10
  br label %24

21:                                               ; preds = %12
  %22 = load i8, i8* %2, align 1
  %23 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  store i8 %22, i8* %23, align 4
  br label %24

24:                                               ; preds = %4, %21, %14, %7
  ret void
}

declare zeroext i1 @_ZN3rtc16ByteBufferReader7ConsumeEm(%"class.rtc::ByteBufferReader"*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7cricket9PseudoTcp22applyWindowScaleOptionEh(%"class.cricket::PseudoTcp"* nocapture, i8 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp", %"class.cricket::PseudoTcp"* %0, i64 0, i32 25
  store i8 %1, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer11SetCapacityEm(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #10
  %5 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %8
  %13 = tail call i8* @_Znam(i64 %1) #11
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %10, %15
  %17 = icmp ult i64 %16, %6
  %18 = select i1 %17, i64 %16, i64 %6
  %19 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %21, i64 %18, i1 false)
  %22 = getelementptr inbounds i8, i8* %13, i64 %18
  %23 = sub i64 %6, %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %20, i64 %23, i1 false)
  store i8* %13, i8** %19, align 8
  %24 = icmp eq i8* %20, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %12
  tail call void @_ZdaPv(i8* nonnull %20) #11
  br label %26

26:                                               ; preds = %12, %25
  store i64 0, i64* %14, align 8
  store i64 %1, i64* %9, align 8
  br label %27

27:                                               ; preds = %26, %8, %2
  %28 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %26 ]
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp16LockedFifoBufferC2Em(%"class.cricket::PseudoTcp::LockedFifoBuffer"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = tail call i8* @_Znam(i64 %1) #11
  %5 = ptrtoint i8* %4 to i64
  %6 = bitcast %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %9 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  %10 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  %11 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %11, align 4
  %12 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #10
  %13 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %13, %union.pthread_mutexattr_t* nonnull %3) #10
  %15 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket9PseudoTcp16LockedFifoBufferD2Ev(%"class.cricket::PseudoTcp::LockedFifoBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %2) #10
  %4 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  store i8* null, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %5) #11
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer16ReadOffsetLockedEPvmmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"* nocapture readonly, i8* nocapture, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %3
  br i1 %8, label %9, label %30

9:                                                ; preds = %5
  %10 = sub i64 %7, %3
  %11 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %3
  %14 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = urem i64 %13, %15
  %17 = icmp ult i64 %10, %2
  %18 = select i1 %17, i64 %10, i64 %2
  %19 = sub i64 %15, %16
  %20 = icmp ult i64 %19, %18
  %21 = select i1 %20, i64 %19, i64 %18
  %22 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %24, i64 %21, i1 false)
  %25 = getelementptr inbounds i8, i8* %1, i64 %21
  %26 = load i8*, i8** %22, align 8
  %27 = sub i64 %18, %21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false)
  %28 = icmp eq i64* %4, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %9
  store i64 %18, i64* %4, align 8
  br label %30

30:                                               ; preds = %29, %9, %5
  %31 = phi i1 [ false, %5 ], [ true, %9 ], [ true, %29 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket9PseudoTcp16LockedFifoBuffer17WriteOffsetLockedEPKvmmPm(%"class.cricket::PseudoTcp::LockedFifoBuffer"* nocapture readonly, i8* nocapture readonly, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %3
  %9 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %32

12:                                               ; preds = %5
  %13 = sub i64 %10, %7
  %14 = sub i64 %13, %3
  %15 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %8, %16
  %18 = urem i64 %17, %10
  %19 = icmp ult i64 %14, %2
  %20 = select i1 %19, i64 %14, i64 %2
  %21 = sub i64 %10, %18
  %22 = icmp ult i64 %21, %20
  %23 = select i1 %22, i64 %21, i64 %20
  %24 = getelementptr inbounds %"class.cricket::PseudoTcp::LockedFifoBuffer", %"class.cricket::PseudoTcp::LockedFifoBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %1, i64 %23, i1 false)
  %27 = load i8*, i8** %24, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 %23
  %29 = sub i64 %20, %23
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false)
  %30 = icmp eq i64* %4, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %12
  store i64 %20, i64* %4, align 8
  br label %32

32:                                               ; preds = %31, %12, %5
  %33 = phi i1 [ false, %5 ], [ true, %12 ], [ true, %31 ]
  ret i1 %33
}

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__14listIN7cricket9PseudoTcp8SSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__14listIN7cricket9PseudoTcp8RSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14listIN7cricket9PseudoTcp8RSegmentENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJRKhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJRKhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
