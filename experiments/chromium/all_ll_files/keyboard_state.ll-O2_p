; ModuleID = '../../ui/gfx/x/keyboard_state.cc'
source_filename = "../../ui/gfx/x/keyboard_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::KeyboardState" = type { i32 (...)** }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.181", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.194", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.187" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.184" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.187" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.188", i64, i32, [4 x i8] }>
%"class.base::LinkedList.188" = type { %"class.base::LinkNode.189" }
%"class.base::LinkNode.189" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.205", %"class.std::__1::vector.212" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.207" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.214" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::KeyboardState"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.x11::XkbKeyboardState" = type { %"class.x11::KeyboardState", %"class.x11::Connection"*, %"struct.x11::Xkb::GetMapReply" }
%"struct.x11::Xkb::GetMapReply" = type { i8, i16, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.absl::optional.260", %"class.absl::optional.286", %"class.absl::optional.306", %"class.absl::optional.318", %"class.absl::optional.331", %"class.absl::optional.343", %"class.absl::optional.355", %"class.absl::optional.367", %"class.absl::optional.379" }
%"class.absl::optional.260" = type { %"class.absl::optional_internal::optional_data.261" }
%"class.absl::optional_internal::optional_data.261" = type { %"class.absl::optional_internal::optional_data_base.262" }
%"class.absl::optional_internal::optional_data_base.262" = type { %"class.absl::optional_internal::optional_data_dtor_base.263" }
%"class.absl::optional_internal::optional_data_dtor_base.263" = type { i8, %union.anon.264 }
%union.anon.264 = type { %"class.std::__1::vector.265" }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"*, %"class.std::__1::__compressed_pair.281" }
%"struct.x11::Xkb::KeyType" = type { i32, i32, i32, i8, i8, %"class.std::__1::vector.267", %"class.std::__1::vector.274" }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"*, %"class.std::__1::__compressed_pair.269" }
%"struct.x11::Xkb::KTMapEntry" = type { i8, i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.x11::Xkb::KTMapEntry"* }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"*, %"class.std::__1::__compressed_pair.276" }
%"struct.x11::Xkb::ModDef" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.x11::Xkb::ModDef"* }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.x11::Xkb::KeyType"* }
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { %"class.std::__1::vector.291" }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"*, %"class.std::__1::__compressed_pair.301" }
%"struct.x11::Xkb::KeySymMap" = type { %"struct.std::__1::array.293", i8, i8, %"class.std::__1::vector.294" }
%"struct.std::__1::array.293" = type { [4 x i8] }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { i32*, i32*, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { i32* }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.x11::Xkb::KeySymMap"* }
%"class.absl::optional.306" = type { %"class.absl::optional_internal::optional_data.307" }
%"class.absl::optional_internal::optional_data.307" = type { %"class.absl::optional_internal::optional_data_base.308" }
%"class.absl::optional_internal::optional_data_base.308" = type { %"class.absl::optional_internal::optional_data_dtor_base.309" }
%"class.absl::optional_internal::optional_data_dtor_base.309" = type { i8, %union.anon.310 }
%union.anon.310 = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { i8*, i8*, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { i8* }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %"class.std::__1::vector.323" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"*, %"class.std::__1::__compressed_pair.326" }
%"union.x11::Xkb::Action" = type { %"struct.x11::Xkb::SAIsoLock" }
%"struct.x11::Xkb::SAIsoLock" = type { i32, i32, i32, i32, i8, i32, i32, i32 }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"union.x11::Xkb::Action"* }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { %"class.std::__1::vector.336" }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"*, %"class.std::__1::__compressed_pair.338" }
%"struct.x11::Xkb::SetBehavior" = type { i8, %"union.x11::Xkb::Behavior" }
%"union.x11::Xkb::Behavior" = type { %"struct.x11::Xkb::CommonBehavior" }
%"struct.x11::Xkb::CommonBehavior" = type { i8, i8 }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.x11::Xkb::SetBehavior"* }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"class.std::__1::vector.348" }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { i32*, i32*, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { i32* }
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, %union.anon.359 }
%union.anon.359 = type { %"class.std::__1::vector.360" }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"*, %"class.std::__1::__compressed_pair.362" }
%"struct.x11::Xkb::SetExplicit" = type { i8, i32 }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.x11::Xkb::SetExplicit"* }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.std::__1::vector.372" }
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"*, %"class.std::__1::__compressed_pair.374" }
%"struct.x11::Xkb::KeyModMap" = type { i8, i32 }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.x11::Xkb::KeyModMap"* }
%"class.absl::optional.379" = type { %"class.absl::optional_internal::optional_data.380" }
%"class.absl::optional_internal::optional_data.380" = type { %"class.absl::optional_internal::optional_data_base.381" }
%"class.absl::optional_internal::optional_data_base.381" = type { %"class.absl::optional_internal::optional_data_dtor_base.382" }
%"class.absl::optional_internal::optional_data_dtor_base.382" = type { i8, %union.anon.383 }
%union.anon.383 = type { %"class.std::__1::vector.384" }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"*, %"class.std::__1::__compressed_pair.386" }
%"struct.x11::Xkb::KeyVModMap" = type { i8, i32 }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.x11::Xkb::KeyVModMap"* }
%"struct.x11::GetKeyboardMappingReply" = type { i8, i16, %"class.std::__1::vector.294" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.402" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::Xkb::GetMapRequest" = type <{ i16, [2 x i8], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"class.x11::CoreKeyboardState" = type <{ %"class.x11::KeyboardState", %"class.x11::Connection"*, %"struct.x11::GetKeyboardMappingReply", i16, i8, i8, [4 x i8] }>
%"class.std::__1::basic_string.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.417 }
%union.anon.417 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.418 }
%struct.anon.418 = type { %"struct.std::__1::__padding.419", i8 }
%"struct.std::__1::__padding.419" = type { [1 x i8] }
%"class.x11::Future.423" = type { %"class.std::__1::unique_ptr.402" }
%"struct.x11::GetKeyboardMappingRequest" = type { i8, i8 }
%"class.x11::Future.424" = type { %"class.std::__1::unique_ptr.402" }
%"struct.x11::GetModifierMappingReply" = type { i8, i16, %"class.std::__1::vector.425" }
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { i8*, i8*, %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { i8* }

$_ZN3x1116XkbKeyboardStateD2Ev = comdat any

$_ZN3x1116XkbKeyboardStateD0Ev = comdat any

$_ZNK3x1116XkbKeyboardState15KeysymToKeycodeEj = comdat any

$_ZNK3x1116XkbKeyboardState15KeycodeToKeysymENS_7KeyCodeEj = comdat any

$_ZN3x1116XkbKeyboardState13UpdateMappingEv = comdat any

$_ZN3x113Xkb11GetMapReplyD2Ev = comdat any

$_ZN3x116FutureINS_3Xkb11GetMapReplyEE4SyncEv = comdat any

$_ZN3x113Xkb11GetMapReplyaSEOS1_ = comdat any

$_ZN3x1117CoreKeyboardStateD2Ev = comdat any

$_ZN3x1117CoreKeyboardStateD0Ev = comdat any

$_ZNK3x1117CoreKeyboardState15KeysymToKeycodeEj = comdat any

$_ZNK3x1117CoreKeyboardState15KeycodeToKeysymENS_7KeyCodeEj = comdat any

$_ZN3x1117CoreKeyboardState13UpdateMappingEv = comdat any

$_ZN3x116FutureINS_23GetKeyboardMappingReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_23GetModifierMappingReplyEE4SyncEv = comdat any

$_ZTVN3x1116XkbKeyboardStateE = comdat any

$_ZTVN3x1117CoreKeyboardStateE = comdat any

@_ZTVN3x1113KeyboardStateE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.x11::KeyboardState"*)* @_ZN3x1113KeyboardStateD2Ev to i8*), i8* bitcast (void (%"class.x11::KeyboardState"*)* @_ZN3x1113KeyboardStateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3x1116XkbKeyboardStateE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.x11::XkbKeyboardState"*)* @_ZN3x1116XkbKeyboardStateD2Ev to i8*), i8* bitcast (void (%"class.x11::XkbKeyboardState"*)* @_ZN3x1116XkbKeyboardStateD0Ev to i8*), i8* bitcast (i8 (%"class.x11::XkbKeyboardState"*, i32)* @_ZNK3x1116XkbKeyboardState15KeysymToKeycodeEj to i8*), i8* bitcast (i32 (%"class.x11::XkbKeyboardState"*, i8, i32)* @_ZNK3x1116XkbKeyboardState15KeycodeToKeysymENS_7KeyCodeEj to i8*), i8* bitcast (void (%"class.x11::XkbKeyboardState"*)* @_ZN3x1116XkbKeyboardState13UpdateMappingEv to i8*)] }, comdat, align 8
@.ref.tmp = private constant { i16, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8 } { i16 256, i32 3, i32 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0 }, align 4
@_ZTVN3x1117CoreKeyboardStateE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.x11::CoreKeyboardState"*)* @_ZN3x1117CoreKeyboardStateD2Ev to i8*), i8* bitcast (void (%"class.x11::CoreKeyboardState"*)* @_ZN3x1117CoreKeyboardStateD0Ev to i8*), i8* bitcast (i8 (%"class.x11::CoreKeyboardState"*, i32)* @_ZNK3x1117CoreKeyboardState15KeysymToKeycodeEj to i8*), i8* bitcast (i32 (%"class.x11::CoreKeyboardState"*, i8, i32)* @_ZNK3x1117CoreKeyboardState15KeycodeToKeysymENS_7KeyCodeEj to i8*), i8* bitcast (void (%"class.x11::CoreKeyboardState"*)* @_ZN3x1117CoreKeyboardState13UpdateMappingEv to i8*)] }, comdat, align 8
@switch.table._ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_ = private unnamed_addr constant [3 x i32] [i32 5053, i32 5053, i32 255], align 4
@switch.table._ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_.1 = private unnamed_addr constant [3 x i32] [i32 5052, i32 5052, i32 5054], align 4

@_ZN3x1113KeyboardStateD1Ev = hidden unnamed_addr alias void (%"class.x11::KeyboardState"*), void (%"class.x11::KeyboardState"*)* @_ZN3x1113KeyboardStateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3x1113KeyboardStateC2Ev(%"class.x11::KeyboardState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::KeyboardState", %"class.x11::KeyboardState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1113KeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3x1113KeyboardStateD2Ev(%"class.x11::KeyboardState"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3x1113KeyboardStateD0Ev(%"class.x11::KeyboardState"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::KeyboardState"* @_ZN3x1119CreateKeyboardStateEPNS_10ConnectionE(%"class.x11::Connection"*) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %0, i64 0, i32 1, i32 24, i32 0, i32 0, i32 0
  %3 = load %"class.x11::Xkb"*, %"class.x11::Xkb"** %2, align 8
  %4 = getelementptr inbounds %"class.x11::Xkb", %"class.x11::Xkb"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.x11::Connection"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 344) #13
  %10 = bitcast i8* %9 to %"class.x11::XkbKeyboardState"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1116XkbKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 16
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 18
  %16 = getelementptr inbounds i8, i8* %9, i64 48
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 64
  %20 = getelementptr inbounds i8, i8* %9, i64 96
  %21 = getelementptr inbounds i8, i8* %9, i64 128
  %22 = getelementptr inbounds i8, i8* %9, i64 160
  %23 = getelementptr inbounds i8, i8* %9, i64 192
  %24 = getelementptr inbounds i8, i8* %9, i64 224
  %25 = getelementptr inbounds i8, i8* %9, i64 256
  %26 = getelementptr inbounds i8, i8* %9, i64 288
  %27 = getelementptr inbounds i8, i8* %9, i64 320
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %15, i8 0, i64 27, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 25, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #14
  tail call void @_ZN3x1116XkbKeyboardState13UpdateMappingEv(%"class.x11::XkbKeyboardState"* nonnull %10) #14
  br label %42

28:                                               ; preds = %1
  %29 = tail call i8* @_Znwm(i64 56) #13
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1117CoreKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to %"class.x11::Connection"**
  store %"class.x11::Connection"* %0, %"class.x11::Connection"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 16
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 18
  %35 = bitcast i8* %34 to i16*
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds i8, i8* %29, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 28, i1 false) #14
  %37 = bitcast i8* %33 to %"struct.x11::GetKeyboardMappingReply"*
  %38 = getelementptr inbounds i8, i8* %29, i64 48
  %39 = bitcast i8* %38 to i16*
  %40 = getelementptr inbounds i8, i8* %29, i64 50
  %41 = getelementptr inbounds i8, i8* %29, i64 51
  tail call fastcc void @_ZN3x1112_GLOBAL__N_117UpdateMappingImplEPNS_10ConnectionEPNS_23GetKeyboardMappingReplyEPtPhS6_(%"class.x11::Connection"* %0, %"struct.x11::GetKeyboardMappingReply"* %37, i16* %39, i8* %40, i8* %41) #14
  br label %42

42:                                               ; preds = %28, %7
  %43 = phi i8* [ %29, %28 ], [ %9, %7 ]
  %44 = bitcast i8* %43 to %"class.x11::KeyboardState"*
  ret %"class.x11::KeyboardState"* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1116XkbKeyboardStateD2Ev(%"class.x11::XkbKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1116XkbKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2
  tail call void @_ZN3x113Xkb11GetMapReplyD2Ev(%"struct.x11::Xkb::GetMapReply"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1116XkbKeyboardStateD0Ev(%"class.x11::XkbKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1116XkbKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2
  tail call void @_ZN3x113Xkb11GetMapReplyD2Ev(%"struct.x11::Xkb::GetMapReply"* %3) #14
  %4 = bitcast %"class.x11::XkbKeyboardState"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK3x1116XkbKeyboardState15KeysymToKeycodeEj(%"class.x11::XkbKeyboardState"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 7
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 9
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %11, label %27, label %13, !prof !3

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::vector.291"* %12 to i64*
  %15 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.x11::Xkb::KeySymMap"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 5
  %21 = inttoptr i64 %18 to %"struct.x11::Xkb::KeySymMap"*
  %22 = zext i8 %6 to i64
  br label %23

23:                                               ; preds = %13, %43
  %24 = phi i64 [ 0, %13 ], [ %44, %43 ]
  %25 = phi i32 [ 0, %13 ], [ %45, %43 ]
  %26 = icmp ugt i64 %20, %24
  br i1 %26, label %30, label %28

27:                                               ; preds = %8
  tail call void @llvm.trap() #14
  unreachable

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::vector.291"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %21, i64 %24, i32 3, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %21, i64 %24, i32 3, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %32, %34
  br i1 %35, label %43, label %38

36:                                               ; preds = %38
  %37 = icmp eq i32* %42, %34
  br i1 %37, label %43, label %38

38:                                               ; preds = %30, %36
  %39 = phi i32* [ %42, %36 ], [ %32, %30 ]
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %1
  %42 = getelementptr inbounds i32, i32* %39, i64 1
  br i1 %41, label %47, label %36

43:                                               ; preds = %36, %30
  %44 = add nuw nsw i64 %24, 1
  %45 = add nuw nsw i32 %25, 1
  %46 = icmp ult i64 %44, %22
  br i1 %46, label %23, label %50

47:                                               ; preds = %38
  %48 = trunc i32 %25 to i8
  %49 = add i8 %4, %48
  br label %50

50:                                               ; preds = %43, %47, %2
  %51 = phi i8 [ 0, %2 ], [ %49, %47 ], [ 0, %43 ]
  ret i8 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3x1116XkbKeyboardState15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::XkbKeyboardState"*, i8 zeroext, i32) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = zext i8 %1 to i64
  %8 = icmp ugt i8 %5, %1
  br i1 %8, label %134, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 9
  %11 = load i8, i8* %10, align 4
  %12 = zext i8 %11 to i64
  %13 = add nuw nsw i64 %12, %6
  %14 = icmp ugt i64 %13, %7
  br i1 %14, label %15, label %134

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = sub nsw i64 %7, %6
  %23 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.x11::Xkb::KeySymMap"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.291"* %21 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 5
  %30 = icmp ugt i64 %29, %22
  br i1 %30, label %33, label %31

31:                                               ; preds = %20
  %32 = bitcast %"class.std::__1::vector.291"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %20
  %34 = inttoptr i64 %27 to %"struct.x11::Xkb::KeySymMap"*
  %35 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 %22, i32 1
  %36 = load i8, i8* %35, align 4
  %37 = and i8 %36, 15
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %134, label %39

39:                                               ; preds = %33
  %40 = lshr i32 %2, 13
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 3
  %43 = lshr i8 %36, 4
  %44 = and i8 %43, 3
  %45 = icmp ugt i8 %37, %42
  br i1 %45, label %55, label %46

46:                                               ; preds = %39
  %47 = and i8 %36, -64
  switch i8 %47, label %55 [
    i8 0, label %48
    i8 64, label %50
    i8 -128, label %52
  ]

48:                                               ; preds = %46
  %49 = urem i8 %42, %37
  br label %55

50:                                               ; preds = %46
  %51 = add nsw i8 %37, -1
  br label %55

52:                                               ; preds = %46
  %53 = icmp ult i8 %44, %37
  %54 = select i1 %53, i8 %44, i8 0
  br label %55

55:                                               ; preds = %52, %50, %48, %46, %39
  %56 = phi i8 [ %54, %52 ], [ %51, %50 ], [ %49, %48 ], [ %42, %39 ], [ 0, %46 ]
  %57 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 %22, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %56 to i64
  %60 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 %22, i32 0, i32 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 26, i32 0, i32 0, i32 0, i32 0
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %55
  tail call void @llvm.trap() #14
  unreachable

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %70 = bitcast %"struct.x11::Xkb::KeyType"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.265"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 6
  %76 = icmp ugt i64 %75, %62
  br i1 %76, label %77, label %134

77:                                               ; preds = %67
  %78 = zext i8 %56 to i32
  %79 = zext i8 %58 to i32
  %80 = mul nuw nsw i32 %79, %78
  %81 = inttoptr i64 %73 to %"struct.x11::Xkb::KeyType"*
  %82 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %81, i64 %62, i32 5
  %83 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %81, i64 %62, i32 5, i32 0, i32 1
  %84 = bitcast %"struct.x11::Xkb::KTMapEntry"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.267"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  %89 = inttoptr i64 %87 to %"struct.x11::Xkb::KTMapEntry"*
  br i1 %88, label %118, label %90

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %81, i64 %62, i32 0
  %92 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %81, i64 %62, i32 4
  %93 = sub i64 %85, %87
  %94 = sdiv exact i64 %93, 20
  br label %95

95:                                               ; preds = %114, %90
  %96 = phi i64 [ 0, %90 ], [ %116, %114 ]
  %97 = phi i32 [ %80, %90 ], [ %115, %114 ]
  %98 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %89, i64 %96, i32 0
  %99 = load i8, i8* %98, align 4
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %95
  %102 = load i32, i32* %91, align 8
  %103 = and i32 %102, %2
  %104 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %89, i64 %96, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %103, %105
  br i1 %106, label %107, label %114

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %89, i64 %96, i32 2
  %109 = load i8, i8* %108, align 4
  %110 = zext i8 %109 to i32
  %111 = add i32 %97, %110
  %112 = load i8, i8* %92, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %107, %101, %95
  %115 = phi i32 [ %111, %107 ], [ %97, %101 ], [ %97, %95 ]
  %116 = add nuw i64 %96, 1
  %117 = icmp ult i64 %116, %94
  br i1 %117, label %95, label %118

118:                                              ; preds = %114, %107, %77
  %119 = phi i32 [ %80, %77 ], [ %115, %114 ], [ %111, %107 ]
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 %22, i32 3
  %122 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %34, i64 %22, i32 3, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.294"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 2
  %129 = icmp ugt i64 %128, %120
  br i1 %129, label %130, label %134

130:                                              ; preds = %118
  %131 = inttoptr i64 %126 to i32*
  %132 = getelementptr inbounds i32, i32* %131, i64 %120
  %133 = load i32, i32* %132, align 4
  br label %134

134:                                              ; preds = %3, %9, %33, %67, %118, %130
  %135 = phi i32 [ 0, %9 ], [ 0, %3 ], [ 0, %33 ], [ 0, %67 ], [ %133, %130 ], [ 0, %118 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1116XkbKeyboardState13UpdateMappingEv(%"class.x11::XkbKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.x11::Future", align 8
  %3 = bitcast %"class.x11::Future"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 1
  %6 = bitcast %"class.x11::Connection"** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 200
  %9 = bitcast i8* %8 to %"class.x11::Xkb"**
  %10 = load %"class.x11::Xkb"*, %"class.x11::Xkb"** %9, align 8
  %11 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6GetMapERKNS0_13GetMapRequestE(%"class.x11::Xkb"* %10, %"struct.x11::Xkb::GetMapRequest"* dereferenceable(32) bitcast ({ i16, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"struct.x11::Xkb::GetMapRequest"*)) #14
  store %"class.x11::Connection::FutureImpl"* %11, %"class.x11::Connection::FutureImpl"** %4, align 8
  %12 = call { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_3Xkb11GetMapReplyEE4SyncEv(%"class.x11::Future"* nonnull %2)
  %13 = extractvalue { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } %12, 0
  %14 = extractvalue { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } %12, 1
  %15 = icmp eq %"struct.x11::Xkb::GetMapReply"* %13, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.x11::XkbKeyboardState", %"class.x11::XkbKeyboardState"* %0, i64 0, i32 2
  %18 = call dereferenceable(328) %"struct.x11::Xkb::GetMapReply"* @_ZN3x113Xkb11GetMapReplyaSEOS1_(%"struct.x11::Xkb::GetMapReply"* %17, %"struct.x11::Xkb::GetMapReply"* nonnull dereferenceable(328) %13) #14
  br label %19

19:                                               ; preds = %1, %16
  %20 = icmp eq %"class.x11::Error"* %14, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.x11::Error"* %14 to void (%"class.x11::Error"*)***
  %23 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %23, i64 1
  %25 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %24, align 8
  call void %25(%"class.x11::Error"* nonnull %14) #14
  br label %26

26:                                               ; preds = %21, %19
  br i1 %15, label %29, label %27

27:                                               ; preds = %26
  call void @_ZN3x113Xkb11GetMapReplyD2Ev(%"struct.x11::Xkb::GetMapReply"* nonnull %13) #14
  %28 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %13, i64 0, i32 0
  call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %26, %27
  %30 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %4, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %4, align 8
  %31 = icmp eq %"class.x11::Connection::FutureImpl"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.x11::Connection::FutureImpl"* %30 to i8*
  call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x113Xkb11GetMapReplyD2Ev(%"struct.x11::Xkb::GetMapReply"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %6, align 8
  %8 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %7 to i64
  %11 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.x11::Xkb::KeyVModMap"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %7, i64 0, i32 0
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %20, align 8
  %22 = icmp eq %"struct.x11::Xkb::KeyModMap"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %21 to i64
  %25 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.x11::Xkb::KeyModMap"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %34, align 8
  %36 = icmp eq %"struct.x11::Xkb::SetExplicit"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.x11::Xkb::SetExplicit"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %35, i64 0, i32 0
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %37, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %51, %47
  store i8 0, i8* %44, align 8
  br label %57

57:                                               ; preds = %43, %56
  %58 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %62, align 8
  %64 = icmp eq %"struct.x11::Xkb::SetBehavior"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %63 to i64
  %67 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast %"struct.x11::Xkb::SetBehavior"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %63, i64 0, i32 0
  tail call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %65, %61
  store i8 0, i8* %58, align 8
  br label %71

71:                                               ; preds = %57, %70
  %72 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %76, align 8
  %78 = icmp eq %"union.x11::Xkb::Action"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = ptrtoint %"union.x11::Xkb::Action"* %77 to i64
  %81 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = bitcast %"union.x11::Xkb::Action"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast %"union.x11::Xkb::Action"* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %79, %75
  store i8 0, i8* %72, align 8
  br label %85

85:                                               ; preds = %71, %84
  %86 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = ptrtoint i8* %91 to i64
  %95 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %96 = bitcast i8** %95 to i64*
  store i64 %94, i64* %96, align 8
  tail call void @_ZdlPv(i8* nonnull %91) #13
  br label %97

97:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 8
  br label %98

98:                                               ; preds = %85, %97
  %99 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %103, align 8
  %105 = icmp eq %"struct.x11::Xkb::KeySymMap"* %104, null
  br i1 %105, label %128, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %108 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %107, align 8
  %109 = icmp eq %"struct.x11::Xkb::KeySymMap"* %108, %104
  br i1 %109, label %125, label %110

110:                                              ; preds = %106, %121
  %111 = phi %"struct.x11::Xkb::KeySymMap"* [ %112, %121 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1
  %113 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1, i32 3, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = ptrtoint i32* %114 to i64
  %118 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %111, i64 -1, i32 3, i32 0, i32 1
  %119 = bitcast i32** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast i32* %114 to i8*
  tail call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %116, %110
  %122 = icmp eq %"struct.x11::Xkb::KeySymMap"* %112, %104
  br i1 %122, label %123, label %110

123:                                              ; preds = %121
  %124 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %103, align 8
  br label %125

125:                                              ; preds = %123, %106
  %126 = phi %"struct.x11::Xkb::KeySymMap"* [ %124, %123 ], [ %104, %106 ]
  store %"struct.x11::Xkb::KeySymMap"* %104, %"struct.x11::Xkb::KeySymMap"** %107, align 8
  %127 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %126, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %125, %102
  store i8 0, i8* %99, align 8
  br label %129

129:                                              ; preds = %98, %128
  %130 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %171, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %134, i64 0, i32 0, i32 0
  %136 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %135, align 8
  %137 = icmp eq %"struct.x11::Xkb::KeyType"* %136, null
  br i1 %137, label %170, label %138

138:                                              ; preds = %133
  %139 = bitcast %"struct.x11::Xkb::KeyType"* %136 to i8*
  %140 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %141 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %140, align 8
  %142 = icmp eq %"struct.x11::Xkb::KeyType"* %141, %136
  br i1 %142, label %168, label %143

143:                                              ; preds = %138, %163
  %144 = phi %"struct.x11::Xkb::KeyType"* [ %145, %163 ], [ %141, %138 ]
  %145 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1
  %146 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 6, i32 0, i32 0
  %147 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %146, align 8
  %148 = icmp eq %"struct.x11::Xkb::ModDef"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %143
  %150 = ptrtoint %"struct.x11::Xkb::ModDef"* %147 to i64
  %151 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 6, i32 0, i32 1
  %152 = bitcast %"struct.x11::Xkb::ModDef"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"struct.x11::Xkb::ModDef"* %147 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %149, %143
  %155 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 5, i32 0, i32 0
  %156 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %155, align 8
  %157 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %156 to i64
  %160 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %144, i64 -1, i32 5, i32 0, i32 1
  %161 = bitcast %"struct.x11::Xkb::KTMapEntry"** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %156, i64 0, i32 0
  tail call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %158, %154
  %164 = icmp eq %"struct.x11::Xkb::KeyType"* %145, %136
  br i1 %164, label %165, label %143

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector.265"* %134 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %138
  %169 = phi i8* [ %167, %165 ], [ %139, %138 ]
  store %"struct.x11::Xkb::KeyType"* %136, %"struct.x11::Xkb::KeyType"** %140, align 8
  tail call void @_ZdlPv(i8* %169) #13
  br label %170

170:                                              ; preds = %168, %133
  store i8 0, i8* %130, align 8
  br label %171

171:                                              ; preds = %129, %170
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb6GetMapERKNS0_13GetMapRequestE(%"class.x11::Xkb"*, %"struct.x11::Xkb::GetMapRequest"* dereferenceable(32)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_3Xkb11GetMapReplyEE4SyncEv(%"class.x11::Future"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #14
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #14
  %23 = call %"struct.x11::Xkb::GetMapReply"* @_ZN3x116detail9ReadReplyINS_3Xkb11GetMapReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #14
  %24 = ptrtoint %"struct.x11::Xkb::GetMapReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #14
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::Xkb::GetMapReply"*
  %47 = insertvalue { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } undef, %"struct.x11::Xkb::GetMapReply"* %46, 0
  %48 = insertvalue { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::Xkb::GetMapReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(328) %"struct.x11::Xkb::GetMapReply"* @_ZN3x113Xkb11GetMapReplyaSEOS1_(%"struct.x11::Xkb::GetMapReply"*, %"struct.x11::Xkb::GetMapReply"* dereferenceable(328)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 36, i1 false)
  %5 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26
  %6 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %83, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional.260", %"class.absl::optional.260"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %13, label %67, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %14, i64 0, i32 0, i32 0
  %17 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %16, align 8
  %18 = icmp eq %"struct.x11::Xkb::KeyType"* %17, null
  br i1 %18, label %52, label %19

19:                                               ; preds = %15
  %20 = bitcast %"struct.x11::Xkb::KeyType"* %17 to i8*
  %21 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %21, align 8
  %23 = icmp eq %"struct.x11::Xkb::KeyType"* %22, %17
  br i1 %23, label %49, label %24

24:                                               ; preds = %19, %44
  %25 = phi %"struct.x11::Xkb::KeyType"* [ %26, %44 ], [ %22, %19 ]
  %26 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %25, i64 -1
  %27 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %25, i64 -1, i32 6, i32 0, i32 0
  %28 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %27, align 8
  %29 = icmp eq %"struct.x11::Xkb::ModDef"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = ptrtoint %"struct.x11::Xkb::ModDef"* %28 to i64
  %32 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %25, i64 -1, i32 6, i32 0, i32 1
  %33 = bitcast %"struct.x11::Xkb::ModDef"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"struct.x11::Xkb::ModDef"* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %24
  %36 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %25, i64 -1, i32 5, i32 0, i32 0
  %37 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %36, align 8
  %38 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %37 to i64
  %41 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %25, i64 -1, i32 5, i32 0, i32 1
  %42 = bitcast %"struct.x11::Xkb::KTMapEntry"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %37, i64 0, i32 0
  tail call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %39, %35
  %45 = icmp eq %"struct.x11::Xkb::KeyType"* %26, %17
  br i1 %45, label %46, label %24

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector.265"* %14 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %19
  %50 = phi i8* [ %48, %46 ], [ %20, %19 ]
  store %"struct.x11::Xkb::KeyType"* %17, %"struct.x11::Xkb::KeyType"** %21, align 8
  tail call void @_ZdlPv(i8* %50) #13
  %51 = bitcast %"class.std::__1::vector.265"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #14
  br label %52

52:                                               ; preds = %15, %49
  %53 = bitcast %"class.std::__1::vector.265"* %10 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.265"* %14 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"struct.x11::Xkb::KeyType"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.x11::Xkb::KeyType"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.x11::Xkb::KeyType"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"struct.x11::Xkb::KeyType"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.std::__1::vector.265"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #14
  br label %125

67:                                               ; preds = %9
  %68 = bitcast %"class.std::__1::vector.265"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #14
  %69 = bitcast %"class.std::__1::vector.265"* %10 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.265"* %14 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %73 = bitcast %"struct.x11::Xkb::KeyType"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %76 = bitcast %"struct.x11::Xkb::KeyType"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.x11::Xkb::KeyType"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.x11::Xkb::KeyType"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.std::__1::vector.265"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %11, align 8
  br label %125

83:                                               ; preds = %2
  %84 = getelementptr inbounds %"class.absl::optional.260", %"class.absl::optional.260"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %125, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %88, i64 0, i32 0, i32 0
  %90 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %89, align 8
  %91 = icmp eq %"struct.x11::Xkb::KeyType"* %90, null
  br i1 %91, label %124, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.x11::Xkb::KeyType"* %90 to i8*
  %94 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %95 = load %"struct.x11::Xkb::KeyType"*, %"struct.x11::Xkb::KeyType"** %94, align 8
  %96 = icmp eq %"struct.x11::Xkb::KeyType"* %95, %90
  br i1 %96, label %122, label %97

97:                                               ; preds = %92, %117
  %98 = phi %"struct.x11::Xkb::KeyType"* [ %99, %117 ], [ %95, %92 ]
  %99 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %98, i64 -1, i32 6, i32 0, i32 0
  %101 = load %"struct.x11::Xkb::ModDef"*, %"struct.x11::Xkb::ModDef"** %100, align 8
  %102 = icmp eq %"struct.x11::Xkb::ModDef"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = ptrtoint %"struct.x11::Xkb::ModDef"* %101 to i64
  %105 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %98, i64 -1, i32 6, i32 0, i32 1
  %106 = bitcast %"struct.x11::Xkb::ModDef"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"struct.x11::Xkb::ModDef"* %101 to i8*
  tail call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %103, %97
  %109 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %98, i64 -1, i32 5, i32 0, i32 0
  %110 = load %"struct.x11::Xkb::KTMapEntry"*, %"struct.x11::Xkb::KTMapEntry"** %109, align 8
  %111 = icmp eq %"struct.x11::Xkb::KTMapEntry"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = ptrtoint %"struct.x11::Xkb::KTMapEntry"* %110 to i64
  %114 = getelementptr inbounds %"struct.x11::Xkb::KeyType", %"struct.x11::Xkb::KeyType"* %98, i64 -1, i32 5, i32 0, i32 1
  %115 = bitcast %"struct.x11::Xkb::KTMapEntry"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.x11::Xkb::KTMapEntry", %"struct.x11::Xkb::KTMapEntry"* %110, i64 0, i32 0
  tail call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %112, %108
  %118 = icmp eq %"struct.x11::Xkb::KeyType"* %99, %90
  br i1 %118, label %119, label %97

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::vector.265"* %88 to i8**
  %121 = load i8*, i8** %120, align 8
  br label %122

122:                                              ; preds = %119, %92
  %123 = phi i8* [ %121, %119 ], [ %93, %92 ]
  store %"struct.x11::Xkb::KeyType"* %90, %"struct.x11::Xkb::KeyType"** %94, align 8
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %122, %87
  store i8 0, i8* %84, align 8
  br label %125

125:                                              ; preds = %124, %83, %52, %67
  %126 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27
  %127 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %194, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %134, label %178, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.std::__1::vector.291", %"class.std::__1::vector.291"* %135, i64 0, i32 0, i32 0
  %138 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %137, align 8
  %139 = icmp eq %"struct.x11::Xkb::KeySymMap"* %138, null
  br i1 %139, label %163, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %142 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %141, align 8
  %143 = icmp eq %"struct.x11::Xkb::KeySymMap"* %142, %138
  br i1 %143, label %159, label %144

144:                                              ; preds = %140, %155
  %145 = phi %"struct.x11::Xkb::KeySymMap"* [ %146, %155 ], [ %142, %140 ]
  %146 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %145, i64 -1
  %147 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %145, i64 -1, i32 3, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %144
  %151 = ptrtoint i32* %148 to i64
  %152 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %145, i64 -1, i32 3, i32 0, i32 1
  %153 = bitcast i32** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = bitcast i32* %148 to i8*
  tail call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %150, %144
  %156 = icmp eq %"struct.x11::Xkb::KeySymMap"* %146, %138
  br i1 %156, label %157, label %144

157:                                              ; preds = %155
  %158 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %137, align 8
  br label %159

159:                                              ; preds = %157, %140
  %160 = phi %"struct.x11::Xkb::KeySymMap"* [ %158, %157 ], [ %138, %140 ]
  store %"struct.x11::Xkb::KeySymMap"* %138, %"struct.x11::Xkb::KeySymMap"** %141, align 8
  %161 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %160, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %161) #13
  %162 = bitcast %"class.std::__1::vector.291"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #14
  br label %163

163:                                              ; preds = %159, %136
  %164 = bitcast %"class.std::__1::vector.291"* %131 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::vector.291"* %135 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.x11::Xkb::KeySymMap"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %171 = bitcast %"struct.x11::Xkb::KeySymMap"** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %173 = bitcast %"struct.x11::Xkb::KeySymMap"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %176 = bitcast %"struct.x11::Xkb::KeySymMap"** %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = bitcast %"class.std::__1::vector.291"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #14
  br label %225

178:                                              ; preds = %130
  %179 = bitcast %"class.std::__1::vector.291"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #14
  %180 = bitcast %"class.std::__1::vector.291"* %131 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::vector.291"* %135 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %184 = bitcast %"struct.x11::Xkb::KeySymMap"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %187 = bitcast %"struct.x11::Xkb::KeySymMap"** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast %"struct.x11::Xkb::KeySymMap"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %192 = bitcast %"struct.x11::Xkb::KeySymMap"** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast %"class.std::__1::vector.291"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %132, align 8
  br label %225

194:                                              ; preds = %125
  %195 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8, i8* %195, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %225, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %200 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %199, align 8
  %201 = icmp eq %"struct.x11::Xkb::KeySymMap"* %200, null
  br i1 %201, label %224, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %204 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %203, align 8
  %205 = icmp eq %"struct.x11::Xkb::KeySymMap"* %204, %200
  br i1 %205, label %221, label %206

206:                                              ; preds = %202, %217
  %207 = phi %"struct.x11::Xkb::KeySymMap"* [ %208, %217 ], [ %204, %202 ]
  %208 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %207, i64 -1
  %209 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %207, i64 -1, i32 3, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %206
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %207, i64 -1, i32 3, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  tail call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %212, %206
  %218 = icmp eq %"struct.x11::Xkb::KeySymMap"* %208, %200
  br i1 %218, label %219, label %206

219:                                              ; preds = %217
  %220 = load %"struct.x11::Xkb::KeySymMap"*, %"struct.x11::Xkb::KeySymMap"** %199, align 8
  br label %221

221:                                              ; preds = %219, %202
  %222 = phi %"struct.x11::Xkb::KeySymMap"* [ %220, %219 ], [ %200, %202 ]
  store %"struct.x11::Xkb::KeySymMap"* %200, %"struct.x11::Xkb::KeySymMap"** %203, align 8
  %223 = getelementptr inbounds %"struct.x11::Xkb::KeySymMap", %"struct.x11::Xkb::KeySymMap"* %222, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %223) #13
  br label %224

224:                                              ; preds = %221, %198
  store i8 0, i8* %195, align 8
  br label %225

225:                                              ; preds = %178, %163, %194, %224
  %226 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28
  %227 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0
  %228 = load i8, i8* %227, align 8, !range !2
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %276, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0
  %232 = getelementptr inbounds %"class.absl::optional.306", %"class.absl::optional.306"* %226, i64 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  %235 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %234, label %260, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %235, i64 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %245, label %240

240:                                              ; preds = %236
  %241 = ptrtoint i8* %238 to i64
  %242 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %243 = bitcast i8** %242 to i64*
  store i64 %241, i64* %243, align 8
  tail call void @_ZdlPv(i8* nonnull %238) #13
  %244 = bitcast %"class.std::__1::vector.311"* %235 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 24, i1 false) #14
  br label %245

245:                                              ; preds = %236, %240
  %246 = bitcast %"class.std::__1::vector.311"* %231 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.std::__1::vector.311"* %235 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %250 = bitcast i8** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %253 = bitcast i8** %252 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %258 = bitcast i8** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = bitcast %"class.std::__1::vector.311"* %231 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #14
  br label %289

260:                                              ; preds = %230
  %261 = bitcast %"class.std::__1::vector.311"* %235 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 24, i1 false) #14
  %262 = bitcast %"class.std::__1::vector.311"* %231 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.std::__1::vector.311"* %235 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %266 = bitcast i8** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %269 = bitcast i8** %268 to i64*
  store i64 %267, i64* %269, align 8
  %270 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %271 = bitcast i8** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %274 = bitcast i8** %273 to i64*
  store i64 %272, i64* %274, align 8
  %275 = bitcast %"class.std::__1::vector.311"* %231 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %232, align 8
  br label %289

276:                                              ; preds = %225
  %277 = getelementptr inbounds %"class.absl::optional.306", %"class.absl::optional.306"* %226, i64 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i8, i8* %277, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %289, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %288, label %284

284:                                              ; preds = %280
  %285 = ptrtoint i8* %282 to i64
  %286 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %287 = bitcast i8** %286 to i64*
  store i64 %285, i64* %287, align 8
  tail call void @_ZdlPv(i8* nonnull %282) #13
  br label %288

288:                                              ; preds = %284, %280
  store i8 0, i8* %277, align 8
  br label %289

289:                                              ; preds = %245, %260, %276, %288
  %290 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29
  %291 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %292 = load i8, i8* %291, align 8, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %341, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0
  %296 = getelementptr inbounds %"class.absl::optional.318", %"class.absl::optional.318"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8, i8* %296, align 8, !range !2
  %298 = icmp eq i8 %297, 0
  %299 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %298, label %325, label %300

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.std::__1::vector.323", %"class.std::__1::vector.323"* %299, i64 0, i32 0, i32 0
  %302 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %301, align 8
  %303 = icmp eq %"union.x11::Xkb::Action"* %302, null
  br i1 %303, label %310, label %304

304:                                              ; preds = %300
  %305 = ptrtoint %"union.x11::Xkb::Action"* %302 to i64
  %306 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %307 = bitcast %"union.x11::Xkb::Action"** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = bitcast %"union.x11::Xkb::Action"* %302 to i8*
  tail call void @_ZdlPv(i8* %308) #13
  %309 = bitcast %"class.std::__1::vector.323"* %299 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 24, i1 false) #14
  br label %310

310:                                              ; preds = %300, %304
  %311 = bitcast %"class.std::__1::vector.323"* %295 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.std::__1::vector.323"* %299 to i64*
  store i64 %312, i64* %313, align 8
  %314 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %315 = bitcast %"union.x11::Xkb::Action"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %318 = bitcast %"union.x11::Xkb::Action"** %317 to i64*
  store i64 %316, i64* %318, align 8
  %319 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %320 = bitcast %"union.x11::Xkb::Action"** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %323 = bitcast %"union.x11::Xkb::Action"** %322 to i64*
  store i64 %321, i64* %323, align 8
  %324 = bitcast %"class.std::__1::vector.323"* %295 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %324, i8 0, i64 24, i1 false) #14
  br label %355

325:                                              ; preds = %294
  %326 = bitcast %"class.std::__1::vector.323"* %299 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 24, i1 false) #14
  %327 = bitcast %"class.std::__1::vector.323"* %295 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.std::__1::vector.323"* %299 to i64*
  store i64 %328, i64* %329, align 8
  %330 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %331 = bitcast %"union.x11::Xkb::Action"** %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %334 = bitcast %"union.x11::Xkb::Action"** %333 to i64*
  store i64 %332, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %336 = bitcast %"union.x11::Xkb::Action"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %339 = bitcast %"union.x11::Xkb::Action"** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast %"class.std::__1::vector.323"* %295 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %296, align 8
  br label %355

341:                                              ; preds = %289
  %342 = getelementptr inbounds %"class.absl::optional.318", %"class.absl::optional.318"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i8, i8* %342, align 8, !range !2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %355, label %345

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %347 = load %"union.x11::Xkb::Action"*, %"union.x11::Xkb::Action"** %346, align 8
  %348 = icmp eq %"union.x11::Xkb::Action"* %347, null
  br i1 %348, label %354, label %349

349:                                              ; preds = %345
  %350 = ptrtoint %"union.x11::Xkb::Action"* %347 to i64
  %351 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %352 = bitcast %"union.x11::Xkb::Action"** %351 to i64*
  store i64 %350, i64* %352, align 8
  %353 = bitcast %"union.x11::Xkb::Action"* %347 to i8*
  tail call void @_ZdlPv(i8* %353) #13
  br label %354

354:                                              ; preds = %349, %345
  store i8 0, i8* %342, align 8
  br label %355

355:                                              ; preds = %310, %325, %341, %354
  %356 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30
  %357 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %358 = load i8, i8* %357, align 8, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %407, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0
  %362 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %356, i64 0, i32 0, i32 0, i32 0, i32 0
  %363 = load i8, i8* %362, align 8, !range !2
  %364 = icmp eq i8 %363, 0
  %365 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %364, label %391, label %366

366:                                              ; preds = %360
  %367 = getelementptr inbounds %"class.std::__1::vector.336", %"class.std::__1::vector.336"* %365, i64 0, i32 0, i32 0
  %368 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %367, align 8
  %369 = icmp eq %"struct.x11::Xkb::SetBehavior"* %368, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %366
  %371 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %368 to i64
  %372 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %373 = bitcast %"struct.x11::Xkb::SetBehavior"** %372 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %368, i64 0, i32 0
  tail call void @_ZdlPv(i8* %374) #13
  %375 = bitcast %"class.std::__1::vector.336"* %365 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %375, i8 0, i64 24, i1 false) #14
  br label %376

376:                                              ; preds = %366, %370
  %377 = bitcast %"class.std::__1::vector.336"* %361 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.std::__1::vector.336"* %365 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %381 = bitcast %"struct.x11::Xkb::SetBehavior"** %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %384 = bitcast %"struct.x11::Xkb::SetBehavior"** %383 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %386 = bitcast %"struct.x11::Xkb::SetBehavior"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %389 = bitcast %"struct.x11::Xkb::SetBehavior"** %388 to i64*
  store i64 %387, i64* %389, align 8
  %390 = bitcast %"class.std::__1::vector.336"* %361 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %390, i8 0, i64 24, i1 false) #14
  br label %421

391:                                              ; preds = %360
  %392 = bitcast %"class.std::__1::vector.336"* %365 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 0, i64 24, i1 false) #14
  %393 = bitcast %"class.std::__1::vector.336"* %361 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.std::__1::vector.336"* %365 to i64*
  store i64 %394, i64* %395, align 8
  %396 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %397 = bitcast %"struct.x11::Xkb::SetBehavior"** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %400 = bitcast %"struct.x11::Xkb::SetBehavior"** %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %402 = bitcast %"struct.x11::Xkb::SetBehavior"** %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %405 = bitcast %"struct.x11::Xkb::SetBehavior"** %404 to i64*
  store i64 %403, i64* %405, align 8
  %406 = bitcast %"class.std::__1::vector.336"* %361 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %406, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %362, align 8
  br label %421

407:                                              ; preds = %355
  %408 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %356, i64 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8, i8* %408, align 8, !range !2
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %421, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %413 = load %"struct.x11::Xkb::SetBehavior"*, %"struct.x11::Xkb::SetBehavior"** %412, align 8
  %414 = icmp eq %"struct.x11::Xkb::SetBehavior"* %413, null
  br i1 %414, label %420, label %415

415:                                              ; preds = %411
  %416 = ptrtoint %"struct.x11::Xkb::SetBehavior"* %413 to i64
  %417 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %418 = bitcast %"struct.x11::Xkb::SetBehavior"** %417 to i64*
  store i64 %416, i64* %418, align 8
  %419 = getelementptr inbounds %"struct.x11::Xkb::SetBehavior", %"struct.x11::Xkb::SetBehavior"* %413, i64 0, i32 0
  tail call void @_ZdlPv(i8* %419) #13
  br label %420

420:                                              ; preds = %415, %411
  store i8 0, i8* %408, align 8
  br label %421

421:                                              ; preds = %376, %391, %407, %420
  %422 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31
  %423 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0
  %424 = load i8, i8* %423, align 8, !range !2
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %473, label %426

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0
  %428 = getelementptr inbounds %"class.absl::optional.343", %"class.absl::optional.343"* %422, i64 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i8, i8* %428, align 8, !range !2
  %430 = icmp eq i8 %429, 0
  %431 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %430, label %457, label %432

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.std::__1::vector.348", %"class.std::__1::vector.348"* %431, i64 0, i32 0, i32 0
  %434 = load i32*, i32** %433, align 8
  %435 = icmp eq i32* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %432
  %437 = ptrtoint i32* %434 to i64
  %438 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %439 = bitcast i32** %438 to i64*
  store i64 %437, i64* %439, align 8
  %440 = bitcast i32* %434 to i8*
  tail call void @_ZdlPv(i8* %440) #13
  %441 = bitcast %"class.std::__1::vector.348"* %431 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %441, i8 0, i64 24, i1 false) #14
  br label %442

442:                                              ; preds = %432, %436
  %443 = bitcast %"class.std::__1::vector.348"* %427 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = bitcast %"class.std::__1::vector.348"* %431 to i64*
  store i64 %444, i64* %445, align 8
  %446 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %447 = bitcast i32** %446 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %450 = bitcast i32** %449 to i64*
  store i64 %448, i64* %450, align 8
  %451 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %452 = bitcast i32** %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %455 = bitcast i32** %454 to i64*
  store i64 %453, i64* %455, align 8
  %456 = bitcast %"class.std::__1::vector.348"* %427 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %456, i8 0, i64 24, i1 false) #14
  br label %487

457:                                              ; preds = %426
  %458 = bitcast %"class.std::__1::vector.348"* %431 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %458, i8 0, i64 24, i1 false) #14
  %459 = bitcast %"class.std::__1::vector.348"* %427 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.std::__1::vector.348"* %431 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %463 = bitcast i32** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %466 = bitcast i32** %465 to i64*
  store i64 %464, i64* %466, align 8
  %467 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %468 = bitcast i32** %467 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %471 = bitcast i32** %470 to i64*
  store i64 %469, i64* %471, align 8
  %472 = bitcast %"class.std::__1::vector.348"* %427 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %472, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %428, align 8
  br label %487

473:                                              ; preds = %421
  %474 = getelementptr inbounds %"class.absl::optional.343", %"class.absl::optional.343"* %422, i64 0, i32 0, i32 0, i32 0, i32 0
  %475 = load i8, i8* %474, align 8, !range !2
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %487, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %479 = load i32*, i32** %478, align 8
  %480 = icmp eq i32* %479, null
  br i1 %480, label %486, label %481

481:                                              ; preds = %477
  %482 = ptrtoint i32* %479 to i64
  %483 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %484 = bitcast i32** %483 to i64*
  store i64 %482, i64* %484, align 8
  %485 = bitcast i32* %479 to i8*
  tail call void @_ZdlPv(i8* %485) #13
  br label %486

486:                                              ; preds = %481, %477
  store i8 0, i8* %474, align 8
  br label %487

487:                                              ; preds = %442, %457, %473, %486
  %488 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32
  %489 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %490 = load i8, i8* %489, align 8, !range !2
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %539, label %492

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  %494 = getelementptr inbounds %"class.absl::optional.355", %"class.absl::optional.355"* %488, i64 0, i32 0, i32 0, i32 0, i32 0
  %495 = load i8, i8* %494, align 8, !range !2
  %496 = icmp eq i8 %495, 0
  %497 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %496, label %523, label %498

498:                                              ; preds = %492
  %499 = getelementptr inbounds %"class.std::__1::vector.360", %"class.std::__1::vector.360"* %497, i64 0, i32 0, i32 0
  %500 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %499, align 8
  %501 = icmp eq %"struct.x11::Xkb::SetExplicit"* %500, null
  br i1 %501, label %508, label %502

502:                                              ; preds = %498
  %503 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %500 to i64
  %504 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %505 = bitcast %"struct.x11::Xkb::SetExplicit"** %504 to i64*
  store i64 %503, i64* %505, align 8
  %506 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %500, i64 0, i32 0
  tail call void @_ZdlPv(i8* %506) #13
  %507 = bitcast %"class.std::__1::vector.360"* %497 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %507, i8 0, i64 24, i1 false) #14
  br label %508

508:                                              ; preds = %498, %502
  %509 = bitcast %"class.std::__1::vector.360"* %493 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.std::__1::vector.360"* %497 to i64*
  store i64 %510, i64* %511, align 8
  %512 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %513 = bitcast %"struct.x11::Xkb::SetExplicit"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %516 = bitcast %"struct.x11::Xkb::SetExplicit"** %515 to i64*
  store i64 %514, i64* %516, align 8
  %517 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %518 = bitcast %"struct.x11::Xkb::SetExplicit"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %521 = bitcast %"struct.x11::Xkb::SetExplicit"** %520 to i64*
  store i64 %519, i64* %521, align 8
  %522 = bitcast %"class.std::__1::vector.360"* %493 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %522, i8 0, i64 24, i1 false) #14
  br label %553

523:                                              ; preds = %492
  %524 = bitcast %"class.std::__1::vector.360"* %497 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %524, i8 0, i64 24, i1 false) #14
  %525 = bitcast %"class.std::__1::vector.360"* %493 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.std::__1::vector.360"* %497 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %529 = bitcast %"struct.x11::Xkb::SetExplicit"** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %532 = bitcast %"struct.x11::Xkb::SetExplicit"** %531 to i64*
  store i64 %530, i64* %532, align 8
  %533 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %534 = bitcast %"struct.x11::Xkb::SetExplicit"** %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %537 = bitcast %"struct.x11::Xkb::SetExplicit"** %536 to i64*
  store i64 %535, i64* %537, align 8
  %538 = bitcast %"class.std::__1::vector.360"* %493 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %538, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %494, align 8
  br label %553

539:                                              ; preds = %487
  %540 = getelementptr inbounds %"class.absl::optional.355", %"class.absl::optional.355"* %488, i64 0, i32 0, i32 0, i32 0, i32 0
  %541 = load i8, i8* %540, align 8, !range !2
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %553, label %543

543:                                              ; preds = %539
  %544 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %545 = load %"struct.x11::Xkb::SetExplicit"*, %"struct.x11::Xkb::SetExplicit"** %544, align 8
  %546 = icmp eq %"struct.x11::Xkb::SetExplicit"* %545, null
  br i1 %546, label %552, label %547

547:                                              ; preds = %543
  %548 = ptrtoint %"struct.x11::Xkb::SetExplicit"* %545 to i64
  %549 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %550 = bitcast %"struct.x11::Xkb::SetExplicit"** %549 to i64*
  store i64 %548, i64* %550, align 8
  %551 = getelementptr inbounds %"struct.x11::Xkb::SetExplicit", %"struct.x11::Xkb::SetExplicit"* %545, i64 0, i32 0
  tail call void @_ZdlPv(i8* %551) #13
  br label %552

552:                                              ; preds = %547, %543
  store i8 0, i8* %540, align 8
  br label %553

553:                                              ; preds = %508, %523, %539, %552
  %554 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33
  %555 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %556 = load i8, i8* %555, align 8, !range !2
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %605, label %558

558:                                              ; preds = %553
  %559 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %560 = getelementptr inbounds %"class.absl::optional.367", %"class.absl::optional.367"* %554, i64 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8, i8* %560, align 8, !range !2
  %562 = icmp eq i8 %561, 0
  %563 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %562, label %589, label %564

564:                                              ; preds = %558
  %565 = getelementptr inbounds %"class.std::__1::vector.372", %"class.std::__1::vector.372"* %563, i64 0, i32 0, i32 0
  %566 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %565, align 8
  %567 = icmp eq %"struct.x11::Xkb::KeyModMap"* %566, null
  br i1 %567, label %574, label %568

568:                                              ; preds = %564
  %569 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %566 to i64
  %570 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %571 = bitcast %"struct.x11::Xkb::KeyModMap"** %570 to i64*
  store i64 %569, i64* %571, align 8
  %572 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %566, i64 0, i32 0
  tail call void @_ZdlPv(i8* %572) #13
  %573 = bitcast %"class.std::__1::vector.372"* %563 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %573, i8 0, i64 24, i1 false) #14
  br label %574

574:                                              ; preds = %564, %568
  %575 = bitcast %"class.std::__1::vector.372"* %559 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.std::__1::vector.372"* %563 to i64*
  store i64 %576, i64* %577, align 8
  %578 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %579 = bitcast %"struct.x11::Xkb::KeyModMap"** %578 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %582 = bitcast %"struct.x11::Xkb::KeyModMap"** %581 to i64*
  store i64 %580, i64* %582, align 8
  %583 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %584 = bitcast %"struct.x11::Xkb::KeyModMap"** %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %587 = bitcast %"struct.x11::Xkb::KeyModMap"** %586 to i64*
  store i64 %585, i64* %587, align 8
  %588 = bitcast %"class.std::__1::vector.372"* %559 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %588, i8 0, i64 24, i1 false) #14
  br label %619

589:                                              ; preds = %558
  %590 = bitcast %"class.std::__1::vector.372"* %563 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %590, i8 0, i64 24, i1 false) #14
  %591 = bitcast %"class.std::__1::vector.372"* %559 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.std::__1::vector.372"* %563 to i64*
  store i64 %592, i64* %593, align 8
  %594 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %595 = bitcast %"struct.x11::Xkb::KeyModMap"** %594 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %598 = bitcast %"struct.x11::Xkb::KeyModMap"** %597 to i64*
  store i64 %596, i64* %598, align 8
  %599 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %600 = bitcast %"struct.x11::Xkb::KeyModMap"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %603 = bitcast %"struct.x11::Xkb::KeyModMap"** %602 to i64*
  store i64 %601, i64* %603, align 8
  %604 = bitcast %"class.std::__1::vector.372"* %559 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %604, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %560, align 8
  br label %619

605:                                              ; preds = %553
  %606 = getelementptr inbounds %"class.absl::optional.367", %"class.absl::optional.367"* %554, i64 0, i32 0, i32 0, i32 0, i32 0
  %607 = load i8, i8* %606, align 8, !range !2
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %619, label %609

609:                                              ; preds = %605
  %610 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %611 = load %"struct.x11::Xkb::KeyModMap"*, %"struct.x11::Xkb::KeyModMap"** %610, align 8
  %612 = icmp eq %"struct.x11::Xkb::KeyModMap"* %611, null
  br i1 %612, label %618, label %613

613:                                              ; preds = %609
  %614 = ptrtoint %"struct.x11::Xkb::KeyModMap"* %611 to i64
  %615 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %616 = bitcast %"struct.x11::Xkb::KeyModMap"** %615 to i64*
  store i64 %614, i64* %616, align 8
  %617 = getelementptr inbounds %"struct.x11::Xkb::KeyModMap", %"struct.x11::Xkb::KeyModMap"* %611, i64 0, i32 0
  tail call void @_ZdlPv(i8* %617) #13
  br label %618

618:                                              ; preds = %613, %609
  store i8 0, i8* %606, align 8
  br label %619

619:                                              ; preds = %574, %589, %605, %618
  %620 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34
  %621 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0
  %622 = load i8, i8* %621, align 8, !range !2
  %623 = icmp eq i8 %622, 0
  br i1 %623, label %671, label %624

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0
  %626 = getelementptr inbounds %"class.absl::optional.379", %"class.absl::optional.379"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %627 = load i8, i8* %626, align 8, !range !2
  %628 = icmp eq i8 %627, 0
  %629 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %628, label %655, label %630

630:                                              ; preds = %624
  %631 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %629, i64 0, i32 0, i32 0
  %632 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %631, align 8
  %633 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %632, null
  br i1 %633, label %640, label %634

634:                                              ; preds = %630
  %635 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %632 to i64
  %636 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %637 = bitcast %"struct.x11::Xkb::KeyVModMap"** %636 to i64*
  store i64 %635, i64* %637, align 8
  %638 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %632, i64 0, i32 0
  tail call void @_ZdlPv(i8* %638) #13
  %639 = bitcast %"class.std::__1::vector.384"* %629 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %639, i8 0, i64 24, i1 false) #14
  br label %640

640:                                              ; preds = %630, %634
  %641 = bitcast %"class.std::__1::vector.384"* %625 to i64*
  %642 = load i64, i64* %641, align 8
  %643 = bitcast %"class.std::__1::vector.384"* %629 to i64*
  store i64 %642, i64* %643, align 8
  %644 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %645 = bitcast %"struct.x11::Xkb::KeyVModMap"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %648 = bitcast %"struct.x11::Xkb::KeyVModMap"** %647 to i64*
  store i64 %646, i64* %648, align 8
  %649 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %650 = bitcast %"struct.x11::Xkb::KeyVModMap"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %653 = bitcast %"struct.x11::Xkb::KeyVModMap"** %652 to i64*
  store i64 %651, i64* %653, align 8
  %654 = bitcast %"class.std::__1::vector.384"* %625 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %654, i8 0, i64 24, i1 false) #14
  br label %685

655:                                              ; preds = %624
  %656 = bitcast %"class.std::__1::vector.384"* %629 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %656, i8 0, i64 24, i1 false) #14
  %657 = bitcast %"class.std::__1::vector.384"* %625 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = bitcast %"class.std::__1::vector.384"* %629 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %661 = bitcast %"struct.x11::Xkb::KeyVModMap"** %660 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %664 = bitcast %"struct.x11::Xkb::KeyVModMap"** %663 to i64*
  store i64 %662, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %666 = bitcast %"struct.x11::Xkb::KeyVModMap"** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %669 = bitcast %"struct.x11::Xkb::KeyVModMap"** %668 to i64*
  store i64 %667, i64* %669, align 8
  %670 = bitcast %"class.std::__1::vector.384"* %625 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %670, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %626, align 8
  br label %685

671:                                              ; preds = %619
  %672 = getelementptr inbounds %"class.absl::optional.379", %"class.absl::optional.379"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %673 = load i8, i8* %672, align 8, !range !2
  %674 = icmp eq i8 %673, 0
  br i1 %674, label %685, label %675

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %677 = load %"struct.x11::Xkb::KeyVModMap"*, %"struct.x11::Xkb::KeyVModMap"** %676, align 8
  %678 = icmp eq %"struct.x11::Xkb::KeyVModMap"* %677, null
  br i1 %678, label %684, label %679

679:                                              ; preds = %675
  %680 = ptrtoint %"struct.x11::Xkb::KeyVModMap"* %677 to i64
  %681 = getelementptr inbounds %"struct.x11::Xkb::GetMapReply", %"struct.x11::Xkb::GetMapReply"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %682 = bitcast %"struct.x11::Xkb::KeyVModMap"** %681 to i64*
  store i64 %680, i64* %682, align 8
  %683 = getelementptr inbounds %"struct.x11::Xkb::KeyVModMap", %"struct.x11::Xkb::KeyVModMap"* %677, i64 0, i32 0
  tail call void @_ZdlPv(i8* %683) #13
  br label %684

684:                                              ; preds = %679, %675
  store i8 0, i8* %672, align 8
  br label %685

685:                                              ; preds = %640, %655, %671, %684
  ret %"struct.x11::Xkb::GetMapReply"* %0
}

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.247*, %"class.std::__1::unique_ptr.249"*) local_unnamed_addr #10

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #10

declare %"struct.x11::Xkb::GetMapReply"* @_ZN3x116detail9ReadReplyINS_3Xkb11GetMapReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1117CoreKeyboardStateD2Ev(%"class.x11::CoreKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1117CoreKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1117CoreKeyboardStateD0Ev(%"class.x11::CoreKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3x1117CoreKeyboardStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.x11::CoreKeyboardState"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK3x1117CoreKeyboardState15KeysymToKeycodeEj(%"class.x11::CoreKeyboardState"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 1
  %4 = load %"class.x11::Connection"*, %"class.x11::Connection"** %3, align 8
  %5 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 10, i32 13
  %6 = load i8, i8* %5, align 2
  %7 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2
  %8 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.294"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to i32*
  br i1 %13, label %33, label %15

15:                                               ; preds = %2
  %16 = sub i64 %10, %12
  %17 = ashr exact i64 %16, 2
  br label %18

18:                                               ; preds = %15, %23
  %19 = phi i64 [ 0, %15 ], [ %24, %23 ]
  %20 = getelementptr inbounds i32, i32* %14, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %1
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = add nuw i64 %19, 1
  %25 = icmp ult i64 %24, %17
  br i1 %25, label %18, label %33

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i64
  %30 = udiv i64 %19, %29
  %31 = trunc i64 %30 to i8
  %32 = add i8 %6, %31
  br label %33

33:                                               ; preds = %23, %2, %26
  %34 = phi i8 [ %32, %26 ], [ 0, %2 ], [ 0, %23 ]
  ret i8 %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3x1117CoreKeyboardState15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::CoreKeyboardState"*, i8 zeroext, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 1
  %7 = load %"class.x11::Connection"*, %"class.x11::Connection"** %6, align 8
  %8 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 3
  %9 = load i16, i16* %8, align 8
  %10 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 2
  %12 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %7, i64 0, i32 10, i32 13
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %1 to i64
  %17 = zext i8 %15 to i64
  %18 = icmp ugt i8 %15, %1
  br i1 %18, label %134, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %7, i64 0, i32 10, i32 14
  %21 = load i8, i8* %20, align 1
  %22 = icmp ult i8 %21, %1
  br i1 %22, label %134, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %134, label %27

27:                                               ; preds = %23
  %28 = sub nsw i64 %16, %17
  %29 = zext i8 %25 to i64
  %30 = mul nsw i64 %28, %29
  %31 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %30
  %34 = icmp ugt i8 %25, 2
  br i1 %34, label %35, label %52

35:                                               ; preds = %27, %42
  %36 = phi i8 [ %43, %42 ], [ %25, %27 ]
  %37 = zext i8 %36 to i64
  %38 = add nsw i64 %37, -1
  %39 = getelementptr inbounds i32, i32* %33, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = add i8 %36, -1
  %44 = icmp ugt i8 %43, 2
  br i1 %44, label %35, label %52

45:                                               ; preds = %35
  %46 = zext i8 %11 to i32
  %47 = and i32 %46, %2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i32, i32* %33, i64 2
  %51 = add i8 %36, -2
  br label %52

52:                                               ; preds = %42, %49, %45, %27
  %53 = phi i8 [ %51, %49 ], [ %36, %45 ], [ %25, %27 ], [ %43, %42 ]
  %54 = phi i32* [ %50, %49 ], [ %33, %45 ], [ %33, %27 ], [ %33, %42 ]
  %55 = zext i8 %13 to i32
  %56 = and i32 %55, %2
  %57 = icmp ne i32 %56, 0
  %58 = icmp ugt i8 %53, 1
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %78

60:                                               ; preds = %52
  %61 = getelementptr inbounds i32, i32* %54, i64 1
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, -65408
  %64 = icmp ult i32 %63, 62
  %65 = and i32 %62, -65536
  %66 = icmp eq i32 %65, 285212672
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %78

68:                                               ; preds = %60
  %69 = and i32 %2, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  %72 = and i32 %2, 2
  %73 = icmp ne i32 %72, 0
  %74 = icmp eq i16 %9, -26
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %130

76:                                               ; preds = %71, %68
  %77 = load i32, i32* %54, align 4
  br label %130

78:                                               ; preds = %60, %52
  %79 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #14
  store i32 -1431655766, i32* %4, align 4
  %80 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  store i32 -1431655766, i32* %5, align 4
  %81 = and i32 %2, 1
  %82 = icmp ne i32 %81, 0
  %83 = and i32 %2, 2
  br i1 %82, label %96, label %84

84:                                               ; preds = %78
  %85 = icmp eq i32 %83, 0
  %86 = icmp eq i16 %9, 0
  %87 = or i1 %85, %86
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = icmp eq i8 %53, 1
  br i1 %89, label %94, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds i32, i32* %54, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %127

94:                                               ; preds = %90, %88
  %95 = load i32, i32* %54, align 4
  call fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32 %95, i32* nonnull %4, i32* nonnull %5) #14
  br label %127

96:                                               ; preds = %84, %78
  %97 = icmp ne i32 %83, 0
  %98 = icmp eq i16 %9, -27
  %99 = and i1 %97, %98
  %100 = icmp eq i8 %53, 1
  br i1 %99, label %108, label %101

101:                                              ; preds = %96
  br i1 %100, label %106, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds i32, i32* %54, i64 1
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %5, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %127

106:                                              ; preds = %102, %101
  %107 = load i32, i32* %54, align 4
  call fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32 %107, i32* nonnull %4, i32* nonnull %5) #14
  br label %127

108:                                              ; preds = %96
  br i1 %100, label %113, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds i32, i32* %54, i64 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %109, %108
  %114 = load i32, i32* %54, align 4
  br label %115

115:                                              ; preds = %113, %109
  %116 = phi i32 [ %114, %113 ], [ %111, %109 ]
  call fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32 %116, i32* nonnull %4, i32* nonnull %5) #14
  br i1 %82, label %127, label %117

117:                                              ; preds = %115
  %118 = load i32, i32* %54, align 4
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = load i32, i32* %5, align 4
  %122 = icmp ne i32 %116, %121
  %123 = load i32, i32* %4, align 4
  %124 = icmp eq i32 %123, %121
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127

126:                                              ; preds = %120
  call fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32 %118, i32* nonnull %4, i32* nonnull %5) #14
  br label %127

127:                                              ; preds = %126, %120, %117, %115, %106, %102, %94, %90
  %128 = phi i32* [ %4, %94 ], [ %54, %90 ], [ %5, %106 ], [ %5, %102 ], [ %5, %120 ], [ %5, %117 ], [ %5, %126 ], [ %5, %115 ]
  %129 = load i32, i32* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #14
  br label %130

130:                                              ; preds = %71, %76, %127
  %131 = phi i32 [ %77, %76 ], [ %129, %127 ], [ %62, %71 ]
  %132 = icmp eq i32 %131, 16777215
  %133 = select i1 %132, i32 0, i32 %131
  ret i32 %133

134:                                              ; preds = %23, %3, %19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3x1117CoreKeyboardState13UpdateMappingEv(%"class.x11::CoreKeyboardState"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 1
  %3 = load %"class.x11::Connection"*, %"class.x11::Connection"** %2, align 8
  %4 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.x11::CoreKeyboardState", %"class.x11::CoreKeyboardState"* %0, i64 0, i32 5
  tail call fastcc void @_ZN3x1112_GLOBAL__N_117UpdateMappingImplEPNS_10ConnectionEPNS_23GetKeyboardMappingReplyEPtPhS6_(%"class.x11::Connection"* %3, %"struct.x11::GetKeyboardMappingReply"* %4, i16* %5, i8* %6, i8* %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32, i32* nocapture, i32* nocapture) unnamed_addr #4 {
  %4 = alloca %"class.std::__1::basic_string.414", align 8
  %5 = alloca %"class.std::__1::basic_string.414", align 8
  %6 = alloca %"class.std::__1::basic_string.414", align 8
  %7 = and i32 %0, -16777216
  %8 = icmp eq i32 %7, 16777216
  br i1 %8, label %9, label %67

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string.414"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.std::__1::basic_string.414", %"class.std::__1::basic_string.414"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.414", %"class.std::__1::basic_string.414"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #14
  %13 = trunc i32 %0 to i16
  %14 = bitcast %"class.std::__1::basic_string.414"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  store i8 1, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string.414"* %4 to i16*
  store i16 %13, i16* %16, align 8
  %17 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 0, i16* %17, align 2
  %18 = bitcast %"class.std::__1::basic_string.414"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.std::__1::basic_string.414", %"class.std::__1::basic_string.414"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false) #14
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.414"* nonnull sret %5, i16* nonnull %16, i64 1) #14
  %20 = bitcast %"class.std::__1::basic_string.414"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #14
  %21 = load i8, i8* %15, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i16*, i16** %11, align 8
  %24 = select i1 %22, i16* %23, i16* %16
  %25 = load i64, i64* %12, align 8
  %26 = zext i8 %21 to i64
  %27 = select i1 %22, i64 %25, i64 %26
  call void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.414"* nonnull sret %6, i16* %24, i64 %27) #14
  %28 = bitcast %"class.std::__1::basic_string.414"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i16*, i16** %19, align 8
  %33 = bitcast %"class.std::__1::basic_string.414"* %5 to i16*
  %34 = select i1 %31, i16* %32, i16* %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = or i32 %36, 16777216
  %38 = bitcast %"class.std::__1::basic_string.414"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %9
  %43 = bitcast %"class.std::__1::basic_string.414"* %6 to i16*
  %44 = load i16, i16* %43, align 8
  br label %51

45:                                               ; preds = %9
  %46 = getelementptr inbounds %"class.std::__1::basic_string.414", %"class.std::__1::basic_string.414"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = load i16, i16* %47, align 2
  %49 = bitcast i16* %47 to i8*
  call void @_ZdlPv(i8* %49) #13
  %50 = load i8, i8* %29, align 1
  br label %51

51:                                               ; preds = %45, %42
  %52 = phi i16 [ %48, %45 ], [ %44, %42 ]
  %53 = phi i8 [ %50, %45 ], [ %30, %42 ]
  %54 = zext i16 %52 to i32
  %55 = or i32 %54, 16777216
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  %56 = icmp slt i8 %53, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string.414"* %5 to i8**
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %57, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  %61 = load i8, i8* %15, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::basic_string.414"* %4 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %63, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  br label %242

67:                                               ; preds = %3
  %68 = lshr i32 %0, 8
  switch i32 %68, label %242 [
    i32 0, label %69
    i32 1, label %99
    i32 2, label %142
    i32 3, label %172
    i32 6, label %193
    i32 7, label %209
    i32 19, label %232
  ]

69:                                               ; preds = %67
  %70 = add i32 %0, -65
  %71 = icmp ult i32 %70, 26
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = add nuw nsw i32 %0, 32
  br label %242

74:                                               ; preds = %69
  %75 = add i32 %0, -97
  %76 = icmp ult i32 %75, 26
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = add nsw i32 %0, -32
  br label %242

79:                                               ; preds = %74
  %80 = add i32 %0, -192
  %81 = icmp ult i32 %80, 23
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = add nuw nsw i32 %0, 32
  br label %242

84:                                               ; preds = %79
  %85 = add i32 %0, -224
  %86 = icmp ult i32 %85, 23
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = add nsw i32 %0, -32
  br label %242

89:                                               ; preds = %84
  %90 = add i32 %0, -216
  %91 = icmp ult i32 %90, 7
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = add nuw nsw i32 %0, 32
  br label %242

94:                                               ; preds = %89
  %95 = add i32 %0, -248
  %96 = icmp ult i32 %95, 7
  %97 = add nsw i32 %0, -32
  %98 = select i1 %96, i32 %97, i32 %0
  br label %242

99:                                               ; preds = %67
  %100 = icmp eq i32 %0, 417
  br i1 %100, label %242, label %101

101:                                              ; preds = %99
  %102 = add i32 %0, -419
  %103 = icmp ult i32 %102, 4
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = add nuw nsw i32 %0, 16
  br label %242

106:                                              ; preds = %101
  %107 = add i32 %0, -425
  %108 = icmp ult i32 %107, 4
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = add nuw nsw i32 %0, 16
  br label %242

111:                                              ; preds = %106
  %112 = and i32 %0, -2
  %113 = icmp eq i32 %112, 430
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = add i32 %0, 16
  br label %242

116:                                              ; preds = %111
  %117 = icmp eq i32 %0, 433
  br i1 %117, label %242, label %118

118:                                              ; preds = %116
  %119 = add i32 %0, -435
  %120 = icmp ult i32 %119, 4
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = add nsw i32 %0, -16
  br label %242

123:                                              ; preds = %118
  %124 = add i32 %0, -441
  %125 = icmp ult i32 %124, 4
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = add nsw i32 %0, -16
  br label %242

128:                                              ; preds = %123
  %129 = icmp eq i32 %112, 446
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = add i32 %0, -16
  br label %242

132:                                              ; preds = %128
  %133 = add i32 %0, -448
  %134 = icmp ult i32 %133, 31
  br i1 %134, label %135, label %137

135:                                              ; preds = %132
  %136 = add nuw nsw i32 %0, 32
  br label %242

137:                                              ; preds = %132
  %138 = add i32 %0, -480
  %139 = icmp ult i32 %138, 31
  %140 = add nsw i32 %0, -32
  %141 = select i1 %139, i32 %140, i32 %0
  br label %242

142:                                              ; preds = %67
  %143 = add i32 %0, -673
  %144 = icmp ult i32 %143, 6
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = add nuw nsw i32 %0, 16
  br label %242

147:                                              ; preds = %142
  %148 = add i32 %0, -683
  %149 = icmp ult i32 %148, 2
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = add nuw nsw i32 %0, 16
  br label %242

152:                                              ; preds = %147
  %153 = add i32 %0, -689
  %154 = icmp ult i32 %153, 6
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  %156 = add nsw i32 %0, -16
  br label %242

157:                                              ; preds = %152
  %158 = add i32 %0, -699
  %159 = icmp ult i32 %158, 2
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = add nsw i32 %0, -16
  br label %242

162:                                              ; preds = %157
  %163 = add i32 %0, -709
  %164 = icmp ult i32 %163, 26
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = add nuw nsw i32 %0, 32
  br label %242

167:                                              ; preds = %162
  %168 = add i32 %0, -741
  %169 = icmp ult i32 %168, 26
  %170 = add nsw i32 %0, -32
  %171 = select i1 %169, i32 %170, i32 %0
  br label %242

172:                                              ; preds = %67
  %173 = add i32 %0, -931
  %174 = icmp ult i32 %173, 10
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = add nuw nsw i32 %0, 16
  br label %242

177:                                              ; preds = %172
  %178 = add i32 %0, -947
  %179 = icmp ult i32 %178, 10
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  %181 = add nsw i32 %0, -16
  br label %242

182:                                              ; preds = %177
  switch i32 %0, label %183 [
    i32 957, label %242
    i32 959, label %242
  ]

183:                                              ; preds = %182
  %184 = add i32 %0, -960
  %185 = icmp ult i32 %184, 31
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = add nuw nsw i32 %0, 32
  br label %242

188:                                              ; preds = %183
  %189 = add i32 %0, -992
  %190 = icmp ult i32 %189, 31
  %191 = add nsw i32 %0, -32
  %192 = select i1 %190, i32 %191, i32 %0
  br label %242

193:                                              ; preds = %67
  %194 = add i32 %0, -1713
  %195 = icmp ult i32 %194, 15
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = add nsw i32 %0, -16
  br label %242

198:                                              ; preds = %193
  %199 = add i32 %0, -1697
  %200 = icmp ult i32 %199, 15
  br i1 %200, label %201, label %203

201:                                              ; preds = %198
  %202 = add nuw nsw i32 %0, 16
  br label %242

203:                                              ; preds = %198
  %204 = and i32 %0, -32
  switch i32 %204, label %242 [
    i32 1760, label %205
    i32 1728, label %207
  ]

205:                                              ; preds = %203
  %206 = add i32 %0, -32
  br label %242

207:                                              ; preds = %203
  %208 = add i32 %0, 32
  br label %242

209:                                              ; preds = %67
  %210 = add i32 %0, -1953
  %211 = icmp ult i32 %210, 11
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = add nuw nsw i32 %0, 16
  br label %242

214:                                              ; preds = %209
  %215 = add i32 %0, -1969
  %216 = icmp ult i32 %215, 11
  br i1 %216, label %217, label %220

217:                                              ; preds = %214
  switch i32 %0, label %218 [
    i32 1978, label %242
    i32 1974, label %242
  ]

218:                                              ; preds = %217
  %219 = add nsw i32 %0, -16
  br label %242

220:                                              ; preds = %214
  %221 = add i32 %0, -1985
  %222 = icmp ult i32 %221, 25
  br i1 %222, label %223, label %225

223:                                              ; preds = %220
  %224 = add nuw nsw i32 %0, 32
  br label %242

225:                                              ; preds = %220
  %226 = add i32 %0, -2017
  %227 = icmp ult i32 %226, 25
  %228 = icmp ne i32 %0, 2035
  %229 = and i1 %228, %227
  %230 = add nsw i32 %0, -32
  %231 = select i1 %229, i32 %230, i32 %0
  br label %242

232:                                              ; preds = %67
  %233 = add i32 %0, -5052
  %234 = icmp ult i32 %233, 3
  br i1 %234, label %235, label %242

235:                                              ; preds = %232
  %236 = sext i32 %233 to i64
  %237 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_, i64 0, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %233 to i64
  %240 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_.1, i64 0, i64 %239
  %241 = load i32, i32* %240, align 4
  br label %242

242:                                              ; preds = %235, %232, %225, %188, %167, %137, %94, %182, %182, %116, %99, %66, %67, %72, %77, %82, %87, %92, %104, %109, %114, %121, %126, %130, %135, %145, %150, %155, %160, %165, %175, %180, %186, %196, %201, %203, %205, %207, %212, %217, %217, %218, %223
  %243 = phi i32 [ %37, %66 ], [ %0, %67 ], [ %0, %232 ], [ %213, %212 ], [ %0, %218 ], [ %0, %217 ], [ %0, %217 ], [ %224, %223 ], [ %197, %196 ], [ %0, %201 ], [ %0, %203 ], [ %0, %207 ], [ %206, %205 ], [ %176, %175 ], [ %0, %180 ], [ %187, %186 ], [ %146, %145 ], [ %151, %150 ], [ %0, %155 ], [ %0, %160 ], [ %166, %165 ], [ %105, %104 ], [ %110, %109 ], [ %115, %114 ], [ %0, %121 ], [ %0, %126 ], [ %0, %130 ], [ %136, %135 ], [ %73, %72 ], [ %0, %77 ], [ %83, %82 ], [ %0, %87 ], [ %93, %92 ], [ 433, %99 ], [ 433, %116 ], [ 959, %182 ], [ %0, %94 ], [ %0, %137 ], [ %0, %167 ], [ 959, %182 ], [ %0, %188 ], [ %0, %225 ], [ %238, %235 ]
  %244 = phi i32 [ %55, %66 ], [ %0, %67 ], [ %0, %232 ], [ %0, %212 ], [ %219, %218 ], [ %0, %217 ], [ %0, %217 ], [ %0, %223 ], [ %0, %196 ], [ %202, %201 ], [ %0, %203 ], [ %208, %207 ], [ %0, %205 ], [ %0, %175 ], [ %181, %180 ], [ %0, %186 ], [ %0, %145 ], [ %0, %150 ], [ %156, %155 ], [ %161, %160 ], [ %0, %165 ], [ %0, %104 ], [ %0, %109 ], [ %0, %114 ], [ %122, %121 ], [ %127, %126 ], [ %131, %130 ], [ %0, %135 ], [ %0, %72 ], [ %78, %77 ], [ %0, %82 ], [ %88, %87 ], [ %0, %92 ], [ 417, %99 ], [ 417, %116 ], [ 957, %182 ], [ %98, %94 ], [ %141, %137 ], [ %171, %167 ], [ 957, %182 ], [ %192, %188 ], [ %231, %225 ], [ %241, %235 ]
  store i32 %243, i32* %1, align 4
  store i32 %244, i32* %2, align 4
  ret void
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.414"* sret, i16*, i64) local_unnamed_addr #10

declare void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.414"* sret, i16*, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3x1112_GLOBAL__N_117UpdateMappingImplEPNS_10ConnectionEPNS_23GetKeyboardMappingReplyEPtPhS6_(%"class.x11::Connection"*, %"struct.x11::GetKeyboardMappingReply"* nocapture, i16* nocapture, i8* nocapture, i8* nocapture) unnamed_addr #4 {
  %6 = alloca %"class.x11::Future.423", align 8
  %7 = alloca %"struct.x11::GetKeyboardMappingRequest", align 1
  %8 = alloca %"class.x11::Future.424", align 8
  %9 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %0, i64 0, i32 10, i32 13
  %10 = load i8, i8* %9, align 2
  %11 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %0, i64 0, i32 10, i32 14
  %12 = load i8, i8* %11, align 1
  %13 = sub i8 1, %10
  %14 = add i8 %13, %12
  %15 = bitcast %"class.x11::Future.423"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.x11::Future.423", %"class.x11::Future.423"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.x11::GetKeyboardMappingRequest", %"struct.x11::GetKeyboardMappingRequest"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #14
  store i8 %10, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.x11::GetKeyboardMappingRequest", %"struct.x11::GetKeyboardMappingRequest"* %7, i64 0, i32 1
  store i8 %14, i8* %19, align 1
  %20 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto18GetKeyboardMappingERKNS_25GetKeyboardMappingRequestE(%"class.x11::XProto"* %17, %"struct.x11::GetKeyboardMappingRequest"* nonnull dereferenceable(2) %7) #14
  store %"class.x11::Connection::FutureImpl"* %20, %"class.x11::Connection::FutureImpl"** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #14
  %21 = bitcast %"class.x11::Future.424"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.x11::Future.424", %"class.x11::Future.424"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto18GetModifierMappingEv(%"class.x11::XProto"* %17) #14
  store %"class.x11::Connection::FutureImpl"* %23, %"class.x11::Connection::FutureImpl"** %22, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %0) #14
  %24 = call { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_23GetKeyboardMappingReplyEE4SyncEv(%"class.x11::Future.423"* nonnull %6)
  %25 = extractvalue { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } %24, 0
  %26 = extractvalue { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } %24, 1
  %27 = icmp eq %"struct.x11::GetKeyboardMappingReply"* %25, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %5
  %29 = bitcast %"struct.x11::GetKeyboardMappingReply"* %25 to i32*
  %30 = bitcast %"struct.x11::GetKeyboardMappingReply"* %1 to i32*
  %31 = load i32, i32* %29, align 8
  store i32 %31, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 2
  %34 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %32, i64 0, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %28
  %38 = ptrtoint i32* %35 to i64
  %39 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast i32* %35 to i8*
  call void @_ZdlPv(i8* %41) #13
  %42 = bitcast %"class.std::__1::vector.294"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #14
  br label %43

43:                                               ; preds = %28, %37
  %44 = bitcast %"class.std::__1::vector.294"* %33 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.294"* %32 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 2, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast i32** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast i32** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast i32** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.std::__1::vector.294"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #14
  br label %58

58:                                               ; preds = %5, %43
  %59 = icmp eq %"class.x11::Error"* %26, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.x11::Error"* %26 to void (%"class.x11::Error"*)***
  %62 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %62, i64 1
  %64 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %63, align 8
  call void %64(%"class.x11::Error"* nonnull %26) #14
  br label %65

65:                                               ; preds = %60, %58
  br i1 %27, label %77, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 2, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = icmp eq i32* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = ptrtoint i32* %68 to i64
  %72 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 2, i32 0, i32 1
  %73 = bitcast i32** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %66
  %76 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %25, i64 0, i32 0
  call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %65, %75
  %78 = call { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_23GetModifierMappingReplyEE4SyncEv(%"class.x11::Future.424"* nonnull %8)
  %79 = extractvalue { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } %78, 0
  %80 = extractvalue { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } %78, 1
  %81 = icmp eq %"struct.x11::GetModifierMappingReply"* %79, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = bitcast %"struct.x11::GetModifierMappingReply"* %79 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = trunc i32 %84 to i8
  %86 = getelementptr inbounds %"struct.x11::GetModifierMappingReply", %"struct.x11::GetModifierMappingReply"* %79, i64 0, i32 2
  %87 = getelementptr inbounds %"class.std::__1::vector.425", %"class.std::__1::vector.425"* %86, i64 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.std::__1::vector.425"* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #14
  br label %90

90:                                               ; preds = %77, %82
  %91 = phi i8 [ %85, %82 ], [ 0, %77 ]
  %92 = phi i8* [ %88, %82 ], [ null, %77 ]
  %93 = icmp eq %"class.x11::Error"* %80, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.x11::Error"* %80 to void (%"class.x11::Error"*)***
  %96 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %96, i64 1
  %98 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %97, align 8
  call void %98(%"class.x11::Error"* nonnull %80) #14
  br label %99

99:                                               ; preds = %94, %90
  br i1 %81, label %110, label %100

100:                                              ; preds = %99
  %101 = getelementptr inbounds %"struct.x11::GetModifierMappingReply", %"struct.x11::GetModifierMappingReply"* %79, i64 0, i32 2, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = ptrtoint i8* %102 to i64
  %106 = getelementptr inbounds %"struct.x11::GetModifierMappingReply", %"struct.x11::GetModifierMappingReply"* %79, i64 0, i32 2, i32 0, i32 1
  %107 = bitcast i8** %106 to i64*
  store i64 %105, i64* %107, align 8
  call void @_ZdlPv(i8* nonnull %102) #13
  br label %108

108:                                              ; preds = %104, %100
  %109 = getelementptr inbounds %"struct.x11::GetModifierMappingReply", %"struct.x11::GetModifierMappingReply"* %79, i64 0, i32 0
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %99, %108
  %111 = icmp eq i8 %91, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = zext i8 %91 to i64
  %114 = shl nuw nsw i64 %113, 1
  %115 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 0
  br label %120

116:                                              ; preds = %138, %110
  %117 = phi i64 [ 0, %110 ], [ %113, %138 ]
  %118 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %1, i64 0, i32 0
  %119 = zext i8 %91 to i64
  br label %141

120:                                              ; preds = %138, %112
  %121 = phi i64 [ 0, %112 ], [ %139, %138 ]
  %122 = load i8, i8* %115, align 8
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %120
  %125 = add nuw nsw i64 %114, %121
  %126 = getelementptr inbounds i8, i8* %92, i64 %125
  br label %127

127:                                              ; preds = %124, %133
  %128 = phi i32 [ 0, %124 ], [ %134, %133 ]
  %129 = load i8, i8* %126, align 1
  %130 = call fastcc i32 @_ZN3x1112_GLOBAL__N_121KeycodeColumnToKeysymENS_7KeyCodeEiRKNS_23GetKeyboardMappingReplyEhh(i8 zeroext %129, i32 %128, %"struct.x11::GetKeyboardMappingReply"* dereferenceable(32) %1, i8 zeroext %10, i8 zeroext %12)
  switch i32 %130, label %133 [
    i32 65509, label %131
    i32 65025, label %131
    i32 65510, label %132
  ]

131:                                              ; preds = %127, %127
  store i16 -27, i16* %2, align 2
  br label %138

132:                                              ; preds = %127
  store i16 -26, i16* %2, align 2
  br label %133

133:                                              ; preds = %127, %132
  %134 = add nuw nsw i32 %128, 1
  %135 = load i8, i8* %115, align 8
  %136 = zext i8 %135 to i32
  %137 = icmp ult i32 %134, %136
  br i1 %137, label %127, label %138

138:                                              ; preds = %133, %120, %131
  %139 = add nuw nsw i64 %121, 1
  %140 = icmp eq i64 %139, %113
  br i1 %140, label %116, label %120

141:                                              ; preds = %163, %116
  %142 = phi i64 [ 3, %116 ], [ %164, %163 ]
  br i1 %111, label %163, label %143

143:                                              ; preds = %141
  %144 = mul nuw nsw i64 %142, %119
  %145 = trunc i64 %142 to i32
  %146 = shl i32 1, %145
  %147 = trunc i32 %146 to i8
  %148 = load i8, i8* %118, align 8
  br label %166

149:                                              ; preds = %163
  %150 = icmp eq i8* %92, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %149
  call void @_ZdlPv(i8* nonnull %92) #13
  br label %152

152:                                              ; preds = %149, %151
  %153 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %22, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %22, align 8
  %154 = icmp eq %"class.x11::Connection::FutureImpl"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.x11::Connection::FutureImpl"* %153 to i8*
  call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  %158 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %16, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %16, align 8
  %159 = icmp eq %"class.x11::Connection::FutureImpl"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.x11::Connection::FutureImpl"* %158 to i8*
  call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %157, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  ret void

163:                                              ; preds = %173, %141
  %164 = add nuw nsw i64 %142, 1
  %165 = icmp eq i64 %164, 8
  br i1 %165, label %149, label %141

166:                                              ; preds = %173, %143
  %167 = phi i8 [ %148, %143 ], [ %174, %173 ]
  %168 = phi i64 [ 0, %143 ], [ %175, %173 ]
  %169 = icmp eq i8 %167, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %166
  %171 = add nuw nsw i64 %168, %144
  %172 = getelementptr inbounds i8, i8* %92, i64 %171
  br label %177

173:                                              ; preds = %186, %166
  %174 = phi i8 [ 0, %166 ], [ %188, %186 ]
  %175 = add nuw nsw i64 %168, 1
  %176 = icmp eq i64 %175, %117
  br i1 %176, label %163, label %166

177:                                              ; preds = %170, %186
  %178 = phi i32 [ 0, %170 ], [ %187, %186 ]
  %179 = load i8, i8* %172, align 1
  %180 = call fastcc i32 @_ZN3x1112_GLOBAL__N_121KeycodeColumnToKeysymENS_7KeyCodeEiRKNS_23GetKeyboardMappingReplyEhh(i8 zeroext %179, i32 %178, %"struct.x11::GetKeyboardMappingReply"* dereferenceable(32) %1, i8 zeroext %10, i8 zeroext %12)
  switch i32 %180, label %186 [
    i32 65406, label %182
    i32 65407, label %181
  ]

181:                                              ; preds = %177
  br label %182

182:                                              ; preds = %177, %181
  %183 = phi i8* [ %4, %181 ], [ %3, %177 ]
  %184 = load i8, i8* %183, align 1
  %185 = or i8 %184, %147
  store i8 %185, i8* %183, align 1
  br label %186

186:                                              ; preds = %182, %177
  %187 = add nuw nsw i32 %178, 1
  %188 = load i8, i8* %118, align 8
  %189 = zext i8 %188 to i32
  %190 = icmp ult i32 %187, %189
  br i1 %190, label %177, label %173
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto18GetKeyboardMappingERKNS_25GetKeyboardMappingRequestE(%"class.x11::XProto"*, %"struct.x11::GetKeyboardMappingRequest"* dereferenceable(2)) local_unnamed_addr #10

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto18GetModifierMappingEv(%"class.x11::XProto"*) local_unnamed_addr #10

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_23GetKeyboardMappingReplyEE4SyncEv(%"class.x11::Future.423"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.423", %"class.x11::Future.423"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #14
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #14
  %23 = call %"struct.x11::GetKeyboardMappingReply"* @_ZN3x116detail9ReadReplyINS_23GetKeyboardMappingReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #14
  %24 = ptrtoint %"struct.x11::GetKeyboardMappingReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #14
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetKeyboardMappingReply"*
  %47 = insertvalue { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetKeyboardMappingReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetKeyboardMappingReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_23GetModifierMappingReplyEE4SyncEv(%"class.x11::Future.424"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.424", %"class.x11::Future.424"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #14
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #14
  %23 = call %"struct.x11::GetModifierMappingReply"* @_ZN3x116detail9ReadReplyINS_23GetModifierMappingReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #14
  %24 = ptrtoint %"struct.x11::GetModifierMappingReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #14
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetModifierMappingReply"*
  %47 = insertvalue { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetModifierMappingReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetModifierMappingReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3x1112_GLOBAL__N_121KeycodeColumnToKeysymENS_7KeyCodeEiRKNS_23GetKeyboardMappingReplyEhh(i8 zeroext, i32, %"struct.x11::GetKeyboardMappingReply"* nocapture readonly dereferenceable(32), i8 zeroext, i8 zeroext) unnamed_addr #4 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %2, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = icmp slt i32 %1, 0
  br i1 %10, label %86, label %11

11:                                               ; preds = %5
  %12 = zext i8 %9 to i32
  %13 = icmp sle i32 %12, %1
  %14 = icmp sgt i32 %1, 3
  %15 = and i1 %14, %13
  br i1 %15, label %86, label %16

16:                                               ; preds = %11
  %17 = icmp ult i8 %0, %3
  %18 = icmp ugt i8 %0, %4
  %19 = or i1 %17, %18
  br i1 %19, label %86, label %20

20:                                               ; preds = %16
  %21 = zext i8 %3 to i32
  %22 = zext i8 %0 to i32
  %23 = sub nsw i32 %22, %21
  %24 = mul nsw i32 %23, %12
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.x11::GetKeyboardMappingReply", %"struct.x11::GetKeyboardMappingReply"* %2, i64 0, i32 2, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %25
  %29 = icmp slt i32 %1, 4
  br i1 %29, label %30, label %81

30:                                               ; preds = %20
  %31 = icmp sgt i32 %1, 1
  br i1 %31, label %32, label %53

32:                                               ; preds = %30
  %33 = icmp ugt i8 %9, 2
  br i1 %33, label %34, label %47

34:                                               ; preds = %32, %41
  %35 = phi i8 [ %42, %41 ], [ %9, %32 ]
  %36 = zext i8 %35 to i64
  %37 = add nsw i64 %36, -1
  %38 = getelementptr inbounds i32, i32* %28, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = add i8 %35, -1
  %43 = icmp ugt i8 %42, 2
  br i1 %43, label %34, label %44

44:                                               ; preds = %41, %34
  %45 = phi i8 [ %35, %34 ], [ %42, %41 ]
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %44, %32
  %48 = phi i32 [ %46, %44 ], [ %12, %32 ]
  %49 = phi i8 [ %45, %44 ], [ %9, %32 ]
  %50 = icmp ult i8 %49, 3
  %51 = add nsw i32 %1, -2
  %52 = select i1 %50, i32 %51, i32 %1
  br label %53

53:                                               ; preds = %47, %30
  %54 = phi i32 [ %48, %47 ], [ %12, %30 ]
  %55 = phi i32 [ %52, %47 ], [ %1, %30 ]
  %56 = or i32 %55, 1
  %57 = icmp slt i32 %56, %54
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = sext i32 %56 to i64
  %60 = getelementptr inbounds i32, i32* %28, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %81

63:                                               ; preds = %53, %58
  %64 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #14
  store i32 -1431655766, i32* %6, align 4
  %65 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 -1431655766, i32* %7, align 4
  %66 = and i32 %55, -2
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %28, i64 %67
  %69 = load i32, i32* %68, align 4
  call fastcc void @_ZN3x1112_GLOBAL__N_111ConvertCaseENS_6KeySymEPS1_S2_(i32 %69, i32* nonnull %6, i32* nonnull %7)
  %70 = and i32 %55, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %63
  %73 = load i32, i32* %6, align 4
  br label %79

74:                                               ; preds = %63
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* %6, align 4
  %77 = icmp eq i32 %75, %76
  %78 = select i1 %77, i32 0, i32 %75
  br label %79

79:                                               ; preds = %74, %72
  %80 = phi i32 [ %73, %72 ], [ %78, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #14
  br label %86

81:                                               ; preds = %58, %20
  %82 = phi i32 [ %55, %58 ], [ %1, %20 ]
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %28, i64 %83
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %79, %81, %5, %16, %11
  %87 = phi i32 [ 0, %11 ], [ 0, %16 ], [ 0, %5 ], [ %80, %79 ], [ %85, %81 ]
  ret i32 %87
}

declare %"struct.x11::GetKeyboardMappingReply"* @_ZN3x116detail9ReadReplyINS_23GetKeyboardMappingReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #10

declare %"struct.x11::GetModifierMappingReply"* @_ZN3x116detail9ReadReplyINS_23GetModifierMappingReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
