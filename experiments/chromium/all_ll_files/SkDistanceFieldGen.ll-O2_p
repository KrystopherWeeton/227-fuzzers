; ModuleID = '../../third_party/skia/src/core/SkDistanceFieldGen.cpp'
source_filename = "../../third_party/skia/src/core/SkDistanceFieldGen.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%struct.SkPoint = type { float, float }
%struct.DFData = type { float, float, %struct.SkPoint }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z34SkGenerateDistanceFieldFromA8ImagePhPKhiim(i8* nocapture, i8* nocapture readonly, i32, i32, i64) local_unnamed_addr #0 {
  %6 = alloca %class.SkAutoSMalloc, align 8
  %7 = bitcast %class.SkAutoSMalloc* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2
  %9 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 1024, i1 false)
  %10 = add nsw i32 %2, 2
  %11 = add nsw i32 %3, 2
  %12 = mul nsw i32 %11, %10
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2, i64 0
  %15 = bitcast %class.SkAutoSMalloc* %6 to i32**
  store i32* %14, i32** %15, align 8
  %16 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 1
  store i64 1024, i64* %16, align 8
  %17 = icmp ult i32 %12, 1025
  %18 = bitcast i32* %14 to i8*
  br i1 %17, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %21 = call i8* @_Z15sk_malloc_flagsmj(i64 %13, i32 2) #5
  store i8* %21, i8** %20, align 8
  store i64 %13, i64* %16, align 8
  br label %22

22:                                               ; preds = %5, %19
  %23 = phi i8* [ %18, %5 ], [ %21, %19 ]
  %24 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %25 = sext i32 %10 to i64
  %26 = icmp eq i32 %10, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %25, i1 false) #5
  br label %28

28:                                               ; preds = %22, %27
  %29 = sext i32 %2 to i64
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = icmp sgt i32 %3, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %28
  %34 = and i32 %3, 1
  %35 = icmp eq i32 %3, 1
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = sub i32 %3, %34
  br label %55

38:                                               ; preds = %55, %33
  %39 = phi i8* [ undef, %33 ], [ %66, %55 ]
  %40 = phi i8* [ %31, %33 ], [ %66, %55 ]
  %41 = phi i8* [ %1, %33 ], [ %64, %55 ]
  %42 = icmp eq i32 %34, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 0, i8* %40, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %41, i64 %29, i1 false)
  %45 = getelementptr inbounds i8, i8* %44, i64 %29
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  br label %47

47:                                               ; preds = %43, %38, %28
  %48 = phi i8* [ %31, %28 ], [ %39, %38 ], [ %46, %43 ]
  br i1 %26, label %50, label %49

49:                                               ; preds = %47
  call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 0, i64 %25, i1 false) #5
  br label %50

50:                                               ; preds = %47, %49
  call fastcc void @_ZL34generate_distance_field_from_imagePhPKhii(i8* %0, i8* %23, i32 %2, i32 %3)
  %51 = load i8*, i8** %24, align 8
  %52 = icmp eq i8* %51, %18
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_Z7sk_freePv(i8* %51) #5
  br label %54

54:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %7) #5
  ret i1 true

55:                                               ; preds = %55, %36
  %56 = phi i8* [ %31, %36 ], [ %66, %55 ]
  %57 = phi i8* [ %1, %36 ], [ %64, %55 ]
  %58 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 0, i8* %56, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %57, i64 %29, i1 false)
  %60 = getelementptr inbounds i8, i8* %57, i64 %4
  %61 = getelementptr inbounds i8, i8* %59, i64 %29
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 0, i8* %61, align 1
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 0, i8* %62, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %60, i64 %29, i1 false)
  %64 = getelementptr inbounds i8, i8* %60, i64 %4
  %65 = getelementptr inbounds i8, i8* %63, i64 %29
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 0, i8* %65, align 1
  %67 = add i32 %58, -2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %38, label %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL34generate_distance_field_from_imagePhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) unnamed_addr #0 {
  %5 = alloca %struct.SkPoint, align 4
  %6 = add nsw i32 %2, 10
  %7 = add nsw i32 %3, 10
  %8 = mul nsw i32 %7, %6
  %9 = sext i32 %8 to i64
  %10 = mul nsw i64 %9, 17
  %11 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %10, i32 3) #5
  %12 = bitcast i8* %11 to %struct.DFData*
  %13 = shl nsw i64 %9, 4
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = add nsw i32 %2, 2
  %16 = add nsw i32 %3, 2
  %17 = shl nsw i32 %6, 2
  %18 = icmp sgt i32 %16, 0
  br i1 %18, label %19, label %190

19:                                               ; preds = %4
  %20 = add nsw i32 %17, 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds %struct.DFData, %struct.DFData* %12, i64 %23
  %25 = getelementptr inbounds %struct.DFData, %struct.DFData* %24, i64 4
  %26 = icmp sgt i32 %15, 0
  %27 = add nsw i32 %2, 1
  %28 = add nsw i32 %3, 1
  %29 = sub i32 -2, %2
  %30 = sub i32 -3, %2
  %31 = xor i32 %2, -1
  %32 = add nsw i32 %2, 3
  %33 = sext i32 %30 to i64
  %34 = sext i32 %29 to i64
  %35 = sext i32 %31 to i64
  %36 = sext i32 %27 to i64
  %37 = sext i32 %15 to i64
  %38 = sext i32 %32 to i64
  br label %39

39:                                               ; preds = %47, %19
  %40 = phi i32 [ 0, %19 ], [ %53, %47 ]
  %41 = phi %struct.DFData* [ %25, %19 ], [ %51, %47 ]
  %42 = phi i8* [ %22, %19 ], [ %52, %47 ]
  %43 = phi i8* [ %1, %19 ], [ %48, %47 ]
  br i1 %26, label %44, label %47

44:                                               ; preds = %39
  %45 = icmp eq i32 %40, 0
  %46 = icmp eq i32 %40, %28
  br label %55

47:                                               ; preds = %184, %39
  %48 = phi i8* [ %43, %39 ], [ %186, %184 ]
  %49 = phi i8* [ %42, %39 ], [ %187, %184 ]
  %50 = phi %struct.DFData* [ %41, %39 ], [ %185, %184 ]
  %51 = getelementptr inbounds %struct.DFData, %struct.DFData* %50, i64 8
  %52 = getelementptr inbounds i8, i8* %49, i64 8
  %53 = add nuw nsw i32 %40, 1
  %54 = icmp eq i32 %53, %16
  br i1 %54, label %190, label %39

55:                                               ; preds = %184, %44
  %56 = phi i32 [ 0, %44 ], [ %188, %184 ]
  %57 = phi %struct.DFData* [ %41, %44 ], [ %185, %184 ]
  %58 = phi i8* [ %42, %44 ], [ %187, %184 ]
  %59 = phi i8* [ %43, %44 ], [ %186, %184 ]
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, -1
  %62 = uitofp i8 %60 to float
  %63 = fmul float %62, 0x3F70101000000000
  %64 = select i1 %61, float 1.000000e+00, float %63
  %65 = getelementptr inbounds %struct.DFData, %struct.DFData* %57, i64 0, i32 0
  store float %64, float* %65, align 4
  %66 = icmp eq i32 %56, 0
  %67 = select i1 %66, i32 218, i32 255
  %68 = icmp eq i32 %56, %27
  %69 = and i32 %67, 109
  %70 = select i1 %68, i32 %69, i32 %67
  %71 = and i32 %70, 227
  %72 = select i1 %45, i32 %71, i32 %70
  %73 = and i32 %72, 31
  %74 = select i1 %46, i32 %73, i32 %72
  %75 = load i8, i8* %59, align 1
  %76 = lshr i8 %75, 7
  %77 = icmp ne i8 %75, 0
  %78 = and i32 %74, 1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %86, label %83

80:                                               ; preds = %90
  %81 = and i32 %74, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %98, label %95

83:                                               ; preds = %55
  %84 = getelementptr inbounds i8, i8* %59, i64 -1
  %85 = load i8, i8* %84, align 1
  br label %86

86:                                               ; preds = %83, %55
  %87 = phi i8 [ %85, %83 ], [ 0, %55 ]
  %88 = lshr i8 %87, 7
  %89 = icmp eq i8 %76, %88
  br i1 %89, label %90, label %183

90:                                               ; preds = %86
  %91 = icmp eq i8 %76, 0
  %92 = and i1 %77, %91
  %93 = icmp ne i8 %87, 0
  %94 = and i1 %92, %93
  br i1 %94, label %183, label %80

95:                                               ; preds = %80
  %96 = getelementptr inbounds i8, i8* %59, i64 1
  %97 = load i8, i8* %96, align 1
  br label %98

98:                                               ; preds = %95, %80
  %99 = phi i8 [ %97, %95 ], [ 0, %80 ]
  %100 = lshr i8 %99, 7
  %101 = icmp ne i8 %76, %100
  %102 = icmp ne i8 %99, 0
  %103 = and i1 %92, %102
  %104 = or i1 %101, %103
  br i1 %104, label %183, label %105

105:                                              ; preds = %98
  %106 = and i32 %74, 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds i8, i8* %59, i64 %33
  %110 = load i8, i8* %109, align 1
  br label %111

111:                                              ; preds = %108, %105
  %112 = phi i8 [ %110, %108 ], [ 0, %105 ]
  %113 = lshr i8 %112, 7
  %114 = icmp ne i8 %76, %113
  %115 = icmp ne i8 %112, 0
  %116 = and i1 %92, %115
  %117 = or i1 %114, %116
  br i1 %117, label %183, label %118

118:                                              ; preds = %111
  %119 = and i32 %74, 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds i8, i8* %59, i64 %34
  %123 = load i8, i8* %122, align 1
  br label %124

124:                                              ; preds = %121, %118
  %125 = phi i8 [ %123, %121 ], [ 0, %118 ]
  %126 = lshr i8 %125, 7
  %127 = icmp ne i8 %76, %126
  %128 = icmp ne i8 %125, 0
  %129 = and i1 %92, %128
  %130 = or i1 %127, %129
  br i1 %130, label %183, label %131

131:                                              ; preds = %124
  %132 = and i32 %74, 16
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds i8, i8* %59, i64 %35
  %136 = load i8, i8* %135, align 1
  br label %137

137:                                              ; preds = %134, %131
  %138 = phi i8 [ %136, %134 ], [ 0, %131 ]
  %139 = lshr i8 %138, 7
  %140 = icmp ne i8 %76, %139
  %141 = icmp ne i8 %138, 0
  %142 = and i1 %92, %141
  %143 = or i1 %140, %142
  br i1 %143, label %183, label %144

144:                                              ; preds = %137
  %145 = and i32 %74, 32
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds i8, i8* %59, i64 %36
  %149 = load i8, i8* %148, align 1
  br label %150

150:                                              ; preds = %147, %144
  %151 = phi i8 [ %149, %147 ], [ 0, %144 ]
  %152 = lshr i8 %151, 7
  %153 = icmp ne i8 %76, %152
  %154 = icmp ne i8 %151, 0
  %155 = and i1 %92, %154
  %156 = or i1 %153, %155
  br i1 %156, label %183, label %157

157:                                              ; preds = %150
  %158 = and i32 %74, 64
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds i8, i8* %59, i64 %37
  %162 = load i8, i8* %161, align 1
  br label %163

163:                                              ; preds = %160, %157
  %164 = phi i8 [ %162, %160 ], [ 0, %157 ]
  %165 = lshr i8 %164, 7
  %166 = icmp ne i8 %76, %165
  %167 = icmp ne i8 %164, 0
  %168 = and i1 %92, %167
  %169 = or i1 %166, %168
  br i1 %169, label %183, label %170

170:                                              ; preds = %163
  %171 = trunc i32 %74 to i8
  %172 = icmp sgt i8 %171, -1
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds i8, i8* %59, i64 %38
  %175 = load i8, i8* %174, align 1
  br label %176

176:                                              ; preds = %173, %170
  %177 = phi i8 [ %175, %173 ], [ 0, %170 ]
  %178 = lshr i8 %177, 7
  %179 = icmp ne i8 %76, %178
  %180 = icmp ne i8 %177, 0
  %181 = and i1 %92, %180
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184

183:                                              ; preds = %176, %163, %150, %137, %124, %111, %98, %90, %86
  store i8 -1, i8* %58, align 1
  br label %184

184:                                              ; preds = %183, %176
  %185 = getelementptr inbounds %struct.DFData, %struct.DFData* %57, i64 1
  %186 = getelementptr inbounds i8, i8* %59, i64 1
  %187 = getelementptr inbounds i8, i8* %58, i64 1
  %188 = add nuw nsw i32 %56, 1
  %189 = icmp eq i32 %188, %15
  br i1 %189, label %47, label %55

190:                                              ; preds = %47, %4
  %191 = sext i32 %6 to i64
  %192 = icmp sgt i32 %7, 0
  br i1 %192, label %193, label %322

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.DFData, %struct.DFData* %12, i64 %191
  %195 = sub nsw i64 0, %191
  %196 = getelementptr inbounds %struct.DFData, %struct.DFData* %12, i64 %195
  %197 = icmp sgt i32 %6, 0
  %198 = bitcast %struct.SkPoint* %5 to i8*
  %199 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %200 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %201 = add i32 %2, 9
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  br label %204

204:                                              ; preds = %212, %193
  %205 = phi i8* [ %14, %193 ], [ %216, %212 ]
  %206 = phi i32 [ 0, %193 ], [ %217, %212 ]
  %207 = phi %struct.DFData* [ %194, %193 ], [ %215, %212 ]
  %208 = phi %struct.DFData* [ %196, %193 ], [ %214, %212 ]
  %209 = phi %struct.DFData* [ %12, %193 ], [ %213, %212 ]
  br i1 %197, label %219, label %212

210:                                              ; preds = %315
  %211 = getelementptr i8, i8* %205, i64 %203
  br label %212

212:                                              ; preds = %210, %204
  %213 = phi %struct.DFData* [ %209, %204 ], [ %316, %210 ]
  %214 = phi %struct.DFData* [ %208, %204 ], [ %317, %210 ]
  %215 = phi %struct.DFData* [ %207, %204 ], [ %318, %210 ]
  %216 = phi i8* [ %205, %204 ], [ %211, %210 ]
  %217 = add nuw nsw i32 %206, 1
  %218 = icmp eq i32 %217, %7
  br i1 %218, label %322, label %204

219:                                              ; preds = %204, %315
  %220 = phi i8* [ %319, %315 ], [ %205, %204 ]
  %221 = phi i32 [ %320, %315 ], [ 0, %204 ]
  %222 = phi %struct.DFData* [ %318, %315 ], [ %207, %204 ]
  %223 = phi %struct.DFData* [ %317, %315 ], [ %208, %204 ]
  %224 = phi %struct.DFData* [ %316, %315 ], [ %209, %204 ]
  %225 = load i8, i8* %220, align 1
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %311, label %227

227:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #5
  store float 0xFFFFFFFFE0000000, float* %199, align 4
  store float 0xFFFFFFFFE0000000, float* %200, align 4
  %228 = getelementptr inbounds %struct.DFData, %struct.DFData* %223, i64 1, i32 0
  %229 = load float, float* %228, align 4
  %230 = getelementptr inbounds %struct.DFData, %struct.DFData* %223, i64 -1, i32 0
  %231 = load float, float* %230, align 4
  %232 = fsub float %229, %231
  %233 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 1, i32 0
  %234 = load float, float* %233, align 4
  %235 = fmul float %234, 0x3FF6A09E60000000
  %236 = fadd float %232, %235
  %237 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 -1, i32 0
  %238 = load float, float* %237, align 4
  %239 = fmul float %238, 0x3FF6A09E60000000
  %240 = fsub float %236, %239
  %241 = getelementptr inbounds %struct.DFData, %struct.DFData* %222, i64 1, i32 0
  %242 = load float, float* %241, align 4
  %243 = fadd float %242, %240
  %244 = getelementptr inbounds %struct.DFData, %struct.DFData* %222, i64 -1, i32 0
  %245 = load float, float* %244, align 4
  %246 = fsub float %243, %245
  store float %246, float* %199, align 4
  %247 = load float, float* %244, align 4
  %248 = load float, float* %230, align 4
  %249 = fsub float %247, %248
  %250 = getelementptr inbounds %struct.DFData, %struct.DFData* %222, i64 0, i32 0
  %251 = load float, float* %250, align 4
  %252 = fmul float %251, 0x3FF6A09E60000000
  %253 = fadd float %249, %252
  %254 = getelementptr inbounds %struct.DFData, %struct.DFData* %223, i64 0, i32 0
  %255 = load float, float* %254, align 4
  %256 = fmul float %255, 0x3FF6A09E60000000
  %257 = fsub float %253, %256
  %258 = fadd float %242, %257
  %259 = fsub float %258, %229
  store float %259, float* %200, align 4
  %260 = call zeroext i1 @_ZN11SkPointPriv13SetLengthFastEP7SkPointf(%struct.SkPoint* nonnull %5, float 1.000000e+00) #5
  %261 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 0
  %262 = load float, float* %261, align 4
  %263 = load float, float* %199, align 4
  %264 = call float @llvm.fabs.f32(float %263) #5
  %265 = fcmp ugt float %264, 0x3F30000000000000
  br i1 %265, label %266, label %270

266:                                              ; preds = %227
  %267 = load float, float* %200, align 4
  %268 = call float @llvm.fabs.f32(float %267) #5
  %269 = fcmp ugt float %268, 0x3F30000000000000
  br i1 %269, label %272, label %270

270:                                              ; preds = %266, %227
  %271 = fsub float 5.000000e-01, %262
  br label %306

272:                                              ; preds = %266
  %273 = bitcast float %264 to i32
  %274 = bitcast float %268 to i32
  %275 = fcmp olt float %264, %268
  %276 = select i1 %275, i32 %274, i32 %273
  %277 = select i1 %275, i32 %273, i32 %274
  %278 = bitcast i32 %277 to float
  %279 = fmul float %278, 5.000000e-01
  %280 = bitcast i32 %276 to float
  %281 = fmul float %262, %280
  %282 = fcmp olt float %281, %279
  br i1 %282, label %283, label %291

283:                                              ; preds = %272
  %284 = fadd float %280, %278
  %285 = fmul float %284, 5.000000e-01
  %286 = fmul float %280, 2.000000e+00
  %287 = fmul float %286, %278
  %288 = fmul float %262, %287
  %289 = call float @sqrtf(float %288) #5
  %290 = fsub float %285, %289
  br label %306

291:                                              ; preds = %272
  %292 = fsub float %280, %279
  %293 = fcmp olt float %281, %292
  br i1 %293, label %294, label %297

294:                                              ; preds = %291
  %295 = fsub float 5.000000e-01, %262
  %296 = fmul float %295, %280
  br label %306

297:                                              ; preds = %291
  %298 = fadd float %280, %278
  %299 = fmul float %298, 5.000000e-01
  %300 = fmul float %280, 2.000000e+00
  %301 = fmul float %300, %278
  %302 = fsub float 1.000000e+00, %262
  %303 = fmul float %302, %301
  %304 = call float @sqrtf(float %303) #5
  %305 = fsub float %304, %299
  br label %306

306:                                              ; preds = %297, %294, %283, %270
  %307 = phi float [ %271, %270 ], [ %290, %283 ], [ %296, %294 ], [ %305, %297 ]
  %308 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 2
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %5, float %307, %struct.SkPoint* %308) #5
  %309 = fmul float %307, %307
  %310 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 1
  store float %309, float* %310, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #5
  br label %315

311:                                              ; preds = %219
  %312 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 1
  store float 2.000000e+06, float* %312, align 4
  %313 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 2, i32 0
  store float 1.000000e+03, float* %313, align 4
  %314 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 0, i32 2, i32 1
  store float 1.000000e+03, float* %314, align 4
  br label %315

315:                                              ; preds = %311, %306
  %316 = getelementptr inbounds %struct.DFData, %struct.DFData* %224, i64 1
  %317 = getelementptr inbounds %struct.DFData, %struct.DFData* %223, i64 1
  %318 = getelementptr inbounds %struct.DFData, %struct.DFData* %222, i64 1
  %319 = getelementptr inbounds i8, i8* %220, i64 1
  %320 = add nuw nsw i32 %221, 1
  %321 = icmp eq i32 %320, %6
  br i1 %321, label %210, label %219

322:                                              ; preds = %212, %190
  %323 = getelementptr inbounds %struct.DFData, %struct.DFData* %12, i64 %191
  %324 = getelementptr inbounds %struct.DFData, %struct.DFData* %323, i64 1
  %325 = add i32 %3, 9
  %326 = icmp sgt i32 %325, 1
  br i1 %326, label %327, label %626

327:                                              ; preds = %322
  %328 = getelementptr inbounds i8, i8* %14, i64 %191
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  %330 = add i32 %2, 9
  %331 = icmp sgt i32 %330, 1
  %332 = sub nsw i64 0, %191
  %333 = add nsw i32 %2, 11
  %334 = sext i32 %333 to i64
  %335 = add i32 %2, 7
  %336 = zext i32 %335 to i64
  %337 = add nuw nsw i64 %336, 1
  br label %338

338:                                              ; preds = %447, %327
  %339 = phi i32 [ 1, %327 ], [ %454, %447 ]
  %340 = phi i8* [ %329, %327 ], [ %453, %447 ]
  %341 = phi %struct.DFData* [ %324, %327 ], [ %452, %447 ]
  br i1 %331, label %360, label %447

342:                                              ; preds = %447
  %343 = add nsw i32 %3, 8
  %344 = mul nsw i32 %343, %6
  %345 = sext i32 %344 to i64
  br i1 %326, label %346, label %626

346:                                              ; preds = %342
  %347 = getelementptr inbounds i8, i8* %14, i64 %345
  %348 = getelementptr inbounds i8, i8* %347, i64 -1
  %349 = getelementptr inbounds %struct.DFData, %struct.DFData* %12, i64 %345
  %350 = getelementptr inbounds %struct.DFData, %struct.DFData* %349, i64 -1
  %351 = add i32 %2, 9
  %352 = icmp sgt i32 %351, 1
  %353 = sub i32 -9, %2
  %354 = sext i32 %353 to i64
  %355 = add i32 %2, 7
  %356 = zext i32 %355 to i64
  %357 = add nuw nsw i64 %356, 1
  br label %486

358:                                              ; preds = %442
  %359 = getelementptr i8, i8* %340, i64 %337
  br i1 %331, label %456, label %447

360:                                              ; preds = %338, %442
  %361 = phi i32 [ %445, %442 ], [ 1, %338 ]
  %362 = phi i8* [ %444, %442 ], [ %340, %338 ]
  %363 = phi %struct.DFData* [ %443, %442 ], [ %341, %338 ]
  %364 = load i8, i8* %362, align 1
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %442

366:                                              ; preds = %360
  %367 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 %332
  %368 = getelementptr inbounds %struct.DFData, %struct.DFData* %367, i64 -1
  %369 = getelementptr inbounds %struct.DFData, %struct.DFData* %368, i64 0, i32 2, i32 0
  %370 = load float, float* %369, align 4
  %371 = getelementptr inbounds %struct.DFData, %struct.DFData* %368, i64 0, i32 2, i32 1
  %372 = load float, float* %371, align 4
  %373 = getelementptr inbounds %struct.DFData, %struct.DFData* %368, i64 0, i32 1
  %374 = load float, float* %373, align 4
  %375 = fadd float %370, %372
  %376 = fadd float %375, -1.000000e+00
  %377 = fmul float %376, 2.000000e+00
  %378 = fsub float %374, %377
  %379 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 1
  %380 = load float, float* %379, align 4
  %381 = fcmp olt float %378, %380
  br i1 %381, label %382, label %387

382:                                              ; preds = %366
  %383 = fadd float %370, -1.000000e+00
  %384 = fadd float %372, -1.000000e+00
  store float %378, float* %379, align 4
  %385 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 0
  store float %383, float* %385, align 4
  %386 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 1
  store float %384, float* %386, align 4
  br label %387

387:                                              ; preds = %382, %366
  %388 = phi float [ %378, %382 ], [ %380, %366 ]
  %389 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 %332, i32 2, i32 1
  %390 = load float, float* %389, align 4
  %391 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 %332, i32 1
  %392 = load float, float* %391, align 4
  %393 = fmul float %390, 2.000000e+00
  %394 = fsub float %392, %393
  %395 = fadd float %394, 1.000000e+00
  %396 = fcmp olt float %395, %388
  br i1 %396, label %397, label %405

397:                                              ; preds = %387
  %398 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 %332, i32 2, i32 0
  %399 = bitcast float* %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = fadd float %390, -1.000000e+00
  store float %395, float* %379, align 4
  %402 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 0
  %403 = bitcast float* %402 to i32*
  store i32 %400, i32* %403, align 4
  %404 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 1
  store float %401, float* %404, align 4
  br label %405

405:                                              ; preds = %397, %387
  %406 = phi float [ %395, %397 ], [ %388, %387 ]
  %407 = getelementptr inbounds %struct.DFData, %struct.DFData* %367, i64 1
  %408 = getelementptr inbounds %struct.DFData, %struct.DFData* %407, i64 0, i32 2, i32 0
  %409 = load float, float* %408, align 4
  %410 = getelementptr inbounds %struct.DFData, %struct.DFData* %407, i64 0, i32 2, i32 1
  %411 = load float, float* %410, align 4
  %412 = getelementptr inbounds %struct.DFData, %struct.DFData* %407, i64 0, i32 1
  %413 = load float, float* %412, align 4
  %414 = fsub float %409, %411
  %415 = fadd float %414, 1.000000e+00
  %416 = fmul float %415, 2.000000e+00
  %417 = fadd float %413, %416
  %418 = fcmp olt float %417, %406
  br i1 %418, label %419, label %424

419:                                              ; preds = %405
  %420 = fadd float %409, 1.000000e+00
  %421 = fadd float %411, -1.000000e+00
  store float %417, float* %379, align 4
  %422 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 0
  store float %420, float* %422, align 4
  %423 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 1
  store float %421, float* %423, align 4
  br label %424

424:                                              ; preds = %419, %405
  %425 = phi float [ %417, %419 ], [ %406, %405 ]
  %426 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 -1, i32 2, i32 0
  %427 = load float, float* %426, align 4
  %428 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 -1, i32 1
  %429 = load float, float* %428, align 4
  %430 = fmul float %427, 2.000000e+00
  %431 = fsub float %429, %430
  %432 = fadd float %431, 1.000000e+00
  %433 = fcmp olt float %432, %425
  br i1 %433, label %434, label %442

434:                                              ; preds = %424
  %435 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 -1, i32 2, i32 1
  %436 = bitcast float* %435 to i32*
  %437 = load i32, i32* %436, align 4
  %438 = fadd float %427, -1.000000e+00
  store float %432, float* %379, align 4
  %439 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 0
  store float %438, float* %439, align 4
  %440 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 0, i32 2, i32 1
  %441 = bitcast float* %440 to i32*
  store i32 %437, i32* %441, align 4
  br label %442

442:                                              ; preds = %434, %424, %360
  %443 = getelementptr inbounds %struct.DFData, %struct.DFData* %363, i64 1
  %444 = getelementptr inbounds i8, i8* %362, i64 1
  %445 = add nuw nsw i32 %361, 1
  %446 = icmp eq i32 %445, %330
  br i1 %446, label %358, label %360

447:                                              ; preds = %483, %338, %358
  %448 = phi i8* [ %359, %358 ], [ %340, %338 ], [ %340, %483 ]
  %449 = phi %struct.DFData* [ %443, %358 ], [ %341, %338 ], [ %461, %483 ]
  %450 = getelementptr inbounds i8, i8* %448, i64 -1
  %451 = getelementptr inbounds %struct.DFData, %struct.DFData* %449, i64 -1
  %452 = getelementptr inbounds %struct.DFData, %struct.DFData* %451, i64 %334
  %453 = getelementptr inbounds i8, i8* %450, i64 %334
  %454 = add nuw nsw i32 %339, 1
  %455 = icmp eq i32 %454, %325
  br i1 %455, label %342, label %338

456:                                              ; preds = %358, %483
  %457 = phi %struct.DFData* [ %461, %483 ], [ %443, %358 ]
  %458 = phi i8* [ %460, %483 ], [ %359, %358 ]
  %459 = phi i32 [ %484, %483 ], [ 1, %358 ]
  %460 = getelementptr inbounds i8, i8* %458, i64 -1
  %461 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 -1
  %462 = load i8, i8* %460, align 1
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %464, label %483

464:                                              ; preds = %456
  %465 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 0, i32 2, i32 0
  %466 = load float, float* %465, align 4
  %467 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 0, i32 1
  %468 = load float, float* %467, align 4
  %469 = fmul float %466, 2.000000e+00
  %470 = fadd float %468, %469
  %471 = fadd float %470, 1.000000e+00
  %472 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 -1, i32 1
  %473 = load float, float* %472, align 4
  %474 = fcmp olt float %471, %473
  br i1 %474, label %475, label %483

475:                                              ; preds = %464
  %476 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 0, i32 2, i32 1
  %477 = bitcast float* %476 to i32*
  %478 = load i32, i32* %477, align 4
  %479 = fadd float %466, 1.000000e+00
  store float %471, float* %472, align 4
  %480 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 -1, i32 2, i32 0
  store float %479, float* %480, align 4
  %481 = getelementptr inbounds %struct.DFData, %struct.DFData* %457, i64 -1, i32 2, i32 1
  %482 = bitcast float* %481 to i32*
  store i32 %478, i32* %482, align 4
  br label %483

483:                                              ; preds = %475, %464, %456
  %484 = add nuw nsw i32 %459, 1
  %485 = icmp eq i32 %484, %330
  br i1 %485, label %447, label %456

486:                                              ; preds = %526, %346
  %487 = phi i32 [ 1, %346 ], [ %533, %526 ]
  %488 = phi i8* [ %348, %346 ], [ %532, %526 ]
  %489 = phi %struct.DFData* [ %350, %346 ], [ %531, %526 ]
  br i1 %352, label %496, label %526

490:                                              ; preds = %526
  br i1 %326, label %491, label %626

491:                                              ; preds = %490
  %492 = add i32 %2, 9
  %493 = icmp sgt i32 %492, 1
  br label %622

494:                                              ; preds = %521
  %495 = getelementptr i8, i8* %488, i64 %357
  br i1 %352, label %535, label %526

496:                                              ; preds = %486, %521
  %497 = phi i32 [ %524, %521 ], [ 1, %486 ]
  %498 = phi i8* [ %523, %521 ], [ %488, %486 ]
  %499 = phi %struct.DFData* [ %522, %521 ], [ %489, %486 ]
  %500 = load i8, i8* %498, align 1
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %502, label %521

502:                                              ; preds = %496
  %503 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 -1, i32 2, i32 0
  %504 = load float, float* %503, align 4
  %505 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 -1, i32 1
  %506 = load float, float* %505, align 4
  %507 = fmul float %504, 2.000000e+00
  %508 = fsub float %506, %507
  %509 = fadd float %508, 1.000000e+00
  %510 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 0, i32 1
  %511 = load float, float* %510, align 4
  %512 = fcmp olt float %509, %511
  br i1 %512, label %513, label %521

513:                                              ; preds = %502
  %514 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 -1, i32 2, i32 1
  %515 = bitcast float* %514 to i32*
  %516 = load i32, i32* %515, align 4
  %517 = fadd float %504, -1.000000e+00
  store float %509, float* %510, align 4
  %518 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 0, i32 2, i32 0
  store float %517, float* %518, align 4
  %519 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 0, i32 2, i32 1
  %520 = bitcast float* %519 to i32*
  store i32 %516, i32* %520, align 4
  br label %521

521:                                              ; preds = %513, %502, %496
  %522 = getelementptr inbounds %struct.DFData, %struct.DFData* %499, i64 1
  %523 = getelementptr inbounds i8, i8* %498, i64 1
  %524 = add nuw nsw i32 %497, 1
  %525 = icmp eq i32 %524, %351
  br i1 %525, label %494, label %496

526:                                              ; preds = %619, %486, %494
  %527 = phi i8* [ %495, %494 ], [ %488, %486 ], [ %488, %619 ]
  %528 = phi %struct.DFData* [ %522, %494 ], [ %489, %486 ], [ %540, %619 ]
  %529 = getelementptr inbounds i8, i8* %527, i64 -1
  %530 = getelementptr inbounds %struct.DFData, %struct.DFData* %528, i64 -1
  %531 = getelementptr inbounds %struct.DFData, %struct.DFData* %530, i64 %354
  %532 = getelementptr inbounds i8, i8* %529, i64 %354
  %533 = add nuw nsw i32 %487, 1
  %534 = icmp eq i32 %533, %325
  br i1 %534, label %490, label %486

535:                                              ; preds = %494, %619
  %536 = phi %struct.DFData* [ %540, %619 ], [ %522, %494 ]
  %537 = phi i8* [ %539, %619 ], [ %495, %494 ]
  %538 = phi i32 [ %620, %619 ], [ 1, %494 ]
  %539 = getelementptr inbounds i8, i8* %537, i64 -1
  %540 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1
  %541 = load i8, i8* %539, align 1
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %543, label %619

543:                                              ; preds = %535
  %544 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 0, i32 2, i32 0
  %545 = load float, float* %544, align 4
  %546 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 0, i32 1
  %547 = load float, float* %546, align 4
  %548 = fmul float %545, 2.000000e+00
  %549 = fadd float %547, %548
  %550 = fadd float %549, 1.000000e+00
  %551 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 1
  %552 = load float, float* %551, align 4
  %553 = fcmp olt float %550, %552
  br i1 %553, label %554, label %562

554:                                              ; preds = %543
  %555 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 0, i32 2, i32 1
  %556 = bitcast float* %555 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = fadd float %545, 1.000000e+00
  store float %550, float* %551, align 4
  %559 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 0
  store float %558, float* %559, align 4
  %560 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 1
  %561 = bitcast float* %560 to i32*
  store i32 %557, i32* %561, align 4
  br label %562

562:                                              ; preds = %554, %543
  %563 = phi float [ %550, %554 ], [ %552, %543 ]
  %564 = getelementptr inbounds %struct.DFData, %struct.DFData* %540, i64 %191
  %565 = getelementptr inbounds %struct.DFData, %struct.DFData* %564, i64 -1
  %566 = getelementptr inbounds %struct.DFData, %struct.DFData* %565, i64 0, i32 2, i32 0
  %567 = load float, float* %566, align 4
  %568 = getelementptr inbounds %struct.DFData, %struct.DFData* %565, i64 0, i32 2, i32 1
  %569 = load float, float* %568, align 4
  %570 = getelementptr inbounds %struct.DFData, %struct.DFData* %565, i64 0, i32 1
  %571 = load float, float* %570, align 4
  %572 = fsub float %567, %569
  %573 = fadd float %572, -1.000000e+00
  %574 = fmul float %573, 2.000000e+00
  %575 = fsub float %571, %574
  %576 = fcmp olt float %575, %563
  br i1 %576, label %577, label %582

577:                                              ; preds = %562
  %578 = fadd float %567, -1.000000e+00
  %579 = fadd float %569, 1.000000e+00
  store float %575, float* %551, align 4
  %580 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 0
  store float %578, float* %580, align 4
  %581 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 1
  store float %579, float* %581, align 4
  br label %582

582:                                              ; preds = %577, %562
  %583 = phi float [ %575, %577 ], [ %563, %562 ]
  %584 = getelementptr inbounds %struct.DFData, %struct.DFData* %540, i64 %191, i32 2, i32 1
  %585 = load float, float* %584, align 4
  %586 = getelementptr inbounds %struct.DFData, %struct.DFData* %540, i64 %191, i32 1
  %587 = load float, float* %586, align 4
  %588 = fmul float %585, 2.000000e+00
  %589 = fadd float %587, %588
  %590 = fadd float %589, 1.000000e+00
  %591 = fcmp olt float %590, %583
  br i1 %591, label %592, label %600

592:                                              ; preds = %582
  %593 = getelementptr inbounds %struct.DFData, %struct.DFData* %540, i64 %191, i32 2, i32 0
  %594 = bitcast float* %593 to i32*
  %595 = load i32, i32* %594, align 4
  %596 = fadd float %585, 1.000000e+00
  store float %590, float* %551, align 4
  %597 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 0
  %598 = bitcast float* %597 to i32*
  store i32 %595, i32* %598, align 4
  %599 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 1
  store float %596, float* %599, align 4
  br label %600

600:                                              ; preds = %592, %582
  %601 = phi float [ %590, %592 ], [ %583, %582 ]
  %602 = getelementptr inbounds %struct.DFData, %struct.DFData* %564, i64 1
  %603 = getelementptr inbounds %struct.DFData, %struct.DFData* %602, i64 0, i32 2, i32 0
  %604 = load float, float* %603, align 4
  %605 = getelementptr inbounds %struct.DFData, %struct.DFData* %602, i64 0, i32 2, i32 1
  %606 = load float, float* %605, align 4
  %607 = getelementptr inbounds %struct.DFData, %struct.DFData* %602, i64 0, i32 1
  %608 = load float, float* %607, align 4
  %609 = fadd float %604, %606
  %610 = fadd float %609, 1.000000e+00
  %611 = fmul float %610, 2.000000e+00
  %612 = fadd float %608, %611
  %613 = fcmp olt float %612, %601
  br i1 %613, label %614, label %619

614:                                              ; preds = %600
  %615 = fadd float %604, 1.000000e+00
  %616 = fadd float %606, 1.000000e+00
  store float %612, float* %551, align 4
  %617 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 0
  store float %615, float* %617, align 4
  %618 = getelementptr inbounds %struct.DFData, %struct.DFData* %536, i64 -1, i32 2, i32 1
  store float %616, float* %618, align 4
  br label %619

619:                                              ; preds = %614, %600, %535
  %620 = add nuw nsw i32 %538, 1
  %621 = icmp eq i32 %620, %351
  br i1 %621, label %526, label %535

622:                                              ; preds = %630, %491
  %623 = phi i32 [ 1, %491 ], [ %634, %630 ]
  %624 = phi i8* [ %0, %491 ], [ %632, %630 ]
  %625 = phi %struct.DFData* [ %324, %491 ], [ %633, %630 ]
  br i1 %493, label %636, label %630

626:                                              ; preds = %630, %322, %342, %490
  %627 = icmp eq i8* %11, null
  br i1 %627, label %629, label %628

628:                                              ; preds = %626
  call void @_Z7sk_freePv(i8* nonnull %11) #5
  br label %629

629:                                              ; preds = %626, %628
  ret void

630:                                              ; preds = %636, %622
  %631 = phi %struct.DFData* [ %625, %622 ], [ %665, %636 ]
  %632 = phi i8* [ %624, %622 ], [ %664, %636 ]
  %633 = getelementptr inbounds %struct.DFData, %struct.DFData* %631, i64 2
  %634 = add nuw nsw i32 %623, 1
  %635 = icmp eq i32 %634, %325
  br i1 %635, label %626, label %622

636:                                              ; preds = %622, %636
  %637 = phi i32 [ %666, %636 ], [ 1, %622 ]
  %638 = phi i8* [ %664, %636 ], [ %624, %622 ]
  %639 = phi %struct.DFData* [ %665, %636 ], [ %625, %622 ]
  %640 = getelementptr inbounds %struct.DFData, %struct.DFData* %639, i64 0, i32 0
  %641 = load float, float* %640, align 4
  %642 = fcmp ogt float %641, 5.000000e-01
  %643 = getelementptr inbounds %struct.DFData, %struct.DFData* %639, i64 0, i32 1
  %644 = load float, float* %643, align 4
  %645 = call float @sqrtf(float %644) #5
  %646 = fsub float -0.000000e+00, %645
  %647 = select i1 %642, float %646, float %645
  %648 = fsub float -0.000000e+00, %647
  %649 = fcmp ogt float %648, 3.968750e+00
  %650 = select i1 %649, float 3.968750e+00, float %648
  %651 = fcmp ogt float %650, -4.000000e+00
  %652 = select i1 %651, float %650, float -4.000000e+00
  %653 = fadd float %652, 4.000000e+00
  %654 = fmul float %653, 1.250000e-01
  %655 = fmul float %654, 2.560000e+02
  %656 = fadd float %655, 5.000000e-01
  %657 = call float @llvm.floor.f32(float %656) #5
  %658 = fcmp olt float %657, 0x41DFFFFFE0000000
  %659 = select i1 %658, float %657, float 0x41DFFFFFE0000000
  %660 = fcmp ogt float %659, 0xC1DFFFFFE0000000
  %661 = select i1 %660, float %659, float 0xC1DFFFFFE0000000
  %662 = fptosi float %661 to i32
  %663 = trunc i32 %662 to i8
  %664 = getelementptr inbounds i8, i8* %638, i64 1
  store i8 %663, i8* %638, align 1
  %665 = getelementptr inbounds %struct.DFData, %struct.DFData* %639, i64 1
  %666 = add nuw nsw i32 %637, 1
  %667 = icmp eq i32 %666, %492
  br i1 %667, label %630, label %636
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z36SkGenerateDistanceFieldFromLCD16MaskPhPKhiim(i8* nocapture, i8*, i32, i32, i64) local_unnamed_addr #0 {
  %6 = alloca %class.SkAutoSMalloc, align 8
  %7 = bitcast %class.SkAutoSMalloc* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2
  %9 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 1024, i1 false)
  %10 = add nsw i32 %2, 2
  %11 = add nsw i32 %3, 2
  %12 = mul nsw i32 %11, %10
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2, i64 0
  %15 = bitcast %class.SkAutoSMalloc* %6 to i32**
  store i32* %14, i32** %15, align 8
  %16 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 1
  store i64 1024, i64* %16, align 8
  %17 = icmp ult i32 %12, 1025
  %18 = bitcast i32* %14 to i8*
  br i1 %17, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %21 = call i8* @_Z15sk_malloc_flagsmj(i64 %13, i32 2) #5
  store i8* %21, i8** %20, align 8
  store i64 %13, i64* %16, align 8
  br label %22

22:                                               ; preds = %5, %19
  %23 = phi i8* [ %18, %5 ], [ %21, %19 ]
  %24 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %25 = bitcast i8* %1 to i16*
  %26 = sext i32 %2 to i64
  %27 = getelementptr inbounds i16, i16* %25, i64 %26
  %28 = sext i32 %10 to i64
  %29 = icmp eq i32 %10, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %28, i1 false) #5
  br label %31

31:                                               ; preds = %22, %30
  %32 = getelementptr inbounds i8, i8* %23, i64 %26
  %33 = getelementptr inbounds i8, i8* %32, i64 2
  %34 = icmp sgt i32 %3, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %31
  %36 = and i64 %4, 4294967295
  %37 = shl nsw i64 %26, 1
  %38 = add nsw i64 %37, -1
  %39 = lshr i64 %38, 1
  %40 = add nuw i64 %39, 1
  %41 = shl nsw i64 %26, 1
  %42 = add nsw i64 %41, -1
  %43 = lshr i64 %42, 1
  %44 = add nuw i64 %43, 2
  %45 = icmp ult i64 %40, 8
  %46 = and i64 %40, -8
  %47 = icmp eq i64 %40, %46
  br label %56

48:                                               ; preds = %110, %31
  %49 = phi i8* [ %33, %31 ], [ %118, %110 ]
  br i1 %29, label %51, label %50

50:                                               ; preds = %48
  call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %28, i1 false) #5
  br label %51

51:                                               ; preds = %48, %50
  call fastcc void @_ZL34generate_distance_field_from_imagePhPKhii(i8* %0, i8* %23, i32 %2, i32 %3)
  %52 = load i8*, i8** %24, align 8
  %53 = icmp eq i8* %52, %18
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_Z7sk_freePv(i8* %52) #5
  br label %55

55:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %7) #5
  ret i1 true

56:                                               ; preds = %110, %35
  %57 = phi i64 [ %120, %110 ], [ 0, %35 ]
  %58 = phi i8* [ %118, %110 ], [ %33, %35 ]
  %59 = phi i32 [ %113, %110 ], [ 0, %35 ]
  %60 = phi i16* [ %117, %110 ], [ %27, %35 ]
  %61 = phi i8* [ %114, %110 ], [ %1, %35 ]
  %62 = mul i64 %36, %57
  %63 = getelementptr i8, i8* %1, i64 %62
  %64 = add i64 %41, %62
  %65 = getelementptr i8, i8* %1, i64 %64
  %66 = bitcast i8* %61 to i16*
  store i8 0, i8* %58, align 1
  %67 = getelementptr inbounds i8, i8* %58, i64 1
  %68 = icmp ugt i16* %60, %66
  br i1 %68, label %69, label %110

69:                                               ; preds = %56
  br i1 %45, label %70, label %73

70:                                               ; preds = %108, %73, %69
  %71 = phi i8* [ %67, %73 ], [ %67, %69 ], [ %79, %108 ]
  %72 = phi i16* [ %66, %73 ], [ %66, %69 ], [ %80, %108 ]
  br label %121

73:                                               ; preds = %69
  %74 = getelementptr i8, i8* %58, i64 %44
  %75 = icmp ult i8* %67, %65
  %76 = icmp ult i8* %63, %74
  %77 = and i1 %75, %76
  br i1 %77, label %70, label %78

78:                                               ; preds = %73
  %79 = getelementptr i8, i8* %67, i64 %46
  %80 = getelementptr i16, i16* %66, i64 %46
  br label %81

81:                                               ; preds = %81, %78
  %82 = phi i64 [ 0, %78 ], [ %106, %81 ]
  %83 = getelementptr i8, i8* %67, i64 %82
  %84 = getelementptr i16, i16* %66, i64 %82
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !2
  %87 = zext <8 x i16> %86 to <8 x i32>
  %88 = lshr <8 x i32> %87, <i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11>
  %89 = shl nuw nsw <8 x i32> %88, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %90 = lshr <8 x i32> %87, <i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13>
  %91 = or <8 x i32> %89, %90
  %92 = lshr <8 x i32> %87, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %93 = and <8 x i32> %92, <i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63>
  %94 = shl nuw nsw <8 x i32> %93, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %95 = lshr <8 x i32> %93, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %96 = or <8 x i32> %94, %95
  %97 = and <8 x i32> %87, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %98 = shl nuw nsw <8 x i32> %97, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %99 = lshr <8 x i32> %97, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %100 = or <8 x i32> %98, %99
  %101 = add nuw nsw <8 x i32> %100, %91
  %102 = add nuw nsw <8 x i32> %101, %96
  %103 = udiv <8 x i32> %102, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = bitcast i8* %83 to <8 x i8>*
  store <8 x i8> %104, <8 x i8>* %105, align 1, !alias.scope !5, !noalias !2
  %106 = add i64 %82, 8
  %107 = icmp eq i64 %106, %46
  br i1 %107, label %108, label %81, !llvm.loop !7

108:                                              ; preds = %81
  %109 = getelementptr i8, i8* %58, i64 %46
  br i1 %47, label %110, label %70

110:                                              ; preds = %121, %108, %56
  %111 = phi i8* [ %58, %56 ], [ %109, %108 ], [ %122, %121 ]
  %112 = phi i8* [ %67, %56 ], [ %79, %108 ], [ %144, %121 ]
  store i8 0, i8* %112, align 1
  %113 = add nuw nsw i32 %59, 1
  %114 = getelementptr inbounds i8, i8* %61, i64 %36
  %115 = bitcast i16* %60 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %36
  %117 = bitcast i8* %116 to i16*
  %118 = getelementptr inbounds i8, i8* %111, i64 2
  %119 = icmp eq i32 %113, %3
  %120 = add i64 %57, 1
  br i1 %119, label %48, label %56

121:                                              ; preds = %70, %121
  %122 = phi i8* [ %144, %121 ], [ %71, %70 ]
  %123 = phi i16* [ %143, %121 ], [ %72, %70 ]
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = lshr i32 %125, 11
  %127 = shl nuw nsw i32 %126, 3
  %128 = lshr i32 %125, 13
  %129 = or i32 %127, %128
  %130 = lshr i32 %125, 5
  %131 = and i32 %130, 63
  %132 = shl nuw nsw i32 %131, 2
  %133 = lshr i32 %131, 4
  %134 = or i32 %132, %133
  %135 = and i32 %125, 31
  %136 = shl nuw nsw i32 %135, 3
  %137 = lshr i32 %135, 2
  %138 = or i32 %136, %137
  %139 = add nuw nsw i32 %138, %129
  %140 = add nuw nsw i32 %139, %134
  %141 = udiv i32 %140, 3
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %122, align 1
  %143 = getelementptr inbounds i16, i16* %123, i64 1
  %144 = getelementptr inbounds i8, i8* %122, i64 1
  %145 = icmp ult i16* %143, %60
  br i1 %145, label %121, label %110, !llvm.loop !9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z34SkGenerateDistanceFieldFromBWImagePhPKhiim(i8* nocapture, i8* nocapture readonly, i32, i32, i64) local_unnamed_addr #0 {
  %6 = alloca %class.SkAutoSMalloc, align 8
  %7 = bitcast %class.SkAutoSMalloc* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2
  %9 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 1024, i1 false)
  %10 = add nsw i32 %2, 2
  %11 = add nsw i32 %3, 2
  %12 = mul nsw i32 %11, %10
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 2, i64 0
  %15 = bitcast %class.SkAutoSMalloc* %6 to i32**
  store i32* %14, i32** %15, align 8
  %16 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 1
  store i64 1024, i64* %16, align 8
  %17 = icmp ult i32 %12, 1025
  %18 = bitcast i32* %14 to i8*
  br i1 %17, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %21 = call i8* @_Z15sk_malloc_flagsmj(i64 %13, i32 2) #5
  store i8* %21, i8** %20, align 8
  store i64 %13, i64* %16, align 8
  br label %22

22:                                               ; preds = %5, %19
  %23 = phi i8* [ %18, %5 ], [ %21, %19 ]
  %24 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %6, i64 0, i32 0
  %25 = sext i32 %10 to i64
  %26 = icmp eq i32 %10, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %25, i1 false) #5
  br label %28

28:                                               ; preds = %22, %27
  %29 = sext i32 %2 to i64
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = icmp sgt i32 %3, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = icmp sgt i32 %2, 0
  br label %43

35:                                               ; preds = %63, %28
  %36 = phi i8* [ %31, %28 ], [ %66, %63 ]
  br i1 %26, label %38, label %37

37:                                               ; preds = %35
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 %25, i1 false) #5
  br label %38

38:                                               ; preds = %35, %37
  call fastcc void @_ZL34generate_distance_field_from_imagePhPKhii(i8* %0, i8* %23, i32 %2, i32 %3)
  %39 = load i8*, i8** %24, align 8
  %40 = icmp eq i8* %39, %18
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call void @_Z7sk_freePv(i8* %39) #5
  br label %42

42:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %7) #5
  ret i1 true

43:                                               ; preds = %63, %33
  %44 = phi i32 [ 0, %33 ], [ %67, %63 ]
  %45 = phi i8* [ %31, %33 ], [ %66, %63 ]
  %46 = phi i8* [ %1, %33 ], [ %65, %63 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 0, i8* %45, align 1
  br i1 %34, label %52, label %63

48:                                               ; preds = %104, %97, %90, %83, %76, %69, %52, %111
  %49 = phi i8* [ %60, %52 ], [ %73, %69 ], [ %80, %76 ], [ %87, %83 ], [ %94, %90 ], [ %101, %97 ], [ %108, %104 ], [ %115, %111 ]
  %50 = phi i32 [ %61, %52 ], [ %74, %69 ], [ %81, %76 ], [ %88, %83 ], [ %95, %90 ], [ %102, %97 ], [ %109, %104 ], [ %116, %111 ]
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %43, %48
  %53 = phi i8* [ %56, %48 ], [ %46, %43 ]
  %54 = phi i32 [ %50, %48 ], [ %2, %43 ]
  %55 = phi i8* [ %49, %48 ], [ %47, %43 ]
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = zext i8 %57 to i32
  %59 = ashr i8 %57, 7
  %60 = getelementptr inbounds i8, i8* %55, i64 1
  store i8 %59, i8* %55, align 1
  %61 = add nsw i32 %54, -1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %48, label %69

63:                                               ; preds = %48, %43
  %64 = phi i8* [ %47, %43 ], [ %49, %48 ]
  %65 = getelementptr inbounds i8, i8* %46, i64 %4
  %66 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 0, i8* %64, align 1
  %67 = add nuw nsw i32 %44, 1
  %68 = icmp eq i32 %67, %3
  br i1 %68, label %35, label %43

69:                                               ; preds = %52
  %70 = shl i32 %58, 25
  %71 = ashr i32 %70, 31
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %55, i64 2
  store i8 %72, i8* %60, align 1
  %74 = add nsw i32 %54, -2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %48, label %76

76:                                               ; preds = %69
  %77 = shl i32 %58, 26
  %78 = ashr i32 %77, 31
  %79 = trunc i32 %78 to i8
  %80 = getelementptr inbounds i8, i8* %55, i64 3
  store i8 %79, i8* %73, align 1
  %81 = add nsw i32 %54, -3
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %48, label %83

83:                                               ; preds = %76
  %84 = shl i32 %58, 27
  %85 = ashr i32 %84, 31
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds i8, i8* %55, i64 4
  store i8 %86, i8* %80, align 1
  %88 = add nsw i32 %54, -4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %48, label %90

90:                                               ; preds = %83
  %91 = shl i32 %58, 28
  %92 = ashr i32 %91, 31
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds i8, i8* %55, i64 5
  store i8 %93, i8* %87, align 1
  %95 = add nsw i32 %54, -5
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %48, label %97

97:                                               ; preds = %90
  %98 = shl i32 %58, 29
  %99 = ashr i32 %98, 31
  %100 = trunc i32 %99 to i8
  %101 = getelementptr inbounds i8, i8* %55, i64 6
  store i8 %100, i8* %94, align 1
  %102 = add nsw i32 %54, -6
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %48, label %104

104:                                              ; preds = %97
  %105 = shl i32 %58, 30
  %106 = ashr i32 %105, 31
  %107 = trunc i32 %106 to i8
  %108 = getelementptr inbounds i8, i8* %55, i64 7
  store i8 %107, i8* %101, align 1
  %109 = add nsw i32 %54, -7
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %48, label %111

111:                                              ; preds = %104
  %112 = shl i32 %58, 31
  %113 = ashr exact i32 %112, 31
  %114 = trunc i32 %113 to i8
  %115 = getelementptr inbounds i8, i8* %55, i64 8
  store i8 %114, i8* %108, align 1
  %116 = add nsw i32 %54, -8
  br label %48
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN11SkPointPriv13SetLengthFastEP7SkPointf(%struct.SkPoint*, float) local_unnamed_addr #3

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
