; ModuleID = '../../components/omnibox/browser/answers_cache.cc'
source_filename = "../../components/omnibox/browser/answers_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AnswersQueryData = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.AnswersCache = type { i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %struct.AnswersQueryData }

@_ZN16AnswersQueryDataC1Ev = hidden unnamed_addr alias void (%struct.AnswersQueryData*), void (%struct.AnswersQueryData*)* @_ZN16AnswersQueryDataC2Ev
@_ZN16AnswersQueryDataC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEi = hidden unnamed_addr alias void (%struct.AnswersQueryData*, %"class.std::__1::basic_string"*, i32), void (%struct.AnswersQueryData*, %"class.std::__1::basic_string"*, i32)* @_ZN16AnswersQueryDataC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEi
@_ZN12AnswersCacheC1Em = hidden unnamed_addr alias void (%class.AnswersCache*, i64), void (%class.AnswersCache*, i64)* @_ZN12AnswersCacheC2Em
@_ZN12AnswersCacheD1Ev = hidden unnamed_addr alias void (%class.AnswersCache*), void (%class.AnswersCache*)* @_ZN12AnswersCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AnswersQueryDataC2Ev(%struct.AnswersQueryData* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %struct.AnswersQueryData* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  %3 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AnswersQueryDataC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEi(%struct.AnswersQueryData*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %struct.AnswersQueryData* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #8
  br label %186

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %struct.AnswersQueryData* %0 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %struct.AnswersQueryData* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %struct.AnswersQueryData* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %25) #9
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #9
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #10
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %struct.AnswersQueryData* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = sub i64 %41, %52
  %54 = getelementptr i16, i16* %13, i64 %52
  %55 = getelementptr i16, i16* %40, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %13, i64 %64
  %67 = getelementptr i16, i16* %40, i64 %64
  %68 = bitcast i16* %66 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !2
  %70 = getelementptr i16, i16* %66, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = getelementptr i16, i16* %67, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %13, i64 %76
  %78 = getelementptr i16, i16* %40, i64 %76
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !2
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %13, i64 %87
  %89 = getelementptr i16, i16* %40, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !2
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %13, i64 %98
  %100 = getelementptr i16, i16* %40, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !2
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !7

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %13, i64 %116
  %119 = getelementptr i16, i16* %40, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !2
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !9

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %53, %131 ]
  %135 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %55, %131 ]
  %137 = add i64 %134, -1
  %138 = and i64 %134, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %146, %140 ], [ %134, %133 ]
  %142 = phi i16* [ %148, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %147, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %142, align 2
  store i16 %145, i16* %143, align 2
  %146 = add i64 %141, -1
  %147 = getelementptr inbounds i16, i16* %143, i64 1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !11

151:                                              ; preds = %140, %133
  %152 = phi i64 [ %134, %133 ], [ %146, %140 ]
  %153 = phi i16* [ %135, %133 ], [ %148, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %147, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %182, %156 ], [ %152, %151 ]
  %158 = phi i16* [ %184, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %183, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %158, align 2
  store i16 %160, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %159, i64 1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %159, i64 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %159, i64 3
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %159, i64 4
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %159, i64 5
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %159, i64 6
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %159, i64 7
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %157, -8
  %183 = getelementptr inbounds i16, i16* %159, i64 8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !12

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 1
  store i32 %2, i32* %187, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12AnswersCacheC2Em(%class.AnswersCache*, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %5, %"struct.std::__1::__list_node_base"** %6, align 8
  %7 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %5, %"struct.std::__1::__list_node_base"** %7, align 8
  %8 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12AnswersCacheD2Ev(%class.AnswersCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %39, label %24

24:                                               ; preds = %6, %36
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %36 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %24
  %34 = bitcast %"struct.std::__1::__list_node_base"* %28 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %33, %24
  %37 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  %38 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %38, label %39, label %24

39:                                               ; preds = %36, %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12AnswersCache17GetTopAnswerEntryERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.AnswersQueryData* noalias sret, %class.AnswersCache*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %19 = select i1 %15, i16* %17, i16* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* nonnull sret %5, i16* %19, i64 %23, i1 zeroext false) #8
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %31 = select i1 %27, i16* %29, i16* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %31, i64 %35) #8
  %36 = load i8, i8* %25, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %3
  %39 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %3, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %42 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %1, i64 0, i32 1, i32 0, i32 0
  %46 = inttoptr i64 %44 to %"struct.std::__1::__list_node_base"*
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %318

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %60 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %61

61:                                               ; preds = %50, %312
  %62 = phi %"struct.std::__1::__list_node_base"* [ %46, %50 ], [ %316, %312 ]
  %63 = phi i64 [ %44, %50 ], [ %315, %312 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %64 = inttoptr i64 %63 to %"struct.std::__1::__list_node"*
  %65 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %64, i64 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i16*
  %73 = select i1 %69, i16* %71, i16* %72
  %74 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %73, i64 %77) #8
  %78 = load i8, i8* %53, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i16*, i16** %54, align 8
  %81 = select i1 %79, i16* %80, i16* %55
  %82 = load i64, i64* %56, align 8
  %83 = zext i8 %78 to i64
  %84 = select i1 %79, i64 %82, i64 %83
  %85 = load i8, i8* %58, align 1
  %86 = icmp slt i8 %85, 0
  %87 = load i16*, i16** %8, align 8
  %88 = select i1 %86, i16* %87, i16* %59
  %89 = load i64, i64* %9, align 8
  %90 = zext i8 %85 to i64
  %91 = select i1 %86, i64 %89, i64 %90
  %92 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %81, i64 %84, i16* %88, i64 %91, i32 0) #8
  %93 = load i8, i8* %53, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %61
  %96 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %96) #10
  br label %97

97:                                               ; preds = %61, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  br i1 %92, label %98, label %312

98:                                               ; preds = %97
  %99 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %42, align 8
  %100 = icmp eq %"struct.std::__1::__list_node_base"* %99, %62
  %101 = bitcast %"struct.std::__1::__list_node_base"* %99 to %"struct.std::__1::__list_node"*
  br i1 %100, label %123, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %104 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__list_node_base"* %104, %99
  br i1 %105, label %123, label %106

106:                                              ; preds = %102
  %107 = ptrtoint %"struct.std::__1::__list_node_base"* %104 to i64
  %108 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 0
  %109 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %109, i64 0, i32 1
  %111 = bitcast %"struct.std::__1::__list_node_base"** %110 to i64*
  store i64 %107, i64* %111, align 8
  %112 = inttoptr i64 %63 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::__list_node_base"** %103 to i64**
  %115 = load i64*, i64** %114, align 8
  store i64 %113, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %99, i64 0, i32 0
  %117 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %117, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %118, align 8
  %119 = bitcast %"struct.std::__1::__list_node_base"* %99 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %112, align 8
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %116, align 8
  store %"struct.std::__1::__list_node_base"* %99, %"struct.std::__1::__list_node_base"** %103, align 8
  %121 = bitcast %"struct.std::__1::__list_node_base"** %42 to %"struct.std::__1::__list_node"**
  %122 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %121, align 8
  br label %123

123:                                              ; preds = %98, %102, %106
  %124 = phi %"struct.std::__1::__list_node"* [ %101, %98 ], [ %101, %102 ], [ %122, %106 ]
  %125 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %124, i64 0, i32 1
  %126 = bitcast %struct.AnswersQueryData* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %123
  %131 = bitcast %struct.AnswersQueryData* %0 to i8*
  %132 = bitcast %struct.AnswersQueryData* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #8
  br label %308

133:                                              ; preds = %123
  %134 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i16*, i16** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %124, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ult i64 %137, 11
  br i1 %138, label %139, label %144

139:                                              ; preds = %133
  %140 = bitcast %struct.AnswersQueryData* %0 to i16*
  %141 = trunc i64 %137 to i8
  %142 = bitcast %struct.AnswersQueryData* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %142, i64 0, i32 1, i32 1
  store i8 %141, i8* %143, align 1
  br label %161

144:                                              ; preds = %133
  %145 = icmp ugt i64 %137, 9223372036854775791
  br i1 %145, label %146, label %148

146:                                              ; preds = %144
  %147 = bitcast %struct.AnswersQueryData* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %147) #9
  unreachable

148:                                              ; preds = %144
  %149 = add nuw nsw i64 %137, 8
  %150 = and i64 %149, -8
  %151 = icmp slt i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  call void @abort() #9
  unreachable

153:                                              ; preds = %148
  %154 = shl i64 %150, 1
  %155 = call i8* @_Znwm(i64 %154) #10
  %156 = bitcast i8* %155 to i16*
  %157 = bitcast %struct.AnswersQueryData* %0 to i8**
  store i8* %155, i8** %157, align 8
  %158 = or i64 %150, -9223372036854775808
  %159 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %137, i64* %160, align 8
  br label %161

161:                                              ; preds = %153, %139
  %162 = phi i16* [ %140, %139 ], [ %156, %153 ]
  %163 = add nuw nsw i64 %137, 1
  %164 = add i64 %137, 1
  %165 = icmp ult i64 %164, 16
  br i1 %165, label %255, label %166

166:                                              ; preds = %161
  %167 = add i64 %137, 1
  %168 = getelementptr i16, i16* %162, i64 %167
  %169 = getelementptr i16, i16* %135, i64 %167
  %170 = icmp ult i16* %162, %169
  %171 = icmp ult i16* %135, %168
  %172 = and i1 %170, %171
  br i1 %172, label %255, label %173

173:                                              ; preds = %166
  %174 = and i64 %164, -16
  %175 = sub i64 %163, %174
  %176 = getelementptr i16, i16* %135, i64 %174
  %177 = getelementptr i16, i16* %162, i64 %174
  %178 = add i64 %174, -16
  %179 = lshr exact i64 %178, 4
  %180 = add nuw nsw i64 %179, 1
  %181 = and i64 %180, 3
  %182 = icmp ult i64 %178, 48
  br i1 %182, label %234, label %183

183:                                              ; preds = %173
  %184 = sub nsw i64 %180, %181
  br label %185

185:                                              ; preds = %185, %183
  %186 = phi i64 [ 0, %183 ], [ %231, %185 ]
  %187 = phi i64 [ %184, %183 ], [ %232, %185 ]
  %188 = getelementptr i16, i16* %135, i64 %186
  %189 = getelementptr i16, i16* %162, i64 %186
  %190 = bitcast i16* %188 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !13
  %192 = getelementptr i16, i16* %188, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !13
  %195 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2, !alias.scope !16, !noalias !13
  %196 = getelementptr i16, i16* %189, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %197, align 2, !alias.scope !16, !noalias !13
  %198 = or i64 %186, 16
  %199 = getelementptr i16, i16* %135, i64 %198
  %200 = getelementptr i16, i16* %162, i64 %198
  %201 = bitcast i16* %199 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !13
  %203 = getelementptr i16, i16* %199, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !13
  %206 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !16, !noalias !13
  %207 = getelementptr i16, i16* %200, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !16, !noalias !13
  %209 = or i64 %186, 32
  %210 = getelementptr i16, i16* %135, i64 %209
  %211 = getelementptr i16, i16* %162, i64 %209
  %212 = bitcast i16* %210 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !13
  %214 = getelementptr i16, i16* %210, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !13
  %217 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %217, align 2, !alias.scope !16, !noalias !13
  %218 = getelementptr i16, i16* %211, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %219, align 2, !alias.scope !16, !noalias !13
  %220 = or i64 %186, 48
  %221 = getelementptr i16, i16* %135, i64 %220
  %222 = getelementptr i16, i16* %162, i64 %220
  %223 = bitcast i16* %221 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !13
  %225 = getelementptr i16, i16* %221, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !13
  %228 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %228, align 2, !alias.scope !16, !noalias !13
  %229 = getelementptr i16, i16* %222, i64 8
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %230, align 2, !alias.scope !16, !noalias !13
  %231 = add i64 %186, 64
  %232 = add i64 %187, -4
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %185, !llvm.loop !18

234:                                              ; preds = %185, %173
  %235 = phi i64 [ 0, %173 ], [ %231, %185 ]
  %236 = icmp eq i64 %181, 0
  br i1 %236, label %253, label %237

237:                                              ; preds = %234, %237
  %238 = phi i64 [ %250, %237 ], [ %235, %234 ]
  %239 = phi i64 [ %251, %237 ], [ %181, %234 ]
  %240 = getelementptr i16, i16* %135, i64 %238
  %241 = getelementptr i16, i16* %162, i64 %238
  %242 = bitcast i16* %240 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !13
  %244 = getelementptr i16, i16* %240, i64 8
  %245 = bitcast i16* %244 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !13
  %247 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %247, align 2, !alias.scope !16, !noalias !13
  %248 = getelementptr i16, i16* %241, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %249, align 2, !alias.scope !16, !noalias !13
  %250 = add i64 %238, 16
  %251 = add i64 %239, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %237, !llvm.loop !19

253:                                              ; preds = %237, %234
  %254 = icmp eq i64 %164, %174
  br i1 %254, label %308, label %255

255:                                              ; preds = %253, %166, %161
  %256 = phi i64 [ %163, %166 ], [ %163, %161 ], [ %175, %253 ]
  %257 = phi i16* [ %135, %166 ], [ %135, %161 ], [ %176, %253 ]
  %258 = phi i16* [ %162, %166 ], [ %162, %161 ], [ %177, %253 ]
  %259 = add i64 %256, -1
  %260 = and i64 %256, 7
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %273, label %262

262:                                              ; preds = %255, %262
  %263 = phi i64 [ %268, %262 ], [ %256, %255 ]
  %264 = phi i16* [ %270, %262 ], [ %257, %255 ]
  %265 = phi i16* [ %269, %262 ], [ %258, %255 ]
  %266 = phi i64 [ %271, %262 ], [ %260, %255 ]
  %267 = load i16, i16* %264, align 2
  store i16 %267, i16* %265, align 2
  %268 = add i64 %263, -1
  %269 = getelementptr inbounds i16, i16* %265, i64 1
  %270 = getelementptr inbounds i16, i16* %264, i64 1
  %271 = add i64 %266, -1
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %262, !llvm.loop !20

273:                                              ; preds = %262, %255
  %274 = phi i64 [ %256, %255 ], [ %268, %262 ]
  %275 = phi i16* [ %257, %255 ], [ %270, %262 ]
  %276 = phi i16* [ %258, %255 ], [ %269, %262 ]
  %277 = icmp ult i64 %259, 7
  br i1 %277, label %308, label %278

278:                                              ; preds = %273, %278
  %279 = phi i64 [ %304, %278 ], [ %274, %273 ]
  %280 = phi i16* [ %306, %278 ], [ %275, %273 ]
  %281 = phi i16* [ %305, %278 ], [ %276, %273 ]
  %282 = load i16, i16* %280, align 2
  store i16 %282, i16* %281, align 2
  %283 = getelementptr inbounds i16, i16* %281, i64 1
  %284 = getelementptr inbounds i16, i16* %280, i64 1
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds i16, i16* %281, i64 2
  %287 = getelementptr inbounds i16, i16* %280, i64 2
  %288 = load i16, i16* %287, align 2
  store i16 %288, i16* %286, align 2
  %289 = getelementptr inbounds i16, i16* %281, i64 3
  %290 = getelementptr inbounds i16, i16* %280, i64 3
  %291 = load i16, i16* %290, align 2
  store i16 %291, i16* %289, align 2
  %292 = getelementptr inbounds i16, i16* %281, i64 4
  %293 = getelementptr inbounds i16, i16* %280, i64 4
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = getelementptr inbounds i16, i16* %281, i64 5
  %296 = getelementptr inbounds i16, i16* %280, i64 5
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2
  %298 = getelementptr inbounds i16, i16* %281, i64 6
  %299 = getelementptr inbounds i16, i16* %280, i64 6
  %300 = load i16, i16* %299, align 2
  store i16 %300, i16* %298, align 2
  %301 = getelementptr inbounds i16, i16* %281, i64 7
  %302 = getelementptr inbounds i16, i16* %280, i64 7
  %303 = load i16, i16* %302, align 2
  store i16 %303, i16* %301, align 2
  %304 = add i64 %279, -8
  %305 = getelementptr inbounds i16, i16* %281, i64 8
  %306 = getelementptr inbounds i16, i16* %280, i64 8
  %307 = icmp eq i64 %304, 0
  br i1 %307, label %308, label %278, !llvm.loop !21

308:                                              ; preds = %273, %278, %253, %130
  %309 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 1
  %310 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %124, i64 0, i32 1, i32 1
  %311 = load i32, i32* %310, align 8
  store i32 %311, i32* %309, align 8
  br label %322

312:                                              ; preds = %97
  %313 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %314 = bitcast %"struct.std::__1::__list_node_base"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = inttoptr i64 %315 to %"struct.std::__1::__list_node_base"*
  %317 = icmp eq %"struct.std::__1::__list_node_base"* %45, %316
  br i1 %317, label %318, label %61

318:                                              ; preds = %312, %48
  %319 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %49, %48 ], [ %57, %312 ]
  %320 = bitcast %struct.AnswersQueryData* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #8
  %321 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %0, i64 0, i32 1
  store i32 -1, i32* %321, align 8
  br label %322

322:                                              ; preds = %308, %318
  %323 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %57, %308 ], [ %319, %318 ]
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %323, i64 0, i32 1, i32 1
  %325 = load i8, i8* %324, align 1
  %326 = icmp slt i8 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %322
  %328 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %329 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %329) #10
  br label %330

330:                                              ; preds = %322, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

declare void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* sret, i16*, i64, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12AnswersCache19UpdateRecentAnswersERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEi(%class.AnswersCache*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.AnswersQueryData, align 8
  %5 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %8, %7
  br i1 %9, label %88, label %10

10:                                               ; preds = %3
  %11 = ptrtoint %"struct.std::__1::__list_node_base"* %7 to i64
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %24 = select i1 %15, i16* %22, i16* %23
  br label %25

25:                                               ; preds = %10, %82
  %26 = phi %"struct.std::__1::__list_node_base"* [ %7, %10 ], [ %86, %82 ]
  %27 = phi i64 [ %11, %10 ], [ %85, %82 ]
  %28 = inttoptr i64 %27 to %"struct.std::__1::__list_node"*
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %28, i64 0, i32 1
  %30 = bitcast %struct.AnswersQueryData* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = icmp eq i64 %19, %37
  br i1 %38, label %39, label %82

39:                                               ; preds = %25
  br i1 %20, label %57, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %struct.AnswersQueryData* %29 to i16*
  %44 = select i1 %33, i16* %42, i16* %43
  br label %45

45:                                               ; preds = %52, %40
  %46 = phi i64 [ %53, %52 ], [ %19, %40 ]
  %47 = phi i16* [ %55, %52 ], [ %44, %40 ]
  %48 = phi i16* [ %54, %52 ], [ %24, %40 ]
  %49 = load i16, i16* %48, align 2
  %50 = load i16, i16* %47, align 2
  %51 = icmp eq i16 %50, %49
  br i1 %51, label %52, label %82

52:                                               ; preds = %45
  %53 = add i64 %46, -1
  %54 = getelementptr inbounds i16, i16* %48, i64 1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %57, label %45

57:                                               ; preds = %52, %39
  %58 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %28, i64 0, i32 1, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, %2
  br i1 %60, label %61, label %82

61:                                               ; preds = %57
  %62 = icmp eq %"struct.std::__1::__list_node_base"* %7, %26
  br i1 %62, label %325, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %65, %7
  br i1 %66, label %325, label %67

67:                                               ; preds = %63
  %68 = ptrtoint %"struct.std::__1::__list_node_base"* %65 to i64
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 0
  %70 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %70, i64 0, i32 1
  %72 = bitcast %"struct.std::__1::__list_node_base"** %71 to i64*
  store i64 %68, i64* %72, align 8
  %73 = inttoptr i64 %27 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64**
  %76 = load i64*, i64** %75, align 8
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %78, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %79, align 8
  %80 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %73, align 8
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %77, align 8
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %64, align 8
  br label %325

82:                                               ; preds = %45, %25, %57
  %83 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %84 = bitcast %"struct.std::__1::__list_node_base"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = inttoptr i64 %85 to %"struct.std::__1::__list_node_base"*
  %87 = icmp eq %"struct.std::__1::__list_node_base"* %8, %86
  br i1 %87, label %88, label %25

88:                                               ; preds = %82, %3
  %89 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %class.AnswersCache, %class.AnswersCache* %0, i64 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %120, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %96, i64 0, i32 1
  %98 = bitcast %"struct.std::__1::__list_node_base"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %96, i64 0, i32 0
  %101 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %101, i64 0, i32 1
  %103 = bitcast %"struct.std::__1::__list_node_base"** %102 to i64*
  store i64 %99, i64* %103, align 8
  %104 = bitcast %"struct.std::__1::__list_node_base"* %96 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"struct.std::__1::__list_node_base"** %97 to i64**
  %107 = load i64*, i64** %106, align 8
  store i64 %105, i64* %107, align 8
  %108 = load i64, i64* %89, align 8
  %109 = add i64 %108, -1
  store i64 %109, i64* %89, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %96, i64 1
  %111 = bitcast %"struct.std::__1::__list_node_base"* %110 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %94
  %116 = bitcast %"struct.std::__1::__list_node_base"* %110 to i8**
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %94, %115
  %119 = bitcast %"struct.std::__1::__list_node_base"* %96 to i8*
  tail call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %88, %118
  %121 = bitcast %struct.AnswersQueryData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #8
  %122 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 8 %127, i64 24, i1 false) #8
  br label %303

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i16*, i16** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = icmp ult i64 %132, 11
  br i1 %133, label %134, label %139

134:                                              ; preds = %128
  %135 = bitcast %struct.AnswersQueryData* %4 to i16*
  %136 = trunc i64 %132 to i8
  %137 = bitcast %struct.AnswersQueryData* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %137, i64 0, i32 1, i32 1
  store i8 %136, i8* %138, align 1
  br label %156

139:                                              ; preds = %128
  %140 = icmp ugt i64 %132, 9223372036854775791
  br i1 %140, label %141, label %143

141:                                              ; preds = %139
  %142 = bitcast %struct.AnswersQueryData* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %142) #9
  unreachable

143:                                              ; preds = %139
  %144 = add nuw nsw i64 %132, 8
  %145 = and i64 %144, -8
  %146 = icmp slt i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %143
  tail call void @abort() #9
  unreachable

148:                                              ; preds = %143
  %149 = shl i64 %145, 1
  %150 = tail call i8* @_Znwm(i64 %149) #10
  %151 = bitcast i8* %150 to i16*
  %152 = bitcast %struct.AnswersQueryData* %4 to i8**
  store i8* %150, i8** %152, align 8
  %153 = or i64 %145, -9223372036854775808
  %154 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %132, i64* %155, align 8
  br label %156

156:                                              ; preds = %148, %134
  %157 = phi i16* [ %135, %134 ], [ %151, %148 ]
  %158 = add nuw nsw i64 %132, 1
  %159 = add i64 %132, 1
  %160 = icmp ult i64 %159, 16
  br i1 %160, label %250, label %161

161:                                              ; preds = %156
  %162 = add i64 %132, 1
  %163 = getelementptr i16, i16* %157, i64 %162
  %164 = getelementptr i16, i16* %130, i64 %162
  %165 = icmp ult i16* %157, %164
  %166 = icmp ult i16* %130, %163
  %167 = and i1 %165, %166
  br i1 %167, label %250, label %168

168:                                              ; preds = %161
  %169 = and i64 %159, -16
  %170 = sub i64 %158, %169
  %171 = getelementptr i16, i16* %130, i64 %169
  %172 = getelementptr i16, i16* %157, i64 %169
  %173 = add i64 %169, -16
  %174 = lshr exact i64 %173, 4
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 3
  %177 = icmp ult i64 %173, 48
  br i1 %177, label %229, label %178

178:                                              ; preds = %168
  %179 = sub nsw i64 %175, %176
  br label %180

180:                                              ; preds = %180, %178
  %181 = phi i64 [ 0, %178 ], [ %226, %180 ]
  %182 = phi i64 [ %179, %178 ], [ %227, %180 ]
  %183 = getelementptr i16, i16* %130, i64 %181
  %184 = getelementptr i16, i16* %157, i64 %181
  %185 = bitcast i16* %183 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !22
  %187 = getelementptr i16, i16* %183, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !22
  %190 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %190, align 2, !alias.scope !25, !noalias !22
  %191 = getelementptr i16, i16* %184, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %192, align 2, !alias.scope !25, !noalias !22
  %193 = or i64 %181, 16
  %194 = getelementptr i16, i16* %130, i64 %193
  %195 = getelementptr i16, i16* %157, i64 %193
  %196 = bitcast i16* %194 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !22
  %198 = getelementptr i16, i16* %194, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !22
  %201 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %201, align 2, !alias.scope !25, !noalias !22
  %202 = getelementptr i16, i16* %195, i64 8
  %203 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %203, align 2, !alias.scope !25, !noalias !22
  %204 = or i64 %181, 32
  %205 = getelementptr i16, i16* %130, i64 %204
  %206 = getelementptr i16, i16* %157, i64 %204
  %207 = bitcast i16* %205 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !22
  %209 = getelementptr i16, i16* %205, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !22
  %212 = bitcast i16* %206 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %212, align 2, !alias.scope !25, !noalias !22
  %213 = getelementptr i16, i16* %206, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %214, align 2, !alias.scope !25, !noalias !22
  %215 = or i64 %181, 48
  %216 = getelementptr i16, i16* %130, i64 %215
  %217 = getelementptr i16, i16* %157, i64 %215
  %218 = bitcast i16* %216 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !22
  %220 = getelementptr i16, i16* %216, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !22
  %223 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %223, align 2, !alias.scope !25, !noalias !22
  %224 = getelementptr i16, i16* %217, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %225, align 2, !alias.scope !25, !noalias !22
  %226 = add i64 %181, 64
  %227 = add i64 %182, -4
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %180, !llvm.loop !27

229:                                              ; preds = %180, %168
  %230 = phi i64 [ 0, %168 ], [ %226, %180 ]
  %231 = icmp eq i64 %176, 0
  br i1 %231, label %248, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %245, %232 ], [ %230, %229 ]
  %234 = phi i64 [ %246, %232 ], [ %176, %229 ]
  %235 = getelementptr i16, i16* %130, i64 %233
  %236 = getelementptr i16, i16* %157, i64 %233
  %237 = bitcast i16* %235 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !22
  %239 = getelementptr i16, i16* %235, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !22
  %242 = bitcast i16* %236 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %242, align 2, !alias.scope !25, !noalias !22
  %243 = getelementptr i16, i16* %236, i64 8
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %244, align 2, !alias.scope !25, !noalias !22
  %245 = add i64 %233, 16
  %246 = add i64 %234, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %232, !llvm.loop !28

248:                                              ; preds = %232, %229
  %249 = icmp eq i64 %159, %169
  br i1 %249, label %303, label %250

250:                                              ; preds = %248, %161, %156
  %251 = phi i64 [ %158, %161 ], [ %158, %156 ], [ %170, %248 ]
  %252 = phi i16* [ %130, %161 ], [ %130, %156 ], [ %171, %248 ]
  %253 = phi i16* [ %157, %161 ], [ %157, %156 ], [ %172, %248 ]
  %254 = add i64 %251, -1
  %255 = and i64 %251, 7
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %268, label %257

257:                                              ; preds = %250, %257
  %258 = phi i64 [ %263, %257 ], [ %251, %250 ]
  %259 = phi i16* [ %265, %257 ], [ %252, %250 ]
  %260 = phi i16* [ %264, %257 ], [ %253, %250 ]
  %261 = phi i64 [ %266, %257 ], [ %255, %250 ]
  %262 = load i16, i16* %259, align 2
  store i16 %262, i16* %260, align 2
  %263 = add i64 %258, -1
  %264 = getelementptr inbounds i16, i16* %260, i64 1
  %265 = getelementptr inbounds i16, i16* %259, i64 1
  %266 = add i64 %261, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %257, !llvm.loop !29

268:                                              ; preds = %257, %250
  %269 = phi i64 [ %251, %250 ], [ %263, %257 ]
  %270 = phi i16* [ %252, %250 ], [ %265, %257 ]
  %271 = phi i16* [ %253, %250 ], [ %264, %257 ]
  %272 = icmp ult i64 %254, 7
  br i1 %272, label %303, label %273

273:                                              ; preds = %268, %273
  %274 = phi i64 [ %299, %273 ], [ %269, %268 ]
  %275 = phi i16* [ %301, %273 ], [ %270, %268 ]
  %276 = phi i16* [ %300, %273 ], [ %271, %268 ]
  %277 = load i16, i16* %275, align 2
  store i16 %277, i16* %276, align 2
  %278 = getelementptr inbounds i16, i16* %276, i64 1
  %279 = getelementptr inbounds i16, i16* %275, i64 1
  %280 = load i16, i16* %279, align 2
  store i16 %280, i16* %278, align 2
  %281 = getelementptr inbounds i16, i16* %276, i64 2
  %282 = getelementptr inbounds i16, i16* %275, i64 2
  %283 = load i16, i16* %282, align 2
  store i16 %283, i16* %281, align 2
  %284 = getelementptr inbounds i16, i16* %276, i64 3
  %285 = getelementptr inbounds i16, i16* %275, i64 3
  %286 = load i16, i16* %285, align 2
  store i16 %286, i16* %284, align 2
  %287 = getelementptr inbounds i16, i16* %276, i64 4
  %288 = getelementptr inbounds i16, i16* %275, i64 4
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = getelementptr inbounds i16, i16* %276, i64 5
  %291 = getelementptr inbounds i16, i16* %275, i64 5
  %292 = load i16, i16* %291, align 2
  store i16 %292, i16* %290, align 2
  %293 = getelementptr inbounds i16, i16* %276, i64 6
  %294 = getelementptr inbounds i16, i16* %275, i64 6
  %295 = load i16, i16* %294, align 2
  store i16 %295, i16* %293, align 2
  %296 = getelementptr inbounds i16, i16* %276, i64 7
  %297 = getelementptr inbounds i16, i16* %275, i64 7
  %298 = load i16, i16* %297, align 2
  store i16 %298, i16* %296, align 2
  %299 = add i64 %274, -8
  %300 = getelementptr inbounds i16, i16* %276, i64 8
  %301 = getelementptr inbounds i16, i16* %275, i64 8
  %302 = icmp eq i64 %299, 0
  br i1 %302, label %303, label %273, !llvm.loop !30

303:                                              ; preds = %268, %273, %248, %126
  %304 = getelementptr inbounds %struct.AnswersQueryData, %struct.AnswersQueryData* %4, i64 0, i32 1
  store i32 %2, i32* %304, align 8
  %305 = tail call i8* @_Znwm(i64 48) #10, !noalias !31
  %306 = bitcast i8* %305 to %"struct.std::__1::__list_node_base"**
  %307 = getelementptr inbounds i8, i8* %305, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* nonnull align 8 %121, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 24, i1 false) #8
  %308 = getelementptr inbounds i8, i8* %305, i64 40
  %309 = bitcast i8* %308 to i32*
  store i32 %2, i32* %309, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %306, align 8
  %310 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %311 = getelementptr inbounds i8, i8* %305, i64 8
  %312 = bitcast i8* %311 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %310, %"struct.std::__1::__list_node_base"** %312, align 8
  %313 = bitcast %"struct.std::__1::__list_node_base"* %310 to i8**
  store i8* %305, i8** %313, align 8
  %314 = bitcast %"struct.std::__1::__list_node_base"** %6 to i8**
  store i8* %305, i8** %314, align 8
  %315 = load i64, i64* %89, align 8
  %316 = add i64 %315, 1
  store i64 %316, i64* %89, align 8
  %317 = bitcast %struct.AnswersQueryData* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %317, i64 0, i32 1, i32 1
  %319 = load i8, i8* %318, align 1
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %303
  %322 = bitcast %struct.AnswersQueryData* %4 to i8**
  %323 = load i8*, i8** %322, align 8
  tail call void @_ZdlPv(i8* %323) #10
  br label %324

324:                                              ; preds = %303, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #8
  br label %325

325:                                              ; preds = %67, %63, %61, %324
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__14listI16AnswersQueryDataNS_9allocatorIS1_EEE15__allocate_nodeERNS2_INS_11__list_nodeIS1_PvEEEE: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__14listI16AnswersQueryDataNS_9allocatorIS1_EEE15__allocate_nodeERNS2_INS_11__list_nodeIS1_PvEEEE"}
