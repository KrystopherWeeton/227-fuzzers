; ModuleID = '../../components/viz/common/display/overlay_strategy.cc'
source_filename = "../../components/viz/common/display/overlay_strategy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.8" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::BasicStringPiece"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"single-fullscreen\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"single-on-top\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"underlay\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"cast\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"../../components/viz/common/display/overlay_strategy.cc\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"Unrecognized overlay strategy \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ParseOverlayStrategiesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.6", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.std::__1::vector.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::vector.6"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* nonnull sret %3, i8* %19, i64 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 1) #9
  %24 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %25 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %26 = icmp eq %"class.base::BasicStringPiece"* %24, %25
  br i1 %26, label %36, label %27

27:                                               ; preds = %2
  %28 = bitcast i32** %5 to i64*
  %29 = bitcast %"class.std::__1::vector"* %0 to i64*
  %30 = bitcast i32** %6 to i64*
  %31 = bitcast %"class.logging::LogMessage"* %4 to i8*
  %32 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  br label %44

34:                                               ; preds = %273
  %35 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi %"class.base::BasicStringPiece"* [ %35, %34 ], [ %24, %2 ]
  %38 = icmp eq %"class.base::BasicStringPiece"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = ptrtoint %"class.base::BasicStringPiece"* %37 to i64
  %41 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.base::BasicStringPiece"* %37 to i8*
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void

44:                                               ; preds = %27, %273
  %45 = phi %"class.base::BasicStringPiece"* [ %24, %27 ], [ %274, %273 ]
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %266 [
    i64 17, label %50
    i64 13, label %104
    i64 8, label %158
    i64 4, label %212
  ]

50:                                               ; preds = %44
  %51 = call i32 @bcmp(i8* %47, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i64 17) #9
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %266

53:                                               ; preds = %50
  %54 = load i32*, i32** %5, align 8
  %55 = load i32*, i32** %6, align 8
  %56 = icmp ult i32* %54, %55
  %57 = ptrtoint i32* %55 to i64
  br i1 %56, label %58, label %61

58:                                               ; preds = %53
  store i32 2, i32* %54, align 4
  %59 = getelementptr inbounds i32, i32* %54, i64 1
  %60 = ptrtoint i32* %59 to i64
  store i64 %60, i64* %28, align 8
  br label %273

61:                                               ; preds = %53
  %62 = ptrtoint i32* %54 to i64
  %63 = load i64, i64* %29, align 8
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 2
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 4611686018427387903
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #11
  unreachable

70:                                               ; preds = %61
  %71 = sub i64 %57, %63
  %72 = ashr exact i64 %71, 2
  %73 = icmp ult i64 %72, 2305843009213693951
  br i1 %73, label %74, label %82

74:                                               ; preds = %70
  %75 = ashr exact i64 %71, 1
  %76 = icmp ult i64 %75, %66
  %77 = select i1 %76, i64 %66, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp ugt i64 %77, 4611686018427387903
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  call void @abort() #11
  unreachable

82:                                               ; preds = %79, %70
  %83 = phi i64 [ %77, %79 ], [ 4611686018427387903, %70 ]
  %84 = shl i64 %83, 2
  %85 = call i8* @_Znwm(i64 %84) #10
  %86 = bitcast i8* %85 to i32*
  br label %87

87:                                               ; preds = %82, %74
  %88 = phi i64 [ %83, %82 ], [ 0, %74 ]
  %89 = phi i8* [ %85, %82 ], [ null, %74 ]
  %90 = phi i32* [ %86, %82 ], [ null, %74 ]
  %91 = getelementptr inbounds i32, i32* %90, i64 %65
  %92 = getelementptr inbounds i32, i32* %90, i64 %88
  %93 = ptrtoint i32* %92 to i64
  store i32 2, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %91, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = ptrtoint i32* %90 to i64
  %97 = icmp sgt i64 %64, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %87
  %99 = inttoptr i64 %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %99, i64 %64, i1 false) #9
  br label %100

100:                                              ; preds = %98, %87
  store i64 %96, i64* %29, align 8
  store i64 %95, i64* %28, align 8
  store i64 %93, i64* %30, align 8
  %101 = icmp eq i64 %63, 0
  br i1 %101, label %273, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %63 to i8*
  call void @_ZdlPv(i8* %103) #10
  br label %273

104:                                              ; preds = %44
  %105 = call i32 @bcmp(i8* %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 %49) #9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %266

107:                                              ; preds = %104
  %108 = load i32*, i32** %5, align 8
  %109 = load i32*, i32** %6, align 8
  %110 = icmp ult i32* %108, %109
  %111 = ptrtoint i32* %109 to i64
  br i1 %110, label %112, label %115

112:                                              ; preds = %107
  store i32 3, i32* %108, align 4
  %113 = getelementptr inbounds i32, i32* %108, i64 1
  %114 = ptrtoint i32* %113 to i64
  store i64 %114, i64* %28, align 8
  br label %273

115:                                              ; preds = %107
  %116 = ptrtoint i32* %108 to i64
  %117 = load i64, i64* %29, align 8
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 2
  %120 = add nsw i64 %119, 1
  %121 = icmp ugt i64 %120, 4611686018427387903
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %123) #11
  unreachable

124:                                              ; preds = %115
  %125 = sub i64 %111, %117
  %126 = ashr exact i64 %125, 2
  %127 = icmp ult i64 %126, 2305843009213693951
  br i1 %127, label %128, label %136

128:                                              ; preds = %124
  %129 = ashr exact i64 %125, 1
  %130 = icmp ult i64 %129, %120
  %131 = select i1 %130, i64 %120, i64 %129
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %128
  %134 = icmp ugt i64 %131, 4611686018427387903
  br i1 %134, label %135, label %136

135:                                              ; preds = %133
  call void @abort() #11
  unreachable

136:                                              ; preds = %133, %124
  %137 = phi i64 [ %131, %133 ], [ 4611686018427387903, %124 ]
  %138 = shl i64 %137, 2
  %139 = call i8* @_Znwm(i64 %138) #10
  %140 = bitcast i8* %139 to i32*
  br label %141

141:                                              ; preds = %136, %128
  %142 = phi i64 [ %137, %136 ], [ 0, %128 ]
  %143 = phi i8* [ %139, %136 ], [ null, %128 ]
  %144 = phi i32* [ %140, %136 ], [ null, %128 ]
  %145 = getelementptr inbounds i32, i32* %144, i64 %119
  %146 = getelementptr inbounds i32, i32* %144, i64 %142
  %147 = ptrtoint i32* %146 to i64
  store i32 3, i32* %145, align 4
  %148 = getelementptr inbounds i32, i32* %145, i64 1
  %149 = ptrtoint i32* %148 to i64
  %150 = ptrtoint i32* %144 to i64
  %151 = icmp sgt i64 %118, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %141
  %153 = inttoptr i64 %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %153, i64 %118, i1 false) #9
  br label %154

154:                                              ; preds = %152, %141
  store i64 %150, i64* %29, align 8
  store i64 %149, i64* %28, align 8
  store i64 %147, i64* %30, align 8
  %155 = icmp eq i64 %117, 0
  br i1 %155, label %273, label %156

156:                                              ; preds = %154
  %157 = inttoptr i64 %117 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %273

158:                                              ; preds = %44
  %159 = call i32 @bcmp(i8* %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 %49) #9
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %266

161:                                              ; preds = %158
  %162 = load i32*, i32** %5, align 8
  %163 = load i32*, i32** %6, align 8
  %164 = icmp ult i32* %162, %163
  %165 = ptrtoint i32* %163 to i64
  br i1 %164, label %166, label %169

166:                                              ; preds = %161
  store i32 4, i32* %162, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 1
  %168 = ptrtoint i32* %167 to i64
  store i64 %168, i64* %28, align 8
  br label %273

169:                                              ; preds = %161
  %170 = ptrtoint i32* %162 to i64
  %171 = load i64, i64* %29, align 8
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 2
  %174 = add nsw i64 %173, 1
  %175 = icmp ugt i64 %174, 4611686018427387903
  br i1 %175, label %176, label %178

176:                                              ; preds = %169
  %177 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %177) #11
  unreachable

178:                                              ; preds = %169
  %179 = sub i64 %165, %171
  %180 = ashr exact i64 %179, 2
  %181 = icmp ult i64 %180, 2305843009213693951
  br i1 %181, label %182, label %190

182:                                              ; preds = %178
  %183 = ashr exact i64 %179, 1
  %184 = icmp ult i64 %183, %174
  %185 = select i1 %184, i64 %174, i64 %183
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %195, label %187

187:                                              ; preds = %182
  %188 = icmp ugt i64 %185, 4611686018427387903
  br i1 %188, label %189, label %190

189:                                              ; preds = %187
  call void @abort() #11
  unreachable

190:                                              ; preds = %187, %178
  %191 = phi i64 [ %185, %187 ], [ 4611686018427387903, %178 ]
  %192 = shl i64 %191, 2
  %193 = call i8* @_Znwm(i64 %192) #10
  %194 = bitcast i8* %193 to i32*
  br label %195

195:                                              ; preds = %190, %182
  %196 = phi i64 [ %191, %190 ], [ 0, %182 ]
  %197 = phi i8* [ %193, %190 ], [ null, %182 ]
  %198 = phi i32* [ %194, %190 ], [ null, %182 ]
  %199 = getelementptr inbounds i32, i32* %198, i64 %173
  %200 = getelementptr inbounds i32, i32* %198, i64 %196
  %201 = ptrtoint i32* %200 to i64
  store i32 4, i32* %199, align 4
  %202 = getelementptr inbounds i32, i32* %199, i64 1
  %203 = ptrtoint i32* %202 to i64
  %204 = ptrtoint i32* %198 to i64
  %205 = icmp sgt i64 %172, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %195
  %207 = inttoptr i64 %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %207, i64 %172, i1 false) #9
  br label %208

208:                                              ; preds = %206, %195
  store i64 %204, i64* %29, align 8
  store i64 %203, i64* %28, align 8
  store i64 %201, i64* %30, align 8
  %209 = icmp eq i64 %171, 0
  br i1 %209, label %273, label %210

210:                                              ; preds = %208
  %211 = inttoptr i64 %171 to i8*
  call void @_ZdlPv(i8* %211) #10
  br label %273

212:                                              ; preds = %44
  %213 = call i32 @bcmp(i8* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 %49) #9
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %266

215:                                              ; preds = %212
  %216 = load i32*, i32** %5, align 8
  %217 = load i32*, i32** %6, align 8
  %218 = icmp ult i32* %216, %217
  %219 = ptrtoint i32* %217 to i64
  br i1 %218, label %220, label %223

220:                                              ; preds = %215
  store i32 5, i32* %216, align 4
  %221 = getelementptr inbounds i32, i32* %216, i64 1
  %222 = ptrtoint i32* %221 to i64
  store i64 %222, i64* %28, align 8
  br label %273

223:                                              ; preds = %215
  %224 = ptrtoint i32* %216 to i64
  %225 = load i64, i64* %29, align 8
  %226 = sub i64 %224, %225
  %227 = ashr exact i64 %226, 2
  %228 = add nsw i64 %227, 1
  %229 = icmp ugt i64 %228, 4611686018427387903
  br i1 %229, label %230, label %232

230:                                              ; preds = %223
  %231 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %231) #11
  unreachable

232:                                              ; preds = %223
  %233 = sub i64 %219, %225
  %234 = ashr exact i64 %233, 2
  %235 = icmp ult i64 %234, 2305843009213693951
  br i1 %235, label %236, label %244

236:                                              ; preds = %232
  %237 = ashr exact i64 %233, 1
  %238 = icmp ult i64 %237, %228
  %239 = select i1 %238, i64 %228, i64 %237
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %249, label %241

241:                                              ; preds = %236
  %242 = icmp ugt i64 %239, 4611686018427387903
  br i1 %242, label %243, label %244

243:                                              ; preds = %241
  call void @abort() #11
  unreachable

244:                                              ; preds = %241, %232
  %245 = phi i64 [ %239, %241 ], [ 4611686018427387903, %232 ]
  %246 = shl i64 %245, 2
  %247 = call i8* @_Znwm(i64 %246) #10
  %248 = bitcast i8* %247 to i32*
  br label %249

249:                                              ; preds = %244, %236
  %250 = phi i64 [ %245, %244 ], [ 0, %236 ]
  %251 = phi i8* [ %247, %244 ], [ null, %236 ]
  %252 = phi i32* [ %248, %244 ], [ null, %236 ]
  %253 = getelementptr inbounds i32, i32* %252, i64 %227
  %254 = getelementptr inbounds i32, i32* %252, i64 %250
  %255 = ptrtoint i32* %254 to i64
  store i32 5, i32* %253, align 4
  %256 = getelementptr inbounds i32, i32* %253, i64 1
  %257 = ptrtoint i32* %256 to i64
  %258 = ptrtoint i32* %252 to i64
  %259 = icmp sgt i64 %226, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %249
  %261 = inttoptr i64 %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %261, i64 %226, i1 false) #9
  br label %262

262:                                              ; preds = %260, %249
  store i64 %258, i64* %29, align 8
  store i64 %257, i64* %28, align 8
  store i64 %255, i64* %30, align 8
  %263 = icmp eq i64 %225, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %262
  %265 = inttoptr i64 %225 to i8*
  call void @_ZdlPv(i8* %265) #10
  br label %273

266:                                              ; preds = %158, %104, %50, %44, %212
  %267 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %267, label %268, label %273

268:                                              ; preds = %266
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %31) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0), i32 28, i32 2) #9
  %269 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30) #9
  %270 = load i8*, i8** %46, align 8
  %271 = load i64, i64* %48, align 8
  %272 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160) %269, i8* %270, i64 %271) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %31) #9
  br label %273

273:                                              ; preds = %268, %266, %264, %262, %220, %210, %208, %166, %156, %154, %112, %102, %100, %58
  %274 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 1
  %275 = icmp eq %"class.base::BasicStringPiece"* %274, %25
  br i1 %275, label %34, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
