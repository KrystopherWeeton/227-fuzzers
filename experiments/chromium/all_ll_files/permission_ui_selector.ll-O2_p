; ModuleID = '../../components/permissions/permission_ui_selector.cc'
source_filename = "../../components/permissions/permission_ui_selector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.permissions::PermissionUiSelector::Decision" = type { %"class.absl::optional", %"class.absl::optional.0" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i32 }
%"class.permissions::PermissionUiSelector" = type { i32 (...)** }

$_ZN11permissions20PermissionUiSelectorD2Ev = comdat any

$_ZN11permissions20PermissionUiSelectorD0Ev = comdat any

$_ZN11permissions20PermissionUiSelector6CancelEv = comdat any

@_ZTVN11permissions20PermissionUiSelectorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.permissions::PermissionUiSelector"*)* @_ZN11permissions20PermissionUiSelectorD2Ev to i8*), i8* bitcast (void (%"class.permissions::PermissionUiSelector"*)* @_ZN11permissions20PermissionUiSelectorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.permissions::PermissionUiSelector"*)* @_ZN11permissions20PermissionUiSelector6CancelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.permissions::PermissionUiSelector"*)* @_ZN11permissions20PermissionUiSelector30PredictedGrantLikelihoodForUKMEv to i8*)] }, align 8

@_ZN11permissions20PermissionUiSelector8DecisionC1EN4absl8optionalINS0_13QuietUiReasonEEENS3_INS0_13WarningReasonEEE = hidden unnamed_addr alias void (%"struct.permissions::PermissionUiSelector::Decision"*, i64, i64), void (%"struct.permissions::PermissionUiSelector::Decision"*, i64, i64)* @_ZN11permissions20PermissionUiSelector8DecisionC2EN4absl8optionalINS0_13QuietUiReasonEEENS3_INS0_13WarningReasonEEE
@_ZN11permissions20PermissionUiSelector8DecisionD1Ev = hidden unnamed_addr alias void (%"struct.permissions::PermissionUiSelector::Decision"*), void (%"struct.permissions::PermissionUiSelector::Decision"*)* @_ZN11permissions20PermissionUiSelector8DecisionD2Ev
@_ZN11permissions20PermissionUiSelector8DecisionC1ERKS1_ = hidden unnamed_addr alias void (%"struct.permissions::PermissionUiSelector::Decision"*, %"struct.permissions::PermissionUiSelector::Decision"*), void (%"struct.permissions::PermissionUiSelector::Decision"*, %"struct.permissions::PermissionUiSelector::Decision"*)* @_ZN11permissions20PermissionUiSelector8DecisionC2ERKS1_

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11permissions20PermissionUiSelector23ShouldSuppressAnimationEN4absl8optionalINS0_13QuietUiReasonEEE(i64) local_unnamed_addr #0 align 2 {
  %2 = trunc i64 %0 to i8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = lshr i64 %0, 32
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 3
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i1 [ true, %1 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11permissions20PermissionUiSelector8DecisionC2EN4absl8optionalINS0_13QuietUiReasonEEENS3_INS0_13WarningReasonEEE(%"struct.permissions::PermissionUiSelector::Decision"* nocapture, i64, i64) unnamed_addr #1 align 2 {
  %4 = bitcast %"struct.permissions::PermissionUiSelector::Decision"* %0 to i64*
  store i64 %1, i64* %4, align 4
  %5 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %0, i64 0, i32 1
  %6 = bitcast %"class.absl::optional.0"* %5 to i64*
  store i64 %2, i64* %6, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11permissions20PermissionUiSelector8DecisionD2Ev(%"struct.permissions::PermissionUiSelector::Decision"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions20PermissionUiSelector8DecisionC2ERKS1_(%"struct.permissions::PermissionUiSelector::Decision"* nocapture, %"struct.permissions::PermissionUiSelector::Decision"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.permissions::PermissionUiSelector::Decision"* @_ZN11permissions20PermissionUiSelector8DecisionaSERKS1_(%"struct.permissions::PermissionUiSelector::Decision"* returned, %"struct.permissions::PermissionUiSelector::Decision"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  ret %"struct.permissions::PermissionUiSelector::Decision"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11permissions20PermissionUiSelector8Decision27UseNormalUiAndShowNoWarningEv(%"struct.permissions::PermissionUiSelector::Decision"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.permissions::PermissionUiSelector::Decision", %"struct.permissions::PermissionUiSelector::Decision"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN11permissions20PermissionUiSelector30PredictedGrantLikelihoodForUKMEv(%"class.permissions::PermissionUiSelector"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11permissions20PermissionUiSelectorD2Ev(%"class.permissions::PermissionUiSelector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11permissions20PermissionUiSelectorD0Ev(%"class.permissions::PermissionUiSelector"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11permissions20PermissionUiSelector6CancelEv(%"class.permissions::PermissionUiSelector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
