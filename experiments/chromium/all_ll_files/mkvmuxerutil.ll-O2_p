; ModuleID = '../../third_party/libwebm/source/mkvmuxer/mkvmuxerutil.cc'
source_filename = "../../third_party/libwebm/source/mkvmuxer/mkvmuxerutil.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mkvmuxer::IMkvWriter" = type { i32 (...)** }
%"class.mkvmuxer::Frame" = type <{ i64, i8*, i64, i64, i8, [7 x i8], i8*, i8, [7 x i8], i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.mkvmuxer::Cluster" = type { i32, i8, i8, i8, i64, i64, i64, i64, i64, i8, %"class.std::__1::map", %"class.std::__1::map.4", %"class.mkvmuxer::IMkvWriter"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8mkvmuxer16GetCodedUIntSizeEy(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 127
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = icmp ult i64 %0, 16383
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %0, 2097151
  br i1 %6, label %16, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %0, 268435455
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %0, 34359738367
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %0, 4398046511103
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %0, 562949953421311
  %15 = select i1 %14, i32 7, i32 8
  br label %16

16:                                               ; preds = %13, %11, %9, %7, %5, %3, %1
  %17 = phi i32 [ 1, %1 ], [ 2, %3 ], [ 3, %5 ], [ 4, %7 ], [ 5, %9 ], [ 6, %11 ], [ %15, %13 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8mkvmuxer11GetUIntSizeEy(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 256
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = icmp ult i64 %0, 65536
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %0, 16777216
  br i1 %6, label %16, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %0, 4294967296
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %0, 1099511627776
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %0, 281474976710656
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %0, 72057594037927936
  %15 = select i1 %14, i32 7, i32 8
  br label %16

16:                                               ; preds = %13, %11, %9, %7, %5, %3, %1
  %17 = phi i32 [ 1, %1 ], [ 2, %3 ], [ 3, %5 ], [ 4, %7 ], [ 5, %9 ], [ 6, %11 ], [ %15, %13 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8mkvmuxer10GetIntSizeEx(i64) local_unnamed_addr #0 {
  %2 = ashr i64 %0, 63
  %3 = xor i64 %2, %0
  %4 = shl i64 %3, 1
  %5 = icmp ult i64 %4, 256
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = icmp ult i64 %4, 65536
  br i1 %7, label %19, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %4, 16777216
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %4, 4294967296
  br i1 %11, label %19, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %4, 1099511627776
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %4, 281474976710656
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = icmp ult i64 %4, 72057594037927936
  %18 = select i1 %17, i32 7, i32 8
  br label %19

19:                                               ; preds = %1, %6, %8, %10, %12, %14, %16
  %20 = phi i32 [ 1, %1 ], [ 2, %6 ], [ 3, %8 ], [ 4, %10 ], [ 5, %12 ], [ 6, %14 ], [ %18, %16 ]
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64, i64) local_unnamed_addr #0 {
  %3 = icmp ult i64 %0, 256
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %0, 65536
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %0, 16777216
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %0, 4294967296
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 1099511627776
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 281474976710656
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %0, 72057594037927936
  %16 = select i1 %15, i64 7, i64 8
  br label %17

17:                                               ; preds = %2, %4, %6, %8, %10, %12, %14
  %18 = phi i64 [ 1, %2 ], [ 2, %4 ], [ 3, %6 ], [ 4, %8 ], [ 5, %10 ], [ 6, %12 ], [ %16, %14 ]
  %19 = icmp ult i64 %1, 127
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = icmp ult i64 %1, 16383
  br i1 %21, label %33, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 2097151
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 268435455
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 34359738367
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %1, 4398046511103
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %1, 562949953421311
  %32 = select i1 %31, i64 7, i64 8
  br label %33

33:                                               ; preds = %17, %20, %22, %24, %26, %28, %30
  %34 = phi i64 [ 1, %17 ], [ 2, %20 ], [ 3, %22 ], [ 4, %24 ], [ 5, %26 ], [ 6, %28 ], [ %32, %30 ]
  %35 = add nuw nsw i64 %34, %18
  ret i64 %35
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyx(i64, i64) local_unnamed_addr #0 {
  %3 = icmp ult i64 %0, 256
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %0, 65536
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %0, 16777216
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %0, 4294967296
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 1099511627776
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 281474976710656
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %0, 72057594037927936
  %16 = select i1 %15, i64 8, i64 9
  br label %17

17:                                               ; preds = %2, %4, %6, %8, %10, %12, %14
  %18 = phi i64 [ 2, %2 ], [ 3, %4 ], [ 4, %6 ], [ 5, %8 ], [ 6, %10 ], [ 7, %12 ], [ %16, %14 ]
  %19 = ashr i64 %1, 63
  %20 = xor i64 %19, %1
  %21 = shl i64 %20, 1
  %22 = icmp ult i64 %21, 256
  br i1 %22, label %36, label %23

23:                                               ; preds = %17
  %24 = icmp ult i64 %21, 65536
  br i1 %24, label %36, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %21, 16777216
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %21, 4294967296
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %21, 1099511627776
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = icmp ult i64 %21, 281474976710656
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = icmp ult i64 %21, 72057594037927936
  %35 = select i1 %34, i64 7, i64 8
  br label %36

36:                                               ; preds = %17, %23, %25, %27, %29, %31, %33
  %37 = phi i64 [ 1, %17 ], [ 2, %23 ], [ 3, %25 ], [ 4, %27 ], [ 5, %29 ], [ 6, %31 ], [ %35, %33 ]
  %38 = add nuw nsw i64 %18, %37
  ret i64 %38
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64, i64) local_unnamed_addr #0 {
  %3 = icmp ult i64 %0, 256
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %0, 65536
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %0, 16777216
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %0, 4294967296
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 1099511627776
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 281474976710656
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %0, 72057594037927936
  %16 = select i1 %15, i64 8, i64 9
  br label %17

17:                                               ; preds = %14, %12, %10, %8, %6, %4, %2
  %18 = phi i64 [ 2, %2 ], [ 3, %4 ], [ 4, %6 ], [ 5, %8 ], [ 6, %10 ], [ 7, %12 ], [ %16, %14 ]
  %19 = icmp ult i64 %1, 256
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = icmp ult i64 %1, 65536
  br i1 %21, label %33, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 16777216
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 4294967296
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 1099511627776
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %1, 281474976710656
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %1, 72057594037927936
  %32 = select i1 %31, i64 7, i64 8
  br label %33

33:                                               ; preds = %17, %20, %22, %24, %26, %28, %30
  %34 = phi i64 [ 1, %17 ], [ 2, %20 ], [ 3, %22 ], [ 4, %24 ], [ 5, %26 ], [ 6, %28 ], [ %32, %30 ]
  %35 = add nuw nsw i64 %34, %18
  ret i64 %35
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyyy(i64, i64, i64) local_unnamed_addr #0 {
  %4 = icmp ult i64 %0, 256
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %0, 65536
  br i1 %6, label %18, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %0, 16777216
  br i1 %8, label %18, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %0, 4294967296
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %0, 1099511627776
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %0, 281474976710656
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = icmp ult i64 %0, 72057594037927936
  %17 = select i1 %16, i64 8, i64 9
  br label %18

18:                                               ; preds = %3, %5, %7, %9, %11, %13, %15
  %19 = phi i64 [ 2, %3 ], [ 3, %5 ], [ 4, %7 ], [ 5, %9 ], [ 6, %11 ], [ 7, %13 ], [ %17, %15 ]
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = icmp ult i64 %1, 256
  br i1 %22, label %36, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %1, 65536
  br i1 %24, label %36, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %1, 16777216
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %1, 4294967296
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %1, 1099511627776
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = icmp ult i64 %1, 281474976710656
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = icmp ult i64 %1, 72057594037927936
  %35 = select i1 %34, i64 7, i64 8
  br label %36

36:                                               ; preds = %33, %31, %29, %27, %25, %23, %21, %18
  %37 = phi i64 [ %2, %18 ], [ 1, %21 ], [ 2, %23 ], [ 3, %25 ], [ 4, %27 ], [ 5, %29 ], [ 6, %31 ], [ %35, %33 ]
  %38 = add i64 %19, %37
  ret i64 %38
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64, float) local_unnamed_addr #0 {
  %3 = icmp ult i64 %0, 256
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %0, 65536
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %0, 16777216
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %0, 4294967296
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 1099511627776
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 281474976710656
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %0, 72057594037927936
  %16 = select i1 %15, i64 12, i64 13
  br label %17

17:                                               ; preds = %2, %4, %6, %8, %10, %12, %14
  %18 = phi i64 [ 6, %2 ], [ 7, %4 ], [ 8, %6 ], [ 9, %8 ], [ 10, %10 ], [ 11, %12 ], [ %16, %14 ]
  ret i64 %18
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64, i8* readonly) local_unnamed_addr #2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %0, 256
  br i1 %5, label %19, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %0, 65536
  br i1 %7, label %19, label %8

8:                                                ; preds = %6
  %9 = icmp ult i64 %0, 16777216
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 4294967296
  br i1 %11, label %19, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 1099511627776
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %0, 281474976710656
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = icmp ult i64 %0, 72057594037927936
  %18 = select i1 %17, i64 7, i64 8
  br label %19

19:                                               ; preds = %4, %6, %8, %10, %12, %14, %16
  %20 = phi i64 [ 1, %4 ], [ 2, %6 ], [ 3, %8 ], [ 4, %10 ], [ 5, %12 ], [ 6, %14 ], [ %18, %16 ]
  %21 = tail call i64 @strlen(i8* nonnull %1) #8
  %22 = add i64 %21, %20
  %23 = icmp ult i64 %21, 127
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = icmp ult i64 %21, 16383
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %21, 2097151
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %21, 268435455
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %21, 34359738367
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = icmp ult i64 %21, 4398046511103
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = icmp ult i64 %21, 562949953421311
  %36 = select i1 %35, i64 7, i64 8
  br label %37

37:                                               ; preds = %19, %24, %26, %28, %30, %32, %34
  %38 = phi i64 [ 1, %19 ], [ 2, %24 ], [ 3, %26 ], [ 4, %28 ], [ 5, %30 ], [ 6, %32 ], [ %36, %34 ]
  %39 = add i64 %22, %38
  br label %40

40:                                               ; preds = %2, %37
  %41 = phi i64 [ %39, %37 ], [ 0, %2 ]
  ret i64 %41
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64, i8* readnone, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %0, 256
  br i1 %6, label %20, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %0, 65536
  br i1 %8, label %20, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %0, 16777216
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %0, 4294967296
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %0, 1099511627776
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = icmp ult i64 %0, 281474976710656
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp ult i64 %0, 72057594037927936
  %19 = select i1 %18, i64 7, i64 8
  br label %20

20:                                               ; preds = %5, %7, %9, %11, %13, %15, %17
  %21 = phi i64 [ 1, %5 ], [ 2, %7 ], [ 3, %9 ], [ 4, %11 ], [ 5, %13 ], [ 6, %15 ], [ %19, %17 ]
  %22 = add i64 %21, %2
  %23 = icmp ult i64 %2, 127
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = icmp ult i64 %2, 16383
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %2, 2097151
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %2, 268435455
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %2, 34359738367
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = icmp ult i64 %2, 4398046511103
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = icmp ult i64 %2, 562949953421311
  %36 = select i1 %35, i64 7, i64 8
  br label %37

37:                                               ; preds = %20, %24, %26, %28, %30, %32, %34
  %38 = phi i64 [ 1, %20 ], [ 2, %24 ], [ 3, %26 ], [ 4, %28 ], [ 5, %30 ], [ 6, %32 ], [ %36, %34 ]
  %39 = add i64 %22, %38
  br label %40

40:                                               ; preds = %3, %37
  %41 = phi i64 [ %39, %37 ], [ 0, %3 ]
  ret i64 %41
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8mkvmuxer19EbmlDateElementSizeEy(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 256
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = icmp ult i64 %0, 65536
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %0, 16777216
  br i1 %6, label %16, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %0, 4294967296
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %0, 1099511627776
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %0, 281474976710656
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %0, 72057594037927936
  %15 = select i1 %14, i64 16, i64 17
  br label %16

16:                                               ; preds = %1, %3, %5, %7, %9, %11, %13
  %17 = phi i64 [ 10, %1 ], [ 11, %3 ], [ 12, %5 ], [ 13, %7 ], [ 14, %9 ], [ 15, %11 ], [ %15, %13 ]
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer12SerializeIntEPNS_10IMkvWriterExi(%"class.mkvmuxer::IMkvWriter"*, i64, i32) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  %6 = add i32 %2, -1
  %7 = icmp ugt i32 %6, 7
  %8 = or i1 %5, %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %11 = add nuw nsw i32 %2, 1
  %12 = zext i32 %11 to i64
  br label %16

13:                                               ; preds = %16
  %14 = add nuw nsw i64 %17, 1
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %31, label %16

16:                                               ; preds = %13, %9
  %17 = phi i64 [ %14, %13 ], [ 1, %9 ]
  %18 = phi i32 [ %29, %13 ], [ undef, %9 ]
  %19 = trunc i64 %17 to i32
  %20 = sub nsw i32 %2, %19
  %21 = shl nsw i32 %20, 3
  %22 = zext i32 %21 to i64
  %23 = ashr i64 %1, %22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %24 = trunc i64 %23 to i8
  store i8 %24, i8* %4, align 1
  %25 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %10, align 8
  %26 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %25, align 8
  %27 = call i32 %26(%"class.mkvmuxer::IMkvWriter"* %0, i8* nonnull %4, i32 1) #9
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 %27, i32 %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %30 = icmp sgt i32 %27, -1
  br i1 %30, label %13, label %31

31:                                               ; preds = %16, %13, %3
  %32 = phi i32 [ -1, %3 ], [ %29, %16 ], [ 0, %13 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer14SerializeFloatEPNS_10IMkvWriterEf(%"class.mkvmuxer::IMkvWriter"*, float) local_unnamed_addr #4 {
  %3 = alloca i8, align 1
  %4 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = bitcast float %1 to i32
  %7 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %8 = lshr i32 %6, 24
  %9 = trunc i32 %8 to i8
  store i8 %9, i8* %3, align 1
  %10 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %7, align 8
  %11 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %10, align 8
  %12 = call i32 %11(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %15 = lshr i32 %6, 16
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %3, align 1
  %17 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %7, align 8
  %18 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %17, align 8
  %19 = call i32 %18(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 %12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %22 = icmp sgt i32 %19, -1
  br i1 %22, label %25, label %23

23:                                               ; preds = %5, %14, %25, %2
  %24 = phi i32 [ -1, %2 ], [ %12, %5 ], [ %21, %14 ], [ %32, %25 ]
  ret i32 %24

25:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %26 = lshr i32 %6, 8
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %3, align 1
  %28 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %7, align 8
  %29 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %28, align 8
  %30 = call i32 %29(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %33 = icmp sgt i32 %30, -1
  br i1 %33, label %34, label %23

34:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %35 = trunc i32 %6 to i8
  store i8 %35, i8* %3, align 1
  %36 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %7, align 8
  %37 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %36, align 8
  %38 = call i32 %37(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, i32 %38, i32 %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %41 = icmp sgt i32 %38, -1
  %42 = select i1 %41, i32 0, i32 %40
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer9WriteUIntEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #4 {
  %3 = alloca i8, align 1
  %4 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %2
  %6 = icmp ult i64 %1, 127
  br i1 %6, label %20, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %1, 16383
  br i1 %8, label %20, label %9

9:                                                ; preds = %7
  %10 = icmp ult i64 %1, 2097151
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = icmp ult i64 %1, 268435455
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %1, 34359738367
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = icmp ult i64 %1, 4398046511103
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp ult i64 %1, 562949953421311
  %19 = select i1 %18, i32 7, i32 8
  br label %20

20:                                               ; preds = %17, %15, %13, %11, %9, %7, %5
  %21 = phi i32 [ 1, %5 ], [ 2, %7 ], [ 3, %9 ], [ 4, %11 ], [ 5, %13 ], [ 6, %15 ], [ %19, %17 ]
  %22 = mul nuw nsw i32 %21, 7
  %23 = zext i32 %22 to i64
  %24 = shl i64 1, %23
  %25 = add nsw i64 %24, -2
  %26 = icmp ult i64 %25, %1
  br i1 %26, label %50, label %27

27:                                               ; preds = %20
  %28 = or i64 %24, %1
  %29 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %30 = add nuw nsw i32 %21, 1
  %31 = zext i32 %30 to i64
  br label %35

32:                                               ; preds = %35
  %33 = add nuw nsw i64 %36, 1
  %34 = icmp eq i64 %33, %31
  br i1 %34, label %50, label %35

35:                                               ; preds = %32, %27
  %36 = phi i64 [ %33, %32 ], [ 1, %27 ]
  %37 = phi i32 [ %48, %32 ], [ undef, %27 ]
  %38 = trunc i64 %36 to i32
  %39 = sub nsw i32 %21, %38
  %40 = shl nsw i32 %39, 3
  %41 = zext i32 %40 to i64
  %42 = ashr i64 %28, %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %43 = trunc i64 %42 to i8
  store i8 %43, i8* %3, align 1
  %44 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %29, align 8
  %45 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %44, align 8
  %46 = call i32 %45(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 %37
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %49 = icmp sgt i32 %46, -1
  br i1 %49, label %32, label %50

50:                                               ; preds = %35, %32, %20, %2
  %51 = phi i32 [ -1, %2 ], [ -1, %20 ], [ %48, %35 ], [ 0, %32 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer13WriteUIntSizeEPNS_10IMkvWriterEyi(%"class.mkvmuxer::IMkvWriter"*, i64, i32) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  %6 = icmp ugt i32 %2, 8
  %7 = or i1 %5, %6
  br i1 %7, label %57, label %8

8:                                                ; preds = %3
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = mul nsw i32 %2, 7
  %12 = zext i32 %11 to i64
  %13 = shl i64 1, %12
  %14 = add nsw i64 %13, -2
  %15 = icmp ult i64 %14, %1
  br i1 %15, label %57, label %29

16:                                               ; preds = %8, %16
  %17 = phi i64 [ %23, %16 ], [ 1, %8 ]
  %18 = mul i64 %17, 7
  %19 = and i64 %18, 4294967295
  %20 = shl i64 1, %19
  %21 = add nsw i64 %20, -2
  %22 = icmp ult i64 %21, %1
  %23 = add nuw i64 %17, 1
  br i1 %22, label %16, label %24

24:                                               ; preds = %16
  %25 = trunc i64 %17 to i32
  %26 = zext i1 %22 to i32
  %27 = add nuw nsw i32 %25, %26
  %28 = icmp ugt i32 %27, 8
  br i1 %28, label %57, label %29

29:                                               ; preds = %10, %24
  %30 = phi i64 [ %13, %10 ], [ %20, %24 ]
  %31 = phi i32 [ %2, %10 ], [ %27, %24 ]
  %32 = or i64 %30, %1
  %33 = add nsw i32 %31, -1
  %34 = icmp ugt i32 %33, 7
  br i1 %34, label %57, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %37 = add nuw nsw i32 %31, 1
  %38 = zext i32 %37 to i64
  br label %42

39:                                               ; preds = %42
  %40 = add nuw nsw i64 %43, 1
  %41 = icmp eq i64 %40, %38
  br i1 %41, label %57, label %42

42:                                               ; preds = %39, %35
  %43 = phi i64 [ %40, %39 ], [ 1, %35 ]
  %44 = phi i32 [ %55, %39 ], [ undef, %35 ]
  %45 = trunc i64 %43 to i32
  %46 = sub nsw i32 %31, %45
  %47 = shl nsw i32 %46, 3
  %48 = zext i32 %47 to i64
  %49 = ashr i64 %32, %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %50 = trunc i64 %49 to i8
  store i8 %50, i8* %4, align 1
  %51 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %51, align 8
  %53 = call i32 %52(%"class.mkvmuxer::IMkvWriter"* %0, i8* nonnull %4, i32 1) #9
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 %44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %56 = icmp sgt i32 %53, -1
  br i1 %56, label %39, label %57

57:                                               ; preds = %42, %39, %10, %24, %29, %3
  %58 = phi i32 [ -1, %10 ], [ 0, %24 ], [ -1, %3 ], [ -1, %29 ], [ 0, %39 ], [ %55, %42 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer7WriteIDEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #4 {
  %3 = alloca i8, align 1
  %4 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %7 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %7, i64 1
  %9 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %8, align 8
  %10 = tail call i64 %9(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %11 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %12 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %12, i64 4
  %14 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %13, align 8
  tail call void %14(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %10) #9
  %15 = icmp ult i64 %1, 256
  br i1 %15, label %31, label %16

16:                                               ; preds = %5
  %17 = icmp ult i64 %1, 65536
  br i1 %17, label %31, label %18

18:                                               ; preds = %16
  %19 = icmp ult i64 %1, 16777216
  br i1 %19, label %31, label %20

20:                                               ; preds = %18
  %21 = icmp ult i64 %1, 4294967296
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 1099511627776
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 281474976710656
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 72057594037927936
  %28 = select i1 %27, i32 7, i32 8
  %29 = add nsw i32 %28, -1
  %30 = icmp ugt i32 %29, 7
  br i1 %30, label %54, label %31

31:                                               ; preds = %24, %22, %20, %18, %16, %5, %26
  %32 = phi i32 [ %28, %26 ], [ 6, %24 ], [ 5, %22 ], [ 4, %20 ], [ 3, %18 ], [ 2, %16 ], [ 1, %5 ]
  %33 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %34 = add nuw nsw i32 %32, 1
  %35 = zext i32 %34 to i64
  br label %39

36:                                               ; preds = %39
  %37 = add nuw nsw i64 %40, 1
  %38 = icmp eq i64 %37, %35
  br i1 %38, label %54, label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %37, %36 ], [ 1, %31 ]
  %41 = phi i32 [ %52, %36 ], [ undef, %31 ]
  %42 = trunc i64 %40 to i32
  %43 = sub nsw i32 %32, %42
  %44 = shl nsw i32 %43, 3
  %45 = zext i32 %44 to i64
  %46 = ashr i64 %1, %45
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %47 = trunc i64 %46 to i8
  store i8 %47, i8* %3, align 1
  %48 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %33, align 8
  %49 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %48, align 8
  %50 = call i32 %49(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 %50, i32 %41
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %53 = icmp sgt i32 %50, -1
  br i1 %53, label %36, label %54

54:                                               ; preds = %39, %36, %26, %2
  %55 = phi i32 [ -1, %2 ], [ -1, %26 ], [ 0, %36 ], [ %52, %39 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %6, label %105, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %9 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %9, i64 1
  %11 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, align 8
  %12 = tail call i64 %11(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %13 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %14 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %14, i64 4
  %16 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %15, align 8
  tail call void %16(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %12) #9
  %17 = icmp ult i64 %1, 256
  br i1 %17, label %33, label %18

18:                                               ; preds = %7
  %19 = icmp ult i64 %1, 65536
  br i1 %19, label %33, label %20

20:                                               ; preds = %18
  %21 = icmp ult i64 %1, 16777216
  br i1 %21, label %33, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 4294967296
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 1099511627776
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 281474976710656
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %1, 72057594037927936
  %30 = select i1 %29, i32 7, i32 8
  %31 = add nsw i32 %30, -1
  %32 = icmp ugt i32 %31, 7
  br i1 %32, label %105, label %33

33:                                               ; preds = %28, %26, %24, %22, %20, %18, %7
  %34 = phi i32 [ %30, %28 ], [ 6, %26 ], [ 5, %24 ], [ 4, %22 ], [ 3, %20 ], [ 2, %18 ], [ 1, %7 ]
  %35 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %36 = add nuw nsw i32 %34, 1
  %37 = zext i32 %36 to i64
  br label %41

38:                                               ; preds = %41
  %39 = add nuw nsw i64 %42, 1
  %40 = icmp eq i64 %39, %37
  br i1 %40, label %58, label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 1, %33 ]
  %43 = phi i32 [ %54, %38 ], [ undef, %33 ]
  %44 = trunc i64 %42 to i32
  %45 = sub nsw i32 %34, %44
  %46 = shl nsw i32 %45, 3
  %47 = zext i32 %46 to i64
  %48 = ashr i64 %1, %47
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %49 = trunc i64 %48 to i8
  store i8 %49, i8* %5, align 1
  %50 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %35, align 8
  %51 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %50, align 8
  %52 = call i32 %51(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 %43
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %55 = icmp sgt i32 %52, -1
  br i1 %55, label %38, label %56

56:                                               ; preds = %41
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %58, label %105

58:                                               ; preds = %38, %56
  %59 = icmp ult i64 %2, 127
  br i1 %59, label %73, label %60

60:                                               ; preds = %58
  %61 = icmp ult i64 %2, 16383
  br i1 %61, label %73, label %62

62:                                               ; preds = %60
  %63 = icmp ult i64 %2, 2097151
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = icmp ult i64 %2, 268435455
  br i1 %65, label %73, label %66

66:                                               ; preds = %64
  %67 = icmp ult i64 %2, 34359738367
  br i1 %67, label %73, label %68

68:                                               ; preds = %66
  %69 = icmp ult i64 %2, 4398046511103
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = icmp ult i64 %2, 562949953421311
  %72 = select i1 %71, i32 7, i32 8
  br label %73

73:                                               ; preds = %70, %68, %66, %64, %62, %60, %58
  %74 = phi i32 [ 1, %58 ], [ 2, %60 ], [ 3, %62 ], [ 4, %64 ], [ 5, %66 ], [ 6, %68 ], [ %72, %70 ]
  %75 = mul nuw nsw i32 %74, 7
  %76 = zext i32 %75 to i64
  %77 = shl i64 1, %76
  %78 = add nsw i64 %77, -2
  %79 = icmp ult i64 %78, %2
  br i1 %79, label %105, label %80

80:                                               ; preds = %73
  %81 = or i64 %77, %2
  %82 = add nuw nsw i32 %74, 1
  %83 = zext i32 %82 to i64
  br label %87

84:                                               ; preds = %87
  %85 = add nuw nsw i64 %88, 1
  %86 = icmp eq i64 %85, %83
  br i1 %86, label %104, label %87

87:                                               ; preds = %84, %80
  %88 = phi i64 [ %85, %84 ], [ 1, %80 ]
  %89 = phi i32 [ %100, %84 ], [ undef, %80 ]
  %90 = trunc i64 %88 to i32
  %91 = sub nsw i32 %74, %90
  %92 = shl nsw i32 %91, 3
  %93 = zext i32 %92 to i64
  %94 = ashr i64 %81, %93
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %95 = trunc i64 %94 to i8
  store i8 %95, i8* %4, align 1
  %96 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %35, align 8
  %97 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %96, align 8
  %98 = call i32 %97(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %99 = icmp slt i32 %98, 0
  %100 = select i1 %99, i32 %98, i32 %89
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %101 = icmp sgt i32 %98, -1
  br i1 %101, label %84, label %102

102:                                              ; preds = %87
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %84, %102
  br label %105

105:                                              ; preds = %73, %28, %104, %102, %56, %3
  %106 = phi i1 [ false, %3 ], [ false, %56 ], [ true, %104 ], [ false, %102 ], [ false, %28 ], [ false, %73 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #4 {
  %4 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 %1, i64 %2, i64 0)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64, i64) local_unnamed_addr #4 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %8, label %154, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %11 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, i64 1
  %13 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %15 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %16 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %16, i64 4
  %18 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %17, align 8
  tail call void %18(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %14) #9
  %19 = icmp ult i64 %1, 256
  br i1 %19, label %35, label %20

20:                                               ; preds = %9
  %21 = icmp ult i64 %1, 65536
  br i1 %21, label %35, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 16777216
  br i1 %23, label %35, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 4294967296
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 1099511627776
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %1, 281474976710656
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %1, 72057594037927936
  %32 = select i1 %31, i32 7, i32 8
  %33 = add nsw i32 %32, -1
  %34 = icmp ugt i32 %33, 7
  br i1 %34, label %154, label %35

35:                                               ; preds = %30, %28, %26, %24, %22, %20, %9
  %36 = phi i32 [ %32, %30 ], [ 6, %28 ], [ 5, %26 ], [ 4, %24 ], [ 3, %22 ], [ 2, %20 ], [ 1, %9 ]
  %37 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %38 = add nuw nsw i32 %36, 1
  %39 = zext i32 %38 to i64
  br label %43

40:                                               ; preds = %43
  %41 = add nuw nsw i64 %44, 1
  %42 = icmp eq i64 %41, %39
  br i1 %42, label %60, label %43

43:                                               ; preds = %40, %35
  %44 = phi i64 [ %41, %40 ], [ 1, %35 ]
  %45 = phi i32 [ %56, %40 ], [ undef, %35 ]
  %46 = trunc i64 %44 to i32
  %47 = sub nsw i32 %36, %46
  %48 = shl nsw i32 %47, 3
  %49 = zext i32 %48 to i64
  %50 = ashr i64 %1, %49
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  %51 = trunc i64 %50 to i8
  store i8 %51, i8* %7, align 1
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %53 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %52, align 8
  %54 = call i32 %53(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %7, i32 1) #9
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 %54, i32 %45
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  %57 = icmp sgt i32 %54, -1
  br i1 %57, label %40, label %58

58:                                               ; preds = %43
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %154

60:                                               ; preds = %40, %58
  %61 = icmp ult i64 %2, 256
  br i1 %61, label %75, label %62

62:                                               ; preds = %60
  %63 = icmp ult i64 %2, 65536
  br i1 %63, label %75, label %64

64:                                               ; preds = %62
  %65 = icmp ult i64 %2, 16777216
  br i1 %65, label %75, label %66

66:                                               ; preds = %64
  %67 = icmp ult i64 %2, 4294967296
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  %69 = icmp ult i64 %2, 1099511627776
  br i1 %69, label %75, label %70

70:                                               ; preds = %68
  %71 = icmp ult i64 %2, 281474976710656
  br i1 %71, label %75, label %72

72:                                               ; preds = %70
  %73 = icmp ult i64 %2, 72057594037927936
  %74 = select i1 %73, i64 7, i64 8
  br label %75

75:                                               ; preds = %60, %62, %64, %66, %68, %70, %72
  %76 = phi i64 [ 1, %60 ], [ 2, %62 ], [ 3, %64 ], [ 4, %66 ], [ 5, %68 ], [ 6, %70 ], [ %74, %72 ]
  %77 = icmp eq i64 %3, 0
  br i1 %77, label %95, label %78

78:                                               ; preds = %75
  %79 = icmp ugt i64 %76, %3
  br i1 %79, label %154, label %80

80:                                               ; preds = %78
  %81 = icmp ult i64 %3, 127
  br i1 %81, label %95, label %82

82:                                               ; preds = %80
  %83 = icmp ult i64 %3, 16383
  br i1 %83, label %95, label %84

84:                                               ; preds = %82
  %85 = icmp ult i64 %3, 2097151
  br i1 %85, label %95, label %86

86:                                               ; preds = %84
  %87 = icmp ult i64 %3, 268435455
  br i1 %87, label %95, label %88

88:                                               ; preds = %86
  %89 = icmp ult i64 %3, 34359738367
  br i1 %89, label %95, label %90

90:                                               ; preds = %88
  %91 = icmp ult i64 %3, 4398046511103
  br i1 %91, label %95, label %92

92:                                               ; preds = %90
  %93 = icmp ult i64 %3, 562949953421311
  %94 = select i1 %93, i32 7, i32 8
  br label %95

95:                                               ; preds = %75, %92, %90, %88, %86, %84, %82, %80
  %96 = phi i64 [ %3, %80 ], [ %3, %82 ], [ %3, %84 ], [ %3, %86 ], [ %3, %88 ], [ %3, %90 ], [ %3, %92 ], [ %76, %75 ]
  %97 = phi i32 [ 1, %80 ], [ 2, %82 ], [ 3, %84 ], [ 4, %86 ], [ 5, %88 ], [ 6, %90 ], [ %94, %92 ], [ 1, %75 ]
  %98 = mul nuw nsw i32 %97, 7
  %99 = zext i32 %98 to i64
  %100 = shl i64 1, %99
  %101 = add nsw i64 %100, -2
  %102 = icmp ult i64 %101, %96
  br i1 %102, label %154, label %103

103:                                              ; preds = %95
  %104 = or i64 %100, %96
  %105 = add nuw nsw i32 %97, 1
  %106 = zext i32 %105 to i64
  br label %110

107:                                              ; preds = %110
  %108 = add nuw nsw i64 %111, 1
  %109 = icmp eq i64 %108, %106
  br i1 %109, label %127, label %110

110:                                              ; preds = %107, %103
  %111 = phi i64 [ %108, %107 ], [ 1, %103 ]
  %112 = phi i32 [ %123, %107 ], [ undef, %103 ]
  %113 = trunc i64 %111 to i32
  %114 = sub nsw i32 %97, %113
  %115 = shl nsw i32 %114, 3
  %116 = zext i32 %115 to i64
  %117 = ashr i64 %104, %116
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %118 = trunc i64 %117 to i8
  store i8 %118, i8* %6, align 1
  %119 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %120 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %119, align 8
  %121 = call i32 %120(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 %121, i32 %112
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %124 = icmp sgt i32 %121, -1
  br i1 %124, label %107, label %125

125:                                              ; preds = %110
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %127, label %154

127:                                              ; preds = %107, %125
  %128 = trunc i64 %96 to i32
  %129 = add i32 %128, -1
  %130 = icmp ugt i32 %129, 7
  br i1 %130, label %154, label %131

131:                                              ; preds = %127
  %132 = add i64 %96, 1
  %133 = and i64 %132, 4294967295
  br label %137

134:                                              ; preds = %137
  %135 = add nuw nsw i64 %138, 1
  %136 = icmp eq i64 %135, %133
  br i1 %136, label %153, label %137

137:                                              ; preds = %134, %131
  %138 = phi i64 [ %135, %134 ], [ 1, %131 ]
  %139 = phi i32 [ %149, %134 ], [ undef, %131 ]
  %140 = sub i64 %96, %138
  %141 = shl i64 %140, 3
  %142 = and i64 %141, 4294967288
  %143 = ashr i64 %2, %142
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %144 = trunc i64 %143 to i8
  store i8 %144, i8* %5, align 1
  %145 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %146 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %145, align 8
  %147 = call i32 %146(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %148 = icmp slt i32 %147, 0
  %149 = select i1 %148, i32 %147, i32 %139
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %150 = icmp sgt i32 %147, -1
  br i1 %150, label %134, label %151

151:                                              ; preds = %137
  %152 = icmp eq i32 %149, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %134, %151
  br label %154

154:                                              ; preds = %127, %95, %30, %153, %151, %78, %125, %58, %4
  %155 = phi i1 [ false, %4 ], [ false, %58 ], [ false, %78 ], [ false, %125 ], [ true, %153 ], [ false, %151 ], [ false, %30 ], [ false, %95 ], [ false, %127 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyx(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %7, label %109, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %10 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, i64 1
  %12 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, align 8
  %13 = tail call i64 %12(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %14 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %15 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %15, i64 4
  %17 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %16, align 8
  tail call void %17(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %13) #9
  %18 = icmp ult i64 %1, 256
  br i1 %18, label %34, label %19

19:                                               ; preds = %8
  %20 = icmp ult i64 %1, 65536
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = icmp ult i64 %1, 16777216
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %1, 4294967296
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %1, 1099511627776
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %1, 281474976710656
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %1, 72057594037927936
  %31 = select i1 %30, i32 7, i32 8
  %32 = add nsw i32 %31, -1
  %33 = icmp ugt i32 %32, 7
  br i1 %33, label %109, label %34

34:                                               ; preds = %29, %27, %25, %23, %21, %19, %8
  %35 = phi i32 [ %31, %29 ], [ 6, %27 ], [ 5, %25 ], [ 4, %23 ], [ 3, %21 ], [ 2, %19 ], [ 1, %8 ]
  %36 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %37 = add nuw nsw i32 %35, 1
  %38 = zext i32 %37 to i64
  br label %42

39:                                               ; preds = %42
  %40 = add nuw nsw i64 %43, 1
  %41 = icmp eq i64 %40, %38
  br i1 %41, label %59, label %42

42:                                               ; preds = %39, %34
  %43 = phi i64 [ %40, %39 ], [ 1, %34 ]
  %44 = phi i32 [ %55, %39 ], [ undef, %34 ]
  %45 = trunc i64 %43 to i32
  %46 = sub nsw i32 %35, %45
  %47 = shl nsw i32 %46, 3
  %48 = zext i32 %47 to i64
  %49 = ashr i64 %1, %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %50 = trunc i64 %49 to i8
  store i8 %50, i8* %6, align 1
  %51 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %51, align 8
  %53 = call i32 %52(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 %44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %56 = icmp sgt i32 %53, -1
  br i1 %56, label %39, label %57

57:                                               ; preds = %42
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %109

59:                                               ; preds = %39, %57
  %60 = ashr i64 %2, 63
  %61 = xor i64 %60, %2
  %62 = shl i64 %61, 1
  %63 = icmp ult i64 %62, 256
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = icmp ult i64 %62, 65536
  br i1 %65, label %77, label %66

66:                                               ; preds = %64
  %67 = icmp ult i64 %62, 16777216
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = icmp ult i64 %62, 4294967296
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  %71 = icmp ult i64 %62, 1099511627776
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  %73 = icmp ult i64 %62, 281474976710656
  br i1 %73, label %77, label %74

74:                                               ; preds = %72
  %75 = icmp ult i64 %62, 72057594037927936
  %76 = select i1 %75, i32 7, i32 8
  br label %77

77:                                               ; preds = %74, %72, %70, %68, %66, %64, %59
  %78 = phi i32 [ 1, %59 ], [ 2, %64 ], [ 3, %66 ], [ 4, %68 ], [ 5, %70 ], [ 6, %72 ], [ %76, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %79 = trunc i32 %78 to i8
  %80 = or i8 %79, -128
  store i8 %80, i8* %5, align 1
  %81 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %82 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %81, align 8
  %83 = call i32 %82(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %85, label %109

85:                                               ; preds = %77
  %86 = add nuw nsw i32 %78, 1
  %87 = zext i32 %86 to i64
  br label %91

88:                                               ; preds = %91
  %89 = add nuw nsw i64 %92, 1
  %90 = icmp eq i64 %89, %87
  br i1 %90, label %108, label %91

91:                                               ; preds = %88, %85
  %92 = phi i64 [ %89, %88 ], [ 1, %85 ]
  %93 = phi i32 [ %104, %88 ], [ undef, %85 ]
  %94 = trunc i64 %92 to i32
  %95 = sub nsw i32 %78, %94
  %96 = shl nsw i32 %95, 3
  %97 = zext i32 %96 to i64
  %98 = ashr i64 %2, %97
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %99 = trunc i64 %98 to i8
  store i8 %99, i8* %4, align 1
  %100 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %101 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %100, align 8
  %102 = call i32 %101(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 %93
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %105 = icmp sgt i32 %102, -1
  br i1 %105, label %88, label %106

106:                                              ; preds = %91
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %88, %106
  br label %109

109:                                              ; preds = %77, %29, %108, %106, %57, %3
  %110 = phi i1 [ false, %3 ], [ false, %57 ], [ true, %108 ], [ false, %106 ], [ false, %29 ], [ false, %77 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"*, i64, float) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %7, label %102, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %10 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, i64 1
  %12 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, align 8
  %13 = tail call i64 %12(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %14 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %15 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %15, i64 4
  %17 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %16, align 8
  tail call void %17(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %13) #9
  %18 = icmp ult i64 %1, 256
  br i1 %18, label %34, label %19

19:                                               ; preds = %8
  %20 = icmp ult i64 %1, 65536
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = icmp ult i64 %1, 16777216
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %1, 4294967296
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %1, 1099511627776
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %1, 281474976710656
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %1, 72057594037927936
  %31 = select i1 %30, i32 7, i32 8
  %32 = add nsw i32 %31, -1
  %33 = icmp ugt i32 %32, 7
  br i1 %33, label %102, label %34

34:                                               ; preds = %29, %27, %25, %23, %21, %19, %8
  %35 = phi i32 [ %31, %29 ], [ 6, %27 ], [ 5, %25 ], [ 4, %23 ], [ 3, %21 ], [ 2, %19 ], [ 1, %8 ]
  %36 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %37 = add nuw nsw i32 %35, 1
  %38 = zext i32 %37 to i64
  br label %42

39:                                               ; preds = %42
  %40 = add nuw nsw i64 %43, 1
  %41 = icmp eq i64 %40, %38
  br i1 %41, label %59, label %42

42:                                               ; preds = %39, %34
  %43 = phi i64 [ %40, %39 ], [ 1, %34 ]
  %44 = phi i32 [ %55, %39 ], [ undef, %34 ]
  %45 = trunc i64 %43 to i32
  %46 = sub nsw i32 %35, %45
  %47 = shl nsw i32 %46, 3
  %48 = zext i32 %47 to i64
  %49 = ashr i64 %1, %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %50 = trunc i64 %49 to i8
  store i8 %50, i8* %6, align 1
  %51 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %51, align 8
  %53 = call i32 %52(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 %44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %56 = icmp sgt i32 %53, -1
  br i1 %56, label %39, label %57

57:                                               ; preds = %42
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %102

59:                                               ; preds = %39, %57
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -124, i8* %5, align 1
  %60 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %61 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %60, align 8
  %62 = call i32 %61(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %102

64:                                               ; preds = %59
  %65 = bitcast float %2 to i32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %66 = lshr i32 %65, 24
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %4, align 1
  %68 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %69 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %68, align 8
  %70 = call i32 %69(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %99

72:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %73 = lshr i32 %65, 16
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %4, align 1
  %75 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %76 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %75, align 8
  %77 = call i32 %76(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %78 = icmp slt i32 %77, 0
  %79 = select i1 %78, i32 %77, i32 %70
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %80 = icmp sgt i32 %77, -1
  br i1 %80, label %81, label %99

81:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %82 = lshr i32 %65, 8
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %4, align 1
  %84 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %85 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %84, align 8
  %86 = call i32 %85(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %87 = icmp slt i32 %86, 0
  %88 = select i1 %87, i32 %86, i32 %79
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %89 = icmp sgt i32 %86, -1
  br i1 %89, label %90, label %99

90:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %91 = trunc i32 %65 to i8
  store i8 %91, i8* %4, align 1
  %92 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %93 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %92, align 8
  %94 = call i32 %93(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 %94, i32 %88
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %97 = icmp sgt i32 %94, -1
  %98 = select i1 %97, i32 0, i32 %96
  br label %99

99:                                               ; preds = %64, %72, %81, %90
  %100 = phi i32 [ %98, %90 ], [ %70, %64 ], [ %79, %72 ], [ %88, %81 ]
  %101 = icmp eq i32 %100, 0
  br label %102

102:                                              ; preds = %59, %29, %99, %57, %3
  %103 = phi i1 [ false, %3 ], [ false, %57 ], [ %101, %99 ], [ false, %29 ], [ false, %59 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"*, i64, i8*) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = icmp ne %"class.mkvmuxer::IMkvWriter"* %0, null
  %7 = icmp ne i8* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %113

9:                                                ; preds = %3
  %10 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %11 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, i64 1
  %13 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %15 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %16 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %16, i64 4
  %18 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %17, align 8
  tail call void %18(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %14) #9
  %19 = icmp ult i64 %1, 256
  br i1 %19, label %35, label %20

20:                                               ; preds = %9
  %21 = icmp ult i64 %1, 65536
  br i1 %21, label %35, label %22

22:                                               ; preds = %20
  %23 = icmp ult i64 %1, 16777216
  br i1 %23, label %35, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %1, 4294967296
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = icmp ult i64 %1, 1099511627776
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = icmp ult i64 %1, 281474976710656
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = icmp ult i64 %1, 72057594037927936
  %32 = select i1 %31, i32 7, i32 8
  %33 = add nsw i32 %32, -1
  %34 = icmp ugt i32 %33, 7
  br i1 %34, label %113, label %35

35:                                               ; preds = %30, %28, %26, %24, %22, %20, %9
  %36 = phi i32 [ %32, %30 ], [ 6, %28 ], [ 5, %26 ], [ 4, %24 ], [ 3, %22 ], [ 2, %20 ], [ 1, %9 ]
  %37 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %38 = add nuw nsw i32 %36, 1
  %39 = zext i32 %38 to i64
  br label %43

40:                                               ; preds = %43
  %41 = add nuw nsw i64 %44, 1
  %42 = icmp eq i64 %41, %39
  br i1 %42, label %60, label %43

43:                                               ; preds = %40, %35
  %44 = phi i64 [ %41, %40 ], [ 1, %35 ]
  %45 = phi i32 [ %56, %40 ], [ undef, %35 ]
  %46 = trunc i64 %44 to i32
  %47 = sub nsw i32 %36, %46
  %48 = shl nsw i32 %47, 3
  %49 = zext i32 %48 to i64
  %50 = ashr i64 %1, %49
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %51 = trunc i64 %50 to i8
  store i8 %51, i8* %5, align 1
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %53 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %52, align 8
  %54 = call i32 %53(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 %54, i32 %45
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %57 = icmp sgt i32 %54, -1
  br i1 %57, label %40, label %58

58:                                               ; preds = %43
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %113

60:                                               ; preds = %40, %58
  %61 = call i64 @strlen(i8* nonnull %2) #8
  %62 = icmp ult i64 %61, 127
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = icmp ult i64 %61, 16383
  br i1 %64, label %76, label %65

65:                                               ; preds = %63
  %66 = icmp ult i64 %61, 2097151
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = icmp ult i64 %61, 268435455
  br i1 %68, label %76, label %69

69:                                               ; preds = %67
  %70 = icmp ult i64 %61, 34359738367
  br i1 %70, label %76, label %71

71:                                               ; preds = %69
  %72 = icmp ult i64 %61, 4398046511103
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = icmp ult i64 %61, 562949953421311
  %75 = select i1 %74, i32 7, i32 8
  br label %76

76:                                               ; preds = %73, %71, %69, %67, %65, %63, %60
  %77 = phi i32 [ 1, %60 ], [ 2, %63 ], [ 3, %65 ], [ 4, %67 ], [ 5, %69 ], [ 6, %71 ], [ %75, %73 ]
  %78 = mul nuw nsw i32 %77, 7
  %79 = zext i32 %78 to i64
  %80 = shl i64 1, %79
  %81 = add nsw i64 %80, -2
  %82 = icmp ult i64 %81, %61
  br i1 %82, label %113, label %83

83:                                               ; preds = %76
  %84 = or i64 %80, %61
  %85 = add nuw nsw i32 %77, 1
  %86 = zext i32 %85 to i64
  br label %90

87:                                               ; preds = %90
  %88 = add nuw nsw i64 %91, 1
  %89 = icmp eq i64 %88, %86
  br i1 %89, label %107, label %90

90:                                               ; preds = %87, %83
  %91 = phi i64 [ %88, %87 ], [ 1, %83 ]
  %92 = phi i32 [ %103, %87 ], [ undef, %83 ]
  %93 = trunc i64 %91 to i32
  %94 = sub nsw i32 %77, %93
  %95 = shl nsw i32 %94, 3
  %96 = zext i32 %95 to i64
  %97 = ashr i64 %84, %96
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %98 = trunc i64 %97 to i8
  store i8 %98, i8* %4, align 1
  %99 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %100 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %99, align 8
  %101 = call i32 %100(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %102 = icmp slt i32 %101, 0
  %103 = select i1 %102, i32 %101, i32 %92
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %104 = icmp sgt i32 %101, -1
  br i1 %104, label %87, label %105

105:                                              ; preds = %90
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %87, %105
  %108 = trunc i64 %61 to i32
  %109 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %37, align 8
  %110 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %109, align 8
  %111 = call i32 %110(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %2, i32 %108) #9
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %76, %30, %105, %107, %58, %3
  %114 = phi i1 [ false, %3 ], [ false, %58 ], [ false, %105 ], [ %112, %107 ], [ false, %30 ], [ false, %76 ]
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"*, i64, i8*, i64) local_unnamed_addr #4 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %3, 0
  %11 = or i1 %9, %10
  br i1 %11, label %115, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %14 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %14, i64 1
  %16 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %15, align 8
  %17 = tail call i64 %16(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %18 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %19 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %19, i64 4
  %21 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %20, align 8
  tail call void %21(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %17) #9
  %22 = icmp ult i64 %1, 256
  br i1 %22, label %38, label %23

23:                                               ; preds = %12
  %24 = icmp ult i64 %1, 65536
  br i1 %24, label %38, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %1, 16777216
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %1, 4294967296
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %1, 1099511627776
  br i1 %30, label %38, label %31

31:                                               ; preds = %29
  %32 = icmp ult i64 %1, 281474976710656
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = icmp ult i64 %1, 72057594037927936
  %35 = select i1 %34, i32 7, i32 8
  %36 = add nsw i32 %35, -1
  %37 = icmp ugt i32 %36, 7
  br i1 %37, label %115, label %38

38:                                               ; preds = %33, %31, %29, %27, %25, %23, %12
  %39 = phi i32 [ %35, %33 ], [ 6, %31 ], [ 5, %29 ], [ 4, %27 ], [ 3, %25 ], [ 2, %23 ], [ 1, %12 ]
  %40 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %41 = add nuw nsw i32 %39, 1
  %42 = zext i32 %41 to i64
  br label %46

43:                                               ; preds = %46
  %44 = add nuw nsw i64 %47, 1
  %45 = icmp eq i64 %44, %42
  br i1 %45, label %63, label %46

46:                                               ; preds = %43, %38
  %47 = phi i64 [ %44, %43 ], [ 1, %38 ]
  %48 = phi i32 [ %59, %43 ], [ undef, %38 ]
  %49 = trunc i64 %47 to i32
  %50 = sub nsw i32 %39, %49
  %51 = shl nsw i32 %50, 3
  %52 = zext i32 %51 to i64
  %53 = ashr i64 %1, %52
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %54 = trunc i64 %53 to i8
  store i8 %54, i8* %6, align 1
  %55 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %40, align 8
  %56 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %55, align 8
  %57 = call i32 %56(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 %57, i32 %48
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %60 = icmp sgt i32 %57, -1
  br i1 %60, label %43, label %61

61:                                               ; preds = %46
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %63, label %115

63:                                               ; preds = %43, %61
  %64 = icmp ult i64 %3, 127
  br i1 %64, label %78, label %65

65:                                               ; preds = %63
  %66 = icmp ult i64 %3, 16383
  br i1 %66, label %78, label %67

67:                                               ; preds = %65
  %68 = icmp ult i64 %3, 2097151
  br i1 %68, label %78, label %69

69:                                               ; preds = %67
  %70 = icmp ult i64 %3, 268435455
  br i1 %70, label %78, label %71

71:                                               ; preds = %69
  %72 = icmp ult i64 %3, 34359738367
  br i1 %72, label %78, label %73

73:                                               ; preds = %71
  %74 = icmp ult i64 %3, 4398046511103
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = icmp ult i64 %3, 562949953421311
  %77 = select i1 %76, i32 7, i32 8
  br label %78

78:                                               ; preds = %75, %73, %71, %69, %67, %65, %63
  %79 = phi i32 [ 1, %63 ], [ 2, %65 ], [ 3, %67 ], [ 4, %69 ], [ 5, %71 ], [ 6, %73 ], [ %77, %75 ]
  %80 = mul nuw nsw i32 %79, 7
  %81 = zext i32 %80 to i64
  %82 = shl i64 1, %81
  %83 = add nsw i64 %82, -2
  %84 = icmp ult i64 %83, %3
  br i1 %84, label %115, label %85

85:                                               ; preds = %78
  %86 = or i64 %82, %3
  %87 = add nuw nsw i32 %79, 1
  %88 = zext i32 %87 to i64
  br label %92

89:                                               ; preds = %92
  %90 = add nuw nsw i64 %93, 1
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %109, label %92

92:                                               ; preds = %89, %85
  %93 = phi i64 [ %90, %89 ], [ 1, %85 ]
  %94 = phi i32 [ %105, %89 ], [ undef, %85 ]
  %95 = trunc i64 %93 to i32
  %96 = sub nsw i32 %79, %95
  %97 = shl nsw i32 %96, 3
  %98 = zext i32 %97 to i64
  %99 = ashr i64 %86, %98
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %100 = trunc i64 %99 to i8
  store i8 %100, i8* %5, align 1
  %101 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %40, align 8
  %102 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %101, align 8
  %103 = call i32 %102(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %104 = icmp slt i32 %103, 0
  %105 = select i1 %104, i32 %103, i32 %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %106 = icmp sgt i32 %103, -1
  br i1 %106, label %89, label %107

107:                                              ; preds = %92
  %108 = icmp eq i32 %105, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %89, %107
  %110 = trunc i64 %3 to i32
  %111 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %40, align 8
  %112 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %111, align 8
  %113 = call i32 %112(%"class.mkvmuxer::IMkvWriter"* %0, i8* %2, i32 %110) #9
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %78, %33, %109, %107, %61, %4
  %116 = phi i1 [ false, %4 ], [ false, %61 ], [ false, %107 ], [ %114, %109 ], [ false, %33 ], [ false, %78 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer20WriteEbmlDateElementEPNS_10IMkvWriterEyx(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %7, label %84, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %10 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, i64 1
  %12 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, align 8
  %13 = tail call i64 %12(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %14 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %15 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %15, i64 4
  %17 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %16, align 8
  tail call void %17(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 %1, i64 %13) #9
  %18 = icmp ult i64 %1, 256
  br i1 %18, label %34, label %19

19:                                               ; preds = %8
  %20 = icmp ult i64 %1, 65536
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = icmp ult i64 %1, 16777216
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %1, 4294967296
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = icmp ult i64 %1, 1099511627776
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = icmp ult i64 %1, 281474976710656
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %1, 72057594037927936
  %31 = select i1 %30, i32 7, i32 8
  %32 = add nsw i32 %31, -1
  %33 = icmp ugt i32 %32, 7
  br i1 %33, label %84, label %34

34:                                               ; preds = %29, %27, %25, %23, %21, %19, %8
  %35 = phi i32 [ %31, %29 ], [ 6, %27 ], [ 5, %25 ], [ 4, %23 ], [ 3, %21 ], [ 2, %19 ], [ 1, %8 ]
  %36 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %37 = add nuw nsw i32 %35, 1
  %38 = zext i32 %37 to i64
  br label %42

39:                                               ; preds = %42
  %40 = add nuw nsw i64 %43, 1
  %41 = icmp eq i64 %40, %38
  br i1 %41, label %59, label %42

42:                                               ; preds = %39, %34
  %43 = phi i64 [ %40, %39 ], [ 1, %34 ]
  %44 = phi i32 [ %55, %39 ], [ undef, %34 ]
  %45 = trunc i64 %43 to i32
  %46 = sub nsw i32 %35, %45
  %47 = shl nsw i32 %46, 3
  %48 = zext i32 %47 to i64
  %49 = ashr i64 %1, %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %50 = trunc i64 %49 to i8
  store i8 %50, i8* %6, align 1
  %51 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %52 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %51, align 8
  %53 = call i32 %52(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 %44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %56 = icmp sgt i32 %53, -1
  br i1 %56, label %39, label %57

57:                                               ; preds = %42
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %84

59:                                               ; preds = %39, %57
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -120, i8* %5, align 1
  %60 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %61 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %60, align 8
  %62 = call i32 %61(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %84

64:                                               ; preds = %59
  %65 = lshr i64 %2, 56
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %66 = trunc i64 %65 to i8
  store i8 %66, i8* %4, align 1
  %67 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %68 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %67, align 8
  %69 = call i32 %68(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %71, label %84

71:                                               ; preds = %64
  %72 = lshr i64 %2, 48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %73 = trunc i64 %72 to i8
  store i8 %73, i8* %4, align 1
  %74 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %75 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %74, align 8
  %76 = call i32 %75(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 %76, i32 %69
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %79 = icmp sgt i32 %76, -1
  br i1 %79, label %86, label %80

80:                                               ; preds = %131, %122, %113, %104, %95, %86, %71
  %81 = phi i32 [ %78, %71 ], [ %93, %86 ], [ %102, %95 ], [ %111, %104 ], [ %120, %113 ], [ %129, %122 ], [ %137, %131 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %131, %80
  br label %84

84:                                               ; preds = %64, %59, %29, %83, %80, %57, %3
  %85 = phi i1 [ false, %3 ], [ false, %57 ], [ true, %83 ], [ false, %80 ], [ false, %29 ], [ false, %59 ], [ false, %64 ]
  ret i1 %85

86:                                               ; preds = %71
  %87 = lshr i64 %2, 40
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %88 = trunc i64 %87 to i8
  store i8 %88, i8* %4, align 1
  %89 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %90 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %89, align 8
  %91 = call i32 %90(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %92 = icmp slt i32 %91, 0
  %93 = select i1 %92, i32 %91, i32 %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %94 = icmp sgt i32 %91, -1
  br i1 %94, label %95, label %80

95:                                               ; preds = %86
  %96 = lshr i64 %2, 32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %97 = trunc i64 %96 to i8
  store i8 %97, i8* %4, align 1
  %98 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %99 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %98, align 8
  %100 = call i32 %99(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 %93
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %103 = icmp sgt i32 %100, -1
  br i1 %103, label %104, label %80

104:                                              ; preds = %95
  %105 = lshr i64 %2, 24
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %106 = trunc i64 %105 to i8
  store i8 %106, i8* %4, align 1
  %107 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %108 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %107, align 8
  %109 = call i32 %108(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 %109, i32 %102
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %112 = icmp sgt i32 %109, -1
  br i1 %112, label %113, label %80

113:                                              ; preds = %104
  %114 = lshr i64 %2, 16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %115 = trunc i64 %114 to i8
  store i8 %115, i8* %4, align 1
  %116 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %117 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %116, align 8
  %118 = call i32 %117(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 %111
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %121 = icmp sgt i32 %118, -1
  br i1 %121, label %122, label %80

122:                                              ; preds = %113
  %123 = lshr i64 %2, 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %124 = trunc i64 %123 to i8
  store i8 %124, i8* %4, align 1
  %125 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %126 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %125, align 8
  %127 = call i32 %126(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 %127, i32 %120
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %130 = icmp sgt i32 %127, -1
  br i1 %130, label %131, label %80

131:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %132 = trunc i64 %2 to i8
  store i8 %132, i8* %4, align 1
  %133 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %36, align 8
  %134 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %133, align 8
  %135 = call i32 %134(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 %135, i32 %129
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %138 = icmp sgt i32 %135, -1
  br i1 %138, label %83, label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer10WriteFrameEPNS_10IMkvWriterEPKNS_5FrameEPNS_7ClusterE(%"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Cluster"*) local_unnamed_addr #4 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = icmp ne %"class.mkvmuxer::IMkvWriter"* %0, null
  %13 = icmp ne %"class.mkvmuxer::Frame"* %1, null
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %510

15:                                               ; preds = %3
  %16 = tail call zeroext i1 @_ZNK8mkvmuxer5Frame7IsValidEv(%"class.mkvmuxer::Frame"* nonnull %1) #9
  %17 = icmp ne %"class.mkvmuxer::Cluster"* %2, null
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %510

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %2, i64 0, i32 8
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %510, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 11
  %25 = load i64, i64* %24, align 8
  %26 = udiv i64 %25, %21
  %27 = tail call i64 @_ZNK8mkvmuxer7Cluster19GetRelativeTimecodeEl(%"class.mkvmuxer::Cluster"* nonnull %2, i64 %26) #9
  %28 = icmp ugt i64 %27, 32767
  br i1 %28, label %510, label %29

29:                                               ; preds = %23
  %30 = tail call zeroext i1 @_ZNK8mkvmuxer5Frame16CanBeSimpleBlockEv(%"class.mkvmuxer::Frame"* nonnull %1) #9
  br i1 %30, label %31, label %194

31:                                               ; preds = %29
  %32 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %33 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %33, i64 1
  %35 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %34, align 8
  %36 = tail call i64 %35(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %37 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %38 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %38, i64 4
  %40 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %39, align 8
  tail call void %40(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 163, i64 %36) #9
  %41 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #9
  store i8 -93, i8* %8, align 1
  %42 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %43 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %42, align 8
  %44 = call i32 %43(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %8, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #9
  %45 = icmp sgt i32 %44, -1
  br i1 %45, label %46, label %510

46:                                               ; preds = %31
  %47 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 9
  %48 = load i64, i64* %47, align 8
  %49 = shl i64 %48, 32
  %50 = add i64 %49, 17179869184
  %51 = ashr exact i64 %50, 32
  %52 = icmp ult i64 %51, 127
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = icmp ult i64 %51, 16383
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = icmp ult i64 %51, 2097151
  br i1 %56, label %62, label %57

57:                                               ; preds = %55
  %58 = icmp ult i64 %51, 268435455
  br i1 %58, label %62, label %59

59:                                               ; preds = %57
  %60 = icmp ult i64 %51, 34359738367
  %61 = select i1 %60, i32 5, i32 8
  br label %62

62:                                               ; preds = %59, %57, %55, %53, %46
  %63 = phi i32 [ 1, %46 ], [ 2, %53 ], [ 3, %55 ], [ 4, %57 ], [ %61, %59 ]
  %64 = mul nuw nsw i32 %63, 7
  %65 = zext i32 %64 to i64
  %66 = shl i64 1, %65
  %67 = add nsw i64 %66, -2
  %68 = icmp ult i64 %67, %51
  br i1 %68, label %510, label %69

69:                                               ; preds = %62
  %70 = or i64 %66, %51
  %71 = add nuw nsw i32 %63, 1
  %72 = zext i32 %71 to i64
  br label %76

73:                                               ; preds = %76
  %74 = add nuw nsw i64 %77, 1
  %75 = icmp eq i64 %74, %72
  br i1 %75, label %93, label %76

76:                                               ; preds = %73, %69
  %77 = phi i64 [ %74, %73 ], [ 1, %69 ]
  %78 = phi i32 [ %89, %73 ], [ undef, %69 ]
  %79 = trunc i64 %77 to i32
  %80 = sub nsw i32 %63, %79
  %81 = shl nsw i32 %80, 3
  %82 = zext i32 %81 to i64
  %83 = ashr i64 %70, %82
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  %84 = trunc i64 %83 to i8
  store i8 %84, i8* %7, align 1
  %85 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %86 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %85, align 8
  %87 = call i32 %86(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %7, i32 1) #9
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 %87, i32 %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  %90 = icmp sgt i32 %87, -1
  br i1 %90, label %73, label %91

91:                                               ; preds = %76
  %92 = icmp eq i32 %89, 0
  br i1 %92, label %93, label %510

93:                                               ; preds = %73, %91
  %94 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %95, 127
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = icmp ult i64 %95, 16383
  br i1 %98, label %110, label %99

99:                                               ; preds = %97
  %100 = icmp ult i64 %95, 2097151
  br i1 %100, label %110, label %101

101:                                              ; preds = %99
  %102 = icmp ult i64 %95, 268435455
  br i1 %102, label %110, label %103

103:                                              ; preds = %101
  %104 = icmp ult i64 %95, 34359738367
  br i1 %104, label %110, label %105

105:                                              ; preds = %103
  %106 = icmp ult i64 %95, 4398046511103
  br i1 %106, label %110, label %107

107:                                              ; preds = %105
  %108 = icmp ult i64 %95, 562949953421311
  %109 = select i1 %108, i32 7, i32 8
  br label %110

110:                                              ; preds = %107, %105, %103, %101, %99, %97, %93
  %111 = phi i32 [ 1, %93 ], [ 2, %97 ], [ 3, %99 ], [ 4, %101 ], [ 5, %103 ], [ 6, %105 ], [ %109, %107 ]
  %112 = mul nuw nsw i32 %111, 7
  %113 = zext i32 %112 to i64
  %114 = shl i64 1, %113
  %115 = add nsw i64 %114, -2
  %116 = icmp ult i64 %115, %95
  br i1 %116, label %510, label %117

117:                                              ; preds = %110
  %118 = or i64 %114, %95
  %119 = add nuw nsw i32 %111, 1
  %120 = zext i32 %119 to i64
  br label %124

121:                                              ; preds = %124
  %122 = add nuw nsw i64 %125, 1
  %123 = icmp eq i64 %122, %120
  br i1 %123, label %141, label %124

124:                                              ; preds = %121, %117
  %125 = phi i64 [ %122, %121 ], [ 1, %117 ]
  %126 = phi i32 [ %137, %121 ], [ undef, %117 ]
  %127 = trunc i64 %125 to i32
  %128 = sub nsw i32 %111, %127
  %129 = shl nsw i32 %128, 3
  %130 = zext i32 %129 to i64
  %131 = ashr i64 %118, %130
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  %132 = trunc i64 %131 to i8
  store i8 %132, i8* %6, align 1
  %133 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %134 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %133, align 8
  %135 = call i32 %134(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %6, i32 1) #9
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 %135, i32 %126
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  %138 = icmp sgt i32 %135, -1
  br i1 %138, label %121, label %139

139:                                              ; preds = %124
  %140 = icmp eq i32 %137, 0
  br i1 %140, label %141, label %510

141:                                              ; preds = %121, %139
  %142 = lshr i64 %27, 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %143 = trunc i64 %142 to i8
  store i8 %143, i8* %5, align 1
  %144 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %145 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %144, align 8
  %146 = call i32 %145(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %147 = icmp sgt i32 %146, -1
  br i1 %147, label %148, label %510

148:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %149 = trunc i64 %27 to i8
  store i8 %149, i8* %5, align 1
  %150 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %151 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %150, align 8
  %152 = call i32 %151(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %153 = icmp slt i32 %152, 0
  %154 = select i1 %153, i32 %152, i32 %146
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  %155 = icmp sgt i32 %152, -1
  %156 = icmp eq i32 %154, 0
  %157 = or i1 %155, %156
  br i1 %157, label %158, label %510

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %160 = load i8, i8* %159, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  %162 = select i1 %161, i8 0, i8 -128
  store i8 %162, i8* %4, align 1
  %163 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %164 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %163, align 8
  %165 = call i32 %164(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %166 = icmp sgt i32 %165, -1
  br i1 %166, label %167, label %510

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 6
  %169 = load i8*, i8** %168, align 8
  %170 = load i64, i64* %47, align 8
  %171 = trunc i64 %170 to i32
  %172 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %41, align 8
  %173 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %172, align 8
  %174 = call i32 %173(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* %169, i32 %171) #9
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %510

176:                                              ; preds = %167
  br i1 %52, label %190, label %177

177:                                              ; preds = %176
  %178 = icmp ult i64 %51, 16383
  br i1 %178, label %190, label %179

179:                                              ; preds = %177
  %180 = icmp ult i64 %51, 2097151
  br i1 %180, label %190, label %181

181:                                              ; preds = %179
  %182 = icmp ult i64 %51, 268435455
  br i1 %182, label %190, label %183

183:                                              ; preds = %181
  %184 = icmp ult i64 %51, 34359738367
  br i1 %184, label %190, label %185

185:                                              ; preds = %183
  %186 = icmp ult i64 %51, 4398046511103
  br i1 %186, label %190, label %187

187:                                              ; preds = %185
  %188 = icmp ult i64 %51, 562949953421311
  %189 = select i1 %188, i64 12, i64 13
  br label %190

190:                                              ; preds = %187, %185, %183, %181, %179, %177, %176
  %191 = phi i64 [ 6, %176 ], [ 7, %177 ], [ 8, %179 ], [ 9, %181 ], [ 10, %183 ], [ 11, %185 ], [ %189, %187 ]
  %192 = load i64, i64* %47, align 8
  %193 = add i64 %192, %191
  br label %510

194:                                              ; preds = %29
  %195 = load i64, i64* %20, align 8
  %196 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 1
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %275, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 2
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, 127
  br i1 %202, label %216, label %203

203:                                              ; preds = %199
  %204 = icmp ult i64 %201, 16383
  br i1 %204, label %216, label %205

205:                                              ; preds = %203
  %206 = icmp ult i64 %201, 2097151
  br i1 %206, label %216, label %207

207:                                              ; preds = %205
  %208 = icmp ult i64 %201, 268435455
  br i1 %208, label %216, label %209

209:                                              ; preds = %207
  %210 = icmp ult i64 %201, 34359738367
  br i1 %210, label %216, label %211

211:                                              ; preds = %209
  %212 = icmp ult i64 %201, 4398046511103
  br i1 %212, label %216, label %213

213:                                              ; preds = %211
  %214 = icmp ult i64 %201, 562949953421311
  %215 = select i1 %214, i64 7, i64 8
  br label %216

216:                                              ; preds = %213, %211, %209, %207, %205, %203, %199
  %217 = phi i64 [ 1, %199 ], [ 2, %203 ], [ 3, %205 ], [ 4, %207 ], [ 5, %209 ], [ 6, %211 ], [ %215, %213 ]
  %218 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp ult i64 %219, 256
  br i1 %220, label %234, label %221

221:                                              ; preds = %216
  %222 = icmp ult i64 %219, 65536
  br i1 %222, label %234, label %223

223:                                              ; preds = %221
  %224 = icmp ult i64 %219, 16777216
  br i1 %224, label %234, label %225

225:                                              ; preds = %223
  %226 = icmp ult i64 %219, 4294967296
  br i1 %226, label %234, label %227

227:                                              ; preds = %225
  %228 = icmp ult i64 %219, 1099511627776
  br i1 %228, label %234, label %229

229:                                              ; preds = %227
  %230 = icmp ult i64 %219, 281474976710656
  br i1 %230, label %234, label %231

231:                                              ; preds = %229
  %232 = icmp ult i64 %219, 72057594037927936
  %233 = select i1 %232, i64 7, i64 8
  br label %234

234:                                              ; preds = %231, %229, %227, %225, %223, %221, %216
  %235 = phi i64 [ 1, %216 ], [ 2, %221 ], [ 3, %223 ], [ 4, %225 ], [ 5, %227 ], [ 6, %229 ], [ %233, %231 ]
  %236 = add i64 %201, 3
  %237 = add i64 %236, %217
  %238 = add i64 %237, %235
  %239 = icmp ult i64 %238, 127
  br i1 %239, label %253, label %240

240:                                              ; preds = %234
  %241 = icmp ult i64 %238, 16383
  br i1 %241, label %253, label %242

242:                                              ; preds = %240
  %243 = icmp ult i64 %238, 2097151
  br i1 %243, label %253, label %244

244:                                              ; preds = %242
  %245 = icmp ult i64 %238, 268435455
  br i1 %245, label %253, label %246

246:                                              ; preds = %244
  %247 = icmp ult i64 %238, 34359738367
  br i1 %247, label %253, label %248

248:                                              ; preds = %246
  %249 = icmp ult i64 %238, 4398046511103
  br i1 %249, label %253, label %250

250:                                              ; preds = %248
  %251 = icmp ult i64 %238, 562949953421311
  %252 = select i1 %251, i64 7, i64 8
  br label %253

253:                                              ; preds = %250, %248, %246, %244, %242, %240, %234
  %254 = phi i64 [ 1, %234 ], [ 2, %240 ], [ 3, %242 ], [ 4, %244 ], [ 5, %246 ], [ 6, %248 ], [ %252, %250 ]
  %255 = add i64 %238, 1
  %256 = add i64 %255, %254
  %257 = icmp ult i64 %256, 127
  br i1 %257, label %271, label %258

258:                                              ; preds = %253
  %259 = icmp ult i64 %256, 16383
  br i1 %259, label %271, label %260

260:                                              ; preds = %258
  %261 = icmp ult i64 %256, 2097151
  br i1 %261, label %271, label %262

262:                                              ; preds = %260
  %263 = icmp ult i64 %256, 268435455
  br i1 %263, label %271, label %264

264:                                              ; preds = %262
  %265 = icmp ult i64 %256, 34359738367
  br i1 %265, label %271, label %266

266:                                              ; preds = %264
  %267 = icmp ult i64 %256, 4398046511103
  br i1 %267, label %271, label %268

268:                                              ; preds = %266
  %269 = icmp ult i64 %256, 562949953421311
  %270 = select i1 %269, i64 7, i64 8
  br label %271

271:                                              ; preds = %268, %266, %264, %262, %260, %258, %253
  %272 = phi i64 [ 1, %253 ], [ 2, %258 ], [ 3, %260 ], [ 4, %262 ], [ 5, %264 ], [ 6, %266 ], [ %270, %268 ]
  %273 = add i64 %256, 2
  %274 = add i64 %273, %272
  br label %275

275:                                              ; preds = %271, %194
  %276 = phi i64 [ %238, %271 ], [ 0, %194 ]
  %277 = phi i64 [ %256, %271 ], [ 0, %194 ]
  %278 = phi i64 [ %274, %271 ], [ 0, %194 ]
  %279 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 12
  %280 = load i64, i64* %279, align 8
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %303, label %282

282:                                              ; preds = %275
  %283 = ashr i64 %280, 63
  %284 = xor i64 %283, %280
  %285 = shl i64 %284, 1
  %286 = icmp ult i64 %285, 256
  br i1 %286, label %300, label %287

287:                                              ; preds = %282
  %288 = icmp ult i64 %285, 65536
  br i1 %288, label %300, label %289

289:                                              ; preds = %287
  %290 = icmp ult i64 %285, 16777216
  br i1 %290, label %300, label %291

291:                                              ; preds = %289
  %292 = icmp ult i64 %285, 4294967296
  br i1 %292, label %300, label %293

293:                                              ; preds = %291
  %294 = icmp ult i64 %285, 1099511627776
  br i1 %294, label %300, label %295

295:                                              ; preds = %293
  %296 = icmp ult i64 %285, 281474976710656
  br i1 %296, label %300, label %297

297:                                              ; preds = %295
  %298 = icmp ult i64 %285, 72057594037927936
  %299 = select i1 %298, i64 7, i64 8
  br label %300

300:                                              ; preds = %297, %295, %293, %291, %289, %287, %282
  %301 = phi i64 [ 1, %282 ], [ 2, %287 ], [ 3, %289 ], [ 4, %291 ], [ 5, %293 ], [ 6, %295 ], [ %299, %297 ]
  %302 = add nuw nsw i64 %301, 3
  br label %303

303:                                              ; preds = %300, %275
  %304 = phi i64 [ %302, %300 ], [ 0, %275 ]
  %305 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 13
  %306 = load i64, i64* %305, align 8
  %307 = udiv i64 %306, %195
  %308 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %309 = load i8, i8* %308, align 8, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %329

311:                                              ; preds = %303
  %312 = icmp ult i64 %307, 256
  br i1 %312, label %326, label %313

313:                                              ; preds = %311
  %314 = icmp ult i64 %307, 65536
  br i1 %314, label %326, label %315

315:                                              ; preds = %313
  %316 = icmp ult i64 %307, 16777216
  br i1 %316, label %326, label %317

317:                                              ; preds = %315
  %318 = icmp ult i64 %307, 4294967296
  br i1 %318, label %326, label %319

319:                                              ; preds = %317
  %320 = icmp ult i64 %307, 1099511627776
  br i1 %320, label %326, label %321

321:                                              ; preds = %319
  %322 = icmp ult i64 %307, 281474976710656
  br i1 %322, label %326, label %323

323:                                              ; preds = %321
  %324 = icmp ult i64 %307, 72057594037927936
  %325 = select i1 %324, i64 7, i64 8
  br label %326

326:                                              ; preds = %323, %321, %319, %317, %315, %313, %311
  %327 = phi i64 [ 1, %311 ], [ 2, %313 ], [ 3, %315 ], [ 4, %317 ], [ 5, %319 ], [ 6, %321 ], [ %325, %323 ]
  %328 = add nuw nsw i64 %327, 2
  br label %329

329:                                              ; preds = %326, %303
  %330 = phi i64 [ 0, %303 ], [ %328, %326 ]
  %331 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 3
  %332 = load i64, i64* %331, align 8
  %333 = udiv i64 %332, %195
  %334 = icmp uge i64 %332, %195
  br i1 %334, label %335, label %353

335:                                              ; preds = %329
  %336 = icmp ult i64 %333, 256
  br i1 %336, label %350, label %337

337:                                              ; preds = %335
  %338 = icmp ult i64 %333, 65536
  br i1 %338, label %350, label %339

339:                                              ; preds = %337
  %340 = icmp ult i64 %333, 16777216
  br i1 %340, label %350, label %341

341:                                              ; preds = %339
  %342 = icmp ult i64 %333, 4294967296
  br i1 %342, label %350, label %343

343:                                              ; preds = %341
  %344 = icmp ult i64 %333, 1099511627776
  br i1 %344, label %350, label %345

345:                                              ; preds = %343
  %346 = icmp ult i64 %333, 281474976710656
  br i1 %346, label %350, label %347

347:                                              ; preds = %345
  %348 = icmp ult i64 %333, 72057594037927936
  %349 = select i1 %348, i64 7, i64 8
  br label %350

350:                                              ; preds = %347, %345, %343, %341, %339, %337, %335
  %351 = phi i64 [ 1, %335 ], [ 2, %337 ], [ 3, %339 ], [ 4, %341 ], [ 5, %343 ], [ 6, %345 ], [ %349, %347 ]
  %352 = add nuw nsw i64 %351, 2
  br label %353

353:                                              ; preds = %350, %329
  %354 = phi i64 [ %352, %350 ], [ 0, %329 ]
  %355 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 9
  %356 = load i64, i64* %355, align 8
  %357 = add i64 %356, 4
  %358 = icmp ult i64 %357, 127
  br i1 %358, label %372, label %359

359:                                              ; preds = %353
  %360 = icmp ult i64 %357, 16383
  br i1 %360, label %372, label %361

361:                                              ; preds = %359
  %362 = icmp ult i64 %357, 2097151
  br i1 %362, label %372, label %363

363:                                              ; preds = %361
  %364 = icmp ult i64 %357, 268435455
  br i1 %364, label %372, label %365

365:                                              ; preds = %363
  %366 = icmp ult i64 %357, 34359738367
  br i1 %366, label %372, label %367

367:                                              ; preds = %365
  %368 = icmp ult i64 %357, 4398046511103
  br i1 %368, label %372, label %369

369:                                              ; preds = %367
  %370 = icmp ult i64 %357, 562949953421311
  %371 = select i1 %370, i64 7, i64 8
  br label %372

372:                                              ; preds = %369, %367, %365, %363, %361, %359, %353
  %373 = phi i64 [ 1, %353 ], [ 2, %359 ], [ 3, %361 ], [ 4, %363 ], [ 5, %365 ], [ 6, %367 ], [ %371, %369 ]
  %374 = add i64 %278, 1
  %375 = add i64 %374, %304
  %376 = add i64 %375, %330
  %377 = add i64 %376, %354
  %378 = add i64 %377, %357
  %379 = add i64 %378, %373
  %380 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 160, i64 %379) #9
  br i1 %380, label %381, label %510

381:                                              ; preds = %372
  %382 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 161, i64 %357) #9
  br i1 %382, label %383, label %510

383:                                              ; preds = %381
  %384 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %385 = load i64, i64* %384, align 8
  %386 = icmp ult i64 %385, 127
  br i1 %386, label %400, label %387

387:                                              ; preds = %383
  %388 = icmp ult i64 %385, 16383
  br i1 %388, label %400, label %389

389:                                              ; preds = %387
  %390 = icmp ult i64 %385, 2097151
  br i1 %390, label %400, label %391

391:                                              ; preds = %389
  %392 = icmp ult i64 %385, 268435455
  br i1 %392, label %400, label %393

393:                                              ; preds = %391
  %394 = icmp ult i64 %385, 34359738367
  br i1 %394, label %400, label %395

395:                                              ; preds = %393
  %396 = icmp ult i64 %385, 4398046511103
  br i1 %396, label %400, label %397

397:                                              ; preds = %395
  %398 = icmp ult i64 %385, 562949953421311
  %399 = select i1 %398, i32 7, i32 8
  br label %400

400:                                              ; preds = %397, %395, %393, %391, %389, %387, %383
  %401 = phi i32 [ 1, %383 ], [ 2, %387 ], [ 3, %389 ], [ 4, %391 ], [ 5, %393 ], [ 6, %395 ], [ %399, %397 ]
  %402 = mul nuw nsw i32 %401, 7
  %403 = zext i32 %402 to i64
  %404 = shl i64 1, %403
  %405 = add nsw i64 %404, -2
  %406 = icmp ult i64 %405, %385
  br i1 %406, label %510, label %407

407:                                              ; preds = %400
  %408 = or i64 %404, %385
  %409 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  %410 = add nuw nsw i32 %401, 1
  %411 = zext i32 %410 to i64
  br label %415

412:                                              ; preds = %415
  %413 = add nuw nsw i64 %416, 1
  %414 = icmp eq i64 %413, %411
  br i1 %414, label %432, label %415

415:                                              ; preds = %412, %407
  %416 = phi i64 [ %413, %412 ], [ 1, %407 ]
  %417 = phi i32 [ %428, %412 ], [ undef, %407 ]
  %418 = trunc i64 %416 to i32
  %419 = sub nsw i32 %401, %418
  %420 = shl nsw i32 %419, 3
  %421 = zext i32 %420 to i64
  %422 = ashr i64 %408, %421
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #9
  %423 = trunc i64 %422 to i8
  store i8 %423, i8* %9, align 1
  %424 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %409, align 8
  %425 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %424, align 8
  %426 = call i32 %425(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %9, i32 1) #9
  %427 = icmp slt i32 %426, 0
  %428 = select i1 %427, i32 %426, i32 %417
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #9
  %429 = icmp sgt i32 %426, -1
  br i1 %429, label %412, label %430

430:                                              ; preds = %415
  %431 = icmp eq i32 %428, 0
  br i1 %431, label %432, label %510

432:                                              ; preds = %412, %430
  %433 = lshr i64 %27, 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #9
  %434 = trunc i64 %433 to i8
  store i8 %434, i8* %10, align 1
  %435 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %409, align 8
  %436 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %435, align 8
  %437 = call i32 %436(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %10, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #9
  %438 = icmp sgt i32 %437, -1
  br i1 %438, label %439, label %510

439:                                              ; preds = %432
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #9
  %440 = trunc i64 %27 to i8
  store i8 %440, i8* %10, align 1
  %441 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %409, align 8
  %442 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %441, align 8
  %443 = call i32 %442(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %10, i32 1) #9
  %444 = icmp slt i32 %443, 0
  %445 = select i1 %444, i32 %443, i32 %437
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #9
  %446 = icmp sgt i32 %443, -1
  %447 = icmp eq i32 %445, 0
  %448 = or i1 %446, %447
  br i1 %448, label %449, label %510

449:                                              ; preds = %439
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #9
  store i8 0, i8* %11, align 1
  %450 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %409, align 8
  %451 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %450, align 8
  %452 = call i32 %451(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %11, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #9
  %453 = icmp sgt i32 %452, -1
  br i1 %453, label %454, label %510

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 6
  %456 = load i8*, i8** %455, align 8
  %457 = load i64, i64* %355, align 8
  %458 = trunc i64 %457 to i32
  %459 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %409, align 8
  %460 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %459, align 8
  %461 = call i32 %460(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* %456, i32 %458) #9
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %510

463:                                              ; preds = %454
  %464 = load i8*, i8** %196, align 8
  %465 = icmp eq i8* %464, null
  br i1 %465, label %479, label %466

466:                                              ; preds = %463
  %467 = call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 30113, i64 %277) #9
  br i1 %467, label %468, label %510

468:                                              ; preds = %466
  %469 = call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 166, i64 %276) #9
  br i1 %469, label %470, label %510

470:                                              ; preds = %468
  %471 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 0
  %472 = load i64, i64* %471, align 8
  %473 = call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 238, i64 %472, i64 0) #9
  br i1 %473, label %474, label %510

474:                                              ; preds = %470
  %475 = load i8*, i8** %196, align 8
  %476 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 2
  %477 = load i64, i64* %476, align 8
  %478 = call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 165, i8* %475, i64 %477) #9
  br i1 %478, label %479, label %510

479:                                              ; preds = %474, %463
  %480 = load i64, i64* %279, align 8
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %484, label %482

482:                                              ; preds = %479
  %483 = call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyx(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 30114, i64 %480) #9
  br i1 %483, label %484, label %510

484:                                              ; preds = %482, %479
  %485 = load i8, i8* %308, align 8, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %489

487:                                              ; preds = %484
  %488 = call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 251, i64 %307, i64 0) #9
  br i1 %488, label %489, label %510

489:                                              ; preds = %487, %484
  br i1 %334, label %490, label %492

490:                                              ; preds = %489
  %491 = call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 155, i64 %333, i64 0) #9
  br i1 %491, label %492, label %510

492:                                              ; preds = %490, %489
  %493 = icmp ult i64 %379, 127
  br i1 %493, label %507, label %494

494:                                              ; preds = %492
  %495 = icmp ult i64 %379, 16383
  br i1 %495, label %507, label %496

496:                                              ; preds = %494
  %497 = icmp ult i64 %379, 2097151
  br i1 %497, label %507, label %498

498:                                              ; preds = %496
  %499 = icmp ult i64 %379, 268435455
  br i1 %499, label %507, label %500

500:                                              ; preds = %498
  %501 = icmp ult i64 %379, 34359738367
  br i1 %501, label %507, label %502

502:                                              ; preds = %500
  %503 = icmp ult i64 %379, 4398046511103
  br i1 %503, label %507, label %504

504:                                              ; preds = %502
  %505 = icmp ult i64 %379, 562949953421311
  %506 = select i1 %505, i64 8, i64 9
  br label %507

507:                                              ; preds = %504, %502, %500, %498, %496, %494, %492
  %508 = phi i64 [ 2, %492 ], [ 3, %494 ], [ 4, %496 ], [ 5, %498 ], [ 6, %500 ], [ 7, %502 ], [ %506, %504 ]
  %509 = add i64 %508, %379
  br label %510

510:                                              ; preds = %507, %490, %487, %482, %474, %470, %468, %466, %454, %449, %439, %432, %430, %400, %381, %372, %190, %167, %158, %148, %141, %139, %110, %91, %62, %31, %23, %3, %15, %19
  %511 = phi i64 [ 0, %19 ], [ 0, %15 ], [ 0, %3 ], [ 0, %23 ], [ 0, %91 ], [ 0, %139 ], [ %193, %190 ], [ 0, %167 ], [ 0, %62 ], [ 0, %110 ], [ 0, %31 ], [ 0, %158 ], [ 0, %141 ], [ 0, %148 ], [ %509, %507 ], [ 0, %372 ], [ 0, %381 ], [ 0, %430 ], [ 0, %454 ], [ 0, %466 ], [ 0, %468 ], [ 0, %470 ], [ 0, %474 ], [ 0, %482 ], [ 0, %487 ], [ 0, %490 ], [ 0, %400 ], [ 0, %449 ], [ 0, %432 ], [ 0, %439 ]
  ret i64 %511
}

declare zeroext i1 @_ZNK8mkvmuxer5Frame7IsValidEv(%"class.mkvmuxer::Frame"*) local_unnamed_addr #5

declare i64 @_ZNK8mkvmuxer7Cluster19GetRelativeTimecodeEl(%"class.mkvmuxer::Cluster"*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK8mkvmuxer5Frame16CanBeSimpleBlockEv(%"class.mkvmuxer::Frame"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer16WriteVoidElementEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #4 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = icmp eq %"class.mkvmuxer::IMkvWriter"* %0, null
  br i1 %6, label %134, label %7

7:                                                ; preds = %2
  %8 = add i64 %1, -1
  %9 = icmp ult i64 %8, 127
  br i1 %9, label %23, label %10

10:                                               ; preds = %7
  %11 = icmp ult i64 %8, 16383
  br i1 %11, label %23, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %8, 2097151
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = icmp ult i64 %8, 268435455
  br i1 %15, label %23, label %16

16:                                               ; preds = %14
  %17 = icmp ult i64 %8, 34359738367
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = icmp ult i64 %8, 4398046511103
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = icmp ult i64 %8, 562949953421311
  %22 = select i1 %21, i64 7, i64 8
  br label %23

23:                                               ; preds = %7, %10, %12, %14, %16, %18, %20
  %24 = phi i64 [ 1, %7 ], [ 2, %10 ], [ 3, %12 ], [ 4, %14 ], [ 5, %16 ], [ 6, %18 ], [ %22, %20 ]
  %25 = sub i64 %8, %24
  %26 = icmp ult i64 %25, 127
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = icmp ult i64 %25, 16383
  br i1 %28, label %40, label %29

29:                                               ; preds = %27
  %30 = icmp ult i64 %25, 2097151
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  %32 = icmp ult i64 %25, 268435455
  br i1 %32, label %40, label %33

33:                                               ; preds = %31
  %34 = icmp ult i64 %25, 34359738367
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = icmp ult i64 %25, 4398046511103
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = icmp ult i64 %25, 562949953421311
  %39 = select i1 %38, i64 8, i64 9
  br label %40

40:                                               ; preds = %23, %27, %29, %31, %33, %35, %37
  %41 = phi i64 [ 2, %23 ], [ 3, %27 ], [ 4, %29 ], [ 5, %31 ], [ 6, %33 ], [ 7, %35 ], [ %39, %37 ]
  %42 = add i64 %41, %25
  %43 = icmp eq i64 %42, %1
  br i1 %43, label %44, label %134

44:                                               ; preds = %40
  %45 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %46 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %46, i64 1
  %48 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %47, align 8
  %49 = tail call i64 %48(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %50 = icmp slt i64 %49, 0
  br i1 %50, label %134, label %51

51:                                               ; preds = %44
  %52 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %45, align 8
  %53 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %52, i64 1
  %54 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %53, align 8
  %55 = tail call i64 %54(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %56 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)***
  %57 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)**, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %57, i64 4
  %59 = load void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)*, void (%"class.mkvmuxer::IMkvWriter"*, i64, i64)** %58, align 8
  tail call void %59(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i64 236, i64 %55) #9
  %60 = bitcast %"class.mkvmuxer::IMkvWriter"* %0 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -20, i8* %4, align 1
  %61 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %60, align 8
  %62 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %61, align 8
  %63 = call i32 %62(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %65, label %134

65:                                               ; preds = %51
  br i1 %26, label %79, label %66

66:                                               ; preds = %65
  %67 = icmp ult i64 %25, 16383
  br i1 %67, label %79, label %68

68:                                               ; preds = %66
  %69 = icmp ult i64 %25, 2097151
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = icmp ult i64 %25, 268435455
  br i1 %71, label %79, label %72

72:                                               ; preds = %70
  %73 = icmp ult i64 %25, 34359738367
  br i1 %73, label %79, label %74

74:                                               ; preds = %72
  %75 = icmp ult i64 %25, 4398046511103
  br i1 %75, label %79, label %76

76:                                               ; preds = %74
  %77 = icmp ult i64 %25, 562949953421311
  %78 = select i1 %77, i32 7, i32 8
  br label %79

79:                                               ; preds = %76, %74, %72, %70, %68, %66, %65
  %80 = phi i32 [ 1, %65 ], [ 2, %66 ], [ 3, %68 ], [ 4, %70 ], [ 5, %72 ], [ 6, %74 ], [ %78, %76 ]
  %81 = mul nuw nsw i32 %80, 7
  %82 = zext i32 %81 to i64
  %83 = shl i64 1, %82
  %84 = add nsw i64 %83, -2
  %85 = icmp ult i64 %84, %25
  br i1 %85, label %134, label %86

86:                                               ; preds = %79
  %87 = or i64 %83, %25
  %88 = add nuw nsw i32 %80, 1
  %89 = zext i32 %88 to i64
  br label %93

90:                                               ; preds = %93
  %91 = add nuw nsw i64 %94, 1
  %92 = icmp eq i64 %91, %89
  br i1 %92, label %110, label %93

93:                                               ; preds = %90, %86
  %94 = phi i64 [ %91, %90 ], [ 1, %86 ]
  %95 = phi i32 [ %106, %90 ], [ undef, %86 ]
  %96 = trunc i64 %94 to i32
  %97 = sub nsw i32 %80, %96
  %98 = shl nsw i32 %97, 3
  %99 = zext i32 %98 to i64
  %100 = ashr i64 %87, %99
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %101 = trunc i64 %100 to i8
  store i8 %101, i8* %3, align 1
  %102 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %60, align 8
  %103 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %102, align 8
  %104 = call i32 %103(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %3, i32 1) #9
  %105 = icmp slt i32 %104, 0
  %106 = select i1 %105, i32 %104, i32 %95
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %107 = icmp sgt i32 %104, -1
  br i1 %107, label %90, label %108

108:                                              ; preds = %93
  %109 = icmp eq i32 %106, 0
  br i1 %109, label %110, label %134

110:                                              ; preds = %90, %108
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 0, i8* %5, align 1
  %111 = trunc i64 %25 to i32
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %115, label %122

113:                                              ; preds = %115
  %114 = icmp eq i32 %121, %111
  br i1 %114, label %122, label %115

115:                                              ; preds = %110, %113
  %116 = phi i32 [ %121, %113 ], [ 0, %110 ]
  %117 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %60, align 8
  %118 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %117, align 8
  %119 = call i32 %118(%"class.mkvmuxer::IMkvWriter"* nonnull %0, i8* nonnull %5, i32 1) #9
  %120 = icmp eq i32 %119, 0
  %121 = add nuw nsw i32 %116, 1
  br i1 %120, label %113, label %132

122:                                              ; preds = %113, %110
  %123 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %45, align 8
  %124 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %123, i64 1
  %125 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %124, align 8
  %126 = call i64 %125(%"class.mkvmuxer::IMkvWriter"* nonnull %0) #9
  %127 = icmp sgt i64 %126, -1
  %128 = sub nsw i64 %126, %49
  %129 = icmp eq i64 %128, %1
  %130 = and i1 %127, %129
  %131 = select i1 %130, i64 %1, i64 0
  br label %132

132:                                              ; preds = %115, %122
  %133 = phi i64 [ %131, %122 ], [ 0, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  br label %134

134:                                              ; preds = %51, %79, %40, %108, %44, %132, %2
  %135 = phi i64 [ 0, %2 ], [ 0, %40 ], [ %133, %132 ], [ 0, %44 ], [ 0, %108 ], [ 0, %79 ], [ 0, %51 ]
  ret i64 %135
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer10GetVersionEPiS0_S0_S0_(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #6 {
  store i32 0, i32* %0, align 4
  store i32 2, i32* %1, align 4
  store i32 1, i32* %2, align 4
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer7MakeUIDEPj(i32*) local_unnamed_addr #4 {
  %2 = tail call i32 @rand_r(i32* %0) #9
  %3 = shl i32 %2, 4
  %4 = and i32 %3, 65280
  %5 = tail call i32 @rand_r(i32* %0) #9
  %6 = lshr i32 %5, 4
  %7 = and i32 %6, 255
  %8 = or i32 %4, %7
  %9 = shl nuw nsw i32 %8, 8
  %10 = tail call i32 @rand_r(i32* %0) #9
  %11 = lshr i32 %10, 4
  %12 = and i32 %11, 255
  %13 = or i32 %9, %12
  %14 = shl nuw i32 %13, 8
  %15 = tail call i32 @rand_r(i32* %0) #9
  %16 = lshr i32 %15, 4
  %17 = and i32 %16, 255
  %18 = or i32 %14, %17
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 8
  %21 = tail call i32 @rand_r(i32* %0) #9
  %22 = lshr i32 %21, 4
  %23 = and i32 %22, 255
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = shl nuw nsw i64 %25, 8
  %27 = tail call i32 @rand_r(i32* %0) #9
  %28 = lshr i32 %27, 4
  %29 = and i32 %28, 255
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = shl nuw nsw i64 %31, 8
  %33 = tail call i32 @rand_r(i32* %0) #9
  %34 = lshr i32 %33, 4
  %35 = and i32 %34, 255
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  ret i64 %37
}

; Function Attrs: nounwind
declare i32 @rand_r(i32*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer30IsMatrixCoefficientsValueValidEm(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 11
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer28IsChromaSitingHorzValueValidEm(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 3
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer28IsChromaSitingVertValueValidEm(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 3
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer23IsColourRangeValueValidEm(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 4
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer35IsTransferCharacteristicsValueValidEm(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, -1
  %3 = icmp ult i64 %2, 18
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer21IsPrimariesValueValidEm(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 23
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i64 %0 to i23
  %5 = lshr i23 -4192257, %4
  %6 = and i23 %5, 1
  %7 = icmp ne i23 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
