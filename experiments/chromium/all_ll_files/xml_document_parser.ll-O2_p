; ModuleID = '../../third_party/blink/renderer/core/xml/parser/xml_document_parser.cc'
source_filename = "../../third_party/blink/renderer/core/xml/parser/xml_document_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.371", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.371" = type { %"class.base::RefCounted.372" }
%"class.base::RefCounted.372" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.470", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.478", %"class.WTF::Vector.478", i8, i32, %"class.blink::Member.483", %"class.blink::Member.181", %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.491", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.493", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.415", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.504", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.391", %"class.blink::Member.368", %"class.blink::Member.709", %"class.blink::Member.368", %"class.blink::Member.368", %"class.blink::Member.368", %"class.blink::UserActionElementSet", %"class.blink::Member.718", double, double, i64, i64, %"class.blink::HeapHashSet.720", %"class.blink::HeapHashSet.727", i16, i8, %"class.blink::Member.734", %"class.blink::Member.736", %"class.blink::Member.1069", %"class.blink::Member.1071", %"class.blink::TextLinkColors", %"class.blink::Member.1073", i8, [7 x i8], %"class.blink::HeapHashMap.1075", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.368", %"class.WTF::Vector.1082", %"class.blink::Member.1087", %"class.blink::Member.1089", i8, %"class.blink::Member.368", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1091", %"class.blink::HeapVector.1093", %"class.std::__1::unique_ptr.1100", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1106", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1119", %"class.WTF::Vector.1121", i8, i8, %"class.std::__1::unique_ptr.1126", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.391", %"class.blink::HeapVector.1132", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1140", i8, i32, %"class.blink::Member.1142", %"class.blink::Member.1144", %"class.blink::Member.1146", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1148", %"class.WTF::HashMap.1150", %"class.blink::Member.1155", %"class.blink::Member.1157", %"class.blink::Member.1159", %"class.blink::Member.1161", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1163", i8, i32, %"class.blink::Member.1170", %"class.blink::Member.1172", i32, %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.std::__1::unique_ptr.1180", i64, %"class.std::__1::unique_ptr.1186", i32, i32, %"class.blink::Member.1192", %"class.blink::Member.1194", %"class.blink::Member.1196", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1198", %"class.WTF::Vector.1200", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1205", %"class.blink::Member.1212", %"class.std::__1::unique_ptr.1214", %"class.blink::Member.1220", i8, i8, %"class.WTF::String", %"class.blink::Member.1222", i8, [7 x i8], %"class.blink::HeapHashMap.1224", %"class.blink::HeapObserverSet.1231", %"class.blink::Member.1239", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1241", i32, i8, i8, %"class.blink::WeakMember.1243", %"class.blink::Member.1244" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.50", %"class.blink::Member.50" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.54" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.46", %"class.blink::Member", %"class.blink::Member.52", %"class.blink::Member.353", %"class.blink::Member.353", %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.407", %"class.blink::HeapVector.409" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.357" }
%"class.blink::HeapHashMap.357" = type { %"class.WTF::HashMap.360" }
%"class.WTF::HashMap.360" = type { %"class.WTF::HashTable.361" }
%"class.WTF::HashTable.361" = type <{ %"struct.WTF::KeyValuePair.363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.363" = type { %"class.WTF::AtomicString", %"class.blink::Member.364" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.368", i32, %"class.blink::HeapVector.391" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.404" }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::HeapHashMap.406"* }
%"class.blink::HeapHashMap.406" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.409" = type { %"class.WTF::Vector.412" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::Member.415"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.470" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.471" }
%"class.blink::HeapHashMap.471" = type { %"class.WTF::HashMap.474" }
%"class.WTF::HashMap.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"struct.WTF::KeyValuePair.477"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.477" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"class.base::OnceCallback.285"*, i32, i32 }
%"class.base::OnceCallback.285" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.261" }
%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { i32 }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.181" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.186", i32, i8, [3 x i8], %"class.blink::HeapVector.188", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.196", %"class.blink::Member.198", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.207", %"class.blink::Member.348", %"class.blink::Member.350", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.123" }
%"class.WTF::HashMap.123" = type { %"class.WTF::HashTable.124" }
%"class.WTF::HashTable.124" = type <{ %"struct.WTF::KeyValuePair.126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.126" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.134" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.127" }
%"class.blink::HeapHashSet.127" = type { %"class.WTF::HashSet.130" }
%"class.WTF::HashSet.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"class.blink::WeakMember.133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.133" = type opaque
%"class.blink::Supplementable.134" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.135" }
%"class.blink::HeapHashMap.135" = type { %"class.WTF::HashMap.138" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type { i8*, %"class.blink::Member.2091" }
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2093" }
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.142, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", %"class.blink::Member.181", i32, [4 x i8], %"class.WTF::HashSet.182", i32, i32 }
%class.scoped_refptr.142 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.143", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.146 }
%"class.WTF::RefCounted.143" = type { %"class.base::RefCounted.144" }
%"class.base::RefCounted.144" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.146 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.162", %"class.std::__1::map.171"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.152 }
%union.anon.152 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::map.162" = type { %"class.std::__1::__tree.163" }
%"class.std::__1::__tree.163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.171" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.182" = type { %"class.WTF::HashTable.183" }
%"class.WTF::HashTable.183" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.188" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::Member.194"*, i32, i32 }
%"class.blink::Member.194" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.200", i32, i32 }
%"class.blink::HeapHashMap.200" = type { %"class.WTF::HashMap.203" }
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.206" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.210" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.213" }
%"class.WTF::Vector.213" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"class.mojo::StructPtr.216"*, i32, i32 }
%"class.mojo::StructPtr.216" = type { %"class.std::__1::unique_ptr.217" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.220", %"class.WTF::HashMap.227", %"class.WTF::HashMap.232", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.237", i32, %"class.mojo::StructPtr.242", %"class.WTF::Vector.237" }
%"class.mojo::StructPtr.220" = type { %"class.std::__1::unique_ptr.221" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type opaque
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.242" = type { %"class.std::__1::unique_ptr.243" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.237", i8, i8, [6 x i8] }>
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.339" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.257", i32 }>
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.266", %"class.absl::optional.271", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.292", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.314", %"class.std::__1::map.325", i64, %"class.base::OnceCallback.285", %"class.base::OnceCallback.334", i8, %class.scoped_refptr.276, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.335" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, %union.anon.270 }
%union.anon.270 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.271" = type { %"class.absl::optional_internal::optional_data.272" }
%"class.absl::optional_internal::optional_data.272" = type { %"class.absl::optional_internal::optional_data_base.273" }
%"class.absl::optional_internal::optional_data_base.273" = type { %"class.absl::optional_internal::optional_data_dtor_base.274" }
%"class.absl::optional_internal::optional_data_dtor_base.274" = type { i8, %union.anon.275 }
%union.anon.275 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.285" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.276, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.278 }
%class.scoped_refptr.278 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.279", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.280" }
%"struct.std::__1::atomic.280" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__cxx_atomic_impl.283" }
%"struct.std::__1::__cxx_atomic_impl.283" = type { %"struct.std::__1::__cxx_atomic_base_impl.284" }
%"struct.std::__1::__cxx_atomic_base_impl.284" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.352", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.276, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.352" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.291 }
%class.scoped_refptr.291 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.295", %class.scoped_refptr.296 }
%"class.base::RepeatingCallback.295" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.296 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.297", [4 x i8] }>
%"class.base::RefCountedThreadSafe.297" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.307", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.313" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.313" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.314" = type { %"class.std::__1::__tree.315" }
%"class.std::__1::__tree.315" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.325" = type { %"class.std::__1::__tree.326" }
%"class.std::__1::__tree.326" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.334" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.276 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.277" }>
%"class.base::RefCountedThreadSafe.277" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.285" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1281", %"class.blink::Member.1283", %"class.blink::Member.1285", %class.scoped_refptr.707, %class.scoped_refptr.707, %"class.blink::Member.1287", %"class.blink::Member.1289", %"class.blink::Member.1295", %"class.blink::Member.1299", %"class.blink::Member.1351", %"class.blink::HeapHashMap.1353", %"class.blink::HeapHashSet.1360", %"class.blink::HeapHashSet.1360", %"class.blink::HeapHashMap.1512", %"class.blink::HeapVector.1519", %"class.blink::Member.1527", %"class.blink::HeapTaskRunnerTimer.1529", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1531", %"class.WTF::Vector.1538", %"class.blink::HeapHashSet.1544", %"class.blink::HeapHashSet.1544", %"class.std::__1::unique_ptr.1550", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1562", i8, i8, %"class.base::WeakPtrFactory.1564" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.707 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1293" }
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1303", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1305", %"class.WTF::HashSet.1310", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1314", %"class.std::__1::map.1321", %"class.std::__1::map.1332", %"class.std::__1::unique_ptr.1341", %"class.blink::Member.1289", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1348", %"class.mojo::InlinedStructPtr.1350", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1305" = type { %"class.WTF::HashTable.1306" }
%"class.WTF::HashTable.1306" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1310" = type { %"class.WTF::HashTable.1311" }
%"class.WTF::HashTable.1311" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1314" = type { %"class.WTF::HashMap.1317" }
%"class.WTF::HashMap.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"struct.WTF::KeyValuePair.1320"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1320" = type opaque
%"class.std::__1::map.1321" = type { %"class.std::__1::__tree.1322" }
%"class.std::__1::__tree.1322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1323", %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1332" = type { %"class.std::__1::__tree.1333" }
%"class.std::__1::__tree.1333" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1334", %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1350" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1353" = type { %"class.WTF::HashMap.1356" }
%"class.WTF::HashMap.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %"struct.WTF::KeyValuePair.1359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1359" = type opaque
%"class.blink::HeapHashSet.1360" = type { %"class.WTF::HashSet.1363" }
%"class.WTF::HashSet.1363" = type { %"class.WTF::HashTable.1364" }
%"class.WTF::HashTable.1364" = type <{ %"class.blink::WeakMember.1366"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1370", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1390", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1476", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1492", %"class.blink::ResourceResponse", %class.scoped_refptr.1494, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1370" = type { %"class.absl::optional_internal::optional_data.1371" }
%"class.absl::optional_internal::optional_data.1371" = type { %"class.absl::optional_internal::optional_data_base.1372" }
%"class.absl::optional_internal::optional_data_base.1372" = type { %"class.absl::optional_internal::optional_data_dtor_base.1373" }
%"class.absl::optional_internal::optional_data_dtor_base.1373" = type { i8, %union.anon.1374 }
%union.anon.1374 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1375", i8, %"class.absl::optional.1380", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1375" = type { %"class.absl::optional_internal::optional_data.1376" }
%"class.absl::optional_internal::optional_data.1376" = type { %"class.absl::optional_internal::optional_data_base.1377" }
%"class.absl::optional_internal::optional_data_base.1377" = type { %"class.absl::optional_internal::optional_data_dtor_base.1378" }
%"class.absl::optional_internal::optional_data_dtor_base.1378" = type { i8, [7 x i8], %union.anon.1379 }
%union.anon.1379 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1380" = type { %"class.absl::optional_internal::optional_data.1381" }
%"class.absl::optional_internal::optional_data.1381" = type { %"class.absl::optional_internal::optional_data_base.1382" }
%"class.absl::optional_internal::optional_data_base.1382" = type { %"class.absl::optional_internal::optional_data_dtor_base.1383" }
%"class.absl::optional_internal::optional_data_dtor_base.1383" = type { i8, %union.anon.1384 }
%union.anon.1384 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1385", %"class.WTF::Vector.237" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { i32*, i32, i32 }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1472" }
%"class.WTF::HashMap.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"struct.WTF::KeyValuePair.1475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1475" = type <{ %"class.blink::WeakMember.2255", i32, [4 x i8] }>
%"class.blink::WeakMember.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2043", [7 x i8], %"class.blink::Member.1525", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2043" = type { i8 }
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1367" }
%"class.blink::HeapHashSet.1476" = type { %"class.WTF::HashSet.1479" }
%"class.WTF::HashSet.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"class.blink::WeakMember.1482"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1482" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1483", i8, i8, %class.scoped_refptr.507, %class.scoped_refptr.1488, %class.scoped_refptr.1490 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"struct.std::__1::pair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1487" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.507 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.508", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.508" = type { %"class.base::RefCounted.509" }
%"class.base::RefCounted.509" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.512" }
%"class.blink::HeapHashMap.512" = type { %"class.WTF::HashMap.515" }
%"class.WTF::HashMap.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"struct.WTF::KeyValuePair.518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.518" = type { %"class.blink::WeakMember.519", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.521", i32, [4 x i8], %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.659", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.665", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.676", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.701", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", %"class.std::__1::unique_ptr.554", %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.572", %"class.std::__1::unique_ptr.572", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.586", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.607", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.639", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.557" = type { %"struct.std::__1::__atomic_base.558" }
%"struct.std::__1::__atomic_base.558" = type { %"struct.std::__1::__atomic_base.559" }
%"struct.std::__1::__atomic_base.559" = type { %"struct.std::__1::__cxx_atomic_impl.560" }
%"struct.std::__1::__cxx_atomic_impl.560" = type { %"struct.std::__1::__cxx_atomic_base_impl.561" }
%"struct.std::__1::__cxx_atomic_base_impl.561" = type { i64 }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::Worklist.568"* }
%"class.blink::Worklist.568" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::Worklist.575"* }
%"class.blink::Worklist.575" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::Worklist.582"* }
%"class.blink::Worklist.582" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.blink::Worklist.589"* }
%"class.blink::Worklist.589" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::Worklist.596"* }
%"class.blink::Worklist.596" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::Worklist.603"* }
%"class.blink::Worklist.603" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::Worklist.610"* }
%"class.blink::Worklist.610" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.557" }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.617", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.632", [4 x i8] }>
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { float }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.642", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.651" }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653" }
%"class.WTF::VectorBufferBase.653" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.665" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.668" }
%"class.WTF::VectorBuffer.668" = type { %"class.WTF::VectorBufferBase.669" }
%"class.WTF::VectorBufferBase.669" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.682" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.568"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.575"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.582"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.589"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.596"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1274" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.701" = type { %"struct.std::__1::__atomic_base.702" }
%"struct.std::__1::__atomic_base.702" = type { %"struct.std::__1::__cxx_atomic_impl.703" }
%"struct.std::__1::__cxx_atomic_impl.703" = type { %"struct.std::__1::__cxx_atomic_base_impl.704" }
%"struct.std::__1::__cxx_atomic_base_impl.704" = type { i8 }
%class.scoped_refptr.1488 = type { %"class.base::RefCountedData.1489"* }
%"class.base::RefCountedData.1489" = type opaque
%class.scoped_refptr.1490 = type { %"class.base::RefCountedData.1491"* }
%"class.base::RefCountedData.1491" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1440" }
%"class.base::time_internal::TimeBase.1440" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1409", %"class.absl::optional.1414", %"class.absl::optional.1424", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1429", %"class.absl::optional.1424", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1424", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1429", %"class.absl::optional.1434", i8, %class.scoped_refptr.1439 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1393" }
%"class.WTF::HashMap.1393" = type { %"class.WTF::HashTable.1394" }
%"class.WTF::HashTable.1394" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1397 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1398", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1407, i8, %"class.url::Origin" }
%"class.base::RefCounted.1398" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1399" }
%"class.std::__1::vector.1399" = type { %"class.std::__1::__vector_base.1400" }
%"class.std::__1::__vector_base.1400" = type { %"class.std::__1::unique_ptr.1401"*, %"class.std::__1::unique_ptr.1401"*, %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.std::__1::unique_ptr.1401"* }
%class.scoped_refptr.1407 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1408", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1408" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1409" = type { %"class.absl::optional_internal::optional_data.1410" }
%"class.absl::optional_internal::optional_data.1410" = type { %"class.absl::optional_internal::optional_data_base.1411" }
%"class.absl::optional_internal::optional_data_base.1411" = type { %"class.absl::optional_internal::optional_data_dtor_base.1412" }
%"class.absl::optional_internal::optional_data_dtor_base.1412" = type { i8, %union.anon.1413 }
%union.anon.1413 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1414" = type { %"class.absl::optional_internal::optional_data.1415" }
%"class.absl::optional_internal::optional_data.1415" = type { %"class.absl::optional_internal::optional_data_base.1416" }
%"class.absl::optional_internal::optional_data_base.1416" = type { %"class.absl::optional_internal::optional_data_dtor_base.1417" }
%"class.absl::optional_internal::optional_data_dtor_base.1417" = type { i8, %union.anon.1418 }
%union.anon.1418 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" }
%"class.WTF::Vector.1419" = type { %"class.WTF::VectorBuffer.1420" }
%"class.WTF::VectorBuffer.1420" = type { %"class.WTF::VectorBufferBase.1421" }
%"class.WTF::VectorBufferBase.1421" = type { %class.scoped_refptr.146*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.266", %"class.absl::optional.266" }
%"class.absl::optional.1424" = type { %"class.absl::optional_internal::optional_data.1425" }
%"class.absl::optional_internal::optional_data.1425" = type { %"class.absl::optional_internal::optional_data_base.1426" }
%"class.absl::optional_internal::optional_data_base.1426" = type { %"class.absl::optional_internal::optional_data_dtor_base.1427" }
%"class.absl::optional_internal::optional_data_dtor_base.1427" = type { i8, %union.anon.1428 }
%union.anon.1428 = type { %"class.WTF::String" }
%"class.absl::optional.1429" = type { %"class.absl::optional_internal::optional_data.1430" }
%"class.absl::optional_internal::optional_data.1430" = type { %"class.absl::optional_internal::optional_data_base.1431" }
%"class.absl::optional_internal::optional_data_base.1431" = type { %"class.absl::optional_internal::optional_data_dtor_base.1432" }
%"class.absl::optional_internal::optional_data_dtor_base.1432" = type { i8, %union.anon.1433 }
%union.anon.1433 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1434" = type { %"class.absl::optional_internal::optional_data.1435" }
%"class.absl::optional_internal::optional_data.1435" = type { %"class.absl::optional_internal::optional_data_base.1436" }
%"class.absl::optional_internal::optional_data_base.1436" = type { %"class.absl::optional_internal::optional_data_dtor_base.1437" }
%"class.absl::optional_internal::optional_data_dtor_base.1437" = type { i8, %union.anon.1438 }
%union.anon.1438 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1439 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2076", %"class.base::internal::flat_tree.2077" }
%"class.base::RefCountedThreadSafe.2076" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2077" = type { %"class.std::__1::vector.2078" }
%"class.std::__1::vector.2078" = type { %"class.std::__1::__vector_base.2079" }
%"class.std::__1::__vector_base.2079" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2080" }
%"class.std::__1::__compressed_pair.2080" = type { %"struct.std::__1::__compressed_pair_elem.2081" }
%"struct.std::__1::__compressed_pair_elem.2081" = type { i32* }
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1441", %class.scoped_refptr.1451, %class.scoped_refptr.1452, %"struct.blink::CacheControlHeader", %"class.absl::optional.266", %"class.absl::optional.1453", %"class.absl::optional.1453", %"class.absl::optional.1453", i64, %"class.blink::KURL", %"class.WTF::Vector.1458", %"class.WTF::String", %"class.WTF::Vector.237", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1429", %"class.WTF::Vector.237", %"class.blink::KURL", %"class.absl::optional.1463" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1441" = type { %"class.absl::optional_internal::optional_data.1442" }
%"class.absl::optional_internal::optional_data.1442" = type { %"class.absl::optional_internal::optional_data_base.1443" }
%"class.absl::optional_internal::optional_data_base.1443" = type { %"class.absl::optional_internal::optional_data_dtor_base.1444" }
%"class.absl::optional_internal::optional_data_dtor_base.1444" = type { i8, %union.anon.1445 }
%union.anon.1445 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.237", %"class.WTF::String", i64, i64, %"class.WTF::Vector.896", %"class.WTF::Vector.1446" }
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1446" = type { %"class.WTF::VectorBuffer.1447" }
%"class.WTF::VectorBuffer.1447" = type { %"class.WTF::VectorBufferBase.1448" }
%"class.WTF::VectorBufferBase.1448" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1451 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1452 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1453" = type { %"class.absl::optional_internal::optional_data.1454" }
%"class.absl::optional_internal::optional_data.1454" = type { %"class.absl::optional_internal::optional_data_base.1455" }
%"class.absl::optional_internal::optional_data_base.1455" = type { %"class.absl::optional_internal::optional_data_dtor_base.1456" }
%"class.absl::optional_internal::optional_data_dtor_base.1456" = type { i8, %union.anon.1457 }
%union.anon.1457 = type { %"class.base::Time" }
%"class.WTF::Vector.1458" = type { %"class.WTF::VectorBuffer.1459" }
%"class.WTF::VectorBuffer.1459" = type { %"class.WTF::VectorBufferBase.1460" }
%"class.WTF::VectorBufferBase.1460" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1463" = type { %"class.absl::optional_internal::optional_data.1464" }
%"class.absl::optional_internal::optional_data.1464" = type { %"class.absl::optional_internal::optional_data_base.1465" }
%"class.absl::optional_internal::optional_data_base.1465" = type { %"class.absl::optional_internal::optional_data_dtor_base.1466" }
%"class.absl::optional_internal::optional_data_dtor_base.1466" = type { i8, %union.anon.1467 }
%union.anon.1467 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1494 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1495", i64, %"class.WTF::Vector", %"class.WTF::Vector.1497" }
%"class.WTF::RefCounted.1495" = type { %"class.base::RefCounted.1496" }
%"class.base::RefCounted.1496" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.1497" = type { %"class.WTF::VectorBuffer.1498" }
%"class.WTF::VectorBuffer.1498" = type { %"class.WTF::VectorBufferBase.1499" }
%"class.WTF::VectorBufferBase.1499" = type { %"class.std::__1::unique_ptr.1500"*, i32, i32 }
%"class.std::__1::unique_ptr.1500" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1503" }
%"class.std::__1::__tree.1503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1504", %"class.std::__1::__compressed_pair.1508" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::HeapHashMap.1512" = type { %"class.WTF::HashMap.1515" }
%"class.WTF::HashMap.1515" = type { %"class.WTF::HashTable.1516" }
%"class.WTF::HashTable.1516" = type <{ %"struct.WTF::KeyValuePair.1518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1518" = type opaque
%"class.blink::HeapVector.1519" = type { %"class.WTF::Vector.1522" }
%"class.WTF::Vector.1522" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { %"class.blink::Member.1525"*, i32, i32 }
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1529" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1530", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.707, %"class.base::WeakPtrFactory.708" }
%"class.base::WeakPtrFactory.708" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1530" = type { %"class.blink::MemberBase.486" }
%"class.blink::HeapHashMap.1531" = type { %"class.WTF::HashMap.1534" }
%"class.WTF::HashMap.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"struct.WTF::KeyValuePair.1537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1537" = type opaque
%"class.WTF::Vector.1538" = type { %"class.WTF::VectorBuffer.1539" }
%"class.WTF::VectorBuffer.1539" = type { %"class.WTF::VectorBufferBase.1540" }
%"class.WTF::VectorBufferBase.1540" = type { %class.scoped_refptr.1541*, i32, i32 }
%class.scoped_refptr.1541 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1544" = type { %"class.WTF::HashSet.1547" }
%"class.WTF::HashSet.1547" = type { %"class.WTF::HashTable.1548" }
%"class.WTF::HashTable.1548" = type <{ %"class.blink::Member.1492"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.WTF::HashSet.1553"* }
%"class.WTF::HashSet.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1344 }
%class.scoped_refptr.1344 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1560" }
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1564" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member", %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::KURL"* }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.417", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.419, %"class.WTF::Vector.438", %"class.WTF::Vector.438", %"class.blink::Member.50", %"class.blink::Member.443", %"class.blink::HeapHashSet.447", %"class.blink::Member", %"class.WTF::HashSet.454", %"class.WTF::TextPosition", %"class.blink::Member.458", %"class.blink::HeapVector.460", %"class.blink::Member.467" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.419 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.420", %"class.WTF::Vector.422" }
%"class.WTF::RefCounted.420" = type { %"class.base::RefCounted.421" }
%"class.base::RefCounted.421" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"class.std::__1::unique_ptr.425"*, i32, i32 }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.428", %"class.WTF::String" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.445" }
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.447" = type { %"class.WTF::HashSet.450" }
%"class.WTF::HashSet.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"class.blink::WeakMember.453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.453" = type { %"class.blink::MemberBase.53" }
%"class.WTF::HashSet.454" = type { %"class.WTF::HashTable.455" }
%"class.WTF::HashTable.455" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.419, %"class.blink::Member.415", %"class.blink::Member.443" }
%"class.blink::HeapVector.460" = type { %"class.WTF::Vector.463" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::Member.443"*, i32, i32 }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.503 }
%class.scoped_refptr.503 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.507 }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.711" }
%"class.blink::HeapHashMap.711" = type { %"class.WTF::HashMap.714" }
%"class.WTF::HashMap.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.720" = type { %"class.WTF::HashSet.723" }
%"class.WTF::HashSet.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"class.blink::WeakMember.726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.726" = type opaque
%"class.blink::HeapHashSet.727" = type { %"class.WTF::HashSet.730" }
%"class.WTF::HashSet.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"class.blink::WeakMember.733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.733" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member", i32, i32, i32, %"class.blink::Member.415", %"class.blink::Member.740", %"class.blink::Member.768", %"class.blink::HeapHashMap.770", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.777", %"class.blink::HeapHashSet.777", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.783", %"class.blink::Member.797", %"class.blink::Member.827", %"class.blink::Member.829", %"class.blink::Member.835", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1001", %"class.blink::Member.1007", %"class.blink::HeapHashMap.1009", %"class.blink::HeapHashMap.1016", %"class.std::__1::unique_ptr.1023", i32, %"class.blink::HeapVector.1029", %"class.blink::HeapVector.1029", %"class.blink::HeapVector.753", %"class.blink::HeapHashSet.1037", %"class.blink::HeapHashMap.1044", %"class.blink::Member.1051", %"class.blink::HeapHashMap.1053", %class.scoped_refptr.1060, %class.scoped_refptr.1061, %"class.blink::Member.965", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1062", %"class.blink::Member.368" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.52", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.744", %"class.blink::HeapVector.753", i8 }>
%"class.blink::HeapVector.744" = type { %"class.WTF::Vector.747" }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749" }
%"class.WTF::VectorBufferBase.749" = type { %"class.blink::Member.750"*, i32, i32 }
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::StyleSheet"* }
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.764", %"class.blink::Member.766", %"class.blink::Member.766", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.764" = type <{ %"class.blink::Member.766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.50", %"class.blink::Member.766", %"class.blink::Member.766" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.770" = type { %"class.WTF::HashMap.773" }
%"class.WTF::HashMap.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type opaque
%"class.blink::HeapHashSet.777" = type { %"class.WTF::HashSet.780" }
%"class.WTF::HashSet.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"class.blink::Member.52"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.787", %"class.blink::Member.789" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.793", %"class.blink::Member.795" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1259", %"class.blink::Member.789", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1259" = type { %"class.WTF::Vector.1262" }
%"class.WTF::Vector.1262" = type { %"class.WTF::VectorBuffer.1263" }
%"class.WTF::VectorBuffer.1263" = type { %"class.WTF::VectorBufferBase.1264" }
%"class.WTF::VectorBufferBase.1264" = type { %"class.blink::Member.795"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1266, i32, %"class.absl::optional.1267", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.261" }>
%class.sk_sp.1266 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1267" = type { %"class.absl::optional_internal::optional_data.1268" }
%"class.absl::optional_internal::optional_data.1268" = type { %"class.absl::optional_internal::optional_data_base.1269" }
%"class.absl::optional_internal::optional_data_base.1269" = type { %"class.absl::optional_internal::optional_data_dtor_base.1270" }
%"class.absl::optional_internal::optional_data_dtor_base.1270" = type { i8, %union.anon.1271 }
%union.anon.1271 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member", %class.scoped_refptr.808, %"class.blink::SelectorFilter", %"class.blink::Member.768", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.801" }
%"class.blink::HeapHashMap.801" = type { %"class.WTF::HashMap.804" }
%"class.WTF::HashMap.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"struct.WTF::KeyValuePair.807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.807" = type opaque
%class.scoped_refptr.808 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.809", %"class.std::__1::unique_ptr.821" }
%"class.blink::HeapVector.809" = type { %"class.WTF::Vector.812" }
%"class.WTF::Vector.812" = type { %"class.WTF::VectorBuffer.813" }
%"class.WTF::VectorBuffer.813" = type { %"class.WTF::VectorBufferBase.814" }
%"class.WTF::VectorBufferBase.814" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.368", %"class.WTF::Vector.815" }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817", [16 x i8] }
%"class.WTF::VectorBufferBase.817" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.833", i8, [7 x i8] }>
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.857", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.839", %"class.WTF::HashMap.839", %"class.WTF::HashMap.839", %"class.WTF::HashMap.844", %class.scoped_refptr.849, %class.scoped_refptr.856, %class.scoped_refptr.855, %"class.WTF::Vector.438", %"class.WTF::Vector.438", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ %"struct.WTF::KeyValuePair.843"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.843" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2085 }
%class.scoped_refptr.2085 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.850", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.852", %"union.blink::InvalidationSet::Backing.853", %"union.blink::InvalidationSet::Backing.854", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.850" = type { %"class.base::RefCounted.851" }
%"class.base::RefCounted.851" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.852" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.853" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.854" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type opaque
%class.scoped_refptr.849 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.855, %class.scoped_refptr.855 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.850", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.852", %"union.blink::InvalidationSet::Backing.853", %"union.blink::InvalidationSet::Backing.854", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.856 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.855 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.861", %"class.blink::HeapHashMap.861", %"class.blink::HeapHashMap.861", %"class.blink::HeapHashMap.861", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::HeapVector.868", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.908", %"class.blink::HeapVector.916", %"class.blink::HeapVector.924", %"class.blink::HeapVector.941", %"class.blink::HeapVector.949", %"class.blink::HeapVector.957", %"class.blink::HeapVector.970", %"class.WTF::Vector.977", i32, %"class.blink::Member.983" }
%"class.blink::HeapHashMap.861" = type { %"class.WTF::HashMap.864" }
%"class.WTF::HashMap.864" = type { %"class.WTF::HashTable.865" }
%"class.WTF::HashTable.865" = type <{ %"struct.WTF::KeyValuePair.867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.867" = type { %"class.WTF::AtomicString", %"class.blink::Member.2099" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::HeapVector.868"* }
%"class.blink::HeapVector.868" = type { %"class.WTF::Vector.871" }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::Member.874"*, i32, i32 }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.878", i64, [4 x i32] }
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.379", %"class.blink::Member.903" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.908" = type { %"class.WTF::Vector.911" }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"class.blink::Member.914"*, i32, i32 }
%"class.blink::Member.914" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.379", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.916" = type { %"class.WTF::Vector.919" }
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.920" }
%"class.WTF::VectorBuffer.920" = type { %"class.WTF::VectorBufferBase.921" }
%"class.WTF::VectorBufferBase.921" = type { %"class.blink::Member.922"*, i32, i32 }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.379" }
%"class.blink::HeapVector.924" = type { %"class.WTF::Vector.927" }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.blink::Member.930"*, i32, i32 }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.932", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.932" = type { %"class.WTF::Vector.935" }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.blink::Member.938"*, i32, i32 }
%"class.blink::Member.938" = type opaque
%"class.blink::HeapVector.941" = type { %"class.WTF::Vector.944" }
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"class.blink::Member.947"*, i32, i32 }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.379" }
%"class.blink::HeapVector.949" = type { %"class.WTF::Vector.952" }
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.953" }
%"class.WTF::VectorBuffer.953" = type { %"class.WTF::VectorBufferBase.954" }
%"class.WTF::VectorBufferBase.954" = type { %"class.blink::Member.955"*, i32, i32 }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", i32, [4 x i8] }>
%"class.blink::HeapVector.957" = type { %"class.WTF::Vector.960" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"class.blink::Member.963"*, i32, i32 }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965" }
%"class.blink::HeapVector.970" = type { %"class.WTF::Vector.973" }
%"class.WTF::Vector.973" = type { %"class.WTF::VectorBuffer.974" }
%"class.WTF::VectorBuffer.974" = type { %"class.WTF::VectorBufferBase.975" }
%"class.WTF::VectorBufferBase.975" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.878", i32, i32 }
%"class.WTF::Vector.977" = type { %"class.WTF::VectorBuffer.978" }
%"class.WTF::VectorBuffer.978" = type { %"class.WTF::VectorBufferBase.979" }
%"class.WTF::VectorBufferBase.979" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.980, i8, [7 x i8] }>
%class.scoped_refptr.980 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.987", %"class.blink::HeapHashMap.987", %"class.blink::HeapHashMap.987", %"class.blink::HeapHashMap.987" }
%"class.blink::HeapHashMap.987" = type { %"class.WTF::HashMap.990" }
%"class.WTF::HashMap.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"struct.WTF::KeyValuePair.993"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.993" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.994" }
%"class.blink::HeapHashMap.994" = type { %"class.WTF::HashMap.997" }
%"class.WTF::HashMap.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"struct.WTF::KeyValuePair.1000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1000" = type { %"class.blink::Member.46", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2086", %"class.WTF::Vector.2086" }
%"class.WTF::Vector.2086" = type { %"class.WTF::VectorBuffer.2087" }
%"class.WTF::VectorBuffer.2087" = type { %"class.WTF::VectorBufferBase.2088" }
%"class.WTF::VectorBufferBase.2088" = type { %class.scoped_refptr.2085*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.50", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1001" = type { %"class.WTF::HashSet.1004" }
%"class.WTF::HashSet.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"class.blink::Member.368"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1009" = type { %"class.WTF::HashMap.1012" }
%"class.WTF::HashMap.1012" = type { %"class.WTF::HashTable.1013" }
%"class.WTF::HashTable.1013" = type <{ %"struct.WTF::KeyValuePair.1015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1015" = type opaque
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1029" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"struct.std::__1::pair.1035"*, i32, i32 }
%"struct.std::__1::pair.1035" = type opaque
%"class.blink::HeapVector.753" = type { %"class.WTF::Vector.756" }
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { %"struct.std::__1::pair.759"*, i32, i32 }
%"struct.std::__1::pair.759" = type opaque
%"class.blink::HeapHashSet.1037" = type { %"class.WTF::HashSet.1040" }
%"class.WTF::HashSet.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"class.blink::WeakMember.1043"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1043" = type { %"class.blink::MemberBase.416" }
%"class.blink::HeapHashMap.1044" = type { %"class.WTF::HashMap.1047" }
%"class.WTF::HashMap.1047" = type { %"class.WTF::HashTable.1048" }
%"class.WTF::HashTable.1048" = type <{ %"struct.WTF::KeyValuePair.1050"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1050" = type { %"class.WTF::AtomicString", %"class.blink::Member.930" }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1053" = type { %"class.WTF::HashMap.1056" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%class.scoped_refptr.1060 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1061 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1062" = type { %"class.WTF::HashSet.1065" }
%"class.WTF::HashSet.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ %"class.blink::Member.1068"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1068" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1075" = type { %"class.WTF::HashMap.1078" }
%"class.WTF::HashMap.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"struct.WTF::KeyValuePair.1081"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1081" = type opaque
%"class.WTF::Vector.1082" = type { %"class.WTF::VectorBuffer.1083" }
%"class.WTF::VectorBuffer.1083" = type { %"class.WTF::VectorBufferBase.1084" }
%"class.WTF::VectorBufferBase.1084" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.373" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.377", %"class.blink::Member.379", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.377" = type { %"class.WTF::SingleThreadedBitField.378" }
%"class.WTF::SingleThreadedBitField.378" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.384", %"class.WTF::AtomicString", %"class.WTF::Vector.386" }
%"class.WTF::RefCounted.384" = type { %"class.base::RefCounted.385" }
%"class.base::RefCounted.385" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1093" = type { %"class.WTF::Vector.1096" }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %"class.blink::Member.109"*, i32, i32 }
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type { %struct._xmlDoc* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDict = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1106" = type { %"class.WTF::HashSet.1109" }
%"class.WTF::HashSet.1109" = type { %"class.WTF::HashTable.1110" }
%"class.WTF::HashTable.1110" = type <{ %"class.blink::WeakMember.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1112" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1113", i32, [4 x i8] }>
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %"struct.std::__1::pair.1116"*, i32, i32 }
%"struct.std::__1::pair.1116" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.391" = type { %"class.WTF::Vector.394" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::Member.368"*, i32, i32 }
%"class.blink::HeapVector.1132" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::Member.1138"*, i32, i32 }
%"class.blink::Member.1138" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1150" = type { %"class.WTF::HashTable.1151" }
%"class.WTF::HashTable.1151" = type <{ %"struct.WTF::KeyValuePair.1154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1154" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.113", { i64, i64 } }
%"class.blink::WeakMember.113" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashSet.1163" = type { %"class.WTF::HashSet.1166" }
%"class.WTF::HashSet.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"class.blink::Member.1169"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1169" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1200" = type { %"class.WTF::VectorBuffer.1201" }
%"class.WTF::VectorBuffer.1201" = type { %"class.WTF::VectorBufferBase.1202" }
%"class.WTF::VectorBufferBase.1202" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1205" = type { %"class.WTF::HashMap.1208" }
%"class.WTF::HashMap.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"struct.WTF::KeyValuePair.1211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1211" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type opaque
%"class.blink::HeapObserverSet.1231" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1232" }
%"class.blink::HeapHashSet.1232" = type { %"class.WTF::HashSet.1235" }
%"class.WTF::HashSet.1235" = type { %"class.WTF::HashTable.1236" }
%"class.WTF::HashTable.1236" = type <{ %"class.blink::WeakMember.1238"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1238" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.1248", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1255", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1248" = type { %"class.WTF::HashSet.1251" }
%"class.WTF::HashSet.1251" = type { %"class.WTF::HashTable.1252" }
%"class.WTF::HashTable.1252" = type <{ %"class.blink::Member.1254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1254" = type opaque
%"class.blink::HeapTaskRunnerTimer.1255" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1256", { i64, i64 } }
%"class.blink::WeakMember.1256" = type { %"class.blink::MemberBase.1242" }
%"class.blink::WeakMember.1243" = type { %"class.blink::MemberBase.51" }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2276, %"class.mojo::PendingRemote.2277" }
%class.scoped_refptr.2276 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.2277" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.261" }
%"class.blink::XMLDocumentParser" = type { %"class.blink::ScriptableDocumentParser", %"class.blink::XMLParserScriptRunnerHost", %"class.blink::SegmentedString", %class.scoped_refptr.29, %"class.WTF::Deque.30", %"class.std::__1::unique_ptr.35", %"class.WTF::Vector.41", %"class.blink::Member.46", %"class.blink::HeapVector", %"class.blink::Member.64", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::XMLErrors", %"class.blink::Member", %"class.blink::Member.101", %"class.WTF::TextPosition", i8, %"class.WTF::AtomicString", %"class.WTF::HashMap", %"class.blink::SegmentedString" }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.23", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.7", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.14" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type opaque
%"class.blink::XMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.29 = type { %"class.blink::XMLParserContext"* }
%"class.blink::XMLParserContext" = type { %"class.WTF::RefCounted", %struct._xmlParserCtxt* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%struct._xmlParserCtxt = type { %struct._xmlSAXHandler*, i8*, %struct._xmlDoc*, i32, i32, i8*, i8*, i32, i32, %struct._xmlParserInput*, i32, i32, %struct._xmlParserInput**, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlParserNodeInfoSeq, i32, i32, i32, i32, i32, i32, %struct._xmlValidCtxt, i32, i32, i8*, i8*, i32, i32, i8**, i64, i64, i32, i32, i32, i8*, i8*, i8*, i32*, i32, i32, i32*, i32, %struct._xmlParserInput*, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, %struct._xmlDict*, i8**, i32, i32, i8*, i8*, i8*, i32, i32, i32, i8**, i32*, %struct._xmlStartTag*, %struct._xmlHashTable*, %struct._xmlHashTable*, i32, i32, i32, i32, %struct._xmlNode*, i32, %struct._xmlAttr*, %struct._xmlError, i32, i64, i64, %struct._xmlParserNodeInfo*, i32, i32, %struct._xmlParserNodeInfo*, i32, i64 }
%struct._xmlSAXHandler = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32, i8*, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)*, void (i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlError*)* }
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlParserNodeInfoSeq = type { i64, i64, %struct._xmlParserNodeInfo* }
%struct._xmlValidCtxt = type { i8*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlDoc*, i32, %struct._xmlValidState*, i32, i32, %struct._xmlValidState*, i8*, i8* }
%struct._xmlValidState = type opaque
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlStartTag = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlParserNodeInfo = type { %struct._xmlNode*, i64, i64, i64, i64 }
%"class.WTF::Deque.30" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::XMLDocumentParser::PendingCallback, std::__1::default_delete<blink::XMLDocumentParser::PendingCallback> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::XMLDocumentParser::PendingCallback, std::__1::default_delete<blink::XMLDocumentParser::PendingCallback> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.std::__1::unique_ptr.35"*, i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::XMLDocumentParser::PendingCallback"* }
%"class.blink::XMLDocumentParser::PendingCallback" = type { i32 (...)**, %"class.WTF::TextPosition" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { i8*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.60" }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::Text"* }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.67", %"class.WTF::String", %"class.std::__1::unique_ptr.69" }
%"class.WTF::RefCounted.67" = type { %"class.base::RefCounted.68" }
%"class.base::RefCounted.68" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.WTF::Vector.84", i8, i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.WTF::Vector.41"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.43", [32 x i8] }
%"class.blink::XMLErrors" = type { %"class.blink::Member", i32, %"class.WTF::TextPosition", [4 x i8], %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.91, i32, i8, i8, [2 x i8] }>
%union.anon.91 = type { %"class.WTF::Vector.92" }
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.43", [16 x i8] }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::XMLParserScriptRunner"* }
%"class.blink::XMLParserScriptRunner" = type { %"class.blink::PendingScriptClient", %"class.blink::Member.105", %"class.blink::Member.116" }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.109", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.111", %"class.blink::WeakMember.113", %"class.blink::WeakMember.114", i8, [7 x i8] }>
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::WeakMember.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::XMLParserScriptRunnerHost"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1567", %"class.blink::Member.1572", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1574", i8, i32, %"class.blink::Color", %"class.absl::optional.1577", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1582", %"class.blink::Member.1584", %"class.blink::Member.1584", %"class.std::__1::unique_ptr.1587", i32, [4 x i8], %"class.WTF::HashSet.1590", %"class.blink::Member.1597", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1599", %"class.blink::HeapHashSet.1606", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1614", i8, %"class.blink::Member.1620", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1632", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1646", i8, %"class.std::__1::unique_ptr.1652", %"class.std::__1::unique_ptr.1769", %"class.WTF::Vector.1775", i32, %class.scoped_refptr.1780, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1781", %"class.blink::Member.1783", %"class.blink::Member.1785", %"class.blink::HeapHashSet.1787", %"class.blink::HeapHashSet.1794", %"class.std::__1::unique_ptr.1801", %"class.std::__1::unique_ptr.1807", %"class.WTF::Vector.478" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %class.scoped_refptr.1571*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1571 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1876", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1884", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1898", %"class.blink::FrameLoader", %"class.blink::Member.1915", %"class.blink::Member.368", %"class.blink::Member.1916", %"class.blink::Member.1918", %"class.blink::Member.1920", %"class.blink::Member.1922", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1924", %class.scoped_refptr.1926, %"class.blink::Member.1927", %"class.blink::Member.1929", %"class.blink::Member.1931", %"class.blink::Member.1933", %"class.blink::Member.1935", %"class.blink::Member.1937", %"class.blink::Member.1939", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1941", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1944", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1950", %"class.std::__1::unique_ptr.1951", %"class.absl::optional.1429", i32, [4 x i8], %"class.std::__1::unique_ptr.1957", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1965", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1970", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1975", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1978", %"class.blink::Member.1980", %"class.blink::Member.1982", %"class.blink::Member.1984", %"class.mojo::StructPtr.1987", %"class.blink::Member.1995", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1997", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1844", %"class.blink::Member.1846", %"class.blink::Member.1848", i8, i32, i8, i32, %"class.blink::Member.1850", %"class.blink::Member.1852", %"class.blink::FrameLifecycle", %"class.blink::Member.1842", %"class.blink::Member.1842", %"class.blink::Member.1842", %"class.blink::Member.1842", %"class.blink::Member.1842", %"class.blink::Member.1842", %"class.blink::Member.1572", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1862", i8, %"class.base::UnguessableToken", %"class.absl::optional.1864", %"class.absl::optional.1429", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1842", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1842", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1854" }
%"class.std::__1::vector.1854" = type { %"class.std::__1::__vector_base.1855" }
%"class.std::__1::__vector_base.1855" = type { %"struct.std::__1::pair.1856"*, %"struct.std::__1::pair.1856"*, %"class.std::__1::__compressed_pair.1857" }
%"struct.std::__1::pair.1856" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1857" = type { %"struct.std::__1::__compressed_pair_elem.1858" }
%"struct.std::__1::__compressed_pair_elem.1858" = type { %"struct.std::__1::pair.1856"* }
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1864" = type { %"class.absl::optional_internal::optional_data.1865" }
%"class.absl::optional_internal::optional_data.1865" = type { %"class.absl::optional_internal::optional_data_base.1866" }
%"class.absl::optional_internal::optional_data_base.1866" = type { %"class.absl::optional_internal::optional_data_dtor_base.1867" }
%"class.absl::optional_internal::optional_data_dtor_base.1867" = type { i8, %union.anon.1868 }
%union.anon.1868 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1869" }
%"class.blink::HeapHashSet.1869" = type { %"class.WTF::HashSet.1872" }
%"class.WTF::HashSet.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"class.blink::WeakMember.1875"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1875" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1876" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1877" }
%"class.blink::HeapHashMap.1877" = type { %"class.WTF::HashMap.1880" }
%"class.WTF::HashMap.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1887", %"class.base::WeakPtrFactory.1892" }
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1891" = type opaque
%"class.base::WeakPtrFactory.1892" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1896" }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2103" }
%"class.blink::WeakMember.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2105", i64, %"class.std::__1::map.2106", i8*, i64, %"class.base::WeakPtrFactory.2115" }
%"class.base::RepeatingCallback.2105" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2106" = type { %"class.std::__1::__tree.2107" }
%"class.std::__1::__tree.2107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2108", %"class.std::__1::__compressed_pair.2112" }
%"class.std::__1::__compressed_pair.2108" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.2112" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.2115" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1898" = type { %"class.WTF::HashSet.1901" }
%"class.WTF::HashSet.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"class.blink::WeakMember.1904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1904" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1572", %"class.blink::Member.1905", %"class.blink::Member.1907", %"class.std::__1::unique_ptr.1909", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1553" }
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1915" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1926 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1931" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1933" = type { %"class.blink::MemberBase.1934" }
%"class.blink::MemberBase.1934" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1941" = type { %"class.blink::Member.1942" }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2211" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2118, %"class.std::__1::unique_ptr.257", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.276, i32 }>
%class.scoped_refptr.2118 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.276, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2177", %"class.absl::optional.2182", %"class.absl::optional.2135", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2202", i8, [7 x i8], %class.scoped_refptr.276, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.297" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.285", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.276, %"class.std::__1::unique_ptr.2119", %"class.absl::optional.2129", %"struct.std::__1::atomic.701", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2135", %"class.std::__1::unique_ptr.2140", i8, i64, %class.scoped_refptr.2174, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2175", %"class.base::WeakPtrFactory.2176" }
%"class.std::__1::unique_ptr.2119" = type { %"class.std::__1::__compressed_pair.2120" }
%"class.std::__1::__compressed_pair.2120" = type { %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.276, i8, %"class.mojo::ScopedHandleBase.2122", %class.scoped_refptr.2123, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2124", i8*, %"class.base::WeakPtrFactory.2125" }
%"class.mojo::ScopedHandleBase.2122" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2123 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2124" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2129" = type { %"class.absl::optional_internal::optional_data.2130" }
%"class.absl::optional_internal::optional_data.2130" = type { %"class.absl::optional_internal::optional_data_base.2131" }
%"class.absl::optional_internal::optional_data_base.2131" = type { %"class.absl::optional_internal::optional_data_dtor_base.2132" }
%"class.absl::optional_internal::optional_data_dtor_base.2132" = type { i8, %union.anon.2133 }
%union.anon.2133 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2134", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2134" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2140" = type { %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2143", i8, i64, %class.scoped_refptr.2144, %class.scoped_refptr.2169 }
%"class.base::RepeatingCallback.2143" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2144 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2145", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2147", %"class.std::__1::map.2158", i8, [7 x i8] }>
%"class.base::RefCounted.2145" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2146 }
%class.scoped_refptr.2146 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2147" = type { %"class.std::__1::__tree.2148" }
%"class.std::__1::__tree.2148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2149", %"class.std::__1::__compressed_pair.2153" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.2153" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2158" = type { %"class.std::__1::__tree.2159" }
%"class.std::__1::__tree.2159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2160", %"class.std::__1::__compressed_pair.2164" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2169 = type { %"class.base::RefCountedData.2170"* }
%"class.base::RefCountedData.2170" = type opaque
%class.scoped_refptr.2174 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2175" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2177" = type { %"class.absl::optional_internal::optional_data.2178" }
%"class.absl::optional_internal::optional_data.2178" = type { %"class.absl::optional_internal::optional_data_base.2179" }
%"class.absl::optional_internal::optional_data_base.2179" = type { %"class.absl::optional_internal::optional_data_dtor_base.2180" }
%"class.absl::optional_internal::optional_data_dtor_base.2180" = type { i8, %union.anon.2181 }
%union.anon.2181 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2182" = type { %"class.absl::optional_internal::optional_data.2183" }
%"class.absl::optional_internal::optional_data.2183" = type { %"class.absl::optional_internal::optional_data_base.2184" }
%"class.absl::optional_internal::optional_data_base.2184" = type { %"class.absl::optional_internal::optional_data_dtor_base.2185" }
%"class.absl::optional_internal::optional_data_dtor_base.2185" = type { i8, [7 x i8], %union.anon.2186 }
%union.anon.2186 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2135" = type { %"class.absl::optional_internal::optional_data.2136" }
%"class.absl::optional_internal::optional_data.2136" = type { %"class.absl::optional_internal::optional_data_base.2137" }
%"class.absl::optional_internal::optional_data_base.2137" = type { %"class.absl::optional_internal::optional_data_dtor_base.2138" }
%"class.absl::optional_internal::optional_data_dtor_base.2138" = type { i8, %union.anon.2139 }
%union.anon.2139 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2187 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2187 = type { %"class.std::__1::map.2190" }
%"class.std::__1::map.2190" = type { %"class.std::__1::__tree.2191" }
%"class.std::__1::__tree.2191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2192", %"class.std::__1::__compressed_pair.2196" }
%"class.std::__1::__compressed_pair.2192" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2201"*, i64 }
%"class.std::__1::unique_ptr.2201" = type opaque
%"class.std::__1::map.2202" = type { %"class.std::__1::__tree.2203" }
%"class.std::__1::__tree.2203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2204", %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2204" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2211" = type { %"class.std::__1::__compressed_pair.2212" }
%"class.std::__1::__compressed_pair.2212" = type { %"struct.std::__1::__compressed_pair_elem.2213" }
%"struct.std::__1::__compressed_pair_elem.2213" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1944" = type { %"class.std::__1::__compressed_pair.1945" }
%"class.std::__1::__compressed_pair.1945" = type { %"struct.std::__1::__compressed_pair_elem.1946" }
%"struct.std::__1::__compressed_pair_elem.1946" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.1950" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1963" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2219" }
%"class.mojo::AssociatedRemote.2219" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2220" }
%"class.mojo::internal::AssociatedInterfacePtrState.2220" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2221" }
%"class.std::__1::unique_ptr.2221" = type { %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1965" = type { %"class.blink::Member.1966" }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2229" }
%"class.mojo::AssociatedRemote.2229" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2230" }
%"class.mojo::internal::AssociatedInterfacePtrState.2230" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2231" }
%"class.std::__1::unique_ptr.2231" = type { %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1968" }
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2239", %"class.blink::Member.1572", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2239" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2240" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.257" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2240" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1970" = type { %"class.blink::Member.1971" }
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2243", %"class.blink::Member.1572", %"class.mojo::AssociatedReceiver.2244" }
%"class.blink::ThreadState::PrefinalizerRegistration.2243" = type { i8 }
%"class.mojo::AssociatedReceiver.2244" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2245" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2245" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1973" }
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2248", %"class.blink::Member.1572", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2248" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2118, %"class.std::__1::unique_ptr.257", %"class.base::WeakPtrFactory.2249" }
%"class.base::WeakPtrFactory.2249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1975" = type { %"class.blink::Member.1976" }
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2252", %"class.blink::Member.1572", %"class.mojo::AssociatedReceiver.2253" }
%"class.blink::ThreadState::PrefinalizerRegistration.2252" = type { i8 }
%"class.mojo::AssociatedReceiver.2253" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2254" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2254" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::HeapHashMap.1986"* }
%"class.blink::HeapHashMap.1986" = type opaque
%"class.mojo::StructPtr.1987" = type { %"class.std::__1::unique_ptr.1988" }
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1991", %"class.mojo::InlinedStructPtr.1350" }
%"class.mojo::InlinedStructPtr.1991" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1997" = type { %"class.absl::optional_internal::optional_data.1998" }
%"class.absl::optional_internal::optional_data.1998" = type { %"class.absl::optional_internal::optional_data_base.1999" }
%"class.absl::optional_internal::optional_data_base.1999" = type { %"class.absl::optional_internal::optional_data_dtor_base.2000" }
%"class.absl::optional_internal::optional_data_dtor_base.2000" = type { i8, %union.anon.2001 }
%union.anon.2001 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1574" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1575", { i64, i64 } }
%"class.blink::WeakMember.1575" = type { %"class.blink::MemberBase.1576" }
%"class.absl::optional.1577" = type { %"class.absl::optional_internal::optional_data.1578" }
%"class.absl::optional_internal::optional_data.1578" = type { %"class.absl::optional_internal::optional_data_base.1579" }
%"class.absl::optional_internal::optional_data_base.1579" = type { %"class.absl::optional_internal::optional_data_dtor_base.1580" }
%"class.absl::optional_internal::optional_data_dtor_base.1580" = type { i8, %union.anon.1581 }
%union.anon.1581 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::HeapHashSet.1586"* }
%"class.blink::HeapHashSet.1586" = type opaque
%"class.std::__1::unique_ptr.1587" = type { %"class.std::__1::__compressed_pair.1588" }
%"class.std::__1::__compressed_pair.1588" = type { %"struct.std::__1::__compressed_pair_elem.1589" }
%"struct.std::__1::__compressed_pair_elem.1589" = type { %"class.WTF::HashSet.1590"* }
%"class.WTF::HashSet.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1599" = type { %"class.WTF::HashSet.1602" }
%"class.WTF::HashSet.1602" = type { %"class.WTF::HashTable.1603" }
%"class.WTF::HashTable.1603" = type <{ %"class.blink::Member.1605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1605" = type opaque
%"class.blink::HeapHashSet.1606" = type { %"class.WTF::HashSet.1609" }
%"class.WTF::HashSet.1609" = type { %"class.WTF::HashTable.1610" }
%"class.WTF::HashTable.1610" = type <{ %"class.blink::Member.1612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1836", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1838", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.368" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1838" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1839", { i64, i64 } }
%"class.blink::WeakMember.1839" = type { %"class.blink::MemberBase.1613" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1624", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1624" = type { %"class.WTF::HashTable.1625" }
%"class.WTF::HashTable.1625" = type <{ %"struct.WTF::KeyValuePair.1627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1627" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1628", i32, i32 }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630" }
%"class.WTF::VectorBufferBase.1630" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1632" = type { %"class.WTF::LinkedHashSet.1635" }
%"class.WTF::LinkedHashSet.1635" = type { %"class.WTF::HashMap.1636", %"class.WTF::VectorBackedLinkedList.1640" }
%"class.WTF::HashMap.1636" = type { %"class.WTF::HashTable.1637" }
%"class.WTF::HashTable.1637" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.WTF::VectorBackedLinkedList.1640" = type { %"class.WTF::Vector.1641", i32, i32 }
%"class.WTF::Vector.1641" = type { %"class.WTF::VectorBuffer.1642" }
%"class.WTF::VectorBuffer.1642" = type { %"class.WTF::VectorBufferBase.1643" }
%"class.WTF::VectorBufferBase.1643" = type { %"class.WTF::VectorBackedLinkedListNode.1644"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1644" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1652" = type { %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1654" }
%"struct.std::__1::__compressed_pair_elem.1654" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1655, %class.scoped_refptr.1655, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1746", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1751", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1655 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1656", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1663" }
%"class.WTF::RefCounted.1656" = type { %"class.base::RefCounted.1657" }
%"class.base::RefCounted.1657" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1658", i32, [4 x i8] }>
%"class.WTF::Vector.1658" = type { %"class.WTF::VectorBuffer.1659" }
%"class.WTF::VectorBuffer.1659" = type { %"class.WTF::VectorBufferBase.1660" }
%"class.WTF::VectorBufferBase.1660" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1669", %"class.std::__1::unique_ptr.1718", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1666, %class.scoped_refptr.1667, %class.scoped_refptr.1668 }
%class.scoped_refptr.1666 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1682", i8, i8, %class.scoped_refptr.1666, i32, i32 }
%"class.WTF::RefCounted.1682" = type { %"class.base::RefCounted.1683" }
%"class.base::RefCounted.1683" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1667 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1831" }
%"class.blink::PaintPropertyNode.1831" = type { %"class.WTF::RefCounted.1832", i8, i8, %class.scoped_refptr.1667, i32, i32 }
%"class.WTF::RefCounted.1832" = type { %"class.base::RefCounted.1833" }
%"class.base::RefCounted.1833" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1668 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1828" }
%"class.blink::PaintPropertyNode.1828" = type { %"class.WTF::RefCounted.1829", i8, i8, %class.scoped_refptr.1668, i32, i32 }
%"class.WTF::RefCounted.1829" = type { %"class.base::RefCounted.1830" }
%"class.base::RefCounted.1830" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1672", %"class.WTF::Vector.1677", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1672" = type { %"class.WTF::VectorBuffer.1673" }
%"class.WTF::VectorBuffer.1673" = type { %"class.WTF::VectorBufferBase.1674" }
%"class.WTF::VectorBufferBase.1674" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1677" = type { %"class.WTF::VectorBuffer.1678" }
%"class.WTF::VectorBuffer.1678" = type { %"class.WTF::VectorBufferBase.1679" }
%"class.WTF::VectorBufferBase.1679" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1697" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1690, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1691", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1684" }
%"class.std::__1::unique_ptr.1684" = type { %"class.std::__1::__compressed_pair.1685" }
%"class.std::__1::__compressed_pair.1685" = type { %"struct.std::__1::__compressed_pair_elem.1686" }
%"struct.std::__1::__compressed_pair_elem.1686" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1690 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1813", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1813" = type { %"class.WTF::RefCounted.1814", i8, i8, %class.scoped_refptr.1690, i32, i32 }
%"class.WTF::RefCounted.1814" = type { %"class.base::RefCounted.1815" }
%"class.base::RefCounted.1815" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1816" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1821", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1821" = type { %"class.std::__1::__vector_base.1822" }
%"class.std::__1::__vector_base.1822" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1823" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1700", %"class.std::__1::unique_ptr.1706", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1721", %"class.absl::optional.1721" }
%"class.absl::optional.1721" = type { %"class.absl::optional_internal::optional_data.1722" }
%"class.absl::optional_internal::optional_data.1722" = type { %"class.absl::optional_internal::optional_data_base.1723" }
%"class.absl::optional_internal::optional_data_base.1723" = type { %"class.absl::optional_internal::optional_data_dtor_base.1724" }
%"class.absl::optional_internal::optional_data_dtor_base.1724" = type { i8, [3 x i8], %union.anon.1725 }
%union.anon.1725 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1663"*, %"class.absl::optional.1731", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1736", %"class.WTF::Vector.1741" }
%"class.WTF::Vector.1736" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738", [128 x i8] }
%"class.WTF::VectorBufferBase.1738" = type { i32*, i32, i32 }
%"class.WTF::Vector.1741" = type { %"class.WTF::VectorBuffer.1742" }
%"class.WTF::VectorBuffer.1742" = type { %"class.WTF::VectorBufferBase.1743", [128 x i8] }
%"class.WTF::VectorBufferBase.1743" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748" }
%"class.WTF::VectorBufferBase.1748" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1751" = type { %"class.WTF::HashTable.1752" }
%"class.WTF::HashTable.1752" = type <{ %"struct.WTF::KeyValuePair.1755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1755" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1756", %"class.WTF::Vector.1761" }
%"class.WTF::HashMap.1756" = type { %"class.WTF::HashTable.1757" }
%"class.WTF::HashTable.1757" = type <{ %"struct.WTF::KeyValuePair.1760"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1760" = type opaque
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.WTF::VectorBufferBase.1763" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1780 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1787" = type { %"class.WTF::HashSet.1790" }
%"class.WTF::HashSet.1790" = type { %"class.WTF::HashTable.1791" }
%"class.WTF::HashTable.1791" = type <{ %"class.blink::WeakMember.1793"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1793" = type opaque
%"class.blink::HeapHashSet.1794" = type { %"class.WTF::HashSet.1797" }
%"class.WTF::HashSet.1797" = type { %"class.WTF::HashTable.1798" }
%"class.WTF::HashTable.1798" = type <{ %"class.blink::WeakMember.1800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1800" = type opaque
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1453", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::XMLDocumentParserScope" = type { %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.379", %"class.WTF::Vector.2325" }
%"class.WTF::Vector.2325" = type { %"class.WTF::VectorBuffer.2326" }
%"class.WTF::VectorBuffer.2326" = type { %"class.WTF::VectorBufferBase.2010", [64 x i8] }
%"class.WTF::VectorBufferBase.2010" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::ConditionalDestructor.31" = type { i8 }
%"class.WTF::StringAppend.2336" = type { %"class.WTF::StringAppend.2016", %"class.WTF::String" }
%"class.WTF::StringAppend.2016" = type { %"class.WTF::AtomicString", i8* }
%"class.WTF::StringAppend.2330" = type { %"class.WTF::String", %"class.WTF::AtomicString" }
%"class.WTF::Vector.2008" = type { %"class.WTF::VectorBuffer.2009" }
%"class.WTF::VectorBuffer.2009" = type { %"class.WTF::VectorBufferBase.2010" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2013" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2013" = type { %"class.v8::TracedReference.2014" }
%"class.v8::TracedReference.2014" = type { %"class.v8::BasicTracedReference.2015" }
%"class.v8::BasicTracedReference.2015" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2016", %"class.WTF::AtomicString" }
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::PendingStartElementNSCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i32, i8**, i32, i32, i8** }
%"struct.blink::xmlSAX2Namespace" = type { i8*, i8* }
%"struct.blink::xmlSAX2Attributes" = type { i8*, i8*, i8*, i8*, i8* }
%"class.blink::HTMLTemplateElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.2017", i32, [4 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.2017" = type { %"class.blink::MemberBase.2018" }
%"class.blink::MemberBase.2018" = type { %"class.blink::TemplateContentDocumentFragment"* }
%"class.blink::TemplateContentDocumentFragment" = type opaque
%"class.blink::HTMLHtmlElement" = type { %"class.blink::HTMLElement" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.blink::ProcessingInstruction" = type { %"class.blink::CharacterData", %"class.blink::ResourceClient.base", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.750", %"class.blink::StyleEngineContext", i8, i8, i8, i8, %"class.blink::Member.2044" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2043", [7 x i8], %"class.blink::Member.1525", i8 }>
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::ProcessingInstruction::DetachableEventListener"* }
%"class.blink::ProcessingInstruction::DetachableEventListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CDATASection" = type { %"class.blink::Text" }
%"class.blink::Comment" = type { %"class.blink::CharacterData" }
%"class.blink::PendingInternalSubsetCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::HashMap.2064" = type { %"class.WTF::HashTable.2065" }
%"class.WTF::HashTable.2065" = type <{ %"struct.WTF::KeyValuePair.2068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2068" = type { %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::AttributeParseState" = type { %"class.WTF::HashMap.2064", i8, [7 x i8] }
%"class.WTF::StringAppend.2069" = type { %"class.WTF::StringAppend.2070", i8* }
%"class.WTF::StringAppend.2070" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.2342" = type { %"class.WTF::StringAppend.2343", %"class.WTF::String" }
%"class.WTF::StringAppend.2343" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter.2304" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::RawResource" = type <{ %"class.blink::Resource", %class.scoped_refptr.2278, %"class.blink::Member.2281", i8, [7 x i8] }>
%class.scoped_refptr.2278 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.2280", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.2279" }
%"class.base::RefCountedThreadSafe.2279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.2280" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.blink::BufferingBytesConsumer" = type opaque
%"class.blink::RawResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::SharedBufferReader" = type { %class.scoped_refptr.2275, i64 }
%class.scoped_refptr.2275 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::StringAppend.2284" = type { %"class.WTF::StringAppend.2069", %"class.WTF::String" }
%"class.WTF::StringAppend.2283" = type { %"class.WTF::StringAppend.2284", i8* }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2287", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2299", %"class.WTF::Vector.2300" }
%"class.std::__1::unique_ptr.2287" = type { %"class.std::__1::__compressed_pair.2288" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.2289" }
%"struct.std::__1::__compressed_pair_elem.2289" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2290", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2299" = type { %"class.blink::MemberBase.1573" }
%"class.WTF::Vector.2300" = type { %"class.WTF::VectorBuffer.2301" }
%"class.WTF::VectorBuffer.2301" = type { %"class.WTF::VectorBufferBase.1738" }
%"class.WTF::StringTypeAdapter.2306" = type { %"class.WTF::StringTypeAdapter.2307" }
%"class.WTF::StringTypeAdapter.2307" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2331" = type { %"class.WTF::StringTypeAdapter.2307" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.2387" = type { i8 }
%"class.blink::PendingEndElementNSCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::TextPosition" }
%"class.blink::PendingCharactersCallback" = type <{ %"class.blink::XMLDocumentParser::PendingCallback", i8*, i32, [4 x i8] }>
%"class.blink::PendingErrorCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", i32, i8* }
%"class.blink::PendingProcessingInstructionCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::PendingCDATABlockCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::String" }
%"class.blink::PendingCommentCallback" = type { %"class.blink::XMLDocumentParser::PendingCallback", %"class.WTF::String" }

$_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK5blink14DocumentParser18NameInHeapSnapshotEv = comdat any

$_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv = comdat any

$_ZN5blink14DocumentParser17HasInsertionPointEv = comdat any

$_ZN5blink17XMLDocumentParser6insertERKN3WTF6StringE = comdat any

$_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv = comdat any

$_ZN5blink14DocumentParser18SetHasAppendedDataEv = comdat any

$_ZN5blink14DocumentParser24DocumentElementAvailableEv = comdat any

$_ZNK5blink17XMLDocumentParser10WellFormedEv = comdat any

$_ZNK5blink24ScriptableDocumentParser17IsExecutingScriptEv = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_ = comdat any

$_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_ = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ContainerNodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21XMLParserScriptRunnerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21XMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21XMLParserScriptRunnerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21XMLParserScriptRunnerEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink29PendingStartElementNSCallbackC2ERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_NS1_12TextPositionE = comdat any

$_ZN5blink29PendingStartElementNSCallbackD2Ev = comdat any

$_ZN5blink29PendingStartElementNSCallbackD0Ev = comdat any

$_ZN5blink29PendingStartElementNSCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink17XMLDocumentParser15PendingCallbackD2Ev = comdat any

$_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs = comdat any

$_ZN5blink27PendingEndElementNSCallbackD0Ev = comdat any

$_ZN5blink27PendingEndElementNSCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink25PendingCharactersCallbackD2Ev = comdat any

$_ZN5blink25PendingCharactersCallbackD0Ev = comdat any

$_ZN5blink25PendingCharactersCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink20PendingErrorCallbackD2Ev = comdat any

$_ZN5blink20PendingErrorCallbackD0Ev = comdat any

$_ZN5blink20PendingErrorCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink36PendingProcessingInstructionCallbackD2Ev = comdat any

$_ZN5blink36PendingProcessingInstructionCallbackD0Ev = comdat any

$_ZN5blink36PendingProcessingInstructionCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink25PendingCDATABlockCallbackD2Ev = comdat any

$_ZN5blink25PendingCDATABlockCallbackD0Ev = comdat any

$_ZN5blink25PendingCDATABlockCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink22PendingCommentCallbackD2Ev = comdat any

$_ZN5blink22PendingCommentCallbackD0Ev = comdat any

$_ZN5blink22PendingCommentCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink29PendingInternalSubsetCallbackC2ERKN3WTF6StringES4_S4_NS1_12TextPositionE = comdat any

$_ZN5blink29PendingInternalSubsetCallbackD2Ev = comdat any

$_ZN5blink29PendingInternalSubsetCallbackD0Ev = comdat any

$_ZN5blink29PendingInternalSubsetCallback4CallEPNS_17XMLDocumentParserE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJPNS_8DocumentERKN3WTF6StringES9_S9_EEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink29PendingStartElementNSCallbackE = comdat any

$_ZTVN5blink27PendingEndElementNSCallbackE = comdat any

$_ZTVN5blink25PendingCharactersCallbackE = comdat any

$_ZTVN5blink20PendingErrorCallbackE = comdat any

$_ZTVN5blink36PendingProcessingInstructionCallbackE = comdat any

$_ZTVN5blink25PendingCDATABlockCallbackE = comdat any

$_ZTVN5blink22PendingCommentCallbackE = comdat any

$_ZTVN5blink29PendingInternalSubsetCallbackE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [24 x i8] c"Excessive node nesting.\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [23 x i8] c"XMLDocumentParser::end\00", align 1
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [4 x i8] c"xml\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"xmlns\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"http://www.w3.org/XML/1998/namespace\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@_ZTVN5blink17XMLDocumentParserE = hidden unnamed_addr constant { [31 x i8*], [6 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::DocumentParser"*)* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParserD2Ev to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZNK5blink17XMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::ScriptableDocumentParser"* (%"class.blink::ScriptableDocumentParser"*)* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv to i8*), i8* bitcast (i1 (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser17HasInsertionPointEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink17XMLDocumentParser6insertERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DecodedDataDocumentParser"*, i8*, i64)* @_ZN5blink25DecodedDataDocumentParser11AppendBytesEPKcm to i8*), i8* bitcast (i1 (%"class.blink::DecodedDataDocumentParser"*)* @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv to i8*), i8* bitcast (void (%"class.blink::DecodedDataDocumentParser"*, %"class.blink::TextResourceDecoder"*)* @_ZN5blink25DecodedDataDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (%"class.blink::TextResourceDecoder"* (%"class.blink::DecodedDataDocumentParser"*)* @_ZN5blink25DecodedDataDocumentParser7DecoderEv to i8*), i8* bitcast (void (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser18SetHasAppendedDataEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink17XMLDocumentParser6AppendERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser6FinishEv to i8*), i8* bitcast (void (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser20PrepareToStopParsingEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser11StopParsingEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser6DetachEv to i8*), i8* bitcast (void (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser24DocumentElementAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::XMLDocumentParser"*)* @_ZNK5blink17XMLDocumentParser10WellFormedEv to i8*), i8* bitcast (void (%"class.blink::DecodedDataDocumentParser"*)* @_ZN5blink25DecodedDataDocumentParser5FlushEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptableDocumentParser"*)* @_ZNK5blink24ScriptableDocumentParser17IsExecutingScriptEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser33ExecuteScriptsWaitingForResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::XMLDocumentParser"*)* @_ZNK5blink17XMLDocumentParser19IsWaitingForScriptsEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser37DidAddPendingParserBlockingStylesheetEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptableDocumentParser"*)* @_ZNK5blink24ScriptableDocumentParser21IsParsingAtLineNumberEv to i8*), i8* bitcast (i32 (%"class.blink::XMLDocumentParser"*)* @_ZNK5blink17XMLDocumentParser10LineNumberEv to i8*), i8* bitcast (i64 (%"class.blink::XMLDocumentParser"*)* @_ZNK5blink17XMLDocumentParser15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParser20NotifyScriptExecutedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::XMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink17XMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZThn80_N5blink17XMLDocumentParserD1Ev to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZThn80_N5blink17XMLDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::XMLDocumentParser"*)* @_ZThn80_N5blink17XMLDocumentParser20NotifyScriptExecutedEv to i8*)] }, align 8
@_ZN3WTF12g_xmlns_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"XMLDocumentParser::doWrite\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"Encoding error\00", align 1
@_ZN5blink10html_names7kIsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"XMLDocumentParser::appendFragmentSource\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"<?xml version=\221.0\22?><attrs \00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c" />\00", align 1
@_ZZN5blinkL27InitializeLibXMLIfNecessaryEvE8did_init = internal unnamed_addr global i1 false, align 1
@_ZN5blinkL22g_libxml_loader_threadE = internal unnamed_addr global i32 0, align 4
@_ZN5blink22XMLDocumentParserScope17current_document_E = external local_unnamed_addr global %"class.blink::Document"*, align 8
@_ZN5blinkL19g_global_descriptorE = internal global i32 0, align 4
@_ZN5blink26fetch_initiator_type_names4kXmlE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blinkL8OpenFuncEPKc.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1428 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1439 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1483", i8, i8, [6 x i8], %class.scoped_refptr.507, %class.scoped_refptr.1488, %class.scoped_refptr.1490 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1428 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1439 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1428 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1439 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.3" { %"class.std::__1::__compressed_pair.4" { %"struct.std::__1::__compressed_pair_elem.5" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.150" { %"struct.std::__1::__compressed_pair_elem.151" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.152 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.150" { %"struct.std::__1::__compressed_pair_elem.151" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.152 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.145 } } } } { { { { i8, [7 x i8], %union.anon.145 } } } { { { i8, [7 x i8], %union.anon.145 } } { { i8, [7 x i8], %union.anon.145 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.145 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.146 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.146 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.146 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.1393" { %"class.WTF::HashTable.1394" <{ %"struct.WTF::KeyValuePair"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.1397 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.3" { %"class.std::__1::__compressed_pair.4" { %"struct.std::__1::__compressed_pair_elem.5" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.3" { %"class.std::__1::__compressed_pair.4" { %"struct.std::__1::__compressed_pair_elem.5" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.1419" { %"class.WTF::VectorBuffer.1420" { %"class.WTF::VectorBufferBase.1421" { %class.scoped_refptr.146* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.146*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.237" { %"class.WTF::VectorBuffer.238" { %"class.WTF::VectorBufferBase.239" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } } { { { { i8, [7 x i8], %union.anon.1428 } } } { { { i8, [7 x i8], %union.anon.1428 } } { { i8, [7 x i8], %union.anon.1428 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1428 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.270 } } } } { { { { i8, [7 x i8], %union.anon.270 } } } { { { i8, [7 x i8], %union.anon.270 } } { { i8, [7 x i8], %union.anon.270 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.270 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } { { { { i8, [7 x i8], %union.anon.270 } } } { { { i8, [7 x i8], %union.anon.270 } } { { i8, [7 x i8], %union.anon.270 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.270 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.1433 } } } } { { { { i8, [7 x i8], %union.anon.1433 } } } { { { i8, [7 x i8], %union.anon.1433 } } { { i8, [7 x i8], %union.anon.1433 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1433 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } } { { { { i8, [7 x i8], %union.anon.1428 } } } { { { i8, [7 x i8], %union.anon.1428 } } { { i8, [7 x i8], %union.anon.1428 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1428 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.1428 } } } } { { { { i8, [7 x i8], %union.anon.1428 } } } { { { i8, [7 x i8], %union.anon.1428 } } { { i8, [7 x i8], %union.anon.1428 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1428 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.1433 } } } } { { { { i8, [7 x i8], %union.anon.1433 } } } { { { i8, [7 x i8], %union.anon.1433 } } { { i8, [7 x i8], %union.anon.1433 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1433 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.3" { %"class.std::__1::__compressed_pair.4" { %"struct.std::__1::__compressed_pair_elem.5" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.1439 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.2276 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.2277" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.3" { %"class.std::__1::__compressed_pair.4" { %"struct.std::__1::__compressed_pair_elem.5" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1483", i8, i8, [6 x i8], %class.scoped_refptr.507, %class.scoped_refptr.1488, %class.scoped_refptr.1490 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.1483" { %"class.WTF::HashTable.1484" <{ %"struct.std::__1::pair.1487"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1487"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.507 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.1488 { %"class.base::RefCountedData.1489"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1489"*) }, %class.scoped_refptr.1490 { %"class.base::RefCountedData.1491"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1491"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@.str.13 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/core/xml/parser/xml_document_parser.cc\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"!IsLibxmlDefaultCatalogFile(url)\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"http://www.w3.org/TR/xhtml\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"http://www.w3.org/Graphics/SVG\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"Unsafe attempt to load URL \00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c" from frame with URL \00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c". Domains, protocols and ports must match.\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"file:///etc/xml/catalog\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"file:///\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"/etc/catalog\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.27 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.28 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF18g_xmlns_with_colonE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11xmlns_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.29 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.32 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase16is_xslt_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blinkL28g_shared_xhtml_entity_resultE = internal global [9 x i8] zeroinitializer, align 1
@_ZZN5blinkL17SharedXHTMLEntityEvE6entity = internal global %struct._xmlEntity zeroinitializer, align 8
@.str.33 = private unnamed_addr constant [39 x i8] c"-//W3C//DTD XHTML 1.0 Transitional//EN\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"-//W3C//DTD XHTML 1.1//EN\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"-//W3C//DTD XHTML 1.0 Strict//EN\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"-//W3C//DTD XHTML 1.0 Frameset//EN\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"-//W3C//DTD XHTML Basic 1.0//EN\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN\00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c"-//W3C//DTD MathML 2.0//EN\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\00", align 1
@.str.42 = private unnamed_addr constant [38 x i8] c"-//WAPFORUM//DTD XHTML Mobile 1.1//EN\00", align 1
@.str.43 = private unnamed_addr constant [38 x i8] c"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"iso-8859-1\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"UTF-16LE\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SegmentedSubstringEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SegmentedSubstring]\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"attrs\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.49 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"DocumentParser\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.53 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.55 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ContainerNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ContainerNode>, WTF::VectorTraits<blink::Member<blink::ContainerNode> > >]\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DocumentParser]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21XMLParserScriptRunnerEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::XMLParserScriptRunner]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21XMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21XMLParserScriptRunnerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21XMLParserScriptRunnerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@_ZTVN5blink29PendingStartElementNSCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingStartElementNSCallback"*)* @_ZN5blink29PendingStartElementNSCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingStartElementNSCallback"*)* @_ZN5blink29PendingStartElementNSCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingStartElementNSCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink29PendingStartElementNSCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::XMLDocumentParser::PendingCallback, std::__1::default_delete<blink::XMLDocumentParser::PendingCallback> >]\00", align 1
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink27PendingEndElementNSCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::XMLDocumentParser::PendingCallback"*)* @_ZN5blink17XMLDocumentParser15PendingCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingEndElementNSCallback"*)* @_ZN5blink27PendingEndElementNSCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingEndElementNSCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink27PendingEndElementNSCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink25PendingCharactersCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingCharactersCallback"*)* @_ZN5blink25PendingCharactersCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingCharactersCallback"*)* @_ZN5blink25PendingCharactersCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingCharactersCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink25PendingCharactersCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink20PendingErrorCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingErrorCallback"*)* @_ZN5blink20PendingErrorCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingErrorCallback"*)* @_ZN5blink20PendingErrorCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingErrorCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink20PendingErrorCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink36PendingProcessingInstructionCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingProcessingInstructionCallback"*)* @_ZN5blink36PendingProcessingInstructionCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingProcessingInstructionCallback"*)* @_ZN5blink36PendingProcessingInstructionCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingProcessingInstructionCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink36PendingProcessingInstructionCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink25PendingCDATABlockCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingCDATABlockCallback"*)* @_ZN5blink25PendingCDATABlockCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingCDATABlockCallback"*)* @_ZN5blink25PendingCDATABlockCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingCDATABlockCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink25PendingCDATABlockCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink22PendingCommentCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingCommentCallback"*)* @_ZN5blink22PendingCommentCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingCommentCallback"*)* @_ZN5blink22PendingCommentCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingCommentCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink22PendingCommentCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZTVN5blink29PendingInternalSubsetCallbackE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PendingInternalSubsetCallback"*)* @_ZN5blink29PendingInternalSubsetCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::PendingInternalSubsetCallback"*)* @_ZN5blink29PendingInternalSubsetCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::PendingInternalSubsetCallback"*, %"class.blink::XMLDocumentParser"*)* @_ZN5blink29PendingInternalSubsetCallback4CallEPNS_17XMLDocumentParserE to i8*)] }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink17XMLDocumentParserC1ERNS_8DocumentEPNS_14LocalFrameViewE = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParser"*, %"class.blink::Document"*, %"class.blink::LocalFrameView"*), void (%"class.blink::XMLDocumentParser"*, %"class.blink::Document"*, %"class.blink::LocalFrameView"*)* @_ZN5blink17XMLDocumentParserC2ERNS_8DocumentEPNS_14LocalFrameViewE
@_ZN5blink17XMLDocumentParserC1EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32), void (%"class.blink::XMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32)* @_ZN5blink17XMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE
@_ZN5blink16XMLParserContextD1Ev = hidden unnamed_addr alias void (%"class.blink::XMLParserContext"*), void (%"class.blink::XMLParserContext"*)* @_ZN5blink16XMLParserContextD2Ev
@_ZN5blink17XMLDocumentParserD1Ev = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParser"*), void (%"class.blink::XMLDocumentParser"*)* @_ZN5blink17XMLDocumentParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser15PushCurrentNodeEPNS_13ContainerNodeE(%"class.blink::XMLDocumentParser"*, %"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %26, label %10, !prof !2

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %12, i64 %13
  %15 = bitcast %"class.blink::Member.46"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.46"* %14 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %10
  %21 = inttoptr i64 %16 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #15
  br label %23

23:                                               ; preds = %20, %10
  %24 = load i32, i32* %5, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %5, align 4
  br label %28

26:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.60"* %3, %"class.blink::Member.46"* dereferenceable(8) %4) #15
  %27 = bitcast %"class.blink::Member.46"* %4 to i64*
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i64* [ %15, %23 ], [ %27, %26 ]
  %30 = ptrtoint %"class.blink::ContainerNode"* %1 to i64
  store atomic i64 %30, i64* %29 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::ContainerNode"* %1 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #15
  br label %36

36:                                               ; preds = %28, %33
  %37 = load i32, i32* %5, align 4
  %38 = icmp ugt i32 %37, 5000
  br i1 %38, label %39, label %81

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %41 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %40, align 8
  %42 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %41, null
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %45 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %44, align 8
  %46 = icmp eq %"class.blink::XMLParserContext"* %45, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %45, i64 0, i32 1
  %49 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %48, align 8
  %50 = icmp eq %struct._xmlParserCtxt* %49, null
  br i1 %50, label %62, label %55

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %41, i64 0, i32 1, i32 0, i32 0
  %53 = bitcast i32* %52 to <2 x i32>*
  %54 = load <2 x i32>, <2 x i32>* %53, align 8
  br label %62

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %49, i64 0, i32 9
  %57 = load %struct._xmlParserInput*, %struct._xmlParserInput** %56, align 8
  %58 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %57, i64 0, i32 7
  %59 = bitcast i32* %58 to <2 x i32>*
  %60 = load <2 x i32>, <2 x i32>* %59, align 4
  %61 = add <2 x i32> %60, <i32 -1, i32 -1>
  br label %62

62:                                               ; preds = %47, %43, %51, %55
  %63 = phi <2 x i32> [ %54, %51 ], [ %61, %55 ], [ zeroinitializer, %43 ], [ zeroinitializer, %47 ]
  %64 = extractelement <2 x i32> %63, i32 1
  %65 = zext i32 %64 to i64
  %66 = shl nuw i64 %65, 32
  %67 = extractelement <2 x i32> %63, i32 0
  %68 = zext i32 %67 to i64
  %69 = or i64 %66, %68
  %70 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  tail call void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"* %70, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 %69) #15
  %71 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  store i8 1, i8* %71, align 1
  tail call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %70) #15
  %72 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %72) #15
  %73 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %74 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %73, align 8
  %75 = icmp eq %"class.blink::XMLParserContext"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %74, i64 0, i32 1
  %78 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %77, align 8
  %79 = icmp eq %struct._xmlParserCtxt* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %78) #15
  br label %81

81:                                               ; preds = %80, %76, %62, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser11HandleErrorENS_9XMLErrors9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLDocumentParser"*, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  tail call void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"* %5, i32 %1, i8* %2, i64 %3) #15
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  store i8 1, i8* %8, align 1
  %9 = icmp eq i32 %1, 2
  br i1 %9, label %10, label %20

10:                                               ; preds = %7
  tail call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %5) #15
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %11) #15
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %12, align 8
  %14 = icmp eq %"class.blink::XMLParserContext"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %13, i64 0, i32 1
  %17 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %16, align 8
  %18 = icmp eq %struct._xmlParserCtxt* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %17) #15
  br label %20

20:                                               ; preds = %19, %15, %10, %4, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink17XMLDocumentParser15GetTextPositionEv(%"class.blink::XMLDocumentParser"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %2, align 8
  %4 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %3, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %6, align 8
  %8 = icmp eq %"class.blink::XMLParserContext"* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %7, i64 0, i32 1
  %11 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %10, align 8
  %12 = icmp eq %struct._xmlParserCtxt* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %11, i64 0, i32 9
  %15 = load %struct._xmlParserInput*, %struct._xmlParserInput** %14, align 8
  %16 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %15, i64 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  br label %24

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %3, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %3, i64 0, i32 1, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  br label %35

24:                                               ; preds = %9, %13
  %25 = phi i32 [ %18, %13 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %7, i64 0, i32 1
  %27 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %26, align 8
  %28 = icmp eq %struct._xmlParserCtxt* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %27, i64 0, i32 9
  %31 = load %struct._xmlParserInput*, %struct._xmlParserInput** %30, align 8
  %32 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %31, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  br label %35

35:                                               ; preds = %5, %19, %24, %29
  %36 = phi i32 [ %21, %19 ], [ %25, %29 ], [ %25, %24 ], [ 0, %5 ]
  %37 = phi i32 [ %23, %19 ], [ %34, %29 ], [ 0, %24 ], [ 0, %5 ]
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %36 to i64
  %41 = or i64 %39, %40
  ret i64 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser14PopCurrentNodeEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = icmp eq %"class.blink::ContainerNode"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %7, i32 %10) #15
  %12 = bitcast %"class.blink::Member.46"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::Member.46"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %6
  %18 = inttoptr i64 %13 to i8*
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #15
  br label %20

20:                                               ; preds = %6, %17
  %21 = load i32, i32* %8, align 4
  %22 = add i32 %21, -1
  %23 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %23, align 8
  %25 = zext i32 %22 to i64
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %24, i64 %25
  %28 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %24, i64 %26
  %29 = bitcast %"class.blink::Member.46"* %27 to i8*
  %30 = ptrtoint %"class.blink::Member.46"* %28 to i64
  %31 = ptrtoint %"class.blink::Member.46"* %27 to i64
  %32 = sub i64 %30, %31
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #15
  store i32 %22, i32* %8, align 4
  br label %33

33:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser21ClearCurrentNodeStackEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %3 = bitcast %"class.blink::Member.46"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %5 = bitcast %"class.blink::Member.64"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.WTF::Vector.60"* %6 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = zext i32 %8 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %16, i64 %18) #15
  store i32 0, i32* %7, align 4
  %19 = load i8*, i8** %15, align 8
  %20 = bitcast %"class.WTF::Vector.60"* %6 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %11, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %19) #15
  br label %21

21:                                               ; preds = %14, %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser6AppendERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SegmentedString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::SegmentedString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 88, i1 false)
  %6 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 4
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %65, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #15
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %65, label %31

31:                                               ; preds = %12, %27
  %32 = phi %"class.WTF::StringImpl"* [ %29, %27 ], [ %9, %12 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %31
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  store i8 1, i8* %7, align 1
  %43 = icmp eq %"class.WTF::StringImpl"* %37, null
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %45 = bitcast %"class.WTF::StringImpl"* %44 to i8*
  %46 = select i1 %43, i8* null, i8* %45
  %47 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = zext i32 %34 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 -1
  %51 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* %50, i8** %51, align 8
  %52 = ptrtoint i8* %46 to i64
  br label %70

53:                                               ; preds = %36
  store i8 0, i8* %7, align 1
  %54 = icmp eq %"class.WTF::StringImpl"* %37, null
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %56 = bitcast %"class.WTF::StringImpl"* %55 to i16*
  %57 = select i1 %54, i16* null, i16* %56
  %58 = bitcast %"class.blink::SegmentedString"* %3 to i16**
  store i16* %57, i16** %58, align 8
  %59 = zext i32 %34 to i64
  %60 = getelementptr inbounds i16, i16* %57, i64 %59
  %61 = getelementptr inbounds i16, i16* %60, i64 -1
  %62 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  %63 = bitcast i8** %62 to i16**
  store i16* %61, i16** %63, align 8
  %64 = ptrtoint i16* %57 to i64
  br label %70

65:                                               ; preds = %2, %31, %27
  %66 = phi i1 [ false, %31 ], [ true, %27 ], [ true, %2 ]
  %67 = phi %"class.WTF::StringImpl"* [ %32, %31 ], [ null, %27 ], [ null, %2 ]
  store i8 1, i8* %7, align 1
  %68 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %68, align 8
  %69 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* null, i8** %69, align 8
  br label %70

70:                                               ; preds = %65, %53, %42
  %71 = phi i1 [ false, %42 ], [ false, %53 ], [ %66, %65 ]
  %72 = phi %"class.WTF::StringImpl"* [ %32, %42 ], [ %32, %53 ], [ %67, %65 ]
  %73 = phi i64 [ %52, %42 ], [ %64, %53 ], [ 0, %65 ]
  %74 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 1
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 2
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 3
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5
  %80 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 7
  %81 = bitcast %"class.WTF::Deque"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 25, i1 false) #15
  br i1 %71, label %87, label %82

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %70, %82
  %88 = phi i8 [ %86, %82 ], [ 1, %70 ]
  store i8 %88, i8* %80, align 1
  %89 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 13
  %90 = load i8, i8* %89, align 1, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 14
  %94 = load i8, i8* %93, align 4, !range !3
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %92, %87
  %97 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %97, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %3) #15
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp sgt i32 %100, 1
  br i1 %101, label %130, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %89, align 1, !range !3
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %130

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %107 = load i8, i8* %106, align 2, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %110, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %3) #15
  br label %130

111:                                              ; preds = %105
  %112 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #15
  %113 = call %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"* nonnull %3) #15
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  call void @_ZN5blink17XMLDocumentParser7DoWriteERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %115 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #15
  br label %129

129:                                              ; preds = %111, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #15
  br label %130

130:                                              ; preds = %98, %102, %129, %109
  %131 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %131, align 8
  %133 = icmp eq %"class.blink::SegmentedSubstring"* %132, null
  br i1 %133, label %146, label %134

134:                                              ; preds = %130
  %135 = bitcast %"class.blink::SegmentedSubstring"* %132 to i8*
  %136 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %144, label %141

141:                                              ; preds = %134
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %79) #15
  %142 = bitcast %"class.WTF::Deque"* %79 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %134
  %145 = phi i8* [ %143, %141 ], [ %135, %134 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #15
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %131, align 8
  br label %146

146:                                              ; preds = %144, %130
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #15
  br label %162

162:                                              ; preds = %146, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser7DoWriteERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !4

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %19, align 8
  %21 = icmp eq %"class.blink::XMLParserContext"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #15
  call void @_ZN5blink17XMLDocumentParser23InitializeParserContextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::XMLDocumentParser"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %28, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %32 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %19, align 8
  %33 = icmp eq %"class.blink::XMLParserContext"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %15, %31
  %35 = phi %"class.blink::XMLParserContext"* [ %32, %31 ], [ %20, %15 ]
  %36 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %35, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #15
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi i1 [ true, %31 ], [ false, %34 ]
  %39 = phi %"class.blink::XMLParserContext"* [ null, %31 ], [ %35, %34 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %118, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %118, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::XMLDocumentParserScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %50 = bitcast %"class.blink::XMLDocumentParserScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false)
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"* nonnull %5, %"class.blink::Document"* %51) #15
  %52 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 10
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = load i8, i8* %52, align 1, !range !3
  store i8 %57, i8* %52, align 1
  %59 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 1
  %60 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %59, align 8
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 1
  %65 = icmp ne i32 %64, 0
  %66 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %60, i64 0, i32 19
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %60, i64 0, i32 36
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %86, label %73

73:                                               ; preds = %69, %47
  br i1 %65, label %74, label %80

74:                                               ; preds = %73
  %75 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %60, i32 10) #15
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %79 = bitcast %"class.WTF::StringImpl"* %78 to i8*
  br i1 %77, label %96, label %91

80:                                               ; preds = %73
  %81 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %60, i32 2) #15
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %85 = bitcast %"class.WTF::StringImpl"* %84 to i8*
  br i1 %83, label %107, label %101

86:                                               ; preds = %69
  %87 = icmp eq %"class.WTF::StringImpl"* %61, null
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  %89 = bitcast %"class.WTF::StringImpl"* %88 to i8*
  br i1 %65, label %90, label %100

90:                                               ; preds = %86
  br i1 %87, label %96, label %91

91:                                               ; preds = %74, %90
  %92 = phi %"class.WTF::StringImpl"* [ %76, %74 ], [ %61, %90 ]
  %93 = phi i8* [ %79, %74 ], [ %89, %90 ]
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %74, %91, %90
  %97 = phi i8* [ %93, %91 ], [ null, %90 ], [ null, %74 ]
  %98 = phi i32 [ %95, %91 ], [ 0, %90 ], [ 0, %74 ]
  %99 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %60, i8* %97, i32 %98, i32 0) #15
  br label %111

100:                                              ; preds = %86
  br i1 %87, label %107, label %101

101:                                              ; preds = %80, %100
  %102 = phi %"class.WTF::StringImpl"* [ %82, %80 ], [ %61, %100 ]
  %103 = phi i8* [ %85, %80 ], [ %89, %100 ]
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = shl i32 %105, 1
  br label %107

107:                                              ; preds = %80, %101, %100
  %108 = phi i8* [ %103, %101 ], [ null, %100 ], [ null, %80 ]
  %109 = phi i32 [ %106, %101 ], [ 0, %100 ], [ 0, %80 ]
  %110 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %60, i8* %108, i32 %109, i32 0) #15
  br label %111

111:                                              ; preds = %96, %107
  %112 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp slt i32 %113, 2
  %115 = icmp eq i8* %52, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  store i8 %58, i8* %52, align 1
  br label %117

117:                                              ; preds = %111, %116
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #15
  br i1 %114, label %118, label %149

118:                                              ; preds = %37, %43, %117
  %119 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %120 = load %"class.blink::Document"*, %"class.blink::Document"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %120, i64 0, i32 95, i32 2
  %122 = load i8, i8* %121, align 1, !range !3
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %149, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 1
  %127 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %126, align 8
  %128 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %127, i64 0, i32 9
  %129 = load %struct._xmlParserInput*, %struct._xmlParserInput** %128, align 8
  %130 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %129, i64 0, i32 7
  %131 = load i32, i32* %130, align 4
  %132 = add nsw i32 %131, -1
  %133 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %129, i64 0, i32 8
  %134 = load i32, i32* %133, align 8
  %135 = add nsw i32 %134, -1
  %136 = zext i32 %135 to i64
  %137 = shl nuw i64 %136, 32
  %138 = zext i32 %132 to i64
  %139 = or i64 %137, %138
  %140 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"* %140, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 %139) #15
  %141 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  store i8 1, i8* %141, align 1
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %140) #15
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %125) #15
  %142 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %19, align 8
  %143 = icmp eq %"class.blink::XMLParserContext"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %124
  %145 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %142, i64 0, i32 1
  %146 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %145, align 8
  %147 = icmp eq %struct._xmlParserCtxt* %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %146) #15
  br label %149

149:                                              ; preds = %118, %148, %144, %124, %117
  br i1 %38, label %168, label %150

150:                                              ; preds = %149
  %151 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %151) #15
  %152 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %168

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %156, i64 2
  %158 = bitcast %"class.base::RefCounted"* %157 to %struct._xmlParserCtxt**
  %159 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %158, align 8
  %160 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %159, i64 0, i32 2
  %161 = load %struct._xmlDoc*, %struct._xmlDoc** %160, align 8
  %162 = icmp eq %struct._xmlDoc* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %155
  call void @xmlFreeDoc(%struct._xmlDoc* nonnull %161) #15
  %164 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %158, align 8
  br label %165

165:                                              ; preds = %163, %155
  %166 = phi %struct._xmlParserCtxt* [ %159, %155 ], [ %164, %163 ]
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %166) #15
  %167 = bitcast %"class.blink::XMLParserContext"* %39 to i8*
  call void @free(i8* %167) #15
  br label %168

168:                                              ; preds = %149, %150, %165
  %169 = icmp eq i8* %16, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %168
  %171 = load i8, i8* %16, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %17, i64 %18) #15
  br label %174

174:                                              ; preds = %168, %170, %173
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"*, i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser11StopParsingEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  tail call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %8) #15
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %9, align 8
  %11 = icmp eq %"class.blink::XMLParserContext"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %10, i64 0, i32 1
  %14 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %13, align 8
  %15 = icmp eq %struct._xmlParserCtxt* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %14) #15
  br label %17

17:                                               ; preds = %7, %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser26CreateLeafTextNodeIfNeededEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::Text"*, %"class.blink::Text"** %4, align 8
  %6 = icmp eq %"class.blink::Text"* %5, null
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #15
  %15 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %13, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %16 = ptrtoint %"class.blink::Text"* %15 to i64
  %17 = bitcast %"class.blink::Member.64"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %7
  %21 = bitcast %"class.blink::Text"* %15 to i8*
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #15
  br label %23

23:                                               ; preds = %7, %20
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %23, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %41 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %8, align 8
  %42 = load %"class.blink::Text"*, %"class.blink::Text"** %4, align 8
  %43 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %42, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* %43) #15
  br label %44

44:                                               ; preds = %1, %40
  ret void
}

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %52, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Text"*, %"class.blink::Text"** %8, align 8
  %10 = icmp eq %"class.blink::Text"* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %9, i64 0, i32 0
  %13 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %16, i64 %19) #15
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZN5blink13CharacterData16ParserAppendDataERKN3WTF6StringE(%"class.blink::CharacterData"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %2) #15
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #15
  br label %37

37:                                               ; preds = %11, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %38 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = load i32, i32* %17, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  br label %45

45:                                               ; preds = %44, %41
  %46 = load i8*, i8** %15, align 8
  %47 = bitcast %"class.WTF::Vector.41"* %14 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %38, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #15
  br label %48

48:                                               ; preds = %37, %45
  %49 = bitcast %"class.blink::Member.64"* %7 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  %50 = load i32, i32* %3, align 8
  %51 = icmp slt i32 %50, 2
  br label %52

52:                                               ; preds = %6, %1, %48
  %53 = phi i1 [ %51, %48 ], [ false, %1 ], [ true, %6 ]
  ret i1 %53
}

declare void @_ZN5blink13CharacterData16ParserAppendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser6DetachEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23
  %3 = getelementptr inbounds %"class.blink::Member.101", %"class.blink::Member.101"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %3, align 8
  %5 = icmp eq %"class.blink::XMLParserScriptRunner"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink21XMLParserScriptRunner6DetachEv(%"class.blink::XMLParserScriptRunner"* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.blink::Member.101"* %2 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %10 = bitcast %"class.blink::Member.46"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %12 = bitcast %"class.blink::Member.64"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.WTF::Vector.60"* %13 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = zext i32 %15 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %23, i64 %25) #15
  store i32 0, i32* %14, align 4
  %26 = load i8*, i8** %22, align 8
  %27 = bitcast %"class.WTF::Vector.60"* %13 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store i32 0, i32* %18, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %7, %17, %21
  %29 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser6DetachEv(%"class.blink::DocumentParser"* %29) #15
  ret void
}

declare void @_ZN5blink21XMLParserScriptRunner6DetachEv(%"class.blink::XMLParserScriptRunner"*) local_unnamed_addr #3

declare void @_ZN5blink14DocumentParser6DetachEv(%"class.blink::DocumentParser"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser3endEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !4

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  call void @_ZN5blink17XMLDocumentParser5DoEndEv(%"class.blink::XMLDocumentParser"* %0)
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %65, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %65

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  %28 = icmp sgt i32 %18, 1
  %29 = or i1 %28, %27
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %31) #15
  %32 = load i32, i32* %17, align 8
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %65, label %37

34:                                               ; preds = %24
  %35 = call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  %36 = load i32, i32* %17, align 8
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi i32 [ %32, %30 ], [ %36, %34 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZN5blink14DocumentParser20PrepareToStopParsingEv(%"class.blink::DocumentParser"* %16) #15
  br label %41

41:                                               ; preds = %40, %37
  %42 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  call void @_ZN5blink8Document13SetReadyStateENS0_18DocumentReadyStateE(%"class.blink::Document"* %43, i32 1) #15
  %44 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %45 = bitcast %"class.blink::Member.46"* %44 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  %46 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %47 = bitcast %"class.blink::Member.64"* %46 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %49 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.WTF::Vector.60"* %48 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = zext i32 %50 to i64
  %60 = shl nuw nsw i64 %59, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %58, i64 %60) #15
  store i32 0, i32* %49, align 4
  %61 = load i8*, i8** %57, align 8
  %62 = bitcast %"class.WTF::Vector.60"* %48 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store i32 0, i32* %53, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %61) #15
  br label %63

63:                                               ; preds = %41, %52, %56
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  call void @_ZN5blink8Document15FinishedParsingEv(%"class.blink::Document"* %64) #15
  br label %65

65:                                               ; preds = %30, %20, %12, %63
  %66 = icmp eq i8* %15, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* %15, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #15
  br label %71

71:                                               ; preds = %65, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser5DoEndEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %48, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.scoped_refptr.29, %class.scoped_refptr.29* %9, i64 0, i32 0
  %11 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %10, align 8
  %12 = icmp eq %"class.blink::XMLParserContext"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::XMLDocumentParserScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = bitcast %"class.blink::XMLDocumentParserScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"* nonnull %2, %"class.blink::Document"* %17) #15
  %18 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %19 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %18, align 8
  %20 = icmp eq %"class.blink::XMLParserContext"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %19, i64 0, i32 1
  %23 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %22, align 8
  br label %24

24:                                               ; preds = %13, %21
  %25 = phi %struct._xmlParserCtxt* [ %23, %21 ], [ null, %13 ]
  %26 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %25, i8* null, i32 0, i32 1) #15
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #15
  %27 = bitcast %class.scoped_refptr.29* %9 to i64*
  %28 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %10, align 8
  store i64 0, i64* %27, align 8
  %29 = icmp eq %"class.blink::XMLParserContext"* %28, null
  br i1 %29, label %48, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #15
  %32 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %28, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %36, i64 2
  %38 = bitcast %"class.base::RefCounted"* %37 to %struct._xmlParserCtxt**
  %39 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %38, align 8
  %40 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %39, i64 0, i32 2
  %41 = load %struct._xmlDoc*, %struct._xmlDoc** %40, align 8
  %42 = icmp eq %struct._xmlDoc* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %35
  call void @xmlFreeDoc(%struct._xmlDoc* nonnull %41) #15
  %44 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %38, align 8
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi %struct._xmlParserCtxt* [ %39, %35 ], [ %44, %43 ]
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %46) #15
  %47 = bitcast %"class.blink::XMLParserContext"* %28 to i8*
  call void @free(i8* %47) #15
  br label %48

48:                                               ; preds = %8, %45, %30, %24, %1
  %49 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %50 = load i8, i8* %49, align 1, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %88

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 12
  %54 = load i8, i8* %53, align 2, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %88

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 13
  %58 = load i8, i8* %57, align 1, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %88

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::Document"*, %"class.blink::Document"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %62, i64 0, i32 110
  %64 = load i8, i8* %63, align 1, !range !3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %88

66:                                               ; preds = %60
  %67 = call zeroext i1 @_ZN5blink12DocumentXSLT26HasTransformSourceDocumentERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %62) #15
  br i1 %67, label %88, label %68

68:                                               ; preds = %66
  %69 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %62) #15
  %70 = icmp eq %"class.blink::LocalFrame"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %68
  %72 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %62) #15
  %73 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %72, i64 0, i32 0
  %74 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %73) #15
  %75 = icmp eq %"class.blink::Page"* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %71
  %77 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %62) #15
  %78 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %77, i64 0, i32 0, i32 1
  %79 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %78) #15
  %80 = icmp eq %"class.blink::Frame"* %79, null
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %62, i64 0, i32 0, i32 0
  %83 = call zeroext i1 @_ZN5blink8SVGImage12IsInSVGImageEPKNS_4NodeE(%"class.blink::Node"* %82) #15
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %61, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %85, i64 0, i32 108
  store i8 1, i8* %86, align 1
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %61, align 8
  call void @_ZN5blink30TransformDocumentToXMLTreeViewERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %87) #15
  br label %120

88:                                               ; preds = %81, %76, %68, %71, %60, %66, %48, %52, %56
  %89 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 13
  %90 = load i8, i8* %89, align 1, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %94 = load %"class.blink::Document"*, %"class.blink::Document"** %93, align 8
  %95 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #15
  %96 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2
  %97 = call %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"* %96) #15
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %98, align 8
  %99 = load %"class.blink::Document"*, %"class.blink::Document"** %93, align 8
  %100 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %99, i64 0, i32 19, i32 4
  %101 = call %struct._xmlDoc* @_ZN5blink18XmlDocPtrForStringEPNS_8DocumentERKN3WTF6StringES5_(%"class.blink::Document"* %94, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %100)
  %102 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %116

116:                                              ; preds = %92, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #15
  %117 = load %"class.blink::Document"*, %"class.blink::Document"** %93, align 8
  %118 = call noalias i8* @malloc(i64 8) #15
  %119 = bitcast i8* %118 to %"class.blink::TransformSource"*
  call void @_ZN5blink15TransformSourceC1EP7_xmlDoc(%"class.blink::TransformSource"* %119, %struct._xmlDoc* %101) #15
  call void @_ZN5blink8Document18SetTransformSourceENSt3__110unique_ptrINS_15TransformSourceENS1_14default_deleteIS3_EEEE(%"class.blink::Document"* %117, %"class.blink::TransformSource"* %119) #15
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %4) #15
  br label %120

120:                                              ; preds = %88, %116, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser23InsertErrorMessageBlockEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  tail call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %2) #15
  ret void
}

declare void @_ZN5blink14DocumentParser20PrepareToStopParsingEv(%"class.blink::DocumentParser"*) unnamed_addr #3

declare void @_ZN5blink8Document13SetReadyStateENS0_18DocumentReadyStateE(%"class.blink::Document"*, i32) local_unnamed_addr #3

declare void @_ZN5blink8Document15FinishedParsingEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser6FinishEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink25DecodedDataDocumentParser5FlushEv(%"class.blink::DecodedDataDocumentParser"* %2) #15
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 18
  store i8 1, i8* %11, align 8
  br label %13

12:                                               ; preds = %6
  tail call void @_ZN5blink17XMLDocumentParser3endEv(%"class.blink::XMLDocumentParser"* %0)
  br label %13

13:                                               ; preds = %1, %12, %10
  ret void
}

declare void @_ZN5blink25DecodedDataDocumentParser5FlushEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #3

declare void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17XMLDocumentParser19IsWaitingForScriptsEv(%"class.blink::XMLDocumentParser"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23, i32 0, i32 0
  %3 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %2, align 8
  %4 = icmp eq %"class.blink::XMLParserScriptRunner"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLParserScriptRunner", %"class.blink::XMLParserScriptRunner"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %6, align 8
  %8 = icmp ne %"class.blink::PendingScript"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser12PauseParsingEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  store i8 1, i8* %6, align 2
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17XMLDocumentParser21ParseDocumentFragmentERKN3WTF6StringEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE(%"class.WTF::String"* dereferenceable(8), %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %78, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %78, label %12

12:                                               ; preds = %8
  %13 = icmp eq %"class.blink::Element"* %2, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %12
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %14
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %21, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %25, %14
  %33 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = tail call %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"* %37, %"class.WTF::String"* dereferenceable(8) %0) #15
  %39 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %38, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %33, %"class.blink::Node"* %39) #15
  br label %78

40:                                               ; preds = %12, %25
  %41 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64 504) #15
  %42 = bitcast i8* %41 to %"class.blink::XMLDocumentParser"*
  tail call void @_ZN5blink17XMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::XMLDocumentParser"* %42, %"class.blink::DocumentFragment"* %1, %"class.blink::Element"* %2, i32 %3) #15
  %43 = getelementptr inbounds i8, i8* %41, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  %47 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser20AppendFragmentSourceERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %42, %"class.WTF::String"* dereferenceable(8) %0)
  %48 = getelementptr inbounds i8, i8* %41, i64 360
  %49 = bitcast i8* %48 to %"class.blink::XMLParserScriptRunner"**
  %50 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %49, align 8
  %51 = icmp eq %"class.blink::XMLParserScriptRunner"* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %40
  tail call void @_ZN5blink21XMLParserScriptRunner6DetachEv(%"class.blink::XMLParserScriptRunner"* nonnull %50) #15
  br label %53

53:                                               ; preds = %52, %40
  %54 = bitcast i8* %48 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  %55 = getelementptr inbounds i8, i8* %41, i64 232
  %56 = bitcast i8* %55 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  %57 = getelementptr inbounds i8, i8* %41, i64 256
  %58 = bitcast i8* %57 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  %59 = getelementptr inbounds i8, i8* %41, i64 240
  %60 = getelementptr inbounds i8, i8* %41, i64 252
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds i8, i8* %41, i64 248
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %64
  %70 = bitcast i8* %59 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = zext i32 %62 to i64
  %73 = shl nuw nsw i64 %72, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %71, i64 %73) #15
  store i32 0, i32* %61, align 4
  %74 = load i8*, i8** %70, align 8
  %75 = bitcast i8* %59 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %66, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %74) #15
  br label %76

76:                                               ; preds = %53, %64, %69
  %77 = bitcast i8* %41 to %"class.blink::DocumentParser"*
  tail call void @_ZN5blink14DocumentParser6DetachEv(%"class.blink::DocumentParser"* %77) #15
  br label %78

78:                                               ; preds = %4, %8, %76, %32
  %79 = phi i1 [ true, %32 ], [ %47, %76 ], [ true, %8 ], [ true, %4 ]
  ret i1 %79
}

declare %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17XMLDocumentParser20AppendFragmentSourceERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %1, i32 0) #15
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = load i64, i64* %7, align 8
  %14 = icmp ugt i64 %13, 2147483647
  %15 = and i1 %12, %14
  br i1 %15, label %85, label %16

16:                                               ; preds = %2
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20, !prof !4

20:                                               ; preds = %16
  %21 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %22 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %24 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %24, i64* %23, align 8
  %25 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %21, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  br label %26

26:                                               ; preds = %16, %20
  %27 = phi i64 [ -6148914691236517206, %16 ], [ %25, %20 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %16 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), %20 ]
  %29 = phi i8* [ null, %16 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %20 ]
  call void @_ZN5blink17XMLDocumentParser23InitializeParserContextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::XMLDocumentParser"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %30 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %31 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %30, align 8
  %32 = icmp eq %"class.blink::XMLParserContext"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %31, i64 0, i32 1
  %35 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %34, align 8
  br label %36

36:                                               ; preds = %26, %33
  %37 = phi %struct._xmlParserCtxt* [ %35, %33 ], [ null, %26 ]
  call void @xmlParseContent(%struct._xmlParserCtxt* %37) #15
  %38 = call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0) #15
  %39 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %30, align 8
  %40 = icmp eq %"class.blink::XMLParserContext"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %39, i64 0, i32 1
  %43 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %42, align 8
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi %struct._xmlParserCtxt* [ %43, %41 ], [ null, %36 ]
  %46 = call i64 @xmlByteConsumed(%struct._xmlParserCtxt* %45) #15
  %47 = icmp eq i64 %46, -1
  br i1 %47, label %75, label %48

48:                                               ; preds = %44
  %49 = load i8, i8* %10, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %7, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = icmp eq i64 %46, %53
  br i1 %54, label %55, label %75

55:                                               ; preds = %48
  %56 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %30, align 8
  %57 = icmp eq %"class.blink::XMLParserContext"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %56, i64 0, i32 1
  %60 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %59, align 8
  br label %61

61:                                               ; preds = %55, %58
  %62 = phi %struct._xmlParserCtxt* [ %60, %58 ], [ null, %55 ]
  %63 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %61
  br i1 %57, label %71, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %56, i64 0, i32 1
  %69 = bitcast %struct._xmlParserCtxt** %68 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %66, %67
  %72 = phi i8* [ %70, %67 ], [ null, %66 ]
  %73 = call %struct._xmlError* @xmlCtxtGetLastError(i8* %72) #15
  %74 = icmp eq %struct._xmlError* %73, null
  br label %75

75:                                               ; preds = %71, %61, %44, %48
  %76 = phi i1 [ false, %48 ], [ false, %44 ], [ true, %61 ], [ %74, %71 ]
  %77 = icmp eq i8* %29, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = load i8, i8* %29, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %29, i8* %28, i64 %27) #15
  br label %82

82:                                               ; preds = %81, %78, %75
  %83 = load i8, i8* %10, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %2, %82
  %86 = phi i1 [ %76, %82 ], [ false, %2 ]
  %87 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %82, %85
  %89 = phi i1 [ %76, %82 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::XMLParserContext"* @_ZN5blink16XMLParserContext18CreateStringParserEP14_xmlSAXHandlerPv(%struct._xmlSAXHandler*, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i1, i1* @_ZZN5blinkL27InitializeLibXMLIfNecessaryEvE8did_init, align 1
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  tail call void @xmlInitParser() #15
  %5 = tail call i32 @xmlRegisterInputCallbacks(i32 (i8*)* nonnull @_ZN5blinkL9MatchFuncEPKc, i8* (i8*)* nonnull @_ZN5blinkL8OpenFuncEPKc, i32 (i8*, i8*, i32)* nonnull @_ZN5blinkL8ReadFuncEPvPci, i32 (i8*)* nonnull @_ZN5blinkL9CloseFuncEPv) #15
  %6 = tail call i32 @xmlRegisterOutputCallbacks(i32 (i8*)* nonnull @_ZN5blinkL9MatchFuncEPKc, i8* (i8*)* nonnull @_ZN5blinkL8OpenFuncEPKc, i32 (i8*, i8*, i32)* nonnull @_ZN5blinkL9WriteFuncEPvPKci, i32 (i8*)* nonnull @_ZN5blinkL9CloseFuncEPv) #15
  %7 = tail call i32 @_ZN3WTF13CurrentThreadEv() #15
  store i32 %7, i32* @_ZN5blinkL22g_libxml_loader_threadE, align 4
  store i1 true, i1* @_ZZN5blinkL27InitializeLibXMLIfNecessaryEvE8did_init, align 1
  br label %8

8:                                                ; preds = %2, %4
  %9 = tail call %struct._xmlParserCtxt* @xmlCreatePushParserCtxt(%struct._xmlSAXHandler* %0, i8* null, i8* null, i32 0, i8* null) #15
  %10 = tail call i32 @xmlCtxtUseOptions(%struct._xmlParserCtxt* %9, i32 524288) #15
  %11 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %9, i64 0, i32 51
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %9, i64 0, i32 4
  store i32 1, i32* %12, align 4
  %13 = tail call noalias i8* @malloc(i64 16) #15
  %14 = bitcast i8* %13 to %"class.blink::XMLParserContext"*
  %15 = bitcast i8* %13 to i32*
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to %struct._xmlParserCtxt**
  store %struct._xmlParserCtxt* %9, %struct._xmlParserCtxt** %17, align 8
  ret %"class.blink::XMLParserContext"* %14
}

declare %struct._xmlParserCtxt* @xmlCreatePushParserCtxt(%struct._xmlSAXHandler*, i8*, i8*, i32, i8*) local_unnamed_addr #3

declare i32 @xmlCtxtUseOptions(%struct._xmlParserCtxt*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XMLParserContext"* @_ZN5blink16XMLParserContext18CreateMemoryParserEP14_xmlSAXHandlerPvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%struct._xmlSAXHandler* nocapture readonly, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = load i1, i1* @_ZZN5blinkL27InitializeLibXMLIfNecessaryEvE8did_init, align 1
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  tail call void @xmlInitParser() #15
  %6 = tail call i32 @xmlRegisterInputCallbacks(i32 (i8*)* nonnull @_ZN5blinkL9MatchFuncEPKc, i8* (i8*)* nonnull @_ZN5blinkL8OpenFuncEPKc, i32 (i8*, i8*, i32)* nonnull @_ZN5blinkL8ReadFuncEPvPci, i32 (i8*)* nonnull @_ZN5blinkL9CloseFuncEPv) #15
  %7 = tail call i32 @xmlRegisterOutputCallbacks(i32 (i8*)* nonnull @_ZN5blinkL9MatchFuncEPKc, i8* (i8*)* nonnull @_ZN5blinkL8OpenFuncEPKc, i32 (i8*, i8*, i32)* nonnull @_ZN5blinkL9WriteFuncEPvPKci, i32 (i8*)* nonnull @_ZN5blinkL9CloseFuncEPv) #15
  %8 = tail call i32 @_ZN3WTF13CurrentThreadEv() #15
  store i32 %8, i32* @_ZN5blinkL22g_libxml_loader_threadE, align 4
  store i1 true, i1* @_ZZN5blinkL27InitializeLibXMLIfNecessaryEvE8did_init, align 1
  br label %9

9:                                                ; preds = %3, %5
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i8* %15, i8* %18
  %21 = select i1 %13, i64 %17, i64 %19
  %22 = trunc i64 %21 to i32
  %23 = tail call %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8* %20, i32 %22) #15
  %24 = icmp eq %struct._xmlParserCtxt* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %9
  %26 = bitcast %struct._xmlParserCtxt* %23 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %struct._xmlSAXHandler* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 256, i1 false)
  %29 = tail call i32 @xmlCtxtUseOptions(%struct._xmlParserCtxt* nonnull %23, i32 528386) #15
  %30 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 64
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 26
  store i32 7, i32* %31, align 8
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 45
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 57
  %34 = load %struct._xmlDict*, %struct._xmlDict** %33, align 8
  %35 = tail call i8* @xmlDictLookup(%struct._xmlDict* %34, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 3) #15
  %36 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 61
  store i8* %35, i8** %36, align 8
  %37 = load %struct._xmlDict*, %struct._xmlDict** %33, align 8
  %38 = tail call i8* @xmlDictLookup(%struct._xmlDict* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 5) #15
  %39 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 62
  store i8* %38, i8** %39, align 8
  %40 = load %struct._xmlDict*, %struct._xmlDict** %33, align 8
  %41 = tail call i8* @xmlDictLookup(%struct._xmlDict* %40, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 36) #15
  %42 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 63
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %23, i64 0, i32 51
  store i8* %1, i8** %43, align 8
  %44 = tail call noalias i8* @malloc(i64 16) #15
  %45 = bitcast i8* %44 to %"class.blink::XMLParserContext"*
  %46 = bitcast i8* %44 to i32*
  store i32 1, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %44, i64 8
  %48 = bitcast i8* %47 to %struct._xmlParserCtxt**
  store %struct._xmlParserCtxt* %23, %struct._xmlParserCtxt** %48, align 8
  br label %49

49:                                               ; preds = %9, %25
  %50 = phi %"class.blink::XMLParserContext"* [ %45, %25 ], [ null, %9 ]
  ret %"class.blink::XMLParserContext"* %50
}

declare %struct._xmlParserCtxt* @xmlCreateMemoryParserCtxt(i8*, i32) local_unnamed_addr #3

declare i8* @xmlDictLookup(%struct._xmlDict*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17XMLDocumentParser18SupportsXMLVersionERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i64 [ %19, %12 ], [ %10, %8 ]
  %22 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParserC2ERNS_8DocumentEPNS_14LocalFrameViewE(%"class.blink::XMLDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::LocalFrameView"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ScriptableDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::ScriptableDocumentParser"* %4, %"class.blink::Document"* dereferenceable(2848) %1, i32 1) #15
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::XMLParserScriptRunnerHost", %"class.blink::XMLParserScriptRunnerHost"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 3
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 4
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  store i8 1, i8* %10, align 1
  %12 = bitcast %"class.blink::SegmentedString"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #15
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 5
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 7
  %18 = bitcast %"class.WTF::Deque"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false) #15
  store i8 1, i8* %17, align 1
  %19 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %22 = bitcast %"class.blink::XMLParserContext"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 56, i1 false)
  store %"class.blink::ContainerNode"* %20, %"class.blink::ContainerNode"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8
  %24 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  %25 = bitcast %"class.blink::HeapVector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 35, i1 false)
  tail call void @_ZN5blink9XMLErrorsC1EPNS_8DocumentE(%"class.blink::XMLErrors"* %24, %"class.blink::Document"* %1) #15
  %26 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 22, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %26, align 8
  %27 = icmp ne %"class.blink::LocalFrameView"* %2, null
  br i1 %27, label %28, label %37

28:                                               ; preds = %3
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21XMLParserScriptRunnerEEEPhm(i64 24) #15
  %30 = bitcast i8* %29 to %"class.blink::XMLParserScriptRunner"*
  %31 = icmp eq %"class.blink::XMLDocumentParser"* %0, null
  %32 = select i1 %31, %"class.blink::XMLParserScriptRunnerHost"* null, %"class.blink::XMLParserScriptRunnerHost"* %5
  tail call void @_ZN5blink21XMLParserScriptRunnerC1EPNS_25XMLParserScriptRunnerHostE(%"class.blink::XMLParserScriptRunner"* %30, %"class.blink::XMLParserScriptRunnerHost"* %32) #15
  %33 = getelementptr inbounds i8, i8* %29, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  br label %37

37:                                               ; preds = %3, %28
  %38 = phi %"class.blink::XMLParserScriptRunner"* [ %30, %28 ], [ null, %3 ]
  %39 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23, i32 0, i32 0
  store %"class.blink::XMLParserScriptRunner"* %38, %"class.blink::XMLParserScriptRunner"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %41 = bitcast %"class.WTF::TextPosition"* %40 to i64*
  store i64 -1, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28
  %45 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 3
  %46 = bitcast %"class.WTF::StringImpl"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 28, i1 false)
  store i8 1, i8* %45, align 8
  %47 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 4
  %48 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  store i8 1, i8* %47, align 1
  %49 = bitcast %"class.blink::SegmentedString"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #15
  %50 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 1
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 2
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 3
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5
  %54 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 7
  %55 = bitcast %"class.WTF::Deque"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 25, i1 false) #15
  store i8 1, i8* %54, align 1
  br i1 %27, label %56, label %67

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 107
  %58 = load i8, i8* %57, align 8
  %59 = and i8 %58, 64
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %63 = bitcast %"class.blink::UseCounter"* %62 to void (%"class.blink::UseCounter"*, i32)***
  %64 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %64, i64 3
  %66 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %65, align 8
  tail call void %66(%"class.blink::UseCounter"* %62, i32 77) #15
  br label %67

67:                                               ; preds = %56, %61, %37
  ret void
}

declare void @_ZN5blink24ScriptableDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::ScriptableDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #3

declare void @_ZN5blink9XMLErrorsC1EPNS_8DocumentE(%"class.blink::XMLErrors"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::XMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = alloca %"class.blink::HeapVector.391", align 8
  store %"class.blink::Element"* %2, %"class.blink::Element"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  tail call void @_ZN5blink24ScriptableDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::ScriptableDocumentParser"* %7, %"class.blink::Document"* dereferenceable(2848) %11, i32 %3) #15
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 3
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 4
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  store i8 1, i8* %16, align 1
  %18 = bitcast %"class.blink::SegmentedString"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15
  %19 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 5
  %23 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 7
  %24 = bitcast %"class.WTF::Deque"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #15
  store i8 1, i8* %23, align 1
  %25 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %26 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = bitcast %"class.blink::XMLParserContext"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false)
  store %"class.blink::ContainerNode"* %26, %"class.blink::ContainerNode"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8
  %30 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  %31 = bitcast %"class.blink::HeapVector"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 35, i1 false)
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  tail call void @_ZN5blink9XMLErrorsC1EPNS_8DocumentE(%"class.blink::XMLErrors"* %30, %"class.blink::Document"* %34) #15
  %35 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 22
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.blink::Document"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::Member"* %35 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23, i32 0, i32 0
  store %"class.blink::XMLParserScriptRunner"* null, %"class.blink::XMLParserScriptRunner"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %43 = bitcast %"class.WTF::TextPosition"* %42 to i64*
  store i64 -1, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  store i8 1, i8* %44, align 8
  %45 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 26
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28
  %48 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 3
  %49 = bitcast %"class.WTF::AtomicString"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 28, i1 false)
  store i8 1, i8* %48, align 8
  %50 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 4
  %51 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  store i8 1, i8* %50, align 1
  %52 = bitcast %"class.blink::SegmentedString"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #15
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 2
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 3
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5
  %57 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 7
  %58 = bitcast %"class.WTF::Deque"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 25, i1 false) #15
  store i8 1, i8* %57, align 1
  %59 = bitcast %"class.blink::HeapVector.391"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #15
  %60 = getelementptr inbounds %"class.blink::HeapVector.391", %"class.blink::HeapVector.391"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::HeapVector.391", %"class.blink::HeapVector.391"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.blink::HeapVector.391", %"class.blink::HeapVector.391"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #15
  %63 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %64 = icmp eq %"class.blink::Element"* %63, null
  %65 = getelementptr inbounds %"class.blink::HeapVector.391", %"class.blink::HeapVector.391"* %6, i64 0, i32 0
  br i1 %64, label %359, label %66

66:                                               ; preds = %4
  %67 = bitcast %"class.blink::Element"** %5 to %"class.blink::Node"**
  %68 = bitcast %"class.blink::Element"** %5 to %"class.blink::ContainerNode"**
  br label %69

69:                                               ; preds = %101, %66
  %70 = phi %"class.blink::Element"* [ %63, %66 ], [ %102, %101 ]
  %71 = phi i32 [ 0, %66 ], [ %104, %101 ]
  %72 = phi i32 [ 0, %66 ], [ %103, %101 ]
  %73 = icmp eq i32 %72, %71
  br i1 %73, label %88, label %74, !prof !2

74:                                               ; preds = %69
  %75 = ptrtoint %"class.blink::Element"* %70 to i64
  %76 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %60, align 8
  %77 = zext i32 %72 to i64
  %78 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %76, i64 %77
  %79 = bitcast %"class.blink::Member.368"* %78 to i64*
  store atomic i64 %75, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.blink::Element"* %70 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #15
  br label %85

85:                                               ; preds = %82, %74
  %86 = load i32, i32* %62, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %62, align 4
  br label %89

88:                                               ; preds = %69
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.394"* nonnull %65, %"class.blink::Element"** nonnull dereferenceable(8) %5) #15
  br label %89

89:                                               ; preds = %85, %88
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %91 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %90) #15
  %92 = icmp eq %"class.blink::ContainerNode"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %91, i64 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %93, %89
  store %"class.blink::Element"* null, %"class.blink::Element"** %5, align 8
  %99 = load i32, i32* %62, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %359, label %105

101:                                              ; preds = %93
  %102 = bitcast %"class.blink::ContainerNode"* %91 to %"class.blink::Element"*
  store %"class.blink::ContainerNode"* %91, %"class.blink::ContainerNode"** %68, align 8
  %103 = load i32, i32* %62, align 4
  %104 = load i32, i32* %61, align 8
  br label %69

105:                                              ; preds = %98
  %106 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xmlns_atomE, align 8
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0
  %109 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  br label %110

110:                                              ; preds = %105, %346
  %111 = phi i32 [ %99, %105 ], [ %348, %346 ]
  %112 = add i32 %111, -1
  %113 = call dereferenceable(8) %"class.blink::Member.368"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.394"* nonnull %65, i32 %112) #15
  %114 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::Element"*, %"class.blink::Element"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %115, i64 0, i32 3, i32 0, i32 0
  %117 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %116, align 8
  %118 = icmp eq %"class.blink::ElementData"* %117, null
  br i1 %118, label %148, label %119

119:                                              ; preds = %110
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %115) #15
  %120 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %116, align 8
  %121 = icmp eq %"class.blink::ElementData"* %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = load i32, i32* null, align 536870912
  br label %136

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = bitcast %"class.blink::ElementData"* %120 to %"class.blink::UniqueElementData"*
  %131 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 1, i32 1
  %132 = bitcast %"class.blink::Member.379"* %131 to %"class.blink::Attribute"**
  %133 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %130, i64 0, i32 2, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  br label %142

136:                                              ; preds = %124, %122
  %137 = phi i32 [ %123, %122 ], [ %126, %124 ]
  %138 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 1
  %139 = bitcast %"class.blink::ElementData"* %138 to %"class.blink::Attribute"*
  %140 = lshr i32 %137, 1
  %141 = and i32 %140, 268435455
  br label %142

142:                                              ; preds = %129, %136
  %143 = phi i32 [ %141, %136 ], [ %135, %129 ]
  %144 = phi %"class.blink::Attribute"* [ %139, %136 ], [ %133, %129 ]
  %145 = zext i32 %143 to i64
  %146 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %144, i64 %145
  %147 = icmp eq i32 %143, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %254, %110, %142
  %149 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %115, i64 0, i32 2, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 4
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %346, label %257

155:                                              ; preds = %142, %254
  %156 = phi %"class.blink::Attribute"* [ %255, %254 ], [ %144, %142 ]
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 3
  %160 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %161, %162
  br i1 %163, label %164, label %202

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 0, i32 1, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %185, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i33
  %177 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %176, i33 1) #15
  %178 = extractvalue { i33, i1 } %177, 1
  %179 = extractvalue { i33, i1 } %177, 0
  %180 = icmp slt i33 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %183, !prof !2

182:                                              ; preds = %173
  call void @llvm.trap() #15
  unreachable

183:                                              ; preds = %173
  %184 = trunc i33 %179 to i32
  store i32 %184, i32* %174, align 4
  br label %185

185:                                              ; preds = %183, %168, %164
  %186 = ptrtoint %"class.WTF::StringImpl"* %166 to i64
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  store i64 %186, i64* %109, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %254, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %254

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #15
  br label %254

202:                                              ; preds = %155
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, %162
  br i1 %205, label %206, label %254

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 0, i32 1
  %208 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.118"* %108, %"class.WTF::AtomicString"* dereferenceable(8) %159, %"class.WTF::AtomicString"* dereferenceable(8) %207) #15
  %209 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %208, 1
  %210 = and i8 %209, 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %254

212:                                              ; preds = %206
  %213 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %208, 0
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %213, i64 0, i32 1
  %215 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %207, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %235, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %235

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #15
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %223
  call void @llvm.trap() #15
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %235

235:                                              ; preds = %233, %218, %212
  %236 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %237 = bitcast %"class.WTF::AtomicString"* %214 to i64*
  %238 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %214, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  store i64 %236, i64* %237, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #15
  br label %254

254:                                              ; preds = %253, %250, %235, %206, %201, %198, %185, %202
  %255 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 1
  %256 = icmp eq %"class.blink::Attribute"* %255, %146
  br i1 %256, label %148, label %155

257:                                              ; preds = %148
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 2
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %300

266:                                              ; preds = %257, %262
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %283

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = zext i32 %273 to i33
  %275 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %274, i33 1) #15
  %276 = extractvalue { i33, i1 } %275, 1
  %277 = extractvalue { i33, i1 } %275, 0
  %278 = icmp slt i33 %277, 0
  %279 = or i1 %276, %278
  br i1 %279, label %280, label %281, !prof !2

280:                                              ; preds = %271
  call void @llvm.trap() #15
  unreachable

281:                                              ; preds = %271
  %282 = trunc i33 %277 to i32
  store i32 %282, i32* %272, align 4
  br label %283

283:                                              ; preds = %281, %266
  %284 = ptrtoint %"class.WTF::StringImpl"* %153 to i64
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  store i64 %284, i64* %109, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %346, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %346

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #15
  br label %346

300:                                              ; preds = %262
  %301 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.118"* %108, %"class.WTF::AtomicString"* dereferenceable(8) %258, %"class.WTF::AtomicString"* dereferenceable(8) %151) #15
  %302 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %301, 1
  %303 = and i8 %302, 1
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %346

305:                                              ; preds = %300
  %306 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %301, 0
  %307 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %306, i64 0, i32 1
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #15
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !2

324:                                              ; preds = %315
  call void @llvm.trap() #15
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %327

327:                                              ; preds = %325, %310, %305
  %328 = ptrtoint %"class.WTF::StringImpl"* %308 to i64
  %329 = bitcast %"class.WTF::AtomicString"* %307 to i64*
  %330 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %307, i64 0, i32 0, i32 0, i32 0
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  store i64 %328, i64* %329, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #15
  br label %346

346:                                              ; preds = %345, %342, %327, %300, %299, %296, %283, %148
  %347 = load i32, i32* %62, align 4
  %348 = add i32 %347, -1
  %349 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %60, align 8
  %350 = zext i32 %348 to i64
  %351 = zext i32 %347 to i64
  %352 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %349, i64 %350
  %353 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %349, i64 %351
  %354 = bitcast %"class.blink::Member.368"* %352 to i8*
  %355 = ptrtoint %"class.blink::Member.368"* %353 to i64
  %356 = ptrtoint %"class.blink::Member.368"* %352 to i64
  %357 = sub i64 %355, %356
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %354, i64 %357) #15
  store i32 %348, i32* %62, align 4
  %358 = icmp eq i32 %348, 0
  br i1 %358, label %359, label %110

359:                                              ; preds = %346, %4, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16XMLParserContextD2Ev(%"class.blink::XMLParserContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %0, i64 0, i32 1
  %3 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %2, align 8
  %4 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %3, i64 0, i32 2
  %5 = load %struct._xmlDoc*, %struct._xmlDoc** %4, align 8
  %6 = icmp eq %struct._xmlDoc* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @xmlFreeDoc(%struct._xmlDoc* nonnull %5) #15
  %8 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %2, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %struct._xmlParserCtxt* [ %3, %1 ], [ %8, %7 ]
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %10) #15
  ret void
}

declare void @xmlFreeDoc(%struct._xmlDoc*) local_unnamed_addr #3

declare void @xmlFreeParserCtxt(%struct._xmlParserCtxt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParserD2Ev(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN5blink17XMLDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5
  %5 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %5, align 8
  %7 = icmp eq %"class.blink::SegmentedSubstring"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::SegmentedSubstring"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %4) #15
  %16 = bitcast %"class.WTF::Deque"* %4 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %8
  %19 = phi i8* [ %17, %15 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %19) #15
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %5, align 8
  br label %20

20:                                               ; preds = %18, %1
  %21 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 5, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #15
  br label %37

37:                                               ; preds = %20, %33, %36
  %38 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %38, align 8
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %39, i32 %43) #15
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %38, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %44, %57, %60
  %62 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21, i32 4
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %62) #15
  %63 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #15
  br label %79

79:                                               ; preds = %61, %75, %78
  %80 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %89, label %83, !prof !4

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %83
  store i32 0, i32* %84, align 4
  br label %88

88:                                               ; preds = %87, %83
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #15
  store i8* null, i8** %80, align 8
  br label %89

89:                                               ; preds = %79, %88
  %90 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %91 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %90, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %90, align 8
  %92 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %91 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %95 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %95, i64 1
  %97 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %96, align 8
  tail call void %97(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %91) #15
  br label %98

98:                                               ; preds = %89, %93
  %99 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %100 = bitcast %"class.WTF::Deque.30"* %99 to %"class.WTF::ConditionalDestructor.31"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.31"* %100) #15
  %101 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %102 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %101, align 8
  %103 = icmp eq %"class.blink::XMLParserContext"* %102, null
  br i1 %103, label %122, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %102, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %105) #15
  %106 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %122

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %102, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %110, i64 2
  %112 = bitcast %"class.base::RefCounted"* %111 to %struct._xmlParserCtxt**
  %113 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %112, align 8
  %114 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %113, i64 0, i32 2
  %115 = load %struct._xmlDoc*, %struct._xmlDoc** %114, align 8
  %116 = icmp eq %struct._xmlDoc* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %109
  tail call void @xmlFreeDoc(%struct._xmlDoc* nonnull %115) #15
  %118 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %112, align 8
  br label %119

119:                                              ; preds = %117, %109
  %120 = phi %struct._xmlParserCtxt* [ %113, %109 ], [ %118, %117 ]
  tail call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %120) #15
  %121 = bitcast %"class.blink::XMLParserContext"* %102 to i8*
  tail call void @free(i8* %121) #15
  br label %122

122:                                              ; preds = %98, %104, %119
  %123 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 5
  %124 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %124, align 8
  %126 = icmp eq %"class.blink::SegmentedSubstring"* %125, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %122
  %128 = bitcast %"class.blink::SegmentedSubstring"* %125 to i8*
  %129 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 5, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 5, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %130, %132
  br i1 %133, label %137, label %134

134:                                              ; preds = %127
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %123) #15
  %135 = bitcast %"class.WTF::Deque"* %123 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %127
  %138 = phi i8* [ %136, %134 ], [ %128, %127 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %138) #15
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %124, align 8
  br label %139

139:                                              ; preds = %137, %122
  %140 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 2, i32 0, i32 5, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #15
  br label %156

156:                                              ; preds = %139, %152, %155
  %157 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink25DecodedDataDocumentParserD2Ev(%"class.blink::DecodedDataDocumentParser"* %157) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.31"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.31"* %0 to %"class.std::__1::unique_ptr.35"**
  %3 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.35"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.31", %"class.WTF::ConditionalDestructor.31"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor.31"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor.31", %"class.WTF::ConditionalDestructor.31"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor.31"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %3, i64 %15
  br i1 %14, label %33, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %3, i64 %18
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi %"class.std::__1::unique_ptr.35"* [ %31, %30 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %22, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %22, align 8
  %24 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %23 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %27 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %27, i64 1
  %29 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %28, align 8
  tail call void %29(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %23) #15
  br label %30

30:                                               ; preds = %25, %20
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %21, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.35"* %31, %16
  br i1 %32, label %76, label %20

33:                                               ; preds = %13
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %33, %45
  %36 = phi %"class.std::__1::unique_ptr.35"* [ %46, %45 ], [ %3, %33 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %37, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %37, align 8
  %39 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %38 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %42 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %42, i64 1
  %44 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %43, align 8
  tail call void %44(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %38) #15
  br label %45

45:                                               ; preds = %40, %35
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %36, i64 1
  %47 = icmp eq %"class.std::__1::unique_ptr.35"* %46, %16
  br i1 %47, label %48, label %35

48:                                               ; preds = %45
  %49 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %2, align 8
  %50 = load i32, i32* %7, align 8
  br label %51

51:                                               ; preds = %48, %33
  %52 = phi i32 [ %50, %48 ], [ %8, %33 ]
  %53 = phi %"class.std::__1::unique_ptr.35"* [ %49, %48 ], [ %3, %33 ]
  %54 = getelementptr inbounds %"class.WTF::ConditionalDestructor.31", %"class.WTF::ConditionalDestructor.31"* %0, i64 8
  %55 = bitcast %"class.WTF::ConditionalDestructor.31"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %53, i64 %57
  %59 = icmp eq i32 %52, %56
  br i1 %59, label %76, label %60

60:                                               ; preds = %51
  %61 = zext i32 %52 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %53, i64 %61
  br label %63

63:                                               ; preds = %73, %60
  %64 = phi %"class.std::__1::unique_ptr.35"* [ %74, %73 ], [ %62, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %65, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %65, align 8
  %67 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %66 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %70 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %70, i64 1
  %72 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %71, align 8
  tail call void %72(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %66) #15
  br label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %64, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr.35"* %74, %58
  br i1 %75, label %76, label %63

76:                                               ; preds = %30, %73, %51, %5
  %77 = bitcast %"class.WTF::ConditionalDestructor.31"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #15
  store %"class.std::__1::unique_ptr.35"* null, %"class.std::__1::unique_ptr.35"** %2, align 8
  br label %79

79:                                               ; preds = %1, %76
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink25DecodedDataDocumentParserD2Ev(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink17XMLDocumentParserD1Ev(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 -1, i32 28, i32 0, i32 1
  %3 = bitcast i8** %2 to %"class.blink::XMLDocumentParser"*
  tail call void @_ZN5blink17XMLDocumentParserD2Ev(%"class.blink::XMLDocumentParser"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParserD0Ev(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17XMLDocumentParserD2Ev(%"class.blink::XMLDocumentParser"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink17XMLDocumentParserD0Ev(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 -1, i32 28, i32 0, i32 1
  %3 = bitcast i8** %2 to %"class.blink::XMLDocumentParser"*
  tail call void @_ZN5blink17XMLDocumentParserD2Ev(%"class.blink::XMLDocumentParser"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17XMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::XMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::Member.46"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8
  %15 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #15
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #15
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 9
  %31 = bitcast %"class.blink::Member.64"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv) #15
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  tail call void @_ZNK5blink9XMLErrors5TraceEPNS_7VisitorE(%"class.blink::XMLErrors"* %41, %"class.blink::Visitor"* %1) #15
  %42 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 22
  %43 = bitcast %"class.blink::Member"* %42 to i64*
  %44 = load atomic i64, i64* %43 monotonic, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = inttoptr i64 %44 to i8*
  %48 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, i64 5
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %1, i8* nonnull %47, i8* nonnull %47, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #15
  br label %52

52:                                               ; preds = %40, %46
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23
  %54 = bitcast %"class.blink::Member.101"* %53 to i64*
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = inttoptr i64 %55 to i8*
  %59 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, i64 5
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, align 8
  tail call void %62(%"class.blink::Visitor"* %1, i8* nonnull %58, i8* nonnull %58, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21XMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv) #15
  br label %63

63:                                               ; preds = %52, %57
  %64 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ScriptableDocumentParser5TraceEPNS_7VisitorE(%"class.blink::ScriptableDocumentParser"* %64, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink24ScriptableDocumentParser5TraceEPNS_7VisitorE(%"class.blink::ScriptableDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink17XMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::XMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 -1, i32 28, i32 0, i32 1
  %4 = bitcast i8** %3 to %"class.blink::XMLDocumentParser"*
  tail call void @_ZNK5blink17XMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::XMLDocumentParser"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser23InitializeParserContextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::XMLDocumentParser"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct._xmlSAXHandler, align 8
  %4 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %5 = bitcast %struct._xmlSAXHandler* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %5) #15
  %6 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 1
  %7 = bitcast i32 (i8*)** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 248, i1 false)
  %8 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 23
  store void (i8*, i8*, ...)* @_ZN5blinkL18NormalErrorHandlerEPvPKcz, void (i8*, i8*, ...)** %8, align 8
  %9 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 17
  %10 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 19
  store void (i8*, i8*, i8*)* @_ZN5blinkL28ProcessingInstructionHandlerEPvPKhS2_, void (i8*, i8*, i8*)** %10, align 8
  %11 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 25
  store void (i8*, i8*, i32)* @_ZN5blinkL17CdataBlockHandlerEPvPKhi, void (i8*, i8*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 20
  store void (i8*, i8*)* @_ZN5blinkL14CommentHandlerEPvPKh, void (i8*, i8*)** %12, align 8
  %13 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 21
  %14 = bitcast void (i8*, i8*, ...)** %13 to <2 x void (i8*, i8*, ...)*>*
  store <2 x void (i8*, i8*, ...)*> <void (i8*, i8*, ...)* @_ZN5blinkL14WarningHandlerEPvPKcz, void (i8*, i8*, ...)* @_ZN5blinkL18NormalErrorHandlerEPvPKcz>, <2 x void (i8*, i8*, ...)*>* %14, align 8
  %15 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 29
  store void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)* @_ZN5blinkL21StartElementNsHandlerEPvPKhS2_S2_iPS2_iiS3_, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)** %15, align 8
  %16 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 30
  store void (i8*, i8*, i8*, i8*)* @_ZN5blinkL19EndElementNsHandlerEPvPKhS2_S2_, void (i8*, i8*, i8*, i8*)** %16, align 8
  %17 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 5
  store %struct._xmlEntity* (i8*, i8*)* @_ZN5blinkL16GetEntityHandlerEPvPKh, %struct._xmlEntity* (i8*, i8*)** %17, align 8
  %18 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 12
  %19 = bitcast void (i8*)** %18 to <2 x void (i8*)*>*
  store <2 x void (i8*)*> <void (i8*)* @_ZN5blinkL20StartDocumentHandlerEPv, void (i8*)* @_ZN5blinkL18EndDocumentHandlerEPv>, <2 x void (i8*)*>* %19, align 8
  %20 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 0
  store void (i8*, i8*, i8*, i8*)* @_ZN5blinkL21InternalSubsetHandlerEPvPKhS2_S2_, void (i8*, i8*, i8*, i8*)** %20, align 8
  %21 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 26
  store void (i8*, i8*, i8*, i8*)* @_ZN5blinkL21ExternalSubsetHandlerEPvPKhS2_S2_, void (i8*, i8*, i8*, i8*)** %21, align 8
  %22 = bitcast void (i8*, i8*, i32)** %9 to <2 x void (i8*, i8*, i32)*>*
  store <2 x void (i8*, i8*, i32)*> <void (i8*, i8*, i32)* @_ZN5blinkL17CharactersHandlerEPvPKhi, void (i8*, i8*, i32)* @_ZN5blinkL26IgnorableWhitespaceHandlerEPvPKhi>, <2 x void (i8*, i8*, i32)*>* %22, align 8
  %23 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 6
  store void (i8*, i8*, i32, i8*, i8*, i8*)* @xmlSAX2EntityDecl, void (i8*, i8*, i32, i8*, i8*, i8*)** %23, align 8
  %24 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %3, i64 0, i32 27
  store i32 -554844497, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %26 = bitcast %"class.blink::XMLDocumentParserScope"* %4 to i8*
  %27 = bitcast i8* %25 to i32*
  store i32 0, i32* %27, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #15
  %28 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %29 = bitcast %"class.blink::XMLDocumentParserScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"* nonnull %4, %"class.blink::Document"* %30) #15
  %31 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  %34 = bitcast %"class.blink::XMLDocumentParser"* %0 to i8*
  br i1 %33, label %61, label %35

35:                                               ; preds = %2
  %36 = call %"class.blink::XMLParserContext"* @_ZN5blink16XMLParserContext18CreateMemoryParserEP14_xmlSAXHandlerPvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%struct._xmlSAXHandler* nonnull %3, i8* %34, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %37 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3
  %38 = ptrtoint %"class.blink::XMLParserContext"* %36 to i64
  %39 = bitcast %class.scoped_refptr.29* %37 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr.29, %class.scoped_refptr.29* %37, i64 0, i32 0
  %41 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.blink::XMLParserContext"* %41, null
  br i1 %42, label %87, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %41, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #15
  %45 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %87

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %41, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %49, i64 2
  %51 = bitcast %"class.base::RefCounted"* %50 to %struct._xmlParserCtxt**
  %52 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %51, align 8
  %53 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %52, i64 0, i32 2
  %54 = load %struct._xmlDoc*, %struct._xmlDoc** %53, align 8
  %55 = icmp eq %struct._xmlDoc* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %48
  call void @xmlFreeDoc(%struct._xmlDoc* nonnull %54) #15
  %57 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %51, align 8
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi %struct._xmlParserCtxt* [ %52, %48 ], [ %57, %56 ]
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %59) #15
  %60 = bitcast %"class.blink::XMLParserContext"* %41 to i8*
  call void @free(i8* %60) #15
  br label %87

61:                                               ; preds = %2
  %62 = call %"class.blink::XMLParserContext"* @_ZN5blink16XMLParserContext18CreateStringParserEP14_xmlSAXHandlerPv(%struct._xmlSAXHandler* nonnull %3, i8* %34)
  %63 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3
  %64 = ptrtoint %"class.blink::XMLParserContext"* %62 to i64
  %65 = bitcast %class.scoped_refptr.29* %63 to i64*
  %66 = getelementptr inbounds %class.scoped_refptr.29, %class.scoped_refptr.29* %63, i64 0, i32 0
  %67 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.blink::XMLParserContext"* %67, null
  br i1 %68, label %87, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #15
  %71 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %67, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %75, i64 2
  %77 = bitcast %"class.base::RefCounted"* %76 to %struct._xmlParserCtxt**
  %78 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %77, align 8
  %79 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %78, i64 0, i32 2
  %80 = load %struct._xmlDoc*, %struct._xmlDoc** %79, align 8
  %81 = icmp eq %struct._xmlDoc* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %74
  call void @xmlFreeDoc(%struct._xmlDoc* nonnull %80) #15
  %83 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %77, align 8
  br label %84

84:                                               ; preds = %82, %74
  %85 = phi %struct._xmlParserCtxt* [ %78, %74 ], [ %83, %82 ]
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %85) #15
  %86 = bitcast %"class.blink::XMLParserContext"* %67 to i8*
  call void @free(i8* %86) #15
  br label %87

87:                                               ; preds = %84, %69, %61, %58, %43, %35
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %5) #15
  ret void
}

declare void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser14StartElementNsERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_(%"class.blink::XMLDocumentParser"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32, i8**, i32, i32, i8**) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::StringAppend.2336", align 8
  %13 = alloca %"class.WTF::StringAppend.2016", align 8
  %14 = alloca %"class.blink::QualifiedName", align 8
  %15 = alloca %"class.blink::Attribute", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca %"class.WTF::StringAppend.2330", align 8
  %18 = alloca %"class.blink::QualifiedName", align 8
  %19 = alloca %"class.blink::Attribute", align 8
  %20 = alloca %"class.WTF::AtomicString", align 8
  %21 = alloca %"class.WTF::Vector.2008", align 8
  %22 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %23 = alloca %"class.WTF::AtomicString", align 8
  %24 = alloca %"class.blink::QualifiedName", align 8
  %25 = alloca %"class.blink::QualifiedName", align 8
  %26 = alloca %"class.WTF::AtomicString", align 8
  %27 = alloca %"class.WTF::StringAppend", align 8
  %28 = alloca %"class.WTF::StringAppend.2016", align 8
  %29 = alloca %"class.blink::CreateElementFlags", align 8
  %30 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 1
  br i1 %33, label %1600, label %34

34:                                               ; preds = %9
  %35 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %36 = load i8, i8* %35, align 2, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %107, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %40 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %39, align 8
  %41 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %40, null
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %44 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %43, align 8
  %45 = icmp eq %"class.blink::XMLParserContext"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %44, i64 0, i32 1
  %48 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %47, align 8
  %49 = icmp eq %struct._xmlParserCtxt* %48, null
  br i1 %49, label %61, label %54

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %40, i64 0, i32 1, i32 0, i32 0
  %52 = bitcast i32* %51 to <2 x i32>*
  %53 = load <2 x i32>, <2 x i32>* %52, align 8
  br label %61

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %48, i64 0, i32 9
  %56 = load %struct._xmlParserInput*, %struct._xmlParserInput** %55, align 8
  %57 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %56, i64 0, i32 7
  %58 = bitcast i32* %57 to <2 x i32>*
  %59 = load <2 x i32>, <2 x i32>* %58, align 4
  %60 = add <2 x i32> %59, <i32 -1, i32 -1>
  br label %61

61:                                               ; preds = %46, %42, %50, %54
  %62 = phi <2 x i32> [ %53, %50 ], [ %60, %54 ], [ zeroinitializer, %42 ], [ zeroinitializer, %46 ]
  %63 = extractelement <2 x i32> %62, i32 1
  %64 = zext i32 %63 to i64
  %65 = shl nuw i64 %64, 32
  %66 = extractelement <2 x i32> %62, i32 0
  %67 = zext i32 %66 to i64
  %68 = or i64 %65, %67
  %69 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %70 = bitcast %"class.WTF::TextPosition"* %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %72 = tail call noalias i8* @malloc(i64 72) #15
  %73 = bitcast i8* %72 to %"class.blink::PendingStartElementNSCallback"*
  tail call void @_ZN5blink29PendingStartElementNSCallbackC2ERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_NS1_12TextPositionE(%"class.blink::PendingStartElementNSCallback"* %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 %4, i8** %5, i32 %6, i32 %7, i8** %8, i64 %68) #15
  %74 = ptrtoint i8* %72 to i64
  %75 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %83, label %80

80:                                               ; preds = %61
  %81 = add i32 %79, 1
  %82 = icmp eq i32 %81, %76
  br i1 %82, label %92, label %94

83:                                               ; preds = %61
  %84 = icmp eq i32 %79, 0
  %85 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  br i1 %84, label %90, label %87

87:                                               ; preds = %83
  %88 = add i32 %86, -1
  %89 = icmp eq i32 %79, %88
  br i1 %89, label %92, label %94

90:                                               ; preds = %83
  %91 = icmp eq i32 %86, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %90, %87, %80
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %71) #15
  %93 = load i32, i32* %78, align 4
  br label %94

94:                                               ; preds = %92, %90, %87, %80
  %95 = phi i32 [ %79, %80 ], [ %79, %87 ], [ 0, %90 ], [ %93, %92 ]
  %96 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %96, align 8
  %98 = zext i32 %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %97, i64 %98
  %100 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  %103 = icmp eq i32 %95, %102
  %104 = add i32 %95, 1
  %105 = select i1 %103, i32 0, i32 %104
  store i32 %105, i32* %78, align 4
  %106 = bitcast %"class.std::__1::unique_ptr.35"* %99 to i64*
  store i64 %74, i64* %106, align 8
  br label %1600

107:                                              ; preds = %34
  %108 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  br i1 %108, label %109, label %1600

109:                                              ; preds = %107
  %110 = bitcast %"class.WTF::AtomicString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #15
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %135, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  br label %286

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #15
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %122
  tail call void @llvm.trap() #15
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  br label %135

135:                                              ; preds = %109, %132
  %136 = phi %"class.WTF::StringImpl"* [ null, %109 ], [ %134, %132 ]
  %137 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %138 = load i8, i8* %137, align 8, !range !3
  %139 = icmp ne i8 %138, 0
  %140 = icmp eq %"class.WTF::StringImpl"* %136, null
  %141 = and i1 %139, %140
  br i1 %141, label %142, label %286

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %245, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 0
  %148 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %147, align 8
  %149 = icmp eq %"struct.WTF::KeyValuePair"* %148, null
  br i1 %149, label %199, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = add i32 %152, -1
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = lshr i32 %156, 8
  %158 = and i32 %157, %153
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %148, i64 %159
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %160, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %199, label %164

164:                                              ; preds = %150
  %165 = xor i32 %157, -1
  %166 = lshr i32 %156, 31
  %167 = add nsw i32 %166, %165
  %168 = shl i32 %167, 12
  %169 = xor i32 %168, %167
  %170 = lshr i32 %169, 7
  %171 = xor i32 %170, %169
  %172 = shl i32 %171, 2
  %173 = xor i32 %172, %171
  %174 = lshr i32 %173, 20
  %175 = xor i32 %174, %173
  %176 = or i32 %175, 1
  %177 = zext i32 %176 to i64
  br label %178

178:                                              ; preds = %188, %164
  %179 = phi %"struct.WTF::KeyValuePair"* [ %160, %164 ], [ %193, %188 ]
  %180 = phi i64 [ %159, %164 ], [ %192, %188 ]
  %181 = phi i64 [ 0, %164 ], [ %190, %188 ]
  %182 = bitcast %"struct.WTF::KeyValuePair"* %179 to i8**
  %183 = load i8*, i8** %182, align 8
  %184 = icmp ne i8* %183, inttoptr (i64 -1 to i8*)
  %185 = bitcast i8* %183 to %"class.WTF::StringImpl"*
  %186 = icmp eq %"class.WTF::StringImpl"* %144, %185
  %187 = and i1 %184, %186
  br i1 %187, label %197, label %188

188:                                              ; preds = %178
  %189 = icmp eq i64 %181, 0
  %190 = select i1 %189, i64 %177, i64 %181
  %191 = add i64 %190, %180
  %192 = and i64 %191, %154
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %148, i64 %192
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %193, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %199, label %178

197:                                              ; preds = %178
  %198 = icmp eq %"struct.WTF::KeyValuePair"* %179, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %188, %197, %150, %146
  %200 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %203

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %179, i64 0, i32 1
  br label %203

203:                                              ; preds = %199, %201
  %204 = phi %"class.WTF::AtomicString"* [ %202, %201 ], [ %200, %199 ]
  %205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %223, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %223

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #15
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %226, !prof !2

222:                                              ; preds = %213
  tail call void @llvm.trap() #15
  unreachable

223:                                              ; preds = %208, %203
  %224 = ptrtoint %"class.WTF::StringImpl"* %206 to i64
  %225 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %224, i64* %225, align 8
  br label %286

226:                                              ; preds = %213
  %227 = trunc i33 %219 to i32
  store i32 %227, i32* %214, align 4
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %229 = ptrtoint %"class.WTF::StringImpl"* %206 to i64
  %230 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %229, i64* %230, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %231, label %286, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %286

244:                                              ; preds = %241
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #15
  br label %286

245:                                              ; preds = %142
  %246 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %264, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i33
  %258 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %257, i33 1) #15
  %259 = extractvalue { i33, i1 } %258, 1
  %260 = extractvalue { i33, i1 } %258, 0
  %261 = icmp slt i33 %260, 0
  %262 = or i1 %259, %261
  br i1 %262, label %263, label %267, !prof !2

263:                                              ; preds = %254
  tail call void @llvm.trap() #15
  unreachable

264:                                              ; preds = %249, %245
  %265 = ptrtoint %"class.WTF::StringImpl"* %247 to i64
  %266 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %265, i64* %266, align 8
  br label %286

267:                                              ; preds = %254
  %268 = trunc i33 %260 to i32
  store i32 %268, i32* %255, align 4
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %270 = ptrtoint %"class.WTF::StringImpl"* %247 to i64
  %271 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %270, i64* %271, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #15
  br label %286

286:                                              ; preds = %264, %223, %120, %135, %285, %282, %267, %244, %241, %226
  %287 = phi i8* [ %121, %120 ], [ %137, %135 ], [ %137, %285 ], [ %137, %282 ], [ %137, %267 ], [ %137, %244 ], [ %137, %241 ], [ %137, %226 ], [ %137, %223 ], [ %137, %264 ]
  %288 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 14
  %289 = load i8, i8* %288, align 4, !range !3
  %290 = icmp eq i8 %289, 0
  store i8 1, i8* %288, align 4
  %291 = bitcast %"class.WTF::Vector.2008"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %291) #15
  %292 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %21, i64 0, i32 0, i32 0, i32 0
  %293 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %21, i64 0, i32 0, i32 0, i32 1
  %294 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %21, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 16, i1 false) #15
  %295 = bitcast %"class.blink::DummyExceptionStateForTesting"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %295) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 56, i1 false)
  %296 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 0
  %297 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %297, align 8
  %298 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %298, align 2
  %299 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 1, i32 2
  %300 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 5, i32 0, i32 0
  %301 = bitcast %"class.WTF::StringImpl"** %300 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %301, i8 0, i64 16, i1 false) #15
  %302 = bitcast i8** %299 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %303 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0
  %304 = bitcast i8** %5 to %"struct.blink::xmlSAX2Namespace"*
  %305 = icmp sgt i32 %4, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %286
  %307 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 4
  br label %591

308:                                              ; preds = %286
  %309 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  %310 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xmlns_atomE, align 8
  %312 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = bitcast %"class.WTF::StringAppend.2330"* %17 to i8*
  %314 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF18g_xmlns_with_colonE, align 8
  %315 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %17, i64 0, i32 0, i32 0, i32 0
  %316 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %317 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %318 = bitcast %"class.blink::QualifiedName"* %18 to i8*
  %319 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %320 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %320, i64 0, i32 0, i32 0
  %322 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  %323 = bitcast %"class.blink::Attribute"* %19 to i8*
  %324 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 1
  %327 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %326, i64 0, i32 0, i32 0, i32 0
  %328 = bitcast %"class.WTF::AtomicString"* %326 to i64*
  %329 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %19, i64 0, i32 0
  %330 = zext i32 %4 to i64
  br label %331

331:                                              ; preds = %566, %308
  %332 = phi i64 [ 0, %308 ], [ %568, %566 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %310, align 8
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  store %"class.WTF::StringImpl"* %333, %"class.WTF::StringImpl"** %310, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %334, label %352, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %352

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i33
  %344 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %343, i33 1) #15
  %345 = extractvalue { i33, i1 } %344, 1
  %346 = extractvalue { i33, i1 } %344, 0
  %347 = icmp slt i33 %346, 0
  %348 = or i1 %345, %347
  br i1 %348, label %349, label %350, !prof !2

349:                                              ; preds = %340
  call void @llvm.trap() #15
  unreachable

350:                                              ; preds = %340
  %351 = trunc i33 %346 to i32
  store i32 %351, i32* %341, align 4
  br label %352

352:                                              ; preds = %350, %335, %331
  %353 = getelementptr inbounds %"struct.blink::xmlSAX2Namespace", %"struct.blink::xmlSAX2Namespace"* %304, i64 %332, i32 1
  %354 = load i8*, i8** %353, align 8
  %355 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %354) #15
  %356 = getelementptr inbounds %"struct.blink::xmlSAX2Namespace", %"struct.blink::xmlSAX2Namespace"* %304, i64 %332, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %453, label %359

359:                                              ; preds = %352
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #15
  %360 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* nonnull %357) #15
  %361 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_(%"class.WTF::String"* dereferenceable(8) %314, %"class.WTF::StringImpl"* %360) #15
  %362 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %361, 0
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %315, align 8
  %363 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %361, 1
  store %"class.WTF::StringImpl"* %363, %"class.WTF::StringImpl"** %316, align 8
  %364 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.2330"* nonnull %17) #15
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %402, label %366

366:                                              ; preds = %359
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 acquire, align 4
  %369 = and i32 %368, 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %387, label %371

371:                                              ; preds = %366
  %372 = load atomic i32, i32* %367 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %389

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i33
  %379 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %378, i33 1) #15
  %380 = extractvalue { i33, i1 } %379, 1
  %381 = extractvalue { i33, i1 } %379, 0
  %382 = icmp slt i33 %381, 0
  %383 = or i1 %380, %382
  br i1 %383, label %384, label %385, !prof !2

384:                                              ; preds = %375
  call void @llvm.trap() #15
  unreachable

385:                                              ; preds = %375
  %386 = trunc i33 %381 to i32
  store i32 %386, i32* %376, align 4
  br label %389

387:                                              ; preds = %366
  %388 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %364) #15
  br label %389

389:                                              ; preds = %387, %385, %371
  %390 = phi %"class.WTF::StringImpl"* [ %364, %385 ], [ %364, %371 ], [ %388, %387 ]
  %391 = load atomic i32, i32* %367 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #15
  br label %402

402:                                              ; preds = %401, %398, %359
  %403 = phi %"class.WTF::StringImpl"* [ %390, %398 ], [ %390, %401 ], [ null, %359 ]
  %404 = ptrtoint %"class.WTF::StringImpl"* %403 to i64
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  store i64 %404, i64* %317, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %420, label %407

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #15
  br label %420

420:                                              ; preds = %419, %416, %402
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #15
  br label %436

436:                                              ; preds = %435, %432, %420
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %437, null
  br i1 %438, label %452, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %439
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %439
  %449 = phi i32 [ %447, %446 ], [ %445, %439 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %437) #15
  br label %452

452:                                              ; preds = %451, %448, %436
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #15
  br label %453

453:                                              ; preds = %452, %352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #15
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %319, align 8
  %454 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %321, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %454, %"class.blink::QualifiedName::QualifiedNameImpl"** %319, align 8
  %455 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %454, null
  br i1 %455, label %463, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %454, i64 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = and i32 %458, 16777216
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %463

461:                                              ; preds = %456
  %462 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %454, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %462) #15
  br label %463

463:                                              ; preds = %461, %456, %453
  %464 = call zeroext i1 @_ZN5blink7Element18ParseAttributeNameERNS_13QualifiedNameERKN3WTF12AtomicStringES6_RNS_14ExceptionStateE(%"class.blink::QualifiedName"* nonnull dereferenceable(8) %18, %"class.WTF::AtomicString"* dereferenceable(8) %322, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %16, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %303) #15
  br i1 %464, label %465, label %534

465:                                              ; preds = %463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %323) #15
  %466 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %319, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %466, %"class.blink::QualifiedName::QualifiedNameImpl"** %324, align 8
  %467 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %466, null
  br i1 %467, label %475, label %468

468:                                              ; preds = %465
  %469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %466, i64 0, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = and i32 %470, 16777216
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %468
  %474 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %466, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %474) #15
  br label %475

475:                                              ; preds = %473, %468, %465
  store %"class.WTF::StringImpl"* %355, %"class.WTF::StringImpl"** %325, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %476, label %494, label %477

477:                                              ; preds = %475
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %494

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #15
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !2

491:                                              ; preds = %482
  call void @llvm.trap() #15
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  br label %494

494:                                              ; preds = %492, %477, %475
  %495 = load i32, i32* %294, align 4
  %496 = load i32, i32* %293, align 8
  %497 = icmp eq i32 %495, %496
  br i1 %497, label %517, label %498, !prof !2

498:                                              ; preds = %494
  %499 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %292, align 8
  %500 = zext i32 %495 to i64
  %501 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %324, align 8
  %502 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %499, i64 %500, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %501, %"class.blink::QualifiedName::QualifiedNameImpl"** %502, align 8
  %503 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %501, null
  br i1 %503, label %511, label %504

504:                                              ; preds = %498
  %505 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 1
  %506 = load i32, i32* %505, align 4
  %507 = and i32 %506, 16777216
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %510) #15
  br label %511

511:                                              ; preds = %509, %504, %498
  %512 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %499, i64 %500, i32 1
  %513 = load i64, i64* %328, align 8
  %514 = bitcast %"class.WTF::AtomicString"* %512 to i64*
  store i64 %513, i64* %514, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %327, align 8
  %515 = load i32, i32* %294, align 4
  %516 = add i32 %515, 1
  store i32 %516, i32* %294, align 4
  br label %533

517:                                              ; preds = %494
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2008"* nonnull %21, %"class.blink::Attribute"* nonnull dereferenceable(16) %19) #15
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %517
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %518) #15
  br label %533

533:                                              ; preds = %532, %529, %517, %511
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %329) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %323) #15
  br label %534

534:                                              ; preds = %533, %463
  %535 = phi i32 [ 0, %533 ], [ 1, %463 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #15
  %536 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %534
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %537
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i32 [ %545, %544 ], [ %543, %537 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #15
  br label %550

550:                                              ; preds = %549, %546, %534
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %552 = icmp eq %"class.WTF::StringImpl"* %551, null
  br i1 %552, label %566, label %553

553:                                              ; preds = %550
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = load atomic i32, i32* %554 monotonic, align 4
  %556 = and i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  br i1 %557, label %560, label %562

560:                                              ; preds = %553
  %561 = add i32 %559, -1
  store i32 %561, i32* %558, align 4
  br label %562

562:                                              ; preds = %560, %553
  %563 = phi i32 [ %561, %560 ], [ %559, %553 ]
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %566

565:                                              ; preds = %562
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %551) #15
  br label %566

566:                                              ; preds = %565, %562, %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #15
  %567 = icmp ne i32 %535, 0
  %568 = add nuw nsw i64 %332, 1
  %569 = icmp eq i64 %568, %330
  %570 = or i1 %569, %567
  br i1 %570, label %571, label %331

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 4
  %573 = load i32, i32* %572, align 8
  %574 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %22, i64 0, i32 0, i32 4
  %575 = icmp eq i32 %573, 0
  br i1 %575, label %591, label %576

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %578 = load i8, i8* %577, align 1, !range !3
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %582, label %580

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %581) #15
  br label %582

582:                                              ; preds = %580, %576
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %30) #15
  %583 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %584 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %583, align 8
  %585 = icmp eq %"class.blink::XMLParserContext"* %584, null
  br i1 %585, label %1546, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %584, i64 0, i32 1
  %588 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %587, align 8
  %589 = icmp eq %struct._xmlParserCtxt* %588, null
  br i1 %589, label %1546, label %590

590:                                              ; preds = %586
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %588) #15
  br label %1546

591:                                              ; preds = %306, %571
  %592 = phi i32* [ %307, %306 ], [ %574, %571 ]
  %593 = bitcast i8** %8 to %"struct.blink::xmlSAX2Attributes"*
  %594 = icmp sgt i32 %6, 0
  br i1 %594, label %595, label %1057

595:                                              ; preds = %591
  %596 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %597 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %598 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %599 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 0
  %600 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 27, i32 0, i32 1
  %601 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  %602 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %603 = bitcast %"class.WTF::StringAppend.2336"* %12 to i8*
  %604 = bitcast %"class.WTF::StringAppend.2016"* %13 to i8*
  %605 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %606 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %13, i64 0, i32 1
  %607 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %12, i64 0, i32 1, i32 0, i32 0
  %608 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = bitcast %"class.blink::QualifiedName"* %14 to i8*
  %610 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %611 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %612 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %611, i64 0, i32 0, i32 0
  %613 = bitcast %"class.blink::Attribute"* %15 to i8*
  %614 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %615 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %616 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  %617 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %616, i64 0, i32 0, i32 0, i32 0
  %618 = bitcast %"class.WTF::AtomicString"* %616 to i64*
  %619 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  %620 = zext i32 %6 to i64
  br label %621

621:                                              ; preds = %1052, %595
  %622 = phi i64 [ 0, %595 ], [ %1054, %1052 ]
  %623 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %593, i64 %622
  %624 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %593, i64 %622, i32 4
  %625 = bitcast i8** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %593, i64 %622, i32 3
  %628 = bitcast i8** %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = sub i64 %626, %629
  %631 = inttoptr i64 %629 to i8*
  %632 = shl i64 %630, 32
  %633 = ashr exact i64 %632, 32
  %634 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8* %631, i64 %633) #15
  %635 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %593, i64 %622, i32 1
  %636 = load i8*, i8** %635, align 8
  %637 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %636) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %596) #15
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %597, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %637, null
  br i1 %638, label %639, label %640

639:                                              ; preds = %621
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %601) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %602, align 8
  br label %770

640:                                              ; preds = %621
  %641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %767, label %644

644:                                              ; preds = %640
  %645 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %593, i64 %622, i32 2
  %646 = load i8*, i8** %645, align 8
  %647 = icmp eq i8* %646, null
  br i1 %647, label %666, label %648

648:                                              ; preds = %644
  %649 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* nonnull %646) #15
  %650 = ptrtoint %"class.WTF::StringImpl"* %649 to i64
  %651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  store i64 %650, i64* %598, align 8
  %652 = icmp eq %"class.WTF::StringImpl"* %651, null
  br i1 %652, label %767, label %653

653:                                              ; preds = %648
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 0
  %659 = load i32, i32* %658, align 4
  br i1 %657, label %660, label %662

660:                                              ; preds = %653
  %661 = add i32 %659, -1
  store i32 %661, i32* %658, align 4
  br label %662

662:                                              ; preds = %660, %653
  %663 = phi i32 [ %661, %660 ], [ %659, %653 ]
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %767

665:                                              ; preds = %662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %651) #15
  br label %767

666:                                              ; preds = %644
  %667 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %599, align 8
  %668 = icmp eq %"struct.WTF::KeyValuePair"* %667, null
  %669 = load i32, i32* %600, align 8
  br i1 %668, label %719, label %670

670:                                              ; preds = %666
  %671 = add i32 %669, -1
  %672 = zext i32 %671 to i64
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %674 = load atomic i32, i32* %673 monotonic, align 4
  %675 = lshr i32 %674, 8
  %676 = and i32 %675, %671
  %677 = zext i32 %676 to i64
  %678 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %667, i64 %677
  %679 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %678, i64 0, i32 0, i32 0, i32 0, i32 0
  %680 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %681 = icmp eq %"class.WTF::StringImpl"* %680, null
  br i1 %681, label %719, label %682

682:                                              ; preds = %670
  %683 = xor i32 %675, -1
  %684 = lshr i32 %674, 31
  %685 = add nsw i32 %684, %683
  %686 = shl i32 %685, 12
  %687 = xor i32 %686, %685
  %688 = lshr i32 %687, 7
  %689 = xor i32 %688, %687
  %690 = shl i32 %689, 2
  %691 = xor i32 %690, %689
  %692 = lshr i32 %691, 20
  %693 = xor i32 %692, %691
  %694 = or i32 %693, 1
  %695 = zext i32 %694 to i64
  br label %696

696:                                              ; preds = %706, %682
  %697 = phi %"struct.WTF::KeyValuePair"* [ %678, %682 ], [ %711, %706 ]
  %698 = phi i64 [ %677, %682 ], [ %710, %706 ]
  %699 = phi i64 [ 0, %682 ], [ %708, %706 ]
  %700 = bitcast %"struct.WTF::KeyValuePair"* %697 to i8**
  %701 = load i8*, i8** %700, align 8
  %702 = icmp ne i8* %701, inttoptr (i64 -1 to i8*)
  %703 = bitcast i8* %701 to %"class.WTF::StringImpl"*
  %704 = icmp eq %"class.WTF::StringImpl"* %637, %703
  %705 = and i1 %702, %704
  br i1 %705, label %715, label %706

706:                                              ; preds = %696
  %707 = icmp eq i64 %699, 0
  %708 = select i1 %707, i64 %695, i64 %699
  %709 = add i64 %708, %698
  %710 = and i64 %709, %672
  %711 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %667, i64 %710
  %712 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %711, i64 0, i32 0, i32 0, i32 0, i32 0
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %719, label %696

715:                                              ; preds = %696
  %716 = icmp eq %"struct.WTF::KeyValuePair"* %697, null
  br i1 %716, label %719, label %717

717:                                              ; preds = %715
  %718 = zext i32 %669 to i64
  br label %722

719:                                              ; preds = %706, %715, %670, %666
  %720 = zext i32 %669 to i64
  %721 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %667, i64 %720
  br label %722

722:                                              ; preds = %719, %717
  %723 = phi i64 [ %718, %717 ], [ %720, %719 ]
  %724 = phi %"struct.WTF::KeyValuePair"* [ %697, %717 ], [ %721, %719 ]
  %725 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %667, i64 %723
  %726 = icmp eq %"struct.WTF::KeyValuePair"* %724, %725
  br i1 %726, label %766, label %727

727:                                              ; preds = %722
  %728 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %724, i64 0, i32 1, i32 0, i32 0, i32 0
  %729 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %728, align 8
  %730 = icmp eq %"class.WTF::StringImpl"* %729, null
  br i1 %730, label %746, label %731

731:                                              ; preds = %727
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %729, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %733 = load atomic i32, i32* %732 monotonic, align 4
  %734 = and i32 %733, 2
  %735 = icmp eq i32 %734, 0
  br i1 %735, label %736, label %746

736:                                              ; preds = %731
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %729, i64 0, i32 0
  %738 = load i32, i32* %737, align 4
  %739 = zext i32 %738 to i33
  %740 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %739, i33 1) #15
  %741 = extractvalue { i33, i1 } %740, 1
  %742 = extractvalue { i33, i1 } %740, 0
  %743 = icmp slt i33 %742, 0
  %744 = or i1 %741, %743
  br i1 %744, label %745, label %748, !prof !2

745:                                              ; preds = %736
  call void @llvm.trap() #15
  unreachable

746:                                              ; preds = %731, %727
  %747 = ptrtoint %"class.WTF::StringImpl"* %729 to i64
  store i64 %747, i64* %598, align 8
  br label %767

748:                                              ; preds = %736
  %749 = trunc i33 %742 to i32
  store i32 %749, i32* %737, align 4
  %750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %751 = ptrtoint %"class.WTF::StringImpl"* %729 to i64
  store i64 %751, i64* %598, align 8
  %752 = icmp eq %"class.WTF::StringImpl"* %750, null
  br i1 %752, label %767, label %753

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 0
  %759 = load i32, i32* %758, align 4
  br i1 %757, label %760, label %762

760:                                              ; preds = %753
  %761 = add i32 %759, -1
  store i32 %761, i32* %758, align 4
  br label %762

762:                                              ; preds = %760, %753
  %763 = phi i32 [ %761, %760 ], [ %759, %753 ]
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %767

765:                                              ; preds = %762
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %750) #15
  br label %767

766:                                              ; preds = %722
  store i64 0, i64* %598, align 8
  br label %767

767:                                              ; preds = %746, %748, %762, %765, %766, %640, %648, %662, %665
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %601) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %602, align 8
  %768 = load i32, i32* %641, align 4
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %774

770:                                              ; preds = %767, %639
  %771 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %623, i64 0, i32 0
  %772 = load i8*, i8** %771, align 8
  %773 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %772) #15
  store %"class.WTF::StringImpl"* %773, %"class.WTF::StringImpl"** %602, align 8
  br label %909

774:                                              ; preds = %767
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %603) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %604) #15
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %791

781:                                              ; preds = %774
  %782 = zext i32 %780 to i33
  %783 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %782, i33 1) #15
  %784 = extractvalue { i33, i1 } %783, 1
  %785 = extractvalue { i33, i1 } %783, 0
  %786 = icmp slt i33 %785, 0
  %787 = or i1 %784, %786
  br i1 %787, label %788, label %789, !prof !2

788:                                              ; preds = %781
  call void @llvm.trap() #15
  unreachable

789:                                              ; preds = %781
  %790 = trunc i33 %785 to i32
  store i32 %790, i32* %779, align 4
  br label %791

791:                                              ; preds = %789, %774
  %792 = phi i32 [ %790, %789 ], [ %780, %774 ]
  %793 = load atomic i32, i32* %775 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %806

796:                                              ; preds = %791
  %797 = zext i32 %792 to i33
  %798 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %797, i33 1) #15
  %799 = extractvalue { i33, i1 } %798, 1
  %800 = extractvalue { i33, i1 } %798, 0
  %801 = icmp slt i33 %800, 0
  %802 = or i1 %799, %801
  br i1 %802, label %803, label %804, !prof !2

803:                                              ; preds = %796
  call void @llvm.trap() #15
  unreachable

804:                                              ; preds = %796
  %805 = trunc i33 %800 to i32
  store i32 %805, i32* %779, align 4
  br label %806

806:                                              ; preds = %804, %791
  %807 = phi i32 [ %805, %804 ], [ %792, %791 ]
  %808 = load atomic i32, i32* %775 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %813

811:                                              ; preds = %806
  %812 = add i32 %807, -1
  store i32 %812, i32* %779, align 4
  br label %813

813:                                              ; preds = %811, %806
  %814 = phi i32 [ %812, %811 ], [ %807, %806 ]
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %817

816:                                              ; preds = %813
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %637) #15
  br label %817

817:                                              ; preds = %816, %813
  store %"class.WTF::StringImpl"* %637, %"class.WTF::StringImpl"** %605, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8** %606, align 8
  %818 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %623, i64 0, i32 0
  %819 = load i8*, i8** %818, align 8
  %820 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %819) #15
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2336"* nonnull sret %12, %"class.WTF::StringAppend.2016"* nonnull dereferenceable(16) %13, %"class.WTF::StringImpl"* %820) #15
  %821 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend.2336"* nonnull %12) #15
  %822 = icmp eq %"class.WTF::StringImpl"* %821, null
  br i1 %822, label %859, label %823

823:                                              ; preds = %817
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %821, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load atomic i32, i32* %824 acquire, align 4
  %826 = and i32 %825, 4
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %844, label %828

828:                                              ; preds = %823
  %829 = load atomic i32, i32* %824 monotonic, align 4
  %830 = and i32 %829, 2
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %846

832:                                              ; preds = %828
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %821, i64 0, i32 0
  %834 = load i32, i32* %833, align 4
  %835 = zext i32 %834 to i33
  %836 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %835, i33 1) #15
  %837 = extractvalue { i33, i1 } %836, 1
  %838 = extractvalue { i33, i1 } %836, 0
  %839 = icmp slt i33 %838, 0
  %840 = or i1 %837, %839
  br i1 %840, label %841, label %842, !prof !2

841:                                              ; preds = %832
  call void @llvm.trap() #15
  unreachable

842:                                              ; preds = %832
  %843 = trunc i33 %838 to i32
  store i32 %843, i32* %833, align 4
  br label %846

844:                                              ; preds = %823
  %845 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %821) #15
  br label %846

846:                                              ; preds = %844, %842, %828
  %847 = phi %"class.WTF::StringImpl"* [ %821, %842 ], [ %821, %828 ], [ %845, %844 ]
  %848 = load atomic i32, i32* %824 monotonic, align 4
  %849 = and i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %821, i64 0, i32 0
  %852 = load i32, i32* %851, align 4
  br i1 %850, label %853, label %855

853:                                              ; preds = %846
  %854 = add i32 %852, -1
  store i32 %854, i32* %851, align 4
  br label %855

855:                                              ; preds = %853, %846
  %856 = phi i32 [ %854, %853 ], [ %852, %846 ]
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %855
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %821) #15
  br label %859

859:                                              ; preds = %858, %855, %817
  %860 = phi %"class.WTF::StringImpl"* [ %847, %855 ], [ %847, %858 ], [ null, %817 ]
  store %"class.WTF::StringImpl"* %860, %"class.WTF::StringImpl"** %602, align 8
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  %862 = icmp eq %"class.WTF::StringImpl"* %861, null
  br i1 %862, label %876, label %863

863:                                              ; preds = %859
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %861) #15
  br label %876

876:                                              ; preds = %875, %872, %859
  %877 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %878 = icmp eq %"class.WTF::StringImpl"* %877, null
  br i1 %878, label %892, label %879

879:                                              ; preds = %876
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = load atomic i32, i32* %880 monotonic, align 4
  %882 = and i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 0
  %885 = load i32, i32* %884, align 4
  br i1 %883, label %886, label %888

886:                                              ; preds = %879
  %887 = add i32 %885, -1
  store i32 %887, i32* %884, align 4
  br label %888

888:                                              ; preds = %886, %879
  %889 = phi i32 [ %887, %886 ], [ %885, %879 ]
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %891, label %892

891:                                              ; preds = %888
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %877) #15
  br label %892

892:                                              ; preds = %891, %888, %876
  %893 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %605, align 8
  %894 = icmp eq %"class.WTF::StringImpl"* %893, null
  br i1 %894, label %908, label %895

895:                                              ; preds = %892
  %896 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %897 = load atomic i32, i32* %896 monotonic, align 4
  %898 = and i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  br i1 %899, label %902, label %904

902:                                              ; preds = %895
  %903 = add i32 %901, -1
  store i32 %903, i32* %900, align 4
  br label %904

904:                                              ; preds = %902, %895
  %905 = phi i32 [ %903, %902 ], [ %901, %895 ]
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %908

907:                                              ; preds = %904
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #15
  br label %908

908:                                              ; preds = %907, %904, %892
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %604) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %603) #15
  br label %909

909:                                              ; preds = %908, %770
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %609) #15
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %610, align 8
  %910 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %612, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %910, %"class.blink::QualifiedName::QualifiedNameImpl"** %610, align 8
  %911 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %910, null
  br i1 %911, label %919, label %912

912:                                              ; preds = %909
  %913 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %910, i64 0, i32 1
  %914 = load i32, i32* %913, align 4
  %915 = and i32 %914, 16777216
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %917, label %919

917:                                              ; preds = %912
  %918 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %910, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %918) #15
  br label %919

919:                                              ; preds = %917, %912, %909
  %920 = call zeroext i1 @_ZN5blink7Element18ParseAttributeNameERNS_13QualifiedNameERKN3WTF12AtomicStringES6_RNS_14ExceptionStateE(%"class.blink::QualifiedName"* nonnull dereferenceable(8) %14, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %303) #15
  br i1 %920, label %921, label %990

921:                                              ; preds = %919
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %613) #15
  %922 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %610, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %922, %"class.blink::QualifiedName::QualifiedNameImpl"** %614, align 8
  %923 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %922, null
  br i1 %923, label %931, label %924

924:                                              ; preds = %921
  %925 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %922, i64 0, i32 1
  %926 = load i32, i32* %925, align 4
  %927 = and i32 %926, 16777216
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %931

929:                                              ; preds = %924
  %930 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %922, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %930) #15
  br label %931

931:                                              ; preds = %929, %924, %921
  store %"class.WTF::StringImpl"* %634, %"class.WTF::StringImpl"** %615, align 8
  %932 = icmp eq %"class.WTF::StringImpl"* %634, null
  br i1 %932, label %950, label %933

933:                                              ; preds = %931
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %950

938:                                              ; preds = %933
  %939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 0
  %940 = load i32, i32* %939, align 4
  %941 = zext i32 %940 to i33
  %942 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %941, i33 1) #15
  %943 = extractvalue { i33, i1 } %942, 1
  %944 = extractvalue { i33, i1 } %942, 0
  %945 = icmp slt i33 %944, 0
  %946 = or i1 %943, %945
  br i1 %946, label %947, label %948, !prof !2

947:                                              ; preds = %938
  call void @llvm.trap() #15
  unreachable

948:                                              ; preds = %938
  %949 = trunc i33 %944 to i32
  store i32 %949, i32* %939, align 4
  br label %950

950:                                              ; preds = %948, %933, %931
  %951 = load i32, i32* %294, align 4
  %952 = load i32, i32* %293, align 8
  %953 = icmp eq i32 %951, %952
  br i1 %953, label %973, label %954, !prof !2

954:                                              ; preds = %950
  %955 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %292, align 8
  %956 = zext i32 %951 to i64
  %957 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %614, align 8
  %958 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %955, i64 %956, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %957, %"class.blink::QualifiedName::QualifiedNameImpl"** %958, align 8
  %959 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %957, null
  br i1 %959, label %967, label %960

960:                                              ; preds = %954
  %961 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %957, i64 0, i32 1
  %962 = load i32, i32* %961, align 4
  %963 = and i32 %962, 16777216
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %965, label %967

965:                                              ; preds = %960
  %966 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %957, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %966) #15
  br label %967

967:                                              ; preds = %965, %960, %954
  %968 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %955, i64 %956, i32 1
  %969 = load i64, i64* %618, align 8
  %970 = bitcast %"class.WTF::AtomicString"* %968 to i64*
  store i64 %969, i64* %970, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %617, align 8
  %971 = load i32, i32* %294, align 4
  %972 = add i32 %971, 1
  store i32 %972, i32* %294, align 4
  br label %989

973:                                              ; preds = %950
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2008"* nonnull %21, %"class.blink::Attribute"* nonnull dereferenceable(16) %15) #15
  %974 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %975 = icmp eq %"class.WTF::StringImpl"* %974, null
  br i1 %975, label %989, label %976

976:                                              ; preds = %973
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = load atomic i32, i32* %977 monotonic, align 4
  %979 = and i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 0
  %982 = load i32, i32* %981, align 4
  br i1 %980, label %983, label %985

983:                                              ; preds = %976
  %984 = add i32 %982, -1
  store i32 %984, i32* %981, align 4
  br label %985

985:                                              ; preds = %983, %976
  %986 = phi i32 [ %984, %983 ], [ %982, %976 ]
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %989

988:                                              ; preds = %985
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %974) #15
  br label %989

989:                                              ; preds = %988, %985, %973, %967
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %619) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %613) #15
  br label %990

990:                                              ; preds = %989, %919
  %991 = phi i32 [ 0, %989 ], [ 1, %919 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %609) #15
  %992 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %602, align 8
  %993 = icmp eq %"class.WTF::StringImpl"* %992, null
  br i1 %993, label %1007, label %994

994:                                              ; preds = %990
  %995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %996 = load atomic i32, i32* %995 monotonic, align 4
  %997 = and i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 0
  %1000 = load i32, i32* %999, align 4
  br i1 %998, label %1001, label %1003

1001:                                             ; preds = %994
  %1002 = add i32 %1000, -1
  store i32 %1002, i32* %999, align 4
  br label %1003

1003:                                             ; preds = %1001, %994
  %1004 = phi i32 [ %1002, %1001 ], [ %1000, %994 ]
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1006, label %1007

1006:                                             ; preds = %1003
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %992) #15
  br label %1007

1007:                                             ; preds = %1006, %1003, %990
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %601) #15
  %1008 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %1009 = icmp eq %"class.WTF::StringImpl"* %1008, null
  br i1 %1009, label %1023, label %1010

1010:                                             ; preds = %1007
  %1011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1008, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1012 = load atomic i32, i32* %1011 monotonic, align 4
  %1013 = and i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1008, i64 0, i32 0
  %1016 = load i32, i32* %1015, align 4
  br i1 %1014, label %1017, label %1019

1017:                                             ; preds = %1010
  %1018 = add i32 %1016, -1
  store i32 %1018, i32* %1015, align 4
  br label %1019

1019:                                             ; preds = %1017, %1010
  %1020 = phi i32 [ %1018, %1017 ], [ %1016, %1010 ]
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1019
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1008) #15
  br label %1023

1023:                                             ; preds = %1022, %1019, %1007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %596) #15
  br i1 %638, label %1037, label %1024

1024:                                             ; preds = %1023
  %1025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1026 = load atomic i32, i32* %1025 monotonic, align 4
  %1027 = and i32 %1026, 2
  %1028 = icmp eq i32 %1027, 0
  %1029 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %1030 = load i32, i32* %1029, align 4
  br i1 %1028, label %1031, label %1033

1031:                                             ; preds = %1024
  %1032 = add i32 %1030, -1
  store i32 %1032, i32* %1029, align 4
  br label %1033

1033:                                             ; preds = %1031, %1024
  %1034 = phi i32 [ %1032, %1031 ], [ %1030, %1024 ]
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1037

1036:                                             ; preds = %1033
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %637) #15
  br label %1037

1037:                                             ; preds = %1036, %1033, %1023
  %1038 = icmp eq %"class.WTF::StringImpl"* %634, null
  br i1 %1038, label %1052, label %1039

1039:                                             ; preds = %1037
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1041 = load atomic i32, i32* %1040 monotonic, align 4
  %1042 = and i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %634, i64 0, i32 0
  %1045 = load i32, i32* %1044, align 4
  br i1 %1043, label %1046, label %1048

1046:                                             ; preds = %1039
  %1047 = add i32 %1045, -1
  store i32 %1047, i32* %1044, align 4
  br label %1048

1048:                                             ; preds = %1046, %1039
  %1049 = phi i32 [ %1047, %1046 ], [ %1045, %1039 ]
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1052

1051:                                             ; preds = %1048
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %634) #15
  br label %1052

1052:                                             ; preds = %1051, %1048, %1037
  %1053 = icmp ne i32 %991, 0
  %1054 = add nuw nsw i64 %622, 1
  %1055 = icmp eq i64 %1054, %620
  %1056 = or i1 %1055, %1053
  br i1 %1056, label %1057, label %621

1057:                                             ; preds = %1052, %591
  %1058 = bitcast %"class.WTF::AtomicString"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1058) #15
  %1059 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1059, align 8
  %1060 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %292, align 8
  %1061 = load i32, i32* %294, align 4
  %1062 = zext i32 %1061 to i64
  %1063 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1060, i64 %1062
  %1064 = icmp eq i32 %1061, 0
  br i1 %1064, label %1118, label %1065

1065:                                             ; preds = %1057
  %1066 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIsAttrE, align 8
  %1067 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1066, i64 0, i32 0, i32 0
  %1068 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1067, align 8
  br label %1069

1069:                                             ; preds = %1065, %1115
  %1070 = phi %"class.blink::Attribute"* [ %1060, %1065 ], [ %1116, %1115 ]
  %1071 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1070, i64 0, i32 0, i32 0, i32 0
  %1072 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1071, align 8
  %1073 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1072, %1068
  br i1 %1073, label %1074, label %1115

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1070, i64 0, i32 1, i32 0, i32 0, i32 0
  %1076 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1075, align 8
  %1077 = icmp eq %"class.WTF::StringImpl"* %1076, null
  br i1 %1077, label %1093, label %1078

1078:                                             ; preds = %1074
  %1079 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1076, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1080 = load atomic i32, i32* %1079 monotonic, align 4
  %1081 = and i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  br i1 %1082, label %1083, label %1093

1083:                                             ; preds = %1078
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1076, i64 0, i32 0
  %1085 = load i32, i32* %1084, align 4
  %1086 = zext i32 %1085 to i33
  %1087 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1086, i33 1) #15
  %1088 = extractvalue { i33, i1 } %1087, 1
  %1089 = extractvalue { i33, i1 } %1087, 0
  %1090 = icmp slt i33 %1089, 0
  %1091 = or i1 %1088, %1090
  br i1 %1091, label %1092, label %1096, !prof !2

1092:                                             ; preds = %1083
  call void @llvm.trap() #15
  unreachable

1093:                                             ; preds = %1078, %1074
  %1094 = ptrtoint %"class.WTF::StringImpl"* %1076 to i64
  %1095 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %1094, i64* %1095, align 8
  br label %1118

1096:                                             ; preds = %1083
  %1097 = trunc i33 %1089 to i32
  store i32 %1097, i32* %1084, align 4
  %1098 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1059, align 8
  %1099 = ptrtoint %"class.WTF::StringImpl"* %1076 to i64
  %1100 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %1099, i64* %1100, align 8
  %1101 = icmp eq %"class.WTF::StringImpl"* %1098, null
  br i1 %1101, label %1118, label %1102

1102:                                             ; preds = %1096
  %1103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1104 = load atomic i32, i32* %1103 monotonic, align 4
  %1105 = and i32 %1104, 2
  %1106 = icmp eq i32 %1105, 0
  %1107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 0
  %1108 = load i32, i32* %1107, align 4
  br i1 %1106, label %1109, label %1111

1109:                                             ; preds = %1102
  %1110 = add i32 %1108, -1
  store i32 %1110, i32* %1107, align 4
  br label %1111

1111:                                             ; preds = %1109, %1102
  %1112 = phi i32 [ %1110, %1109 ], [ %1108, %1102 ]
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1114, label %1118

1114:                                             ; preds = %1111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1098) #15
  br label %1118

1115:                                             ; preds = %1069
  %1116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1070, i64 1
  %1117 = icmp eq %"class.blink::Attribute"* %1116, %1063
  br i1 %1117, label %1118, label %1069

1118:                                             ; preds = %1115, %1093, %1057, %1114, %1111, %1096
  %1119 = bitcast %"class.blink::QualifiedName"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1119) #15
  %1120 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %1120, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %24, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %20) #15
  %1121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %1122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1121, align 8
  %1123 = icmp eq %"class.WTF::StringImpl"* %1122, null
  br i1 %1123, label %1343, label %1124

1124:                                             ; preds = %1118
  %1125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1122, i64 0, i32 1
  %1126 = load i32, i32* %1125, align 4
  %1127 = icmp eq i32 %1126, 0
  br i1 %1127, label %1343, label %1128

1128:                                             ; preds = %1124
  %1129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %1130 = icmp eq %"class.WTF::StringImpl"* %1129, null
  br i1 %1130, label %1135, label %1131

1131:                                             ; preds = %1128
  %1132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1129, i64 0, i32 1
  %1133 = load i32, i32* %1132, align 4
  %1134 = icmp eq i32 %1133, 0
  br i1 %1134, label %1135, label %1343

1135:                                             ; preds = %1128, %1131
  %1136 = bitcast %"class.blink::QualifiedName"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1136) #15
  %1137 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %1138 = bitcast %"class.WTF::AtomicString"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1138) #15
  %1139 = bitcast %"class.WTF::StringAppend"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1139) #15
  %1140 = bitcast %"class.WTF::StringAppend.2016"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1140) #15
  %1141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1142 = load atomic i32, i32* %1141 monotonic, align 4
  %1143 = and i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1122, i64 0, i32 0
  %1146 = load i32, i32* %1145, align 4
  br i1 %1144, label %1147, label %1157

1147:                                             ; preds = %1135
  %1148 = zext i32 %1146 to i33
  %1149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1148, i33 1) #15
  %1150 = extractvalue { i33, i1 } %1149, 1
  %1151 = extractvalue { i33, i1 } %1149, 0
  %1152 = icmp slt i33 %1151, 0
  %1153 = or i1 %1150, %1152
  br i1 %1153, label %1154, label %1155, !prof !2

1154:                                             ; preds = %1147
  call void @llvm.trap() #15
  unreachable

1155:                                             ; preds = %1147
  %1156 = trunc i33 %1151 to i32
  store i32 %1156, i32* %1145, align 4
  br label %1157

1157:                                             ; preds = %1135, %1155
  %1158 = phi i32 [ %1156, %1155 ], [ %1146, %1135 ]
  %1159 = load atomic i32, i32* %1141 monotonic, align 4
  %1160 = and i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1122, i64 0, i32 0
  br i1 %1161, label %1163, label %1173

1163:                                             ; preds = %1157
  %1164 = zext i32 %1158 to i33
  %1165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1164, i33 1) #15
  %1166 = extractvalue { i33, i1 } %1165, 1
  %1167 = extractvalue { i33, i1 } %1165, 0
  %1168 = icmp slt i33 %1167, 0
  %1169 = or i1 %1166, %1168
  br i1 %1169, label %1170, label %1171, !prof !2

1170:                                             ; preds = %1163
  call void @llvm.trap() #15
  unreachable

1171:                                             ; preds = %1163
  %1172 = trunc i33 %1167 to i32
  store i32 %1172, i32* %1162, align 4
  br label %1173

1173:                                             ; preds = %1171, %1157
  %1174 = phi i32 [ %1172, %1171 ], [ %1158, %1157 ]
  %1175 = load atomic i32, i32* %1141 monotonic, align 4
  %1176 = and i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1173
  %1179 = add i32 %1174, -1
  store i32 %1179, i32* %1162, align 4
  br label %1180

1180:                                             ; preds = %1178, %1173
  %1181 = phi i32 [ %1179, %1178 ], [ %1174, %1173 ]
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1183, label %1184

1183:                                             ; preds = %1180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1122) #15
  br label %1184

1184:                                             ; preds = %1180, %1183
  %1185 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1122, %"class.WTF::StringImpl"** %1185, align 8
  %1186 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8** %1186, align 8
  %1187 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %1188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1187, align 8
  %1189 = icmp eq %"class.WTF::StringImpl"* %1188, null
  br i1 %1189, label %1207, label %1190

1190:                                             ; preds = %1184
  %1191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1192 = load atomic i32, i32* %1191 monotonic, align 4
  %1193 = and i32 %1192, 2
  %1194 = icmp eq i32 %1193, 0
  br i1 %1194, label %1195, label %1207

1195:                                             ; preds = %1190
  %1196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1188, i64 0, i32 0
  %1197 = load i32, i32* %1196, align 4
  %1198 = zext i32 %1197 to i33
  %1199 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1198, i33 1) #15
  %1200 = extractvalue { i33, i1 } %1199, 1
  %1201 = extractvalue { i33, i1 } %1199, 0
  %1202 = icmp slt i33 %1201, 0
  %1203 = or i1 %1200, %1202
  br i1 %1203, label %1204, label %1205, !prof !2

1204:                                             ; preds = %1195
  call void @llvm.trap() #15
  unreachable

1205:                                             ; preds = %1195
  %1206 = trunc i33 %1201 to i32
  store i32 %1206, i32* %1196, align 4
  br label %1207

1207:                                             ; preds = %1184, %1190, %1205
  call void @_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %27, %"class.WTF::StringAppend.2016"* nonnull dereferenceable(16) %28, %"class.WTF::StringImpl"* %1188)
  %1208 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %27) #15
  %1209 = icmp eq %"class.WTF::StringImpl"* %1208, null
  br i1 %1209, label %1246, label %1210

1210:                                             ; preds = %1207
  %1211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1212 = load atomic i32, i32* %1211 acquire, align 4
  %1213 = and i32 %1212, 4
  %1214 = icmp eq i32 %1213, 0
  br i1 %1214, label %1231, label %1215

1215:                                             ; preds = %1210
  %1216 = load atomic i32, i32* %1211 monotonic, align 4
  %1217 = and i32 %1216, 2
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1233

1219:                                             ; preds = %1215
  %1220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1208, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 4
  %1222 = zext i32 %1221 to i33
  %1223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1222, i33 1) #15
  %1224 = extractvalue { i33, i1 } %1223, 1
  %1225 = extractvalue { i33, i1 } %1223, 0
  %1226 = icmp slt i33 %1225, 0
  %1227 = or i1 %1224, %1226
  br i1 %1227, label %1228, label %1229, !prof !2

1228:                                             ; preds = %1219
  call void @llvm.trap() #15
  unreachable

1229:                                             ; preds = %1219
  %1230 = trunc i33 %1225 to i32
  store i32 %1230, i32* %1220, align 4
  br label %1233

1231:                                             ; preds = %1210
  %1232 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1208) #15
  br label %1233

1233:                                             ; preds = %1231, %1229, %1215
  %1234 = phi %"class.WTF::StringImpl"* [ %1208, %1229 ], [ %1208, %1215 ], [ %1232, %1231 ]
  %1235 = load atomic i32, i32* %1211 monotonic, align 4
  %1236 = and i32 %1235, 2
  %1237 = icmp eq i32 %1236, 0
  %1238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1208, i64 0, i32 0
  %1239 = load i32, i32* %1238, align 4
  br i1 %1237, label %1240, label %1242

1240:                                             ; preds = %1233
  %1241 = add i32 %1239, -1
  store i32 %1241, i32* %1238, align 4
  br label %1242

1242:                                             ; preds = %1240, %1233
  %1243 = phi i32 [ %1241, %1240 ], [ %1239, %1233 ]
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1246

1245:                                             ; preds = %1242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1208) #15
  br label %1246

1246:                                             ; preds = %1207, %1242, %1245
  %1247 = phi %"class.WTF::StringImpl"* [ %1234, %1242 ], [ %1234, %1245 ], [ null, %1207 ]
  %1248 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1247, %"class.WTF::StringImpl"** %1248, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %25, %"class.WTF::AtomicString"* dereferenceable(8) %1137, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %26, %"class.WTF::AtomicString"* dereferenceable(8) %1137) #15
  %1249 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %1250 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1249, align 8
  %1251 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1250, null
  br i1 %1251, label %1259, label %1252

1252:                                             ; preds = %1246
  %1253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1250, i64 0, i32 1
  %1254 = load i32, i32* %1253, align 4
  %1255 = and i32 %1254, 16777216
  %1256 = icmp eq i32 %1255, 0
  br i1 %1256, label %1257, label %1259

1257:                                             ; preds = %1252
  %1258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1250, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1258) #15
  br label %1259

1259:                                             ; preds = %1257, %1252, %1246
  %1260 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %1250 to i64
  %1261 = bitcast %"class.blink::QualifiedName"* %24 to i64*
  %1262 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1120, align 8
  store i64 %1260, i64* %1261, align 8
  %1263 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1262, null
  br i1 %1263, label %1276, label %1264

1264:                                             ; preds = %1259
  %1265 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1262, i64 0, i32 1
  %1266 = load i32, i32* %1265, align 4
  %1267 = and i32 %1266, 16777216
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1276

1269:                                             ; preds = %1264
  %1270 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1262, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1270) #15
  %1271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1262, i64 0, i32 0, i32 0, i32 0, i32 0
  %1272 = load i32, i32* %1271, align 4
  %1273 = icmp eq i32 %1272, 0
  br i1 %1273, label %1274, label %1276

1274:                                             ; preds = %1269
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %1262) #15
  %1275 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %1262 to i8*
  call void @free(i8* %1275) #15
  br label %1276

1276:                                             ; preds = %1259, %1264, %1269, %1274
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %25) #15
  %1277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1248, align 8
  %1278 = icmp eq %"class.WTF::StringImpl"* %1277, null
  br i1 %1278, label %1292, label %1279

1279:                                             ; preds = %1276
  %1280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1281 = load atomic i32, i32* %1280 monotonic, align 4
  %1282 = and i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  %1284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 0
  %1285 = load i32, i32* %1284, align 4
  br i1 %1283, label %1286, label %1288

1286:                                             ; preds = %1279
  %1287 = add i32 %1285, -1
  store i32 %1287, i32* %1284, align 4
  br label %1288

1288:                                             ; preds = %1286, %1279
  %1289 = phi i32 [ %1287, %1286 ], [ %1285, %1279 ]
  %1290 = icmp eq i32 %1289, 0
  br i1 %1290, label %1291, label %1292

1291:                                             ; preds = %1288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1277) #15
  br label %1292

1292:                                             ; preds = %1276, %1288, %1291
  %1293 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %1294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1293, align 8
  %1295 = icmp eq %"class.WTF::StringImpl"* %1294, null
  br i1 %1295, label %1309, label %1296

1296:                                             ; preds = %1292
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1298 = load atomic i32, i32* %1297 monotonic, align 4
  %1299 = and i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 0
  %1302 = load i32, i32* %1301, align 4
  br i1 %1300, label %1303, label %1305

1303:                                             ; preds = %1296
  %1304 = add i32 %1302, -1
  store i32 %1304, i32* %1301, align 4
  br label %1305

1305:                                             ; preds = %1303, %1296
  %1306 = phi i32 [ %1304, %1303 ], [ %1302, %1296 ]
  %1307 = icmp eq i32 %1306, 0
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1294) #15
  br label %1309

1309:                                             ; preds = %1308, %1305, %1292
  %1310 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1310, align 8
  %1312 = icmp eq %"class.WTF::StringImpl"* %1311, null
  br i1 %1312, label %1326, label %1313

1313:                                             ; preds = %1309
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1315 = load atomic i32, i32* %1314 monotonic, align 4
  %1316 = and i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 0
  %1319 = load i32, i32* %1318, align 4
  br i1 %1317, label %1320, label %1322

1320:                                             ; preds = %1313
  %1321 = add i32 %1319, -1
  store i32 %1321, i32* %1318, align 4
  br label %1322

1322:                                             ; preds = %1320, %1313
  %1323 = phi i32 [ %1321, %1320 ], [ %1319, %1313 ]
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %1326

1325:                                             ; preds = %1322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1311) #15
  br label %1326

1326:                                             ; preds = %1309, %1322, %1325
  %1327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1185, align 8
  %1328 = icmp eq %"class.WTF::StringImpl"* %1327, null
  br i1 %1328, label %1342, label %1329

1329:                                             ; preds = %1326
  %1330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1331 = load atomic i32, i32* %1330 monotonic, align 4
  %1332 = and i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1327, i64 0, i32 0
  %1335 = load i32, i32* %1334, align 4
  br i1 %1333, label %1336, label %1338

1336:                                             ; preds = %1329
  %1337 = add i32 %1335, -1
  store i32 %1337, i32* %1334, align 4
  br label %1338

1338:                                             ; preds = %1336, %1329
  %1339 = phi i32 [ %1337, %1336 ], [ %1335, %1329 ]
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1341, label %1342

1341:                                             ; preds = %1338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1327) #15
  br label %1342

1342:                                             ; preds = %1326, %1338, %1341
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1140) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1139) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1138) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1136) #15
  br label %1343

1343:                                             ; preds = %1118, %1342, %1131, %1124
  %1344 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %1345 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1344, align 8
  %1346 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1345, i64 0, i32 0, i32 3, i32 0, i32 0
  %1347 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1346, align 8
  %1348 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1347, i64 0, i32 2, i32 0, i32 0
  %1349 = load %"class.blink::Document"*, %"class.blink::Document"** %1348, align 8
  %1350 = load i8, i8* %287, align 8, !range !3
  %1351 = icmp eq i8 %1350, 0
  %1352 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 22, i32 0, i32 0
  %1353 = bitcast %"class.blink::Document"** %1352 to i64*
  %1354 = load i64, i64* %1353, align 8
  %1355 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %29, i64 0, i32 0
  store i8 1, i8* %1355, align 8
  %1356 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %29, i64 0, i32 2
  %1357 = bitcast %"class.blink::Document"** %1356 to i64*
  store i64 %1354, i64* %1357, align 8
  %1358 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %29, i64 0, i32 3
  %1359 = select i1 %1351, i8 2, i8 3
  store i8 %1359, i8* %1358, align 8, !alias.scope !5
  %1360 = call %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* %1349, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %24, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %29, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %23) #15
  %1361 = icmp eq %"class.blink::Element"* %1360, null
  br i1 %1361, label %1362, label %1377

1362:                                             ; preds = %1343
  %1363 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %1364 = load i8, i8* %1363, align 1, !range !3
  %1365 = icmp eq i8 %1364, 0
  br i1 %1365, label %1368, label %1366

1366:                                             ; preds = %1362
  %1367 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %1367) #15
  br label %1368

1368:                                             ; preds = %1366, %1362
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %30) #15
  %1369 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %1370 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %1369, align 8
  %1371 = icmp eq %"class.blink::XMLParserContext"* %1370, null
  br i1 %1371, label %1529, label %1372

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %1370, i64 0, i32 1
  %1374 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %1373, align 8
  %1375 = icmp eq %struct._xmlParserCtxt* %1374, null
  br i1 %1375, label %1529, label %1376

1376:                                             ; preds = %1372
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %1374) #15
  br label %1529

1377:                                             ; preds = %1343
  %1378 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 3
  %1379 = load i32, i32* %1378, align 4
  %1380 = add i32 %1379, -1
  %1381 = icmp ult i32 %1380, 2
  br i1 %1381, label %1383, label %1382

1382:                                             ; preds = %1377
  call void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %1360, %"class.WTF::Vector.2008"* nonnull dereferenceable(16) %21) #15
  br label %1383

1383:                                             ; preds = %1377, %1382
  call void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %1360, %"class.WTF::Vector.2008"* nonnull dereferenceable(16) %21) #15
  %1384 = load i32, i32* %592, align 8
  %1385 = icmp eq i32 %1384, 0
  br i1 %1385, label %1401, label %1386

1386:                                             ; preds = %1383
  %1387 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %1388 = load i8, i8* %1387, align 1, !range !3
  %1389 = icmp eq i8 %1388, 0
  br i1 %1389, label %1392, label %1390

1390:                                             ; preds = %1386
  %1391 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %1391) #15
  br label %1392

1392:                                             ; preds = %1390, %1386
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %30) #15
  %1393 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %1394 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %1393, align 8
  %1395 = icmp eq %"class.blink::XMLParserContext"* %1394, null
  br i1 %1395, label %1529, label %1396

1396:                                             ; preds = %1392
  %1397 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %1394, i64 0, i32 1
  %1398 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %1397, align 8
  %1399 = icmp eq %struct._xmlParserCtxt* %1398, null
  br i1 %1399, label %1529, label %1400

1400:                                             ; preds = %1396
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %1398) #15
  br label %1529

1401:                                             ; preds = %1383
  %1402 = bitcast %"class.blink::Element"* %1360 to void (%"class.blink::Element"*)***
  %1403 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %1402, align 8
  %1404 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %1403, i64 112
  %1405 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %1404, align 8
  call void %1405(%"class.blink::Element"* nonnull %1360) #15
  %1406 = bitcast %"class.blink::Element"* %1360 to i1 (%"class.blink::Element"*)***
  %1407 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1406, align 8
  %1408 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1407, i64 134
  %1409 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1408, align 8
  %1410 = call zeroext i1 %1409(%"class.blink::Element"* nonnull %1360) #15
  br i1 %1410, label %1411, label %1444

1411:                                             ; preds = %1401
  %1412 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %1413 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %1412, align 8
  %1414 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %1413, null
  br i1 %1414, label %1415, label %1423

1415:                                             ; preds = %1411
  %1416 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %1417 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %1416, align 8
  %1418 = icmp eq %"class.blink::XMLParserContext"* %1417, null
  br i1 %1418, label %1434, label %1419

1419:                                             ; preds = %1415
  %1420 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %1417, i64 0, i32 1
  %1421 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %1420, align 8
  %1422 = icmp eq %struct._xmlParserCtxt* %1421, null
  br i1 %1422, label %1434, label %1427

1423:                                             ; preds = %1411
  %1424 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %1413, i64 0, i32 1, i32 0, i32 0
  %1425 = bitcast i32* %1424 to <2 x i32>*
  %1426 = load <2 x i32>, <2 x i32>* %1425, align 8
  br label %1434

1427:                                             ; preds = %1419
  %1428 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %1421, i64 0, i32 9
  %1429 = load %struct._xmlParserInput*, %struct._xmlParserInput** %1428, align 8
  %1430 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %1429, i64 0, i32 7
  %1431 = bitcast i32* %1430 to <2 x i32>*
  %1432 = load <2 x i32>, <2 x i32>* %1431, align 4
  %1433 = add <2 x i32> %1432, <i32 -1, i32 -1>
  br label %1434

1434:                                             ; preds = %1419, %1415, %1423, %1427
  %1435 = phi <2 x i32> [ %1426, %1423 ], [ %1433, %1427 ], [ zeroinitializer, %1415 ], [ zeroinitializer, %1419 ]
  %1436 = extractelement <2 x i32> %1435, i32 1
  %1437 = zext i32 %1436 to i64
  %1438 = shl nuw i64 %1437, 32
  %1439 = extractelement <2 x i32> %1435, i32 0
  %1440 = zext i32 %1439 to i64
  %1441 = or i64 %1438, %1440
  %1442 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %1443 = bitcast %"class.WTF::TextPosition"* %1442 to i64*
  store i64 %1441, i64* %1443, align 8
  br label %1444

1444:                                             ; preds = %1434, %1401
  %1445 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1344, align 8
  %1446 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1360, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %1445, %"class.blink::Node"* %1446) #15
  %1447 = load i32, i32* %31, align 8
  %1448 = icmp sgt i32 %1447, 1
  br i1 %1448, label %1449, label %1464

1449:                                             ; preds = %1444
  %1450 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %1451 = load i8, i8* %1450, align 1, !range !3
  %1452 = icmp eq i8 %1451, 0
  br i1 %1452, label %1455, label %1453

1453:                                             ; preds = %1449
  %1454 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %1454) #15
  br label %1455

1455:                                             ; preds = %1453, %1449
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %30) #15
  %1456 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %1457 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %1456, align 8
  %1458 = icmp eq %"class.blink::XMLParserContext"* %1457, null
  br i1 %1458, label %1529, label %1459

1459:                                             ; preds = %1455
  %1460 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %1457, i64 0, i32 1
  %1461 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %1460, align 8
  %1462 = icmp eq %struct._xmlParserCtxt* %1461, null
  br i1 %1462, label %1529, label %1463

1463:                                             ; preds = %1459
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %1461) #15
  br label %1529

1464:                                             ; preds = %1444
  %1465 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1360, i64 0, i32 0, i32 0, i32 1
  %1466 = load i32, i32* %1465, align 8
  %1467 = and i32 %1466, 48
  %1468 = icmp eq i32 %1467, 0
  br i1 %1468, label %1469, label %1485

1469:                                             ; preds = %1464
  %1470 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %1471 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1470, i64 0, i32 0, i32 0, i32 0
  %1472 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1471, align 8
  %1473 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1446, i64 1, i32 2
  %1474 = bitcast %"class.blink::Member.50"* %1473 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1475 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1474, align 8
  %1476 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1475, i64 0, i32 3, i32 0, i32 0, i32 0
  %1477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1476, align 8
  %1478 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1472, i64 0, i32 3, i32 0, i32 0, i32 0
  %1479 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1478, align 8
  %1480 = icmp eq %"class.WTF::StringImpl"* %1477, %1479
  br i1 %1480, label %1481, label %1485

1481:                                             ; preds = %1469
  %1482 = bitcast %"class.blink::Element"* %1360 to %"class.blink::HTMLTemplateElement"*
  %1483 = call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement7contentEv(%"class.blink::HTMLTemplateElement"* nonnull %1482) #15
  %1484 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1483, i64 0, i32 0
  br label %1487

1485:                                             ; preds = %1469, %1464
  %1486 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1360, i64 0, i32 0
  br label %1487

1487:                                             ; preds = %1481, %1485
  %1488 = phi %"class.blink::ContainerNode"* [ %1484, %1481 ], [ %1486, %1485 ]
  call void @_ZN5blink17XMLDocumentParser15PushCurrentNodeEPNS_13ContainerNodeE(%"class.blink::XMLDocumentParser"* %0, %"class.blink::ContainerNode"* %1488)
  %1489 = load i32, i32* %1465, align 8
  %1490 = and i32 %1489, 48
  %1491 = icmp eq i32 %1490, 0
  br i1 %1491, label %1494, label %1492

1492:                                             ; preds = %1487
  %1493 = xor i1 %290, true
  br label %1512

1494:                                             ; preds = %1487
  %1495 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %1496 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1495, i64 0, i32 0, i32 0, i32 0
  %1497 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1496, align 8
  %1498 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1446, i64 1, i32 2
  %1499 = bitcast %"class.blink::Member.50"* %1498 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1500 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1499, align 8
  %1501 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1500, i64 0, i32 3, i32 0, i32 0, i32 0
  %1502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1501, align 8
  %1503 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1497, i64 0, i32 3, i32 0, i32 0, i32 0
  %1504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1503, align 8
  %1505 = icmp eq %"class.WTF::StringImpl"* %1502, %1504
  %1506 = bitcast %"class.blink::Element"* %1360 to %"class.blink::HTMLHtmlElement"*
  %1507 = select i1 %1505, %"class.blink::HTMLHtmlElement"* %1506, %"class.blink::HTMLHtmlElement"* null
  %1508 = icmp eq %"class.blink::HTMLHtmlElement"* %1507, null
  %1509 = xor i1 %290, true
  %1510 = or i1 %1508, %1509
  br i1 %1510, label %1512, label %1511

1511:                                             ; preds = %1494
  call void @_ZN5blink15HTMLHtmlElement16InsertedByParserEv(%"class.blink::HTMLHtmlElement"* nonnull %1507) #15
  br label %1529

1512:                                             ; preds = %1492, %1494
  %1513 = phi i1 [ %1493, %1492 ], [ %1509, %1494 ]
  %1514 = load i8, i8* %287, align 8, !range !3
  %1515 = icmp ne i8 %1514, 0
  %1516 = or i1 %1513, %1515
  br i1 %1516, label %1529, label %1517

1517:                                             ; preds = %1512
  %1518 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1519 = load %"class.blink::Document"*, %"class.blink::Document"** %1518, align 8
  %1520 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1519) #15
  %1521 = icmp eq %"class.blink::LocalFrame"* %1520, null
  br i1 %1521, label %1529, label %1522

1522:                                             ; preds = %1517
  %1523 = load %"class.blink::Document"*, %"class.blink::Document"** %1518, align 8
  %1524 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1523) #15
  %1525 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1524, i64 0, i32 10
  call void @_ZN5blink11FrameLoader32DispatchDocumentElementAvailableEv(%"class.blink::FrameLoader"* %1525) #15
  %1526 = load %"class.blink::Document"*, %"class.blink::Document"** %1518, align 8
  %1527 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1526) #15
  %1528 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1527, i64 0, i32 10
  call void @_ZN5blink11FrameLoader36RunScriptsAtDocumentElementAvailableEv(%"class.blink::FrameLoader"* %1528) #15
  br label %1529

1529:                                             ; preds = %1463, %1459, %1455, %1400, %1396, %1392, %1376, %1372, %1368, %1511, %1522, %1517, %1512
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1119) #15
  %1530 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1059, align 8
  %1531 = icmp eq %"class.WTF::StringImpl"* %1530, null
  br i1 %1531, label %1545, label %1532

1532:                                             ; preds = %1529
  %1533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1530, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1534 = load atomic i32, i32* %1533 monotonic, align 4
  %1535 = and i32 %1534, 2
  %1536 = icmp eq i32 %1535, 0
  %1537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1530, i64 0, i32 0
  %1538 = load i32, i32* %1537, align 4
  br i1 %1536, label %1539, label %1541

1539:                                             ; preds = %1532
  %1540 = add i32 %1538, -1
  store i32 %1540, i32* %1537, align 4
  br label %1541

1541:                                             ; preds = %1539, %1532
  %1542 = phi i32 [ %1540, %1539 ], [ %1538, %1532 ]
  %1543 = icmp eq i32 %1542, 0
  br i1 %1543, label %1544, label %1545

1544:                                             ; preds = %1541
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1530) #15
  br label %1545

1545:                                             ; preds = %1529, %1541, %1544
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1058) #15
  br label %1546

1546:                                             ; preds = %590, %586, %582, %1545
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %295) #15
  %1547 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %292, align 8
  %1548 = icmp eq %"class.blink::Attribute"* %1547, null
  br i1 %1548, label %1583, label %1549, !prof !4

1549:                                             ; preds = %1546
  %1550 = bitcast %"class.blink::Attribute"* %1547 to i8*
  %1551 = load i32, i32* %294, align 4
  %1552 = icmp eq i32 %1551, 0
  br i1 %1552, label %1581, label %1553, !prof !2

1553:                                             ; preds = %1549
  %1554 = zext i32 %1551 to i64
  %1555 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1547, i64 %1554
  br label %1556

1556:                                             ; preds = %1574, %1553
  %1557 = phi %"class.blink::Attribute"* [ %1576, %1574 ], [ %1547, %1553 ]
  %1558 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1557, i64 0, i32 1, i32 0, i32 0, i32 0
  %1559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1558, align 8
  %1560 = icmp eq %"class.WTF::StringImpl"* %1559, null
  br i1 %1560, label %1574, label %1561

1561:                                             ; preds = %1556
  %1562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1563 = load atomic i32, i32* %1562 monotonic, align 4
  %1564 = and i32 %1563, 2
  %1565 = icmp eq i32 %1564, 0
  %1566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1559, i64 0, i32 0
  %1567 = load i32, i32* %1566, align 4
  br i1 %1565, label %1568, label %1570

1568:                                             ; preds = %1561
  %1569 = add i32 %1567, -1
  store i32 %1569, i32* %1566, align 4
  br label %1570

1570:                                             ; preds = %1568, %1561
  %1571 = phi i32 [ %1569, %1568 ], [ %1567, %1561 ]
  %1572 = icmp eq i32 %1571, 0
  br i1 %1572, label %1573, label %1574

1573:                                             ; preds = %1570
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1559) #15
  br label %1574

1574:                                             ; preds = %1573, %1570, %1556
  %1575 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1557, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1575) #15
  %1576 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1557, i64 1
  %1577 = icmp eq %"class.blink::Attribute"* %1576, %1555
  br i1 %1577, label %1578, label %1556

1578:                                             ; preds = %1574
  store i32 0, i32* %294, align 4
  %1579 = bitcast %"class.WTF::Vector.2008"* %21 to i8**
  %1580 = load i8*, i8** %1579, align 8
  br label %1581

1581:                                             ; preds = %1578, %1549
  %1582 = phi i8* [ %1580, %1578 ], [ %1550, %1549 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1582) #15
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %292, align 8
  br label %1583

1583:                                             ; preds = %1546, %1581
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %291) #15
  %1584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %1585 = icmp eq %"class.WTF::StringImpl"* %1584, null
  br i1 %1585, label %1599, label %1586

1586:                                             ; preds = %1583
  %1587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1588 = load atomic i32, i32* %1587 monotonic, align 4
  %1589 = and i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  %1591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1584, i64 0, i32 0
  %1592 = load i32, i32* %1591, align 4
  br i1 %1590, label %1593, label %1595

1593:                                             ; preds = %1586
  %1594 = add i32 %1592, -1
  store i32 %1594, i32* %1591, align 4
  br label %1595

1595:                                             ; preds = %1593, %1586
  %1596 = phi i32 [ %1594, %1593 ], [ %1592, %1586 ]
  %1597 = icmp eq i32 %1596, 0
  br i1 %1597, label %1598, label %1599

1598:                                             ; preds = %1595
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1584) #15
  br label %1599

1599:                                             ; preds = %1583, %1595, %1598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #15
  br label %1600

1600:                                             ; preds = %107, %9, %1599, %94
  ret void
}

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.2016"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #5

declare %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement7contentEv(%"class.blink::HTMLTemplateElement"*) local_unnamed_addr #3

declare void @_ZN5blink15HTMLHtmlElement16InsertedByParserEv(%"class.blink::HTMLHtmlElement"*) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink11FrameLoader32DispatchDocumentElementAvailableEv(%"class.blink::FrameLoader"*) local_unnamed_addr #3

declare void @_ZN5blink11FrameLoader36RunScriptsAtDocumentElementAvailableEv(%"class.blink::FrameLoader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #15
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #15
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #15
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser12EndElementNsEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %324, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %84, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %13, align 8
  %15 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %17, align 8
  %19 = icmp eq %"class.blink::XMLParserContext"* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %18, i64 0, i32 1
  %22 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %21, align 8
  %23 = icmp eq %struct._xmlParserCtxt* %22, null
  br i1 %23, label %35, label %28

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %14, i64 0, i32 1, i32 0, i32 0
  %26 = bitcast i32* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 8
  br label %35

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %22, i64 0, i32 9
  %30 = load %struct._xmlParserInput*, %struct._xmlParserInput** %29, align 8
  %31 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %30, i64 0, i32 7
  %32 = bitcast i32* %31 to <2 x i32>*
  %33 = load <2 x i32>, <2 x i32>* %32, align 4
  %34 = add <2 x i32> %33, <i32 -1, i32 -1>
  br label %35

35:                                               ; preds = %20, %16, %24, %28
  %36 = phi <2 x i32> [ %27, %24 ], [ %34, %28 ], [ zeroinitializer, %16 ], [ zeroinitializer, %20 ]
  %37 = extractelement <2 x i32> %36, i32 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = extractelement <2 x i32> %36, i32 0
  %41 = zext i32 %40 to i64
  %42 = or i64 %39, %41
  %43 = tail call noalias i8* @malloc(i64 24) #15
  %44 = bitcast %"class.WTF::TextPosition"* %12 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = bitcast i8* %43 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %43, i64 8
  %48 = bitcast i8* %47 to i64*
  store i64 %42, i64* %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27PendingEndElementNSCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %45, i64* %50, align 8
  %51 = ptrtoint i8* %43 to i64
  %52 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %60, label %57

57:                                               ; preds = %35
  %58 = add i32 %56, 1
  %59 = icmp eq i32 %58, %53
  br i1 %59, label %69, label %71

60:                                               ; preds = %35
  %61 = icmp eq i32 %56, 0
  %62 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  br i1 %61, label %67, label %64

64:                                               ; preds = %60
  %65 = add i32 %63, -1
  %66 = icmp eq i32 %56, %65
  br i1 %66, label %69, label %71

67:                                               ; preds = %60
  %68 = icmp eq i32 %63, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %67, %64, %57
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %11) #15
  %70 = load i32, i32* %55, align 4
  br label %71

71:                                               ; preds = %69, %67, %64, %57
  %72 = phi i32 [ %56, %57 ], [ %56, %64 ], [ 0, %67 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %73, align 8
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %74, i64 %75
  %77 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, -1
  %80 = icmp eq i32 %72, %79
  %81 = add i32 %72, 1
  %82 = select i1 %80, i32 0, i32 %81
  store i32 %82, i32* %55, align 4
  %83 = bitcast %"class.std::__1::unique_ptr.35"* %76 to i64*
  store i64 %51, i64* %83, align 8
  br label %324

84:                                               ; preds = %6
  %85 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  br i1 %85, label %86, label %324

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %88 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %87, align 8
  %89 = icmp eq %"class.blink::ContainerNode"* %88, null
  br i1 %89, label %324, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %88, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 12
  %94 = icmp eq i32 %93, 0
  %95 = bitcast %"class.blink::ContainerNode"* %88 to %"class.blink::Element"*
  br i1 %94, label %124, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %98 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %99 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, -1
  %102 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %98, i32 %101) #15
  %103 = bitcast %"class.blink::Member.46"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.blink::Member.46"* %97 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %96
  %109 = inttoptr i64 %104 to i8*
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #15
  br label %111

111:                                              ; preds = %108, %96
  %112 = load i32, i32* %99, align 4
  %113 = add i32 %112, -1
  %114 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %98, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %114, align 8
  %116 = zext i32 %113 to i64
  %117 = zext i32 %112 to i64
  %118 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %115, i64 %116
  %119 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %115, i64 %117
  %120 = bitcast %"class.blink::Member.46"* %118 to i8*
  %121 = ptrtoint %"class.blink::Member.46"* %119 to i64
  %122 = ptrtoint %"class.blink::Member.46"* %118 to i64
  %123 = sub i64 %121, %122
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %120, i64 %123) #15
  store i32 %113, i32* %99, align 4
  br label %324

124:                                              ; preds = %90
  %125 = bitcast %"class.blink::ContainerNode"* %88 to void (%"class.blink::Element"*)***
  %126 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %126, i64 111
  %128 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %127, align 8
  tail call void %128(%"class.blink::Element"* nonnull %95) #15
  %129 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 20
  %130 = load i8, i8* %129, align 2, !range !3
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %124
  store i8 0, i8* %129, align 2
  %133 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 19
  store i8 1, i8* %133, align 1
  %134 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %135 = load i8, i8* %134, align 8, !range !3
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  store i8 1, i8* %7, align 2
  br label %138

138:                                              ; preds = %124, %132, %137
  %139 = bitcast %"class.blink::ContainerNode"* %88 to i1 (%"class.blink::Element"*)***
  %140 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %139, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %140, i64 134
  %142 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %141, align 8
  %143 = tail call zeroext i1 %142(%"class.blink::Element"* nonnull %95) #15
  br i1 %143, label %144, label %192

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, -1
  %148 = icmp ult i32 %147, 2
  br i1 %148, label %192, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %151 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %151, align 8
  %153 = icmp eq %"class.blink::ContainerNode"* %152, null
  br i1 %153, label %181, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %156 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, -1
  %159 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %155, i32 %158) #15
  %160 = bitcast %"class.blink::Member.46"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::Member.46"* %150 to i64*
  store atomic i64 %161, i64* %162 monotonic, align 8
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %154
  %166 = inttoptr i64 %161 to i8*
  %167 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #15
  br label %168

168:                                              ; preds = %165, %154
  %169 = load i32, i32* %156, align 4
  %170 = add i32 %169, -1
  %171 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %155, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %171, align 8
  %173 = zext i32 %170 to i64
  %174 = zext i32 %169 to i64
  %175 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %172, i64 %173
  %176 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %172, i64 %174
  %177 = bitcast %"class.blink::Member.46"* %175 to i8*
  %178 = ptrtoint %"class.blink::Member.46"* %176 to i64
  %179 = ptrtoint %"class.blink::Member.46"* %175 to i64
  %180 = sub i64 %178, %179
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %177, i64 %180) #15
  store i32 %170, i32* %156, align 4
  br label %181

181:                                              ; preds = %149, %168
  %182 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %88, i64 0, i32 0
  %183 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %183) #15
  %184 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %185, align 8
  %186 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %186, align 2
  %187 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %188 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %189 = bitcast %"class.WTF::StringImpl"** %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #15
  %190 = bitcast i8** %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %191 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  call void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"* %182, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %191) #15
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %183) #15
  br label %324

192:                                              ; preds = %144, %138
  %193 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23, i32 0, i32 0
  %194 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %193, align 8
  %195 = icmp eq %"class.blink::XMLParserScriptRunner"* %194, null
  br i1 %195, label %196, label %228

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %198 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %198, align 8
  %200 = icmp eq %"class.blink::ContainerNode"* %199, null
  br i1 %200, label %324, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %203 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = add i32 %204, -1
  %206 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %202, i32 %205) #15
  %207 = bitcast %"class.blink::Member.46"* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.blink::Member.46"* %197 to i64*
  store atomic i64 %208, i64* %209 monotonic, align 8
  %210 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %201
  %213 = inttoptr i64 %208 to i8*
  %214 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %213) #15
  br label %215

215:                                              ; preds = %212, %201
  %216 = load i32, i32* %203, align 4
  %217 = add i32 %216, -1
  %218 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %202, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %218, align 8
  %220 = zext i32 %217 to i64
  %221 = zext i32 %216 to i64
  %222 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %219, i64 %220
  %223 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %219, i64 %221
  %224 = bitcast %"class.blink::Member.46"* %222 to i8*
  %225 = ptrtoint %"class.blink::Member.46"* %223 to i64
  %226 = ptrtoint %"class.blink::Member.46"* %222 to i64
  %227 = sub i64 %225, %226
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %224, i64 %227) #15
  store i32 %217, i32* %203, align 4
  br label %324

228:                                              ; preds = %192
  %229 = load i32, i32* %91, align 8
  %230 = and i32 %229, 256
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %264

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %234 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %233, i64 0, i32 0, i32 0
  %235 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %234, align 8
  %236 = icmp eq %"class.blink::ContainerNode"* %235, null
  br i1 %236, label %324, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %239 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %240, -1
  %242 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %238, i32 %241) #15
  %243 = bitcast %"class.blink::Member.46"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.blink::Member.46"* %233 to i64*
  store atomic i64 %244, i64* %245 monotonic, align 8
  %246 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %251, label %248

248:                                              ; preds = %237
  %249 = inttoptr i64 %244 to i8*
  %250 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %249) #15
  br label %251

251:                                              ; preds = %248, %237
  %252 = load i32, i32* %239, align 4
  %253 = add i32 %252, -1
  %254 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %238, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %254, align 8
  %256 = zext i32 %253 to i64
  %257 = zext i32 %252 to i64
  %258 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %255, i64 %256
  %259 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %255, i64 %257
  %260 = bitcast %"class.blink::Member.46"* %258 to i8*
  %261 = ptrtoint %"class.blink::Member.46"* %259 to i64
  %262 = ptrtoint %"class.blink::Member.46"* %258 to i64
  %263 = sub i64 %261, %262
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %260, i64 %263) #15
  store i32 %253, i32* %239, align 4
  br label %324

264:                                              ; preds = %228
  %265 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %139, align 8
  %266 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %265, i64 134
  %267 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %266, align 8
  %268 = tail call zeroext i1 %267(%"class.blink::Element"* nonnull %95) #15
  br i1 %268, label %269, label %277

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 17
  store i8 1, i8* %270, align 1
  %271 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %193, align 8
  %272 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %273 = load %"class.blink::Document"*, %"class.blink::Document"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %275 = bitcast %"class.WTF::TextPosition"* %274 to i64*
  %276 = load i64, i64* %275, align 8
  tail call void @_ZN5blink21XMLParserScriptRunner20ProcessScriptElementERNS_8DocumentEPNS_7ElementEN3WTF12TextPositionE(%"class.blink::XMLParserScriptRunner"* %271, %"class.blink::Document"* dereferenceable(2848) %273, %"class.blink::Element"* nonnull %95, i64 %276) #15
  store i8 0, i8* %270, align 1
  br label %277

277:                                              ; preds = %269, %264
  %278 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %193, align 8
  %279 = icmp eq %"class.blink::XMLParserScriptRunner"* %278, null
  br i1 %279, label %289, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.blink::XMLParserScriptRunner", %"class.blink::XMLParserScriptRunner"* %278, i64 0, i32 1, i32 0, i32 0
  %282 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %281, align 8
  %283 = icmp eq %"class.blink::PendingScript"* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %286 = load i8, i8* %285, align 8, !range !3
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %284
  store i8 1, i8* %7, align 2
  br label %289

289:                                              ; preds = %280, %277, %288, %284
  %290 = load i32, i32* %3, align 8
  %291 = icmp eq i32 %290, 3
  br i1 %291, label %324, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7
  %294 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %294, align 8
  %296 = icmp eq %"class.blink::ContainerNode"* %295, null
  br i1 %296, label %324, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0
  %299 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %300, -1
  %302 = tail call dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"* %298, i32 %301) #15
  %303 = bitcast %"class.blink::Member.46"* %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.blink::Member.46"* %293 to i64*
  store atomic i64 %304, i64* %305 monotonic, align 8
  %306 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %297
  %309 = inttoptr i64 %304 to i8*
  %310 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %309) #15
  br label %311

311:                                              ; preds = %308, %297
  %312 = load i32, i32* %299, align 4
  %313 = add i32 %312, -1
  %314 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %298, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %314, align 8
  %316 = zext i32 %313 to i64
  %317 = zext i32 %312 to i64
  %318 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %315, i64 %316
  %319 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %315, i64 %317
  %320 = bitcast %"class.blink::Member.46"* %318 to i8*
  %321 = ptrtoint %"class.blink::Member.46"* %319 to i64
  %322 = ptrtoint %"class.blink::Member.46"* %318 to i64
  %323 = sub i64 %321, %322
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %320, i64 %323) #15
  store i32 %313, i32* %299, align 4
  br label %324

324:                                              ; preds = %86, %311, %292, %251, %232, %215, %196, %111, %181, %289, %84, %1, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser30CheckIfBlockingStyleSheetAddedEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 20
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 19
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  store i8 1, i8* %11, align 2
  br label %12

12:                                               ; preds = %10, %5, %1
  ret void
}

declare void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink21XMLParserScriptRunner20ProcessScriptElementERNS_8DocumentEPNS_7ElementEN3WTF12TextPositionE(%"class.blink::XMLParserScriptRunner"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::Element"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser20NotifyScriptExecutedEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 17
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN5blink17XMLDocumentParser13ResumeParsingEv(%"class.blink::XMLDocumentParser"* %0)
  br label %10

10:                                               ; preds = %5, %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser13ResumeParsingEv(%"class.blink::XMLDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SegmentedString", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.35"* %9 to i64*
  br label %12

12:                                               ; preds = %58, %1
  %13 = load i32, i32* %5, align 8
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %74, label %16

16:                                               ; preds = %12
  %17 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %7, align 8
  %18 = zext i32 %13 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %17, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %19, align 8
  %22 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %7, align 8
  %23 = load i32, i32* %5, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %22, i64 %24
  %26 = add i32 %23, 1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %22, i64 %27
  br label %29

29:                                               ; preds = %39, %16
  %30 = phi %"class.std::__1::unique_ptr.35"* [ %40, %39 ], [ %25, %16 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %31, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %31, align 8
  %33 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %32 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %36 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %36, i64 1
  %38 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %37, align 8
  tail call void %38(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %32) #15
  br label %39

39:                                               ; preds = %34, %29
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %30, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.35"* %40, %28
  br i1 %41, label %42, label %29

42:                                               ; preds = %39
  %43 = load i32, i32* %5, align 8
  %44 = add i32 %43, 1
  %45 = load i32, i32* %8, align 8
  %46 = add i32 %45, -1
  %47 = icmp eq i32 %43, %46
  %48 = select i1 %47, i32 0, i32 %44
  store i32 %48, i32* %5, align 8
  %49 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %10, align 8
  store i64 %21, i64* %11, align 8
  %50 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %49, null
  %51 = inttoptr i64 %21 to %"class.blink::XMLDocumentParser::PendingCallback"*
  br i1 %50, label %58, label %52

52:                                               ; preds = %42
  %53 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %49 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %54 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %54, i64 1
  %56 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %55, align 8
  tail call void %56(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %49) #15
  %57 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %10, align 8
  br label %58

58:                                               ; preds = %52, %42
  %59 = phi %"class.blink::XMLDocumentParser::PendingCallback"* [ %57, %52 ], [ %51, %42 ]
  %60 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %59 to void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)***
  %61 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)** %61, i64 2
  %63 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser"*)** %62, align 8
  tail call void %63(%"class.blink::XMLDocumentParser::PendingCallback"* %59, %"class.blink::XMLDocumentParser"* %0) #15
  %64 = load i8, i8* %4, align 2, !range !3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %12, label %66

66:                                               ; preds = %58
  %67 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %10, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %10, align 8
  %68 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %67, null
  br i1 %68, label %213, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %67 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %71 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %71, i64 1
  %73 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %72, align 8
  tail call void %73(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %67) #15
  br label %213

74:                                               ; preds = %12
  %75 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %76 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %75, align 8
  store %"class.blink::XMLDocumentParser::PendingCallback"* null, %"class.blink::XMLDocumentParser::PendingCallback"** %75, align 8
  %77 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.blink::XMLDocumentParser::PendingCallback"* %76 to void (%"class.blink::XMLDocumentParser::PendingCallback"*)***
  %80 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)**, void (%"class.blink::XMLDocumentParser::PendingCallback"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %80, i64 1
  %82 = load void (%"class.blink::XMLDocumentParser::PendingCallback"*)*, void (%"class.blink::XMLDocumentParser::PendingCallback"*)** %81, align 8
  tail call void %82(%"class.blink::XMLDocumentParser::PendingCallback"* nonnull %76) #15
  br label %83

83:                                               ; preds = %74, %78
  %84 = bitcast %"class.blink::SegmentedString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %84) #15
  %85 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28
  %86 = bitcast %"class.blink::SegmentedString"* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %84, i64 26
  call void @llvm.memset.p0i8.i64(i8* align 2 %87, i8 -86, i64 62, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 %86, i64 26, i1 false) #15
  %88 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 0, i32 5, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #15
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %97
  tail call void @llvm.trap() #15
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %83, %92, %107
  %110 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 1
  %111 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 1
  %112 = bitcast i32* %110 to i8*
  %113 = bitcast i32* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 12, i1 false) #15
  %114 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5
  %115 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 5
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Deque"* %114, %"class.WTF::Deque"* dereferenceable(24) %115) #15
  %116 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 6
  %117 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 28, i32 6
  %118 = bitcast i8* %117 to i16*
  %119 = bitcast i8* %116 to i16*
  %120 = load i16, i16* %118, align 8
  store i16 %120, i16* %119, align 8
  call void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"* %85) #15
  %121 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #15
  %122 = call %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"* nonnull %2) #15
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %155, label %125

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #15
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  call void @llvm.trap() #15
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %125, %140
  call void @_ZN5blink17XMLDocumentParser6AppendERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %143 = load atomic i32, i32* %126 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %142
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %142
  %151 = phi i32 [ %149, %148 ], [ %147, %142 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  %154 = load i32, i32* %146, align 4
  br label %156

155:                                              ; preds = %109
  call void @_ZN5blink17XMLDocumentParser6AppendERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  br label %167

156:                                              ; preds = %150, %153
  %157 = phi i32 [ %151, %150 ], [ %154, %153 ]
  %158 = load atomic i32, i32* %126 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  %162 = add i32 %157, -1
  store i32 %162, i32* %146, align 4
  br label %163

163:                                              ; preds = %161, %156
  %164 = phi i32 [ %162, %161 ], [ %157, %156 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %167

167:                                              ; preds = %155, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #15
  %168 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %180, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 18
  %173 = load i8, i8* %172, align 8, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %171
  %176 = load i32, i32* %5, align 8
  %177 = load i32, i32* %6, align 4
  %178 = icmp eq i32 %176, %177
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  call void @_ZN5blink17XMLDocumentParser3endEv(%"class.blink::XMLDocumentParser"* %0)
  br label %180

180:                                              ; preds = %175, %179, %171, %167
  %181 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %182 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %181, align 8
  %183 = icmp eq %"class.blink::SegmentedSubstring"* %182, null
  br i1 %183, label %196, label %184

184:                                              ; preds = %180
  %185 = bitcast %"class.blink::SegmentedSubstring"* %182 to i8*
  %186 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5, i32 2
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %194, label %191

191:                                              ; preds = %184
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %114) #15
  %192 = bitcast %"class.WTF::Deque"* %114 to i8**
  %193 = load i8*, i8** %192, align 8
  br label %194

194:                                              ; preds = %191, %184
  %195 = phi i8* [ %193, %191 ], [ %185, %184 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %195) #15
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %181, align 8
  br label %196

196:                                              ; preds = %194, %180
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #15
  br label %212

212:                                              ; preds = %196, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %84) #15
  br label %213

213:                                              ; preds = %69, %66, %212
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink17XMLDocumentParser20NotifyScriptExecutedEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 -1, i32 28, i32 0, i32 1
  %3 = bitcast i8** %2 to %"class.blink::XMLDocumentParser"*
  %4 = getelementptr inbounds i8*, i8** %2, i64 1
  %5 = bitcast i8** %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %3, i64 0, i32 17
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN5blink17XMLDocumentParser13ResumeParsingEv(%"class.blink::XMLDocumentParser"* %3) #15
  br label %13

13:                                               ; preds = %1, %8, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17XMLDocumentParser22SetScriptStartPositionEN3WTF12TextPositionE(%"class.blink::XMLDocumentParser"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 24
  %4 = bitcast %"class.WTF::TextPosition"* %3 to i64*
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser10CharactersEPKhi(%"class.blink::XMLDocumentParser"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 1
  br i1 %6, label %87, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %9 = load i8, i8* %8, align 2, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %85, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %13, align 8
  %15 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %17, align 8
  %19 = icmp eq %"class.blink::XMLParserContext"* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %18, i64 0, i32 1
  %22 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %21, align 8
  %23 = icmp eq %struct._xmlParserCtxt* %22, null
  br i1 %23, label %35, label %28

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %14, i64 0, i32 1, i32 0, i32 0
  %26 = bitcast i32* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 8
  br label %35

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %22, i64 0, i32 9
  %30 = load %struct._xmlParserInput*, %struct._xmlParserInput** %29, align 8
  %31 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %30, i64 0, i32 7
  %32 = bitcast i32* %31 to <2 x i32>*
  %33 = load <2 x i32>, <2 x i32>* %32, align 4
  %34 = add <2 x i32> %33, <i32 -1, i32 -1>
  br label %35

35:                                               ; preds = %20, %16, %24, %28
  %36 = phi <2 x i32> [ %27, %24 ], [ %34, %28 ], [ zeroinitializer, %16 ], [ zeroinitializer, %20 ]
  %37 = extractelement <2 x i32> %36, i32 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = extractelement <2 x i32> %36, i32 0
  %41 = zext i32 %40 to i64
  %42 = or i64 %39, %41
  %43 = tail call noalias i8* @malloc(i64 32) #15
  %44 = bitcast i8* %43 to i32 (...)***
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %45 to i64*
  store i64 %42, i64* %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCharactersCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 16
  %48 = bitcast i8* %47 to i8**
  %49 = tail call i8* @xmlStrndup(i8* %1, i32 %2) #15
  store i8* %49, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 24
  %51 = bitcast i8* %50 to i32*
  store i32 %2, i32* %51, align 8
  %52 = ptrtoint i8* %43 to i64
  %53 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %61, label %58

58:                                               ; preds = %35
  %59 = add i32 %57, 1
  %60 = icmp eq i32 %59, %54
  br i1 %60, label %70, label %72

61:                                               ; preds = %35
  %62 = icmp eq i32 %57, 0
  %63 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  br i1 %62, label %68, label %65

65:                                               ; preds = %61
  %66 = add i32 %64, -1
  %67 = icmp eq i32 %57, %66
  br i1 %67, label %70, label %72

68:                                               ; preds = %61
  %69 = icmp eq i32 %64, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %68, %65, %58
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %12) #15
  %71 = load i32, i32* %56, align 4
  br label %72

72:                                               ; preds = %70, %68, %65, %58
  %73 = phi i32 [ %57, %58 ], [ %57, %65 ], [ 0, %68 ], [ %71, %70 ]
  %74 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %74, align 8
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %75, i64 %76
  %78 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, -1
  %81 = icmp eq i32 %73, %80
  %82 = add i32 %73, 1
  %83 = select i1 %81, i32 0, i32 %82
  store i32 %83, i32* %56, align 4
  %84 = bitcast %"class.std::__1::unique_ptr.35"* %77 to i64*
  store i64 %52, i64* %84, align 8
  br label %87

85:                                               ; preds = %7
  tail call void @_ZN5blink17XMLDocumentParser26CreateLeafTextNodeIfNeededEv(%"class.blink::XMLDocumentParser"* %0)
  %86 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 6
  tail call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.41"* %86, i8* %1, i32 %2)
  br label %87

87:                                               ; preds = %3, %85, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.41"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #15
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !4

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #15
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #15
  %50 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !4

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #15
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !4

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #15
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #15
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #15
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %96, i8* %97) #15
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #15
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #15
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #15
  %105 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !4

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #15
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser8GetErrorENS_9XMLErrors9ErrorTypeEPKcP13__va_list_tag(%"class.blink::XMLDocumentParser"*, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 align 2 {
  %5 = alloca [1024 x i8], align 16
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %136, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 1024, i1 false)
  %12 = call i32 @__vsnprintf_chk(i8* nonnull %11, i64 1023, i32 1, i64 1024, i8* %2, %struct.__va_list_tag* %3) #15
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %14 = load i8, i8* %13, align 2, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %90, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %19 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %18, align 8
  %20 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %23 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %22, align 8
  %24 = icmp eq %"class.blink::XMLParserContext"* %23, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %23, i64 0, i32 1
  %27 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %26, align 8
  %28 = icmp eq %struct._xmlParserCtxt* %27, null
  br i1 %28, label %40, label %33

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %19, i64 0, i32 1, i32 0, i32 0
  %31 = bitcast i32* %30 to <2 x i32>*
  %32 = load <2 x i32>, <2 x i32>* %31, align 8
  br label %40

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %27, i64 0, i32 9
  %35 = load %struct._xmlParserInput*, %struct._xmlParserInput** %34, align 8
  %36 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %35, i64 0, i32 7
  %37 = bitcast i32* %36 to <2 x i32>*
  %38 = load <2 x i32>, <2 x i32>* %37, align 4
  %39 = add <2 x i32> %38, <i32 -1, i32 -1>
  br label %40

40:                                               ; preds = %25, %21, %29, %33
  %41 = phi <2 x i32> [ %32, %29 ], [ %39, %33 ], [ zeroinitializer, %21 ], [ zeroinitializer, %25 ]
  %42 = extractelement <2 x i32> %41, i32 1
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 32
  %45 = extractelement <2 x i32> %41, i32 0
  %46 = zext i32 %45 to i64
  %47 = or i64 %44, %46
  %48 = call noalias i8* @malloc(i64 32) #15
  %49 = bitcast i8* %48 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 %47, i64* %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20PendingErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i32*
  store i32 %1, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i8**
  %56 = call i8* @xmlStrdup(i8* nonnull %11) #15
  store i8* %56, i8** %55, align 8
  %57 = ptrtoint i8* %48 to i64
  %58 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %66, label %63

63:                                               ; preds = %40
  %64 = add i32 %62, 1
  %65 = icmp eq i32 %64, %59
  br i1 %65, label %75, label %77

66:                                               ; preds = %40
  %67 = icmp eq i32 %62, 0
  %68 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  br i1 %67, label %73, label %70

70:                                               ; preds = %66
  %71 = add i32 %69, -1
  %72 = icmp eq i32 %62, %71
  br i1 %72, label %75, label %77

73:                                               ; preds = %66
  %74 = icmp eq i32 %69, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %73, %70, %63
  call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %17) #15
  %76 = load i32, i32* %61, align 4
  br label %77

77:                                               ; preds = %75, %73, %70, %63
  %78 = phi i32 [ %62, %63 ], [ %62, %70 ], [ 0, %73 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %79, align 8
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %80, i64 %81
  %83 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, -1
  %86 = icmp eq i32 %78, %85
  %87 = add i32 %78, 1
  %88 = select i1 %86, i32 0, i32 %87
  store i32 %88, i32* %61, align 4
  %89 = bitcast %"class.std::__1::unique_ptr.35"* %82 to i64*
  store i64 %57, i64* %89, align 8
  br label %135

90:                                               ; preds = %10
  %91 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %92 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %91, align 8
  %93 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %92, null
  br i1 %93, label %94, label %102

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %96 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %95, align 8
  %97 = icmp eq %"class.blink::XMLParserContext"* %96, null
  br i1 %97, label %113, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %96, i64 0, i32 1
  %100 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %99, align 8
  %101 = icmp eq %struct._xmlParserCtxt* %100, null
  br i1 %101, label %113, label %106

102:                                              ; preds = %90
  %103 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %92, i64 0, i32 1, i32 0, i32 0
  %104 = bitcast i32* %103 to <2 x i32>*
  %105 = load <2 x i32>, <2 x i32>* %104, align 8
  br label %113

106:                                              ; preds = %98
  %107 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %100, i64 0, i32 9
  %108 = load %struct._xmlParserInput*, %struct._xmlParserInput** %107, align 8
  %109 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %108, i64 0, i32 7
  %110 = bitcast i32* %109 to <2 x i32>*
  %111 = load <2 x i32>, <2 x i32>* %110, align 4
  %112 = add <2 x i32> %111, <i32 -1, i32 -1>
  br label %113

113:                                              ; preds = %98, %94, %102, %106
  %114 = phi <2 x i32> [ %105, %102 ], [ %112, %106 ], [ zeroinitializer, %94 ], [ zeroinitializer, %98 ]
  %115 = extractelement <2 x i32> %114, i32 1
  %116 = zext i32 %115 to i64
  %117 = shl nuw i64 %116, 32
  %118 = extractelement <2 x i32> %114, i32 0
  %119 = zext i32 %118 to i64
  %120 = or i64 %117, %119
  %121 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"* %121, i32 %1, i8* nonnull %11, i64 %120) #15
  %122 = icmp eq i32 %1, 0
  br i1 %122, label %135, label %123

123:                                              ; preds = %113
  %124 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  store i8 1, i8* %124, align 1
  %125 = icmp eq i32 %1, 2
  br i1 %125, label %126, label %135

126:                                              ; preds = %123
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %121) #15
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %6) #15
  %127 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %128 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %127, align 8
  %129 = icmp eq %"class.blink::XMLParserContext"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %128, i64 0, i32 1
  %132 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %131, align 8
  %133 = icmp eq %struct._xmlParserCtxt* %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %132) #15
  br label %135

135:                                              ; preds = %134, %130, %126, %123, %113, %77
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %11) #15
  br label %136

136:                                              ; preds = %4, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser24GetProcessingInstructionERKN3WTF6StringES4_(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %202, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %128, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %15, align 8
  %17 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %19, align 8
  %21 = icmp eq %"class.blink::XMLParserContext"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %20, i64 0, i32 1
  %24 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %23, align 8
  %25 = icmp eq %struct._xmlParserCtxt* %24, null
  br i1 %25, label %37, label %30

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %16, i64 0, i32 1, i32 0, i32 0
  %28 = bitcast i32* %27 to <2 x i32>*
  %29 = load <2 x i32>, <2 x i32>* %28, align 8
  br label %37

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %24, i64 0, i32 9
  %32 = load %struct._xmlParserInput*, %struct._xmlParserInput** %31, align 8
  %33 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %32, i64 0, i32 7
  %34 = bitcast i32* %33 to <2 x i32>*
  %35 = load <2 x i32>, <2 x i32>* %34, align 4
  %36 = add <2 x i32> %35, <i32 -1, i32 -1>
  br label %37

37:                                               ; preds = %22, %18, %26, %30
  %38 = phi <2 x i32> [ %29, %26 ], [ %36, %30 ], [ zeroinitializer, %18 ], [ zeroinitializer, %22 ]
  %39 = extractelement <2 x i32> %38, i32 1
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = extractelement <2 x i32> %38, i32 0
  %43 = zext i32 %42 to i64
  %44 = or i64 %41, %43
  %45 = tail call noalias i8* @malloc(i64 32) #15
  %46 = bitcast i8* %45 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i64*
  store i64 %44, i64* %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink36PendingProcessingInstructionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %52, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %37
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #15
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %59
  tail call void @llvm.trap() #15
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %69, %54, %37
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = getelementptr inbounds i8, i8* %45, i64 24
  %75 = bitcast i8* %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #15
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #15
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %71, %77, %92
  %95 = ptrtoint i8* %45 to i64
  %96 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %104, label %101

101:                                              ; preds = %94
  %102 = add i32 %100, 1
  %103 = icmp eq i32 %102, %97
  br i1 %103, label %113, label %115

104:                                              ; preds = %94
  %105 = icmp eq i32 %100, 0
  %106 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  br i1 %105, label %111, label %108

108:                                              ; preds = %104
  %109 = add i32 %107, -1
  %110 = icmp eq i32 %100, %109
  br i1 %110, label %113, label %115

111:                                              ; preds = %104
  %112 = icmp eq i32 %107, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %111, %108, %101
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %14) #15
  %114 = load i32, i32* %99, align 4
  br label %115

115:                                              ; preds = %113, %111, %108, %101
  %116 = phi i32 [ %100, %101 ], [ %100, %108 ], [ 0, %111 ], [ %114, %113 ]
  %117 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %117, align 8
  %119 = zext i32 %116 to i64
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %118, i64 %119
  %121 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, -1
  %124 = icmp eq i32 %116, %123
  %125 = add i32 %116, 1
  %126 = select i1 %124, i32 0, i32 %125
  store i32 %126, i32* %99, align 4
  %127 = bitcast %"class.std::__1::unique_ptr.35"* %120 to i64*
  store i64 %95, i64* %127, align 8
  br label %202

128:                                              ; preds = %9
  %129 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  br i1 %129, label %130, label %202

130:                                              ; preds = %128
  %131 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %131) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 56, i1 false)
  %132 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %133, align 8
  %134 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %134, align 2
  %135 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %136 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %137 = bitcast %"class.WTF::StringImpl"** %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #15
  %138 = bitcast i8** %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %139 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %140 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %140, i64 0, i32 0, i32 3, i32 0, i32 0
  %142 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %142, i64 0, i32 2, i32 0, i32 0
  %144 = load %"class.blink::Document"*, %"class.blink::Document"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %146 = call %"class.blink::ProcessingInstruction"* @_ZN5blink8Document27createProcessingInstructionERKN3WTF6StringES4_RNS_14ExceptionStateE(%"class.blink::Document"* %144, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %145) #15
  %147 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 4
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %201

150:                                              ; preds = %130
  %151 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %139, align 8
  %152 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %146, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %151, %"class.blink::Node"* %152) #15
  %153 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %146, i64 0, i32 10
  %154 = load i8, i8* %153, align 1, !range !3
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 12
  store i8 1, i8* %157, align 2
  br label %158

158:                                              ; preds = %150, %156
  %159 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 20
  %160 = load i8, i8* %159, align 2, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %158
  store i8 0, i8* %159, align 2
  %163 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 19
  store i8 1, i8* %163, align 1
  %164 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 25
  %165 = load i8, i8* %164, align 8, !range !3
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %162
  store i8 1, i8* %10, align 2
  br label %168

168:                                              ; preds = %158, %162, %167
  %169 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase16is_xslt_enabled_E, align 1, !range !3
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %201, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 14
  %173 = load i8, i8* %172, align 4, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 13
  store i8 0, i8* %176, align 1
  br label %201

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %146, i64 0, i32 11
  %179 = load i8, i8* %178, align 4, !range !3
  %180 = icmp eq i8 %179, 0
  %181 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 13
  store i8 %179, i8* %181, align 1
  br i1 %180, label %201, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::Document"*, %"class.blink::Document"** %183, align 8
  %185 = call zeroext i1 @_ZN5blink12DocumentXSLT26HasTransformSourceDocumentERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %184) #15
  br i1 %185, label %201, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %188 = load i8, i8* %187, align 1, !range !3
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 21
  call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %191) #15
  br label %192

192:                                              ; preds = %190, %186
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %5) #15
  %193 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %194 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %193, align 8
  %195 = icmp eq %"class.blink::XMLParserContext"* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %194, i64 0, i32 1
  %198 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %197, align 8
  %199 = icmp eq %struct._xmlParserCtxt* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %198) #15
  br label %201

201:                                              ; preds = %177, %168, %130, %200, %196, %192, %175, %182
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %131) #15
  br label %202

202:                                              ; preds = %128, %3, %201, %115
  ret void
}

declare %"class.blink::ProcessingInstruction"* @_ZN5blink8Document27createProcessingInstructionERKN3WTF6StringES4_RNS_14ExceptionStateE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink12DocumentXSLT26HasTransformSourceDocumentERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser10CdataBlockERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %113, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %102, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %12, align 8
  %14 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %17 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %16, align 8
  %18 = icmp eq %"class.blink::XMLParserContext"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %17, i64 0, i32 1
  %21 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %20, align 8
  %22 = icmp eq %struct._xmlParserCtxt* %21, null
  br i1 %22, label %34, label %27

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %13, i64 0, i32 1, i32 0, i32 0
  %25 = bitcast i32* %24 to <2 x i32>*
  %26 = load <2 x i32>, <2 x i32>* %25, align 8
  br label %34

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %21, i64 0, i32 9
  %29 = load %struct._xmlParserInput*, %struct._xmlParserInput** %28, align 8
  %30 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %29, i64 0, i32 7
  %31 = bitcast i32* %30 to <2 x i32>*
  %32 = load <2 x i32>, <2 x i32>* %31, align 4
  %33 = add <2 x i32> %32, <i32 -1, i32 -1>
  br label %34

34:                                               ; preds = %19, %15, %23, %27
  %35 = phi <2 x i32> [ %26, %23 ], [ %33, %27 ], [ zeroinitializer, %15 ], [ zeroinitializer, %19 ]
  %36 = extractelement <2 x i32> %35, i32 1
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = extractelement <2 x i32> %35, i32 0
  %40 = zext i32 %39 to i64
  %41 = or i64 %38, %40
  %42 = tail call noalias i8* @malloc(i64 24) #15
  %43 = bitcast i8* %42 to i32 (...)***
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 %41, i64* %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCDATABlockCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 16
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #15
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #15
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %34, %51, %66
  %69 = ptrtoint i8* %42 to i64
  %70 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %78, label %75

75:                                               ; preds = %68
  %76 = add i32 %74, 1
  %77 = icmp eq i32 %76, %71
  br i1 %77, label %87, label %89

78:                                               ; preds = %68
  %79 = icmp eq i32 %74, 0
  %80 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  br i1 %79, label %85, label %82

82:                                               ; preds = %78
  %83 = add i32 %81, -1
  %84 = icmp eq i32 %74, %83
  br i1 %84, label %87, label %89

85:                                               ; preds = %78
  %86 = icmp eq i32 %81, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %85, %82, %75
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %11) #15
  %88 = load i32, i32* %73, align 4
  br label %89

89:                                               ; preds = %87, %85, %82, %75
  %90 = phi i32 [ %74, %75 ], [ %74, %82 ], [ 0, %85 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %91, align 8
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %92, i64 %93
  %95 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, -1
  %98 = icmp eq i32 %90, %97
  %99 = add i32 %90, 1
  %100 = select i1 %98, i32 0, i32 %99
  store i32 %100, i32* %73, align 4
  %101 = bitcast %"class.std::__1::unique_ptr.35"* %94 to i64*
  store i64 %69, i64* %101, align 8
  br label %113

102:                                              ; preds = %6
  %103 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  br i1 %103, label %104, label %113

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %106 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Document"*, %"class.blink::Document"** %109, align 8
  %111 = tail call %"class.blink::CDATASection"* @_ZN5blink12CDATASection6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %110, %"class.WTF::String"* dereferenceable(8) %1) #15
  %112 = getelementptr inbounds %"class.blink::CDATASection", %"class.blink::CDATASection"* %111, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %106, %"class.blink::Node"* %112) #15
  br label %113

113:                                              ; preds = %102, %2, %104, %89
  ret void
}

declare %"class.blink::CDATASection"* @_ZN5blink12CDATASection6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser7CommentERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %113, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %102, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %12, align 8
  %14 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %17 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %16, align 8
  %18 = icmp eq %"class.blink::XMLParserContext"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %17, i64 0, i32 1
  %21 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %20, align 8
  %22 = icmp eq %struct._xmlParserCtxt* %21, null
  br i1 %22, label %34, label %27

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %13, i64 0, i32 1, i32 0, i32 0
  %25 = bitcast i32* %24 to <2 x i32>*
  %26 = load <2 x i32>, <2 x i32>* %25, align 8
  br label %34

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %21, i64 0, i32 9
  %29 = load %struct._xmlParserInput*, %struct._xmlParserInput** %28, align 8
  %30 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %29, i64 0, i32 7
  %31 = bitcast i32* %30 to <2 x i32>*
  %32 = load <2 x i32>, <2 x i32>* %31, align 4
  %33 = add <2 x i32> %32, <i32 -1, i32 -1>
  br label %34

34:                                               ; preds = %19, %15, %23, %27
  %35 = phi <2 x i32> [ %26, %23 ], [ %33, %27 ], [ zeroinitializer, %15 ], [ zeroinitializer, %19 ]
  %36 = extractelement <2 x i32> %35, i32 1
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = extractelement <2 x i32> %35, i32 0
  %40 = zext i32 %39 to i64
  %41 = or i64 %38, %40
  %42 = tail call noalias i8* @malloc(i64 24) #15
  %43 = bitcast i8* %42 to i32 (...)***
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 %41, i64* %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22PendingCommentCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 16
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #15
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #15
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %34, %51, %66
  %69 = ptrtoint i8* %42 to i64
  %70 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %78, label %75

75:                                               ; preds = %68
  %76 = add i32 %74, 1
  %77 = icmp eq i32 %76, %71
  br i1 %77, label %87, label %89

78:                                               ; preds = %68
  %79 = icmp eq i32 %74, 0
  %80 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  br i1 %79, label %85, label %82

82:                                               ; preds = %78
  %83 = add i32 %81, -1
  %84 = icmp eq i32 %74, %83
  br i1 %84, label %87, label %89

85:                                               ; preds = %78
  %86 = icmp eq i32 %81, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %85, %82, %75
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %11) #15
  %88 = load i32, i32* %73, align 4
  br label %89

89:                                               ; preds = %87, %85, %82, %75
  %90 = phi i32 [ %74, %75 ], [ %74, %82 ], [ 0, %85 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %91, align 8
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %92, i64 %93
  %95 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, -1
  %98 = icmp eq i32 %90, %97
  %99 = add i32 %90, 1
  %100 = select i1 %98, i32 0, i32 %99
  store i32 %100, i32* %73, align 4
  %101 = bitcast %"class.std::__1::unique_ptr.35"* %94 to i64*
  store i64 %69, i64* %101, align 8
  br label %113

102:                                              ; preds = %6
  %103 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  br i1 %103, label %104, label %113

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0
  %106 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Document"*, %"class.blink::Document"** %109, align 8
  %111 = tail call %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %110, %"class.WTF::String"* dereferenceable(8) %1) #15
  %112 = getelementptr inbounds %"class.blink::Comment", %"class.blink::Comment"* %111, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %106, %"class.blink::Node"* %112) #15
  br label %113

113:                                              ; preds = %102, %2, %104, %89
  ret void
}

declare %"class.blink::Comment"* @_ZN5blink7Comment6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser13StartDocumentERKN3WTF6StringES4_i(%"class.blink::XMLDocumentParser"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = icmp eq i32 %3, -1
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 93
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, -5
  store i8 %15, i8* %13, align 8
  br label %111

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %24, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  br i1 %34, label %35, label %47

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %40, align 8
  %41 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %41, align 2
  %42 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %43 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %44 = bitcast %"class.WTF::StringImpl"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #15
  %45 = bitcast i8** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  call void @_ZN5blink8Document13setXMLVersionERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Document"* %37, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %46) #15
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #15
  br label %47

47:                                               ; preds = %35, %20, %16
  %48 = icmp eq i32 %3, -2
  br i1 %48, label %62, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = icmp eq i32 %3, 1
  %53 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %55, align 8
  %56 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %56, align 2
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %59 = bitcast %"class.WTF::StringImpl"** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #15
  %60 = bitcast i8** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  call void @_ZN5blink8Document16setXMLStandaloneEbRNS_14ExceptionStateE(%"class.blink::Document"* %51, i1 zeroext %52, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %61) #15
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %53) #15
  br label %62

62:                                               ; preds = %47, %49
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %105, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 91
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  call void @llvm.trap() #15
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %84, %66
  %87 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %88 = bitcast %"class.WTF::String"* %69 to i64*
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  store i64 %87, i64* %88, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #15
  br label %105

105:                                              ; preds = %104, %101, %86, %62
  %106 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 93
  %109 = load i8, i8* %108, align 8
  %110 = or i8 %109, 4
  store i8 %110, i8* %108, align 8
  br label %111

111:                                              ; preds = %105, %10
  ret void
}

declare void @_ZN5blink8Document13setXMLVersionERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink8Document16setXMLStandaloneEbRNS_14ExceptionStateE(%"class.blink::Document"*, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser11EndDocumentEv(%"class.blink::XMLDocumentParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser14InternalSubsetERKN3WTF6StringES4_S4_(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Document"*, align 8
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %89, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %80, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %15, align 8
  %17 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %19, align 8
  %21 = icmp eq %"class.blink::XMLParserContext"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %20, i64 0, i32 1
  %24 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %23, align 8
  %25 = icmp eq %struct._xmlParserCtxt* %24, null
  br i1 %25, label %37, label %30

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %16, i64 0, i32 1, i32 0, i32 0
  %28 = bitcast i32* %27 to <2 x i32>*
  %29 = load <2 x i32>, <2 x i32>* %28, align 8
  br label %37

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %24, i64 0, i32 9
  %32 = load %struct._xmlParserInput*, %struct._xmlParserInput** %31, align 8
  %33 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %32, i64 0, i32 7
  %34 = bitcast i32* %33 to <2 x i32>*
  %35 = load <2 x i32>, <2 x i32>* %34, align 4
  %36 = add <2 x i32> %35, <i32 -1, i32 -1>
  br label %37

37:                                               ; preds = %22, %18, %26, %30
  %38 = phi <2 x i32> [ %29, %26 ], [ %36, %30 ], [ zeroinitializer, %18 ], [ zeroinitializer, %22 ]
  %39 = extractelement <2 x i32> %38, i32 1
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = extractelement <2 x i32> %38, i32 0
  %43 = zext i32 %42 to i64
  %44 = or i64 %41, %43
  %45 = tail call noalias i8* @malloc(i64 40) #15
  %46 = bitcast i8* %45 to %"class.blink::PendingInternalSubsetCallback"*
  tail call void @_ZN5blink29PendingInternalSubsetCallbackC2ERKN3WTF6StringES4_S4_NS1_12TextPositionE(%"class.blink::PendingInternalSubsetCallback"* %46, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, i64 %44) #15
  %47 = ptrtoint i8* %45 to i64
  %48 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 2
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %56, label %53

53:                                               ; preds = %37
  %54 = add i32 %52, 1
  %55 = icmp eq i32 %54, %49
  br i1 %55, label %65, label %67

56:                                               ; preds = %37
  %57 = icmp eq i32 %52, 0
  %58 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  br i1 %57, label %63, label %60

60:                                               ; preds = %56
  %61 = add i32 %59, -1
  %62 = icmp eq i32 %52, %61
  br i1 %62, label %65, label %67

63:                                               ; preds = %56
  %64 = icmp eq i32 %59, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63, %60, %53
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"* %14) #15
  %66 = load i32, i32* %51, align 4
  br label %67

67:                                               ; preds = %65, %63, %60, %53
  %68 = phi i32 [ %52, %53 ], [ %52, %60 ], [ 0, %63 ], [ %66, %65 ]
  %69 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %69, align 8
  %71 = zext i32 %68 to i64
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %70, i64 %71
  %73 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, -1
  %76 = icmp eq i32 %68, %75
  %77 = add i32 %68, 1
  %78 = select i1 %76, i32 0, i32 %77
  store i32 %78, i32* %51, align 4
  %79 = bitcast %"class.std::__1::unique_ptr.35"* %72 to i64*
  store i64 %47, i64* %79, align 8
  br label %89

80:                                               ; preds = %9
  %81 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = icmp eq %"class.blink::Document"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %82, i64 0, i32 0
  %86 = bitcast %"class.blink::Document"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  store %"class.blink::Document"* %82, %"class.blink::Document"** %5, align 8
  %87 = call %"class.blink::DocumentType"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJPNS_8DocumentERKN3WTF6StringES9_S9_EEEPS1_DpOT_(%"class.blink::Document"** nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3) #15
  %88 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %87, i64 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %85, %"class.blink::Node"* %88) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  br label %89

89:                                               ; preds = %80, %4, %67, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL18NormalErrorHandlerEPvPKcz(i8* nocapture readonly, i8*, ...) #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds i8, i8* %0, i64 424
  %8 = bitcast i8* %7 to %"class.blink::XMLDocumentParser"**
  %9 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %8, align 8
  call void @_ZN5blink17XMLDocumentParser8GetErrorENS_9XMLErrors9ErrorTypeEPKcP13__va_list_tag(%"class.blink::XMLDocumentParser"* %9, i32 1, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL17CharactersHandlerEPvPKhi(i8* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 424
  %5 = bitcast i8* %4 to %"class.blink::XMLDocumentParser"**
  %6 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %5, align 8
  tail call void @_ZN5blink17XMLDocumentParser10CharactersEPKhi(%"class.blink::XMLDocumentParser"* %6, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL28ProcessingInstructionHandlerEPvPKhS2_(i8* nocapture readonly, i8*, i8*) #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 424
  %7 = bitcast i8* %6 to %"class.blink::XMLDocumentParser"**
  %8 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %7, align 8
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %1) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %2) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZN5blink17XMLDocumentParser24GetProcessingInstructionERKN3WTF6StringES4_(%"class.blink::XMLDocumentParser"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %30

30:                                               ; preds = %3, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %30, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL17CdataBlockHandlerEPvPKhi(i8* nocapture readonly, i8*, i32) #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds i8, i8* %0, i64 424
  %6 = bitcast i8* %5 to %"class.blink::XMLDocumentParser"**
  %7 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = sext i32 %2 to i64
  %10 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %1, i64 %9) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZN5blink17XMLDocumentParser10CdataBlockERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #15
  br label %27

27:                                               ; preds = %3, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL14CommentHandlerEPvPKh(i8* nocapture readonly, i8*) #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 424
  %5 = bitcast i8* %4 to %"class.blink::XMLDocumentParser"**
  %6 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %1) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink17XMLDocumentParser7CommentERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #15
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL14WarningHandlerEPvPKcz(i8* nocapture readonly, i8*, ...) #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds i8, i8* %0, i64 424
  %8 = bitcast i8* %7 to %"class.blink::XMLDocumentParser"**
  %9 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %8, align 8
  call void @_ZN5blink17XMLDocumentParser8GetErrorENS_9XMLErrors9ErrorTypeEPKcP13__va_list_tag(%"class.blink::XMLDocumentParser"* %9, i32 0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL21StartElementNsHandlerEPvPKhS2_S2_iPS2_iiS3_(i8* nocapture readonly, i8*, i8*, i8*, i32, i8**, i32, i32, i8**) #0 {
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = getelementptr inbounds i8, i8* %0, i64 424
  %14 = bitcast i8* %13 to %"class.blink::XMLDocumentParser"**
  %15 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %14, align 8
  %16 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %1) #15
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %2) #15
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8* %3) #15
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  call void @_ZN5blink17XMLDocumentParser14StartElementNsERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_(%"class.blink::XMLDocumentParser"* %15, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12, i32 %4, i8** %5, i32 %6, i32 %7, i8** %8)
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %9, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %40, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #15
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL19EndElementNsHandlerEPvPKhS2_S2_(i8* nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone) #0 {
  %5 = getelementptr inbounds i8, i8* %0, i64 424
  %6 = bitcast i8* %5 to %"class.blink::XMLDocumentParser"**
  %7 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %6, align 8
  tail call void @_ZN5blink17XMLDocumentParser12EndElementNsEv(%"class.blink::XMLDocumentParser"* %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %struct._xmlEntity* @_ZN5blinkL16GetEntityHandlerEPvPKh(i8* nocapture readonly, i8*) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = tail call %struct._xmlEntity* @xmlGetPredefinedEntity(i8* %1) #15
  %7 = icmp eq %struct._xmlEntity* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._xmlEntity, %struct._xmlEntity* %6, i64 0, i32 12
  store i32 6, i32* %9, align 4
  br label %72

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %0, i64 16
  %12 = bitcast i8* %11 to %struct._xmlDoc**
  %13 = load %struct._xmlDoc*, %struct._xmlDoc** %12, align 8
  %14 = tail call %struct._xmlEntity* @xmlGetDocEntity(%struct._xmlDoc* %13, i8* %1) #15
  %15 = icmp eq %struct._xmlEntity* %14, null
  br i1 %15, label %16, label %72

16:                                               ; preds = %10
  %17 = getelementptr inbounds i8, i8* %0, i64 424
  %18 = bitcast i8* %17 to %"class.blink::XMLDocumentParser"**
  %19 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %19, i64 0, i32 15
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %72, label %23

23:                                               ; preds = %16
  %24 = bitcast i64* %5 to [4 x i16]*
  %25 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %26 = bitcast i64* %5 to i16*
  %27 = getelementptr inbounds [4 x i16], [4 x i16]* %24, i64 0, i64 1
  store i64 -6148914691236517206, i64* %5, align 8
  %28 = call i64 @_ZN5blink29DecodeNamedEntityToUCharArrayEPKcPDs(i8* %1, i16* nonnull %26) #15
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %69, label %30

30:                                               ; preds = %23
  %31 = icmp eq i64 %28, 1
  %32 = load i16, i16* %26, align 8
  %33 = icmp eq i16 %32, 38
  %34 = and i1 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0), align 1
  store i8 35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 1), align 1
  store i8 51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 2), align 1
  store i8 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 3), align 1
  store i8 59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 4), align 1
  br label %61

36:                                               ; preds = %30
  %37 = icmp eq i16 %32, 60
  %38 = and i1 %31, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i8 38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0), align 1
  store i8 35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 1), align 1
  store i8 54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 2), align 1
  store i8 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 3), align 1
  store i8 59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 4), align 1
  br label %61

40:                                               ; preds = %36
  %41 = icmp eq i64 %28, 2
  %42 = and i1 %41, %37
  %43 = load i16, i16* %27, align 2
  %44 = icmp eq i16 %43, 8402
  %45 = and i1 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %40
  store i8 38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0), align 1
  store i8 35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 1), align 1
  store i8 54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 2), align 1
  store i8 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 3), align 1
  store i8 59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 4), align 1
  store i8 -30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 5), align 1
  store i8 -125, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 6), align 1
  store i8 -110, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 7), align 1
  br label %61

47:                                               ; preds = %40
  %48 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  %49 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #15
  %50 = bitcast i16** %3 to i64**
  store i64* %5, i64** %50, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0), i8** %4, align 8
  %51 = getelementptr inbounds [4 x i16], [4 x i16]* %24, i64 0, i64 %28
  %52 = call i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16** nonnull %3, i16* %51, i8** nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 1, i64 0), i1 zeroext true) #15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #15
  br label %69

55:                                               ; preds = %47
  %56 = load i8*, i8** %4, align 8
  store i8 0, i8* %56, align 1
  %57 = bitcast i8** %4 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %58, ptrtoint ([9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE to i64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #15
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55, %46, %39, %35
  %62 = phi i64 [ 5, %35 ], [ 5, %39 ], [ 8, %46 ], [ %59, %55 ]
  %63 = load i32, i32* getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 1), align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  store i32 17, i32* getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 1), align 8
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blinkL28g_shared_xhtml_entity_resultE, i64 0, i64 0)>, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 9) to <2 x i8*>*), align 8
  store i32 6, i32* getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 12), align 4
  br label %66

66:                                               ; preds = %65, %61
  %67 = icmp ult i64 %62, 2147483648
  br i1 %67, label %70, label %68, !prof !4

68:                                               ; preds = %66
  call void @llvm.trap() #15
  unreachable

69:                                               ; preds = %23, %55, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br label %72

70:                                               ; preds = %66
  %71 = trunc i64 %62 to i32
  store i32 %71, i32* getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 11), align 8
  store i8* %1, i8** getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 2), align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  store i32 1, i32* getelementptr inbounds (%struct._xmlEntity, %struct._xmlEntity* @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, i64 0, i32 12), align 4
  br label %72

72:                                               ; preds = %16, %69, %70, %10, %8
  %73 = phi %struct._xmlEntity* [ %6, %8 ], [ %14, %10 ], [ @_ZZN5blinkL17SharedXHTMLEntityEvE6entity, %70 ], [ null, %16 ], [ null, %69 ]
  ret %struct._xmlEntity* %73
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL20StartDocumentHandlerEPv(i8*) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast i8* %0 to %struct._xmlParserCtxt*
  %5 = getelementptr inbounds i8, i8* %0, i64 424
  %6 = bitcast i8* %5 to %"class.blink::XMLDocumentParser"**
  %7 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %7, i64 0, i32 10
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %0, i64 136
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds i8, i8* %0, i64 332
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %15, %1
  %21 = select i1 %10, i32 2, i32 10
  %22 = tail call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %4, i32 %21) #15
  br label %23

23:                                               ; preds = %20, %15
  %24 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds i8, i8* %0, i64 32
  %26 = bitcast i8* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %27) #15
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds i8, i8* %0, i64 40
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %33) #15
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %0, i64 48
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 8
  call void @_ZN5blink17XMLDocumentParser13StartDocumentERKN3WTF6StringES4_i(%"class.blink::XMLDocumentParser"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %38)
  %39 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %23
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #15
  br label %53

53:                                               ; preds = %23, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #15
  br label %69

69:                                               ; preds = %53, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  call void @xmlSAX2StartDocument(i8* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL18EndDocumentHandlerEPv(i8*) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 424
  %3 = bitcast i8* %2 to %"class.blink::XMLDocumentParser"**
  %4 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink17XMLDocumentParser18UpdateLeafTextNodeEv(%"class.blink::XMLDocumentParser"* %4) #15
  tail call void @xmlSAX2EndDocument(i8* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL21InternalSubsetHandlerEPvPKhS2_S2_(i8*, i8*, i8*, i8*) #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 424
  %9 = bitcast i8* %8 to %"class.blink::XMLDocumentParser"**
  %10 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %9, align 8
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %1) #15
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %2) #15
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %3) #15
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  call void @_ZN5blink17XMLDocumentParser14InternalSubsetERKN3WTF6StringES4_S4_(%"class.blink::XMLDocumentParser"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %4, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %51

51:                                               ; preds = %35, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %51, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  call void @xmlSAX2InternalSubset(i8* %0, i8* %1, i8* %2, i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL21ExternalSubsetHandlerEPvPKhS2_S2_(i8* nocapture readonly, i8* nocapture readnone, i8*, i8* nocapture readnone) #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %2) #15
  %28 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* null, i8** %31, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %32, i64* %33, align 8
  br label %42

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

42:                                               ; preds = %34, %30
  %43 = phi i64 [ %41, %34 ], [ %32, %30 ]
  %44 = phi i32 [ %37, %34 ], [ 0, %30 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  %46 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #15
  %47 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %43, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 38, i32* %49, align 8
  %50 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %25, %"class.WTF::StringView"* nonnull dereferenceable(24) %26) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br i1 %50, label %281, label %51

51:                                               ; preds = %42
  %52 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #15
  br i1 %29, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* null, i8** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %56 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %55, i64* %56, align 8
  br label %65

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %63 = bitcast i8** %62 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %63, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %65

65:                                               ; preds = %57, %53
  %66 = phi i64 [ %64, %57 ], [ %55, %53 ]
  %67 = phi i32 [ %60, %57 ], [ 0, %53 ]
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 %67, i32* %68, align 8
  %69 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #15
  %70 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %66, i64* %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 25, i32* %72, align 8
  %73 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %24) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #15
  br i1 %73, label %281, label %74

74:                                               ; preds = %65
  %75 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #15
  br i1 %29, label %76, label %80

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %77, align 8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %78, i64* %79, align 8
  br label %88

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %88

88:                                               ; preds = %80, %76
  %89 = phi i64 [ %87, %80 ], [ %78, %76 ]
  %90 = phi i32 [ %83, %80 ], [ 0, %76 ]
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %90, i32* %91, align 8
  %92 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #15
  %93 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %89, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 32, i32* %95, align 8
  %96 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #15
  br i1 %96, label %281, label %97

97:                                               ; preds = %88
  %98 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #15
  br i1 %29, label %99, label %103

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %101, i64* %102, align 8
  br label %111

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

111:                                              ; preds = %103, %99
  %112 = phi i64 [ %110, %103 ], [ %101, %99 ]
  %113 = phi i32 [ %106, %103 ], [ 0, %99 ]
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %113, i32* %114, align 8
  %115 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #15
  %116 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %112, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 34, i32* %118, align 8
  %119 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #15
  br i1 %119, label %281, label %120

120:                                              ; preds = %111
  %121 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #15
  br i1 %29, label %122, label %126

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %123, align 8
  %124 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %125 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %124, i64* %125, align 8
  br label %134

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %132 = bitcast i8** %131 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %132, align 8
  %133 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %134

134:                                              ; preds = %126, %122
  %135 = phi i64 [ %133, %126 ], [ %124, %122 ]
  %136 = phi i32 [ %129, %126 ], [ 0, %122 ]
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %136, i32* %137, align 8
  %138 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #15
  %139 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %135, i64* %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 31, i32* %141, align 8
  %142 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #15
  br i1 %142, label %281, label %143

143:                                              ; preds = %134
  %144 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #15
  br i1 %29, label %145, label %149

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %146, align 8
  %147 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %148 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %147, i64* %148, align 8
  br label %157

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %155 = bitcast i8** %154 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %155, align 8
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %157

157:                                              ; preds = %149, %145
  %158 = phi i64 [ %156, %149 ], [ %147, %145 ]
  %159 = phi i32 [ %152, %149 ], [ 0, %145 ]
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %159, i32* %160, align 8
  %161 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #15
  %162 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %158, i64* %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i64 0, i64 0), i8** %163, align 8
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 41, i32* %164, align 8
  %165 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #15
  br i1 %165, label %281, label %166

166:                                              ; preds = %157
  %167 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #15
  br i1 %29, label %168, label %172

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %169, align 8
  %170 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %171 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %170, i64* %171, align 8
  br label %180

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %173, align 8
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %178 = bitcast i8** %177 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %178, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %180

180:                                              ; preds = %172, %168
  %181 = phi i64 [ %179, %172 ], [ %170, %168 ]
  %182 = phi i32 [ %175, %172 ], [ 0, %168 ]
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %182, i32* %183, align 8
  %184 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #15
  %185 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %181, i64* %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i8** %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 54, i32* %187, align 8
  %188 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #15
  br i1 %188, label %281, label %189

189:                                              ; preds = %180
  %190 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #15
  br i1 %29, label %191, label %195

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %192, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %194 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %193, i64* %194, align 8
  br label %203

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %201 = bitcast i8** %200 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"** %201, align 8
  %202 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %203

203:                                              ; preds = %195, %191
  %204 = phi i64 [ %202, %195 ], [ %193, %191 ]
  %205 = phi i32 [ %198, %195 ], [ 0, %191 ]
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %205, i32* %206, align 8
  %207 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #15
  %208 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %204, i64* %208, align 8
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8** %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 26, i32* %210, align 8
  %211 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #15
  br i1 %211, label %281, label %212

212:                                              ; preds = %203
  %213 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #15
  br i1 %29, label %214, label %218

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %215, align 8
  %216 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %217 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %216, i64* %217, align 8
  br label %226

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %224 = bitcast i8** %223 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %224, align 8
  %225 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %226

226:                                              ; preds = %218, %214
  %227 = phi i64 [ %225, %218 ], [ %216, %214 ]
  %228 = phi i32 [ %221, %218 ], [ 0, %214 ]
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %228, i32* %229, align 8
  %230 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %230) #15
  %231 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %227, i64* %231, align 8
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i8** %232, align 8
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 37, i32* %233, align 8
  %234 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #15
  br i1 %234, label %281, label %235

235:                                              ; preds = %226
  %236 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #15
  br i1 %29, label %237, label %241

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %238, align 8
  %239 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %240 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %239, i64* %240, align 8
  br label %249

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %242, align 8
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %247 = bitcast i8** %246 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %245, %"class.WTF::StringImpl"** %247, align 8
  %248 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %249

249:                                              ; preds = %241, %237
  %250 = phi i64 [ %248, %241 ], [ %239, %237 ]
  %251 = phi i32 [ %244, %241 ], [ 0, %237 ]
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %251, i32* %252, align 8
  %253 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #15
  %254 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %250, i64* %254, align 8
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42, i64 0, i64 0), i8** %255, align 8
  %256 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 37, i32* %256, align 8
  %257 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #15
  br i1 %257, label %281, label %258

258:                                              ; preds = %249
  %259 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #15
  br i1 %29, label %260, label %264

260:                                              ; preds = %258
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %261, align 8
  %262 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %263 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %262, i64* %263, align 8
  br label %272

264:                                              ; preds = %258
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %265, align 8
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %270 = bitcast i8** %269 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %270, align 8
  %271 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %272

272:                                              ; preds = %264, %260
  %273 = phi i64 [ %271, %264 ], [ %262, %260 ]
  %274 = phi i32 [ %267, %264 ], [ 0, %260 ]
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %274, i32* %275, align 8
  %276 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #15
  %277 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %273, i64* %277, align 8
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.43, i64 0, i64 0), i8** %278, align 8
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 37, i32* %279, align 8
  %280 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #15
  br i1 %280, label %281, label %286

281:                                              ; preds = %272, %249, %226, %203, %180, %157, %134, %111, %88, %65, %42
  %282 = getelementptr inbounds i8, i8* %0, i64 424
  %283 = bitcast i8* %282 to %"class.blink::XMLDocumentParser"**
  %284 = load %"class.blink::XMLDocumentParser"*, %"class.blink::XMLDocumentParser"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %284, i64 0, i32 15
  store i8 1, i8* %285, align 1
  br label %286

286:                                              ; preds = %281, %272
  br i1 %29, label %300, label %287

287:                                              ; preds = %286
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %300

300:                                              ; preds = %286, %296, %299
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blinkL26IgnorableWhitespaceHandlerEPvPKhi(i8* nocapture, i8* nocapture, i32) #7 {
  ret void
}

declare void @xmlSAX2EntityDecl(i8*, i8*, i32, i8*, i8*, i8*) #3

declare void @_ZN5blink30TransformDocumentToXMLTreeViewERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlDoc* @_ZN5blink18XmlDocPtrForStringEPNS_8DocumentERKN3WTF6StringES5_(%"class.blink::Document"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %79, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %79, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::XMLDocumentParserScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #15
  %15 = bitcast %"class.blink::XMLDocumentParserScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_(%"class.blink::XMLDocumentParserScope"* nonnull %4, %"class.blink::Document"* %0, void (i8*, i8*, ...)* nonnull @_ZN5blinkL9ErrorFuncEPvPKcz, void (i8*, %struct._xmlError*)* null, i8* null) #15
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #15
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = load atomic i32, i32* %19 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br i1 %42, label %45, label %47

45:                                               ; preds = %39
  %46 = shl i32 %37, 1
  br label %47

47:                                               ; preds = %39, %45, %13, %35
  %48 = phi i32 [ 0, %35 ], [ 0, %13 ], [ %46, %45 ], [ %37, %39 ]
  %49 = phi i8* [ null, %35 ], [ null, %13 ], [ %44, %45 ], [ %44, %39 ]
  %50 = phi i8* [ null, %35 ], [ null, %13 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0), %45 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i64 0, i64 0), %39 ]
  %51 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %2) #15
  %52 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = select i1 %55, i8* %57, i8* %51
  %59 = call %struct._xmlDoc* @xmlReadMemory(i8* %49, i32 %48, i8* %58, i8* %50, i32 16398) #15
  %60 = load i8, i8* %53, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %47
  %63 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %47, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  br i1 %17, label %78, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %78

78:                                               ; preds = %64, %74, %77
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #15
  br label %79

79:                                               ; preds = %3, %9, %78
  %80 = phi %struct._xmlDoc* [ %59, %78 ], [ null, %9 ], [ null, %3 ]
  ret %struct._xmlDoc* %80
}

declare void @_ZN5blink8Document18SetTransformSourceENSt3__110unique_ptrINS_15TransformSourceENS1_14default_deleteIS3_EEEE(%"class.blink::Document"*, %"class.blink::TransformSource"*) local_unnamed_addr #3

declare void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blinkL9ErrorFuncEPvPKcz(i8* nocapture, i8* nocapture, ...) #7 {
  ret void
}

declare void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_(%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*) unnamed_addr #3

declare %struct._xmlDoc* @xmlReadMemory(i8*, i32, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17XMLDocumentParser10LineNumberEv(%"class.blink::XMLDocumentParser"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %2, align 8
  %4 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  br label %22

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %9, align 8
  %11 = icmp eq %"class.blink::XMLParserContext"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %10, i64 0, i32 1
  %14 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %13, align 8
  %15 = icmp eq %struct._xmlParserCtxt* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %14, i64 0, i32 9
  %18 = load %struct._xmlParserInput*, %struct._xmlParserInput** %17, align 8
  %19 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %18, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, -1
  br label %22

22:                                               ; preds = %16, %12, %8, %5
  %23 = phi i32 [ %7, %5 ], [ %21, %16 ], [ 0, %12 ], [ 0, %8 ]
  ret i32 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17XMLDocumentParser12ColumnNumberEv(%"class.blink::XMLDocumentParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::XMLDocumentParser::PendingCallback"*, %"class.blink::XMLDocumentParser::PendingCallback"** %2, align 8
  %4 = icmp eq %"class.blink::XMLDocumentParser::PendingCallback"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser::PendingCallback", %"class.blink::XMLDocumentParser::PendingCallback"* %3, i64 0, i32 1, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  br label %22

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %9, align 8
  %11 = icmp eq %"class.blink::XMLParserContext"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %10, i64 0, i32 1
  %14 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %13, align 8
  %15 = icmp eq %struct._xmlParserCtxt* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %14, i64 0, i32 9
  %18 = load %struct._xmlParserInput*, %struct._xmlParserInput** %17, align 8
  %19 = getelementptr inbounds %struct._xmlParserInput, %struct._xmlParserInput* %18, i64 0, i32 8
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -1
  br label %22

22:                                               ; preds = %16, %12, %8, %5
  %23 = phi i32 [ %7, %5 ], [ %21, %16 ], [ 0, %12 ], [ 0, %8 ]
  ret i32 %23
}

declare void @xmlStopParser(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"*) local_unnamed_addr #3

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #3

declare void @xmlParseContent(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare i64 @xmlByteConsumed(%struct._xmlParserCtxt*) local_unnamed_addr #3

declare %struct._xmlError* @xmlCtxtGetLastError(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser37DidAddPendingParserBlockingStylesheetEv(%"class.blink::XMLDocumentParser"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %2, align 8
  %4 = icmp eq %"class.blink::XMLParserContext"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 20
  store i8 1, i8* %6, align 2
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17XMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv(%"class.blink::XMLDocumentParser"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 20
  store i8 0, i8* %2, align 2
  %3 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 19
  store i8 0, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17XMLDocumentParser33ExecuteScriptsWaitingForResourcesEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 23, i32 0, i32 0
  %3 = load %"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunner"** %2, align 8
  %4 = icmp eq %"class.blink::XMLParserScriptRunner"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLParserScriptRunner", %"class.blink::XMLParserScriptRunner"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %6, align 8
  %8 = icmp eq %"class.blink::PendingScript"* %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 19
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 16
  %15 = load i8, i8* %14, align 2, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN5blink17XMLDocumentParser13ResumeParsingEv(%"class.blink::XMLDocumentParser"* %0)
  br label %22

22:                                               ; preds = %5, %13, %9, %21, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ParseAttributesERKN3WTF6StringERb(%"class.WTF::HashMap.2064"* noalias sret, %"class.WTF::String"* nocapture readonly dereferenceable(8), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %4 = alloca %"struct.blink::AttributeParseState", align 8
  %5 = alloca %struct._xmlSAXHandler, align 8
  %6 = alloca %"class.WTF::StringAppend.2069", align 8
  %7 = bitcast %"struct.blink::AttributeParseState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %4, i64 0, i32 1
  %12 = bitcast %"struct.blink::AttributeParseState"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #15
  store i8 0, i8* %11, align 8
  %13 = bitcast %struct._xmlSAXHandler* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 256, i1 false)
  %14 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %5, i64 0, i32 29
  store void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)* @_ZN5blinkL31AttributesStartElementNsHandlerEPvPKhS2_S2_iPS2_iiS3_, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)** %14, align 8
  %15 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %5, i64 0, i32 27
  store i32 -554844497, i32* %15, align 8
  %16 = call %"class.blink::XMLParserContext"* @_ZN5blink16XMLParserContext18CreateStringParserEP14_xmlSAXHandlerPv(%struct._xmlSAXHandler* nonnull %5, i8* nonnull %7)
  %17 = bitcast %"class.WTF::StringAppend.2069"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %96, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %38

28:                                               ; preds = %21
  %29 = zext i32 %27 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #15
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %28
  call void @llvm.trap() #15
  unreachable

36:                                               ; preds = %28
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %26, align 4
  br label %38

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %27, %21 ]
  %40 = load atomic i32, i32* %22 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = zext i32 %39 to i33
  %45 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %26, align 4
  br label %53

53:                                               ; preds = %51, %38
  %54 = phi i32 [ %52, %51 ], [ %39, %38 ]
  %55 = load atomic i32, i32* %22 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = add i32 %54, -1
  store i32 %59, i32* %26, align 4
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i32 [ %59, %58 ], [ %54, %53 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %64

64:                                               ; preds = %60, %63
  %65 = load atomic i32, i32* %22 monotonic, align 4, !noalias !10
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = load i32, i32* %26, align 4
  br i1 %67, label %69, label %79

69:                                               ; preds = %64
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #15
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #15, !noalias !10
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %26, align 4, !noalias !10
  br label %79

79:                                               ; preds = %64, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %64 ]
  %81 = bitcast %"class.WTF::StringAppend.2069"* %6 to i64*
  store i64 ptrtoint ([29 x i8]* @.str.11 to i64), i64* %81, align 8, !alias.scope !10
  %82 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %82, align 8, !alias.scope !10
  %83 = load atomic i32, i32* %22 monotonic, align 4, !noalias !10
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %100

86:                                               ; preds = %79
  %87 = zext i32 %80 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #15
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  call void @llvm.trap() #15, !noalias !10
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %26, align 4, !noalias !10
  br label %100

96:                                               ; preds = %3
  %97 = bitcast %"class.WTF::StringAppend.2069"* %6 to i64*
  store i64 ptrtoint ([29 x i8]* @.str.11 to i64), i64* %97, align 8, !alias.scope !10
  %98 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8, !alias.scope !10
  %99 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %99, align 8, !alias.scope !10
  br label %112

100:                                              ; preds = %94, %79
  %101 = phi i32 [ %95, %94 ], [ %80, %79 ]
  %102 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %102, align 8, !alias.scope !10
  %103 = load atomic i32, i32* %22 monotonic, align 4, !noalias !10
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %100
  %107 = add i32 %101, -1
  store i32 %107, i32* %26, align 4, !noalias !10
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi i32 [ %107, %106 ], [ %101, %100 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15, !noalias !10
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2069"* nonnull %6)
  %114 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #15
  br label %130

130:                                              ; preds = %112, %126, %129
  br i1 %20, label %144, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %144

144:                                              ; preds = %130, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  %145 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %16, i64 0, i32 1
  %146 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %145, align 8
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 1
  %150 = icmp ne i32 %149, 0
  %151 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %146, i64 0, i32 19
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %144
  %155 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %146, i64 0, i32 36
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %169, label %158

158:                                              ; preds = %154, %144
  br i1 %150, label %159, label %164

159:                                              ; preds = %158
  %160 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %146, i32 10) #15
  %161 = icmp eq %"class.WTF::StringImpl"* %113, null
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %163 = bitcast %"class.WTF::StringImpl"* %162 to i8*
  br i1 %161, label %178, label %174

164:                                              ; preds = %158
  %165 = call i32 @xmlSwitchEncoding(%struct._xmlParserCtxt* %146, i32 2) #15
  %166 = icmp eq %"class.WTF::StringImpl"* %113, null
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %168 = bitcast %"class.WTF::StringImpl"* %167 to i8*
  br i1 %166, label %189, label %184

169:                                              ; preds = %154
  %170 = icmp eq %"class.WTF::StringImpl"* %113, null
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %172 = bitcast %"class.WTF::StringImpl"* %171 to i8*
  br i1 %150, label %173, label %183

173:                                              ; preds = %169
  br i1 %170, label %178, label %174

174:                                              ; preds = %159, %173
  %175 = phi i8* [ %163, %159 ], [ %172, %173 ]
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %159, %174, %173
  %179 = phi i1 [ false, %174 ], [ true, %173 ], [ true, %159 ]
  %180 = phi i8* [ %175, %174 ], [ null, %173 ], [ null, %159 ]
  %181 = phi i32 [ %177, %174 ], [ 0, %173 ], [ 0, %159 ]
  %182 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %146, i8* %180, i32 %181, i32 0) #15
  br label %194

183:                                              ; preds = %169
  br i1 %170, label %189, label %184

184:                                              ; preds = %164, %183
  %185 = phi i8* [ %168, %164 ], [ %172, %183 ]
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = shl i32 %187, 1
  br label %189

189:                                              ; preds = %164, %184, %183
  %190 = phi i1 [ false, %184 ], [ true, %183 ], [ true, %164 ]
  %191 = phi i8* [ %185, %184 ], [ null, %183 ], [ null, %164 ]
  %192 = phi i32 [ %188, %184 ], [ 0, %183 ], [ 0, %164 ]
  %193 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %146, i8* %191, i32 %192, i32 0) #15
  br label %194

194:                                              ; preds = %178, %189
  %195 = phi i1 [ %179, %178 ], [ %190, %189 ]
  %196 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %145, align 8
  %197 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* %196, i8* null, i32 0, i32 1) #15
  %198 = load i8, i8* %11, align 8, !range !3
  store i8 %198, i8* %2, align 1
  %199 = getelementptr inbounds %"class.WTF::HashMap.2064", %"class.WTF::HashMap.2064"* %0, i64 0, i32 0
  %200 = bitcast %"class.WTF::HashMap.2064"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 20, i1 false) #15
  %201 = load i32, i32* %10, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %237, label %203

203:                                              ; preds = %194
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2065"* %199, i32 %201) #15
  %204 = load i32, i32* %10, align 4
  %205 = icmp eq i32 %204, 0
  %206 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %8, align 8
  %207 = load i32, i32* %9, align 8
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %206, i64 %208
  br i1 %205, label %237, label %210

210:                                              ; preds = %203
  %211 = icmp eq i32 %207, 0
  br i1 %211, label %219, label %212

212:                                              ; preds = %210, %216
  %213 = phi %"struct.WTF::KeyValuePair.2068"* [ %217, %216 ], [ %206, %210 ]
  %214 = bitcast %"struct.WTF::KeyValuePair.2068"* %213 to i64*
  %215 = load i64, i64* %214, align 8
  switch i64 %215, label %219 [
    i64 -1, label %216
    i64 0, label %216
  ]

216:                                              ; preds = %212, %212
  %217 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %213, i64 1
  %218 = icmp eq %"struct.WTF::KeyValuePair.2068"* %217, %209
  br i1 %218, label %237, label %212

219:                                              ; preds = %212, %210
  %220 = phi %"struct.WTF::KeyValuePair.2068"* [ %206, %210 ], [ %213, %212 ]
  %221 = icmp eq %"struct.WTF::KeyValuePair.2068"* %220, %209
  br i1 %221, label %237, label %222

222:                                              ; preds = %219, %235
  %223 = phi %"struct.WTF::KeyValuePair.2068"* [ %229, %235 ], [ %220, %219 ]
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %223, i64 0, i32 0
  %225 = call { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2065"* %199, %"class.WTF::String"* dereferenceable(8) %224, %"struct.WTF::KeyValuePair.2068"* dereferenceable(16) %223) #15
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %223, i64 1
  %227 = icmp eq %"struct.WTF::KeyValuePair.2068"* %226, %209
  br i1 %227, label %237, label %228

228:                                              ; preds = %222, %232
  %229 = phi %"struct.WTF::KeyValuePair.2068"* [ %233, %232 ], [ %226, %222 ]
  %230 = bitcast %"struct.WTF::KeyValuePair.2068"* %229 to i64*
  %231 = load i64, i64* %230, align 8
  switch i64 %231, label %235 [
    i64 -1, label %232
    i64 0, label %232
  ]

232:                                              ; preds = %228, %228
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %229, i64 1
  %234 = icmp eq %"struct.WTF::KeyValuePair.2068"* %233, %209
  br i1 %234, label %237, label %228

235:                                              ; preds = %228
  %236 = icmp eq %"struct.WTF::KeyValuePair.2068"* %229, %209
  br i1 %236, label %237, label %222

237:                                              ; preds = %216, %222, %235, %232, %194, %203, %219
  br i1 %195, label %250, label %238

238:                                              ; preds = %237
  %239 = load atomic i32, i32* %147 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %238
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i32 [ %245, %244 ], [ %243, %238 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #15
  br label %250

250:                                              ; preds = %237, %246, %249
  %251 = icmp eq %"class.blink::XMLParserContext"* %16, null
  br i1 %251, label %270, label %252

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %253) #15
  %254 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %270

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %16, i64 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %258, i64 2
  %260 = bitcast %"class.base::RefCounted"* %259 to %struct._xmlParserCtxt**
  %261 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %260, align 8
  %262 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %261, i64 0, i32 2
  %263 = load %struct._xmlDoc*, %struct._xmlDoc** %262, align 8
  %264 = icmp eq %struct._xmlDoc* %263, null
  br i1 %264, label %267, label %265

265:                                              ; preds = %257
  call void @xmlFreeDoc(%struct._xmlDoc* nonnull %263) #15
  %266 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %260, align 8
  br label %267

267:                                              ; preds = %265, %257
  %268 = phi %struct._xmlParserCtxt* [ %261, %257 ], [ %266, %265 ]
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* %268) #15
  %269 = bitcast %"class.blink::XMLParserContext"* %16 to i8*
  call void @free(i8* %269) #15
  br label %270

270:                                              ; preds = %250, %252, %267
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %13) #15
  %271 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %8, align 8
  %272 = icmp eq %"struct.WTF::KeyValuePair.2068"* %271, null
  br i1 %272, label %275, label %273, !prof !4

273:                                              ; preds = %270
  %274 = load i32, i32* %9, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2068"* nonnull %271, i32 %274) #15
  store %"struct.WTF::KeyValuePair.2068"* null, %"struct.WTF::KeyValuePair.2068"** %8, align 8
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL31AttributesStartElementNsHandlerEPvPKhS2_S2_iPS2_iiS3_(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, i32, i8** nocapture readnone, i32, i32, i8** nocapture readonly) #0 {
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.2342", align 8
  %13 = alloca %"class.WTF::StringAppend.2343", align 8
  %14 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0)) #19
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %302

16:                                               ; preds = %9
  %17 = getelementptr inbounds i8, i8* %0, i64 424
  %18 = bitcast i8* %17 to %"struct.blink::AttributeParseState"**
  %19 = load %"struct.blink::AttributeParseState"*, %"struct.blink::AttributeParseState"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %19, i64 0, i32 1
  store i8 1, i8* %20, align 8
  %21 = bitcast i8** %8 to %"struct.blink::xmlSAX2Attributes"*
  %22 = icmp sgt i32 %6, 0
  br i1 %22, label %23, label %302

23:                                               ; preds = %16
  %24 = bitcast %"class.WTF::String"* %10 to i8*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::String"* %11 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %28 = bitcast %"class.WTF::StringAppend.2342"* %12 to i8*
  %29 = bitcast %"class.WTF::StringAppend.2343"* %13 to i8*
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %13, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %12, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::AttributeParseState", %"struct.blink::AttributeParseState"* %19, i64 0, i32 0, i32 0
  %35 = zext i32 %6 to i64
  br label %36

36:                                               ; preds = %299, %23
  %37 = phi i64 [ 0, %23 ], [ %300, %299 ]
  %38 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %21, i64 %37, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %39) #15
  %41 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %21, i64 %37, i32 4
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %21, i64 %37, i32 3
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %25, align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = shl i64 %47, 32
  %50 = ashr exact i64 %49, 32
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %48, i64 %50) #15
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %25, align 8
  %52 = getelementptr inbounds %"struct.blink::xmlSAX2Attributes", %"struct.blink::xmlSAX2Attributes"* %21, i64 %37, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %53) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %27, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %79

60:                                               ; preds = %36, %56
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %27, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %61, label %192, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %192

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #15
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  call void @llvm.trap() #15
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %192

79:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #15
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  call void @llvm.trap() #15
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %79, %94
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = load atomic i32, i32* %80 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  br i1 %100, label %102, label %112

102:                                              ; preds = %96
  %103 = zext i32 %97 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #15
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %102
  call void @llvm.trap() #15
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %96
  %113 = phi i32 [ %111, %110 ], [ %97, %96 ]
  %114 = load atomic i32, i32* %80 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = add i32 %113, -1
  store i32 %118, i32* %101, align 4
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i32 [ %118, %117 ], [ %113, %112 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #15
  br label %123

123:                                              ; preds = %119, %122
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %30, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8** %31, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #15
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  call void @llvm.trap() #15
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %123, %125, %140
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2342"* nonnull sret %12, %"class.WTF::StringAppend.2343"* nonnull dereferenceable(16) %13, %"class.WTF::StringImpl"* %40)
  %143 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.2342"* nonnull %12)
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %27, align 8
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #15
  br label %159

159:                                              ; preds = %158, %155, %142
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #15
  br label %175

175:                                              ; preds = %159, %171, %174
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #15
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br label %192

192:                                              ; preds = %77, %62, %60, %191
  %193 = call { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2065"* %34, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %10) #15
  %194 = extractvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %193, 1
  %195 = and i8 %194, 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %238

197:                                              ; preds = %192
  %198 = extractvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %193, 0
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %198, i64 0, i32 1
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %219, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i33
  %211 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %210, i33 1) #15
  %212 = extractvalue { i33, i1 } %211, 1
  %213 = extractvalue { i33, i1 } %211, 0
  %214 = icmp slt i33 %213, 0
  %215 = or i1 %212, %214
  br i1 %215, label %216, label %217, !prof !2

216:                                              ; preds = %207
  call void @llvm.trap() #15
  unreachable

217:                                              ; preds = %207
  %218 = trunc i33 %213 to i32
  store i32 %218, i32* %208, align 4
  br label %219

219:                                              ; preds = %217, %202, %197
  %220 = ptrtoint %"class.WTF::StringImpl"* %200 to i64
  %221 = bitcast %"class.WTF::String"* %199 to i64*
  %222 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  store i64 %220, i64* %221, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #15
  br label %238

238:                                              ; preds = %192, %219, %234, %237
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #15
  br label %254

254:                                              ; preds = %238, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  br i1 %55, label %268, label %255

255:                                              ; preds = %254
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #15
  br label %268

268:                                              ; preds = %254, %264, %267
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #15
  br label %284

284:                                              ; preds = %268, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %285 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #15
  br label %299

299:                                              ; preds = %284, %295, %298
  %300 = add nuw nsw i64 %37, 1
  %301 = icmp eq i64 %300, %35
  br i1 %301, label %302, label %36

302:                                              ; preds = %299, %16, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2069"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2304"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #15
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i8* %8) #15
  %9 = bitcast %"class.WTF::StringTypeAdapter.2304"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #15
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %2, i8* %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #15
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2069"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #15
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2069"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #15
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #15
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #15
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #15
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptableDocumentParser"* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptableDocumentParser"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14DocumentParser17HasInsertionPointEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17XMLDocumentParser6insertERKN3WTF6StringE(%"class.blink::XMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink25DecodedDataDocumentParser11AppendBytesEPKcm(%"class.blink::DecodedDataDocumentParser"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DecodedDataDocumentParser", %"class.blink::DecodedDataDocumentParser"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink25DecodedDataDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::DecodedDataDocumentParser"*, %"class.blink::TextResourceDecoder"*) unnamed_addr #3

declare %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser7DecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14DocumentParser18SetHasAppendedDataEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14DocumentParser24DocumentElementAvailableEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17XMLDocumentParser10WellFormedEv(%"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ScriptableDocumentParser17IsExecutingScriptEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink24ScriptableDocumentParser21IsParsingAtLineNumberEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #15
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @xmlInitParser() local_unnamed_addr #3

declare i32 @xmlRegisterInputCallbacks(i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL9MatchFuncEPKc(i8* nocapture readnone) #0 {
  %2 = load %"class.blink::Document"*, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  %3 = icmp eq %"class.blink::Document"* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN3WTF13CurrentThreadEv() #15
  %6 = load i32, i32* @_ZN5blinkL22g_libxml_loader_threadE, align 4
  %7 = icmp eq i32 %5, %6
  %8 = zext i1 %7 to i32
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %1 ], [ %8, %4 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN5blinkL8OpenFuncEPKc(i8*) #0 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.blink::XMLDocumentParserScope", align 8
  %6 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %7 = alloca %"class.blink::FetchParameters", align 8
  %8 = alloca %"class.blink::ResourceRequest", align 8
  %9 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 112, i1 false)
  %10 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #15
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = icmp eq i8* %0, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = tail call i64 @strlen(i8* nonnull %0) #19
  br label %15

15:                                               ; preds = %1, %13
  %16 = phi i64 [ %14, %13 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %0, i64 %16) #15
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %2, %"class.blink::KURL"* dereferenceable(112) %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %15, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %34 = call fastcc zeroext i1 @_ZN5blinkL23ShouldAllowExternalLoadERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %2)
  br i1 %34, label %35, label %135

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %36) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #15
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  %38 = bitcast %"class.blink::XMLDocumentParserScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #15
  %39 = bitcast %"class.blink::XMLDocumentParserScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false)
  call void @_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"* nonnull %5, %"class.blink::Document"* null) #15
  %40 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %40) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 112, i1 false)
  %41 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %37) #15
  %42 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %41) #15
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %6, %"class.blink::DOMWrapperWorld"* %42) #15
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names4kXmlE, align 8
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #15
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  call void @llvm.trap() #15
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %35
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i64*
  %67 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #15
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %84) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1428 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1439 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1483", i8, i8, [6 x i8], %class.scoped_refptr.507, %class.scoped_refptr.1488, %class.scoped_refptr.1490 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.145 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.146, %class.scoped_refptr.146, %class.scoped_refptr.146, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1397, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1419", %"class.WTF::Vector.237", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.270 } } } }, { { { { i8, [7 x i8], %union.anon.270 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], %union.anon.1428 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1428 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.1433 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1439 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.3" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1483", i8, i8, [6 x i8], %class.scoped_refptr.507, %class.scoped_refptr.1488, %class.scoped_refptr.1490 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blinkL8OpenFuncEPKc.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #15
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %7, %"class.blink::ResourceRequest"* nonnull %8, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %6) #15
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #15
  %85 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 17
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 14, i32 0, i32 0
  %87 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %86, align 8
  %88 = call %"class.blink::RawResource"* @_ZN5blink11RawResource18FetchSynchronouslyERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %7, %"class.blink::ResourceFetcher"* %87, %"class.blink::RawResourceClient"* null) #15
  %89 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %88, i64 0, i32 0, i32 2
  %90 = load i8, i8* %89, align 1
  %91 = add i8 %90, -3
  %92 = icmp ult i8 %91, 2
  br i1 %92, label %103, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %88, i64 0, i32 0
  %95 = bitcast %"class.blink::RawResource"* %88 to %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)***
  %96 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %96, i64 13
  %98 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %97, align 8
  %99 = call %"class.WTF::SharedBuffer"* %98(%"class.blink::Resource"* %94) #15
  %100 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %88, i64 0, i32 0, i32 29
  %101 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %100) #15
  %102 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %101) #15
  br label %103

103:                                              ; preds = %93, %83
  %104 = phi %"class.WTF::SharedBuffer"* [ null, %83 ], [ %99, %93 ]
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %84) #15
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %40) #15
  call void @_ZN5blink22XMLDocumentParserScopeD1Ev(%"class.blink::XMLDocumentParserScope"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #15
  %105 = call fastcc zeroext i1 @_ZN5blinkL23ShouldAllowExternalLoadERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %4)
  br i1 %105, label %106, label %124

106:                                              ; preds = %103
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  %108 = icmp eq %"class.blink::Document"* %107, null
  %109 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 2
  %110 = icmp eq %"class.blink::UseCounter"* %109, null
  %111 = or i1 %108, %110
  br i1 %111, label %117, label %112

112:                                              ; preds = %106
  %113 = bitcast %"class.blink::UseCounter"* %109 to void (%"class.blink::UseCounter"*, i32)***
  %114 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %114, i64 3
  %116 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %115, align 8
  call void %116(%"class.blink::UseCounter"* nonnull %109, i32 529) #15
  br label %117

117:                                              ; preds = %106, %112
  %118 = call noalias i8* @malloc(i64 16) #15
  %119 = bitcast i8* %118 to %"class.blink::SharedBufferReader"*
  %120 = icmp eq %"class.WTF::SharedBuffer"* %104, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %122) #15
  br label %123

123:                                              ; preds = %117, %121
  call void @_ZN5blink18SharedBufferReaderC1E13scoped_refptrIKN3WTF12SharedBufferEE(%"class.blink::SharedBufferReader"* %119, %"class.WTF::SharedBuffer"* %104) #15
  br label %124

124:                                              ; preds = %103, %123
  %125 = phi i8* [ %118, %123 ], [ bitcast (i32* @_ZN5blinkL19g_global_descriptorE to i8*), %103 ]
  %126 = icmp eq %"class.WTF::SharedBuffer"* %104, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #15
  %129 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %104) #15
  %133 = bitcast %"class.WTF::SharedBuffer"* %104 to i8*
  call void @free(i8* %133) #15
  br label %134

134:                                              ; preds = %124, %127, %132
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %36) #15
  br label %135

135:                                              ; preds = %33, %134
  %136 = phi i8* [ %125, %134 ], [ bitcast (i32* @_ZN5blinkL19g_global_descriptorE to i8*), %33 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #15
  ret i8* %136
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL8ReadFuncEPvPci(i8*, i8*, i32) #0 {
  %4 = icmp eq i8* %0, bitcast (i32* @_ZN5blinkL19g_global_descriptorE to i8*)
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to %"class.blink::SharedBufferReader"*
  %7 = tail call i32 @_ZN5blink18SharedBufferReader8ReadDataEPci(%"class.blink::SharedBufferReader"* %6, i8* %1, i32 %2) #15
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %3 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blinkL9CloseFuncEPv(i8*) #0 {
  %2 = icmp eq i8* %0, bitcast (i32* @_ZN5blinkL19g_global_descriptorE to i8*)
  %3 = icmp eq i8* %0, null
  %4 = or i1 %2, %3
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %"class.blink::SharedBufferReader"*
  tail call void @_ZN5blink18SharedBufferReaderD1Ev(%"class.blink::SharedBufferReader"* nonnull %6) #15
  tail call void @free(i8* %0) #15
  br label %7

7:                                                ; preds = %5, %1
  ret i32 0
}

declare i32 @xmlRegisterOutputCallbacks(i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blinkL9WriteFuncEPvPKci(i8* nocapture readnone, i8* nocapture readnone, i32) #7 {
  ret i32 0
}

declare i32 @_ZN3WTF13CurrentThreadEv() local_unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL23ShouldAllowExternalLoadERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringAppend.2284", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.2283", align 8
  %12 = alloca %"class.WTF::StringAppend.2284", align 8
  %13 = alloca %"class.WTF::StringAppend.2069", align 8
  %14 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  br label %41

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  br label %46

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #15
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #15
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #15
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %41, label %46

41:                                               ; preds = %17, %36
  %42 = phi i8* [ %18, %17 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %44, i64* %45, align 8
  br label %56

46:                                               ; preds = %24, %36
  %47 = phi i8* [ %25, %24 ], [ %39, %36 ]
  %48 = phi %"class.WTF::StringImpl"* [ %15, %24 ], [ %38, %36 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %46, %41
  %57 = phi i8* [ %47, %46 ], [ %42, %41 ]
  %58 = phi i64 [ %55, %46 ], [ %44, %41 ]
  %59 = phi i32 [ %51, %46 ], [ 0, %41 ]
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %59, i32* %60, align 8
  %61 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #15
  %62 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 23, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #15
  br i1 %65, label %91, label %66

66:                                               ; preds = %56
  %67 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #15
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %71, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %66
  %75 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %72, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  %76 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #15
  br i1 %75, label %79, label %89

77:                                               ; preds = %66
  %78 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #15
  br label %89

79:                                               ; preds = %74
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 12, i32* %83, align 8
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = call zeroext i1 @_ZNK3WTF10StringImpl25EndsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %84, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  br i1 %87, label %91, label %94

88:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  br label %94

89:                                               ; preds = %77, %74
  %90 = phi i8* [ %76, %74 ], [ %78, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  br label %94

91:                                               ; preds = %56, %86
  %92 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.13, i64 0, i64 0), i32 571, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #15
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #15
  br label %94

94:                                               ; preds = %89, %88, %86, %91
  %95 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #15
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 26, i32* %99, align 8
  br i1 %16, label %104, label %100

100:                                              ; preds = %94
  %101 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #15
  br i1 %101, label %419, label %102

102:                                              ; preds = %100
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %105

104:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #15
  br label %105

105:                                              ; preds = %102, %104
  %106 = phi i64 [ %103, %102 ], [ %96, %104 ]
  %107 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #15
  %108 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 30, i32* %110, align 8
  br i1 %16, label %113, label %111

111:                                              ; preds = %105
  %112 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #15
  br i1 %112, label %419, label %114

113:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #15
  br label %114

114:                                              ; preds = %113, %111
  %115 = load %"class.blink::Document"*, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  %116 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %115) #15
  %117 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %116) #15
  %118 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* %117, %"class.blink::KURL"* dereferenceable(112) %0) #15
  br i1 %118, label %417, label %119

119:                                              ; preds = %114
  %120 = call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %0) #15
  br i1 %120, label %417, label %121

121:                                              ; preds = %119
  %122 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #15
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %123, align 8
  %124 = bitcast %"class.WTF::StringAppend.2283"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %124) #15
  %125 = bitcast %"class.WTF::StringAppend.2284"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #15
  %126 = bitcast %"class.WTF::StringAppend.2069"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #15
  %127 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %0) #15
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %204, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %146

136:                                              ; preds = %129
  %137 = zext i32 %135 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #15
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !2

143:                                              ; preds = %136
  call void @llvm.trap() #15
  unreachable

144:                                              ; preds = %136
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %134, align 4
  br label %146

146:                                              ; preds = %144, %129
  %147 = phi i32 [ %145, %144 ], [ %135, %129 ]
  %148 = load atomic i32, i32* %130 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %161

151:                                              ; preds = %146
  %152 = zext i32 %147 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #15
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !2

158:                                              ; preds = %151
  call void @llvm.trap() #15
  unreachable

159:                                              ; preds = %151
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %134, align 4
  br label %161

161:                                              ; preds = %159, %146
  %162 = phi i32 [ %160, %159 ], [ %147, %146 ]
  %163 = load atomic i32, i32* %130 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %161
  %167 = add i32 %162, -1
  store i32 %167, i32* %134, align 4
  br label %168

168:                                              ; preds = %166, %161
  %169 = phi i32 [ %167, %166 ], [ %162, %161 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #15
  br label %172

172:                                              ; preds = %168, %171
  %173 = load atomic i32, i32* %130 monotonic, align 4, !noalias !13
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = load i32, i32* %134, align 4
  br i1 %175, label %177, label %187

177:                                              ; preds = %172
  %178 = zext i32 %176 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #15
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %177
  call void @llvm.trap() #15, !noalias !13
  unreachable

185:                                              ; preds = %177
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %134, align 4, !noalias !13
  br label %187

187:                                              ; preds = %172, %185
  %188 = phi i32 [ %186, %185 ], [ %176, %172 ]
  %189 = bitcast %"class.WTF::StringAppend.2069"* %13 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.17 to i64), i64* %189, align 8, !alias.scope !13
  %190 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %190, align 8, !alias.scope !13
  %191 = load atomic i32, i32* %130 monotonic, align 4, !noalias !13
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %208

194:                                              ; preds = %187
  %195 = zext i32 %188 to i33
  %196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #15
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !2

201:                                              ; preds = %194
  call void @llvm.trap() #15, !noalias !13
  unreachable

202:                                              ; preds = %194
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %134, align 4, !noalias !13
  br label %208

204:                                              ; preds = %121
  %205 = bitcast %"class.WTF::StringAppend.2069"* %13 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.17 to i64), i64* %205, align 8, !alias.scope !13
  %206 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %206, align 8, !alias.scope !13
  %207 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i8** %207, align 8, !alias.scope !13
  br label %220

208:                                              ; preds = %202, %187
  %209 = phi i32 [ %203, %202 ], [ %188, %187 ]
  %210 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i8** %210, align 8, !alias.scope !13
  %211 = load atomic i32, i32* %130 monotonic, align 4, !noalias !13
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %208
  %215 = add i32 %209, -1
  store i32 %215, i32* %134, align 4, !noalias !13
  br label %216

216:                                              ; preds = %214, %208
  %217 = phi i32 [ %215, %214 ], [ %209, %208 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #15, !noalias !13
  br label %220

220:                                              ; preds = %204, %216, %219
  %221 = bitcast %"class.blink::ExecutionContext"* %116 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %222 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %221, align 8
  %223 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %222, i64 18
  %224 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %223, align 8
  %225 = call dereferenceable(112) %"class.blink::KURL"* %224(%"class.blink::ExecutionContext"* %116) #15
  %226 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %225) #15
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2284"* nonnull sret %12, %"class.WTF::StringAppend.2069"* nonnull dereferenceable(24) %13, %"class.WTF::StringImpl"* %226)
  %227 = bitcast %"class.WTF::StringAppend.2284"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %227)
  %228 = bitcast %"class.WTF::StringAppend.2284"* %12 to i64*
  %229 = load i64, i64* %228, align 8, !noalias !16
  %230 = bitcast %"class.WTF::StringAppend.2284"* %2 to i64*
  store i64 %229, i64* %230, align 8, !noalias !16
  %231 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8, !noalias !16
  %233 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %233, align 8, !noalias !16
  %234 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %234, label %252, label %235

235:                                              ; preds = %220
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %252

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i33
  %244 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %243, i33 1) #15
  %245 = extractvalue { i33, i1 } %244, 1
  %246 = extractvalue { i33, i1 } %244, 0
  %247 = icmp slt i33 %246, 0
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250, !prof !2

249:                                              ; preds = %240
  call void @llvm.trap() #15
  unreachable

250:                                              ; preds = %240
  %251 = trunc i33 %246 to i32
  store i32 %251, i32* %241, align 4
  br label %252

252:                                              ; preds = %250, %235, %220
  %253 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %2, i64 0, i32 0, i32 1
  %254 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %12, i64 0, i32 0, i32 1
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8, !noalias !16
  %257 = bitcast i8** %253 to i64*
  store i64 %256, i64* %257, align 8, !noalias !16
  %258 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %12, i64 0, i32 1, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8, !noalias !16
  %260 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %2, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %259, %"class.WTF::StringImpl"** %260, align 8, !noalias !16
  %261 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %261, label %279, label %262

262:                                              ; preds = %252
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i33
  %271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %270, i33 1) #15
  %272 = extractvalue { i33, i1 } %271, 1
  %273 = extractvalue { i33, i1 } %271, 0
  %274 = icmp slt i33 %273, 0
  %275 = or i1 %272, %274
  br i1 %275, label %276, label %277, !prof !2

276:                                              ; preds = %267
  call void @llvm.trap() #15
  unreachable

277:                                              ; preds = %267
  %278 = trunc i33 %273 to i32
  store i32 %278, i32* %268, align 4
  br label %279

279:                                              ; preds = %252, %262, %277
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2283"* nonnull %11, %"class.WTF::StringAppend.2284"* nonnull byval(%"class.WTF::StringAppend.2284") align 8 %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227)
  %280 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2283"* nonnull %11)
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %123, align 8
  %281 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #15
  br label %297

297:                                              ; preds = %296, %293, %279
  %298 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #15
  br label %314

314:                                              ; preds = %297, %310, %313
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #15
  br label %330

330:                                              ; preds = %329, %326, %314
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #15
  br label %346

346:                                              ; preds = %330, %342, %345
  %347 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #15
  br label %363

363:                                              ; preds = %346, %359, %362
  br i1 %128, label %389, label %364

364:                                              ; preds = %363
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #15
  %377 = load i32, i32* %369, align 4
  br label %378

378:                                              ; preds = %373, %376
  %379 = phi i32 [ %374, %373 ], [ %377, %376 ]
  %380 = load atomic i32, i32* %365 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %385

383:                                              ; preds = %378
  %384 = add i32 %379, -1
  store i32 %384, i32* %369, align 4
  br label %385

385:                                              ; preds = %383, %378
  %386 = phi i32 [ %384, %383 ], [ %379, %378 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #15
  br label %389

389:                                              ; preds = %363, %385, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %124) #15
  %390 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %391 = bitcast i8* %390 to %"class.blink::ConsoleMessage"*
  %392 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %391, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::SourceLocation"* %392) #15
  %393 = getelementptr inbounds i8, i8* %390, i64 -4
  %394 = bitcast i8* %393 to i16*
  %395 = load atomic i16, i16* %394 monotonic, align 2
  %396 = or i16 %395, 1
  store atomic i16 %396, i16* %394 release, align 2
  %397 = bitcast %"class.blink::ExecutionContext"* %116 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %398 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %398, i64 52
  %400 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %399, align 8
  call void %400(%"class.blink::ExecutionContext"* %116, %"class.blink::ConsoleMessage"* %391, i1 zeroext false) #15
  %401 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %402 = icmp eq %"class.WTF::StringImpl"* %401, null
  br i1 %402, label %416, label %403

403:                                              ; preds = %389
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = and i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  br i1 %407, label %410, label %412

410:                                              ; preds = %403
  %411 = add i32 %409, -1
  store i32 %411, i32* %408, align 4
  br label %412

412:                                              ; preds = %410, %403
  %413 = phi i32 [ %411, %410 ], [ %409, %403 ]
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %412
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %401) #15
  br label %416

416:                                              ; preds = %389, %412, %415
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #15
  br label %417

417:                                              ; preds = %416, %119, %114
  %418 = phi i1 [ false, %416 ], [ false, %119 ], [ true, %114 ]
  br i1 %16, label %433, label %419

419:                                              ; preds = %100, %111, %417
  %420 = phi i1 [ %418, %417 ], [ false, %111 ], [ false, %100 ]
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %419
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %419
  %430 = phi i32 [ %428, %427 ], [ %426, %419 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %433

433:                                              ; preds = %417, %429, %432
  %434 = phi i1 [ %418, %417 ], [ %420, %429 ], [ %420, %432 ]
  ret i1 %434
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #3

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #5

declare %"class.blink::RawResource"* @_ZN5blink11RawResource18FetchSynchronouslyERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #5

declare void @_ZN5blink18SharedBufferReaderC1E13scoped_refptrIKN3WTF12SharedBufferEE(%"class.blink::SharedBufferReader"*, %"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2284"* noalias sret, %"class.WTF::StringAppend.2069"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2069", align 8
  %5 = bitcast %"class.WTF::StringAppend.2069"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2069"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #15
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2284"* %0, %"class.WTF::StringAppend.2069"* nonnull byval(%"class.WTF::StringAppend.2069") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2284"* %0, %"class.WTF::StringAppend.2069"* nonnull byval(%"class.WTF::StringAppend.2069") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2283"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #15
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2304"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #15
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i8* %15) #15
  %16 = bitcast %"class.WTF::StringTypeAdapter.2304"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #15
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %2, i8* %18) #15
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2283"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #15
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2283"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #15
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #15
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #15
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2283"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #15
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2283"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #15
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #15
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #15
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare zeroext i1 @_ZNK3WTF10StringImpl25EndsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2283"*, %"class.WTF::StringAppend.2284"* byval(%"class.WTF::StringAppend.2284") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2284"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2283"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2284"*, %"class.WTF::StringAppend.2069"* byval(%"class.WTF::StringAppend.2069") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2069"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2284"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2283"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %14) #15
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2284"* %9) #15
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2284"* %9) #15
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2283"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #15
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2069"* %10, i8* %1) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %10) #15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %30, i8* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2284"* %5) #15
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %36) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2283"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2283", %"class.WTF::StringAppend.2283"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #15
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2069"* %10, i16* %1) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %10) #15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %30, i16* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2284"* %5) #15
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i16* %36) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2284"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2284", %"class.WTF::StringAppend.2284"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2069"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %14) #15
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2070"* %9) #15
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2070"* %9) #15
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2070"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2070", %"class.WTF::StringAppend.2070"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2070", %"class.WTF::StringAppend.2070"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2069"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2304"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2304"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.2304"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i8* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %34, i8* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2070"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %5, i8* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2069"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2304"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2304"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.2304"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2069", %"class.WTF::StringAppend.2069"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %3, i16* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %34, i16* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2070"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %5, i16* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #10 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.27, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare i32 @_ZN5blink18SharedBufferReader8ReadDataEPci(%"class.blink::SharedBufferReader"*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18SharedBufferReaderD1Ev(%"class.blink::SharedBufferReader"*) unnamed_addr #5

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #3

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #15
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare i32 @xmlParseChunk(%struct._xmlParserCtxt*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @xmlSwitchEncoding(%struct._xmlParserCtxt*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.2330", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2330"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2330"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare zeroext i1 @_ZN5blink7Element18ParseAttributeNameERNS_13QualifiedNameERKN3WTF12AtomicStringES6_RNS_14ExceptionStateE(%"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2330"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #15
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.2330"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2330"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #15
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #15
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2306"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #15
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %67, i8* %30) #15
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %68, i8* %71) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #15
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #15
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2330"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #15
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2306"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #15
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #15
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2306"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #15
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #15
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %144, i16* %107) #15
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %145, i16* %148) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #15
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #15
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #15
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #15
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2330"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #15
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %31, i8* %32) #15
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2008"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  %8 = icmp ugt %"class.blink::Attribute"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Attribute"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2008"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Attribute"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2008"* %0, i32 %22) #15
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Attribute"* %1 to i64
  %39 = ptrtoint %"class.blink::Attribute"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2008"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Attribute"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2008"* %0, i32 %50) #15
  %64 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Attribute"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Attribute"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 16777216
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %83) #15
  br label %84

84:                                               ; preds = %68, %77, %82
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 1
  %86 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::AtomicString"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::AtomicString"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = load i32, i32* %3, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2008"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2008"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Attribute"* [ %37, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Attribute"* [ %36, %28 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #15
  br label %28

28:                                               ; preds = %26, %21, %14
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %35) #15
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 1
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %38 = icmp eq %"class.blink::Attribute"* %37, %10
  br i1 %38, label %39, label %14

39:                                               ; preds = %28, %4
  %40 = bitcast %"class.blink::Attribute"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #15
  br label %91

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %42) #15
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #15
  %45 = lshr i64 %43, 4
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %41
  %55 = bitcast %"class.blink::Attribute"* %48 to i8*
  br label %86

56:                                               ; preds = %41
  %57 = bitcast i8* %44 to %"class.blink::Attribute"*
  br label %58

58:                                               ; preds = %56, %72
  %59 = phi %"class.blink::Attribute"* [ %81, %72 ], [ %48, %56 ]
  %60 = phi %"class.blink::Attribute"* [ %80, %72 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777216
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #15
  br label %72

72:                                               ; preds = %70, %65, %58
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %79) #15
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 1
  %82 = icmp eq %"class.blink::Attribute"* %81, %52
  br i1 %82, label %83, label %58

83:                                               ; preds = %72
  %84 = bitcast %"class.WTF::Vector.2008"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %54, %83
  %87 = phi i8* [ %85, %83 ], [ %55, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #15
  %88 = bitcast %"class.WTF::Vector.2008"* %0 to i64*
  store atomic i64 %46, i64* %88 monotonic, align 8
  %89 = trunc i64 %45 to i32
  %90 = getelementptr inbounds %"class.WTF::Vector.2008", %"class.WTF::Vector.2008"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %89, i32* %90, align 8
  br label %91

91:                                               ; preds = %86, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2336"* noalias sret, %"class.WTF::StringAppend.2016"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.2336"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.2336"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.2336"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #15
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #15
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend.2336"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2304"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %2, i8* %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2336"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #15
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend.2336"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2336"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #15
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend.2336"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2336"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend.2336"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i8* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i8* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend.2336"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2336", %"class.WTF::StringAppend.2336"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i16* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i16* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i16* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %21) #15
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  ret i32 %23
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #5

declare void @_ZNK5blink7Element24StripScriptingAttributesERN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.WTF::Vector.2008"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink7Element19ParserSetAttributesERKN3WTF6VectorINS_9AttributeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.WTF::Vector.2008"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #15

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #15

declare %struct._xmlEntity* @xmlGetPredefinedEntity(i8*) local_unnamed_addr #3

declare %struct._xmlEntity* @xmlGetDocEntity(%struct._xmlDoc*, i8*) local_unnamed_addr #3

declare i64 @_ZN5blink29DecodeNamedEntityToUCharArrayEPKcPDs(i8*, i16*) local_unnamed_addr #3

declare i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16**, i16*, i8**, i8*, i1 zeroext) local_unnamed_addr #3

declare void @xmlSAX2StartDocument(i8*) local_unnamed_addr #3

declare void @xmlSAX2EndDocument(i8*) local_unnamed_addr #3

declare void @xmlSAX2InternalSubset(i8*, i8*, i8*, i8*) local_unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink8SVGImage12IsInSVGImageEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Deque"*, %"class.WTF::Deque"* dereferenceable(24)) unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm(i64 %9) #15
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SegmentedSubstringEEEPKcv, i64 0, i64 0)) #15
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = udiv i64 %10, 40
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::SegmentedSubstring"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::SegmentedSubstring"* [ null, %2 ], [ %16, %8 ]
  %19 = phi i32 [ 0, %2 ], [ %15, %8 ]
  %20 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %26, align 8
  %28 = icmp ugt i32 %22, %25
  br i1 %28, label %67, label %29

29:                                               ; preds = %17
  %30 = zext i32 %22 to i64
  %31 = zext i32 %25 to i64
  %32 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %31
  %33 = icmp eq i32 %22, %25
  br i1 %33, label %146, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %18, i64 %30
  %36 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %30
  br label %37

37:                                               ; preds = %34, %63
  %38 = phi %"class.blink::SegmentedSubstring"* [ %64, %63 ], [ %35, %34 ]
  %39 = phi %"class.blink::SegmentedSubstring"* [ %65, %63 ], [ %36, %34 ]
  %40 = bitcast %"class.blink::SegmentedSubstring"* %38 to i8*
  %41 = bitcast %"class.blink::SegmentedSubstring"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 26, i1 false) #15
  %42 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %39, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %38, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #15
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #15
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %37
  %64 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %38, i64 1
  %65 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %39, i64 1
  %66 = icmp eq %"class.blink::SegmentedSubstring"* %65, %32
  br i1 %66, label %146, label %37

67:                                               ; preds = %17
  %68 = zext i32 %25 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %68
  %70 = icmp eq i32 %25, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %67, %97
  %72 = phi %"class.blink::SegmentedSubstring"* [ %98, %97 ], [ %18, %67 ]
  %73 = phi %"class.blink::SegmentedSubstring"* [ %99, %97 ], [ %27, %67 ]
  %74 = bitcast %"class.blink::SegmentedSubstring"* %72 to i8*
  %75 = bitcast %"class.blink::SegmentedSubstring"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 26, i1 false) #15
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %73, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %72, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #15
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  tail call void @llvm.trap() #15
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %71
  %98 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %72, i64 1
  %99 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %73, i64 1
  %100 = icmp eq %"class.blink::SegmentedSubstring"* %99, %69
  br i1 %100, label %101, label %71

101:                                              ; preds = %97
  %102 = load i32, i32* %20, align 8
  %103 = load i32, i32* %6, align 8
  %104 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %5, align 8
  br label %105

105:                                              ; preds = %101, %67
  %106 = phi %"class.blink::SegmentedSubstring"* [ %104, %101 ], [ %18, %67 ]
  %107 = phi i32 [ %103, %101 ], [ %19, %67 ]
  %108 = phi i32 [ %102, %101 ], [ %22, %67 ]
  %109 = zext i32 %108 to i64
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %110
  %112 = icmp eq i32 %108, %107
  br i1 %112, label %146, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %106, i64 %109
  %115 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %109
  br label %116

116:                                              ; preds = %113, %142
  %117 = phi %"class.blink::SegmentedSubstring"* [ %143, %142 ], [ %114, %113 ]
  %118 = phi %"class.blink::SegmentedSubstring"* [ %144, %142 ], [ %115, %113 ]
  %119 = bitcast %"class.blink::SegmentedSubstring"* %117 to i8*
  %120 = bitcast %"class.blink::SegmentedSubstring"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 26, i1 false) #15
  %121 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %118, i64 0, i32 5, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %117, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #15
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  tail call void @llvm.trap() #15
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %140, %125, %116
  %143 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %117, i64 1
  %144 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %118, i64 1
  %145 = icmp eq %"class.blink::SegmentedSubstring"* %144, %111
  br i1 %145, label %146, label %116

146:                                              ; preds = %63, %142, %105, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2342"* noalias sret, %"class.WTF::StringAppend.2343"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2342"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2342"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.2342"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2304"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %2, i8* %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2342"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #15
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2342"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2342"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #15
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2342"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2342"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #15
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #15
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2342"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2343"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2343"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2342"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i8* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2343"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i8* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2342"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2306", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2306"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2306"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2342", %"class.WTF::StringAppend.2342"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i16* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i16* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2306", %"class.WTF::StringTypeAdapter.2306"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2343"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i16* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2343"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2304", %"class.WTF::StringTypeAdapter.2304"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2343", %"class.WTF::StringAppend.2343"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %21) #15
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2065"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2068"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* null)
  %9 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2068"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #15
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.2068"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.2068"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.2068"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #15
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.2068"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.2068"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2068"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #15
  %72 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.2068"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2068"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.2068"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } undef, %"struct.WTF::KeyValuePair.2068"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.2068"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2065"*, %"struct.WTF::KeyValuePair.2068"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.49, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2068"*
  %37 = call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* %36, i32 %32, %"struct.WTF::KeyValuePair.2068"* %1) #15
  ret %"struct.WTF::KeyValuePair.2068"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2068"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.2068"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #15
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #15
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #15
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2065"*, %"struct.WTF::KeyValuePair.2068"*, i32, %"struct.WTF::KeyValuePair.2068"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2065", align 8
  %6 = bitcast %"class.WTF::HashTable.2065"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2065"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2068"* %1, %"struct.WTF::KeyValuePair.2068"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2065"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2065"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.2065"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2065"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2068"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2068"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2068"* nonnull %37, i32 %34) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.2068"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2068"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2068"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2068"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.2065"* nonnull %5, %"struct.WTF::KeyValuePair.2068"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.2068"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.2068"* %53, %"struct.WTF::KeyValuePair.2068"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.2068"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.2068"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.2065"*, %"struct.WTF::KeyValuePair.2068"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2065"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.2068"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.2068"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.2068"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2065"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #15
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.2068"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.2068"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.2068"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.2068"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.2068"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #15
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.2068"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.2068"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.2068"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } undef, %"struct.WTF::KeyValuePair.2068"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.2068"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2068"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.2068"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.2068"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #15
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2065"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.49, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.50, i64 0, i64 0)) #15
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #15
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2068"*
  %31 = call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* %30, i32 %17, %"struct.WTF::KeyValuePair.2068"* null) #15
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2068"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2065"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.2068"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2068"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* null)
  %9 = load %"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2068"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #15
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.2068"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.2068"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.2068"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #15
  br i1 %57, label %92, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.2068"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.2068"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2068"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #15
  %72 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.2068"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = tail call dereferenceable(16) %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.2068"* %79, %"struct.WTF::KeyValuePair.2068"* dereferenceable(16) %2) #15
  %81 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"class.WTF::HashTable.2065", %"class.WTF::HashTable.2065"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, %83
  %87 = shl i32 %86, 1
  %88 = load i32, i32* %12, align 8
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %78
  %91 = tail call %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2065"* %0, %"struct.WTF::KeyValuePair.2068"* %79)
  br label %92

92:                                               ; preds = %54, %78, %90
  %93 = phi i8 [ 1, %78 ], [ 1, %90 ], [ 0, %54 ]
  %94 = phi %"struct.WTF::KeyValuePair.2068"* [ %79, %78 ], [ %91, %90 ], [ %47, %54 ]
  %95 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } undef, %"struct.WTF::KeyValuePair.2068"* %94, 0
  %96 = insertvalue { %"struct.WTF::KeyValuePair.2068"*, i8 } %95, i8 %93, 1
  ret { %"struct.WTF::KeyValuePair.2068"*, i8 } %96
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.2068"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.2068"*, %"struct.WTF::KeyValuePair.2068"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #15
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.2068"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2068", %"struct.WTF::KeyValuePair.2068"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #15
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #15
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #15
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.2068"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.60"*, %"class.blink::Member.46"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.46"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.46"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.60"* %0, i32 %22) #15
  %23 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.46"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.46"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.60"* %0, i32 %37) #15
  %38 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.46"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.46"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.46"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.46"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #15
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.60"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %8, align 8
  %10 = icmp eq %"class.blink::Member.46"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ContainerNodeEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.60"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %8, align 8
  %26 = icmp eq %"class.blink::Member.46"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.46"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.60"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.60"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.60"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.60"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ContainerNodeEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.46"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.46"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.60"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.60"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.60"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ContainerNodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.53, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.55, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ContainerNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.46"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.46"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ContainerNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.46"* @_ZN3WTF6VectorIN5blink6MemberINS1_13ContainerNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.60"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.46"*, %"class.blink::Member.46"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %24, i64 %25
  ret %"class.blink::Member.46"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DocumentParser"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::DocumentParser"*
  %3 = bitcast i8* %0 to void (%"class.blink::DocumentParser"*)***
  %4 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %4, i64 1
  %6 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %5, align 8
  tail call void %6(%"class.blink::DocumentParser"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink21XMLParserScriptRunnerC1EPNS_25XMLParserScriptRunnerHostE(%"class.blink::XMLParserScriptRunner"*, %"class.blink::XMLParserScriptRunnerHost"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21XMLParserScriptRunnerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21XMLParserScriptRunnerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21XMLParserScriptRunnerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21XMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XMLParserScriptRunner"*
  tail call void @_ZNK5blink21XMLParserScriptRunner5TraceEPNS_7VisitorE(%"class.blink::XMLParserScriptRunner"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21XMLParserScriptRunnerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::XMLParserScriptRunner"*
  tail call void @_ZN5blink21XMLParserScriptRunnerD1Ev(%"class.blink::XMLParserScriptRunner"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21XMLParserScriptRunnerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21XMLParserScriptRunner5TraceEPNS_7VisitorE(%"class.blink::XMLParserScriptRunner"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21XMLParserScriptRunnerD1Ev(%"class.blink::XMLParserScriptRunner"*) unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.394"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.394"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.368"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %8, align 8
  %10 = icmp eq %"class.blink::Member.368"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2387"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2387"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2387", %"class.blink::HeapVectorBacking.2387"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %8, align 8
  %26 = icmp eq %"class.blink::Member.368"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.368"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.394"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.394"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2387"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2387"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2387"* %17, null
  %23 = icmp ne %"class.blink::Member.368"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.368"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.394"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2387", %"class.blink::HeapVectorBacking.2387"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.394"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.394"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2387", %"class.blink::HeapVectorBacking.2387"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.53, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2387"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.55, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.2387"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.2387"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.368"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.368"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.368"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.394", %"class.WTF::Vector.394"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %24, i64 %25
  ret %"class.blink::Member.368"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.118"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.118"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %85, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #15
  %66 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %74 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %72
  %84 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.118"* %0, %"struct.WTF::KeyValuePair"* %73)
  br label %85

85:                                               ; preds = %49, %72, %83
  %86 = phi i8 [ 1, %72 ], [ 1, %83 ], [ 0, %49 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %73, %72 ], [ %84, %83 ], [ %42, %49 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.118"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.49, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.118"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #15
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #15
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #15
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #15
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.118"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.118", align 8
  %6 = bitcast %"class.WTF::HashTable.118"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.118"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.118"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.118"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.118"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.118"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %37, i32 %34) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.118"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair"* %53, %"struct.WTF::KeyValuePair"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.118"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #15
  br label %85

85:                                               ; preds = %84, %81, %66
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %102

102:                                              ; preds = %85, %98, %101
  %103 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %67 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.WTF::AtomicString"* %106 to i64*
  store i64 %110, i64* %111, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8
  ret %"struct.WTF::KeyValuePair"* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Text"*
  %4 = bitcast i8* %1 to void (%"class.blink::Text"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Text"*, %"class.blink::Visitor"*)**, void (%"class.blink::Text"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Text"*, %"class.blink::Visitor"*)*, void (%"class.blink::Text"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Text"*, %"class.blink::Visitor"*)*, void (%"class.blink::Text"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Text"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink9XMLErrors5TraceEPNS_7VisitorE(%"class.blink::XMLErrors"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingStartElementNSCallbackC2ERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_NS1_12TextPositionE(%"class.blink::PendingStartElementNSCallback"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32, i8**, i32, i32, i8**, i64) unnamed_addr #0 comdat align 2 {
  %11 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.WTF::TextPosition"* %12 to i64*
  store i64 %9, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29PendingStartElementNSCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #15
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %10, %18, %33
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #15
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %35, %40, %55
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #15
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #15
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %57, %62, %77
  %80 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 4
  store i32 %4, i32* %80, align 8
  %81 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 6
  store i32 %6, i32* %81, align 8
  %82 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 7
  store i32 %7, i32* %82, align 4
  %83 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %84 = sext i32 %4 to i64
  %85 = shl nsw i64 %84, 4
  %86 = tail call i8* %83(i64 %85) #15
  %87 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 5
  %88 = bitcast i8*** %87 to i8**
  store i8* %86, i8** %88, align 8
  %89 = icmp sgt i32 %4, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %79
  %91 = shl nsw i32 %4, 1
  %92 = sext i32 %91 to i64
  br label %103

93:                                               ; preds = %103, %79
  %94 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %95 = sext i32 %6 to i64
  %96 = mul nsw i64 %95, 40
  %97 = tail call i8* %94(i64 %96) #15
  %98 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 8
  %99 = bitcast i8*** %98 to i8**
  store i8* %97, i8** %99, align 8
  %100 = icmp sgt i32 %6, 0
  br i1 %100, label %101, label %158

101:                                              ; preds = %93
  %102 = zext i32 %6 to i64
  br label %112

103:                                              ; preds = %90, %103
  %104 = phi i64 [ 0, %90 ], [ %110, %103 ]
  %105 = getelementptr inbounds i8*, i8** %5, i64 %104
  %106 = load i8*, i8** %105, align 8
  %107 = tail call i8* @xmlStrdup(i8* %106) #15
  %108 = load i8**, i8*** %87, align 8
  %109 = getelementptr inbounds i8*, i8** %108, i64 %104
  store i8* %107, i8** %109, align 8
  %110 = add nuw nsw i64 %104, 1
  %111 = icmp slt i64 %110, %92
  br i1 %111, label %103, label %93

112:                                              ; preds = %112, %101
  %113 = phi i64 [ 0, %101 ], [ %156, %112 ]
  %114 = trunc i64 %113 to i32
  %115 = mul nsw i32 %114, 5
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8*, i8** %8, i64 %116
  %118 = load i8*, i8** %117, align 8
  %119 = tail call i8* @xmlStrdup(i8* %118) #15
  %120 = load i8**, i8*** %98, align 8
  %121 = getelementptr inbounds i8*, i8** %120, i64 %116
  store i8* %119, i8** %121, align 8
  %122 = add nuw nsw i64 %116, 1
  %123 = getelementptr inbounds i8*, i8** %8, i64 %122
  %124 = load i8*, i8** %123, align 8
  %125 = tail call i8* @xmlStrdup(i8* %124) #15
  %126 = load i8**, i8*** %98, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 %122
  store i8* %125, i8** %127, align 8
  %128 = add nuw nsw i64 %116, 2
  %129 = getelementptr inbounds i8*, i8** %8, i64 %128
  %130 = load i8*, i8** %129, align 8
  %131 = tail call i8* @xmlStrdup(i8* %130) #15
  %132 = load i8**, i8*** %98, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i64 %128
  store i8* %131, i8** %133, align 8
  %134 = add nuw nsw i32 %115, 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8*, i8** %8, i64 %135
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add nuw nsw i32 %115, 3
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds i8*, i8** %8, i64 %140
  %142 = load i8*, i8** %141, align 8
  %143 = ptrtoint i8* %142 to i64
  %144 = sub i64 %138, %143
  %145 = trunc i64 %144 to i32
  %146 = tail call i8* @xmlStrndup(i8* %142, i32 %145) #15
  %147 = load i8**, i8*** %98, align 8
  %148 = getelementptr inbounds i8*, i8** %147, i64 %140
  store i8* %146, i8** %148, align 8
  %149 = load i8**, i8*** %98, align 8
  %150 = getelementptr inbounds i8*, i8** %149, i64 %140
  %151 = load i8*, i8** %150, align 8
  %152 = shl i64 %144, 32
  %153 = ashr exact i64 %152, 32
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  %155 = getelementptr inbounds i8*, i8** %149, i64 %135
  store i8* %154, i8** %155, align 8
  %156 = add nuw nsw i64 %113, 1
  %157 = icmp eq i64 %156, %102
  br i1 %157, label %158, label %112

158:                                              ; preds = %112, %93
  ret void
}

declare i8* @xmlStrdup(i8*) local_unnamed_addr #3

declare i8* @xmlStrndup(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingStartElementNSCallbackD2Ev(%"class.blink::PendingStartElementNSCallback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29PendingStartElementNSCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  %6 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %7 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 5
  br i1 %5, label %17, label %8

8:                                                ; preds = %17, %1
  %9 = phi void (i8*)* [ %6, %1 ], [ %28, %17 ]
  %10 = bitcast i8*** %7 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void %9(i8* %11) #15
  %12 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %56

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 8
  br label %29

17:                                               ; preds = %1, %17
  %18 = phi i64 [ %23, %17 ], [ 0, %1 ]
  %19 = phi void (i8*)* [ %28, %17 ], [ %6, %1 ]
  %20 = load i8**, i8*** %7, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 %18
  %22 = load i8*, i8** %21, align 8
  tail call void %19(i8* %22) #15
  %23 = add nuw nsw i64 %18, 1
  %24 = load i32, i32* %3, align 8
  %25 = shl nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %23, %26
  %28 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  br i1 %27, label %17, label %8

29:                                               ; preds = %15, %29
  %30 = phi i64 [ 0, %15 ], [ %52, %29 ]
  %31 = mul i64 %30, 5
  %32 = and i64 %31, 4294967295
  %33 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %34 = load i8**, i8*** %16, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 %32
  %36 = load i8*, i8** %35, align 8
  tail call void %33(i8* %36) #15
  %37 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %38 = load i8**, i8*** %16, align 8
  %39 = add nuw nsw i64 %32, 1
  %40 = getelementptr inbounds i8*, i8** %38, i64 %39
  %41 = load i8*, i8** %40, align 8
  tail call void %37(i8* %41) #15
  %42 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %43 = load i8**, i8*** %16, align 8
  %44 = add nuw nsw i64 %32, 2
  %45 = getelementptr inbounds i8*, i8** %43, i64 %44
  %46 = load i8*, i8** %45, align 8
  tail call void %42(i8* %46) #15
  %47 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %48 = load i8**, i8*** %16, align 8
  %49 = add nuw nsw i64 %32, 3
  %50 = getelementptr inbounds i8*, i8** %48, i64 %49
  %51 = load i8*, i8** %50, align 8
  tail call void %47(i8* %51) #15
  %52 = add nuw nsw i64 %30, 1
  %53 = load i32, i32* %12, align 8
  %54 = sext i32 %53 to i64
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %29, label %56

56:                                               ; preds = %29, %8
  %57 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %58 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 8
  %59 = bitcast i8*** %58 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void %57(i8* %60) #15
  %61 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %56, %73, %76
  %78 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #15
  br label %94

94:                                               ; preds = %77, %90, %93
  %95 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #15
  br label %111

111:                                              ; preds = %94, %107, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingStartElementNSCallbackD0Ev(%"class.blink::PendingStartElementNSCallback"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink29PendingStartElementNSCallbackD2Ev(%"class.blink::PendingStartElementNSCallback"* %0) #15
  %2 = bitcast %"class.blink::PendingStartElementNSCallback"* %0 to i8*
  tail call void @free(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingStartElementNSCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingStartElementNSCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 5
  %9 = load i8**, i8*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::PendingStartElementNSCallback", %"class.blink::PendingStartElementNSCallback"* %0, i64 0, i32 8
  %15 = load i8**, i8*** %14, align 8
  tail call void @_ZN5blink17XMLDocumentParser14StartElementNsERKN3WTF12AtomicStringES4_S4_iPPKhiiS7_(%"class.blink::XMLDocumentParser"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.WTF::AtomicString"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, i32 %7, i8** %9, i32 %11, i32 %13, i8** %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17XMLDocumentParser15PendingCallbackD2Ev(%"class.blink::XMLDocumentParser::PendingCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.30"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #15
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #15
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.30"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.30", %"class.WTF::Deque.30"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.std::__1::unique_ptr.35"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %5, i64 %26
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %24, i64 %26
  %29 = icmp ne %"class.std::__1::unique_ptr.35"* %28, null
  %30 = icmp ne %"class.std::__1::unique_ptr.35"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !4

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %5, i64 %33
  %35 = bitcast %"class.std::__1::unique_ptr.35"* %27 to i8*
  %36 = ptrtoint %"class.std::__1::unique_ptr.35"* %34 to i64
  %37 = ptrtoint %"class.std::__1::unique_ptr.35"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"class.std::__1::unique_ptr.35"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #15
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"class.std::__1::unique_ptr.35"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !4

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"class.std::__1::unique_ptr.35"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #15
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"class.std::__1::unique_ptr.35"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %52, i64 %59
  %61 = icmp ne %"class.std::__1::unique_ptr.35"* %60, null
  %62 = icmp ne %"class.std::__1::unique_ptr.35"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !4

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %5, i64 %65
  %67 = bitcast %"class.std::__1::unique_ptr.35"* %58 to i8*
  %68 = ptrtoint %"class.std::__1::unique_ptr.35"* %66 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.35"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"class.std::__1::unique_ptr.35"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #15
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"class.std::__1::unique_ptr.35"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17XMLDocumentParser15PendingCallbackENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #15
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #15
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2304"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %2, i8* %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #15
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #15
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i8* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i8* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2304", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2331", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2331"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2331"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2304"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %49, i16* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2304"* nonnull %4, i16* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2331", %"class.WTF::StringTypeAdapter.2331"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2307"* nonnull %53, i16* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27PendingEndElementNSCallbackD0Ev(%"class.blink::PendingEndElementNSCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.blink::PendingEndElementNSCallback"* %0 to i8*
  tail call void @free(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27PendingEndElementNSCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingEndElementNSCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingEndElementNSCallback", %"class.blink::PendingEndElementNSCallback"* %0, i64 0, i32 1
  %4 = bitcast %"class.WTF::TextPosition"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %1, i64 0, i32 24
  %7 = bitcast %"class.WTF::TextPosition"* %6 to i64*
  store i64 %5, i64* %7, align 8
  tail call void @_ZN5blink17XMLDocumentParser12EndElementNsEv(%"class.blink::XMLDocumentParser"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCharactersCallbackD2Ev(%"class.blink::PendingCharactersCallback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCharactersCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %4 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  tail call void %3(i8* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCharactersCallbackD0Ev(%"class.blink::PendingCharactersCallback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCharactersCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %4 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  tail call void %3(i8* %5) #15
  %6 = bitcast %"class.blink::PendingCharactersCallback"* %0 to i8*
  tail call void @free(i8* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCharactersCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingCharactersCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PendingCharactersCallback", %"class.blink::PendingCharactersCallback"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN5blink17XMLDocumentParser10CharactersEPKhi(%"class.blink::XMLDocumentParser"* %1, i8* %4, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20PendingErrorCallbackD2Ev(%"class.blink::PendingErrorCallback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20PendingErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %4 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  tail call void %3(i8* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20PendingErrorCallbackD0Ev(%"class.blink::PendingErrorCallback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20PendingErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %4 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  tail call void %3(i8* %5) #15
  %6 = bitcast %"class.blink::PendingErrorCallback"* %0 to i8*
  tail call void @free(i8* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20PendingErrorCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingErrorCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.blink::PendingErrorCallback", %"class.blink::PendingErrorCallback"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.WTF::TextPosition"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %1, i64 0, i32 21
  tail call void @_ZN5blink9XMLErrors11HandleErrorENS0_9ErrorTypeEPKcN3WTF12TextPositionE(%"class.blink::XMLErrors"* %10, i32 %4, i8* %6, i64 %9) #15
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %1, i64 0, i32 11
  store i8 1, i8* %13, align 1
  %14 = icmp eq i32 %4, 2
  br i1 %14, label %15, label %25

15:                                               ; preds = %12
  tail call void @_ZN5blink9XMLErrors23InsertErrorMessageBlockEv(%"class.blink::XMLErrors"* %10) #15
  %16 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %16) #15
  %17 = getelementptr inbounds %"class.blink::XMLDocumentParser", %"class.blink::XMLDocumentParser"* %1, i64 0, i32 3, i32 0
  %18 = load %"class.blink::XMLParserContext"*, %"class.blink::XMLParserContext"** %17, align 8
  %19 = icmp eq %"class.blink::XMLParserContext"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::XMLParserContext", %"class.blink::XMLParserContext"* %18, i64 0, i32 1
  %22 = load %struct._xmlParserCtxt*, %struct._xmlParserCtxt** %21, align 8
  %23 = icmp eq %struct._xmlParserCtxt* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @xmlStopParser(%struct._xmlParserCtxt* nonnull %22) #15
  br label %25

25:                                               ; preds = %2, %12, %15, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36PendingProcessingInstructionCallbackD2Ev(%"class.blink::PendingProcessingInstructionCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink36PendingProcessingInstructionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36PendingProcessingInstructionCallbackD0Ev(%"class.blink::PendingProcessingInstructionCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink36PendingProcessingInstructionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = bitcast %"class.blink::PendingProcessingInstructionCallback"* %0 to i8*
  tail call void @free(i8* %37) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36PendingProcessingInstructionCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingProcessingInstructionCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::PendingProcessingInstructionCallback", %"class.blink::PendingProcessingInstructionCallback"* %0, i64 0, i32 2
  tail call void @_ZN5blink17XMLDocumentParser24GetProcessingInstructionERKN3WTF6StringES4_(%"class.blink::XMLDocumentParser"* %1, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCDATABlockCallbackD2Ev(%"class.blink::PendingCDATABlockCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCDATABlockCallback", %"class.blink::PendingCDATABlockCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCDATABlockCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingCDATABlockCallback", %"class.blink::PendingCDATABlockCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCDATABlockCallbackD0Ev(%"class.blink::PendingCDATABlockCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCDATABlockCallback", %"class.blink::PendingCDATABlockCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25PendingCDATABlockCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingCDATABlockCallback", %"class.blink::PendingCDATABlockCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::PendingCDATABlockCallback"* %0 to i8*
  tail call void @free(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PendingCDATABlockCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingCDATABlockCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingCDATABlockCallback", %"class.blink::PendingCDATABlockCallback"* %0, i64 0, i32 1
  tail call void @_ZN5blink17XMLDocumentParser10CdataBlockERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %1, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22PendingCommentCallbackD2Ev(%"class.blink::PendingCommentCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCommentCallback", %"class.blink::PendingCommentCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22PendingCommentCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingCommentCallback", %"class.blink::PendingCommentCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22PendingCommentCallbackD0Ev(%"class.blink::PendingCommentCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingCommentCallback", %"class.blink::PendingCommentCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22PendingCommentCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingCommentCallback", %"class.blink::PendingCommentCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::PendingCommentCallback"* %0 to i8*
  tail call void @free(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22PendingCommentCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingCommentCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingCommentCallback", %"class.blink::PendingCommentCallback"* %0, i64 0, i32 1
  tail call void @_ZN5blink17XMLDocumentParser7CommentERKN3WTF6StringE(%"class.blink::XMLDocumentParser"* %1, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingInternalSubsetCallbackC2ERKN3WTF6StringES4_S4_NS1_12TextPositionE(%"class.blink::PendingInternalSubsetCallback"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i64) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.WTF::TextPosition"* %7 to i64*
  store i64 %4, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29PendingInternalSubsetCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #15
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #15
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %5, %13, %28
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #15
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #15
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %30, %35, %50
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #15
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #15
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %52, %57, %72
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingInternalSubsetCallbackD2Ev(%"class.blink::PendingInternalSubsetCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29PendingInternalSubsetCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %36, %49, %52
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingInternalSubsetCallbackD0Ev(%"class.blink::PendingInternalSubsetCallback"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29PendingInternalSubsetCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %35, %32, %19
  %37 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::PendingInternalSubsetCallback"* %0 to i8*
  tail call void @free(i8* %54) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29PendingInternalSubsetCallback4CallEPNS_17XMLDocumentParserE(%"class.blink::PendingInternalSubsetCallback"*, %"class.blink::XMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::PendingInternalSubsetCallback", %"class.blink::PendingInternalSubsetCallback"* %0, i64 0, i32 3
  tail call void @_ZN5blink17XMLDocumentParser14InternalSubsetERKN3WTF6StringES4_S4_(%"class.blink::XMLDocumentParser"* %1, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DocumentType"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DocumentTypeEE4CallIJPNS_8DocumentERKN3WTF6StringES9_S9_EEEPS1_DpOT_(%"class.blink::Document"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %6, %4 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 6
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 96
  br i1 %18, label %49, label %19, !prof !2

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 96
  store i8* %22, i8** %20, align 8
  %23 = add i64 %17, -96
  store i64 %23, i64* %16, align 8
  %24 = bitcast i8* %21 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 4
  %26 = bitcast i8* %25 to i16*
  %27 = trunc i32 %12 to i16
  %28 = shl i16 %27, 2
  store atomic i16 %28, i16* %26 monotonic, align 2
  %29 = getelementptr inbounds i8, i8* %21, i64 6
  %30 = bitcast i8* %29 to i16*
  store i16 48, i16* %30, align 2
  %31 = ptrtoint i8* %21 to i64
  %32 = and i64 %31, -131072
  %33 = inttoptr i64 %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 4400
  %35 = bitcast i8* %34 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %36 = bitcast i8* %34 to i64*
  %37 = load i64, i64* %36, align 16
  %38 = sub i64 %31, %37
  %39 = lshr i64 %38, 3
  %40 = lshr i64 %38, 6
  %41 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %35, i64 0, i32 0, i32 1, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 7
  %45 = shl i32 1, %44
  %46 = trunc i32 %45 to i8
  %47 = or i8 %42, %46
  store atomic i8 %47, i8* %41 release, align 1
  %48 = getelementptr inbounds i8, i8* %21, i64 8
  br label %52

49:                                               ; preds = %11
  %50 = zext i32 %12 to i64
  %51 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 96, i64 %50) #15
  br label %52

52:                                               ; preds = %19, %49
  %53 = phi i8* [ %48, %19 ], [ %51, %49 ]
  %54 = bitcast i8* %53 to %"class.blink::DocumentType"*
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %0, align 8
  tail call void @_ZN5blink12DocumentTypeC1EPNS_8DocumentERKN3WTF6StringES6_S6_(%"class.blink::DocumentType"* %54, %"class.blink::Document"* %55, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3) #15
  %56 = getelementptr inbounds i8, i8* %53, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  ret %"class.blink::DocumentType"* %54
}

declare void @_ZN5blink12DocumentTypeC1EPNS_8DocumentERKN3WTF6StringES6_S6_(%"class.blink::DocumentType"*, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink15TransformSourceC1EP7_xmlDoc(%"class.blink::TransformSource"*, %struct._xmlDoc*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink18CreateElementFlags16ByFragmentParserEPNS_8DocumentE"}
!8 = distinct !{!8, !9, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink18CreateElementFlags8ByParserEPNS_8DocumentE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
