; ModuleID = '../../ui/base/clipboard/custom_data_helper.cc'
source_filename = "../../ui/base/clipboard/custom_data_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"struct.std::__1::pair.24" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.24" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.17"*, i8, [7 x i8] }>
%"class.std::__1::allocator.17" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19ReadCustomDataTypesEPKvmPNSt3__16vectorINS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS7_IS9_EEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::Pickle", align 8
  %6 = alloca %"class.base::PickleIterator", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.base::Pickle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #10
  %10 = bitcast %"class.base::Pickle"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %5, i8* %0, i64 %1) #10
  %11 = bitcast %"class.base::PickleIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = bitcast %"class.base::PickleIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %6, %"class.base::Pickle"* nonnull dereferenceable(40) %5) #10
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 0, i32* %7, align 4
  %14 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %6, i32* nonnull %7) #10
  br i1 %14, label %15, label %95

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 24
  %23 = load i32, i32* %7, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %15
  %26 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %27 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %32 = bitcast i32* %4 to i8*
  br label %38

33:                                               ; preds = %62
  %34 = load i32, i32* %7, align 4
  %35 = icmp ult i32 %66, %34
  br i1 %35, label %36, label %95

36:                                               ; preds = %33
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %38

38:                                               ; preds = %36, %25
  %39 = phi %"class.std::__1::basic_string"* [ %26, %25 ], [ %37, %36 ]
  %40 = phi i32 [ 0, %25 ], [ %66, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #10
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %42 = icmp ult %"class.std::__1::basic_string"* %39, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %27, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %46 = ptrtoint %"class.std::__1::basic_string"* %45 to i64
  store i64 %46, i64* %17, align 8
  br label %52

47:                                               ; preds = %38
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #10
  %48 = load i8, i8* %30, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %43, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 -1
  %55 = call zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"* nonnull %6, %"class.std::__1::basic_string"* %54) #10
  br i1 %55, label %56, label %67

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #10
  store i32 -1431655766, i32* %4, align 4
  %57 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %6, i32* nonnull %4) #10
  %58 = load i32, i32* %4, align 4
  %59 = icmp sgt i32 %58, -1
  %60 = and i1 %57, %59
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  br label %67

62:                                               ; preds = %56
  %63 = shl i32 %58, 1
  %64 = call i8* @_ZN4base14PickleIterator24GetReadPointerAndAdvanceEi(%"class.base::PickleIterator"* nonnull %6, i32 %63) #10
  %65 = icmp eq i8* %64, null
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  %66 = add nuw i32 %40, 1
  br i1 %65, label %67, label %33

67:                                               ; preds = %62, %52, %61
  %68 = load i64, i64* %17, align 8
  %69 = load i64, i64* %19, align 8
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, 24
  %72 = icmp ugt i64 %22, %71
  %73 = inttoptr i64 %69 to %"class.std::__1::basic_string"*
  %74 = inttoptr i64 %68 to %"class.std::__1::basic_string"*
  br i1 %72, label %75, label %77

75:                                               ; preds = %67
  %76 = sub nsw i64 %22, %71
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE8__appendEm(%"class.std::__1::vector"* %2, i64 %76) #10
  br label %95

77:                                               ; preds = %67
  %78 = icmp ult i64 %22, %71
  br i1 %78, label %79, label %95

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 %22
  %81 = icmp eq %"class.std::__1::basic_string"* %80, %74
  br i1 %81, label %94, label %82

82:                                               ; preds = %79, %92
  %83 = phi %"class.std::__1::basic_string"* [ %84, %92 ], [ %74, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 -1
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %82
  %90 = bitcast %"class.std::__1::basic_string"* %84 to i8**
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %89, %82
  %93 = icmp eq %"class.std::__1::basic_string"* %84, %80
  br i1 %93, label %94, label %82

94:                                               ; preds = %92, %79
  store %"class.std::__1::basic_string"* %80, %"class.std::__1::basic_string"** %16, align 8
  br label %95

95:                                               ; preds = %33, %15, %94, %77, %75, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21ReadCustomDataForTypeEPKvmRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPS8_(i8*, i64, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.base::Pickle", align 8
  %7 = alloca %"class.base::PickleIterator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  %11 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %6, i8* %0, i64 %1) #10
  %12 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %7, %"class.base::Pickle"* nonnull dereferenceable(40) %6) #10
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %8, align 4
  %15 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %7, i32* nonnull %8) #10
  %16 = load i32, i32* %8, align 4
  %17 = icmp ne i32 %16, 0
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %92

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %30 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %31 = bitcast i32* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  br label %33

33:                                               ; preds = %86, %19
  %34 = phi i32 [ 0, %19 ], [ %88, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #10
  %35 = call zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"* nonnull %7, %"class.std::__1::basic_string"* nonnull %9) #10
  br i1 %35, label %36, label %80

36:                                               ; preds = %33
  %37 = load i8, i8* %24, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i64, i64* %22, align 8
  %40 = zext i8 %37 to i64
  %41 = select i1 %38, i64 %39, i64 %40
  %42 = load i8, i8* %26, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %27, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = icmp eq i64 %41, %46
  br i1 %47, label %48, label %69

48:                                               ; preds = %36
  %49 = icmp eq i64 %41, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %48
  %51 = load i16*, i16** %28, align 8
  %52 = select i1 %43, i16* %51, i16* %29
  %53 = load i16*, i16** %21, align 8
  %54 = select i1 %38, i16* %53, i16* %30
  br label %55

55:                                               ; preds = %62, %50
  %56 = phi i64 [ %63, %62 ], [ %41, %50 ]
  %57 = phi i16* [ %65, %62 ], [ %52, %50 ]
  %58 = phi i16* [ %64, %62 ], [ %54, %50 ]
  %59 = load i16, i16* %58, align 2
  %60 = load i16, i16* %57, align 2
  %61 = icmp eq i16 %60, %59
  br i1 %61, label %62, label %69

62:                                               ; preds = %55
  %63 = add i64 %56, -1
  %64 = getelementptr inbounds i16, i16* %58, i64 1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %67, label %55

67:                                               ; preds = %62, %48
  %68 = call zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"* nonnull %7, %"class.std::__1::basic_string"* %3) #10
  br label %80

69:                                               ; preds = %55, %36
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #10
  store i32 -1431655766, i32* %5, align 4
  %70 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %7, i32* nonnull %5) #10
  %71 = load i32, i32* %5, align 4
  %72 = icmp sgt i32 %71, -1
  %73 = and i1 %70, %72
  br i1 %73, label %75, label %74

74:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #10
  br label %80

75:                                               ; preds = %69
  %76 = shl i32 %71, 1
  %77 = call i8* @_ZN4base14PickleIterator24GetReadPointerAndAdvanceEi(%"class.base::PickleIterator"* nonnull %7, i32 %76) #10
  %78 = icmp eq i8* %77, null
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #10
  %79 = zext i1 %78 to i32
  br label %80

80:                                               ; preds = %75, %74, %33, %67
  %81 = phi i32 [ 1, %67 ], [ 1, %33 ], [ 1, %74 ], [ %79, %75 ]
  %82 = load i8, i8* %24, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %87 = icmp eq i32 %81, 0
  %88 = add nuw i32 %34, 1
  %89 = load i32, i32* %8, align 4
  %90 = icmp ult i32 %88, %89
  %91 = and i1 %87, %90
  br i1 %91, label %33, label %92

92:                                               ; preds = %86, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21ReadCustomDataIntoMapEPKvmPNSt3__113unordered_mapINS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEES9_NS2_4hashIS9_EENS2_8equal_toIS9_EENS7_INS2_4pairIKS9_S9_EEEEEE(i8*, i64, %"class.std::__1::unordered_map"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::Pickle", align 8
  %5 = alloca %"class.base::PickleIterator", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.std::__1::pair.24", align 8
  %9 = alloca [15 x i8], align 8
  %10 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  %11 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %4, i8* %0, i64 %1) #10
  %12 = bitcast %"class.base::PickleIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.base::PickleIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %5, %"class.base::Pickle"* nonnull dereferenceable(40) %4) #10
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %6, align 4
  %15 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %5, i32* nonnull %6) #10
  %16 = load i32, i32* %6, align 4
  %17 = icmp ne i32 %16, 0
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %386

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.std::__1::pair.24"* %8 to i8*
  %28 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"struct.std::__1::pair.24"* %8 to i8**
  %32 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair.24"* %8 to i16*
  %35 = bitcast %"struct.std::__1::pair.24"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %8, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8**
  %39 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast i64* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %27, i64 47
  %42 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %8, i64 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  br label %47

47:                                               ; preds = %380, %19
  %48 = phi i32 [ 0, %19 ], [ %382, %380 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #10
  %49 = call zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"* nonnull %5, %"class.std::__1::basic_string"* nonnull %7) #10
  br i1 %49, label %118, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %23, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %374, label %53

53:                                               ; preds = %50
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %80, label %56

56:                                               ; preds = %53, %77
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %59, %77 ], [ %54, %53 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 5
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %56
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %66, %56
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %60 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8**
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %74, %69
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i8*
  call void @_ZdlPv(i8* %78) #11
  %79 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %79, label %80, label %56

80:                                               ; preds = %77, %53
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %24, align 8
  %81 = load i64, i64* %25, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %80
  %84 = add i64 %81, -1
  %85 = and i64 %81, 3
  %86 = icmp ult i64 %84, 3
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = sub i64 %81, %85
  br label %101

89:                                               ; preds = %101, %83
  %90 = phi i64 [ 0, %83 ], [ %115, %101 ]
  %91 = icmp eq i64 %85, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %89, %92
  %93 = phi i64 [ %97, %92 ], [ %90, %89 ]
  %94 = phi i64 [ %98, %92 ], [ %85, %89 ]
  %95 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, i64 %93
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %96, align 8
  %97 = add nuw i64 %93, 1
  %98 = add i64 %94, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %92, !llvm.loop !2

100:                                              ; preds = %89, %92, %80
  store i64 0, i64* %23, align 8
  br label %374

101:                                              ; preds = %101, %87
  %102 = phi i64 [ 0, %87 ], [ %115, %101 ]
  %103 = phi i64 [ %88, %87 ], [ %116, %101 ]
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %105, align 8
  %106 = or i64 %102, 1
  %107 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, i64 %106
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %108, align 8
  %109 = or i64 %102, 2
  %110 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %110, i64 %109
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %111, align 8
  %112 = or i64 %102, 3
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %112
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %114, align 8
  %115 = add nuw i64 %102, 4
  %116 = add i64 %103, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %89, label %101

118:                                              ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #10
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %28)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 15, i1 false)
  %119 = load i8, i8* %30, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %20, i64 24, i1 false) #10
  br label %290

122:                                              ; preds = %118
  %123 = load i16*, i16** %21, align 8
  %124 = load i64, i64* %22, align 8
  %125 = icmp ult i64 %124, 11
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = trunc i64 %124 to i8
  store i8 %127, i8* %36, align 1
  br label %142

128:                                              ; preds = %122
  %129 = icmp ugt i64 %124, 9223372036854775791
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = bitcast %"struct.std::__1::pair.24"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %131) #12
  unreachable

132:                                              ; preds = %128
  %133 = add nuw nsw i64 %124, 8
  %134 = and i64 %133, -8
  %135 = icmp slt i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  call void @abort() #12
  unreachable

137:                                              ; preds = %132
  %138 = shl i64 %134, 1
  %139 = call i8* @_Znwm(i64 %138) #11
  %140 = bitcast i8* %139 to i16*
  store i8* %139, i8** %31, align 8
  %141 = or i64 %134, -9223372036854775808
  store i64 %141, i64* %32, align 8
  store i64 %124, i64* %33, align 8
  br label %142

142:                                              ; preds = %137, %126
  %143 = phi i16* [ %34, %126 ], [ %140, %137 ]
  %144 = add nuw nsw i64 %124, 1
  %145 = add i64 %124, 1
  %146 = icmp ult i64 %145, 16
  br i1 %146, label %237, label %147

147:                                              ; preds = %142
  %148 = getelementptr i16, i16* %143, i64 1
  %149 = getelementptr i16, i16* %148, i64 %124
  %150 = getelementptr i16, i16* %123, i64 1
  %151 = getelementptr i16, i16* %150, i64 %124
  %152 = icmp ult i16* %143, %151
  %153 = icmp ult i16* %123, %149
  %154 = and i1 %152, %153
  br i1 %154, label %237, label %155

155:                                              ; preds = %147
  %156 = and i64 %145, -16
  %157 = sub i64 %144, %156
  %158 = getelementptr i16, i16* %123, i64 %156
  %159 = getelementptr i16, i16* %143, i64 %156
  %160 = add i64 %156, -16
  %161 = lshr exact i64 %160, 4
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 3
  %164 = icmp ult i64 %160, 48
  br i1 %164, label %216, label %165

165:                                              ; preds = %155
  %166 = sub nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %213, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %214, %167 ]
  %170 = getelementptr i16, i16* %123, i64 %168
  %171 = getelementptr i16, i16* %143, i64 %168
  %172 = bitcast i16* %170 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !4
  %174 = getelementptr i16, i16* %170, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !4
  %177 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %177, align 2, !alias.scope !7, !noalias !4
  %178 = getelementptr i16, i16* %171, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %179, align 2, !alias.scope !7, !noalias !4
  %180 = or i64 %168, 16
  %181 = getelementptr i16, i16* %123, i64 %180
  %182 = getelementptr i16, i16* %143, i64 %180
  %183 = bitcast i16* %181 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !4
  %185 = getelementptr i16, i16* %181, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !4
  %188 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %188, align 2, !alias.scope !7, !noalias !4
  %189 = getelementptr i16, i16* %182, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %190, align 2, !alias.scope !7, !noalias !4
  %191 = or i64 %168, 32
  %192 = getelementptr i16, i16* %123, i64 %191
  %193 = getelementptr i16, i16* %143, i64 %191
  %194 = bitcast i16* %192 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !4
  %196 = getelementptr i16, i16* %192, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !4
  %199 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !7, !noalias !4
  %200 = getelementptr i16, i16* %193, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !7, !noalias !4
  %202 = or i64 %168, 48
  %203 = getelementptr i16, i16* %123, i64 %202
  %204 = getelementptr i16, i16* %143, i64 %202
  %205 = bitcast i16* %203 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !4
  %207 = getelementptr i16, i16* %203, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  %209 = load <8 x i16>, <8 x i16>* %208, align 2, !alias.scope !4
  %210 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %210, align 2, !alias.scope !7, !noalias !4
  %211 = getelementptr i16, i16* %204, i64 8
  %212 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %209, <8 x i16>* %212, align 2, !alias.scope !7, !noalias !4
  %213 = add i64 %168, 64
  %214 = add i64 %169, -4
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %167, !llvm.loop !9

216:                                              ; preds = %167, %155
  %217 = phi i64 [ 0, %155 ], [ %213, %167 ]
  %218 = icmp eq i64 %163, 0
  br i1 %218, label %235, label %219

219:                                              ; preds = %216, %219
  %220 = phi i64 [ %232, %219 ], [ %217, %216 ]
  %221 = phi i64 [ %233, %219 ], [ %163, %216 ]
  %222 = getelementptr i16, i16* %123, i64 %220
  %223 = getelementptr i16, i16* %143, i64 %220
  %224 = bitcast i16* %222 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2, !alias.scope !4
  %226 = getelementptr i16, i16* %222, i64 8
  %227 = bitcast i16* %226 to <8 x i16>*
  %228 = load <8 x i16>, <8 x i16>* %227, align 2, !alias.scope !4
  %229 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %229, align 2, !alias.scope !7, !noalias !4
  %230 = getelementptr i16, i16* %223, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %228, <8 x i16>* %231, align 2, !alias.scope !7, !noalias !4
  %232 = add i64 %220, 16
  %233 = add i64 %221, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %219, !llvm.loop !11

235:                                              ; preds = %219, %216
  %236 = icmp eq i64 %145, %156
  br i1 %236, label %290, label %237

237:                                              ; preds = %235, %147, %142
  %238 = phi i64 [ %144, %147 ], [ %144, %142 ], [ %157, %235 ]
  %239 = phi i16* [ %123, %147 ], [ %123, %142 ], [ %158, %235 ]
  %240 = phi i16* [ %143, %147 ], [ %143, %142 ], [ %159, %235 ]
  %241 = add i64 %238, -1
  %242 = and i64 %238, 7
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %255, label %244

244:                                              ; preds = %237, %244
  %245 = phi i64 [ %250, %244 ], [ %238, %237 ]
  %246 = phi i16* [ %252, %244 ], [ %239, %237 ]
  %247 = phi i16* [ %251, %244 ], [ %240, %237 ]
  %248 = phi i64 [ %253, %244 ], [ %242, %237 ]
  %249 = load i16, i16* %246, align 2
  store i16 %249, i16* %247, align 2
  %250 = add i64 %245, -1
  %251 = getelementptr inbounds i16, i16* %247, i64 1
  %252 = getelementptr inbounds i16, i16* %246, i64 1
  %253 = add i64 %248, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %244, !llvm.loop !12

255:                                              ; preds = %244, %237
  %256 = phi i64 [ %238, %237 ], [ %250, %244 ]
  %257 = phi i16* [ %239, %237 ], [ %252, %244 ]
  %258 = phi i16* [ %240, %237 ], [ %251, %244 ]
  %259 = icmp ult i64 %241, 7
  br i1 %259, label %290, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64 [ %286, %260 ], [ %256, %255 ]
  %262 = phi i16* [ %288, %260 ], [ %257, %255 ]
  %263 = phi i16* [ %287, %260 ], [ %258, %255 ]
  %264 = load i16, i16* %262, align 2
  store i16 %264, i16* %263, align 2
  %265 = getelementptr inbounds i16, i16* %263, i64 1
  %266 = getelementptr inbounds i16, i16* %262, i64 1
  %267 = load i16, i16* %266, align 2
  store i16 %267, i16* %265, align 2
  %268 = getelementptr inbounds i16, i16* %263, i64 2
  %269 = getelementptr inbounds i16, i16* %262, i64 2
  %270 = load i16, i16* %269, align 2
  store i16 %270, i16* %268, align 2
  %271 = getelementptr inbounds i16, i16* %263, i64 3
  %272 = getelementptr inbounds i16, i16* %262, i64 3
  %273 = load i16, i16* %272, align 2
  store i16 %273, i16* %271, align 2
  %274 = getelementptr inbounds i16, i16* %263, i64 4
  %275 = getelementptr inbounds i16, i16* %262, i64 4
  %276 = load i16, i16* %275, align 2
  store i16 %276, i16* %274, align 2
  %277 = getelementptr inbounds i16, i16* %263, i64 5
  %278 = getelementptr inbounds i16, i16* %262, i64 5
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = getelementptr inbounds i16, i16* %263, i64 6
  %281 = getelementptr inbounds i16, i16* %262, i64 6
  %282 = load i16, i16* %281, align 2
  store i16 %282, i16* %280, align 2
  %283 = getelementptr inbounds i16, i16* %263, i64 7
  %284 = getelementptr inbounds i16, i16* %262, i64 7
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = add i64 %261, -8
  %287 = getelementptr inbounds i16, i16* %263, i64 8
  %288 = getelementptr inbounds i16, i16* %262, i64 8
  %289 = icmp eq i64 %286, 0
  br i1 %289, label %290, label %260, !llvm.loop !13

290:                                              ; preds = %255, %260, %235, %121
  store i8* null, i8** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %28, i64 15, i1 false)
  store i8 0, i8* %41, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 15, i1 false)
  %291 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %42, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %43, %"struct.std::__1::pair.24"* nonnull dereferenceable(48) %8) #10
  %292 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %291, 0
  %293 = load i8, i8* %45, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %290
  %296 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %296) #11
  br label %297

297:                                              ; preds = %295, %290
  %298 = load i8, i8* %36, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %302

300:                                              ; preds = %297
  %301 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %301) #11
  br label %302

302:                                              ; preds = %300, %297
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #10
  %303 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %292, i64 5
  %304 = bitcast %"struct.std::__1::__hash_node_base"* %303 to %"class.std::__1::basic_string"*
  %305 = call zeroext i1 @_ZN4base14PickleIterator12ReadString16EPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::PickleIterator"* nonnull %5, %"class.std::__1::basic_string"* %304) #10
  br i1 %305, label %374, label %306

306:                                              ; preds = %302
  %307 = load i64, i64* %23, align 8
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %374, label %309

309:                                              ; preds = %306
  %310 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %311 = icmp eq %"struct.std::__1::__hash_node_base"* %310, null
  br i1 %311, label %336, label %312

312:                                              ; preds = %309, %333
  %313 = phi %"struct.std::__1::__hash_node_base"* [ %315, %333 ], [ %310, %309 ]
  %314 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %313, i64 0, i32 0
  %315 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %314, align 8
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %313, i64 2
  %317 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %313, i64 5
  %318 = bitcast %"struct.std::__1::__hash_node_base"* %317 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %318, i64 0, i32 1, i32 1
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %325

322:                                              ; preds = %312
  %323 = bitcast %"struct.std::__1::__hash_node_base"* %317 to i8**
  %324 = load i8*, i8** %323, align 8
  call void @_ZdlPv(i8* %324) #11
  br label %325

325:                                              ; preds = %322, %312
  %326 = bitcast %"struct.std::__1::__hash_node_base"* %316 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %326, i64 0, i32 1, i32 1
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %333

330:                                              ; preds = %325
  %331 = bitcast %"struct.std::__1::__hash_node_base"* %316 to i8**
  %332 = load i8*, i8** %331, align 8
  call void @_ZdlPv(i8* %332) #11
  br label %333

333:                                              ; preds = %330, %325
  %334 = bitcast %"struct.std::__1::__hash_node_base"* %313 to i8*
  call void @_ZdlPv(i8* %334) #11
  %335 = icmp eq %"struct.std::__1::__hash_node_base"* %315, null
  br i1 %335, label %336, label %312

336:                                              ; preds = %333, %309
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %24, align 8
  %337 = load i64, i64* %25, align 8
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %356, label %339

339:                                              ; preds = %336
  %340 = add i64 %337, -1
  %341 = and i64 %337, 3
  %342 = icmp ult i64 %340, 3
  br i1 %342, label %345, label %343

343:                                              ; preds = %339
  %344 = sub i64 %337, %341
  br label %357

345:                                              ; preds = %357, %339
  %346 = phi i64 [ 0, %339 ], [ %371, %357 ]
  %347 = icmp eq i64 %341, 0
  br i1 %347, label %356, label %348

348:                                              ; preds = %345, %348
  %349 = phi i64 [ %353, %348 ], [ %346, %345 ]
  %350 = phi i64 [ %354, %348 ], [ %341, %345 ]
  %351 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %352 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %351, i64 %349
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %352, align 8
  %353 = add nuw i64 %349, 1
  %354 = add i64 %350, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %348, !llvm.loop !14

356:                                              ; preds = %345, %348, %336
  store i64 0, i64* %23, align 8
  br label %374

357:                                              ; preds = %357, %343
  %358 = phi i64 [ 0, %343 ], [ %371, %357 ]
  %359 = phi i64 [ %344, %343 ], [ %372, %357 ]
  %360 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %361 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %360, i64 %358
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %361, align 8
  %362 = or i64 %358, 1
  %363 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %364 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %363, i64 %362
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %364, align 8
  %365 = or i64 %358, 2
  %366 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %367 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %366, i64 %365
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %367, align 8
  %368 = or i64 %358, 3
  %369 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %370 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %369, i64 %368
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %370, align 8
  %371 = add nuw i64 %358, 4
  %372 = add i64 %359, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %345, label %357

374:                                              ; preds = %302, %306, %356, %100, %50
  %375 = phi i32 [ 1, %50 ], [ 1, %100 ], [ 1, %356 ], [ 1, %306 ], [ 0, %302 ]
  %376 = load i8, i8* %30, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  %379 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %379) #11
  br label %380

380:                                              ; preds = %374, %378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %381 = icmp eq i32 %375, 0
  %382 = add nuw i32 %48, 1
  %383 = load i32, i32* %6, align 4
  %384 = icmp ult i32 %382, %383
  %385 = and i1 %381, %384
  br i1 %385, label %47, label %386

386:                                              ; preds = %380, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23WriteCustomDataToPickleERKNSt3__113unordered_mapINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES7_NS0_4hashIS7_EENS0_8equal_toIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEPN4base6PickleE(%"class.std::__1::unordered_map"* nocapture readonly dereferenceable(40), %"class.base::Pickle"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  store i32 %8, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"struct.std::__1::__hash_node_base"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %18 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  br label %22

21:                                               ; preds = %22, %2
  ret void

22:                                               ; preds = %14, %22
  %23 = phi i64 [ %12, %14 ], [ %52, %22 ]
  %24 = inttoptr i64 %23 to %"struct.std::__1::__hash_node"*
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %24, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %26 = bitcast %"struct.std::__1::pair.24"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = bitcast %"struct.std::__1::pair.24"* %25 to i16*
  %33 = select i1 %29, i16* %31, i16* %32
  store i16* %33, i16** %16, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  store i64 %37, i64* %17, align 8
  call void @_ZN4base6Pickle13WriteString16ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %24, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i16*
  %46 = select i1 %42, i16* %44, i16* %45
  store i16* %46, i16** %19, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %24, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %41 to i64
  %50 = select i1 %42, i64 %48, i64 %49
  store i64 %50, i64* %20, align 8
  call void @_ZN4base6Pickle13WriteString16ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  %51 = inttoptr i64 %23 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %21, label %22
}

declare void @_ZN4base6Pickle13WriteString16ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23WriteCustomDataToPickleERKN4base8flat_mapINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEES8_NS2_4lessIvEENS2_6vectorINS2_4pairIS8_S8_EENS6_ISD_EEEEEEPNS0_6PickleE(%"class.base::flat_map"* nocapture readonly dereferenceable(24), %"class.base::Pickle"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.27"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::flat_map"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 48
  %13 = trunc i64 %12 to i32
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 %13, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %15 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"** %15, align 8
  %17 = load %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"** %6, align 8
  %18 = icmp eq %"struct.std::__1::pair.27"* %16, %17
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %23 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  br label %27

26:                                               ; preds = %27, %2
  ret void

27:                                               ; preds = %19, %27
  %28 = phi %"struct.std::__1::pair.27"* [ %16, %19 ], [ %54, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %29 = bitcast %"struct.std::__1::pair.27"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"struct.std::__1::pair.27"* %28 to i16*
  %36 = select i1 %32, i16* %34, i16* %35
  store i16* %36, i16** %21, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %31 to i64
  %40 = select i1 %32, i64 %38, i64 %39
  store i64 %40, i64* %22, align 8
  call void @_ZN4base6Pickle13WriteString16ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %41 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %28, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i16*
  %49 = select i1 %45, i16* %47, i16* %48
  store i16* %49, i16** %24, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %44 to i64
  %53 = select i1 %45, i64 %51, i64 %52
  store i64 %53, i64* %25, align 8
  call void @_ZN4base6Pickle13WriteString16ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %54 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %28, i64 1
  %55 = icmp eq %"struct.std::__1::pair.27"* %54, %17
  br i1 %55, label %26, label %27
}

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare i8* @_ZN4base14PickleIterator24GetReadPointerAndAdvanceEi(%"class.base::PickleIterator"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::basic_string"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast i16** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"class.std::__1::basic_string"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %110

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #12
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"class.std::__1::basic_string"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::basic_string"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::basic_string"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::basic_string"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = icmp eq %"class.std::__1::basic_string"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::basic_string"* %58 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  br label %88

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::basic_string"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::basic_string"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 -1
  %81 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #10
  %83 = icmp eq %"class.std::__1::basic_string"* %80, %71
  br i1 %83, label %84, label %76

84:                                               ; preds = %76
  %85 = ptrtoint %"class.std::__1::basic_string"* %79 to i64
  %86 = load i64, i64* %31, align 8
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %88

88:                                               ; preds = %74, %84
  %89 = phi %"class.std::__1::basic_string"* [ %71, %74 ], [ %87, %84 ]
  %90 = phi i64 [ %57, %74 ], [ %85, %84 ]
  %91 = phi i64 [ %75, %74 ], [ %86, %84 ]
  store i64 %90, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %92 = inttoptr i64 %91 to %"class.std::__1::basic_string"*
  %93 = icmp eq %"class.std::__1::basic_string"* %89, %92
  br i1 %93, label %106, label %94

94:                                               ; preds = %88, %104
  %95 = phi %"class.std::__1::basic_string"* [ %96, %104 ], [ %89, %88 ]
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 -1
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = bitcast %"class.std::__1::basic_string"* %96 to i8**
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %101, %94
  %105 = icmp eq %"class.std::__1::basic_string"* %96, %92
  br i1 %105, label %106, label %94

106:                                              ; preds = %104, %88
  %107 = icmp eq i64 %91, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = inttoptr i64 %91 to i8*
  tail call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %108, %106, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.24"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = alloca %"class.std::__1::unique_ptr.39", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i16* %11, i16* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #10
  %19 = bitcast i16* %16 to i8*
  %20 = shl nuw i64 %17, 1
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %19, i64 %20) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #10
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %106, label %25

25:                                               ; preds = %3
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #10, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %106, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %106, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %7, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %12, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i16*, i16** %10, align 8
  %54 = select i1 %49, i16* %53, i16* %14
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %102
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %44, %46 ], [ %104, %102 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %106

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %102

84:                                               ; preds = %72
  br i1 %55, label %198, label %85

85:                                               ; preds = %84
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i16*
  %89 = select i1 %77, i16* %87, i16* %88
  br label %90

90:                                               ; preds = %97, %85
  %91 = phi i64 [ %98, %97 ], [ %52, %85 ]
  %92 = phi i16* [ %100, %97 ], [ %54, %85 ]
  %93 = phi i16* [ %99, %97 ], [ %89, %85 ]
  %94 = load i16, i16* %93, align 2
  %95 = load i16, i16* %92, align 2
  %96 = icmp eq i16 %95, %94
  br i1 %96, label %97, label %102

97:                                               ; preds = %90
  %98 = add i64 %91, -1
  %99 = getelementptr inbounds i16, i16* %93, i64 1
  %100 = getelementptr inbounds i16, i16* %92, i64 1
  %101 = icmp eq i64 %98, 0
  br i1 %101, label %198, label %90

102:                                              ; preds = %90, %72
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %106, label %56

106:                                              ; preds = %69, %102, %42, %35, %3
  %107 = phi i64 [ %36, %35 ], [ -6148914691236517206, %3 ], [ %36, %42 ], [ %36, %102 ], [ %36, %69 ]
  %108 = bitcast %"class.std::__1::unique_ptr.39"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %5, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.39"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.39"* nonnull sret %5, %"class.std::__1::__hash_table"* %0, i64 %21, %"struct.std::__1::pair.24"* dereferenceable(48) %2)
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 1
  %114 = uitofp i64 %113 to float
  %115 = uitofp i64 %23 to float
  %116 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %117 = load float, float* %116, align 4
  %118 = fmul float %117, %115
  %119 = fcmp olt float %118, %114
  %120 = or i1 %24, %119
  br i1 %120, label %121, label %144

121:                                              ; preds = %106
  %122 = shl i64 %23, 1
  %123 = icmp ult i64 %23, 3
  %124 = call i64 @llvm.ctpop.i64(i64 %23) #10, !range !15
  %125 = icmp ugt i64 %124, 1
  %126 = or i1 %123, %125
  %127 = zext i1 %126 to i64
  %128 = or i64 %122, %127
  %129 = fdiv float %114, %117
  %130 = call float @llvm.ceil.f32(float %129) #10
  %131 = fptoui float %130 to i64
  %132 = icmp ult i64 %128, %131
  %133 = select i1 %132, i64 %131, i64 %128
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %133)
  %134 = load i64, i64* %22, align 8
  %135 = call i64 @llvm.ctpop.i64(i64 %134) #10, !range !15
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %121
  %138 = add i64 %134, -1
  %139 = and i64 %138, %21
  br label %144

140:                                              ; preds = %121
  %141 = icmp ult i64 %21, %134
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %21, %134
  br label %144

144:                                              ; preds = %142, %140, %137, %106
  %145 = phi i64 [ %23, %106 ], [ %134, %137 ], [ %134, %140 ], [ %134, %142 ]
  %146 = phi i64 [ %107, %106 ], [ %139, %137 ], [ %21, %140 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, i64 %146
  %150 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base"* %150, null
  br i1 %151, label %152, label %185

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %153, i64 0, i32 0
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.39"* %5 to i64**
  %158 = load i64*, i64** %157, align 8
  store i64 %156, i64* %158, align 8
  %159 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %109, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %159, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %160, %"struct.std::__1::__hash_node_base"** %154, align 8
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %147, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, i64 %146
  store %"struct.std::__1::__hash_node_base"* %153, %"struct.std::__1::__hash_node_base"** %162, align 8
  %163 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %109, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %163, i64 0, i32 0, i32 0
  %165 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base"* %165, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %152
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %163, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 1
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = call i64 @llvm.ctpop.i64(i64 %145) #10, !range !15
  %173 = icmp ugt i64 %172, 1
  br i1 %173, label %177, label %174

174:                                              ; preds = %167
  %175 = add i64 %145, -1
  %176 = and i64 %171, %175
  br label %181

177:                                              ; preds = %167
  %178 = icmp ult i64 %171, %145
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = urem i64 %171, %145
  br label %181

181:                                              ; preds = %174, %177, %179
  %182 = phi i64 [ %176, %174 ], [ %180, %179 ], [ %171, %177 ]
  %183 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %147, align 8
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, i64 %182
  store %"struct.std::__1::__hash_node_base"* %168, %"struct.std::__1::__hash_node_base"** %184, align 8
  br label %193

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %187 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.std::__1::unique_ptr.39"* %5 to i64**
  %190 = load i64*, i64** %189, align 8
  store i64 %188, i64* %190, align 8
  %191 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %109, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %191, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %192, %"struct.std::__1::__hash_node_base"** %186, align 8
  br label %193

193:                                              ; preds = %185, %181, %152
  %194 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %109, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %194, i64 0, i32 0
  %196 = load i64, i64* %111, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  br label %198

198:                                              ; preds = %84, %97, %193
  %199 = phi i8 [ 1, %193 ], [ 0, %97 ], [ 0, %84 ]
  %200 = phi %"struct.std::__1::__hash_node_base"* [ %195, %193 ], [ %57, %97 ], [ %57, %84 ]
  %201 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %200, 0
  %202 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %201, i8 %199, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %202
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.39"* noalias sret, %"class.std::__1::__hash_table"*, i64, %"struct.std::__1::pair.24"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.39"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i8* @_Znwm(i64 64) #11
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.39"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.std::__1::allocator.17"** %7 to %"class.std::__1::__compressed_pair.14"**
  store %"class.std::__1::__compressed_pair.14"* %5, %"class.std::__1::__compressed_pair.14"** %13, align 8
  store i8 0, i8* %8, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast %"struct.std::__1::pair.24"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  %20 = bitcast i8* %10 to %"struct.std::__1::__hash_node"*
  %21 = bitcast %"struct.std::__1::pair.24"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %21, i64 24, i1 false) #10
  br label %203

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast i16* %24 to i8*
  %26 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = trunc i64 %27 to i8
  %31 = getelementptr inbounds i8, i8* %10, i64 39
  store i8 %30, i8* %31, align 1
  br label %50

32:                                               ; preds = %22
  %33 = icmp ugt i64 %27, 9223372036854775791
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast i8* %14 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %35) #12
  unreachable

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %27, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @abort() #12
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %14 to i8**
  store i8* %43, i8** %44, align 8
  %45 = or i64 %38, -9223372036854775808
  %46 = getelementptr inbounds i8, i8* %10, i64 32
  %47 = bitcast i8* %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %10, i64 24
  %49 = bitcast i8* %48 to i64*
  store i64 %27, i64* %49, align 8
  br label %50

50:                                               ; preds = %41, %29
  %51 = phi i8* [ %14, %29 ], [ %43, %41 ]
  %52 = bitcast i8* %51 to i16*
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %148, label %56

56:                                               ; preds = %50
  %57 = shl i64 %27, 1
  %58 = add i64 %57, 2
  %59 = getelementptr i8, i8* %51, i64 %58
  %60 = add i64 %27, 1
  %61 = getelementptr i16, i16* %24, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = icmp ult i8* %51, %62
  %64 = icmp ugt i8* %59, %25
  %65 = and i1 %63, %64
  br i1 %65, label %148, label %66

66:                                               ; preds = %56
  %67 = and i64 %54, -16
  %68 = sub i64 %53, %67
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %52, i64 %67
  %71 = add i64 %67, -16
  %72 = lshr exact i64 %71, 4
  %73 = add nuw nsw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp ult i64 %71, 48
  br i1 %75, label %127, label %76

76:                                               ; preds = %66
  %77 = sub nsw i64 %73, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %124, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %125, %78 ]
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = getelementptr i16, i16* %52, i64 %79
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !16
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !16
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !19, !noalias !16
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !19, !noalias !16
  %91 = or i64 %79, 16
  %92 = getelementptr i16, i16* %24, i64 %91
  %93 = getelementptr i16, i16* %52, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !16
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !16
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !19, !noalias !16
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !19, !noalias !16
  %102 = or i64 %79, 32
  %103 = getelementptr i16, i16* %24, i64 %102
  %104 = getelementptr i16, i16* %52, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !16
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !16
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !19, !noalias !16
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !19, !noalias !16
  %113 = or i64 %79, 48
  %114 = getelementptr i16, i16* %24, i64 %113
  %115 = getelementptr i16, i16* %52, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !16
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !16
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !19, !noalias !16
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !19, !noalias !16
  %124 = add i64 %79, 64
  %125 = add i64 %80, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %78, !llvm.loop !21

127:                                              ; preds = %78, %66
  %128 = phi i64 [ 0, %66 ], [ %124, %78 ]
  %129 = icmp eq i64 %74, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %143, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %144, %130 ], [ %74, %127 ]
  %133 = getelementptr i16, i16* %24, i64 %131
  %134 = getelementptr i16, i16* %52, i64 %131
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !16
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !16
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !19, !noalias !16
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !19, !noalias !16
  %143 = add i64 %131, 16
  %144 = add i64 %132, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %130, !llvm.loop !22

146:                                              ; preds = %130, %127
  %147 = icmp eq i64 %54, %67
  br i1 %147, label %201, label %148

148:                                              ; preds = %146, %56, %50
  %149 = phi i64 [ %53, %56 ], [ %53, %50 ], [ %68, %146 ]
  %150 = phi i16* [ %24, %56 ], [ %24, %50 ], [ %69, %146 ]
  %151 = phi i16* [ %52, %56 ], [ %52, %50 ], [ %70, %146 ]
  %152 = add i64 %149, -1
  %153 = and i64 %149, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %148, %155
  %156 = phi i64 [ %161, %155 ], [ %149, %148 ]
  %157 = phi i16* [ %163, %155 ], [ %150, %148 ]
  %158 = phi i16* [ %162, %155 ], [ %151, %148 ]
  %159 = phi i64 [ %164, %155 ], [ %153, %148 ]
  %160 = load i16, i16* %157, align 2
  store i16 %160, i16* %158, align 2
  %161 = add i64 %156, -1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %157, i64 1
  %164 = add i64 %159, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %155, !llvm.loop !23

166:                                              ; preds = %155, %148
  %167 = phi i64 [ %149, %148 ], [ %161, %155 ]
  %168 = phi i16* [ %150, %148 ], [ %163, %155 ]
  %169 = phi i16* [ %151, %148 ], [ %162, %155 ]
  %170 = icmp ult i64 %152, 7
  br i1 %170, label %201, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %197, %171 ], [ %167, %166 ]
  %173 = phi i16* [ %199, %171 ], [ %168, %166 ]
  %174 = phi i16* [ %198, %171 ], [ %169, %166 ]
  %175 = load i16, i16* %173, align 2
  store i16 %175, i16* %174, align 2
  %176 = getelementptr inbounds i16, i16* %174, i64 1
  %177 = getelementptr inbounds i16, i16* %173, i64 1
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %174, i64 2
  %180 = getelementptr inbounds i16, i16* %173, i64 2
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %174, i64 3
  %183 = getelementptr inbounds i16, i16* %173, i64 3
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %174, i64 4
  %186 = getelementptr inbounds i16, i16* %173, i64 4
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %174, i64 5
  %189 = getelementptr inbounds i16, i16* %173, i64 5
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %174, i64 6
  %192 = getelementptr inbounds i16, i16* %173, i64 6
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %174, i64 7
  %195 = getelementptr inbounds i16, i16* %173, i64 7
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = add i64 %172, -8
  %198 = getelementptr inbounds i16, i16* %174, i64 8
  %199 = getelementptr inbounds i16, i16* %173, i64 8
  %200 = icmp eq i64 %197, 0
  br i1 %200, label %201, label %171, !llvm.loop !24

201:                                              ; preds = %166, %171, %146
  %202 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  br label %203

203:                                              ; preds = %201, %19
  %204 = phi %"struct.std::__1::__hash_node"* [ %202, %201 ], [ %20, %19 ]
  %205 = getelementptr inbounds i8, i8* %10, i64 40
  %206 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %3, i64 0, i32 1
  %207 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %207, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %8, align 8
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %204, i64 0, i32 1
  store i64 %2, i64* %208, align 8
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %204, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %209, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %177, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !25

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %185, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %185, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %171
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %175, %171 ]
  %81 = phi i64 [ %71, %77 ], [ %173, %171 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %172, %171 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %157, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16**
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16*
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %171

119:                                              ; preds = %104, %153
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %155, %153 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %153 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %123, i64 0, i32 1, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %157

133:                                              ; preds = %119
  br i1 %115, label %153, label %134

134:                                              ; preds = %133
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16**
  %136 = load i16*, i16** %135, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16*
  %138 = select i1 %126, i16* %136, i16* %137
  %139 = load i16*, i16** %116, align 8
  %140 = select i1 %109, i16* %139, i16* %117
  br label %141

141:                                              ; preds = %148, %134
  %142 = phi i64 [ %149, %148 ], [ %114, %134 ]
  %143 = phi i16* [ %151, %148 ], [ %138, %134 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %134 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %157

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %153, label %141

153:                                              ; preds = %148, %133
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base"* %155, null
  br i1 %156, label %157, label %119

157:                                              ; preds = %153, %119, %141, %100
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %141 ], [ %120, %153 ], [ %121, %119 ]
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %160, i64* %161, align 8
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %93
  %164 = bitcast %"struct.std::__1::__hash_node_base"** %163 to i64**
  %165 = load i64*, i64** %164, align 8
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %159, align 8
  %167 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, i64 %93
  %169 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %169, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %170, align 8
  br label %171

171:                                              ; preds = %92, %157, %118
  %172 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %157 ], [ %80, %92 ]
  %173 = phi i64 [ %93, %118 ], [ %81, %157 ], [ %81, %92 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %172, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base"* %175, null
  br i1 %176, label %185, label %79

177:                                              ; preds = %2
  %178 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %178, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = bitcast %"struct.std::__1::__hash_node_base"** %179 to i8*
  tail call void @_ZdlPv(i8* %182) #11
  br label %183

183:                                              ; preds = %177, %181
  %184 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %184, align 8
  br label %185

185:                                              ; preds = %171, %70, %35, %183
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !3}
!15 = !{i64 0, i64 65}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !10}
!25 = distinct !{!25, !3}
