; ModuleID = '../../ui/base/x/x11_global_shortcut_listener.cc'
source_filename = "../../ui/base/x/x11_global_shortcut_listener.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::XGlobalShortcutListener" = type <{ %"class.ui::PlatformEventDispatcher", i8, [7 x i8], %"class.std::__1::set", %"class.x11::Connection"*, i32, [4 x i8] }>
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.181", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.196", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.242", %"class.base::circular_deque", %"class.base::ObserverList.248", %"class.x11::Event"*, %"class.base::circular_deque.252", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.264" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.189" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.184" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.189" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.190", i64, i32, [4 x i8] }>
%"class.base::LinkedList.190" = type { %"class.base::LinkNode.191" }
%"class.base::LinkNode.191" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.207", %"class.std::__1::vector.214" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.209" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.218" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.237" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.248" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.249", i64, i32, [4 x i8] }>
%"class.base::LinkedList.249" = type { %"class.base::LinkNode.250" }
%"class.base::LinkNode.250" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.252" = type { %"class.base::internal::VectorBuffer.253", i64, i64 }
%"class.base::internal::VectorBuffer.253" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.255, %"class.std::__1::unique_ptr.257" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.255 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.256", [4 x i8] }>
%"class.base::RefCountedThreadSafe.256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.263 }
%union.anon.263 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.264" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [3 x i8], %"class.std::__1::tuple", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.289", %"class.std::__1::__tuple_leaf.290", %"class.std::__1::__tuple_leaf.291", i8 }>
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.289" = type { i8 }
%"class.std::__1::__tuple_leaf.290" = type { i8 }
%"class.std::__1::__tuple_leaf.291" = type { i8 }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.275" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.265", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.265" = type { %"class.base::internal::flat_tree.266" }
%"class.base::internal::flat_tree.266" = type { %"class.std::__1::vector.267" }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.std::__1::pair.269"*, %"struct.std::__1::pair.269"*, %"class.std::__1::__compressed_pair.270" }
%"struct.std::__1::pair.269" = type opaque
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::pair.269"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.base::flat_map.278"* }
%"class.base::flat_map.278" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.282" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::GrabKeyRequest" = type { i8, i32, i32, i8, i32, i32 }
%"struct.x11::UngrabKeyRequest" = type { i8, i32, i32 }

$_ZZN7logging15CheckOpValueStrIN2ui9EventTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN2ui23XGlobalShortcutListenerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.ui::XGlobalShortcutListener"*, %"class.ui::Event"**)* @_ZN2ui23XGlobalShortcutListener16CanDispatchEventERKPNS_5EventE to i8*), i8* bitcast (i32 (%"class.ui::XGlobalShortcutListener"*, %"class.ui::Event"**)* @_ZN2ui23XGlobalShortcutListener13DispatchEventERKPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::XGlobalShortcutListener"*)* @_ZN2ui23XGlobalShortcutListenerD2Ev to i8*), i8* bitcast (void (%"class.ui::XGlobalShortcutListener"*)* @_ZN2ui23XGlobalShortcutListenerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [32 x i8] c"event->type() == ET_KEY_PRESSED\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../ui/base/x/x11_global_shortcut_listener.cc\00", align 1
@_ZN12_GLOBAL__N_115kModifiersMasksE = internal unnamed_addr constant [8 x i32] [i32 0, i32 16, i32 2, i32 128, i32 18, i32 144, i32 130, i32 146], align 16

@_ZN2ui23XGlobalShortcutListenerD1Ev = hidden unnamed_addr alias void (%"class.ui::XGlobalShortcutListener"*), void (%"class.ui::XGlobalShortcutListener"*)* @_ZN2ui23XGlobalShortcutListenerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListenerC2Ev(%"class.ui::XGlobalShortcutListener"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui23XGlobalShortcutListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 4
  %9 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #10
  store %"class.x11::Connection"* %9, %"class.x11::Connection"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 5
  %11 = tail call i32 @_ZN2ui16GetX11RootWindowEv() #10
  store i32 %11, i32* %10, align 8
  ret void
}

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare i32 @_ZN2ui16GetX11RootWindowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListenerD2Ev(%"class.ui::XGlobalShortcutListener"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui23XGlobalShortcutListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #10
  %8 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 0
  tail call void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %7, %"class.ui::PlatformEventDispatcher"* %8) #10
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListener13StopListeningEv(%"class.ui::XGlobalShortcutListener"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #10
  %3 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 0
  tail call void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %2, %"class.ui::PlatformEventDispatcher"* %3) #10
  %4 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListenerD0Ev(%"class.ui::XGlobalShortcutListener"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListener14StartListeningEv(%"class.ui::XGlobalShortcutListener"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #10
  %3 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 0
  tail call void @_ZN2ui19PlatformEventSource26AddPlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"* %2, %"class.ui::PlatformEventDispatcher"* %3) #10
  %4 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  ret void
}

declare %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui19PlatformEventSource26AddPlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventDispatcher"*) local_unnamed_addr #1

declare void @_ZN2ui19PlatformEventSource29RemovePlatformEventDispatcherEPNS_23PlatformEventDispatcherE(%"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui23XGlobalShortcutListener16CanDispatchEventERKPNS_5EventE(%"class.ui::XGlobalShortcutListener"* nocapture readnone, %"class.ui::Event"** nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  %4 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui23XGlobalShortcutListener13DispatchEventERKPNS_5EventE(%"class.ui::XGlobalShortcutListener"*, %"class.ui::Event"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  %11 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  %12 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 7, i32* %6, align 4
  %15 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp eq i32 %13, 7
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %18, align 8
  br label %24

19:                                               ; preds = %2
  %20 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2ui9EventTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #10
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2ui9EventTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* %20, i8* %21) #10
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i8* [ %23, %19 ], [ null, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %25, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %31 = load %"class.ui::Event"*, %"class.ui::Event"** %1, align 8
  %32 = call %"class.ui::KeyEvent"* @_ZN2ui5Event10AsKeyEventEv(%"class.ui::Event"* %31) #10
  call void @_ZN2ui23XGlobalShortcutListener15OnKeyPressEventERKNS_8KeyEventE(%"class.ui::XGlobalShortcutListener"* %0, %"class.ui::KeyEvent"* dereferenceable(168) %32)
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListener15OnKeyPressEventERKNS_8KeyEventE(%"class.ui::XGlobalShortcutListener"*, %"class.ui::KeyEvent"* nocapture readonly dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = lshr i32 %6, 3
  %8 = trunc i32 %7 to i8
  %9 = and i8 %8, 1
  %10 = lshr i32 %6, 2
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = lshr i32 %6, 1
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %91, label %20

20:                                               ; preds = %2, %52
  %21 = phi %"class.std::__1::__tree_end_node"* [ %54, %52 ], [ %16, %2 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %55, %52 ], [ %18, %2 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %4
  br i1 %25, label %40, label %26

26:                                               ; preds = %20
  %27 = icmp slt i32 %4, %24
  br i1 %27, label %49, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp ult i8 %30, %9
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = icmp ult i8 %9, %30
  br i1 %33, label %49, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 2, i32 0
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp ult i8 %36, %12
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = icmp ult i8 %12, %36
  br i1 %39, label %49, label %43

40:                                               ; preds = %34, %28, %20
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  br label %52

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 3, i32 0
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp ult i8 %45, %15
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  br i1 %46, label %52, label %49

49:                                               ; preds = %43, %38, %32, %26
  %50 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %49, %43, %40
  %53 = phi %"class.std::__1::__tree_node"** [ %50, %49 ], [ %42, %40 ], [ %48, %43 ]
  %54 = phi %"class.std::__1::__tree_end_node"* [ %51, %49 ], [ %21, %40 ], [ %21, %43 ]
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %52
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %16
  br i1 %58, label %91, label %59

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"*
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %4, %62
  br i1 %63, label %91, label %64

64:                                               ; preds = %59
  %65 = icmp slt i32 %62, %4
  br i1 %65, label %83, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to i8*
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp ult i8 %9, %69
  br i1 %70, label %91, label %71

71:                                               ; preds = %66
  %72 = icmp ult i8 %69, %9
  br i1 %72, label %83, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 2, i32 0, i32 2, i32 0
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp ult i8 %12, %75
  br i1 %76, label %91, label %77

77:                                               ; preds = %73
  %78 = icmp ult i8 %75, %12
  br i1 %78, label %83, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 2, i32 0, i32 3, i32 0
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp ult i8 %15, %81
  br i1 %82, label %91, label %83

83:                                               ; preds = %77, %71, %64, %79
  %84 = icmp ne i8 %9, 0
  %85 = icmp ne i8 %12, 0
  %86 = icmp ne i8 %15, 0
  %87 = bitcast %"class.ui::XGlobalShortcutListener"* %0 to void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)***
  %88 = load void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)**, void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)*, void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)** %88, i64 4
  %90 = load void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)*, void (%"class.ui::XGlobalShortcutListener"*, i32, i1, i1, i1)** %89, align 8
  tail call void %90(%"class.ui::XGlobalShortcutListener"* %0, i32 %4, i1 zeroext %84, i1 zeroext %85, i1 zeroext %86) #10
  br label %91

91:                                               ; preds = %79, %73, %66, %59, %57, %2, %83
  ret void
}

declare %"class.ui::KeyEvent"* @_ZN2ui5Event10AsKeyEventEv(%"class.ui::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui23XGlobalShortcutListener19RegisterAcceleratorENS_12KeyboardCodeEbbb(%"class.ui::XGlobalShortcutListener"*, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.scoped_refptr.255, align 8
  %7 = alloca %"class.std::__1::unique_ptr.257", align 8
  %8 = alloca [8 x %"class.x11::Future"], align 16
  %9 = bitcast [8 x %"class.x11::Future"]* %8 to i8*
  %10 = alloca %"struct.x11::GrabKeyRequest", align 4
  %11 = alloca %"struct.x11::UngrabKeyRequest", align 4
  %12 = alloca %"class.std::__1::tuple", align 4
  %13 = zext i1 %2 to i8
  %14 = zext i1 %4 to i8
  %15 = select i1 %3, i32 4, i32 0
  %16 = select i1 %2, i32 8, i32 0
  %17 = or i32 %15, %16
  %18 = tail call i32 @_ZN2ui24XKeysymForWindowsKeyCodeENS_12KeyboardCodeEb(i32 %1, i1 zeroext false) #10
  %19 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 4
  %20 = load %"class.x11::Connection"*, %"class.x11::Connection"** %19, align 8
  %21 = tail call zeroext i8 @_ZNK3x1110Connection15KeysymToKeycodeEj(%"class.x11::Connection"* %20, i32 %18) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  %22 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 0
  %23 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 64, i1 false)
  %24 = zext i1 %3 to i8
  %25 = zext i1 %4 to i32
  %26 = or i32 %17, %25
  %27 = bitcast %"class.x11::Connection"** %19 to %"class.x11::XProto"**
  %28 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 1
  %30 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 3
  %33 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 4
  %34 = getelementptr inbounds %"struct.x11::GrabKeyRequest", %"struct.x11::GrabKeyRequest"* %10, i64 0, i32 5
  br label %42

35:                                               ; preds = %58
  %36 = load %"class.x11::Connection"*, %"class.x11::Connection"** %19, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %36) #10
  %37 = bitcast %class.scoped_refptr.255* %6 to i8*
  %38 = getelementptr inbounds %class.scoped_refptr.255, %class.scoped_refptr.255* %6, i64 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.257"* %7 to i8*
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %7, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.257"* %7 to i64*
  br label %61

42:                                               ; preds = %58, %5
  %43 = phi i64 [ 0, %5 ], [ %59, %58 ]
  %44 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  store i8 0, i8* %28, align 4
  %45 = load i32, i32* %30, align 8
  store i32 %45, i32* %29, align 4
  %46 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN12_GLOBAL__N_115kModifiersMasksE, i64 0, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = or i32 %47, %26
  store i32 %48, i32* %31, align 4
  store i8 %21, i8* %32, align 4
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  %49 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto7GrabKeyERKNS_14GrabKeyRequestE(%"class.x11::XProto"* %44, %"struct.x11::GrabKeyRequest"* nonnull dereferenceable(24) %10) #10
  %50 = ptrtoint %"class.x11::Connection::FutureImpl"* %49 to i64
  %51 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 %43
  %52 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %52, align 8
  %54 = bitcast %"class.x11::Future"* %51 to i64*
  store i64 %50, i64* %54, align 8
  %55 = icmp eq %"class.x11::Connection::FutureImpl"* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %42
  %57 = bitcast %"class.x11::Connection::FutureImpl"* %53 to i8*
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %56, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  %59 = add nuw nsw i64 %43, 1
  %60 = icmp eq i64 %59, 8
  br i1 %60, label %35, label %42

61:                                               ; preds = %35, %104
  %62 = phi %"class.x11::Future"* [ %22, %35 ], [ %105, %104 ]
  %63 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %63, align 8
  %65 = icmp eq %"class.x11::Connection::FutureImpl"* %64, null
  br i1 %65, label %104, label %66

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  store i64 0, i64* %41, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %64, %class.scoped_refptr.255* nonnull %6, %"class.std::__1::unique_ptr.257"* nonnull %7) #10
  %67 = load %"class.x11::Error"*, %"class.x11::Error"** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %38, align 8
  %69 = icmp eq %"class.base::RefCountedMemory"* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %68, i64 0, i32 1
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe.256", %"class.base::RefCountedThreadSafe.256"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw sub i32* %72, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe.256", %"class.base::RefCountedThreadSafe.256"* %71, i64 -2
  %77 = bitcast %"class.base::RefCountedThreadSafe.256"* %76 to %"class.base::RefCountedMemory"*
  %78 = bitcast %"class.base::RefCountedThreadSafe.256"* %76 to void (%"class.base::RefCountedMemory"*)***
  %79 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %79, i64 3
  %81 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %80, align 8
  call void %81(%"class.base::RefCountedMemory"* nonnull %77) #10
  br label %82

82:                                               ; preds = %66, %70, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %83 = icmp eq %"class.x11::Error"* %67, null
  br i1 %83, label %104, label %84

84:                                               ; preds = %82
  %85 = bitcast %"class.x11::Error"* %67 to void (%"class.x11::Error"*)***
  %86 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %86, i64 1
  %88 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %87, align 8
  call void %88(%"class.x11::Error"* nonnull %67) #10
  %89 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %11, i64 0, i32 0
  %90 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %11, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %11, i64 0, i32 2
  %92 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %93 = load i32, i32* %30, align 8
  store i32 %93, i32* %90, align 4
  store i32 %26, i32* %91, align 4
  %94 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %92, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %95 = icmp eq %"class.x11::Connection::FutureImpl"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %84
  %97 = bitcast %"class.x11::Connection::FutureImpl"* %94 to i8*
  call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %84, %96
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %99 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %100 = load i32, i32* %30, align 8
  store i32 %100, i32* %90, align 4
  %101 = or i32 %26, 16
  store i32 %101, i32* %91, align 4
  %102 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %99, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %103 = icmp eq %"class.x11::Connection::FutureImpl"* %102, null
  br i1 %103, label %167, label %165

104:                                              ; preds = %82, %61
  %105 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %62, i64 1
  %106 = icmp eq %"class.x11::Future"* %105, %23
  br i1 %106, label %107, label %61

107:                                              ; preds = %104
  %108 = bitcast %"class.std::__1::tuple"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %109, align 4
  %110 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 1, i32 0
  store i8 %13, i8* %110, align 4
  %111 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 2, i32 0
  store i8 %24, i8* %111, align 1
  %112 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 3, i32 0
  store i8 %14, i8* %112, align 2
  %113 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0
  %114 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %113, %"class.std::__1::tuple"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple"* nonnull dereferenceable(8) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  br label %115

115:                                              ; preds = %215, %107
  %116 = phi i1 [ true, %107 ], [ false, %215 ]
  %117 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 7, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %117, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %117, align 8
  %119 = icmp eq %"class.x11::Connection::FutureImpl"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.x11::Connection::FutureImpl"* %118 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %115, %120
  %123 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0
  %124 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %123, align 16
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %123, align 16
  %125 = icmp eq %"class.x11::Connection::FutureImpl"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.x11::Connection::FutureImpl"* %124 to i8*
  call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %126, %122
  %129 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %129, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %129, align 8
  %131 = icmp eq %"class.x11::Connection::FutureImpl"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.x11::Connection::FutureImpl"* %130 to i8*
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %132, %128
  %135 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 4, i32 0, i32 0, i32 0, i32 0
  %136 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %135, align 16
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %135, align 16
  %137 = icmp eq %"class.x11::Connection::FutureImpl"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"class.x11::Connection::FutureImpl"* %136 to i8*
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %138, %134
  %141 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %141, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %141, align 8
  %143 = icmp eq %"class.x11::Connection::FutureImpl"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.x11::Connection::FutureImpl"* %142 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %144, %140
  %147 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %147, align 16
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %147, align 16
  %149 = icmp eq %"class.x11::Connection::FutureImpl"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.x11::Connection::FutureImpl"* %148 to i8*
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %150, %146
  %153 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0
  %154 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %153, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %153, align 8
  %155 = icmp eq %"class.x11::Connection::FutureImpl"* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %152
  %157 = bitcast %"class.x11::Connection::FutureImpl"* %154 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %156, %152
  %159 = getelementptr inbounds [8 x %"class.x11::Future"], [8 x %"class.x11::Future"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %159, align 16
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %159, align 16
  %161 = icmp eq %"class.x11::Connection::FutureImpl"* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.x11::Connection::FutureImpl"* %160 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %162, %158
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  ret i1 %116

165:                                              ; preds = %98
  %166 = bitcast %"class.x11::Connection::FutureImpl"* %102 to i8*
  call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %165, %98
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %168 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %169 = load i32, i32* %30, align 8
  store i32 %169, i32* %90, align 4
  %170 = or i32 %26, 2
  store i32 %170, i32* %91, align 4
  %171 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %168, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %172 = icmp eq %"class.x11::Connection::FutureImpl"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %167
  %174 = bitcast %"class.x11::Connection::FutureImpl"* %171 to i8*
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %173, %167
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %176 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %177 = load i32, i32* %30, align 8
  store i32 %177, i32* %90, align 4
  %178 = or i32 %26, 128
  store i32 %178, i32* %91, align 4
  %179 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %176, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %180 = icmp eq %"class.x11::Connection::FutureImpl"* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %175
  %182 = bitcast %"class.x11::Connection::FutureImpl"* %179 to i8*
  call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %181, %175
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %184 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %185 = load i32, i32* %30, align 8
  store i32 %185, i32* %90, align 4
  %186 = or i32 %26, 18
  store i32 %186, i32* %91, align 4
  %187 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %184, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %188 = icmp eq %"class.x11::Connection::FutureImpl"* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183
  %190 = bitcast %"class.x11::Connection::FutureImpl"* %187 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %189, %183
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %192 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %193 = load i32, i32* %30, align 8
  store i32 %193, i32* %90, align 4
  %194 = or i32 %26, 144
  store i32 %194, i32* %91, align 4
  %195 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %192, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %196 = icmp eq %"class.x11::Connection::FutureImpl"* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %191
  %198 = bitcast %"class.x11::Connection::FutureImpl"* %195 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %197, %191
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %200 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %201 = load i32, i32* %30, align 8
  store i32 %201, i32* %90, align 4
  %202 = or i32 %26, 130
  store i32 %202, i32* %91, align 4
  %203 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %200, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %204 = icmp eq %"class.x11::Connection::FutureImpl"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %199
  %206 = bitcast %"class.x11::Connection::FutureImpl"* %203 to i8*
  call void @_ZdlPv(i8* %206) #12
  br label %207

207:                                              ; preds = %205, %199
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  %208 = load %"class.x11::XProto"*, %"class.x11::XProto"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %89) #10
  store i8 %21, i8* %89, align 4
  %209 = load i32, i32* %30, align 8
  store i32 %209, i32* %90, align 4
  %210 = or i32 %26, 146
  store i32 %210, i32* %91, align 4
  %211 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %208, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %11) #10
  %212 = icmp eq %"class.x11::Connection::FutureImpl"* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %207
  %214 = bitcast %"class.x11::Connection::FutureImpl"* %211 to i8*
  call void @_ZdlPv(i8* %214) #12
  br label %215

215:                                              ; preds = %213, %207
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #10
  br label %115
}

declare i32 @_ZN2ui24XKeysymForWindowsKeyCodeENS_12KeyboardCodeEb(i32, i1 zeroext) local_unnamed_addr #1

declare zeroext i8 @_ZNK3x1110Connection15KeysymToKeycodeEj(%"class.x11::Connection"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto7GrabKeyERKNS_14GrabKeyRequestE(%"class.x11::XProto"*, %"struct.x11::GrabKeyRequest"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"*, %"struct.x11::UngrabKeyRequest"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23XGlobalShortcutListener21UnregisterAcceleratorENS_12KeyboardCodeEbbb(%"class.ui::XGlobalShortcutListener"*, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.x11::UngrabKeyRequest", align 4
  %7 = alloca %"class.std::__1::tuple", align 4
  %8 = zext i1 %3 to i8
  %9 = zext i1 %4 to i32
  %10 = select i1 %3, i32 4, i32 0
  %11 = select i1 %2, i32 8, i32 0
  %12 = or i32 %10, %11
  %13 = or i32 %12, %9
  %14 = tail call i32 @_ZN2ui24XKeysymForWindowsKeyCodeENS_12KeyboardCodeEb(i32 %1, i1 zeroext false) #10
  %15 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 4
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = tail call zeroext i8 @_ZNK3x1110Connection15KeysymToKeycodeEj(%"class.x11::Connection"* %16, i32 %14) #10
  %18 = bitcast %"class.x11::Connection"** %15 to %"class.x11::XProto"**
  %19 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %6, i64 0, i32 1
  %21 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"struct.x11::UngrabKeyRequest", %"struct.x11::UngrabKeyRequest"* %6, i64 0, i32 2
  %23 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %24 = load i32, i32* %21, align 8
  store i32 %24, i32* %20, align 4
  store i32 %13, i32* %22, align 4
  %25 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %23, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %5
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %5, %27
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %30 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %31 = load i32, i32* %21, align 8
  store i32 %31, i32* %20, align 4
  %32 = or i32 %13, 16
  store i32 %32, i32* %22, align 4
  %33 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %30, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %34 = icmp eq %"class.x11::Connection::FutureImpl"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.x11::Connection::FutureImpl"* %33 to i8*
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %35, %29
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %38 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %39 = load i32, i32* %21, align 8
  store i32 %39, i32* %20, align 4
  %40 = or i32 %13, 2
  store i32 %40, i32* %22, align 4
  %41 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %38, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %42 = icmp eq %"class.x11::Connection::FutureImpl"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.x11::Connection::FutureImpl"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %43, %37
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %46 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %47 = load i32, i32* %21, align 8
  store i32 %47, i32* %20, align 4
  %48 = or i32 %13, 128
  store i32 %48, i32* %22, align 4
  %49 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %46, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %50 = icmp eq %"class.x11::Connection::FutureImpl"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.x11::Connection::FutureImpl"* %49 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %51, %45
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %54 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %55 = load i32, i32* %21, align 8
  store i32 %55, i32* %20, align 4
  %56 = or i32 %13, 18
  store i32 %56, i32* %22, align 4
  %57 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %54, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %58 = icmp eq %"class.x11::Connection::FutureImpl"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.x11::Connection::FutureImpl"* %57 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %59, %53
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %62 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %63 = load i32, i32* %21, align 8
  store i32 %63, i32* %20, align 4
  %64 = or i32 %13, 144
  store i32 %64, i32* %22, align 4
  %65 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %62, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %66 = icmp eq %"class.x11::Connection::FutureImpl"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = bitcast %"class.x11::Connection::FutureImpl"* %65 to i8*
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %67, %61
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %70 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %71 = load i32, i32* %21, align 8
  store i32 %71, i32* %20, align 4
  %72 = or i32 %13, 130
  store i32 %72, i32* %22, align 4
  %73 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %70, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %74 = icmp eq %"class.x11::Connection::FutureImpl"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.x11::Connection::FutureImpl"* %73 to i8*
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %75, %69
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %78 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #10
  store i8 %17, i8* %19, align 4
  %79 = load i32, i32* %21, align 8
  store i32 %79, i32* %20, align 4
  %80 = or i32 %13, 146
  store i32 %80, i32* %22, align 4
  %81 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9UngrabKeyERKNS_16UngrabKeyRequestE(%"class.x11::XProto"* %78, %"struct.x11::UngrabKeyRequest"* nonnull dereferenceable(12) %6) #10
  %82 = icmp eq %"class.x11::Connection::FutureImpl"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.x11::Connection::FutureImpl"* %81 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %77
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #10
  %86 = zext i1 %2 to i8
  %87 = zext i1 %4 to i8
  %88 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %89, align 4
  %90 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  store i8 %86, i8* %90, align 4
  %91 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 2, i32 0
  store i8 %8, i8* %91, align 1
  %92 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 3, i32 0
  store i8 %87, i8* %92, align 2
  %93 = getelementptr inbounds %"class.ui::XGlobalShortcutListener", %"class.ui::XGlobalShortcutListener"* %0, i64 0, i32 3, i32 0
  %94 = call i64 @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_(%"class.std::__1::__tree"* %93, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN2ui9EventTypeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.255*, %"class.std::__1::unique_ptr.257"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %64, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %17 = load i8, i8* %16, align 1
  br label %18

18:                                               ; preds = %60, %8
  %19 = phi %"class.std::__1::__tree_node"* [ %63, %60 ], [ %6, %8 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %62, %60 ], [ %9, %8 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %11, %22
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = icmp slt i32 %22, %11
  br i1 %25, label %52, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp ult i8 %13, %28
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = icmp ult i8 %28, %13
  br i1 %31, label %52, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 2, i32 0
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp ult i8 %15, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = icmp ult i8 %34, %15
  br i1 %37, label %52, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 3, i32 0
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp ult i8 %17, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %38, %32, %26, %18
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 3, i32 0
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp ult i8 %50, %17
  br i1 %51, label %52, label %58

52:                                               ; preds = %36, %30, %48, %24
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

60:                                               ; preds = %52, %42
  %61 = phi %"class.std::__1::__tree_node_base"* [ %44, %42 ], [ %54, %52 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %43, %42 ], [ %53, %52 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"* %61 to %"class.std::__1::__tree_node"*
  br label %18

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %66

66:                                               ; preds = %46, %56, %58, %64
  %67 = phi %"class.std::__1::__tree_end_node"* [ %4, %64 ], [ %47, %46 ], [ %57, %56 ], [ %59, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %65, %64 ], [ %43, %46 ], [ %53, %56 ], [ %20, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %72, label %99

72:                                               ; preds = %66
  %73 = tail call i8* @_Znwm(i64 40) #12, !noalias !3
  %74 = getelementptr inbounds i8, i8* %73, i64 28
  %75 = bitcast %"class.std::__1::tuple"* %2 to i64*
  %76 = bitcast i8* %74 to i64*
  %77 = load i64, i64* %75, align 4, !noalias !3
  store i64 %77, i64* %76, align 4, !noalias !3
  %78 = bitcast i8* %73 to %"class.std::__1::__tree_node"*
  %79 = bitcast i8* %73 to %"class.std::__1::__tree_node_base"*
  %80 = getelementptr inbounds i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"** %81, align 8
  %82 = bitcast %"class.std::__1::__tree_node_base"** %68 to i8**
  store i8* %73, i8** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %72
  %89 = ptrtoint %"class.std::__1::__tree_node_base"* %86 to i64
  %90 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %89, i64* %90, align 8
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  br label %92

92:                                               ; preds = %88, %72
  %93 = phi %"class.std::__1::__tree_node_base"* [ %79, %72 ], [ %91, %88 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %95, %"class.std::__1::__tree_node_base"* %93) #10
  %96 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  br label %99

99:                                               ; preds = %92, %66
  %100 = phi i8 [ 1, %92 ], [ 0, %66 ]
  %101 = phi %"class.std::__1::__tree_node"* [ %78, %92 ], [ %70, %66 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %101, i64 0, i32 0, i32 0
  %103 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %102, 0
  %104 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %103, i8 %100, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %104
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_(%"class.std::__1::__tree"*, %"class.std::__1::tuple"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %122, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %16 = load i8, i8* %15, align 1
  br label %17

17:                                               ; preds = %49, %8
  %18 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %51, %49 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %5, %8 ], [ %52, %49 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %10
  br i1 %22, label %37, label %23

23:                                               ; preds = %17
  %24 = icmp slt i32 %10, %21
  br i1 %24, label %46, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp ult i8 %27, %12
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = icmp ult i8 %12, %27
  br i1 %30, label %46, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 2, i32 0
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp ult i8 %33, %14
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = icmp ult i8 %14, %33
  br i1 %36, label %46, label %40

37:                                               ; preds = %31, %25, %17
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tree_node_base"** %38 to %"class.std::__1::__tree_node"**
  br label %49

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 3, i32 0
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp ult i8 %42, %16
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node"**
  br i1 %43, label %49, label %46

46:                                               ; preds = %40, %35, %29, %23
  %47 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %46, %40, %37
  %50 = phi %"class.std::__1::__tree_node"** [ %47, %46 ], [ %39, %37 ], [ %45, %40 ]
  %51 = phi %"class.std::__1::__tree_end_node"* [ %48, %46 ], [ %18, %37 ], [ %18, %40 ]
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %17

54:                                               ; preds = %49
  %55 = icmp eq %"class.std::__1::__tree_end_node"* %51, %3
  br i1 %55, label %122, label %56

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"*
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %10, %59
  br i1 %60, label %122, label %61

61:                                               ; preds = %56
  %62 = icmp slt i32 %59, %10
  br i1 %62, label %80, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 4
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to i8*
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp ult i8 %12, %66
  br i1 %67, label %122, label %68

68:                                               ; preds = %63
  %69 = icmp ult i8 %66, %12
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 2, i32 0, i32 2, i32 0
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp ult i8 %14, %72
  br i1 %73, label %122, label %74

74:                                               ; preds = %70
  %75 = icmp ult i8 %72, %14
  br i1 %75, label %80, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 2, i32 0, i32 3, i32 0
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp ult i8 %16, %78
  br i1 %79, label %122, label %80

80:                                               ; preds = %74, %68, %61, %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node_base"*
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 2
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.std::__1::__tree_end_node"**
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, %85
  br i1 %91, label %108, label %99

92:                                               ; preds = %80, %92
  %93 = phi %"class.std::__1::__tree_node_base"* [ %95, %92 ], [ %82, %80 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %97, label %92

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %93, i64 0, i32 0
  br label %108

99:                                               ; preds = %84, %99
  %100 = phi %"class.std::__1::__tree_end_node"** [ %103, %99 ], [ %87, %84 ]
  %101 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 2
  %104 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, %102
  br i1 %107, label %108, label %99

108:                                              ; preds = %99, %97, %84
  %109 = phi %"class.std::__1::__tree_end_node"* [ %98, %97 ], [ %88, %84 ], [ %104, %99 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_end_node"* %111, %51
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = ptrtoint %"class.std::__1::__tree_end_node"* %109 to i64
  %115 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %114, i64* %115, align 8
  br label %116

116:                                              ; preds = %108, %113
  %117 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, -1
  store i64 %119, i64* %117, align 8
  %120 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %120) #10
  %121 = bitcast %"class.std::__1::__tree_end_node"* %51 to i8*
  tail call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %76, %70, %63, %56, %54, %2, %116
  %123 = phi i64 [ 1, %116 ], [ 0, %2 ], [ 0, %54 ], [ 0, %56 ], [ 0, %63 ], [ 0, %70 ], [ 0, %76 ]
  ret i64 %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_5tupleIJN2ui12KeyboardCodeEbbbEEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_"}
