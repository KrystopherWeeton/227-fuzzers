; ModuleID = '../../gpu/command_buffer/service/common_decoder.cc'
source_filename = "../../gpu/command_buffer/service/common_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::CommonDecoder::CommandInfo" = type { { i64, i64 }, i8, i8, i16 }
%"class.gpu::CommonDecoder::Bucket" = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.gpu::CommonDecoder" = type { i32 (...)**, %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::DecoderClient"*, i64, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.gpu::DecoderClient" = type { i32 (...)** }
%"class.gpu::CommandBufferServiceBase" = type { i32 (...)** }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.25", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gpu::CommonDecoder::Bucket"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8** }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i32*, i32*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i32* }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3gpu13CommonDecoder26ExitCommandProcessingEarlyEv = comdat any

$_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN3gpu13CommonDecoderE = comdat any

@_ZN3gpu13CommonDecoder12command_infoE = hidden local_unnamed_addr constant [8 x %"struct.gpu::CommonDecoder::CommandInfo"] [%"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder10HandleNoopEjPVKv to i64), i64 0 }, i8 1, i8 3, i16 0 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder14HandleSetTokenEjPVKv to i64), i64 0 }, i8 0, i8 3, i16 1 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder19HandleSetBucketSizeEjPVKv to i64), i64 0 }, i8 0, i8 3, i16 2 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder19HandleSetBucketDataEjPVKv to i64), i64 0 }, i8 0, i8 3, i16 5 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder28HandleSetBucketDataImmediateEjPVKv to i64), i64 0 }, i8 1, i8 3, i16 3 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder20HandleGetBucketStartEjPVKv to i64), i64 0 }, i8 0, i8 3, i16 6 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder19HandleGetBucketDataEjPVKv to i64), i64 0 }, i8 0, i8 3, i16 5 }, %"struct.gpu::CommonDecoder::CommandInfo" { { i64, i64 } { i64 ptrtoint (i32 (%"class.gpu::CommonDecoder"*, i32, i8*)* @_ZN3gpu13CommonDecoder21HandleInsertFenceSyncEjPVKv to i64), i64 0 }, i8 0, i8 1, i16 2 }], align 16
@_ZTVN3gpu13CommonDecoderE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::CommonDecoder"*)* @_ZN3gpu13CommonDecoder26ExitCommandProcessingEarlyEv to i8*)] }, comdat, align 8

@_ZN3gpu13CommonDecoder6BucketC1Ev = hidden unnamed_addr alias void (%"class.gpu::CommonDecoder::Bucket"*), void (%"class.gpu::CommonDecoder::Bucket"*)* @_ZN3gpu13CommonDecoder6BucketC2Ev
@_ZN3gpu13CommonDecoder6BucketD1Ev = hidden unnamed_addr alias void (%"class.gpu::CommonDecoder::Bucket"*), void (%"class.gpu::CommonDecoder::Bucket"*)* @_ZN3gpu13CommonDecoder6BucketD2Ev
@_ZN3gpu13CommonDecoderC1EPNS_13DecoderClientEPNS_24CommandBufferServiceBaseE = hidden unnamed_addr alias void (%"class.gpu::CommonDecoder"*, %"class.gpu::DecoderClient"*, %"class.gpu::CommandBufferServiceBase"*), void (%"class.gpu::CommonDecoder"*, %"class.gpu::DecoderClient"*, %"class.gpu::CommandBufferServiceBase"*)* @_ZN3gpu13CommonDecoderC2EPNS_13DecoderClientEPNS_24CommandBufferServiceBaseE
@_ZN3gpu13CommonDecoderD1Ev = hidden unnamed_addr alias void (%"class.gpu::CommonDecoder"*), void (%"class.gpu::CommonDecoder"*)* @_ZN3gpu13CommonDecoderD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder10HandleNoopEjPVKv(%"class.gpu::CommonDecoder"* nocapture readnone, i32, i8* nocapture readnone) #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder14HandleSetTokenEjPVKv(%"class.gpu::CommonDecoder"* nocapture readonly, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %5 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %4, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = load volatile i32, i32* %7, align 4
  %9 = bitcast %"class.gpu::CommandBufferServiceBase"* %5 to void (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %10 = load void (%"class.gpu::CommandBufferServiceBase"*, i32)**, void (%"class.gpu::CommandBufferServiceBase"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gpu::CommandBufferServiceBase"*, i32)*, void (%"class.gpu::CommandBufferServiceBase"*, i32)** %10, i64 5
  %12 = load void (%"class.gpu::CommandBufferServiceBase"*, i32)*, void (%"class.gpu::CommandBufferServiceBase"*, i32)** %11, align 8
  tail call void %12(%"class.gpu::CommandBufferServiceBase"* %5, i32 %8) #15
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder19HandleSetBucketSizeEjPVKv(%"class.gpu::CommonDecoder"*, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load volatile i32, i32* %5, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load volatile i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %10
  br i1 %13, label %32, label %14

14:                                               ; preds = %3
  %15 = tail call %"class.gpu::CommonDecoder::Bucket"* @_ZN3gpu13CommonDecoder12CreateBucketEj(%"class.gpu::CommonDecoder"* %0, i32 %6)
  %16 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %10
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = icmp eq i32 %9, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = tail call i8* @_Znam(i64 %10) #16
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i8* [ %22, %21 ], [ null, %19 ]
  %25 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* %24, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  tail call void @_ZdaPv(i8* nonnull %26) #16
  %29 = load i8*, i8** %25, align 8
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %24, %23 ], [ %29, %28 ]
  store i64 %10, i64* %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 0, i64 %10, i1 false) #15
  br label %32

32:                                               ; preds = %30, %14, %3
  %33 = phi i32 [ 2, %3 ], [ 0, %14 ], [ 0, %30 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder19HandleSetBucketDataEjPVKv(%"class.gpu::CommonDecoder"* readonly, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load volatile i32, i32* %5, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load volatile i32, i32* %8, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = load volatile i32, i32* %11, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to i32*
  %15 = load volatile i32, i32* %14, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 20
  %17 = bitcast i8* %16 to i32*
  %18 = load volatile i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %20 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %19, align 8
  %21 = bitcast %"class.gpu::CommandBufferServiceBase"* %20 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %22 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %21, align 8
  %23 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %22, i64 4
  %24 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %23, align 8
  %25 = tail call %"class.gpu::Buffer"* %24(%"class.gpu::CommandBufferServiceBase"* %20, i32 %15) #15
  %26 = icmp eq %"class.gpu::Buffer"* %25, null
  br i1 %26, label %78, label %27

27:                                               ; preds = %3
  %28 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %25, i32 %18, i32 %12) #15
  %29 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %25) #15
  %33 = bitcast %"class.gpu::Buffer"* %25 to i8*
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %27, %32
  %35 = icmp eq i8* %28, null
  br i1 %35, label %78, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node"**
  %39 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node"* %39, null
  br i1 %40, label %78, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"class.std::__1::__tree_end_node"* [ %52, %41 ], [ %37, %36 ]
  %43 = phi %"class.std::__1::__tree_node"* [ %53, %41 ], [ %39, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 1, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, %6
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_node"* %43 to %"class.std::__1::__tree_node"**
  %51 = select i1 %46, %"class.std::__1::__tree_node"** %48, %"class.std::__1::__tree_node"** %50
  %52 = select i1 %46, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"* %49
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %52, %37
  br i1 %56, label %78, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 4
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %60, %6
  br i1 %61, label %78, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.gpu::CommonDecoder::Bucket"**
  %65 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %64, align 8
  %66 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = zext i32 %9 to i64
  %69 = zext i32 %12 to i64
  %70 = add nuw nsw i64 %69, %68
  %71 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %65, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %70, %72
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %65, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %68
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* nonnull align 1 %28, i64 %69, i1 false) #15
  br label %78

78:                                               ; preds = %67, %57, %55, %36, %3, %74, %62, %34
  %79 = phi i32 [ 4, %34 ], [ 4, %62 ], [ 0, %74 ], [ 4, %3 ], [ 4, %36 ], [ 4, %55 ], [ 4, %57 ], [ 4, %67 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder28HandleSetBucketDataImmediateEjPVKv(%"class.gpu::CommonDecoder"* readonly, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = load volatile i32, i32* %6, align 4
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = load volatile i32, i32* %9, align 4
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = load volatile i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %57, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %57, label %20

20:                                               ; preds = %15, %20
  %21 = phi %"class.std::__1::__tree_end_node"* [ %31, %20 ], [ %16, %15 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %32, %20 ], [ %18, %15 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %24, %7
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %30 = select i1 %25, %"class.std::__1::__tree_node"** %27, %"class.std::__1::__tree_node"** %29
  %31 = select i1 %25, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %28
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %31, %16
  br i1 %35, label %57, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp ugt i32 %39, %7
  br i1 %40, label %57, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 5
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.gpu::CommonDecoder::Bucket"**
  %44 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %43, align 8
  %45 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = zext i32 %10 to i64
  %48 = zext i32 %13 to i64
  %49 = add nuw nsw i64 %48, %47
  %50 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %44, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 %49, %51
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %4, i64 %48, i1 false) #15
  br label %57

57:                                               ; preds = %46, %36, %34, %15, %53, %41, %3
  %58 = phi i32 [ 4, %3 ], [ 4, %41 ], [ 0, %53 ], [ 4, %15 ], [ 4, %34 ], [ 4, %36 ], [ 4, %46 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder20HandleGetBucketStartEjPVKv(%"class.gpu::CommonDecoder"* readonly, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load volatile i32, i32* %5, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load volatile i32, i32* %8, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = load volatile i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %14 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %13, align 8
  %15 = bitcast %"class.gpu::CommandBufferServiceBase"* %14 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %16 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %16, i64 4
  %18 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %17, align 8
  %19 = tail call %"class.gpu::Buffer"* %18(%"class.gpu::CommandBufferServiceBase"* %14, i32 %9) #15
  %20 = icmp eq %"class.gpu::Buffer"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %3
  %22 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %19, i32 %12, i32 4) #15
  %23 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %19) #15
  %27 = bitcast %"class.gpu::Buffer"* %19 to i8*
  tail call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %3, %21, %26
  %29 = phi i8* [ %22, %21 ], [ %22, %26 ], [ null, %3 ]
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds i8, i8* %2, i64 20
  %32 = bitcast i8* %31 to i32*
  %33 = load volatile i32, i32* %32, align 4
  %34 = getelementptr inbounds i8, i8* %2, i64 24
  %35 = bitcast i8* %34 to i32*
  %36 = load volatile i32, i32* %35, align 4
  %37 = getelementptr inbounds i8, i8* %2, i64 16
  %38 = bitcast i8* %37 to i32*
  %39 = load volatile i32, i32* %38, align 4
  %40 = or i32 %36, %33
  %41 = or i32 %40, %39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %28
  %44 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %13, align 8
  %45 = bitcast %"class.gpu::CommandBufferServiceBase"* %44 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %46 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %46, i64 4
  %48 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %47, align 8
  %49 = tail call %"class.gpu::Buffer"* %48(%"class.gpu::CommandBufferServiceBase"* %44, i32 %33) #15
  %50 = icmp eq %"class.gpu::Buffer"* %49, null
  br i1 %50, label %113, label %51

51:                                               ; preds = %43
  %52 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %49, i32 %36, i32 %39) #15
  %53 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %49) #15
  %57 = bitcast %"class.gpu::Buffer"* %49 to i8*
  tail call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %51, %56
  %59 = icmp eq i8* %52, null
  br i1 %59, label %113, label %60

60:                                               ; preds = %58, %28
  %61 = phi i8* [ %52, %58 ], [ null, %28 ]
  %62 = icmp eq i8* %29, null
  br i1 %62, label %113, label %63

63:                                               ; preds = %60
  %64 = load i32, i32* %30, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %113

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node"**
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node"* %69, null
  br i1 %70, label %113, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"class.std::__1::__tree_end_node"* [ %82, %71 ], [ %67, %66 ]
  %73 = phi %"class.std::__1::__tree_node"* [ %83, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %75, %6
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::__tree_node_base"** %77 to %"class.std::__1::__tree_node"**
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::__tree_node"* %73 to %"class.std::__1::__tree_node"**
  %81 = select i1 %76, %"class.std::__1::__tree_node"** %78, %"class.std::__1::__tree_node"** %80
  %82 = select i1 %76, %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"* %79
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %71

85:                                               ; preds = %71
  %86 = icmp eq %"class.std::__1::__tree_end_node"* %82, %67
  br i1 %86, label %113, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 4
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp ugt i32 %90, %6
  br i1 %91, label %113, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 5
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.gpu::CommonDecoder::Bucket"**
  %95 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %94, align 8
  %96 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %95, null
  br i1 %96, label %113, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %95, i64 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  store i32 %100, i32* %30, align 4
  %101 = icmp eq i8* %61, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %97
  %103 = icmp ugt i32 %39, %100
  %104 = select i1 %103, i32 %100, i32 %39
  %105 = zext i32 %104 to i64
  %106 = load i64, i64* %98, align 8
  %107 = icmp ult i64 %106, %105
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %95, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %102, %108
  %112 = phi i8* [ %110, %108 ], [ null, %102 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 %112, i64 %105, i1 false)
  br label %113

113:                                              ; preds = %87, %85, %66, %43, %111, %97, %92, %63, %60, %58
  %114 = phi i32 [ 4, %58 ], [ 4, %60 ], [ 4, %63 ], [ 4, %92 ], [ 0, %97 ], [ 0, %111 ], [ 4, %43 ], [ 4, %66 ], [ 4, %85 ], [ 4, %87 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder19HandleGetBucketDataEjPVKv(%"class.gpu::CommonDecoder"* readonly, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load volatile i32, i32* %5, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load volatile i32, i32* %8, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = load volatile i32, i32* %11, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to i32*
  %15 = load volatile i32, i32* %14, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 20
  %17 = bitcast i8* %16 to i32*
  %18 = load volatile i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %20 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %19, align 8
  %21 = bitcast %"class.gpu::CommandBufferServiceBase"* %20 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %22 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %21, align 8
  %23 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %22, i64 4
  %24 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %23, align 8
  %25 = tail call %"class.gpu::Buffer"* %24(%"class.gpu::CommandBufferServiceBase"* %20, i32 %15) #15
  %26 = icmp eq %"class.gpu::Buffer"* %25, null
  br i1 %26, label %80, label %27

27:                                               ; preds = %3
  %28 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %25, i32 %18, i32 %12) #15
  %29 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %25) #15
  %33 = bitcast %"class.gpu::Buffer"* %25 to i8*
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %27, %32
  %35 = icmp eq i8* %28, null
  br i1 %35, label %80, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node"**
  %39 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node"* %39, null
  br i1 %40, label %80, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"class.std::__1::__tree_end_node"* [ %52, %41 ], [ %37, %36 ]
  %43 = phi %"class.std::__1::__tree_node"* [ %53, %41 ], [ %39, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 1, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, %6
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_node"* %43 to %"class.std::__1::__tree_node"**
  %51 = select i1 %46, %"class.std::__1::__tree_node"** %48, %"class.std::__1::__tree_node"** %50
  %52 = select i1 %46, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"* %49
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %52, %37
  br i1 %56, label %80, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 4
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %60, %6
  br i1 %61, label %80, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.gpu::CommonDecoder::Bucket"**
  %65 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %64, align 8
  %66 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = zext i32 %9 to i64
  %69 = zext i32 %12 to i64
  %70 = add nuw nsw i64 %69, %68
  %71 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %65, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %70, %72
  br i1 %73, label %80, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %65, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %68
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %77, i64 %69, i1 false)
  br label %80

80:                                               ; preds = %67, %57, %55, %36, %3, %62, %74, %79, %34
  %81 = phi i32 [ 4, %34 ], [ 4, %62 ], [ 0, %79 ], [ 4, %74 ], [ 4, %3 ], [ 4, %36 ], [ 4, %55 ], [ 4, %57 ], [ 4, %67 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder21HandleInsertFenceSyncEjPVKv(%"class.gpu::CommonDecoder"*, i32, i8*) #1 align 2 {
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = load volatile i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = getelementptr inbounds i8, i8* %2, i64 4
  %10 = bitcast i8* %9 to i32*
  %11 = load volatile i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 2
  %15 = load %"class.gpu::DecoderClient"*, %"class.gpu::DecoderClient"** %14, align 8
  %16 = bitcast %"class.gpu::DecoderClient"* %15 to void (%"class.gpu::DecoderClient"*, i64)***
  %17 = load void (%"class.gpu::DecoderClient"*, i64)**, void (%"class.gpu::DecoderClient"*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gpu::DecoderClient"*, i64)*, void (%"class.gpu::DecoderClient"*, i64)** %17, i64 5
  %19 = load void (%"class.gpu::DecoderClient"*, i64)*, void (%"class.gpu::DecoderClient"*, i64)** %18, align 8
  tail call void %19(%"class.gpu::DecoderClient"* %15, i64 %13) #15
  %20 = bitcast %"class.gpu::CommonDecoder"* %0 to void (%"class.gpu::CommonDecoder"*)***
  %21 = load void (%"class.gpu::CommonDecoder"*)**, void (%"class.gpu::CommonDecoder"*)*** %20, align 8
  %22 = load void (%"class.gpu::CommonDecoder"*)*, void (%"class.gpu::CommonDecoder"*)** %21, align 8
  tail call void %22(%"class.gpu::CommonDecoder"* %0) #15
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13CommonDecoder6BucketC2Ev(%"class.gpu::CommonDecoder::Bucket"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gpu::CommonDecoder::Bucket"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13CommonDecoder6BucketD2Ev(%"class.gpu::CommonDecoder::Bucket"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #16
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZNK3gpu13CommonDecoder6Bucket7GetDataEmm(%"class.gpu::CommonDecoder::Bucket"* nocapture readonly, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1, i64 %2) #15
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %15, label %6, !prof !2

6:                                                ; preds = %3
  %7 = extractvalue { i64, i1 } %4, 0
  %8 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %1
  br label %15

15:                                               ; preds = %6, %3, %11
  %16 = phi i8* [ %14, %11 ], [ null, %6 ], [ null, %3 ]
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13CommonDecoder6Bucket7SetSizeEm(%"class.gpu::CommonDecoder::Bucket"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = tail call i8* @_Znam(i64 %1) #16
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i8* [ %9, %8 ], [ null, %6 ]
  %12 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* %11, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  tail call void @_ZdaPv(i8* nonnull %13) #16
  %16 = load i8*, i8** %12, align 8
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %11, %10 ], [ %16, %15 ]
  store i64 %1, i64* %3, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 %1, i1 false)
  br label %19

19:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13CommonDecoder6Bucket7SetDataEPVKvmm(%"class.gpu::CommonDecoder::Bucket"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #1 align 2 {
  %5 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 %3) #15
  %6 = extractvalue { i64, i1 } %5, 1
  br i1 %6, label %16, label %7, !prof !2

7:                                                ; preds = %4
  %8 = extractvalue { i64, i1 } %5, 0
  %9 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %1, i64 %3, i1 false)
  br label %16

16:                                               ; preds = %7, %4, %12
  %17 = phi i1 [ true, %12 ], [ false, %7 ], [ false, %4 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13CommonDecoder6Bucket13SetFromStringEPKc(%"class.gpu::CommonDecoder::Bucket"* nocapture, i8* readonly) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZdaPv(i8* nonnull %10) #16
  br label %13

13:                                               ; preds = %12, %8
  store i64 0, i64* %5, align 8
  br label %38

14:                                               ; preds = %2
  %15 = tail call i64 @strlen(i8* nonnull %1) #17
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, %16
  br i1 %19, label %35, label %20

20:                                               ; preds = %14
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = tail call i8* @_Znam(i64 %16) #16
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i8* [ %23, %22 ], [ null, %20 ]
  %26 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  store i8* %25, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  tail call void @_ZdaPv(i8* nonnull %27) #16
  %30 = load i8*, i8** %26, align 8
  br label %31

31:                                               ; preds = %24, %29
  %32 = phi i8* [ %25, %24 ], [ %30, %29 ]
  store i64 %16, i64* %17, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 %16, i1 false) #15
  %33 = load i64, i64* %17, align 8
  %34 = icmp ugt i64 %16, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %14, %31
  %36 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* nonnull align 1 %1, i64 %16, i1 false) #15
  br label %38

38:                                               ; preds = %35, %31, %13, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13CommonDecoder6Bucket11GetAsStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.gpu::CommonDecoder::Bucket"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = add i64 %4, -1
  %8 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i1 @llvm.is.constant.i64(i64 %7) #15
  %11 = icmp ult i64 %7, 23
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %31

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %25

22:                                               ; preds = %13
  %23 = trunc i64 %7 to i8
  store i8 %23, i8* %15, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = icmp eq i64 %7, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %9, i64 %7, i1 false) #15
  br label %29

29:                                               ; preds = %28, %25
  %30 = getelementptr inbounds i8, i8* %26, i64 %7
  store i8 0, i8* %30, align 1
  br label %33

31:                                               ; preds = %6
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1, i8* %9, i64 %7) #15
  br label %33

33:                                               ; preds = %31, %29, %2
  %34 = phi i1 [ false, %2 ], [ true, %29 ], [ true, %31 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13CommonDecoder6Bucket12GetAsStringsEPiPNSt3__16vectorIPcNS3_9allocatorIS5_EEEEPNS4_IiNS6_IiEEEE(%"class.gpu::CommonDecoder::Bucket"* nocapture readonly, i32* nocapture, %"class.std::__1::vector"*, %"class.std::__1::vector.17"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  br i1 %7, label %157, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %157, label %14

14:                                               ; preds = %8
  %15 = add i64 %6, -4
  %16 = udiv i64 %15, 5
  %17 = sext i32 %12 to i64
  %18 = icmp ult i64 %16, %17
  br i1 %18, label %157, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %10, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = icmp eq i32 %12, 0
  br i1 %22, label %81, label %23

23:                                               ; preds = %19
  %24 = shl nsw i64 %17, 3
  %25 = tail call i8* @_Znwm(i64 %24) #16
  %26 = bitcast i8* %25 to i8**
  %27 = getelementptr inbounds i8*, i8** %26, i64 %17
  %28 = ptrtoint i8* %25 to i64
  %29 = add nsw i64 %17, -1
  %30 = getelementptr i8*, i8** %26, i64 %29
  %31 = ptrtoint i8** %30 to i64
  %32 = sub i64 8, %28
  %33 = add i64 %32, %31
  %34 = and i64 %33, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 %34, i1 false) #15
  %35 = add nuw nsw i32 %12, 1
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %154, label %37, !prof !3

37:                                               ; preds = %23
  %38 = sext i32 %35 to i64
  %39 = shl nuw nsw i64 %38, 2
  %40 = ptrtoint i8* %10 to i64
  %41 = zext i32 %12 to i64
  br label %44

42:                                               ; preds = %73
  %43 = icmp eq i64 %78, %41
  br i1 %43, label %79, label %44

44:                                               ; preds = %42, %37
  %45 = phi i64 [ 0, %37 ], [ %78, %42 ]
  %46 = phi i64 [ %39, %37 ], [ %68, %42 ]
  %47 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %40, i64 %46) #15
  %48 = extractvalue { i64, i1 } %47, 1
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %44
  tail call void @llvm.trap() #15
  unreachable

50:                                               ; preds = %44
  %51 = extractvalue { i64, i1 } %47, 0
  %52 = inttoptr i64 %51 to i8*
  %53 = getelementptr inbounds i8*, i8** %26, i64 %45
  store i8* %52, i8** %53, align 8
  %54 = getelementptr inbounds i32, i32* %21, i64 %45
  %55 = load i32, i32* %54, align 4
  %56 = zext i64 %46 to i65
  %57 = sext i32 %55 to i65
  %58 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %56, i65 %57) #15
  %59 = extractvalue { i65, i1 } %58, 1
  %60 = extractvalue { i65, i1 } %58, 0
  %61 = icmp slt i65 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %154, label %63

63:                                               ; preds = %50
  %64 = and i65 %60, 18446744073709551615
  %65 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %64, i65 1) #15
  %66 = extractvalue { i65, i1 } %65, 1
  %67 = extractvalue { i65, i1 } %65, 0
  %68 = trunc i65 %67 to i64
  %69 = icmp slt i65 %67, 0
  %70 = or i1 %66, %69
  %71 = icmp ult i64 %6, %68
  %72 = or i1 %70, %71
  br i1 %72, label %154, label %73

73:                                               ; preds = %63
  %74 = sext i32 %55 to i64
  %75 = getelementptr inbounds i8, i8* %52, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  %78 = add nuw nsw i64 %45, 1
  br i1 %77, label %42, label %154

79:                                               ; preds = %42
  %80 = trunc i65 %67 to i64
  br label %81

81:                                               ; preds = %19, %79
  %82 = phi i1 [ true, %79 ], [ false, %19 ]
  %83 = phi i8* [ %25, %79 ], [ null, %19 ]
  %84 = phi i8** [ %26, %79 ], [ null, %19 ]
  %85 = phi i8** [ %27, %79 ], [ null, %19 ]
  %86 = phi i64 [ %80, %79 ], [ 4, %19 ]
  %87 = icmp eq i64 %86, %6
  br i1 %87, label %88, label %151

88:                                               ; preds = %81
  store i32 %12, i32* %1, align 4
  tail call void @_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %2, i8** %84, i8** %85) #15
  %89 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector.17"* %3 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp ult i64 %95, %17
  %97 = inttoptr i64 %93 to i32*
  br i1 %96, label %98, label %100

98:                                               ; preds = %88
  %99 = sub nsw i64 %17, %95
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.17"* %3, i64 %99) #15
  br label %104

100:                                              ; preds = %88
  %101 = icmp ugt i64 %95, %17
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = getelementptr inbounds i32, i32* %97, i64 %17
  store i32* %103, i32** %89, align 8
  br label %104

104:                                              ; preds = %98, %100, %102
  br i1 %82, label %105, label %151

105:                                              ; preds = %104
  %106 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %107 = zext i32 %12 to i64
  %108 = add nsw i64 %107, -1
  %109 = and i64 %107, 3
  %110 = icmp ult i64 %108, 3
  br i1 %110, label %138, label %111

111:                                              ; preds = %105
  %112 = sub nsw i64 %107, %109
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ 0, %111 ], [ %135, %113 ]
  %115 = phi i64 [ %112, %111 ], [ %136, %113 ]
  %116 = getelementptr inbounds i32, i32* %21, i64 %114
  %117 = load i32, i32* %116, align 4
  %118 = load i32*, i32** %106, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %114
  store i32 %117, i32* %119, align 4
  %120 = or i64 %114, 1
  %121 = getelementptr inbounds i32, i32* %21, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32*, i32** %106, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %120
  store i32 %122, i32* %124, align 4
  %125 = or i64 %114, 2
  %126 = getelementptr inbounds i32, i32* %21, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = load i32*, i32** %106, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %125
  store i32 %127, i32* %129, align 4
  %130 = or i64 %114, 3
  %131 = getelementptr inbounds i32, i32* %21, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = load i32*, i32** %106, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %130
  store i32 %132, i32* %134, align 4
  %135 = add nuw nsw i64 %114, 4
  %136 = add i64 %115, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %113

138:                                              ; preds = %113, %105
  %139 = phi i64 [ 0, %105 ], [ %135, %113 ]
  %140 = icmp eq i64 %109, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %148, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %149, %141 ], [ %109, %138 ]
  %144 = getelementptr inbounds i32, i32* %21, i64 %142
  %145 = load i32, i32* %144, align 4
  %146 = load i32*, i32** %106, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 %142
  store i32 %145, i32* %147, align 4
  %148 = add nuw nsw i64 %142, 1
  %149 = add i64 %143, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %141, !llvm.loop !4

151:                                              ; preds = %138, %141, %104, %81
  %152 = phi i1 [ false, %81 ], [ true, %104 ], [ true, %141 ], [ true, %138 ]
  %153 = icmp eq i8** %84, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %63, %50, %73, %23, %151
  %155 = phi i1 [ %152, %151 ], [ false, %23 ], [ false, %73 ], [ false, %50 ], [ false, %63 ]
  %156 = phi i8* [ %83, %151 ], [ %25, %23 ], [ %25, %73 ], [ %25, %50 ], [ %25, %63 ]
  tail call void @_ZdlPv(i8* %156) #16
  br label %157

157:                                              ; preds = %154, %151, %8, %14, %4
  %158 = phi i1 [ false, %4 ], [ false, %8 ], [ false, %14 ], [ %152, %151 ], [ %155, %154 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13CommonDecoderC2EPNS_13DecoderClientEPNS_24CommandBufferServiceBaseE(%"class.gpu::CommonDecoder"*, %"class.gpu::DecoderClient"*, %"class.gpu::CommandBufferServiceBase"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN3gpu13CommonDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  store %"class.gpu::CommandBufferServiceBase"* %2, %"class.gpu::CommandBufferServiceBase"** %5, align 8
  %6 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 2
  store %"class.gpu::DecoderClient"* %1, %"class.gpu::DecoderClient"** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 3
  store i64 1073741824, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13CommonDecoderD2Ev(%"class.gpu::CommonDecoder"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN3gpu13CommonDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* nocapture readonly, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %6 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %5, align 8
  %7 = bitcast %"class.gpu::CommandBufferServiceBase"* %6 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %8 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %8, i64 4
  %10 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %9, align 8
  %11 = tail call %"class.gpu::Buffer"* %10(%"class.gpu::CommandBufferServiceBase"* %6, i32 %1) #15
  %12 = icmp eq %"class.gpu::Buffer"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %11, i32 %2, i32 %3) #15
  %15 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %11) #15
  %19 = bitcast %"class.gpu::Buffer"* %11 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %4, %13, %18
  %21 = phi i8* [ %14, %13 ], [ %14, %18 ], [ null, %4 ]
  ret i8* %21
}

declare i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"*, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu13CommonDecoder17GetAddressAndSizeEjjjPj(%"class.gpu::CommonDecoder"* nocapture readonly, i32, i32, i32, i32*) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %7 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %6, align 8
  %8 = bitcast %"class.gpu::CommandBufferServiceBase"* %7 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %9 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %9, i64 4
  %11 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %10, align 8
  %12 = tail call %"class.gpu::Buffer"* %11(%"class.gpu::CommandBufferServiceBase"* %7, i32 %1) #15
  %13 = icmp eq %"class.gpu::Buffer"* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %5
  %15 = tail call i32 @_ZNK3gpu6Buffer16GetRemainingSizeEj(%"class.gpu::Buffer"* nonnull %12, i32 %2) #15
  %16 = icmp ult i32 %15, %3
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = tail call i8* @_ZNK3gpu6Buffer21GetDataAddressAndSizeEjPj(%"class.gpu::Buffer"* nonnull %12, i32 %2, i32* %4) #15
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i8* [ null, %14 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %12) #15
  %25 = bitcast %"class.gpu::Buffer"* %12 to i8*
  tail call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %5, %19, %24
  %27 = phi i8* [ %20, %19 ], [ %20, %24 ], [ null, %5 ]
  ret i8* %27
}

declare i32 @_ZNK3gpu6Buffer16GetRemainingSizeEj(%"class.gpu::Buffer"*, i32) local_unnamed_addr #7

declare i8* @_ZNK3gpu6Buffer21GetDataAddressAndSizeEjPj(%"class.gpu::Buffer"*, i32, i32*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder19GetSharedMemorySizeEjj(%"class.gpu::CommonDecoder"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %5 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %4, align 8
  %6 = bitcast %"class.gpu::CommandBufferServiceBase"* %5 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %7 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %7, i64 4
  %9 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %8, align 8
  %10 = tail call %"class.gpu::Buffer"* %9(%"class.gpu::CommandBufferServiceBase"* %5, i32 %1) #15
  %11 = icmp eq %"class.gpu::Buffer"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = tail call i32 @_ZNK3gpu6Buffer16GetRemainingSizeEj(%"class.gpu::Buffer"* nonnull %10, i32 %2) #15
  %14 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %10) #15
  %18 = bitcast %"class.gpu::Buffer"* %10 to i8*
  tail call void @_ZdlPv(i8* %18) #16
  br label %19

19:                                               ; preds = %3, %12, %17
  %20 = phi i32 [ %13, %12 ], [ %13, %17 ], [ 0, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::Buffer"* @_ZN3gpu13CommonDecoder21GetSharedMemoryBufferEj(%"class.gpu::CommonDecoder"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %4 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %3, align 8
  %5 = bitcast %"class.gpu::CommandBufferServiceBase"* %4 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %6 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %6, i64 4
  %8 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %7, align 8
  %9 = tail call %"class.gpu::Buffer"* %8(%"class.gpu::CommandBufferServiceBase"* %4, i32 %1) #15
  ret %"class.gpu::Buffer"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK3gpu13CommonDecoder20GetCommonCommandNameENS_3cmd9CommandIdE(%"class.gpu::CommonDecoder"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN3gpu3cmd14GetCommandNameENS0_9CommandIdE(i32 %1) #15
  ret i8* %3
}

declare i8* @_ZN3gpu3cmd14GetCommandNameENS0_9CommandIdE(i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.gpu::CommonDecoder::Bucket"* @_ZNK3gpu13CommonDecoder9GetBucketEj(%"class.gpu::CommonDecoder"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.gpu::CommonDecoder::Bucket"**
  %31 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %30, align 8
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi %"class.gpu::CommonDecoder::Bucket"* [ %31, %28 ], [ null, %2 ], [ null, %21 ], [ null, %23 ]
  ret %"class.gpu::CommonDecoder::Bucket"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::CommonDecoder::Bucket"* @_ZN3gpu13CommonDecoder12CreateBucketEj(%"class.gpu::CommonDecoder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %33, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.gpu::CommonDecoder::Bucket"**
  %31 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %30, align 8
  %32 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %31, null
  br i1 %32, label %33, label %115

33:                                               ; preds = %23, %21, %2, %28
  %34 = tail call i8* @_Znwm(i64 16) #16
  %35 = bitcast i8* %34 to %"class.gpu::CommonDecoder::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #15
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4
  br i1 %6, label %66, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %62, %38
  %41 = phi %"class.std::__1::__tree_node"* [ %65, %62 ], [ %5, %38 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %64, %62 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp ugt i32 %44, %1
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

52:                                               ; preds = %40
  %53 = icmp ult i32 %44, %1
  br i1 %53, label %54, label %60

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

62:                                               ; preds = %54, %46
  %63 = phi %"class.std::__1::__tree_node_base"* [ %48, %46 ], [ %56, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %55, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"* %63 to %"class.std::__1::__tree_node"*
  br label %40

66:                                               ; preds = %33
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %68

68:                                               ; preds = %66, %60, %58, %50
  %69 = phi %"class.std::__1::__tree_end_node"* [ %3, %66 ], [ %51, %50 ], [ %59, %58 ], [ %61, %60 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %67, %66 ], [ %47, %50 ], [ %55, %58 ], [ %42, %60 ]
  %71 = bitcast %"class.std::__1::__tree_node_base"** %70 to %"class.std::__1::__tree_node"**
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %101

74:                                               ; preds = %68
  %75 = tail call i8* @_Znwm(i64 48) #16, !noalias !6
  %76 = getelementptr inbounds i8, i8* %75, i64 32
  %77 = bitcast i8* %76 to i32*
  store i32 %1, i32* %77, align 8, !noalias !6
  %78 = getelementptr inbounds i8, i8* %75, i64 40
  %79 = bitcast i8* %78 to i64*
  store i64 0, i64* %79, align 8, !noalias !6
  %80 = bitcast i8* %75 to %"class.std::__1::__tree_node"*
  %81 = bitcast i8* %75 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %75, i64 16
  %83 = bitcast i8* %82 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %70 to i8**
  store i8* %75, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %37, i64 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %74
  %91 = ptrtoint %"class.std::__1::__tree_node_base"* %88 to i64
  %92 = bitcast %"class.std::__1::map"* %37 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  br label %94

94:                                               ; preds = %90, %74
  %95 = phi %"class.std::__1::__tree_node_base"* [ %81, %74 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %97, %"class.std::__1::__tree_node_base"* %95) #15
  %98 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %68, %94
  %102 = phi %"class.std::__1::__tree_node"* [ %80, %94 ], [ %72, %68 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 1, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %104, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.31"* %103 to i64*
  store i64 %36, i64* %106, align 8
  %107 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %105, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %105, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  store i8* null, i8** %109, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %108
  tail call void @_ZdaPv(i8* nonnull %110) #16
  br label %113

113:                                              ; preds = %112, %108
  %114 = bitcast %"class.gpu::CommonDecoder::Bucket"* %105 to i8*
  tail call void @_ZdlPv(i8* %114) #16
  br label %115

115:                                              ; preds = %101, %113, %28
  %116 = phi %"class.gpu::CommonDecoder::Bucket"* [ %31, %28 ], [ %35, %113 ], [ %35, %101 ]
  ret %"class.gpu::CommonDecoder::Bucket"* %116
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13CommonDecoder15DoCommonCommandEjjPVKv(%"class.gpu::CommonDecoder"*, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = icmp ult i32 %1, 8
  br i1 %6, label %7, label %30

7:                                                ; preds = %4
  %8 = getelementptr inbounds [8 x %"struct.gpu::CommonDecoder::CommandInfo"], [8 x %"struct.gpu::CommonDecoder::CommandInfo"]* @_ZN3gpu13CommonDecoder12command_infoE, i64 0, i64 %5, i32 3
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = and i64 %5, 4294967291
  %12 = icmp ne i64 %11, 0
  %13 = icmp eq i32 %10, %2
  %14 = and i1 %12, %13
  %15 = icmp ugt i32 %10, %2
  %16 = or i1 %12, %15
  %17 = xor i1 %14, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %7
  %19 = sub i32 %2, %10
  %20 = shl i32 %19, 2
  %21 = getelementptr inbounds [8 x %"struct.gpu::CommonDecoder::CommandInfo"], [8 x %"struct.gpu::CommonDecoder::CommandInfo"]* @_ZN3gpu13CommonDecoder12command_infoE, i64 0, i64 %5, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.gpu::CommonDecoder"* %0 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast i8* %24 to %"class.gpu::CommonDecoder"*
  %26 = getelementptr inbounds [8 x %"struct.gpu::CommonDecoder::CommandInfo"], [8 x %"struct.gpu::CommonDecoder::CommandInfo"]* @_ZN3gpu13CommonDecoder12command_infoE, i64 0, i64 %5, i32 0, i32 0
  %27 = bitcast i64* %26 to i32 (%"class.gpu::CommonDecoder"*, i32, i8*)**
  %28 = load i32 (%"class.gpu::CommonDecoder"*, i32, i8*)*, i32 (%"class.gpu::CommonDecoder"*, i32, i8*)** %27, align 8
  %29 = tail call i32 %28(%"class.gpu::CommonDecoder"* %25, i32 %20, i8* %3) #15
  br label %30

30:                                               ; preds = %7, %4, %18
  %31 = phi i32 [ %29, %18 ], [ 3, %4 ], [ 4, %7 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13CommonDecoder14ReadColorSpaceEjjjPN3gfx10ColorSpaceE(%"class.gpu::CommonDecoder"* nocapture readonly, i32, i32, i32, %"class.gfx::ColorSpace"*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.base::Pickle", align 8
  %7 = alloca %"class.base::PickleIterator", align 8
  %8 = or i32 %2, %1
  %9 = or i32 %8, %3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 68, i1 false)
  br label %45

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.gpu::CommonDecoder", %"class.gpu::CommonDecoder"* %0, i64 0, i32 1
  %15 = load %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::CommandBufferServiceBase"** %14, align 8
  %16 = bitcast %"class.gpu::CommandBufferServiceBase"* %15 to %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)***
  %17 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*** %16, align 8
  %18 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %17, i64 4
  %19 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBufferServiceBase"*, i32)** %18, align 8
  %20 = tail call %"class.gpu::Buffer"* %19(%"class.gpu::CommandBufferServiceBase"* %15, i32 %1) #15
  %21 = icmp eq %"class.gpu::Buffer"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %13
  %23 = tail call i8* @_ZNK3gpu6Buffer14GetDataAddressEjj(%"class.gpu::Buffer"* nonnull %20, i32 %2, i32 %3) #15
  %24 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %20) #15
  %28 = bitcast %"class.gpu::Buffer"* %20 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %22, %27
  %30 = icmp eq i8* %23, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %29
  %32 = zext i32 %3 to i64
  %33 = icmp eq i32 %3, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 %32) #16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* nonnull align 1 %23, i64 %32, i1 false) #15
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i8* [ null, %31 ], [ %35, %34 ]
  %38 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #15
  %39 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %6, i8* %37, i64 %32) #15
  %40 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #15
  %41 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %7, %"class.base::Pickle"* nonnull dereferenceable(40) %6) #15
  %42 = call zeroext i1 @_ZN3IPC11ParamTraitsIN3gfx10ColorSpaceEE4ReadEPKN4base6PickleEPNS4_14PickleIteratorEPS2_(%"class.base::Pickle"* nonnull %6, %"class.base::PickleIterator"* nonnull %7, %"class.gfx::ColorSpace"* %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #15
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #15
  %43 = icmp eq i8* %37, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %36
  call void @_ZdlPv(i8* nonnull %37) #16
  br label %45

45:                                               ; preds = %44, %36, %13, %29, %11
  %46 = phi i1 [ true, %11 ], [ false, %29 ], [ false, %13 ], [ %42, %36 ], [ %42, %44 ]
  ret i1 %46
}

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #7

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #7

declare zeroext i1 @_ZN3IPC11ParamTraitsIN3gfx10ColorSpaceEE4ReadEPKN4base6PickleEPNS4_14PickleIteratorEPS2_(%"class.base::Pickle"*, %"class.base::PickleIterator"*, %"class.gfx::ColorSpace"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu13CommonDecoder26ExitCommandProcessingEarlyEv(%"class.gpu::CommonDecoder"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #9

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, i8**, i8**) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i8*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i8**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i8*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i8*, i8** %1, i64 %22
  %25 = select i1 %23, i8** %24, i8** %2
  %26 = ptrtoint i8** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i8** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i8** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to i8**
  %43 = getelementptr inbounds i8*, i8** %42, i64 %39
  %44 = ptrtoint i8** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i8*, i8** %16, i64 %28
  store i8** %48, i8*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i8*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #16
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #16
  %75 = bitcast i8* %74 to i8**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i8*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i8*, i8** %75, i64 %72
  store i8** %79, i8*** %8, align 8
  %80 = bitcast i8*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i8** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #15
  %86 = getelementptr inbounds i8*, i8** %75, i64 %84
  %87 = ptrtoint i8** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.17"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #15
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.gpu::CommonDecoder::Bucket"*, %"class.gpu::CommonDecoder::Bucket"** %10, align 8
  store %"class.gpu::CommonDecoder::Bucket"* null, %"class.gpu::CommonDecoder::Bucket"** %10, align 8
  %12 = icmp eq %"class.gpu::CommonDecoder::Bucket"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.gpu::CommonDecoder::Bucket", %"class.gpu::CommonDecoder::Bucket"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* null, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdaPv(i8* nonnull %15) #16
  br label %18

18:                                               ; preds = %17, %13
  %19 = bitcast %"class.gpu::CommonDecoder::Bucket"* %11 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %4, %18
  %21 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !9
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 4001}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrIN3gpu13CommonDecoder6BucketENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_"}
!9 = !{i8 0, i8 2}
