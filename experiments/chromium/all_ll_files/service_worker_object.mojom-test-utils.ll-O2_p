; ModuleID = 'gen/third_party/blink/public/mojom/service_worker/service_worker_object.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/service_worker/service_worker_object.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter" = type { %"class.blink::mojom::ServiceWorkerObjectHost"* }
%"class.blink::mojom::ServiceWorkerObjectHost" = type { i32 (...)** }
%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter" = type { %"class.blink::mojom::ServiceWorkerObject"* }
%"class.blink::mojom::ServiceWorkerObject" = type { i32 (...)** }
%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting" = type { %"class.blink::mojom::ServiceWorkerObjectHost" }
%"struct.blink::TransferableMessage" = type <{ %"struct.blink::CloneableMessage", %"class.std::__1::vector.35", %"class.std::__1::vector.35", %"class.std::__1::vector.42", %"class.std::__1::vector.75", %"class.mojo::InlinedStructPtr", i8, [7 x i8] }>
%"struct.blink::CloneableMessage" = type { %"class.base::span", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.absl::optional", i64, i64, i64, i8, %"class.absl::optional.22", %"class.std::__1::vector.27" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.11" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::mojom::SerializedBlob"* }
%"class.blink::mojom::SerializedBlob" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.mojo::PendingRemote" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.mojo::StructPtr"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.17" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.mojo::PendingRemote.29"*, %"class.mojo::PendingRemote.29"*, %"class.std::__1::__compressed_pair.30" }
%"class.mojo::PendingRemote.29" = type opaque
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.mojo::PendingRemote.29"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*, %"class.std::__1::__compressed_pair.37" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::MessagePortChannel"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"*, %"class.std::__1::__compressed_pair.70" }
%"class.mojo::StructPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::mojom::SerializedArrayBufferContents"* }
%"class.blink::mojom::SerializedArrayBufferContents" = type { %"class.mojo_base::BigBuffer" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.48", i64, %"class.absl::optional.53" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.58", %"class.std::__1::unique_ptr.59" }
%"class.mojo::ScopedHandleBase.58" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i8* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.mojo::StructPtr.44"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.85" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.84 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.77, i32, i32 }
%class.sk_sp.77 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.84 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.SkBitmap* }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::UserActivationSnapshot", i32 }
%"class.blink::mojom::UserActivationSnapshot" = type { i8, i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.105, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.98", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.105 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.106" }>
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.108", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.108" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting" = type { %"class.blink::mojom::ServiceWorkerObject" }

$_ZN5blink5mojom23ServiceWorkerObjectHostD2Ev = comdat any

$_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom19ServiceWorkerObjectD2Ev = comdat any

$_ZN5blink5mojom40ServiceWorkerObjectInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [20 x i8] c"TerminateForTesting\00", align 1
@.str.1 = private unnamed_addr constant [92 x i8] c"gen/third_party/blink/public/mojom/service_worker/service_worker_object.mojom-test-utils.cc\00", align 1
@_ZTVN5blink5mojom44ServiceWorkerObjectHostInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectHost"*)* @_ZN5blink5mojom23ServiceWorkerObjectHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)* @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*, %"struct.blink::TransferableMessage"*)* @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTesting26PostMessageToServiceWorkerENS_19TransferableMessageE to i8*), i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTesting19TerminateForTestingEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom40ServiceWorkerObjectInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObject"*)* @_ZN5blink5mojom19ServiceWorkerObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)* @_ZN5blink5mojom40ServiceWorkerObjectInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*, i32)* @_ZN5blink5mojom40ServiceWorkerObjectInterceptorForTesting12StateChangedENS0_18ServiceWorkerStateE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterC1EPNS0_23ServiceWorkerObjectHostE = hidden unnamed_addr alias void (%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"*, %"class.blink::mojom::ServiceWorkerObjectHost"*), void (%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"*, %"class.blink::mojom::ServiceWorkerObjectHost"*)* @_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterC2EPNS0_23ServiceWorkerObjectHostE
@_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"*), void (%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"*)* @_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterD2Ev
@_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterC1EPNS0_19ServiceWorkerObjectE = hidden unnamed_addr alias void (%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"*, %"class.blink::mojom::ServiceWorkerObject"*), void (%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"*, %"class.blink::mojom::ServiceWorkerObject"*)* @_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterC2EPNS0_19ServiceWorkerObjectE
@_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"*), void (%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"*)* @_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTesting26PostMessageToServiceWorkerENS_19TransferableMessageE(%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*, %"struct.blink::TransferableMessage"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TransferableMessage", align 8
  %4 = bitcast %"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::ServiceWorkerObjectHost"* %7(%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"* %0) #10
  call void @_ZN5blink19TransferableMessageC1EOS0_(%"struct.blink::TransferableMessage"* nonnull %3, %"struct.blink::TransferableMessage"* dereferenceable(344) %1) #10
  %9 = bitcast %"class.blink::mojom::ServiceWorkerObjectHost"* %8 to void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)***
  %10 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)**, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)** %10, i64 2
  %12 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"struct.blink::TransferableMessage"*)** %11, align 8
  call void %12(%"class.blink::mojom::ServiceWorkerObjectHost"* %8, %"struct.blink::TransferableMessage"* nonnull %3) #10
  call void @_ZN5blink19TransferableMessageD1Ev(%"struct.blink::TransferableMessage"* nonnull %3) #10
  ret void
}

declare void @_ZN5blink19TransferableMessageC1EOS0_(%"struct.blink::TransferableMessage"*, %"struct.blink::TransferableMessage"* dereferenceable(344)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink19TransferableMessageD1Ev(%"struct.blink::TransferableMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTesting19TerminateForTestingEN4base12OnceCallbackIFvvEEE(%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"* %0 to %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)**, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObjectHost"* (%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::ServiceWorkerObjectHost"* %7(%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::ServiceWorkerObjectHost"* %8 to void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::ServiceWorkerObjectHost"* %8, %"class.base::OnceCallback"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterC2EPNS0_23ServiceWorkerObjectHostE(%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"* nocapture, %"class.blink::mojom::ServiceWorkerObjectHost"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter", %"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::ServiceWorkerObjectHost"* %1, %"class.blink::mojom::ServiceWorkerObjectHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiterD2Ev(%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEv(%"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RunLoop", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.base::RunLoop"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %2, i32 0) #10
  %6 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter", %"class.blink::mojom::ServiceWorkerObjectHostAsyncWaiter"* %0, i64 0, i32 0
  %7 = load %"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.blink::mojom::ServiceWorkerObjectHost"** %6, align 8
  %8 = ptrtoint %"class.base::RunLoop"* %2 to i64
  %9 = call i8* @_Znwm(i64 48) #11, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8, !noalias !2
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %9, i8** %13, align 8, !alias.scope !2
  %14 = bitcast %"class.blink::mojom::ServiceWorkerObjectHost"* %7 to void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ServiceWorkerObjectHost"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::ServiceWorkerObjectHost"* %7, %"class.base::OnceCallback"* nonnull %3) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  %19 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.1, i64 0, i64 0), i32 56) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom40ServiceWorkerObjectInterceptorForTesting12StateChangedENS0_18ServiceWorkerStateE(%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"* %0 to %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)**, %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)*, %"class.blink::mojom::ServiceWorkerObject"* (%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::ServiceWorkerObject"* %6(%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::ServiceWorkerObject"* %7 to void (%"class.blink::mojom::ServiceWorkerObject"*, i32)***
  %9 = load void (%"class.blink::mojom::ServiceWorkerObject"*, i32)**, void (%"class.blink::mojom::ServiceWorkerObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::ServiceWorkerObject"*, i32)*, void (%"class.blink::mojom::ServiceWorkerObject"*, i32)** %9, i64 2
  %11 = load void (%"class.blink::mojom::ServiceWorkerObject"*, i32)*, void (%"class.blink::mojom::ServiceWorkerObject"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::ServiceWorkerObject"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterC2EPNS0_19ServiceWorkerObjectE(%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"* nocapture, %"class.blink::mojom::ServiceWorkerObject"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::ServiceWorkerObjectAsyncWaiter", %"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::ServiceWorkerObject"* %1, %"class.blink::mojom::ServiceWorkerObject"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom30ServiceWorkerObjectAsyncWaiterD2Ev(%"class.blink::mojom::ServiceWorkerObjectAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom23ServiceWorkerObjectHostD2Ev(%"class.blink::mojom::ServiceWorkerObjectHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom44ServiceWorkerObjectHostInterceptorForTestingD0Ev(%"class.blink::mojom::ServiceWorkerObjectHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom19ServiceWorkerObjectD2Ev(%"class.blink::mojom::ServiceWorkerObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom40ServiceWorkerObjectInterceptorForTestingD0Ev(%"class.blink::mojom::ServiceWorkerObjectInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom34ServiceWorkerObjectHostAsyncWaiter19TerminateForTestingEvE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
