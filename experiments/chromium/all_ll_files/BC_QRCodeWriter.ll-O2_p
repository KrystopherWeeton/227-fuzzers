; ModuleID = '../../third_party/pdfium/fxbarcode/qrcode/BC_QRCodeWriter.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/qrcode/BC_QRCodeWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_QRCoderErrorCorrectionLevel = type { i32, i32 }
%class.CBC_QRCodeWriter = type { %class.CBC_TwoDimWriter.base, [3 x i8] }
%class.CBC_TwoDimWriter.base = type <{ %class.CBC_Writer.base, [2 x i8], %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CBC_CommonBitMatrix* }
%class.CBC_CommonBitMatrix = type opaque
%class.CBC_TwoDimWriter = type <{ %class.CBC_Writer.base, [2 x i8], %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CBC_QRCoder = type { %"class.fxcrt::UnownedPtr.4", i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.5" }
%"class.fxcrt::UnownedPtr.4" = type { %class.CBC_QRCoderErrorCorrectionLevel* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CBC_CommonByteMatrix* }
%class.CBC_CommonByteMatrix = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>

@_ZTV16CBC_QRCodeWriter = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_QRCodeWriter*)* @_ZN16CBC_QRCodeWriterD2Ev to i8*), i8* bitcast (void (%class.CBC_QRCodeWriter*)* @_ZN16CBC_QRCodeWriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_QRCodeWriter*, i32)* @_ZN16CBC_QRCodeWriter23SetErrorCorrectionLevelEi to i8*)] }, align 8
@_ZN31CBC_QRCoderErrorCorrectionLevel1LE = external local_unnamed_addr global %class.CBC_QRCoderErrorCorrectionLevel*, align 8
@_ZN31CBC_QRCoderErrorCorrectionLevel1ME = external local_unnamed_addr global %class.CBC_QRCoderErrorCorrectionLevel*, align 8
@_ZN31CBC_QRCoderErrorCorrectionLevel1QE = external local_unnamed_addr global %class.CBC_QRCoderErrorCorrectionLevel*, align 8
@_ZN31CBC_QRCoderErrorCorrectionLevel1HE = external local_unnamed_addr global %class.CBC_QRCoderErrorCorrectionLevel*, align 8
@switch.table._ZN16CBC_QRCodeWriter6EncodeEN5fxcrt18StringViewTemplateIwEEiPiS3_ = private unnamed_addr constant [4 x %class.CBC_QRCoderErrorCorrectionLevel**] [%class.CBC_QRCoderErrorCorrectionLevel** @_ZN31CBC_QRCoderErrorCorrectionLevel1LE, %class.CBC_QRCoderErrorCorrectionLevel** @_ZN31CBC_QRCoderErrorCorrectionLevel1ME, %class.CBC_QRCoderErrorCorrectionLevel** @_ZN31CBC_QRCoderErrorCorrectionLevel1QE, %class.CBC_QRCoderErrorCorrectionLevel** @_ZN31CBC_QRCoderErrorCorrectionLevel1HE], align 8

@_ZN16CBC_QRCodeWriterC1Ev = hidden unnamed_addr alias void (%class.CBC_QRCodeWriter*), void (%class.CBC_QRCodeWriter*)* @_ZN16CBC_QRCodeWriterC2Ev
@_ZN16CBC_QRCodeWriterD1Ev = hidden unnamed_addr alias void (%class.CBC_QRCodeWriter*), void (%class.CBC_QRCodeWriter*)* @_ZN16CBC_QRCodeWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_QRCodeWriterC2Ev(%class.CBC_QRCodeWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_QRCodeWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterC2Eb(%class.CBC_TwoDimWriter* %2, i1 zeroext true) #9
  %3 = getelementptr inbounds %class.CBC_QRCodeWriter, %class.CBC_QRCodeWriter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16CBC_QRCodeWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16CBC_TwoDimWriterC2Eb(%class.CBC_TwoDimWriter*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_QRCodeWriterD2Ev(%class.CBC_QRCodeWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_QRCodeWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_QRCodeWriterD0Ev(%class.CBC_QRCodeWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_QRCodeWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter* %2) #9
  %3 = bitcast %class.CBC_QRCodeWriter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN16CBC_QRCodeWriter23SetErrorCorrectionLevelEi(%class.CBC_QRCodeWriter* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = icmp ugt i32 %1, 3
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CBC_QRCodeWriter, %class.CBC_QRCodeWriter* %0, i64 0, i32 0, i32 11
  store i32 %1, i32* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_QRCodeWriter6EncodeEN5fxcrt18StringViewTemplateIwEEiPiS3_(%"class.std::__1::vector"* noalias nocapture sret, %class.CBC_QRCodeWriter* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CBC_QRCoder, align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9
  %13 = icmp ult i32 %3, 4
  br i1 %13, label %14, label %71

14:                                               ; preds = %6
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds [4 x %class.CBC_QRCoderErrorCorrectionLevel**], [4 x %class.CBC_QRCoderErrorCorrectionLevel**]* @switch.table._ZN16CBC_QRCodeWriter6EncodeEN5fxcrt18StringViewTemplateIwEEiPiS3_, i64 0, i64 %15
  %17 = load %class.CBC_QRCoderErrorCorrectionLevel**, %class.CBC_QRCoderErrorCorrectionLevel*** %16, align 8
  %18 = load %class.CBC_QRCoderErrorCorrectionLevel*, %class.CBC_QRCoderErrorCorrectionLevel** %17, align 8
  %19 = bitcast %class.CBC_QRCoder* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  call void @_ZN11CBC_QRCoderC1Ev(%class.CBC_QRCoder* nonnull %7) #9
  %20 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %21 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 16, i1 false)
  %22 = call zeroext i1 @_ZN18CBC_QRCoderEncoder6EncodeEN5fxcrt18StringViewTemplateIwEEPK31CBC_QRCoderErrorCorrectionLevelP11CBC_QRCoder(%"class.fxcrt::StringViewTemplate"* nonnull %8, %class.CBC_QRCoderErrorCorrectionLevel* %18, %class.CBC_QRCoder* nonnull %7) #9
  br i1 %22, label %23, label %70

23:                                               ; preds = %14
  %24 = call i32 @_ZNK11CBC_QRCoder14GetMatrixWidthEv(%class.CBC_QRCoder* nonnull %7) #9
  store i32 %24, i32* %4, align 4
  %25 = call i32 @_ZNK11CBC_QRCoder14GetMatrixWidthEv(%class.CBC_QRCoder* nonnull %7) #9
  store i32 %25, i32* %5, align 4
  %26 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = load i32, i32* %4, align 4
  %28 = sext i32 %27 to i64
  %29 = sext i32 %25 to i64
  %30 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %28, i64 %29) #9
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  br i1 %31, label %33, label %34, !prof !2

33:                                               ; preds = %23
  call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #9, !alias.scope !3
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %34
  %37 = icmp slt i64 %32, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %39) #11
  unreachable

40:                                               ; preds = %36
  %41 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %32, i64 1) #9
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  store i8* %41, i8** %43, align 8, !alias.scope !3
  %44 = getelementptr inbounds i8, i8* %41, i64 %32
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %44, i8** %45, align 8, !alias.scope !3
  %46 = bitcast i8** %42 to i64*
  %47 = ptrtoint i8* %41 to i64
  %48 = sub i64 %32, %47
  %49 = getelementptr i8, i8* %41, i64 %48
  %50 = ptrtoint i8* %49 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %44 to i64
  store i64 %51, i64* %46, align 8, !alias.scope !3
  br label %52

52:                                               ; preds = %40, %34
  %53 = phi i64 [ 0, %34 ], [ %51, %40 ]
  %54 = bitcast %"class.std::__1::vector"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %10 to i64*
  %60 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %55, i64* %60, align 8
  store i64 %53, i64* %59, align 8
  %61 = bitcast i8** %11 to i64*
  store i64 %58, i64* %61, align 8
  %62 = inttoptr i64 %55 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %63 = call %class.CBC_CommonByteMatrix* @_ZNK11CBC_QRCoder9GetMatrixEv(%class.CBC_QRCoder* nonnull %7) #9
  %64 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8, !noalias !6
  %66 = load i32, i32* %4, align 4
  %67 = load i32, i32* %5, align 4
  %68 = mul nsw i32 %67, %66
  %69 = sext i32 %68 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %65, i64 %69, i1 false)
  br label %70

70:                                               ; preds = %14, %52
  call void @_ZN11CBC_QRCoderD1Ev(%class.CBC_QRCoder* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #9
  br label %71

71:                                               ; preds = %6, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN11CBC_QRCoderC1Ev(%class.CBC_QRCoder*) unnamed_addr #1

declare zeroext i1 @_ZN18CBC_QRCoderEncoder6EncodeEN5fxcrt18StringViewTemplateIwEEPK31CBC_QRCoderErrorCorrectionLevelP11CBC_QRCoder(%"class.fxcrt::StringViewTemplate"*, %class.CBC_QRCoderErrorCorrectionLevel*, %class.CBC_QRCoder*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare i32 @_ZNK11CBC_QRCoder14GetMatrixWidthEv(%class.CBC_QRCoder*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %class.CBC_CommonByteMatrix* @_ZNK11CBC_QRCoder9GetMatrixEv(%class.CBC_QRCoder*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11CBC_QRCoderD1Ev(%class.CBC_QRCoder*) unnamed_addr #2

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_Writer*, i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer18SetWideNarrowRatioEa(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6pdfium8Vector2DIh16FxAllocAllocatorIhEEENSt3__16vectorIT_T0_EEmm: argument 0"}
!5 = distinct !{!5, !"_ZN6pdfium8Vector2DIh16FxAllocAllocatorIhEEENSt3__16vectorIT_T0_EEmm"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!8 = distinct !{!8, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
