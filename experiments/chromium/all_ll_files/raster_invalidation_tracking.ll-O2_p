; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/raster_invalidation_tracking.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/raster_invalidation_tracking.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector", %class.sk_sp, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.17", %class.sk_sp }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.7", %"class.WTF::Vector.12" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9", [128 x i8] }
%"class.WTF::VectorBufferBase.9" = type { i32*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14", [128 x i8] }
%"class.WTF::VectorBufferBase.14" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.1" }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.blink::DisplayItemClient" = type opaque
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.24" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.32" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.std::__1::unique_ptr.35"*, i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.58" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8** }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.60" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkBitmap = type { %class.sk_sp.65, %class.SkPixmap, %class.sk_sp.72 }
%class.sk_sp.65 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.66, i32, i32 }
%class.sk_sp.66 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.1" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.67" }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.72 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.87", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.73 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.74 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%class.sk_sp.93 = type { %"class.cc::PaintOpBuffer"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.94, %"class.std::__1::unique_ptr.95" }
%class.scoped_refptr.94 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.98 }
%union.anon.98 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.cc::PaintImage" = type { %class.sk_sp.102, %class.sk_sp, %"class.gfx::Rect", i32, %class.sk_sp.103, %class.sk_sp.104, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.102, %class.scoped_refptr.105 }
%class.sk_sp.103 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.104 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.102 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.105 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.1", [4 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.115, %class.sk_sp.116, %class.sk_sp.150, %class.sk_sp.151, %class.sk_sp.152, %class.sk_sp.153, i32, float, float, i32, %union.anon.160, [4 x i8] }>
%class.sk_sp.115 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.116 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.117", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp, i32, %"class.absl::optional.126", %"class.std::__1::vector.131", %"class.std::__1::vector.138", %class.sk_sp.145, %class.sk_sp.102, i32, [4 x i8] }>
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { i32*, i32*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i32* }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { float*, float*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { float* }
%class.sk_sp.145 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.146", [7 x i8] }>
%"struct.std::__1::atomic.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%class.sk_sp.150 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.151 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.152 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.153 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.154, i32, %"class.absl::optional.155", i8, i32 }
%class.sk_sp.154 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %struct.SkRect }
%union.anon.160 = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEEaSERKS5_ = comdat any

$_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6Region4SpanEEEmm = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm = comdat any

$_ZNSt3__16__sortIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEbT0_S9_T_ = comdat any

$_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink23RasterUnderInvalidationELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23RasterUnderInvalidationEEEmm = comdat any

@_ZN5blinkL37g_simulate_raster_under_invalidationsE = internal unnamed_addr global i8 0, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external local_unnamed_addr global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"invalidations\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"oldPixel\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"newPixel\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"underInvalidations\00", align 1
@.str.9 = private unnamed_addr constant [89 x i8] c"../../third_party/blink/renderer/platform/graphics/paint/raster_invalidation_tracking.cc\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c" Uninvalidated old/new pixels mismatch at \00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c" old:\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c" new:\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"and more...\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase45is_paint_under_invalidation_checking_enabled_E = external local_unnamed_addr global i8, align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6Region4SpanEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Region::Span]\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22RasterInvalidationInfoEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RasterInvalidationInfo]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23RasterUnderInvalidationEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RasterUnderInvalidation]\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink26RasterInvalidationTracking32SimulateRasterUnderInvalidationsEb(i1 zeroext) local_unnamed_addr #0 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blinkL37g_simulate_raster_under_invalidationsE, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink26RasterInvalidationTracking17ShouldAlwaysTrackEv() local_unnamed_addr #1 align 2 {
  %1 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase45is_paint_under_invalidation_checking_enabled_E, align 1, !range !2
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), align 16
  %5 = and i8 %4, 9
  %6 = icmp ne i8 %5, 0
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi i1 [ true, %0 ], [ %6, %3 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink26RasterInvalidationTracking28IsTracingRasterInvalidationsEv() local_unnamed_addr #1 align 2 {
  %1 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), align 16
  %2 = and i8 %1, 9
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26RasterInvalidationTracking15AddInvalidationEPKNS_17DisplayItemClientERKN3WTF6StringERKNS_7IntRectENS_23PaintInvalidationReasonE(%"class.blink::RasterInvalidationTracking"*, %"class.blink::DisplayItemClient"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::IntRect"* nocapture readonly dereferenceable(16), i8 zeroext) local_unnamed_addr #3 align 2 {
  %6 = alloca %"struct.blink::RasterInvalidationInfo", align 8
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to %"class.blink::IntRect"*
  %9 = alloca %"class.blink::Region", align 8
  %10 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %161, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %161, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.blink::RasterInvalidationInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false)
  %19 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 1
  %21 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #16
  store i8 3, i8* %19, align 8
  %22 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 0
  store %"class.blink::DisplayItemClient"* %1, %"class.blink::DisplayItemClient"** %22, align 8
  %23 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #16
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %45, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #16
  unreachable

42:                                               ; preds = %27, %17
  %43 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %44 = bitcast %"class.WTF::String"* %23 to i64*
  store i64 %43, i64* %44, align 8
  br label %65

45:                                               ; preds = %32
  %46 = trunc i33 %38 to i32
  store i32 %46, i32* %33, align 4
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %50 = bitcast %"class.WTF::String"* %23 to i64*
  store i64 %49, i64* %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %65

65:                                               ; preds = %42, %45, %61, %64
  %66 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 2
  %67 = bitcast %"class.blink::IntRect"* %66 to i8*
  %68 = bitcast %"class.blink::IntRect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 4 %68, i64 16, i1 false)
  store i8 %4, i8* %19, align 8
  %69 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %108, label %74, !prof !3

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %75, align 8
  %77 = zext i32 %70 to i64
  %78 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %76, i64 %77
  %79 = bitcast %"struct.blink::RasterInvalidationInfo"* %6 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"struct.blink::RasterInvalidationInfo"* %78 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %76, i64 %77, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #16
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %91
  tail call void @llvm.trap() #16
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %101, %86, %74
  %104 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %76, i64 %77, i32 2
  %105 = bitcast %"class.blink::IntRect"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %67, i64 17, i1 false) #16
  %106 = load i32, i32* %69, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %69, align 4
  br label %110

108:                                              ; preds = %65
  %109 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"* %109, %"struct.blink::RasterInvalidationInfo"* nonnull dereferenceable(40) %6) #16
  br label %110

110:                                              ; preds = %103, %108
  %111 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %111, i8* align 4 %68, i64 16, i1 false)
  %112 = load <4 x i32>, <4 x i32>* %7, align 16
  %113 = add <4 x i32> %112, <i32 -1, i32 -1, i32 2, i32 2>
  store <4 x i32> %113, <4 x i32>* %7, align 16
  %114 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3
  %115 = bitcast %"class.blink::Region"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %115) #16
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %9, %"class.blink::IntRect"* nonnull dereferenceable(16) %8) #16
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %114, %"class.blink::Region"* nonnull dereferenceable(304) %9) #16
  %116 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1
  %117 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1
  %118 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %110
  store i32 0, i32* %118, align 4
  br label %122

122:                                              ; preds = %121, %110
  %123 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %117, i64 0, i32 0, i32 0, i32 0
  %124 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %126 = bitcast i8* %125 to %"struct.blink::Region::Span"*
  %127 = icmp eq %"struct.blink::Region::Span"* %124, %126
  br i1 %127, label %130, label %128, !prof !4

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %117, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %129, %"struct.blink::Region::Span"* %124) #16
  br label %130

130:                                              ; preds = %128, %122
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %123, align 8
  %131 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %130
  store i32 0, i32* %131, align 4
  br label %135

135:                                              ; preds = %134, %130
  %136 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %139 = bitcast i8* %138 to i32*
  %140 = icmp eq i32* %137, %139
  br i1 %140, label %143, label %141, !prof !4

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %116, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %142, i32* %137) #16
  br label %143

143:                                              ; preds = %135, %141
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %115) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #16
  %144 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 0, i32 1, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #16
  br label %160

160:                                              ; preds = %143, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  br label %161

161:                                              ; preds = %5, %13, %160
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"*, %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #4

declare void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"*, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26RasterInvalidationTracking6AsJSONEPNS_10JSONObjectEb(%"class.blink::RasterInvalidationTracking"*, %"class.blink::JSONObject"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::Color", align 4
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::Color", align 4
  %19 = alloca %"class.WTF::String", align 8
  %20 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %229, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0
  %25 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  call void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::Vector"* dereferenceable(16) %24)
  %29 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %26, align 8
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %29, i64 %31
  %33 = bitcast i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  store i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)* @_ZN5blinkL29CompareRasterInvalidationInfoERKNS_22RasterInvalidationInfoES2_, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %29, %"struct.blink::RasterInvalidationInfo"* %32, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %34 = call noalias i8* @malloc(i64 32) #16
  %35 = bitcast i8* %34 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %35) #16
  %36 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %26, align 8
  %37 = load i32, i32* %27, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %23
  %40 = bitcast %"class.WTF::String"* %6 to i8*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::String"* %7 to i8*
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::String"* %8 to i8*
  %45 = bitcast %"class.WTF::String"* %9 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %103

48:                                               ; preds = %222, %23
  %49 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13) #16
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::JSONArray"* %35) #16
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #16
  br label %66

66:                                               ; preds = %65, %62, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #16
  %67 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %26, align 8
  %68 = icmp eq %"struct.blink::RasterInvalidationInfo"* %67, null
  br i1 %68, label %102, label %69, !prof !4

69:                                               ; preds = %66
  %70 = bitcast %"struct.blink::RasterInvalidationInfo"* %67 to i8*
  %71 = load i32, i32* %27, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %100, label %73, !prof !3

73:                                               ; preds = %69
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %67, i64 %74
  br label %76

76:                                               ; preds = %94, %73
  %77 = phi %"struct.blink::RasterInvalidationInfo"* [ %95, %94 ], [ %67, %73 ]
  %78 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #16
  br label %94

94:                                               ; preds = %93, %90, %76
  %95 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %77, i64 1
  %96 = icmp eq %"struct.blink::RasterInvalidationInfo"* %95, %75
  br i1 %96, label %97, label %76

97:                                               ; preds = %94
  store i32 0, i32* %27, align 4
  %98 = bitcast %"class.WTF::Vector"* %5 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %69
  %101 = phi i8* [ %99, %97 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %101) #16
  store %"struct.blink::RasterInvalidationInfo"* null, %"struct.blink::RasterInvalidationInfo"** %26, align 8
  br label %102

102:                                              ; preds = %66, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  br label %229

103:                                              ; preds = %39, %222
  %104 = phi %"struct.blink::RasterInvalidationInfo"* [ %36, %39 ], [ %224, %222 ]
  %105 = phi %"struct.blink::RasterInvalidationInfo"* [ %36, %39 ], [ %223, %222 ]
  br i1 %2, label %106, label %196

106:                                              ; preds = %103
  %107 = call noalias i8* @malloc(i64 56) #16
  %108 = bitcast i8* %107 to %"class.blink::JSONObject"*
  call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %108) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #16
  %109 = call noalias i8* @malloc(i64 32) #16
  %110 = bitcast i8* %109 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %110) #16
  %111 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = sitofp i32 %112 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %110, double %113) #16
  %114 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = sitofp i32 %115 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %110, double %116) #16
  %117 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 1, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %110, double %119) #16
  %120 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 1, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = sitofp i32 %121 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %110, double %122) #16
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %108, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::JSONArray"* %110) #16
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %106
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %106, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6) #16
  %139 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 1
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %108, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %139) #16
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #16
  br label %155

155:                                              ; preds = %138, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #16
  %156 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 3
  %157 = load i8, i8* %156, align 8
  %158 = call i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext %157) #16
  %159 = icmp eq i8* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %155
  %161 = call i64 @strlen(i8* nonnull %158) #17
  br label %162

162:                                              ; preds = %155, %160
  %163 = phi i64 [ %161, %160 ], [ 0, %155 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %158, i64 %163) #16
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %108, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #16
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #16
  br label %179

179:                                              ; preds = %162, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #16
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #16
  br label %195

195:                                              ; preds = %194, %191, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  call void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"* %35, %"class.blink::JSONObject"* %108) #16
  br label %222

196:                                              ; preds = %103
  %197 = icmp eq %"struct.blink::RasterInvalidationInfo"* %104, %105
  br i1 %197, label %207, label %198

198:                                              ; preds = %196
  %199 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2
  br label %202

200:                                              ; preds = %202
  %201 = icmp eq %"struct.blink::RasterInvalidationInfo"* %206, %105
  br i1 %201, label %207, label %202

202:                                              ; preds = %200, %198
  %203 = phi %"struct.blink::RasterInvalidationInfo"* [ %104, %198 ], [ %206, %200 ]
  %204 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %203, i64 0, i32 2
  %205 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* %204, %"class.blink::IntRect"* dereferenceable(16) %199) #16
  %206 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %203, i64 1
  br i1 %205, label %222, label %200

207:                                              ; preds = %200, %196
  %208 = call noalias i8* @malloc(i64 32) #16
  %209 = bitcast i8* %208 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %209) #16
  %210 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = sitofp i32 %211 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %209, double %212) #16
  %213 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = sitofp i32 %214 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %209, double %215) #16
  %216 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 1, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = sitofp i32 %217 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %209, double %218) #16
  %219 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 0, i32 2, i32 1, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sitofp i32 %220 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %209, double %221) #16
  call void @_ZN5blink9JSONArray9PushArrayENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.blink::JSONArray"* %35, %"class.blink::JSONArray"* %209) #16
  br label %222

222:                                              ; preds = %202, %207, %195
  %223 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %105, i64 1
  %224 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %26, align 8
  %225 = load i32, i32* %27, align 4
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %224, i64 %226
  %228 = icmp eq %"struct.blink::RasterInvalidationInfo"* %223, %227
  br i1 %228, label %48, label %103

229:                                              ; preds = %102, %3
  %230 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %392, label %233

233:                                              ; preds = %229
  %234 = call noalias i8* @malloc(i64 32) #16
  %235 = bitcast i8* %234 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %235) #16
  %236 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %237 = load %"struct.blink::RasterUnderInvalidation"*, %"struct.blink::RasterUnderInvalidation"** %236, align 8
  %238 = load i32, i32* %230, align 4
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %237, i64 %239
  %241 = icmp eq i32 %238, 0
  br i1 %241, label %259, label %242

242:                                              ; preds = %233
  %243 = bitcast %"class.WTF::String"* %11 to i8*
  %244 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %245 = bitcast %"class.WTF::String"* %12 to i8*
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %247 = bitcast %"class.WTF::String"* %13 to i8*
  %248 = bitcast %"class.WTF::String"* %14 to i8*
  %249 = bitcast %"class.blink::Color"* %15 to i8*
  %250 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %15, i64 0, i32 0
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %253 = bitcast %"class.WTF::String"* %16 to i8*
  %254 = bitcast %"class.WTF::String"* %17 to i8*
  %255 = bitcast %"class.blink::Color"* %18 to i8*
  %256 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %18, i64 0, i32 0
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  br label %278

259:                                              ; preds = %389, %233
  %260 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i64 18) #16
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.blink::JSONArray"* %235) #16
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #16
  br label %277

277:                                              ; preds = %276, %273, %259
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #16
  br label %392

278:                                              ; preds = %242, %389
  %279 = phi %"struct.blink::RasterUnderInvalidation"* [ %237, %242 ], [ %390, %389 ]
  %280 = call noalias i8* @malloc(i64 56) #16
  %281 = bitcast i8* %280 to %"class.blink::JSONObject"*
  call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %281) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #16
  %282 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %279, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = sitofp i32 %283 to double
  call void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"* %281, %"class.WTF::String"* nonnull dereferenceable(8) %11, double %284) #16
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %300

300:                                              ; preds = %278, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #16
  %301 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %279, i64 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sitofp i32 %302 to double
  call void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"* %281, %"class.WTF::String"* nonnull dereferenceable(8) %12, double %303) #16
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %319, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #16
  br label %319

319:                                              ; preds = %300, %315, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #16
  %320 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %279, i64 0, i32 2
  %321 = load i32, i32* %320, align 4
  store i32 %321, i32* %250, align 4
  %322 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %15) #16
  store %"class.WTF::StringImpl"* %322, %"class.WTF::StringImpl"** %251, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %281, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #16
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #16
  br label %338

338:                                              ; preds = %319, %334, %337
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #16
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %339, null
  br i1 %340, label %354, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  br i1 %345, label %348, label %350

348:                                              ; preds = %341
  %349 = add i32 %347, -1
  store i32 %349, i32* %346, align 4
  br label %350

350:                                              ; preds = %348, %341
  %351 = phi i32 [ %349, %348 ], [ %347, %341 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %339) #16
  br label %354

354:                                              ; preds = %338, %350, %353
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #16
  %355 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %279, i64 0, i32 3
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %256, align 4
  %357 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %18) #16
  store %"class.WTF::StringImpl"* %357, %"class.WTF::StringImpl"** %257, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %281, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %17) #16
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %354
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #16
  br label %373

373:                                              ; preds = %354, %369, %372
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #16
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %373
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #16
  br label %389

389:                                              ; preds = %388, %385, %373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #16
  call void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"* %235, %"class.blink::JSONObject"* %281) #16
  %390 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %279, i64 1
  %391 = icmp eq %"struct.blink::RasterUnderInvalidation"* %390, %240
  br i1 %391, label %259, label %278

392:                                              ; preds = %277, %229
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::RasterInvalidationInfo"* null, %"struct.blink::RasterInvalidationInfo"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm(i64 %9) #16
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22RasterInvalidationInfoEEEPKcv, i64 0, i64 0)) #16
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = udiv i64 %10, 40
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.blink::RasterInvalidationInfo"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.blink::RasterInvalidationInfo"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %63, label %28

28:                                               ; preds = %17, %55
  %29 = phi %"struct.blink::RasterInvalidationInfo"* [ %60, %55 ], [ %18, %17 ]
  %30 = phi %"struct.blink::RasterInvalidationInfo"* [ %61, %55 ], [ %23, %17 ]
  %31 = bitcast %"struct.blink::RasterInvalidationInfo"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.blink::RasterInvalidationInfo"* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %30, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %29, i64 0, i32 2
  %57 = bitcast %"class.blink::IntRect"* %56 to i8*
  %58 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %30, i64 0, i32 2
  %59 = bitcast %"class.blink::IntRect"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %59, i64 17, i1 false) #16
  %60 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %29, i64 1
  %61 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %30, i64 1
  %62 = icmp eq %"struct.blink::RasterInvalidationInfo"* %61, %26
  br i1 %62, label %63, label %28

63:                                               ; preds = %55, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL29CompareRasterInvalidationInfoERKNS_22RasterInvalidationInfoES2_(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40), %"struct.blink::RasterInvalidationInfo"* dereferenceable(40)) #3 {
  %3 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %6
  br label %47

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = icmp sgt i32 %12, %14
  br label %47

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = icmp sgt i32 %20, %22
  br label %47

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = icmp sgt i32 %28, %30
  br label %47

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 1
  %37 = tail call i32 @_ZN3WTF15CodeUnitCompareERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %36) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = icmp slt i32 %37, 0
  br label %47

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 3
  %43 = load i8, i8* %42, align 8
  %44 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 3
  %45 = load i8, i8* %44, align 8
  %46 = icmp ult i8 %43, %45
  br label %47

47:                                               ; preds = %39, %41, %32, %24, %16, %8
  %48 = phi i1 [ %9, %8 ], [ %17, %16 ], [ %25, %24 ], [ %33, %32 ], [ %40, %39 ], [ %46, %41 ]
  ret i1 %48
}

declare void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONArray"*) local_unnamed_addr #4

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext) local_unnamed_addr #4

declare void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONObject"*) local_unnamed_addr #4

declare void @_ZN5blink9JSONArray9PushArrayENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONArray"*) local_unnamed_addr #4

declare void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26RasterInvalidationTracking19AddToLayerDebugInfoERN2cc14LayerDebugInfoE(%"class.blink::RasterInvalidationTracking"* nocapture readonly, %"struct.cc::LayerDebugInfo"* dereferenceable(104)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.cc::LayerDebugInfo::Invalidation", align 8
  %4 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %3 to i8*
  %13 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %3 to i64*
  %14 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %"class.gfx::Size"* %14 to i64*
  %16 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5
  %21 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %22 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %18 to i64*
  %23 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %27

26:                                               ; preds = %82, %2
  ret void

27:                                               ; preds = %11, %82
  %28 = phi %"struct.blink::RasterInvalidationInfo"* [ %5, %11 ], [ %83, %82 ]
  %29 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 2, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %82, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 2, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %82, label %36

36:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #16
  %37 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 2, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 2, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %38, 0
  %42 = sub nuw nsw i32 2147483647, %38
  %43 = icmp ult i32 %42, %30
  %44 = and i1 %43, %41
  %45 = select i1 %44, i32 %42, i32 %30
  %46 = icmp sgt i32 %40, 0
  %47 = sub nuw nsw i32 2147483647, %40
  %48 = icmp ult i32 %47, %34
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %34
  %51 = icmp sgt i32 %45, 0
  %52 = select i1 %51, i32 %45, i32 0
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %53, i32 %50, i32 0
  %55 = zext i32 %40 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %38 to i64
  %58 = or i64 %56, %57
  %59 = zext i32 %54 to i64
  %60 = shl nuw nsw i64 %59, 32
  %61 = zext i32 %52 to i64
  %62 = or i64 %60, %61
  store i64 %58, i64* %13, align 8
  store i64 %62, i64* %15, align 8
  %63 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 3
  %64 = load i8, i8* %63, align 8
  %65 = call i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext %64) #16
  store i8* %65, i8** %16, align 8
  %66 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret %17, %"class.WTF::String"* %66, i32 0) #16
  %67 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %18, align 8
  %68 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %19, align 8
  %69 = icmp ult %"struct.cc::LayerDebugInfo::Invalidation"* %67, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %36
  %71 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %12, i64 24, i1 false) #16
  %72 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %67, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %21, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #16
  %74 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %67, i64 1
  %75 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %74 to i64
  store i64 %75, i64* %22, align 8
  br label %81

76:                                               ; preds = %36
  call void @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.58"* %20, %"struct.cc::LayerDebugInfo::Invalidation"* nonnull dereferenceable(48) %3) #16
  %77 = load i8, i8* %24, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %70, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #16
  br label %82

82:                                               ; preds = %27, %32, %81
  %83 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %28, i64 1
  %84 = icmp eq %"struct.blink::RasterInvalidationInfo"* %83, %9
  br i1 %84, label %26, label %27
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26RasterInvalidationTracking23CheckUnderInvalidationsERKN3WTF6StringE5sk_spIN2cc13PaintOpBufferEERKNS_7IntRectE(%"class.blink::RasterInvalidationTracking"*, %"class.WTF::String"* dereferenceable(8), %class.sk_sp*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %5 = alloca %struct.SkSamplingOptions, align 4
  %6 = alloca <4 x i32>, align 16
  %7 = bitcast <4 x i32>* %6 to { i64, i64 }*
  %8 = alloca %"class.blink::Region", align 8
  %9 = alloca %"class.blink::Region", align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %struct.SkImageInfo, align 16
  %12 = alloca %"class.cc::SkiaPaintCanvas", align 8
  %13 = alloca %class.sk_sp.93, align 8
  %14 = alloca %class.SkBitmap, align 8
  %15 = alloca %struct.SkImageInfo, align 16
  %16 = alloca %"class.cc::SkiaPaintCanvas", align 8
  %17 = alloca %class.sk_sp.93, align 8
  %18 = alloca %"class.blink::IntPoint", align 4
  %19 = alloca %"struct.blink::RasterUnderInvalidation", align 4
  %20 = alloca %"class.logging::LogMessage", align 8
  %21 = alloca %"class.logging::LogMessage", align 8
  %22 = alloca %"class.cc::PaintRecorder", align 8
  %23 = alloca { <2 x float>, <2 x float> }, align 8
  %24 = bitcast { <2 x float>, <2 x float> }* %23 to %struct.SkRect*
  %25 = alloca %class.sk_sp.93, align 8
  %26 = alloca %"class.cc::PaintImage", align 8
  %27 = alloca %class.SkBitmap, align 8
  %28 = alloca %class.sk_sp, align 8
  %29 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::IntRect"* %29 to i8*
  %31 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 8
  %34 = bitcast %"class.blink::Region"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %34) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 304, i1 false)
  call void @_ZN5blink6RegionC1Ev(%"class.blink::Region"* nonnull %8) #16
  %35 = load i8, i8* @_ZN5blinkL37g_simulate_raster_under_invalidationsE, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3
  %39 = bitcast %"class.blink::Region"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %39, i64 16, i1 false) #16
  %40 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3, i32 1, i32 0
  %42 = call dereferenceable(144) %"class.WTF::Vector.7"* @_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.7"* %40, %"class.WTF::Vector.7"* dereferenceable(144) %41) #16
  %43 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1
  %44 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3, i32 1, i32 1
  %45 = call dereferenceable(144) %"class.WTF::Vector.12"* @_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.12"* %43, %"class.WTF::Vector.12"* dereferenceable(144) %44) #16
  br label %46

46:                                               ; preds = %4, %37
  %47 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %47, i64 0, i32 0
  %49 = bitcast %class.sk_sp* %47 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %48, align 8
  %51 = icmp eq %class.sk_sp* %47, %2
  br i1 %51, label %72, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %54 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %53, align 8
  %55 = icmp eq %"class.cc::PaintOpBuffer"* %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  store %"class.cc::PaintOpBuffer"* %54, %"class.cc::PaintOpBuffer"** %48, align 8
  br label %72

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  %60 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %48, align 8
  %61 = bitcast %"class.cc::PaintOpBuffer"* %60 to %class.SkRefCntBase*
  store %"class.cc::PaintOpBuffer"* %54, %"class.cc::PaintOpBuffer"** %48, align 8
  %62 = icmp eq %"class.cc::PaintOpBuffer"* %60, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = bitcast %"class.cc::PaintOpBuffer"* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %61) #16
  br label %72

72:                                               ; preds = %56, %46, %57, %63, %67
  %73 = bitcast %"class.blink::IntRect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %73, i64 16, i1 false)
  %74 = bitcast %"class.blink::Region"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %74) #16
  call void @_ZN5blink6RegionC1Ev(%"class.blink::Region"* nonnull %9) #16
  %75 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3
  %76 = bitcast %"class.blink::Region"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %74, i64 16, i1 false) #16
  %77 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.8"* %77, %"class.WTF::VectorBuffer.8"* dereferenceable(144) %78, i64 0, i64 0) #16
  %79 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %80 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.13"* %79, %"class.WTF::VectorBuffer.13"* dereferenceable(144) %80, i64 0, i64 0) #16
  %81 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1
  %82 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1
  %83 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %72
  store i32 0, i32* %83, align 4
  br label %87

87:                                               ; preds = %86, %72
  %88 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %82, i64 0, i32 0, i32 0, i32 0
  %89 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %91 = bitcast i8* %90 to %"struct.blink::Region::Span"*
  %92 = icmp eq %"struct.blink::Region::Span"* %89, %91
  br i1 %92, label %95, label %93, !prof !4

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %82, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %94, %"struct.blink::Region::Span"* %89) #16
  br label %95

95:                                               ; preds = %93, %87
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %88, align 8
  %96 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !3

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  %101 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %9, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %104 = bitcast i8* %103 to i32*
  %105 = icmp eq i32* %102, %104
  br i1 %105, label %108, label %106, !prof !4

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %81, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %107, i32* %102) #16
  br label %108

108:                                              ; preds = %100, %106
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %74) #16
  %109 = icmp eq i64 %50, 0
  br i1 %109, label %496, label %110

110:                                              ; preds = %108
  %111 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111)
  %112 = bitcast <4 x i32>* %6 to %"class.blink::IntRect"*
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store <4 x i32> %33, <4 x i32>* %6, align 16
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %112, %"class.blink::IntRect"* dereferenceable(16) %3) #16
  %114 = bitcast <4 x i32>* %6 to i64*
  %115 = load i64, i64* %114, align 16
  %116 = load i64, i64* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111)
  %117 = trunc i64 %115 to i32
  %118 = lshr i64 %115, 32
  %119 = trunc i64 %118 to i32
  %120 = trunc i64 %116 to i32
  %121 = icmp slt i32 %120, 1
  br i1 %121, label %485, label %122

122:                                              ; preds = %110
  %123 = lshr i64 %116, 32
  %124 = trunc i64 %123 to i32
  %125 = icmp slt i32 %124, 1
  br i1 %125, label %485, label %126

126:                                              ; preds = %122
  %127 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %127) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #16
  %128 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #16
  %129 = bitcast %struct.SkImageInfo* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %129, align 16, !alias.scope !5
  %130 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %131 = bitcast %struct.SkISize* %130 to i64*
  store i64 %116, i64* %131, align 16, !alias.scope !5
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %10, %struct.SkImageInfo* nonnull dereferenceable(24) %11) #16
  %132 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %133 = load %class.SkColorSpace*, %class.SkColorSpace** %132, align 16
  %134 = icmp eq %class.SkColorSpace* %133, null
  br i1 %134, label %141, label %135

135:                                              ; preds = %126
  %136 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = bitcast %class.SkColorSpace* %133 to i8*
  call void @_ZdlPv(i8* %140) #18
  br label %141

141:                                              ; preds = %139, %135, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #16
  %142 = bitcast %"class.cc::SkiaPaintCanvas"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %142) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 120, i1 false)
  call void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"* nonnull %12, %class.SkBitmap* nonnull dereferenceable(56) %10, %"class.cc::ImageProvider"* null) #16
  call void @_ZN2cc15SkiaPaintCanvas5clearEj(%"class.cc::SkiaPaintCanvas"* nonnull %12, i32 0) #16
  %143 = sub nsw i32 0, %117
  %144 = sitofp i32 %143 to float
  %145 = sub nsw i32 0, %119
  %146 = sitofp i32 %145 to float
  call void @_ZN2cc15SkiaPaintCanvas9translateEff(%"class.cc::SkiaPaintCanvas"* nonnull %12, float %144, float %146) #16
  %147 = bitcast %class.sk_sp.93* %13 to i64*
  store i64 %50, i64* %147, align 8
  call void @_ZN2cc15SkiaPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::SkiaPaintCanvas"* nonnull %12, %class.sk_sp.93* nonnull %13) #16
  %148 = getelementptr inbounds %class.sk_sp.93, %class.sk_sp.93* %13, i64 0, i32 0
  %149 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %148, align 8
  %150 = icmp eq %"class.cc::PaintOpBuffer"* %149, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %149, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = bitcast %"class.cc::PaintOpBuffer"* %149 to %class.SkRefCntBase*
  %157 = bitcast %"class.cc::PaintOpBuffer"* %149 to void (%class.SkRefCntBase*)***
  %158 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %157, align 8
  %159 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %158, i64 2
  %160 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %159, align 8
  call void %160(%class.SkRefCntBase* nonnull %156) #16
  br label %161

161:                                              ; preds = %141, %151, %155
  call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %142) #16
  %162 = bitcast %class.SkBitmap* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %162) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %14) #16
  %163 = bitcast %struct.SkImageInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #16
  %164 = bitcast %struct.SkImageInfo* %15 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %164, align 16, !alias.scope !10
  %165 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 1
  %166 = bitcast %struct.SkISize* %165 to i64*
  store i64 %116, i64* %166, align 16, !alias.scope !10
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %14, %struct.SkImageInfo* nonnull dereferenceable(24) %15) #16
  %167 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 0, i32 0, i32 0
  %168 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 16
  %169 = icmp eq %class.SkColorSpace* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %161
  %171 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw add i32* %171, i32 -1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = bitcast %class.SkColorSpace* %168 to i8*
  call void @_ZdlPv(i8* %175) #18
  br label %176

176:                                              ; preds = %174, %170, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #16
  %177 = bitcast %"class.cc::SkiaPaintCanvas"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %177) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 120, i1 false)
  call void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"* nonnull %16, %class.SkBitmap* nonnull dereferenceable(56) %14, %"class.cc::ImageProvider"* null) #16
  call void @_ZN2cc15SkiaPaintCanvas5clearEj(%"class.cc::SkiaPaintCanvas"* nonnull %16, i32 0) #16
  call void @_ZN2cc15SkiaPaintCanvas9translateEff(%"class.cc::SkiaPaintCanvas"* nonnull %16, float %144, float %146) #16
  %178 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %179 = bitcast %class.sk_sp* %2 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %178, align 8
  %181 = bitcast %class.sk_sp.93* %17 to i64*
  store i64 %180, i64* %181, align 8
  call void @_ZN2cc15SkiaPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::SkiaPaintCanvas"* nonnull %16, %class.sk_sp.93* nonnull %17) #16
  %182 = getelementptr inbounds %class.sk_sp.93, %class.sk_sp.93* %17, i64 0, i32 0
  %183 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %182, align 8
  %184 = icmp eq %"class.cc::PaintOpBuffer"* %183, null
  br i1 %184, label %195, label %185

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %183, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw add i32* %186, i32 -1 acq_rel
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %195

189:                                              ; preds = %185
  %190 = bitcast %"class.cc::PaintOpBuffer"* %183 to %class.SkRefCntBase*
  %191 = bitcast %"class.cc::PaintOpBuffer"* %183 to void (%class.SkRefCntBase*)***
  %192 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %191, align 8
  %193 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %192, i64 2
  %194 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %193, align 8
  call void %194(%class.SkRefCntBase* nonnull %190) #16
  br label %195

195:                                              ; preds = %189, %185, %176
  call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %177) #16
  %196 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %14, i64 0, i32 1
  %197 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %196, i64 0, i32 0
  %198 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %14, i64 0, i32 1, i32 2
  %199 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %14, i64 0, i32 1, i32 1
  %200 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1
  %201 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %200, i64 0, i32 0
  %202 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 2
  %203 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 1
  %204 = bitcast %"class.blink::IntPoint"* %18 to i8*
  %205 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %18, i64 0, i32 0
  %206 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %18, i64 0, i32 1
  %207 = bitcast %"class.logging::LogMessage"* %21 to i8*
  %208 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %21, i64 0, i32 2
  %209 = bitcast %"class.std::__1::basic_ostringstream"* %208 to %"class.std::__1::basic_ostream"*
  %210 = bitcast %"struct.blink::RasterUnderInvalidation"* %19 to i8*
  %211 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %19, i64 0, i32 0
  %212 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %19, i64 0, i32 1
  %213 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %19, i64 0, i32 2
  %214 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %19, i64 0, i32 3
  %215 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 4
  %216 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %217 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %218 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %215, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.logging::LogMessage"* %20 to i8*
  %220 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %20, i64 0, i32 2
  %221 = bitcast %"class.std::__1::basic_ostringstream"* %220 to %"class.std::__1::basic_ostream"*
  %222 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %14, i64 0, i32 1, i32 0
  %223 = and i64 %116, 4294967295
  br label %226

224:                                              ; preds = %395
  %225 = icmp eq i32 %396, 0
  br i1 %225, label %484, label %399

226:                                              ; preds = %395, %195
  %227 = phi i64 [ 0, %195 ], [ %397, %395 ]
  %228 = phi i32 [ 0, %195 ], [ %396, %395 ]
  %229 = load i8*, i8** %197, align 8
  %230 = load i64, i64* %199, align 8
  %231 = trunc i64 %227 to i32
  %232 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %198, i32 0, i32 %231, i64 %230) #16
  %233 = getelementptr inbounds i8, i8* %229, i64 %232
  %234 = load i8*, i8** %201, align 8
  %235 = load i64, i64* %203, align 8
  %236 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %202, i32 0, i32 %231, i64 %235) #16
  %237 = getelementptr inbounds i8, i8* %234, i64 %236
  %238 = load i64, i64* %199, align 8
  %239 = call i32 @bcmp(i8* %237, i8* %233, i64 %238)
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %226
  call void @llvm.memset.p0i8.i64(i8* align 1 %233, i8 0, i64 %238, i1 false)
  br label %395

242:                                              ; preds = %226
  %243 = add nsw i32 %231, %119
  br label %244

244:                                              ; preds = %382, %242
  %245 = phi i64 [ 0, %242 ], [ %393, %382 ]
  %246 = phi i32 [ %228, %242 ], [ %384, %382 ]
  %247 = add i64 %245, %115
  %248 = trunc i64 %245 to i32
  %249 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %200, i32 %248, i32 %231) #16
  %250 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %196, i32 %248, i32 %231) #16
  %251 = insertelement <2 x i32> undef, i32 %250, i32 0
  %252 = insertelement <2 x i32> %251, i32 %249, i32 1
  %253 = lshr <2 x i32> %252, <i32 24, i32 24>
  %254 = shufflevector <2 x i32> %253, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %255 = icmp eq <4 x i32> %254, <i32 255, i32 0, i32 255, i32 0>
  %256 = shufflevector <4 x i1> %255, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %257 = or <4 x i1> %255, %256
  %258 = shufflevector <4 x i1> %257, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %259 = or <4 x i1> %257, %258
  %260 = extractelement <4 x i1> %259, i32 0
  %261 = extractelement <2 x i32> %253, i32 0
  %262 = extractelement <2 x i32> %253, i32 1
  br i1 %260, label %263, label %265

263:                                              ; preds = %244
  %264 = icmp eq i32 %262, %261
  br i1 %264, label %271, label %324

265:                                              ; preds = %244
  %266 = sub nsw i32 %262, %261
  %267 = icmp slt i32 %266, 0
  %268 = sub nsw i32 0, %266
  %269 = select i1 %267, i32 %268, i32 %266
  %270 = icmp sgt i32 %269, 2
  br i1 %270, label %324, label %271

271:                                              ; preds = %265, %263
  %272 = lshr <2 x i32> %252, <i32 16, i32 16>
  %273 = and <2 x i32> %272, <i32 255, i32 255>
  %274 = shufflevector <2 x i32> %273, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %275 = icmp eq <4 x i32> %274, <i32 255, i32 0, i32 255, i32 0>
  %276 = shufflevector <4 x i1> %275, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %277 = or <4 x i1> %275, %276
  %278 = shufflevector <4 x i1> %277, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %279 = or <4 x i1> %277, %278
  %280 = extractelement <4 x i1> %279, i32 0
  %281 = extractelement <2 x i32> %273, i32 0
  %282 = extractelement <2 x i32> %273, i32 1
  br i1 %280, label %283, label %285

283:                                              ; preds = %271
  %284 = icmp eq i32 %282, %281
  br i1 %284, label %291, label %324

285:                                              ; preds = %271
  %286 = sub nsw i32 %282, %281
  %287 = icmp slt i32 %286, 0
  %288 = sub nsw i32 0, %286
  %289 = select i1 %287, i32 %288, i32 %286
  %290 = icmp sgt i32 %289, 2
  br i1 %290, label %324, label %291

291:                                              ; preds = %285, %283
  %292 = lshr <2 x i32> %252, <i32 8, i32 8>
  %293 = and <2 x i32> %292, <i32 255, i32 255>
  %294 = shufflevector <2 x i32> %293, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %295 = icmp eq <4 x i32> %294, <i32 255, i32 0, i32 255, i32 0>
  %296 = shufflevector <4 x i1> %295, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %297 = or <4 x i1> %295, %296
  %298 = shufflevector <4 x i1> %297, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %299 = or <4 x i1> %297, %298
  %300 = extractelement <4 x i1> %299, i32 0
  %301 = extractelement <2 x i32> %293, i32 0
  %302 = extractelement <2 x i32> %293, i32 1
  br i1 %300, label %303, label %305

303:                                              ; preds = %291
  %304 = icmp eq i32 %302, %301
  br i1 %304, label %311, label %324

305:                                              ; preds = %291
  %306 = sub nsw i32 %302, %301
  %307 = icmp slt i32 %306, 0
  %308 = sub nsw i32 0, %306
  %309 = select i1 %307, i32 %308, i32 %306
  %310 = icmp sgt i32 %309, 2
  br i1 %310, label %324, label %311

311:                                              ; preds = %305, %303
  %312 = and <2 x i32> %252, <i32 255, i32 255>
  %313 = shufflevector <2 x i32> %312, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %314 = icmp eq <4 x i32> %313, <i32 255, i32 0, i32 255, i32 0>
  %315 = shufflevector <4 x i1> %314, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %316 = or <4 x i1> %314, %315
  %317 = shufflevector <4 x i1> %316, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %318 = or <4 x i1> %316, %317
  %319 = extractelement <4 x i1> %318, i32 0
  %320 = extractelement <2 x i32> %312, i32 0
  %321 = extractelement <2 x i32> %312, i32 1
  br i1 %319, label %322, label %325

322:                                              ; preds = %311
  %323 = icmp eq i32 %321, %320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #16
  br i1 %323, label %381, label %331

324:                                              ; preds = %305, %285, %265, %263, %283, %303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #16
  br label %331

325:                                              ; preds = %311
  %326 = sub nsw i32 %321, %320
  %327 = icmp slt i32 %326, 0
  %328 = sub nsw i32 0, %326
  %329 = select i1 %327, i32 %328, i32 %326
  %330 = icmp sgt i32 %329, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #16
  br i1 %330, label %331, label %381

331:                                              ; preds = %322, %324, %325
  %332 = trunc i64 %247 to i32
  store i32 %332, i32* %205, align 4
  store i32 %243, i32* %206, align 4
  %333 = call zeroext i1 @_ZNK5blink6Region8ContainsERKNS_8IntPointE(%"class.blink::Region"* nonnull %8, %"class.blink::IntPoint"* nonnull dereferenceable(8) %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #16
  br i1 %333, label %382, label %334

334:                                              ; preds = %331
  %335 = icmp slt i32 %246, 50
  br i1 %335, label %336, label %373

336:                                              ; preds = %334
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #16
  store i32 %332, i32* %211, align 4
  store i32 %243, i32* %212, align 4
  store i32 %249, i32* %213, align 4
  store i32 %250, i32* %214, align 4
  %337 = load i32, i32* %216, align 4
  %338 = load i32, i32* %217, align 8
  %339 = icmp eq i32 %337, %338
  br i1 %339, label %347, label %340, !prof !3

340:                                              ; preds = %336
  %341 = load %"struct.blink::RasterUnderInvalidation"*, %"struct.blink::RasterUnderInvalidation"** %218, align 8
  %342 = zext i32 %337 to i64
  %343 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %341, i64 %342
  %344 = bitcast %"struct.blink::RasterUnderInvalidation"* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* nonnull align 4 %210, i64 16, i1 false) #16
  %345 = load i32, i32* %216, align 4
  %346 = add i32 %345, 1
  store i32 %346, i32* %216, align 4
  br label %348

347:                                              ; preds = %336
  call void @_ZN3WTF6VectorIN5blink23RasterUnderInvalidationELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.17"* %215, %"struct.blink::RasterUnderInvalidation"* nonnull dereferenceable(16) %19) #16
  br label %348

348:                                              ; preds = %340, %347
  %349 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %349, label %350, label %372

350:                                              ; preds = %348
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %219) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %20, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.9, i64 0, i64 0), i32 219, i32 2) #16
  %351 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %221, %"class.WTF::String"* dereferenceable(8) %1) #16
  %352 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %351, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #16
  %353 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %352, i32 %332) #16
  %354 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %353, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #16
  %355 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %354, i32 %243) #16
  %356 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %355, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5) #16
  %357 = bitcast %"class.std::__1::basic_ostream"* %356 to i8**
  %358 = load i8*, i8** %357, align 8
  %359 = getelementptr i8, i8* %358, i64 -24
  %360 = bitcast i8* %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %356, i64 0, i32 1
  %363 = bitcast %"class.std::__1::basic_ios.base"* %362 to i8*
  %364 = getelementptr inbounds i8, i8* %363, i64 %361
  %365 = bitcast i8* %364 to i32*
  %366 = load i32, i32* %365, align 8
  %367 = and i32 %366, -75
  %368 = or i32 %367, 8
  store i32 %368, i32* %365, align 8
  %369 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %356, i32 %249) #16
  %370 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %369, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #16
  %371 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %370, i32 %250) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %219) #16
  br label %372

372:                                              ; preds = %348, %350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #16
  br label %379

373:                                              ; preds = %334
  %374 = icmp eq i32 %246, 50
  br i1 %374, label %375, label %379

375:                                              ; preds = %373
  %376 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %376, label %377, label %379

377:                                              ; preds = %375
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %207) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %21, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.9, i64 0, i64 0), i32 224, i32 2) #16
  %378 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i64 11) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %207) #16
  br label %379

379:                                              ; preds = %377, %375, %373, %372
  %380 = add nsw i32 %246, 1
  br label %382

381:                                              ; preds = %322, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #16
  br label %382

382:                                              ; preds = %381, %331, %379
  %383 = phi i32 [ -6291456, %379 ], [ 0, %331 ], [ 0, %381 ]
  %384 = phi i32 [ %380, %379 ], [ %246, %331 ], [ %246, %381 ]
  %385 = load i8*, i8** %222, align 8
  %386 = load i64, i64* %199, align 8
  %387 = mul i64 %386, %227
  %388 = getelementptr inbounds i8, i8* %385, i64 %387
  %389 = shl i32 %248, 2
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i8, i8* %388, i64 %390
  %392 = bitcast i8* %391 to i32*
  store i32 %383, i32* %392, align 4
  %393 = add nuw nsw i64 %245, 1
  %394 = icmp eq i64 %393, %223
  br i1 %394, label %395, label %244

395:                                              ; preds = %382, %241
  %396 = phi i32 [ %228, %241 ], [ %384, %382 ]
  %397 = add nuw nsw i64 %227, 1
  %398 = icmp eq i64 %397, %123
  br i1 %398, label %224, label %226

399:                                              ; preds = %224
  %400 = bitcast %"class.cc::PaintRecorder"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %400) #16
  %401 = getelementptr inbounds %"class.cc::PaintRecorder", %"class.cc::PaintRecorder"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %402 = bitcast %"class.cc::PaintRecorder"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 -86, i64 24, i1 false)
  call void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"* nonnull %22) #16
  %403 = bitcast { <2 x float>, <2 x float> }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %403) #16
  %404 = sitofp i32 %117 to float
  %405 = sitofp i32 %119 to float
  %406 = add nsw i32 %120, %117
  %407 = sitofp i32 %406 to float
  %408 = add nsw i32 %124, %119
  %409 = sitofp i32 %408 to float
  %410 = insertelement <2 x float> undef, float %404, i32 0
  %411 = insertelement <2 x float> %410, float %405, i32 1
  %412 = insertelement <2 x float> undef, float %407, i32 0
  %413 = insertelement <2 x float> %412, float %409, i32 1
  %414 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %23, i64 0, i32 0
  store <2 x float> %411, <2 x float>* %414, align 8
  %415 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %23, i64 0, i32 1
  store <2 x float> %413, <2 x float>* %415, align 8
  %416 = call %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"* nonnull %22, %struct.SkRect* nonnull dereferenceable(16) %24) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %403) #16
  %417 = load %"class.cc::RecordPaintCanvas"*, %"class.cc::RecordPaintCanvas"** %401, align 8
  %418 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %0, i64 0, i32 5
  %419 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %418, i64 0, i32 0
  %420 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %419, align 8
  %421 = icmp eq %"class.cc::PaintOpBuffer"* %420, null
  br i1 %421, label %422, label %424

422:                                              ; preds = %399
  %423 = bitcast %class.sk_sp* %418 to i64*
  br label %445

424:                                              ; preds = %399
  %425 = ptrtoint %"class.cc::PaintOpBuffer"* %420 to i64
  %426 = bitcast %class.sk_sp* %418 to i64*
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %419, align 8
  %427 = bitcast %class.sk_sp.93* %25 to i64*
  store i64 %425, i64* %427, align 8
  %428 = bitcast %"class.cc::RecordPaintCanvas"* %417 to void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)***
  %429 = load void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)**, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)*** %428, align 8
  %430 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)*, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)** %429, i64 40
  %431 = load void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)*, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.93*)** %430, align 8
  call void %431(%"class.cc::RecordPaintCanvas"* %417, %class.sk_sp.93* nonnull %25) #16
  %432 = getelementptr inbounds %class.sk_sp.93, %class.sk_sp.93* %25, i64 0, i32 0
  %433 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %432, align 8
  %434 = icmp eq %"class.cc::PaintOpBuffer"* %433, null
  br i1 %434, label %445, label %435

435:                                              ; preds = %424
  %436 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %433, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = atomicrmw add i32* %436, i32 -1 acq_rel
  %438 = icmp eq i32 %437, 1
  br i1 %438, label %439, label %445

439:                                              ; preds = %435
  %440 = bitcast %"class.cc::PaintOpBuffer"* %433 to %class.SkRefCntBase*
  %441 = bitcast %"class.cc::PaintOpBuffer"* %433 to void (%class.SkRefCntBase*)***
  %442 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %441, align 8
  %443 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %442, i64 2
  %444 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %443, align 8
  call void %444(%class.SkRefCntBase* nonnull %440) #16
  br label %445

445:                                              ; preds = %422, %439, %435, %424
  %446 = phi i64* [ %423, %422 ], [ %426, %439 ], [ %426, %435 ], [ %426, %424 ]
  %447 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %417, i64 0, i32 0
  %448 = bitcast %"class.cc::PaintImage"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %448) #16
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* nonnull %27, %class.SkBitmap* nonnull dereferenceable(56) %14) #16
  call void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* nonnull sret %26, %class.SkBitmap* nonnull %27) #16
  %449 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %449) #16
  %450 = bitcast %"class.cc::RecordPaintCanvas"* %417 to void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %449, i8 0, i64 20, i1 false) #16
  %451 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*** %450, align 8
  %452 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)** %451, i64 35
  %453 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)** %452, align 8
  call void %453(%"class.cc::PaintCanvas"* %447, %"class.cc::PaintImage"* nonnull dereferenceable(104) %26, float %404, float %405, %struct.SkSamplingOptions* nonnull dereferenceable(20) %5, %"class.cc::PaintFlags"* null) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %449) #16
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %26) #16
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %448) #16
  %454 = bitcast %class.sk_sp* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #16
  call void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp* nonnull sret %28, %"class.cc::PaintRecorder"* nonnull %22) #16
  %455 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %28, i64 0, i32 0
  %456 = bitcast %class.sk_sp* %28 to i64*
  %457 = load i64, i64* %456, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %455, align 8
  %458 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %419, align 8
  store i64 %457, i64* %446, align 8
  %459 = icmp eq %"class.cc::PaintOpBuffer"* %458, null
  br i1 %459, label %483, label %460

460:                                              ; preds = %445
  %461 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %458, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = atomicrmw add i32* %461, i32 -1 acq_rel
  %463 = icmp eq i32 %462, 1
  br i1 %463, label %464, label %470

464:                                              ; preds = %460
  %465 = bitcast %"class.cc::PaintOpBuffer"* %458 to %class.SkRefCntBase*
  %466 = bitcast %"class.cc::PaintOpBuffer"* %458 to void (%class.SkRefCntBase*)***
  %467 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %466, align 8
  %468 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %467, i64 2
  %469 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %468, align 8
  call void %469(%class.SkRefCntBase* nonnull %465) #16
  br label %470

470:                                              ; preds = %460, %464
  %471 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %455, align 8
  %472 = icmp eq %"class.cc::PaintOpBuffer"* %471, null
  br i1 %472, label %483, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %471, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = atomicrmw add i32* %474, i32 -1 acq_rel
  %476 = icmp eq i32 %475, 1
  br i1 %476, label %477, label %483

477:                                              ; preds = %473
  %478 = bitcast %"class.cc::PaintOpBuffer"* %471 to %class.SkRefCntBase*
  %479 = bitcast %"class.cc::PaintOpBuffer"* %471 to void (%class.SkRefCntBase*)***
  %480 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %479, align 8
  %481 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %480, i64 2
  %482 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %481, align 8
  call void %482(%class.SkRefCntBase* nonnull %478) #16
  br label %483

483:                                              ; preds = %445, %470, %473, %477
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #16
  call void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %400) #16
  br label %484

484:                                              ; preds = %483, %224
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %162) #16
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %127) #16
  br label %496

485:                                              ; preds = %122, %110
  %486 = inttoptr i64 %50 to %"class.cc::PaintOpBuffer"*
  %487 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %486, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = atomicrmw add i32* %487, i32 -1 acq_rel
  %489 = icmp eq i32 %488, 1
  br i1 %489, label %490, label %496

490:                                              ; preds = %485
  %491 = inttoptr i64 %50 to %class.SkRefCntBase*
  %492 = inttoptr i64 %50 to void (%class.SkRefCntBase*)***
  %493 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %492, align 8
  %494 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %493, i64 2
  %495 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %494, align 8
  call void %495(%class.SkRefCntBase* nonnull %491) #16
  br label %496

496:                                              ; preds = %108, %484, %485, %490
  %497 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1
  %498 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1
  %499 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %500 = load i32, i32* %499, align 4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %503, label %502, !prof !3

502:                                              ; preds = %496
  store i32 0, i32* %499, align 4
  br label %503

503:                                              ; preds = %502, %496
  %504 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %498, i64 0, i32 0, i32 0, i32 0
  %505 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %504, align 8
  %506 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %507 = bitcast i8* %506 to %"struct.blink::Region::Span"*
  %508 = icmp eq %"struct.blink::Region::Span"* %505, %507
  br i1 %508, label %511, label %509, !prof !4

509:                                              ; preds = %503
  %510 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %498, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %510, %"struct.blink::Region::Span"* %505) #16
  br label %511

511:                                              ; preds = %509, %503
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %504, align 8
  %512 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %513 = load i32, i32* %512, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %516, label %515, !prof !3

515:                                              ; preds = %511
  store i32 0, i32* %512, align 4
  br label %516

516:                                              ; preds = %515, %511
  %517 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %497, i64 0, i32 0, i32 0, i32 0, i32 0
  %518 = load i32*, i32** %517, align 8
  %519 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %520 = bitcast i8* %519 to i32*
  %521 = icmp eq i32* %518, %520
  br i1 %521, label %524, label %522, !prof !4

522:                                              ; preds = %516
  %523 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %497, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %523, i32* %518) #16
  br label %524

524:                                              ; preds = %516, %522
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %34) #16
  ret void
}

declare void @_ZN5blink6RegionC1Ev(%"class.blink::Region"*) unnamed_addr #4

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"*, %class.SkBitmap* dereferenceable(56), %"class.cc::ImageProvider"*) unnamed_addr #4

declare void @_ZN2cc15SkiaPaintCanvas5clearEj(%"class.cc::SkiaPaintCanvas"*, i32) unnamed_addr #4

declare void @_ZN2cc15SkiaPaintCanvas9translateEff(%"class.cc::SkiaPaintCanvas"*, float, float) unnamed_addr #4

declare void @_ZN2cc15SkiaPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::SkiaPaintCanvas"*, %class.sk_sp.93*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink6Region8ContainsERKNS_8IntPointE(%"class.blink::Region"*, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

declare void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #4

declare %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* sret, %class.SkBitmap*) local_unnamed_addr #4

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

declare void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp* sret, %"class.cc::PaintRecorder"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"*, %"struct.blink::Region::Span"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"struct.blink::Region::Span"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare i32 @_ZN3WTF15CodeUnitCompareERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.WTF::Vector.7"* @_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.7"*, %"class.WTF::Vector.7"* dereferenceable(144)) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.7"* %1, %0
  br i1 %3, label %86, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %56

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 1, i64 0
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  store i32 32, i32* %12, align 8
  %26 = bitcast i8* %23 to i32*
  %27 = icmp eq i32* %22, %26
  br i1 %27, label %31, label %28, !prof !4

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %29, i32* %22) #16
  %30 = load i32, i32* %12, align 8
  br label %31

31:                                               ; preds = %15, %20, %28
  %32 = phi i32 [ 0, %15 ], [ 32, %20 ], [ %30, %28 ]
  %33 = load i32, i32* %7, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %56, !prof !4

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = icmp ugt i32 %33, 32
  br i1 %40, label %41, label %49

41:                                               ; preds = %39
  %42 = zext i32 %33 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %42) #16
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #16
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 2
  %48 = trunc i64 %47 to i32
  br label %53

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 1, i64 0
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  br label %53

53:                                               ; preds = %49, %41
  %54 = phi i32 [ 32, %49 ], [ %48, %41 ]
  store i32 %54, i32* %12, align 8
  br label %56

55:                                               ; preds = %35
  tail call void @_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.7"* %0, i32 %33) #16
  br label %56

56:                                               ; preds = %55, %53, %31, %11, %10
  %57 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::Vector.7"* %1 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %5, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = shl nuw nsw i64 %61, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %59, i64 %65, i1 false) #16
  %66 = load i32*, i32** %57, align 8
  %67 = load i32, i32* %5, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32*, i32** %62, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = icmp ne i32* %71, null
  %73 = icmp ne i32* %69, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %84, !prof !4

75:                                               ; preds = %56
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %66, i64 %77
  %79 = bitcast i32* %71 to i8*
  %80 = bitcast i32* %69 to i8*
  %81 = ptrtoint i32* %78 to i64
  %82 = ptrtoint i32* %69 to i64
  %83 = sub i64 %81, %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 4 %80, i64 %83, i1 false) #16
  br label %84

84:                                               ; preds = %56, %75
  %85 = load i32, i32* %7, align 4
  store i32 %85, i32* %5, align 4
  br label %86

86:                                               ; preds = %2, %84
  ret %"class.WTF::Vector.7"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.WTF::Vector.12"* @_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.12"*, %"class.WTF::Vector.12"* dereferenceable(144)) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.12"* %1, %0
  br i1 %3, label %86, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %56

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  store i32 16, i32* %12, align 8
  %26 = bitcast i8* %23 to %"struct.blink::Region::Span"*
  %27 = icmp eq %"struct.blink::Region::Span"* %22, %26
  br i1 %27, label %31, label %28, !prof !4

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %29, %"struct.blink::Region::Span"* %22) #16
  %30 = load i32, i32* %12, align 8
  br label %31

31:                                               ; preds = %15, %20, %28
  %32 = phi i32 [ 0, %15 ], [ 16, %20 ], [ %30, %28 ]
  %33 = load i32, i32* %7, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %56, !prof !4

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %36, align 8
  %38 = icmp eq %"struct.blink::Region::Span"* %37, null
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = icmp ugt i32 %33, 16
  br i1 %40, label %41, label %49

41:                                               ; preds = %39
  %42 = zext i32 %33 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6Region4SpanEEEmm(i64 %42) #16
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6Region4SpanEEEPKcv, i64 0, i64 0)) #16
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 3
  %48 = trunc i64 %47 to i32
  br label %53

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  br label %53

53:                                               ; preds = %49, %41
  %54 = phi i32 [ 16, %49 ], [ %48, %41 ]
  store i32 %54, i32* %12, align 8
  br label %56

55:                                               ; preds = %35
  tail call void @_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.12"* %0, i32 %33) #16
  br label %56

56:                                               ; preds = %55, %53, %31, %11, %10
  %57 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::Vector.12"* %1 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %5, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = shl nuw nsw i64 %61, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %59, i64 %65, i1 false) #16
  %66 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %57, align 8
  %67 = load i32, i32* %5, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %66, i64 %68
  %70 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %62, align 8
  %71 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %70, i64 %68
  %72 = icmp ne %"struct.blink::Region::Span"* %71, null
  %73 = icmp ne %"struct.blink::Region::Span"* %69, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %84, !prof !4

75:                                               ; preds = %56
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %66, i64 %77
  %79 = bitcast %"struct.blink::Region::Span"* %71 to i8*
  %80 = bitcast %"struct.blink::Region::Span"* %69 to i8*
  %81 = ptrtoint %"struct.blink::Region::Span"* %78 to i64
  %82 = ptrtoint %"struct.blink::Region::Span"* %69 to i64
  %83 = sub i64 %81, %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 4 %80, i64 %83, i1 false) #16
  br label %84

84:                                               ; preds = %56, %75
  %85 = load i32, i32* %7, align 4
  store i32 %85, i32* %5, align 4
  br label %86

86:                                               ; preds = %2, %84
  ret %"class.WTF::Vector.12"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.7"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %19, i32* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #16
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.8"* %53, i32* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %5, align 8
  %7 = icmp eq %"struct.blink::Region::Span"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::Region::Span"*
  %10 = icmp eq %"struct.blink::Region::Span"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::Region::Span"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %19, %"struct.blink::Region::Span"* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6Region4SpanEEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6Region4SpanEEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::Region::Span"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::Region::Span"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #16
  %46 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::Region::Span"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::Region::Span"*
  %51 = icmp eq %"struct.blink::Region::Span"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.13"* %53, %"struct.blink::Region::Span"* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6Region4SpanEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.8"*, %"class.WTF::VectorBuffer.8"* dereferenceable(144), i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.8"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.8"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.8"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.8"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.8"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.8"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.8", %"class.WTF::VectorBuffer.8"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 32
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 32
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !15, !noalias !18
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !15, !noalias !18
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !18
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !18
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !15, !noalias !18
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !15, !noalias !18
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !18
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !18
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !15, !noalias !18
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !15, !noalias !18
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !18
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !18
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !15, !noalias !18
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !15, !noalias !18
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !18
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !18
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !20

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !15, !noalias !18
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !15, !noalias !18
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !18
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !18
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !15, !noalias !18
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !15, !noalias !18
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !18
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !18
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !22

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #16
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #16
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 32
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.13"*, %"class.WTF::VectorBuffer.13"* dereferenceable(144), i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"struct.blink::Region::Span"*
  %12 = icmp eq %"struct.blink::Region::Span"* %9, %11
  %13 = ptrtoint %"struct.blink::Region::Span"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"struct.blink::Region::Span"*
  %19 = icmp eq %"struct.blink::Region::Span"* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"struct.blink::Region::Span"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.13"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.13"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::Region::Span"*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 0
  %41 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi %"struct.blink::Region::Span"* [ %18, %14 ], [ %39, %32 ]
  %44 = phi %"struct.blink::Region::Span"* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi %"struct.blink::Region::Span"* [ null, %14 ], [ %9, %32 ]
  %49 = phi %"struct.blink::Region::Span"* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq %"struct.blink::Region::Span"* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi %"struct.blink::Region::Span"* [ %43, %52 ], [ null, %42 ]
  %60 = phi %"struct.blink::Region::Span"* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq %"struct.blink::Region::Span"* %48, null
  %66 = icmp ne %"struct.blink::Region::Span"* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.13"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.13"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.13"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.13"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.13", %"class.WTF::VectorBuffer.13"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne %"struct.blink::Region::Span"* %48, null
  %84 = icmp ult i32 %47, 16
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 16
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %139
  %141 = bitcast %"struct.blink::Region::Span"* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %138
  %145 = bitcast %"struct.blink::Region::Span"* %144 to i8*
  %146 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %138
  %147 = bitcast %"struct.blink::Region::Span"* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 3
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %139
  %153 = icmp ult %"struct.blink::Region::Span"* %144, %152
  %154 = icmp ult %"struct.blink::Region::Span"* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !23, !noalias !26
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !23, !noalias !26
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !26
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !26
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !23, !noalias !26
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !23, !noalias !26
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !26
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !26
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !23, !noalias !26
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !23, !noalias !26
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !26
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !26
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !23, !noalias !26
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !23, !noalias !26
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !26
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !26
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !28

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !23, !noalias !26
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !23, !noalias !26
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !26
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !26
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !23, !noalias !26
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !23, !noalias !26
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !26
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !26
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !29

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %242
  %244 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %49, i64 %242
  %245 = icmp ne %"struct.blink::Region::Span"* %244, null
  %246 = icmp ne %"struct.blink::Region::Span"* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %249
  %251 = bitcast %"struct.blink::Region::Span"* %243 to i8*
  %252 = ptrtoint %"struct.blink::Region::Span"* %250 to i64
  %253 = ptrtoint %"struct.blink::Region::Span"* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast %"struct.blink::Region::Span"* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #16
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %258
  %260 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %60, i64 %258
  %261 = icmp ne %"struct.blink::Region::Span"* %260, null
  %262 = icmp ne %"struct.blink::Region::Span"* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %265
  %267 = bitcast %"struct.blink::Region::Span"* %259 to i8*
  %268 = ptrtoint %"struct.blink::Region::Span"* %266 to i64
  %269 = ptrtoint %"struct.blink::Region::Span"* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast %"struct.blink::Region::Span"* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #16
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 16
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #4

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #4

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %6, align 8
  %8 = icmp ugt %"struct.blink::RasterInvalidationInfo"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::RasterInvalidationInfo"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::RasterInvalidationInfo"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22RasterInvalidationInfoEEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::RasterInvalidationInfo"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #16
  %36 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %1 to i64
  %39 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 40
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::RasterInvalidationInfo"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm(i64 %55) #16
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22RasterInvalidationInfoEEEPKcv, i64 0, i64 0)) #16
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 40
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::RasterInvalidationInfo"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #16
  %64 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::RasterInvalidationInfo"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::RasterInvalidationInfo"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::RasterInvalidationInfo"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %69, i64 %72
  %74 = bitcast %"struct.blink::RasterInvalidationInfo"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"struct.blink::RasterInvalidationInfo"* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %69, i64 %72, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i33
  %90 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #16
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !3

95:                                               ; preds = %86
  tail call void @llvm.trap() #16
  unreachable

96:                                               ; preds = %86
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %68, %81, %96
  %99 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %69, i64 %72, i32 2
  %100 = bitcast %"class.blink::IntRect"* %99 to i8*
  %101 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 0, i32 2
  %102 = bitcast %"class.blink::IntRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %102, i64 17, i1 false) #16
  %103 = load i32, i32* %3, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22RasterInvalidationInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %52

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %50, label %14

14:                                               ; preds = %4, %46
  %15 = phi %"struct.blink::RasterInvalidationInfo"* [ %48, %46 ], [ %6, %4 ]
  %16 = phi %"struct.blink::RasterInvalidationInfo"* [ %47, %46 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::RasterInvalidationInfo"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.blink::RasterInvalidationInfo"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %15, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::String"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %16, i64 0, i32 2
  %27 = bitcast %"class.blink::IntRect"* %26 to i8*
  %28 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %15, i64 0, i32 2
  %29 = bitcast %"class.blink::IntRect"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 17, i1 false) #16
  %30 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %15, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %45, %42, %14
  %47 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %16, i64 1
  %48 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %15, i64 1
  %49 = icmp eq %"struct.blink::RasterInvalidationInfo"* %48, %10
  br i1 %49, label %50, label %14

50:                                               ; preds = %46, %4
  %51 = bitcast %"struct.blink::RasterInvalidationInfo"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #16
  br label %113

52:                                               ; preds = %2
  %53 = zext i32 %1 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm(i64 %53) #16
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22RasterInvalidationInfoEEEPKcv, i64 0, i64 0)) #16
  %56 = udiv i64 %54, 40
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %59, i64 %62
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %52
  %66 = bitcast %"struct.blink::RasterInvalidationInfo"* %59 to i8*
  br label %108

67:                                               ; preds = %52
  %68 = bitcast i8* %55 to %"struct.blink::RasterInvalidationInfo"*
  br label %69

69:                                               ; preds = %67, %101
  %70 = phi %"struct.blink::RasterInvalidationInfo"* [ %103, %101 ], [ %59, %67 ]
  %71 = phi %"struct.blink::RasterInvalidationInfo"* [ %102, %101 ], [ %68, %67 ]
  %72 = bitcast %"struct.blink::RasterInvalidationInfo"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"struct.blink::RasterInvalidationInfo"* %71 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %71, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  %78 = bitcast %"class.WTF::String"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.WTF::String"* %75 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %81 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %71, i64 0, i32 2
  %82 = bitcast %"class.blink::IntRect"* %81 to i8*
  %83 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 0, i32 2
  %84 = bitcast %"class.blink::IntRect"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %84, i64 17, i1 false) #16
  %85 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %69
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #16
  br label %101

101:                                              ; preds = %100, %97, %69
  %102 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %71, i64 1
  %103 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %70, i64 1
  %104 = icmp eq %"struct.blink::RasterInvalidationInfo"* %103, %63
  br i1 %104, label %105, label %69

105:                                              ; preds = %101
  %106 = bitcast %"class.WTF::Vector"* %0 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %65, %105
  %109 = phi i8* [ %107, %105 ], [ %66, %65 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #16
  %110 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %57, i64* %110 monotonic, align 8
  %111 = trunc i64 %56 to i32
  %112 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %111, i32* %112, align 8
  br label %113

113:                                              ; preds = %108, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22RasterInvalidationInfoEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = alloca [17 x i8], align 8
  %5 = getelementptr inbounds [17 x i8], [17 x i8]* %4, i64 0, i64 0
  br label %6

6:                                                ; preds = %439, %3
  %7 = phi %"struct.blink::RasterInvalidationInfo"* [ %1, %3 ], [ %375, %439 ]
  %8 = phi %"struct.blink::RasterInvalidationInfo"* [ %0, %3 ], [ %22, %439 ]
  %9 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %7 to i64
  %10 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1
  %11 = bitcast %"struct.blink::RasterInvalidationInfo"* %10 to i64*
  %12 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1, i32 1
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::String"* %12 to i64*
  %15 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1, i32 2
  %16 = bitcast %"class.blink::IntRect"* %15 to i8*
  %17 = bitcast %"struct.blink::RasterInvalidationInfo"* %10 to <2 x i64>*
  %18 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %7 to i64
  br label %19

19:                                               ; preds = %450, %6
  %20 = phi %"struct.blink::RasterInvalidationInfo"* [ %8, %6 ], [ %451, %450 ]
  br label %21

21:                                               ; preds = %190, %19
  %22 = phi %"struct.blink::RasterInvalidationInfo"* [ %20, %19 ], [ %181, %190 ]
  %23 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %22 to i64
  %24 = sub i64 %9, %23
  %25 = sdiv exact i64 %24, 40
  switch i64 %25, label %95 [
    i64 0, label %454
    i64 1, label %454
    i64 2, label %26
    i64 3, label %80
    i64 4, label %84
    i64 5, label %89
  ]

26:                                               ; preds = %21
  %27 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %28 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1
  %29 = tail call zeroext i1 %27(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %28, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22) #16
  br i1 %29, label %30, label %454

30:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %31 = bitcast %"struct.blink::RasterInvalidationInfo"* %22 to i64*
  %32 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::String"* %32 to i64*
  %35 = bitcast %"struct.blink::RasterInvalidationInfo"* %22 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %37 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 0, i32 2
  %38 = bitcast %"class.blink::IntRect"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %38, i64 17, i1 false) #16
  %39 = bitcast %"struct.blink::RasterInvalidationInfo"* %28 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %31, align 8
  %41 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1, i32 1
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::String"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %44, i64* %34, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #16
  br label %60

60:                                               ; preds = %59, %56, %30
  %61 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1, i32 2
  %62 = bitcast %"class.blink::IntRect"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %62, i64 17, i1 false) #16
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %64 = bitcast %"struct.blink::RasterInvalidationInfo"* %28 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #16
  br label %79

79:                                               ; preds = %60, %75, %78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  br label %454

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 1
  %82 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %81, %"struct.blink::RasterInvalidationInfo"* %82, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %454

84:                                               ; preds = %21
  %85 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 1
  %86 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 2
  %87 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1
  %88 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %85, %"struct.blink::RasterInvalidationInfo"* %86, %"struct.blink::RasterInvalidationInfo"* %87, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %454

89:                                               ; preds = %21
  %90 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 1
  %91 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 2
  %92 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 3
  %93 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %7, i64 -1
  %94 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %90, %"struct.blink::RasterInvalidationInfo"* %91, %"struct.blink::RasterInvalidationInfo"* %92, %"struct.blink::RasterInvalidationInfo"* %93, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %454

95:                                               ; preds = %21
  %96 = icmp slt i64 %24, 280
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %7, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %454

98:                                               ; preds = %95
  %99 = icmp sgt i64 %24, 39960
  %100 = udiv i64 %24, 80
  %101 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 %100
  br i1 %99, label %102, label %107

102:                                              ; preds = %98
  %103 = udiv i64 %24, 160
  %104 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 %103
  %105 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %101, i64 %103
  %106 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %104, %"struct.blink::RasterInvalidationInfo"* %101, %"struct.blink::RasterInvalidationInfo"* %105, %"struct.blink::RasterInvalidationInfo"* %10, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %109

107:                                              ; preds = %98
  %108 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %101, %"struct.blink::RasterInvalidationInfo"* %10, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i32 [ %106, %102 ], [ %108, %107 ]
  %111 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %112 = tail call zeroext i1 %111(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %101) #16
  br i1 %112, label %296, label %113

113:                                              ; preds = %109, %242
  %114 = phi %"struct.blink::RasterInvalidationInfo"* [ %115, %242 ], [ %10, %109 ]
  %115 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %114, i64 -1
  %116 = icmp eq %"struct.blink::RasterInvalidationInfo"* %22, %115
  br i1 %116, label %117, label %242

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 1
  %119 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %120 = tail call zeroext i1 %119(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %10) #16
  br i1 %120, label %174, label %121

121:                                              ; preds = %117
  %122 = icmp eq %"struct.blink::RasterInvalidationInfo"* %118, %10
  br i1 %122, label %454, label %123

123:                                              ; preds = %121, %171
  %124 = phi %"struct.blink::RasterInvalidationInfo"* [ %172, %171 ], [ %118, %121 ]
  %125 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %126 = tail call zeroext i1 %125(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %124) #16
  br i1 %126, label %127, label %171

127:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %128 = bitcast %"struct.blink::RasterInvalidationInfo"* %124 to i64*
  %129 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %124, i64 0, i32 1
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %131 = bitcast %"class.WTF::String"* %129 to i64*
  %132 = bitcast %"struct.blink::RasterInvalidationInfo"* %124 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %130, align 8
  %134 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %124, i64 0, i32 2
  %135 = bitcast %"class.blink::IntRect"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %135, i64 17, i1 false) #16
  %136 = load i64, i64* %11, align 8
  store i64 %136, i64* %128, align 8
  %137 = load i64, i64* %14, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  store i64 %137, i64* %131, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %127
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #16
  br label %153

153:                                              ; preds = %152, %149, %127
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %16, i64 17, i1 false) #16
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store <2 x i64> %133, <2 x i64>* %17, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #16
  br label %169

169:                                              ; preds = %153, %165, %168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  %170 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %124, i64 1
  br label %174

171:                                              ; preds = %123
  %172 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %124, i64 1
  %173 = icmp eq %"struct.blink::RasterInvalidationInfo"* %172, %10
  br i1 %173, label %454, label %123

174:                                              ; preds = %169, %117
  %175 = phi %"struct.blink::RasterInvalidationInfo"* [ %118, %117 ], [ %170, %169 ]
  %176 = icmp eq %"struct.blink::RasterInvalidationInfo"* %175, %10
  br i1 %176, label %454, label %177

177:                                              ; preds = %174, %241
  %178 = phi %"struct.blink::RasterInvalidationInfo"* [ %184, %241 ], [ %175, %174 ]
  %179 = phi %"struct.blink::RasterInvalidationInfo"* [ %188, %241 ], [ %10, %174 ]
  br label %180

180:                                              ; preds = %180, %177
  %181 = phi %"struct.blink::RasterInvalidationInfo"* [ %178, %177 ], [ %184, %180 ]
  %182 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %183 = tail call zeroext i1 %182(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %181) #16
  %184 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %181, i64 1
  br i1 %183, label %185, label %180

185:                                              ; preds = %180, %185
  %186 = phi %"struct.blink::RasterInvalidationInfo"* [ %188, %185 ], [ %179, %180 ]
  %187 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %188 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %186, i64 -1
  %189 = tail call zeroext i1 %187(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %22, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %188) #16
  br i1 %189, label %185, label %190

190:                                              ; preds = %185
  %191 = icmp ult %"struct.blink::RasterInvalidationInfo"* %181, %188
  br i1 %191, label %192, label %21

192:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %193 = bitcast %"struct.blink::RasterInvalidationInfo"* %181 to i64*
  %194 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %181, i64 0, i32 1
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %194, i64 0, i32 0, i32 0
  %196 = bitcast %"class.WTF::String"* %194 to i64*
  %197 = bitcast %"struct.blink::RasterInvalidationInfo"* %181 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %195, align 8
  %199 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %181, i64 0, i32 2
  %200 = bitcast %"class.blink::IntRect"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %200, i64 17, i1 false) #16
  %201 = bitcast %"struct.blink::RasterInvalidationInfo"* %188 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %193, align 8
  %203 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %186, i64 -1, i32 1
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 0, i32 0, i32 0
  %205 = bitcast %"class.WTF::String"* %203 to i64*
  %206 = load i64, i64* %205, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %204, align 8
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 %206, i64* %196, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %192
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #16
  br label %222

222:                                              ; preds = %221, %218, %192
  %223 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %186, i64 -1, i32 2
  %224 = bitcast %"class.blink::IntRect"* %223 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %224, i64 17, i1 false) #16
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %226 = bitcast %"struct.blink::RasterInvalidationInfo"* %188 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %226, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #16
  br label %241

241:                                              ; preds = %222, %237, %240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  br label %177

242:                                              ; preds = %113
  %243 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %244 = tail call zeroext i1 %243(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %115, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %101) #16
  br i1 %244, label %245, label %113

245:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %246 = bitcast %"struct.blink::RasterInvalidationInfo"* %22 to i64*
  %247 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 0, i32 1
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %247, i64 0, i32 0, i32 0
  %249 = bitcast %"class.WTF::String"* %247 to i64*
  %250 = bitcast %"struct.blink::RasterInvalidationInfo"* %22 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %248, align 8
  %252 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 0, i32 2
  %253 = bitcast %"class.blink::IntRect"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %253, i64 17, i1 false) #16
  %254 = bitcast %"struct.blink::RasterInvalidationInfo"* %115 to i64*
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %246, align 8
  %256 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %114, i64 -1, i32 1
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %256, i64 0, i32 0, i32 0
  %258 = bitcast %"class.WTF::String"* %256 to i64*
  %259 = load i64, i64* %258, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %257, align 8
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  store i64 %259, i64* %249, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %245
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #16
  br label %275

275:                                              ; preds = %274, %271, %245
  %276 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %114, i64 -1, i32 2
  %277 = bitcast %"class.blink::IntRect"* %276 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %277, i64 17, i1 false) #16
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %279 = bitcast %"struct.blink::RasterInvalidationInfo"* %115 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %279, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #16
  br label %294

294:                                              ; preds = %275, %290, %293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  %295 = add i32 %110, 1
  br label %296

296:                                              ; preds = %109, %294
  %297 = phi i32 [ %295, %294 ], [ %110, %109 ]
  %298 = phi %"struct.blink::RasterInvalidationInfo"* [ %115, %294 ], [ %10, %109 ]
  %299 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %22 to i64
  %300 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %22, i64 1
  %301 = icmp ult %"struct.blink::RasterInvalidationInfo"* %300, %298
  br i1 %301, label %302, label %372

302:                                              ; preds = %296, %368
  %303 = phi %"struct.blink::RasterInvalidationInfo"* [ %371, %368 ], [ %101, %296 ]
  %304 = phi i32 [ %369, %368 ], [ %297, %296 ]
  %305 = phi %"struct.blink::RasterInvalidationInfo"* [ %311, %368 ], [ %300, %296 ]
  %306 = phi %"struct.blink::RasterInvalidationInfo"* [ %315, %368 ], [ %298, %296 ]
  br label %307

307:                                              ; preds = %307, %302
  %308 = phi %"struct.blink::RasterInvalidationInfo"* [ %305, %302 ], [ %311, %307 ]
  %309 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %310 = tail call zeroext i1 %309(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %308, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %303) #16
  %311 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %308, i64 1
  br i1 %310, label %307, label %312

312:                                              ; preds = %307, %312
  %313 = phi %"struct.blink::RasterInvalidationInfo"* [ %315, %312 ], [ %306, %307 ]
  %314 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %315 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %313, i64 -1
  %316 = tail call zeroext i1 %314(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %315, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %303) #16
  br i1 %316, label %317, label %312

317:                                              ; preds = %312
  %318 = icmp ugt %"struct.blink::RasterInvalidationInfo"* %308, %315
  br i1 %318, label %372, label %319

319:                                              ; preds = %317
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %320 = bitcast %"struct.blink::RasterInvalidationInfo"* %308 to i64*
  %321 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %308, i64 0, i32 1
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %321, i64 0, i32 0, i32 0
  %323 = bitcast %"class.WTF::String"* %321 to i64*
  %324 = bitcast %"struct.blink::RasterInvalidationInfo"* %308 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %322, align 8
  %326 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %308, i64 0, i32 2
  %327 = bitcast %"class.blink::IntRect"* %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %327, i64 17, i1 false) #16
  %328 = bitcast %"struct.blink::RasterInvalidationInfo"* %315 to i64*
  %329 = load i64, i64* %328, align 8
  store i64 %329, i64* %320, align 8
  %330 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %313, i64 -1, i32 1
  %331 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %330, i64 0, i32 0, i32 0
  %332 = bitcast %"class.WTF::String"* %330 to i64*
  %333 = load i64, i64* %332, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %331, align 8
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  store i64 %333, i64* %323, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %319
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #16
  br label %349

349:                                              ; preds = %348, %345, %319
  %350 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %313, i64 -1, i32 2
  %351 = bitcast %"class.blink::IntRect"* %350 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %351, i64 17, i1 false) #16
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %353 = bitcast %"struct.blink::RasterInvalidationInfo"* %315 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %353, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #16
  br label %368

368:                                              ; preds = %349, %364, %367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  %369 = add i32 %304, 1
  %370 = icmp eq %"struct.blink::RasterInvalidationInfo"* %303, %308
  %371 = select i1 %370, %"struct.blink::RasterInvalidationInfo"* %315, %"struct.blink::RasterInvalidationInfo"* %303
  br label %302

372:                                              ; preds = %317, %296
  %373 = phi %"struct.blink::RasterInvalidationInfo"* [ %101, %296 ], [ %303, %317 ]
  %374 = phi i32 [ %297, %296 ], [ %304, %317 ]
  %375 = phi %"struct.blink::RasterInvalidationInfo"* [ %300, %296 ], [ %308, %317 ]
  %376 = icmp eq %"struct.blink::RasterInvalidationInfo"* %375, %373
  br i1 %376, label %431, label %377

377:                                              ; preds = %372
  %378 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %379 = tail call zeroext i1 %378(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %373, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %375) #16
  br i1 %379, label %380, label %431

380:                                              ; preds = %377
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5)
  %381 = bitcast %"struct.blink::RasterInvalidationInfo"* %375 to i64*
  %382 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %375, i64 0, i32 1
  %383 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %382, i64 0, i32 0, i32 0
  %384 = bitcast %"class.WTF::String"* %382 to i64*
  %385 = bitcast %"struct.blink::RasterInvalidationInfo"* %375 to <2 x i64>*
  %386 = load <2 x i64>, <2 x i64>* %385, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %383, align 8
  %387 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %375, i64 0, i32 2
  %388 = bitcast %"class.blink::IntRect"* %387 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %388, i64 17, i1 false) #16
  %389 = bitcast %"struct.blink::RasterInvalidationInfo"* %373 to i64*
  %390 = load i64, i64* %389, align 8
  store i64 %390, i64* %381, align 8
  %391 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %373, i64 0, i32 1
  %392 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %391, i64 0, i32 0, i32 0
  %393 = bitcast %"class.WTF::String"* %391 to i64*
  %394 = load i64, i64* %393, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %392, align 8
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  store i64 %394, i64* %384, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %380
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #16
  br label %410

410:                                              ; preds = %409, %406, %380
  %411 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %373, i64 0, i32 2
  %412 = bitcast %"class.blink::IntRect"* %411 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %388, i8* align 8 %412, i64 17, i1 false) #16
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %392, align 8
  %414 = bitcast %"struct.blink::RasterInvalidationInfo"* %373 to <2 x i64>*
  store <2 x i64> %386, <2 x i64>* %414, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %415, label %429, label %416

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  br i1 %420, label %423, label %425

423:                                              ; preds = %416
  %424 = add i32 %422, -1
  store i32 %424, i32* %421, align 4
  br label %425

425:                                              ; preds = %423, %416
  %426 = phi i32 [ %424, %423 ], [ %422, %416 ]
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %425
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #16
  br label %429

429:                                              ; preds = %410, %425, %428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %412, i8* nonnull align 8 %5, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5)
  %430 = add i32 %374, 1
  br label %431

431:                                              ; preds = %372, %429, %377
  %432 = phi i32 [ %430, %429 ], [ %374, %377 ], [ %374, %372 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %441

434:                                              ; preds = %431
  %435 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEbT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %375, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  %436 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %375, i64 1
  %437 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEbT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %436, %"struct.blink::RasterInvalidationInfo"* %7, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  br i1 %435, label %454, label %439

439:                                              ; preds = %438, %452
  br label %6

440:                                              ; preds = %434
  br i1 %435, label %450, label %441

441:                                              ; preds = %440, %431
  %442 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %375 to i64
  %443 = sub i64 %442, %299
  %444 = sdiv exact i64 %443, 40
  %445 = sub i64 %18, %442
  %446 = sdiv exact i64 %445, 40
  %447 = icmp slt i64 %444, %446
  br i1 %447, label %448, label %452

448:                                              ; preds = %441
  tail call void @_ZNSt3__16__sortIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %22, %"struct.blink::RasterInvalidationInfo"* %375, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  %449 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %375, i64 1
  br label %450

450:                                              ; preds = %448, %440
  %451 = phi %"struct.blink::RasterInvalidationInfo"* [ %436, %440 ], [ %449, %448 ]
  br label %19

452:                                              ; preds = %441
  %453 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %375, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"* %453, %"struct.blink::RasterInvalidationInfo"* %7, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %439

454:                                              ; preds = %438, %174, %21, %21, %121, %171, %26, %79, %80, %84, %89, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %5 = alloca [17 x i8], align 8
  %6 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %3, align 8
  %7 = tail call zeroext i1 %6(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %0) #16
  %8 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %3, align 8
  %9 = tail call zeroext i1 %8(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1) #16
  br i1 %7, label %108, label %10

10:                                               ; preds = %4
  br i1 %9, label %11, label %246

11:                                               ; preds = %10
  %12 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %13 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to i64*
  %14 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"* %14 to i64*
  %17 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %19 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2
  %20 = bitcast %"class.blink::IntRect"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %20, i64 17, i1 false) #16
  %21 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %13, align 8
  %23 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::String"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %26, i64* %16, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %41, %38, %11
  %43 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 2
  %44 = bitcast %"class.blink::IntRect"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %44, i64 17, i1 false) #16
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #16
  br label %61

61:                                               ; preds = %42, %57, %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  %62 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %3, align 8
  %63 = tail call zeroext i1 %62(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %0) #16
  br i1 %63, label %64, label %246

64:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %65 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to i64*
  %66 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2
  %72 = bitcast %"class.blink::IntRect"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %72, i64 17, i1 false) #16
  %73 = load i64, i64* %13, align 8
  store i64 %73, i64* %65, align 8
  %74 = load i64, i64* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %74, i64* %68, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #16
  br label %90

90:                                               ; preds = %89, %86, %64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %20, i64 17, i1 false) #16
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %92 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #16
  br label %107

107:                                              ; preds = %90, %103, %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  br label %246

108:                                              ; preds = %4
  %109 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %109)
  %110 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %116 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2
  %117 = bitcast %"class.blink::IntRect"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 8 %117, i64 17, i1 false) #16
  br i1 %9, label %118, label %159

118:                                              ; preds = %108
  %119 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %110, align 8
  %121 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 1
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = bitcast %"class.WTF::String"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %122, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  store i64 %124, i64* %114, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #16
  br label %140

140:                                              ; preds = %139, %136, %118
  %141 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 2
  %142 = bitcast %"class.blink::IntRect"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %142, i64 17, i1 false) #16
  store i64 %111, i64* %119, align 8
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %115, i64* %123, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #16
  br label %158

158:                                              ; preds = %140, %154, %157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* nonnull align 8 %109, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %109)
  br label %246

159:                                              ; preds = %108
  %160 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to i64*
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %110, align 8
  %162 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 1
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 0, i32 0, i32 0
  %164 = bitcast %"class.WTF::String"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %163, align 8
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  store i64 %165, i64* %114, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #16
  br label %181

181:                                              ; preds = %180, %177, %159
  %182 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2
  %183 = bitcast %"class.blink::IntRect"* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %183, i64 17, i1 false) #16
  store i64 %111, i64* %160, align 8
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  store i64 %115, i64* %164, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #16
  br label %199

199:                                              ; preds = %181, %195, %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* nonnull align 8 %109, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %109)
  %200 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %3, align 8
  %201 = tail call zeroext i1 %200(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1) #16
  br i1 %201, label %202, label %246

202:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %109)
  %203 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %163, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 8 %183, i64 17, i1 false) #16
  %205 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to i64*
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %160, align 8
  %207 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 1
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 0, i32 0, i32 0
  %209 = bitcast %"class.WTF::String"* %207 to i64*
  %210 = load i64, i64* %209, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %208, align 8
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  store i64 %210, i64* %164, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %202
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #16
  br label %226

226:                                              ; preds = %225, %222, %202
  %227 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 2
  %228 = bitcast %"class.blink::IntRect"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %228, i64 17, i1 false) #16
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %230 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %230, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #16
  br label %245

245:                                              ; preds = %226, %241, %244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* nonnull align 8 %109, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %109)
  br label %246

246:                                              ; preds = %199, %245, %61, %107, %10, %158
  %247 = phi i32 [ 1, %158 ], [ 0, %10 ], [ 2, %107 ], [ 1, %61 ], [ 2, %245 ], [ 1, %199 ]
  ret i32 %247
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %6 = alloca [17 x i8], align 8
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %1, %"struct.blink::RasterInvalidationInfo"* %2, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %4)
  %8 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %3, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2) #16
  br i1 %9, label %10, label %156

10:                                               ; preds = %5
  %11 = getelementptr inbounds [17 x i8], [17 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %11)
  %12 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to i64*
  %13 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::String"* %13 to i64*
  %16 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %18 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 2
  %19 = bitcast %"class.blink::IntRect"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %19, i64 17, i1 false) #16
  %20 = bitcast %"struct.blink::RasterInvalidationInfo"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %12, align 8
  %22 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = bitcast %"class.WTF::String"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  store i64 %25, i64* %15, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br label %41

41:                                               ; preds = %40, %37, %10
  %42 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %3, i64 0, i32 2
  %43 = bitcast %"class.blink::IntRect"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %43, i64 17, i1 false) #16
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %45 = bitcast %"struct.blink::RasterInvalidationInfo"* %3 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #16
  br label %60

60:                                               ; preds = %41, %56, %59
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %11, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %11)
  %61 = add i32 %7, 1
  %62 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %4, align 8
  %63 = tail call zeroext i1 %62(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1) #16
  br i1 %63, label %64, label %156

64:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %11)
  %65 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to i64*
  %66 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2
  %72 = bitcast %"class.blink::IntRect"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %72, i64 17, i1 false) #16
  %73 = load i64, i64* %12, align 8
  store i64 %73, i64* %65, align 8
  %74 = load i64, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %74, i64* %68, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #16
  br label %90

90:                                               ; preds = %89, %86, %64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %19, i64 17, i1 false) #16
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %92 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #16
  br label %107

107:                                              ; preds = %90, %103, %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %11, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %11)
  %108 = add i32 %7, 2
  %109 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %4, align 8
  %110 = tail call zeroext i1 %109(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %0) #16
  br i1 %110, label %111, label %156

111:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %11)
  %112 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to i64*
  %113 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 0, i32 0, i32 0
  %115 = bitcast %"class.WTF::String"* %113 to i64*
  %116 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8
  %118 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2
  %119 = bitcast %"class.blink::IntRect"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %119, i64 17, i1 false) #16
  %120 = load i64, i64* %65, align 8
  store i64 %120, i64* %112, align 8
  %121 = load i64, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  store i64 %121, i64* %115, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #16
  br label %137

137:                                              ; preds = %136, %133, %111
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %72, i64 17, i1 false) #16
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %139 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %139, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #16
  br label %154

154:                                              ; preds = %137, %150, %153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %11, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %11)
  %155 = add i32 %7, 3
  br label %156

156:                                              ; preds = %60, %154, %107, %5
  %157 = phi i32 [ %155, %154 ], [ %108, %107 ], [ %61, %60 ], [ %7, %5 ]
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %7 = alloca [17 x i8], align 8
  %8 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %1, %"struct.blink::RasterInvalidationInfo"* %2, %"struct.blink::RasterInvalidationInfo"* %3, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %5)
  %9 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %5, align 8
  %10 = tail call zeroext i1 %9(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %4, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %3) #16
  br i1 %10, label %11, label %204

11:                                               ; preds = %6
  %12 = getelementptr inbounds [17 x i8], [17 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %13 = bitcast %"struct.blink::RasterInvalidationInfo"* %3 to i64*
  %14 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"* %14 to i64*
  %17 = bitcast %"struct.blink::RasterInvalidationInfo"* %3 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %19 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %3, i64 0, i32 2
  %20 = bitcast %"class.blink::IntRect"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %20, i64 17, i1 false) #16
  %21 = bitcast %"struct.blink::RasterInvalidationInfo"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %13, align 8
  %23 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::String"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %26, i64* %16, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %41, %38, %11
  %43 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 2
  %44 = bitcast %"class.blink::IntRect"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %44, i64 17, i1 false) #16
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = bitcast %"struct.blink::RasterInvalidationInfo"* %4 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #16
  br label %61

61:                                               ; preds = %42, %57, %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  %62 = add i32 %8, 1
  %63 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %5, align 8
  %64 = tail call zeroext i1 %63(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %3, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2) #16
  br i1 %64, label %65, label %204

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %66 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to i64*
  %67 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::String"* %67 to i64*
  %70 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %72 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %2, i64 0, i32 2
  %73 = bitcast %"class.blink::IntRect"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %73, i64 17, i1 false) #16
  %74 = load i64, i64* %13, align 8
  store i64 %74, i64* %66, align 8
  %75 = load i64, i64* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %75, i64* %69, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #16
  br label %91

91:                                               ; preds = %90, %87, %65
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %20, i64 17, i1 false) #16
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %93 = bitcast %"struct.blink::RasterInvalidationInfo"* %3 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %93, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16
  br label %108

108:                                              ; preds = %91, %104, %107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  %109 = add i32 %8, 2
  %110 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %5, align 8
  %111 = tail call zeroext i1 %110(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %2, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1) #16
  br i1 %111, label %112, label %204

112:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %113 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to i64*
  %114 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 1
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %116 = bitcast %"class.WTF::String"* %114 to i64*
  %117 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %115, align 8
  %119 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 0, i32 2
  %120 = bitcast %"class.blink::IntRect"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %120, i64 17, i1 false) #16
  %121 = load i64, i64* %66, align 8
  store i64 %121, i64* %113, align 8
  %122 = load i64, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %122, i64* %116, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %137, %134, %112
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %73, i64 17, i1 false) #16
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %140 = bitcast %"struct.blink::RasterInvalidationInfo"* %2 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %140, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #16
  br label %155

155:                                              ; preds = %138, %151, %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  %156 = add i32 %8, 3
  %157 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %5, align 8
  %158 = tail call zeroext i1 %157(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %1, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %0) #16
  br i1 %158, label %159, label %204

159:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12)
  %160 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to i64*
  %161 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %161, i64 0, i32 0, i32 0
  %163 = bitcast %"class.WTF::String"* %161 to i64*
  %164 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %162, align 8
  %166 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2
  %167 = bitcast %"class.blink::IntRect"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %167, i64 17, i1 false) #16
  %168 = load i64, i64* %113, align 8
  store i64 %168, i64* %160, align 8
  %169 = load i64, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %115, align 8
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  store i64 %169, i64* %163, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %159
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #16
  br label %185

185:                                              ; preds = %184, %181, %159
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %120, i64 17, i1 false) #16
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %187 = bitcast %"struct.blink::RasterInvalidationInfo"* %1 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %187, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #16
  br label %202

202:                                              ; preds = %185, %198, %201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %12, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12)
  %203 = add i32 %8, 4
  br label %204

204:                                              ; preds = %61, %155, %202, %108, %6
  %205 = phi i32 [ %203, %202 ], [ %156, %155 ], [ %109, %108 ], [ %62, %61 ], [ %8, %6 ]
  ret i32 %205
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEvT0_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = alloca %"struct.blink::RasterInvalidationInfo", align 16
  %5 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 2
  %6 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %6, %"struct.blink::RasterInvalidationInfo"* %5, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  %8 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 3
  %9 = icmp eq %"struct.blink::RasterInvalidationInfo"* %8, %1
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.blink::RasterInvalidationInfo"* %4 to i8*
  %12 = bitcast %"struct.blink::RasterInvalidationInfo"* %4 to i64*
  %13 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 1
  %14 = bitcast %"class.WTF::String"* %13 to i64*
  %15 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 2
  %16 = bitcast %"class.blink::IntRect"* %15 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %4, i64 0, i32 2
  %20 = bitcast %"class.blink::IntRect"* %19 to i8*
  %21 = bitcast %"struct.blink::RasterInvalidationInfo"* %4 to <2 x i64>*
  br label %23

22:                                               ; preds = %112, %3
  ret void

23:                                               ; preds = %10, %112
  %24 = phi %"struct.blink::RasterInvalidationInfo"* [ %8, %10 ], [ %113, %112 ]
  %25 = phi %"struct.blink::RasterInvalidationInfo"* [ %5, %10 ], [ %24, %112 ]
  %26 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %27 = call zeroext i1 %26(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %24, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %25) #16
  br i1 %27, label %28, label %112

28:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 24, i1 false)
  %29 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %24, i64 0, i32 1, i32 0, i32 0
  %30 = bitcast %"struct.blink::RasterInvalidationInfo"* %24 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  store <2 x i64> %31, <2 x i64>* %21, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %32 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %24, i64 0, i32 2
  %33 = bitcast %"class.blink::IntRect"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %16, i8* align 8 %33, i64 17, i1 false) #16
  br label %34

34:                                               ; preds = %68, %28
  %35 = phi %"struct.blink::RasterInvalidationInfo"* [ %24, %28 ], [ %36, %68 ]
  %36 = phi %"struct.blink::RasterInvalidationInfo"* [ %25, %28 ], [ %70, %68 ]
  %37 = bitcast %"struct.blink::RasterInvalidationInfo"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.blink::RasterInvalidationInfo"* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %36, i64 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::String"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %45 = bitcast %"class.WTF::String"* %40 to i64*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %34
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #16
  br label %62

62:                                               ; preds = %34, %58, %61
  %63 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %35, i64 0, i32 2
  %64 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %36, i64 0, i32 2
  %65 = bitcast %"class.blink::IntRect"* %63 to i8*
  %66 = bitcast %"class.blink::IntRect"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 17, i1 false) #16
  %67 = icmp eq %"struct.blink::RasterInvalidationInfo"* %36, %0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %70 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %36, i64 -1
  %71 = call zeroext i1 %69(%"struct.blink::RasterInvalidationInfo"* nonnull dereferenceable(40) %4, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %70) #16
  br i1 %71, label %34, label %72

72:                                               ; preds = %62, %68
  %73 = phi %"struct.blink::RasterInvalidationInfo"* [ %36, %68 ], [ %0, %62 ]
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::String"* %41 to i64*
  %76 = bitcast %"class.blink::IntRect"* %64 to i8*
  %77 = bitcast %"struct.blink::RasterInvalidationInfo"* %73 to i64*
  %78 = load i64, i64* %12, align 16
  store i64 %78, i64* %77, align 8
  %79 = load i64, i64* %14, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  store i64 %79, i64* %75, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %95

95:                                               ; preds = %72, %91, %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 16 %16, i64 17, i1 false) #16
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #16
  br label %111

111:                                              ; preds = %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #16
  br label %112

112:                                              ; preds = %111, %23
  %113 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %24, i64 1
  %114 = icmp eq %"struct.blink::RasterInvalidationInfo"* %113, %1
  br i1 %114, label %22, label %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEbT0_S9_T_(%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = alloca [17 x i8], align 8
  %5 = alloca %"struct.blink::RasterInvalidationInfo", align 16
  %6 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %1 to i64
  %7 = ptrtoint %"struct.blink::RasterInvalidationInfo"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 40
  switch i64 %9, label %80 [
    i64 0, label %197
    i64 1, label %197
    i64 2, label %10
    i64 3, label %65
    i64 4, label %69
    i64 5, label %74
  ]

10:                                               ; preds = %3
  %11 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %12 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1
  %13 = tail call zeroext i1 %11(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %12, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %0) #16
  br i1 %13, label %14, label %197

14:                                               ; preds = %10
  %15 = getelementptr inbounds [17 x i8], [17 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %15)
  %16 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to i64*
  %17 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %19 = bitcast %"class.WTF::String"* %17 to i64*
  %20 = bitcast %"struct.blink::RasterInvalidationInfo"* %0 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %22 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::IntRect"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %23, i64 17, i1 false) #16
  %24 = bitcast %"struct.blink::RasterInvalidationInfo"* %12 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %16, align 8
  %26 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1, i32 1
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.WTF::String"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %29, i64* %19, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #16
  br label %45

45:                                               ; preds = %44, %41, %14
  %46 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1, i32 2
  %47 = bitcast %"class.blink::IntRect"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %47, i64 17, i1 false) #16
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %49 = bitcast %"struct.blink::RasterInvalidationInfo"* %12 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %64

64:                                               ; preds = %45, %60, %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %15, i64 17, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %15)
  br label %197

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 1
  %67 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1
  %68 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %66, %"struct.blink::RasterInvalidationInfo"* %67, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %197

69:                                               ; preds = %3
  %70 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 1
  %71 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 2
  %72 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %70, %"struct.blink::RasterInvalidationInfo"* %71, %"struct.blink::RasterInvalidationInfo"* %72, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %197

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 1
  %76 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 2
  %77 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 3
  %78 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %1, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %75, %"struct.blink::RasterInvalidationInfo"* %76, %"struct.blink::RasterInvalidationInfo"* %77, %"struct.blink::RasterInvalidationInfo"* %78, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  br label %197

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 2
  %82 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 1
  %83 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink22RasterInvalidationInfoES4_EPS2_EEjT0_S9_S9_T_(%"struct.blink::RasterInvalidationInfo"* %0, %"struct.blink::RasterInvalidationInfo"* %82, %"struct.blink::RasterInvalidationInfo"* %81, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** dereferenceable(8) %2)
  %84 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %0, i64 3
  %85 = icmp eq %"struct.blink::RasterInvalidationInfo"* %84, %1
  br i1 %85, label %197, label %86

86:                                               ; preds = %80
  %87 = bitcast %"struct.blink::RasterInvalidationInfo"* %5 to i8*
  %88 = bitcast %"struct.blink::RasterInvalidationInfo"* %5 to i64*
  %89 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %5, i64 0, i32 1
  %90 = bitcast %"class.WTF::String"* %89 to i64*
  %91 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %5, i64 0, i32 2
  %92 = bitcast %"class.blink::IntRect"* %91 to i8*
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %5, i64 0, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %5, i64 0, i32 2
  %96 = bitcast %"class.blink::IntRect"* %95 to i8*
  %97 = bitcast %"struct.blink::RasterInvalidationInfo"* %5 to <2 x i64>*
  br label %98

98:                                               ; preds = %86, %190
  %99 = phi %"struct.blink::RasterInvalidationInfo"* [ %84, %86 ], [ %192, %190 ]
  %100 = phi i32 [ 0, %86 ], [ %191, %190 ]
  %101 = phi %"struct.blink::RasterInvalidationInfo"* [ %81, %86 ], [ %99, %190 ]
  %102 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %103 = call zeroext i1 %102(%"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %99, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %101) #16
  br i1 %103, label %104, label %190

104:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %96, i8 -86, i64 24, i1 false)
  %105 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %99, i64 0, i32 1, i32 0, i32 0
  %106 = bitcast %"struct.blink::RasterInvalidationInfo"* %99 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  store <2 x i64> %107, <2 x i64>* %97, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %108 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %99, i64 0, i32 2
  %109 = bitcast %"class.blink::IntRect"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %92, i8* align 8 %109, i64 17, i1 false) #16
  br label %110

110:                                              ; preds = %144, %104
  %111 = phi %"struct.blink::RasterInvalidationInfo"* [ %99, %104 ], [ %112, %144 ]
  %112 = phi %"struct.blink::RasterInvalidationInfo"* [ %101, %104 ], [ %146, %144 ]
  %113 = bitcast %"struct.blink::RasterInvalidationInfo"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.blink::RasterInvalidationInfo"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %111, i64 0, i32 1
  %117 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %112, i64 0, i32 1
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8
  %121 = bitcast %"class.WTF::String"* %116 to i64*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %110
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %110, %134, %137
  %139 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %111, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %112, i64 0, i32 2
  %141 = bitcast %"class.blink::IntRect"* %139 to i8*
  %142 = bitcast %"class.blink::IntRect"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 17, i1 false) #16
  %143 = icmp eq %"struct.blink::RasterInvalidationInfo"* %112, %0
  br i1 %143, label %148, label %144

144:                                              ; preds = %138
  %145 = load i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)*, i1 (%"struct.blink::RasterInvalidationInfo"*, %"struct.blink::RasterInvalidationInfo"*)** %2, align 8
  %146 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %112, i64 -1
  %147 = call zeroext i1 %145(%"struct.blink::RasterInvalidationInfo"* nonnull dereferenceable(40) %5, %"struct.blink::RasterInvalidationInfo"* dereferenceable(40) %146) #16
  br i1 %147, label %110, label %148

148:                                              ; preds = %138, %144
  %149 = phi %"struct.blink::RasterInvalidationInfo"* [ %112, %144 ], [ %0, %138 ]
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %151 = bitcast %"class.WTF::String"* %117 to i64*
  %152 = bitcast %"class.blink::IntRect"* %140 to i8*
  %153 = bitcast %"struct.blink::RasterInvalidationInfo"* %149 to i64*
  %154 = load i64, i64* %88, align 16
  store i64 %154, i64* %153, align 8
  %155 = load i64, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store i64 %155, i64* %151, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #16
  br label %171

171:                                              ; preds = %148, %167, %170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 16 %92, i64 17, i1 false) #16
  %172 = add i32 %100, 1
  %173 = icmp eq i32 %172, 8
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #16
  br label %189

189:                                              ; preds = %171, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #16
  br i1 %173, label %194, label %190

190:                                              ; preds = %189, %98
  %191 = phi i32 [ %172, %189 ], [ %100, %98 ]
  %192 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %99, i64 1
  %193 = icmp eq %"struct.blink::RasterInvalidationInfo"* %192, %1
  br i1 %193, label %197, label %98

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"struct.blink::RasterInvalidationInfo", %"struct.blink::RasterInvalidationInfo"* %99, i64 1
  %196 = icmp eq %"struct.blink::RasterInvalidationInfo"* %195, %1
  br label %197

197:                                              ; preds = %190, %194, %80, %10, %64, %3, %3, %74, %69, %65
  %198 = phi i1 [ true, %74 ], [ true, %69 ], [ true, %65 ], [ true, %3 ], [ true, %3 ], [ true, %64 ], [ true, %10 ], [ true, %80 ], [ %196, %194 ], [ true, %190 ]
  ret i1 %198
}

declare void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"*) unnamed_addr #4

declare void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"*, double) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.58"*, %"struct.cc::LayerDebugInfo::Invalidation"* dereferenceable(48)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"struct.cc::LayerDebugInfo::Invalidation"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %35 to i64
  %37 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %34 to i8*
  %38 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %33, i64 %9, i32 2
  %40 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %1, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #16
  %43 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %34, i64 1
  %44 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %45, align 8
  %47 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %3, align 8
  %48 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %53, i64 -1
  %56 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %54 to i8*
  %57 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #16
  %58 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %52, i64 -1, i32 2
  %59 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %53, i64 -1, i32 2
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #16
  %62 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.cc::LayerDebugInfo::Invalidation"*
  %72 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %67, %71
  br i1 %72, label %86, label %73

73:                                               ; preds = %66, %84
  %74 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %75, %84 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %74, i64 -1, i32 2
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %81, %73
  %85 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %75, %71
  br i1 %85, label %86, label %73

86:                                               ; preds = %84, %66
  %87 = icmp eq i64 %69, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %86, %88
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink23RasterUnderInvalidationELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.17"*, %"struct.blink::RasterUnderInvalidation"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::RasterUnderInvalidation"*, %"struct.blink::RasterUnderInvalidation"** %6, align 8
  %8 = icmp ugt %"struct.blink::RasterUnderInvalidation"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::RasterUnderInvalidation"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::RasterUnderInvalidation"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23RasterUnderInvalidationEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23RasterUnderInvalidationEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::RasterUnderInvalidation"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::RasterUnderInvalidation"*, %"struct.blink::RasterUnderInvalidation"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::RasterUnderInvalidation"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::RasterUnderInvalidation"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::RasterUnderInvalidation"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::RasterUnderInvalidation"* %1 to i64
  %56 = ptrtoint %"struct.blink::RasterUnderInvalidation"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::RasterUnderInvalidation"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23RasterUnderInvalidationEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23RasterUnderInvalidationEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::RasterUnderInvalidation"*, %"struct.blink::RasterUnderInvalidation"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::RasterUnderInvalidation"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::RasterUnderInvalidation"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::RasterUnderInvalidation"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::RasterUnderInvalidation"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::RasterUnderInvalidation"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::RasterUnderInvalidation"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::RasterUnderInvalidation", %"struct.blink::RasterUnderInvalidation"* %100, i64 %103
  %105 = bitcast %"struct.blink::RasterUnderInvalidation"* %104 to i8*
  %106 = bitcast %"struct.blink::RasterUnderInvalidation"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23RasterUnderInvalidationEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = distinct !{!8, !9, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!9 = distinct !{!9, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!12 = distinct !{!12, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!13 = distinct !{!13, !14, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!14 = distinct !{!14, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !21}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !21}
!29 = distinct !{!29, !21}
