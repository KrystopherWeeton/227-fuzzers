; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/transport_feedback.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/transport_feedback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::rtcp::TransportFeedback::LastChunk" = type <{ [14 x i8], [2 x i8], i64, i8, i8, [6 x i8] }>
%"class.webrtc::rtcp::TransportFeedback" = type { %"class.webrtc::rtcp::Rtpfb", i8, i16, i16, i32, i8, i8, i64, %"class.std::__1::vector.2", %"class.std::__1::vector.2", %"class.std::__1::vector.9", %"class.webrtc::rtcp::TransportFeedback::LastChunk", i64 }
%"class.webrtc::rtcp::Rtpfb" = type { %"class.webrtc::rtcp::RtcpPacket.base", i32 }
%"class.webrtc::rtcp::RtcpPacket.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.std::__1::__compressed_pair.4" }
%"class.webrtc::rtcp::TransportFeedback::ReceivedPacket" = type <{ i16, i16, i8, i8 }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { i16*, i16*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i16* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.webrtc::rtcp::CommonHeader" = type { i8, i8, i8, i32, i8* }
%"class.webrtc::trace_event_internal::TraceEndOnScopeClose" = type { %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"*, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data" }
%"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data" = type { i8*, i8* }
%"class.webrtc::rtcp::RtcpPacket" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZN6webrtc4rtcp10RtcpPacketD2Ev = comdat any

$_ZN6webrtc4rtcp5RtpfbD0Ev = comdat any

$_ZN6webrtc4rtcp10RtcpPacketD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN6webrtc4rtcp5RtpfbE = comdat any

$_ZTVN6webrtc4rtcp10RtcpPacketE = comdat any

@_ZN6webrtc4rtcp17TransportFeedback20kFeedbackMessageTypeE = hidden local_unnamed_addr constant i8 15, align 1
@_ZN6webrtc4rtcp17TransportFeedback19kMaxReportedPacketsE = hidden local_unnamed_addr constant i64 65535, align 8
@_ZN6webrtc4rtcp17TransportFeedback9LastChunk21kMaxRunLengthCapacityE = hidden local_unnamed_addr constant i64 8191, align 8
@_ZN6webrtc4rtcp17TransportFeedback9LastChunk18kMaxOneBitCapacityE = hidden local_unnamed_addr constant i64 14, align 8
@_ZN6webrtc4rtcp17TransportFeedback9LastChunk18kMaxTwoBitCapacityE = hidden local_unnamed_addr constant i64 7, align 8
@_ZN6webrtc4rtcp17TransportFeedback9LastChunk18kMaxVectorCapacityE = hidden local_unnamed_addr constant i64 14, align 8
@_ZTVN6webrtc4rtcp17TransportFeedbackE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackD0Ev to i8*), i8* bitcast (i64 (%"class.webrtc::rtcp::TransportFeedback"*)* @_ZNK6webrtc4rtcp17TransportFeedback11BlockLengthEv to i8*), i8* bitcast (i1 (%"class.webrtc::rtcp::TransportFeedback"*, i8*, i64*, i64, i8*, {}*)* @_ZNK6webrtc4rtcp17TransportFeedback6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [83 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/transport_feedback.cc\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Delta value too large ( >= 2^16 ticks )\00", align 1
@_ZZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403 = internal unnamed_addr global i8* null, align 8
@_ZGVZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"webrtc\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"TransportFeedback::Parse\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"Buffer too small (\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c" bytes) to fit a FeedbackPacket. Minimum size = \00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"Empty feedback messages not allowed.\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Buffer overflow while parsing packet.\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Invalid delta_size for seq_no \00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c" packets encoded. Expected \00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Failed to find delta for seq_no \00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Expected to find delta for seq_no \00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c". Next delta is for \00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"Delta \00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c" for seq_no \00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c" doesn't fit into one byte\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Unencoded delta for seq_no \00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Last timestamp mismatch. Calculated: \00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c". Saved: \00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"Rtcp packet size mismatch. Calculated: \00", align 1
@_ZTVN6webrtc4rtcp5RtpfbE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Rtpfb"*)* @_ZN6webrtc4rtcp5RtpfbD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN6webrtc4rtcp10RtcpPacketE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc4rtcp17TransportFeedback9LastChunkC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback::LastChunk"*), void (%"class.webrtc::rtcp::TransportFeedback::LastChunk"*)* @_ZN6webrtc4rtcp17TransportFeedback9LastChunkC2Ev
@_ZN6webrtc4rtcp17TransportFeedbackC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback"*), void (%"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackC2Ev
@_ZN6webrtc4rtcp17TransportFeedbackC1Ebb = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback"*, i1, i1), void (%"class.webrtc::rtcp::TransportFeedback"*, i1, i1)* @_ZN6webrtc4rtcp17TransportFeedbackC2Ebb
@_ZN6webrtc4rtcp17TransportFeedbackC1ERKS1_ = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::TransportFeedback"*), void (%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackC2ERKS1_
@_ZN6webrtc4rtcp17TransportFeedbackC1EOS1_ = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::TransportFeedback"*), void (%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackC2EOS1_
@_ZN6webrtc4rtcp17TransportFeedbackD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::TransportFeedback"*), void (%"class.webrtc::rtcp::TransportFeedback"*)* @_ZN6webrtc4rtcp17TransportFeedbackD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunkC2Ev(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk5ClearEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk5EmptyEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk6CanAddEh(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 7
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = icmp ult i64 %4, 14
  br i1 %7, label %8, label %14

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = icmp eq i8 %1, 2
  %13 = or i1 %12, %11
  br i1 %13, label %16, label %25

14:                                               ; preds = %6
  %15 = icmp ult i64 %4, 8191
  br i1 %15, label %16, label %24

16:                                               ; preds = %8, %14
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %16, %20, %14
  br label %25

25:                                               ; preds = %20, %8, %2, %24
  %26 = phi i1 [ false, %24 ], [ true, %2 ], [ true, %8 ], [ true, %20 ]
  ret i1 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk3AddEh(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 14
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %4
  store i8 %1, i8* %7, align 1
  %8 = load i64, i64* %3, align 8
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i64 [ %8, %6 ], [ %4, %2 ]
  %11 = add i64 %10, 1
  store i64 %11, i64* %3, align 8
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, %1
  %19 = zext i1 %18 to i8
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi i8 [ 0, %9 ], [ %19, %15 ]
  store i8 %21, i8* %12, align 8
  %22 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %1, 2
  %25 = zext i1 %24 to i8
  %26 = or i8 %23, %25
  store i8 %26, i8* %22, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZN6webrtc4rtcp17TransportFeedback9LastChunk4EmitEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i16
  %9 = shl i16 %8, 13
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i16
  %13 = or i16 %9, %12
  store i64 0, i64* %10, align 8
  store i8 1, i8* %2, align 8
  %14 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %14, align 1
  br label %146

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 14
  %19 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  br i1 %18, label %57, label %22

22:                                               ; preds = %15
  %23 = shl i16 %21, 12
  %24 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = shl i16 %26, 10
  %28 = or i16 %23, %27
  %29 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  %32 = shl nuw i16 %31, 8
  %33 = or i16 %28, %32
  %34 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = shl nuw nsw i16 %36, 6
  %38 = or i16 %33, %37
  %39 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 4
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i16
  %42 = shl nuw nsw i16 %41, 4
  %43 = or i16 %38, %42
  %44 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 5
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw nsw i16 %46, 2
  %48 = or i16 %43, %47
  %49 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 6
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  %52 = or i16 %48, %51
  %53 = or i16 %52, -16384
  %54 = add i64 %17, -7
  store i64 %54, i64* %16, align 8
  store i8 1, i8* %2, align 8
  %55 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %55, align 1
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %146, label %125

57:                                               ; preds = %15
  %58 = shl i16 %21, 13
  %59 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  %62 = shl i16 %61, 12
  %63 = or i16 %58, %62
  %64 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = shl i16 %66, 11
  %68 = or i16 %63, %67
  %69 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = shl i16 %71, 10
  %73 = or i16 %68, %72
  %74 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 4
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = shl i16 %76, 9
  %78 = or i16 %73, %77
  %79 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = shl nuw i16 %81, 8
  %83 = or i16 %78, %82
  %84 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 6
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = shl nuw nsw i16 %86, 7
  %88 = or i16 %83, %87
  %89 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 7
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i16
  %92 = shl nuw nsw i16 %91, 6
  %93 = or i16 %88, %92
  %94 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 8
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i16
  %97 = shl nuw nsw i16 %96, 5
  %98 = or i16 %93, %97
  %99 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 9
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = shl nuw nsw i16 %101, 4
  %103 = or i16 %98, %102
  %104 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 10
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = shl nuw nsw i16 %106, 3
  %108 = or i16 %103, %107
  %109 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 11
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = shl nuw nsw i16 %111, 2
  %113 = or i16 %108, %112
  %114 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 12
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = shl nuw nsw i16 %116, 1
  %118 = or i16 %113, %117
  %119 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 13
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i16
  %122 = or i16 %118, %121
  %123 = or i16 %122, -32768
  store i64 0, i64* %16, align 8
  store i8 1, i8* %2, align 8
  %124 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %124, align 1
  br label %146

125:                                              ; preds = %22, %136
  %126 = phi i64 [ %143, %136 ], [ 0, %22 ]
  %127 = add i64 %126, 7
  %128 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %126
  store i8 %129, i8* %130, align 1
  %131 = load i8, i8* %2, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %125
  %134 = load i8, i8* %19, align 8
  %135 = icmp eq i8 %129, %134
  br label %136

136:                                              ; preds = %125, %133
  %137 = phi i1 [ false, %125 ], [ %135, %133 ]
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %2, align 8
  %139 = load i8, i8* %55, align 1, !range !2
  %140 = icmp eq i8 %129, 2
  %141 = zext i1 %140 to i8
  %142 = or i8 %139, %141
  store i8 %142, i8* %55, align 1
  %143 = add nuw i64 %126, 1
  %144 = load i64, i64* %16, align 8
  %145 = icmp ult i64 %143, %144
  br i1 %145, label %125, label %146

146:                                              ; preds = %136, %22, %57, %5
  %147 = phi i16 [ %13, %5 ], [ %123, %57 ], [ %53, %22 ], [ %53, %136 ]
  ret i16 %147
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk15EncodeRunLengthEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %3 = load i8, i8* %2, align 8
  %4 = zext i8 %3 to i16
  %5 = shl i16 %4, 13
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i16
  %9 = or i16 %5, %8
  ret i16 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk12EncodeOneBitEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %42, label %5

5:                                                ; preds = %1
  %6 = icmp ult i64 %3, 4
  br i1 %6, label %7, label %10

7:                                                ; preds = %36, %5
  %8 = phi i64 [ 0, %5 ], [ %11, %36 ]
  %9 = phi i16 [ -32768, %5 ], [ %40, %36 ]
  br label %44

10:                                               ; preds = %5
  %11 = and i64 %3, -4
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i64 [ 0, %10 ], [ %33, %12 ]
  %14 = phi <2 x i16> [ <i16 -32768, i16 0>, %10 ], [ %31, %12 ]
  %15 = phi <2 x i16> [ zeroinitializer, %10 ], [ %32, %12 ]
  %16 = phi <2 x i32> [ <i32 0, i32 1>, %10 ], [ %34, %12 ]
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %13
  %18 = bitcast i8* %17 to <2 x i8>*
  %19 = load <2 x i8>, <2 x i8>* %18, align 1
  %20 = getelementptr inbounds i8, i8* %17, i64 2
  %21 = bitcast i8* %20 to <2 x i8>*
  %22 = load <2 x i8>, <2 x i8>* %21, align 1
  %23 = zext <2 x i8> %19 to <2 x i32>
  %24 = zext <2 x i8> %22 to <2 x i32>
  %25 = sub <2 x i32> <i32 13, i32 13>, %16
  %26 = sub <2 x i32> <i32 11, i32 11>, %16
  %27 = shl <2 x i32> %23, %25
  %28 = shl <2 x i32> %24, %26
  %29 = trunc <2 x i32> %27 to <2 x i16>
  %30 = trunc <2 x i32> %28 to <2 x i16>
  %31 = or <2 x i16> %14, %29
  %32 = or <2 x i16> %15, %30
  %33 = add i64 %13, 4
  %34 = add <2 x i32> %16, <i32 4, i32 4>
  %35 = icmp eq i64 %33, %11
  br i1 %35, label %36, label %12, !llvm.loop !3

36:                                               ; preds = %12
  %37 = or <2 x i16> %32, %31
  %38 = shufflevector <2 x i16> %37, <2 x i16> undef, <2 x i32> <i32 1, i32 undef>
  %39 = or <2 x i16> %37, %38
  %40 = extractelement <2 x i16> %39, i32 0
  %41 = icmp eq i64 %3, %11
  br i1 %41, label %42, label %7

42:                                               ; preds = %44, %36, %1
  %43 = phi i16 [ -32768, %1 ], [ %40, %36 ], [ %54, %44 ]
  ret i16 %43

44:                                               ; preds = %7, %44
  %45 = phi i64 [ %55, %44 ], [ %8, %7 ]
  %46 = phi i16 [ %54, %44 ], [ %9, %7 ]
  %47 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %45
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = trunc i64 %45 to i32
  %51 = sub i32 13, %50
  %52 = shl i32 %49, %51
  %53 = trunc i32 %52 to i16
  %54 = or i16 %46, %53
  %55 = add nuw i64 %45, 1
  %56 = icmp ult i64 %55, %3
  br i1 %56, label %44, label %42, !llvm.loop !5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk12EncodeTwoBitEm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 8
  br i1 %5, label %6, label %9

6:                                                ; preds = %63, %4
  %7 = phi i64 [ 0, %4 ], [ %10, %63 ]
  %8 = phi i16 [ -16384, %4 ], [ %71, %63 ]
  br label %75

9:                                                ; preds = %4
  %10 = and i64 %1, -8
  %11 = add i64 %10, -8
  %12 = lshr exact i64 %11, 3
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %11, 0
  br i1 %15, label %49, label %16

16:                                               ; preds = %9
  %17 = sub nuw nsw i64 %13, %14
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %42, %18 ]
  %20 = phi <8 x i16> [ <i16 -16384, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, %16 ], [ %41, %18 ]
  %21 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %16 ], [ %43, %18 ]
  %22 = phi i64 [ %17, %16 ], [ %44, %18 ]
  %23 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %19
  %24 = bitcast i8* %23 to <8 x i8>*
  %25 = load <8 x i8>, <8 x i8>* %24, align 1
  %26 = zext <8 x i8> %25 to <8 x i32>
  %27 = shl <8 x i32> %21, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %28 = sub <8 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, %27
  %29 = shl <8 x i32> %26, %28
  %30 = trunc <8 x i32> %29 to <8 x i16>
  %31 = or <8 x i16> %20, %30
  %32 = or i64 %19, 8
  %33 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %32
  %34 = bitcast i8* %33 to <8 x i8>*
  %35 = load <8 x i8>, <8 x i8>* %34, align 1
  %36 = zext <8 x i8> %35 to <8 x i32>
  %37 = shl <8 x i32> %21, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %38 = sub <8 x i32> <i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4>, %37
  %39 = shl <8 x i32> %36, %38
  %40 = trunc <8 x i32> %39 to <8 x i16>
  %41 = or <8 x i16> %31, %40
  %42 = add i64 %19, 16
  %43 = add <8 x i32> %21, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %44 = add i64 %22, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %18, !llvm.loop !7

46:                                               ; preds = %18
  %47 = shl <8 x i32> %43, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %48 = sub <8 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, %47
  br label %49

49:                                               ; preds = %46, %9
  %50 = phi <8 x i16> [ undef, %9 ], [ %41, %46 ]
  %51 = phi i64 [ 0, %9 ], [ %42, %46 ]
  %52 = phi <8 x i16> [ <i16 -16384, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, %9 ], [ %41, %46 ]
  %53 = phi <8 x i32> [ <i32 12, i32 10, i32 8, i32 6, i32 4, i32 2, i32 0, i32 -2>, %9 ], [ %48, %46 ]
  %54 = icmp eq i64 %14, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %51
  %57 = bitcast i8* %56 to <8 x i8>*
  %58 = load <8 x i8>, <8 x i8>* %57, align 1
  %59 = zext <8 x i8> %58 to <8 x i32>
  %60 = shl <8 x i32> %59, %53
  %61 = trunc <8 x i32> %60 to <8 x i16>
  %62 = or <8 x i16> %52, %61
  br label %63

63:                                               ; preds = %49, %55
  %64 = phi <8 x i16> [ %50, %49 ], [ %62, %55 ]
  %65 = shufflevector <8 x i16> %64, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %66 = or <8 x i16> %64, %65
  %67 = shufflevector <8 x i16> %66, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %68 = or <8 x i16> %66, %67
  %69 = shufflevector <8 x i16> %68, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %70 = or <8 x i16> %68, %69
  %71 = extractelement <8 x i16> %70, i32 0
  %72 = icmp eq i64 %10, %1
  br i1 %72, label %73, label %6

73:                                               ; preds = %75, %63, %2
  %74 = phi i16 [ -16384, %2 ], [ %71, %63 ], [ %86, %75 ]
  ret i16 %74

75:                                               ; preds = %6, %75
  %76 = phi i64 [ %87, %75 ], [ %7, %6 ]
  %77 = phi i16 [ %86, %75 ], [ %8, %6 ]
  %78 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %76
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = trunc i64 %76 to i32
  %82 = shl i32 %81, 1
  %83 = sub i32 12, %82
  %84 = shl i32 %80, %83
  %85 = trunc i32 %84 to i16
  %86 = or i16 %77, %85
  %87 = add nuw i64 %76, 1
  %88 = icmp eq i64 %87, %1
  br i1 %88, label %73, label %75, !llvm.loop !8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk10EncodeLastEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i16
  %9 = shl i16 %8, 13
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i16
  %13 = or i16 %9, %12
  br label %148

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 8
  br i1 %17, label %50, label %18

18:                                               ; preds = %14
  %19 = and i64 %16, -4
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %41, %20 ]
  %22 = phi <2 x i16> [ <i16 -32768, i16 0>, %18 ], [ %39, %20 ]
  %23 = phi <2 x i16> [ zeroinitializer, %18 ], [ %40, %20 ]
  %24 = phi <2 x i32> [ <i32 0, i32 1>, %18 ], [ %42, %20 ]
  %25 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %21
  %26 = bitcast i8* %25 to <2 x i8>*
  %27 = load <2 x i8>, <2 x i8>* %26, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 2
  %29 = bitcast i8* %28 to <2 x i8>*
  %30 = load <2 x i8>, <2 x i8>* %29, align 1
  %31 = zext <2 x i8> %27 to <2 x i32>
  %32 = zext <2 x i8> %30 to <2 x i32>
  %33 = sub <2 x i32> <i32 13, i32 13>, %24
  %34 = sub <2 x i32> <i32 11, i32 11>, %24
  %35 = shl <2 x i32> %31, %33
  %36 = shl <2 x i32> %32, %34
  %37 = trunc <2 x i32> %35 to <2 x i16>
  %38 = trunc <2 x i32> %36 to <2 x i16>
  %39 = or <2 x i16> %22, %37
  %40 = or <2 x i16> %23, %38
  %41 = add i64 %21, 4
  %42 = add <2 x i32> %24, <i32 4, i32 4>
  %43 = icmp eq i64 %41, %19
  br i1 %43, label %44, label %20, !llvm.loop !9

44:                                               ; preds = %20
  %45 = or <2 x i16> %40, %39
  %46 = shufflevector <2 x i16> %45, <2 x i16> undef, <2 x i32> <i32 1, i32 undef>
  %47 = or <2 x i16> %45, %46
  %48 = extractelement <2 x i16> %47, i32 0
  %49 = icmp eq i64 %16, %19
  br i1 %49, label %148, label %135

50:                                               ; preds = %14
  %51 = icmp eq i64 %16, 0
  br i1 %51, label %148, label %52

52:                                               ; preds = %50
  %53 = icmp ult i64 %16, 8
  br i1 %53, label %118, label %54

54:                                               ; preds = %52
  %55 = and i64 %16, -8
  %56 = add i64 %55, -8
  %57 = lshr exact i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %56, 0
  br i1 %60, label %94, label %61

61:                                               ; preds = %54
  %62 = sub nuw nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %87, %63 ]
  %65 = phi <8 x i16> [ <i16 -16384, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, %61 ], [ %86, %63 ]
  %66 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %61 ], [ %88, %63 ]
  %67 = phi i64 [ %62, %61 ], [ %89, %63 ]
  %68 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %64
  %69 = bitcast i8* %68 to <8 x i8>*
  %70 = load <8 x i8>, <8 x i8>* %69, align 1
  %71 = zext <8 x i8> %70 to <8 x i32>
  %72 = shl <8 x i32> %66, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %73 = sub <8 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, %72
  %74 = shl <8 x i32> %71, %73
  %75 = trunc <8 x i32> %74 to <8 x i16>
  %76 = or <8 x i16> %65, %75
  %77 = or i64 %64, 8
  %78 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %77
  %79 = bitcast i8* %78 to <8 x i8>*
  %80 = load <8 x i8>, <8 x i8>* %79, align 1
  %81 = zext <8 x i8> %80 to <8 x i32>
  %82 = shl <8 x i32> %66, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %83 = sub <8 x i32> <i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4, i32 -4>, %82
  %84 = shl <8 x i32> %81, %83
  %85 = trunc <8 x i32> %84 to <8 x i16>
  %86 = or <8 x i16> %76, %85
  %87 = add i64 %64, 16
  %88 = add <8 x i32> %66, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %89 = add i64 %67, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %63, !llvm.loop !10

91:                                               ; preds = %63
  %92 = shl <8 x i32> %88, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %93 = sub <8 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, %92
  br label %94

94:                                               ; preds = %91, %54
  %95 = phi <8 x i16> [ undef, %54 ], [ %86, %91 ]
  %96 = phi i64 [ 0, %54 ], [ %87, %91 ]
  %97 = phi <8 x i16> [ <i16 -16384, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, %54 ], [ %86, %91 ]
  %98 = phi <8 x i32> [ <i32 12, i32 10, i32 8, i32 6, i32 4, i32 2, i32 0, i32 -2>, %54 ], [ %93, %91 ]
  %99 = icmp eq i64 %59, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %96
  %102 = bitcast i8* %101 to <8 x i8>*
  %103 = load <8 x i8>, <8 x i8>* %102, align 1
  %104 = zext <8 x i8> %103 to <8 x i32>
  %105 = shl <8 x i32> %104, %98
  %106 = trunc <8 x i32> %105 to <8 x i16>
  %107 = or <8 x i16> %97, %106
  br label %108

108:                                              ; preds = %94, %100
  %109 = phi <8 x i16> [ %95, %94 ], [ %107, %100 ]
  %110 = shufflevector <8 x i16> %109, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = or <8 x i16> %109, %110
  %112 = shufflevector <8 x i16> %111, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %113 = or <8 x i16> %111, %112
  %114 = shufflevector <8 x i16> %113, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %115 = or <8 x i16> %113, %114
  %116 = extractelement <8 x i16> %115, i32 0
  %117 = icmp eq i64 %16, %55
  br i1 %117, label %148, label %118

118:                                              ; preds = %108, %52
  %119 = phi i64 [ 0, %52 ], [ %55, %108 ]
  %120 = phi i16 [ -16384, %52 ], [ %116, %108 ]
  br label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %133, %121 ], [ %119, %118 ]
  %123 = phi i16 [ %132, %121 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %122
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = trunc i64 %122 to i32
  %128 = shl i32 %127, 1
  %129 = sub i32 12, %128
  %130 = shl i32 %126, %129
  %131 = trunc i32 %130 to i16
  %132 = or i16 %123, %131
  %133 = add nuw i64 %122, 1
  %134 = icmp eq i64 %133, %16
  br i1 %134, label %148, label %121, !llvm.loop !11

135:                                              ; preds = %44, %135
  %136 = phi i64 [ %146, %135 ], [ %19, %44 ]
  %137 = phi i16 [ %145, %135 ], [ %48, %44 ]
  %138 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %136
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = trunc i64 %136 to i32
  %142 = sub i32 13, %141
  %143 = shl i32 %140, %142
  %144 = trunc i32 %143 to i16
  %145 = or i16 %137, %144
  %146 = add nuw i64 %136, 1
  %147 = icmp eq i64 %146, %16
  br i1 %147, label %148, label %135, !llvm.loop !12

148:                                              ; preds = %135, %121, %44, %108, %50, %5
  %149 = phi i16 [ %13, %5 ], [ -16384, %50 ], [ %116, %108 ], [ %48, %44 ], [ %132, %121 ], [ %145, %135 ]
  ret i16 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc4rtcp17TransportFeedback9LastChunk8AppendToEPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.webrtc::rtcp::TransportFeedback::LastChunk"*, %"class.std::__1::vector"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  br i1 %5, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %12 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %1, i8* %7, i64 %10, i8* dereferenceable(1) %11)
  br label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %16
  %18 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %1, i8* %7, i8* %14, i8* %17)
  br label %19

19:                                               ; preds = %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"*, i8*, i64, i8* dereferenceable(1)) local_unnamed_addr #4 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %543, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = sub i64 %11, %14
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %326, label %17

17:                                               ; preds = %8
  %18 = sub i64 %14, %5
  %19 = icmp ult i64 %18, %2
  br i1 %19, label %20, label %96

20:                                               ; preds = %17
  %21 = sub i64 %2, %18
  %22 = bitcast i8** %12 to i64*
  %23 = getelementptr inbounds i8, i8* %13, i64 %21
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %91, label %25

25:                                               ; preds = %20
  %26 = icmp ult i64 %21, 32
  br i1 %26, label %27, label %29

27:                                               ; preds = %82, %29, %25
  %28 = phi i8* [ %13, %29 ], [ %13, %25 ], [ %36, %82 ]
  br label %86

29:                                               ; preds = %25
  %30 = getelementptr i8, i8* %3, i64 1
  %31 = icmp ult i8* %13, %30
  %32 = icmp ugt i8* %23, %3
  %33 = and i1 %31, %32
  br i1 %33, label %27, label %34

34:                                               ; preds = %29
  %35 = and i64 %21, -32
  %36 = getelementptr i8, i8* %13, i64 %35
  %37 = add i64 %35, -32
  %38 = lshr exact i64 %37, 5
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %37, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %34
  %43 = sub nuw nsw i64 %39, %40
  %44 = load i8, i8* %3, align 1, !alias.scope !13
  %45 = insertelement <16 x i8> undef, i8 %44, i32 0
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <16 x i32> zeroinitializer
  %47 = insertelement <16 x i8> undef, i8 %44, i32 0
  %48 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> zeroinitializer
  %49 = load i8, i8* %3, align 1, !alias.scope !13
  %50 = insertelement <16 x i8> undef, i8 %49, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = insertelement <16 x i8> undef, i8 %49, i32 0
  %53 = shufflevector <16 x i8> %52, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %54

54:                                               ; preds = %54, %42
  %55 = phi i64 [ 0, %42 ], [ %66, %54 ]
  %56 = phi i64 [ %43, %42 ], [ %67, %54 ]
  %57 = getelementptr i8, i8* %13, i64 %55
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %46, <16 x i8>* %58, align 1, !alias.scope !16, !noalias !13
  %59 = getelementptr i8, i8* %57, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %60, align 1, !alias.scope !16, !noalias !13
  %61 = or i64 %55, 32
  %62 = getelementptr i8, i8* %13, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %63, align 1, !alias.scope !16, !noalias !13
  %64 = getelementptr i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %65, align 1, !alias.scope !16, !noalias !13
  %66 = add i64 %55, 64
  %67 = add i64 %56, -2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %54, !llvm.loop !18

69:                                               ; preds = %54, %34
  %70 = phi i64 [ 0, %34 ], [ %66, %54 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr i8, i8* %13, i64 %70
  %74 = load i8, i8* %3, align 1, !alias.scope !13
  %75 = insertelement <16 x i8> undef, i8 %74, i32 0
  %76 = shufflevector <16 x i8> %75, <16 x i8> undef, <16 x i32> zeroinitializer
  %77 = insertelement <16 x i8> undef, i8 %74, i32 0
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> zeroinitializer
  %79 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !16, !noalias !13
  %80 = getelementptr i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !16, !noalias !13
  br label %82

82:                                               ; preds = %69, %72
  %83 = icmp eq i64 %21, %35
  br i1 %83, label %84, label %27

84:                                               ; preds = %86, %82
  %85 = ptrtoint i8* %23 to i64
  br label %91

86:                                               ; preds = %27, %86
  %87 = phi i8* [ %89, %86 ], [ %28, %27 ]
  %88 = load i8, i8* %3, align 1
  store i8 %88, i8* %87, align 1
  %89 = getelementptr inbounds i8, i8* %87, i64 1
  %90 = icmp eq i8* %89, %23
  br i1 %90, label %84, label %86, !llvm.loop !19

91:                                               ; preds = %84, %20
  %92 = phi i64 [ %85, %84 ], [ %14, %20 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %18, 0
  br i1 %93, label %543, label %94

94:                                               ; preds = %91
  %95 = inttoptr i64 %92 to i8*
  br label %96

96:                                               ; preds = %94, %17
  %97 = phi i64 [ %92, %94 ], [ %14, %17 ]
  %98 = phi i8* [ %95, %94 ], [ %13, %17 ]
  %99 = phi i64 [ %18, %94 ], [ %2, %17 ]
  %100 = getelementptr inbounds i8, i8* %1, i64 %2
  %101 = ptrtoint i8* %100 to i64
  %102 = sub i64 %97, %101
  %103 = getelementptr inbounds i8, i8* %1, i64 %102
  %104 = icmp ult i8* %103, %13
  br i1 %104, label %105, label %205

105:                                              ; preds = %96
  %106 = sub i64 %2, %97
  %107 = getelementptr i8, i8* %13, i64 %106
  %108 = ptrtoint i8* %107 to i64
  %109 = icmp ult i8* %107, inttoptr (i64 32 to i8*)
  br i1 %109, label %110, label %113

110:                                              ; preds = %200, %113, %105
  %111 = phi i8* [ %103, %113 ], [ %103, %105 ], [ %123, %200 ]
  %112 = phi i8* [ %98, %113 ], [ %98, %105 ], [ %124, %200 ]
  br label %212

113:                                              ; preds = %105
  %114 = sub i64 %2, %97
  %115 = getelementptr i8, i8* %13, i64 %114
  %116 = ptrtoint i8* %115 to i64
  %117 = getelementptr i8, i8* %98, i64 %116
  %118 = icmp ult i8* %98, %13
  %119 = icmp ult i8* %103, %117
  %120 = and i1 %118, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %113
  %122 = and i64 %108, -32
  %123 = getelementptr i8, i8* %103, i64 %122
  %124 = getelementptr i8, i8* %98, i64 %122
  %125 = add i64 %122, -32
  %126 = lshr exact i64 %125, 5
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp ult i64 %125, 96
  br i1 %129, label %181, label %130

130:                                              ; preds = %121
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %179, %132 ]
  %135 = getelementptr i8, i8* %103, i64 %133
  %136 = getelementptr i8, i8* %98, i64 %133
  %137 = bitcast i8* %135 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !20
  %139 = getelementptr i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !20
  %142 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %142, align 1, !alias.scope !23, !noalias !20
  %143 = getelementptr i8, i8* %136, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %144, align 1, !alias.scope !23, !noalias !20
  %145 = or i64 %133, 32
  %146 = getelementptr i8, i8* %103, i64 %145
  %147 = getelementptr i8, i8* %98, i64 %145
  %148 = bitcast i8* %146 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !20
  %150 = getelementptr i8, i8* %146, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !20
  %153 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !23, !noalias !20
  %154 = getelementptr i8, i8* %147, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !23, !noalias !20
  %156 = or i64 %133, 64
  %157 = getelementptr i8, i8* %103, i64 %156
  %158 = getelementptr i8, i8* %98, i64 %156
  %159 = bitcast i8* %157 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !20
  %161 = getelementptr i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !20
  %164 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %164, align 1, !alias.scope !23, !noalias !20
  %165 = getelementptr i8, i8* %158, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %166, align 1, !alias.scope !23, !noalias !20
  %167 = or i64 %133, 96
  %168 = getelementptr i8, i8* %103, i64 %167
  %169 = getelementptr i8, i8* %98, i64 %167
  %170 = bitcast i8* %168 to <16 x i8>*
  %171 = load <16 x i8>, <16 x i8>* %170, align 1, !alias.scope !20
  %172 = getelementptr i8, i8* %168, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !20
  %175 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %171, <16 x i8>* %175, align 1, !alias.scope !23, !noalias !20
  %176 = getelementptr i8, i8* %169, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %177, align 1, !alias.scope !23, !noalias !20
  %178 = add i64 %133, 128
  %179 = add i64 %134, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %132, !llvm.loop !25

181:                                              ; preds = %132, %121
  %182 = phi i64 [ 0, %121 ], [ %178, %132 ]
  %183 = icmp eq i64 %128, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %197, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %198, %184 ], [ %128, %181 ]
  %187 = getelementptr i8, i8* %103, i64 %185
  %188 = getelementptr i8, i8* %98, i64 %185
  %189 = bitcast i8* %187 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !20
  %191 = getelementptr i8, i8* %187, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !20
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %194, align 1, !alias.scope !23, !noalias !20
  %195 = getelementptr i8, i8* %188, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %196, align 1, !alias.scope !23, !noalias !20
  %197 = add i64 %185, 32
  %198 = add i64 %186, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !26

200:                                              ; preds = %184, %181
  %201 = icmp eq i64 %122, %108
  br i1 %201, label %202, label %110

202:                                              ; preds = %212, %200
  %203 = phi i8* [ %124, %200 ], [ %217, %212 ]
  %204 = ptrtoint i8* %203 to i64
  br label %205

205:                                              ; preds = %202, %96
  %206 = phi i64 [ %204, %202 ], [ %97, %96 ]
  %207 = bitcast i8** %12 to i64*
  store i64 %206, i64* %207, align 8
  %208 = icmp eq i64 %102, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = sub i64 0, %102
  %211 = getelementptr inbounds i8, i8* %98, i64 %210
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %1, i64 %102, i1 false) #14
  br label %219

212:                                              ; preds = %110, %212
  %213 = phi i8* [ %216, %212 ], [ %111, %110 ]
  %214 = phi i8* [ %217, %212 ], [ %112, %110 ]
  %215 = load i8, i8* %213, align 1
  store i8 %215, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %213, i64 1
  %217 = getelementptr inbounds i8, i8* %214, i64 1
  %218 = icmp eq i8* %216, %13
  br i1 %218, label %202, label %212, !llvm.loop !28

219:                                              ; preds = %205, %209
  %220 = icmp ugt i8* %1, %3
  br i1 %220, label %226, label %221

221:                                              ; preds = %219
  %222 = load i8*, i8** %12, align 8
  %223 = icmp ugt i8* %222, %3
  %224 = getelementptr inbounds i8, i8* %3, i64 %2
  %225 = select i1 %223, i8* %224, i8* %3
  br label %226

226:                                              ; preds = %221, %219
  %227 = phi i8* [ %3, %219 ], [ %225, %221 ]
  %228 = icmp ult i64 %99, 32
  br i1 %228, label %286, label %229

229:                                              ; preds = %226
  %230 = getelementptr i8, i8* %1, i64 %99
  %231 = getelementptr i8, i8* %227, i64 1
  %232 = icmp ugt i8* %231, %1
  %233 = icmp ult i8* %227, %230
  %234 = and i1 %232, %233
  br i1 %234, label %286, label %235

235:                                              ; preds = %229
  %236 = and i64 %99, -32
  %237 = getelementptr i8, i8* %1, i64 %236
  %238 = sub i64 %99, %236
  %239 = add i64 %236, -32
  %240 = lshr exact i64 %239, 5
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 1
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %271, label %244

244:                                              ; preds = %235
  %245 = sub nuw nsw i64 %241, %242
  %246 = load i8, i8* %227, align 1, !alias.scope !29
  %247 = insertelement <16 x i8> undef, i8 %246, i32 0
  %248 = shufflevector <16 x i8> %247, <16 x i8> undef, <16 x i32> zeroinitializer
  %249 = insertelement <16 x i8> undef, i8 %246, i32 0
  %250 = shufflevector <16 x i8> %249, <16 x i8> undef, <16 x i32> zeroinitializer
  %251 = load i8, i8* %227, align 1, !alias.scope !29
  %252 = insertelement <16 x i8> undef, i8 %251, i32 0
  %253 = shufflevector <16 x i8> %252, <16 x i8> undef, <16 x i32> zeroinitializer
  %254 = insertelement <16 x i8> undef, i8 %251, i32 0
  %255 = shufflevector <16 x i8> %254, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %256

256:                                              ; preds = %256, %244
  %257 = phi i64 [ 0, %244 ], [ %268, %256 ]
  %258 = phi i64 [ %245, %244 ], [ %269, %256 ]
  %259 = getelementptr i8, i8* %1, i64 %257
  %260 = bitcast i8* %259 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %260, align 1, !alias.scope !32, !noalias !29
  %261 = getelementptr i8, i8* %259, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %262, align 1, !alias.scope !32, !noalias !29
  %263 = or i64 %257, 32
  %264 = getelementptr i8, i8* %1, i64 %263
  %265 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %265, align 1, !alias.scope !32, !noalias !29
  %266 = getelementptr i8, i8* %264, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %267, align 1, !alias.scope !32, !noalias !29
  %268 = add i64 %257, 64
  %269 = add i64 %258, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %256, !llvm.loop !34

271:                                              ; preds = %256, %235
  %272 = phi i64 [ 0, %235 ], [ %268, %256 ]
  %273 = icmp eq i64 %242, 0
  br i1 %273, label %284, label %274

274:                                              ; preds = %271
  %275 = getelementptr i8, i8* %1, i64 %272
  %276 = load i8, i8* %227, align 1, !alias.scope !29
  %277 = insertelement <16 x i8> undef, i8 %276, i32 0
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <16 x i32> zeroinitializer
  %279 = insertelement <16 x i8> undef, i8 %276, i32 0
  %280 = shufflevector <16 x i8> %279, <16 x i8> undef, <16 x i32> zeroinitializer
  %281 = bitcast i8* %275 to <16 x i8>*
  store <16 x i8> %278, <16 x i8>* %281, align 1, !alias.scope !32, !noalias !29
  %282 = getelementptr i8, i8* %275, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1, !alias.scope !32, !noalias !29
  br label %284

284:                                              ; preds = %271, %274
  %285 = icmp eq i64 %99, %236
  br i1 %285, label %543, label %286

286:                                              ; preds = %284, %229, %226
  %287 = phi i8* [ %1, %229 ], [ %1, %226 ], [ %237, %284 ]
  %288 = phi i64 [ %99, %229 ], [ %99, %226 ], [ %238, %284 ]
  %289 = add i64 %288, -1
  %290 = and i64 %288, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %301, label %292

292:                                              ; preds = %286, %292
  %293 = phi i8* [ %297, %292 ], [ %287, %286 ]
  %294 = phi i64 [ %298, %292 ], [ %288, %286 ]
  %295 = phi i64 [ %299, %292 ], [ %290, %286 ]
  %296 = load i8, i8* %227, align 1
  store i8 %296, i8* %293, align 1
  %297 = getelementptr inbounds i8, i8* %293, i64 1
  %298 = add i64 %294, -1
  %299 = add i64 %295, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %292, !llvm.loop !35

301:                                              ; preds = %292, %286
  %302 = phi i8* [ %287, %286 ], [ %297, %292 ]
  %303 = phi i64 [ %288, %286 ], [ %298, %292 ]
  %304 = icmp ult i64 %289, 7
  br i1 %304, label %543, label %305

305:                                              ; preds = %301, %305
  %306 = phi i8* [ %323, %305 ], [ %302, %301 ]
  %307 = phi i64 [ %324, %305 ], [ %303, %301 ]
  %308 = load i8, i8* %227, align 1
  store i8 %308, i8* %306, align 1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = load i8, i8* %227, align 1
  store i8 %310, i8* %309, align 1
  %311 = getelementptr inbounds i8, i8* %306, i64 2
  %312 = load i8, i8* %227, align 1
  store i8 %312, i8* %311, align 1
  %313 = getelementptr inbounds i8, i8* %306, i64 3
  %314 = load i8, i8* %227, align 1
  store i8 %314, i8* %313, align 1
  %315 = getelementptr inbounds i8, i8* %306, i64 4
  %316 = load i8, i8* %227, align 1
  store i8 %316, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %306, i64 5
  %318 = load i8, i8* %227, align 1
  store i8 %318, i8* %317, align 1
  %319 = getelementptr inbounds i8, i8* %306, i64 6
  %320 = load i8, i8* %227, align 1
  store i8 %320, i8* %319, align 1
  %321 = getelementptr inbounds i8, i8* %306, i64 7
  %322 = load i8, i8* %227, align 1
  store i8 %322, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %306, i64 8
  %324 = add i64 %307, -8
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %543, label %305, !llvm.loop !36

326:                                              ; preds = %8
  %327 = bitcast i8** %12 to i64*
  %328 = bitcast %"class.std::__1::vector"* %0 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %14, %329
  %331 = add i64 %330, %2
  %332 = icmp slt i64 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #15
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %11, %329
  %337 = icmp ult i64 %336, 4611686018427387903
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = sub i64 %5, %329
  br label %346

340:                                              ; preds = %335
  %341 = shl i64 %336, 1
  %342 = icmp ult i64 %341, %331
  %343 = select i1 %342, i64 %331, i64 %341
  %344 = sub i64 %5, %329
  %345 = icmp eq i64 %343, 0
  br i1 %345, label %350, label %346

346:                                              ; preds = %338, %340
  %347 = phi i64 [ %339, %338 ], [ %344, %340 ]
  %348 = phi i64 [ 9223372036854775807, %338 ], [ %343, %340 ]
  %349 = tail call i8* @_Znwm(i64 %348) #16
  br label %350

350:                                              ; preds = %340, %346
  %351 = phi i64 [ %347, %346 ], [ %344, %340 ]
  %352 = phi i64 [ %348, %346 ], [ 0, %340 ]
  %353 = phi i8* [ %349, %346 ], [ null, %340 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 %351
  %355 = getelementptr inbounds i8, i8* %353, i64 %352
  %356 = getelementptr inbounds i8, i8* %354, i64 %2
  %357 = icmp ult i64 %2, 32
  br i1 %357, label %413, label %358

358:                                              ; preds = %350
  %359 = getelementptr i8, i8* %3, i64 1
  %360 = icmp ult i8* %354, %359
  %361 = icmp ugt i8* %356, %3
  %362 = and i1 %360, %361
  br i1 %362, label %413, label %363

363:                                              ; preds = %358
  %364 = and i64 %2, -32
  %365 = getelementptr i8, i8* %354, i64 %364
  %366 = add i64 %364, -32
  %367 = lshr exact i64 %366, 5
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 1
  %370 = icmp eq i64 %366, 0
  br i1 %370, label %398, label %371

371:                                              ; preds = %363
  %372 = sub nuw nsw i64 %368, %369
  %373 = load i8, i8* %3, align 1, !alias.scope !37
  %374 = insertelement <16 x i8> undef, i8 %373, i32 0
  %375 = shufflevector <16 x i8> %374, <16 x i8> undef, <16 x i32> zeroinitializer
  %376 = insertelement <16 x i8> undef, i8 %373, i32 0
  %377 = shufflevector <16 x i8> %376, <16 x i8> undef, <16 x i32> zeroinitializer
  %378 = load i8, i8* %3, align 1, !alias.scope !37
  %379 = insertelement <16 x i8> undef, i8 %378, i32 0
  %380 = shufflevector <16 x i8> %379, <16 x i8> undef, <16 x i32> zeroinitializer
  %381 = insertelement <16 x i8> undef, i8 %378, i32 0
  %382 = shufflevector <16 x i8> %381, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %383

383:                                              ; preds = %383, %371
  %384 = phi i64 [ 0, %371 ], [ %395, %383 ]
  %385 = phi i64 [ %372, %371 ], [ %396, %383 ]
  %386 = getelementptr i8, i8* %354, i64 %384
  %387 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %387, align 1, !alias.scope !40, !noalias !37
  %388 = getelementptr i8, i8* %386, i64 16
  %389 = bitcast i8* %388 to <16 x i8>*
  store <16 x i8> %377, <16 x i8>* %389, align 1, !alias.scope !40, !noalias !37
  %390 = or i64 %384, 32
  %391 = getelementptr i8, i8* %354, i64 %390
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %380, <16 x i8>* %392, align 1, !alias.scope !40, !noalias !37
  %393 = getelementptr i8, i8* %391, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %382, <16 x i8>* %394, align 1, !alias.scope !40, !noalias !37
  %395 = add i64 %384, 64
  %396 = add i64 %385, -2
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %383, !llvm.loop !42

398:                                              ; preds = %383, %363
  %399 = phi i64 [ 0, %363 ], [ %395, %383 ]
  %400 = icmp eq i64 %369, 0
  br i1 %400, label %411, label %401

401:                                              ; preds = %398
  %402 = getelementptr i8, i8* %354, i64 %399
  %403 = load i8, i8* %3, align 1, !alias.scope !37
  %404 = insertelement <16 x i8> undef, i8 %403, i32 0
  %405 = shufflevector <16 x i8> %404, <16 x i8> undef, <16 x i32> zeroinitializer
  %406 = insertelement <16 x i8> undef, i8 %403, i32 0
  %407 = shufflevector <16 x i8> %406, <16 x i8> undef, <16 x i32> zeroinitializer
  %408 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %405, <16 x i8>* %408, align 1, !alias.scope !40, !noalias !37
  %409 = getelementptr i8, i8* %402, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %407, <16 x i8>* %410, align 1, !alias.scope !40, !noalias !37
  br label %411

411:                                              ; preds = %398, %401
  %412 = icmp eq i64 %364, %2
  br i1 %412, label %420, label %413

413:                                              ; preds = %411, %358, %350
  %414 = phi i8* [ %354, %358 ], [ %354, %350 ], [ %365, %411 ]
  br label %415

415:                                              ; preds = %413, %415
  %416 = phi i8* [ %418, %415 ], [ %414, %413 ]
  %417 = load i8, i8* %3, align 1
  store i8 %417, i8* %416, align 1
  %418 = getelementptr inbounds i8, i8* %416, i64 1
  %419 = icmp eq i8* %356, %418
  br i1 %419, label %420, label %415, !llvm.loop !43

420:                                              ; preds = %415, %411
  %421 = ptrtoint i8* %355 to i64
  %422 = load i8*, i8** %6, align 8
  %423 = ptrtoint i8* %422 to i64
  %424 = sub i64 %5, %423
  %425 = sub i64 0, %424
  %426 = getelementptr inbounds i8, i8* %354, i64 %425
  %427 = ptrtoint i8* %426 to i64
  %428 = icmp sgt i64 %424, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %420
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %426, i8* align 1 %422, i64 %424, i1 false) #14
  br label %430

430:                                              ; preds = %429, %420
  %431 = load i8*, i8** %12, align 8
  %432 = icmp eq i8* %431, %1
  br i1 %432, label %537, label %433

433:                                              ; preds = %430
  %434 = ptrtoint i8* %431 to i64
  %435 = sub i64 %434, %5
  %436 = icmp ult i64 %435, 32
  br i1 %436, label %527, label %437

437:                                              ; preds = %433
  %438 = add i64 %351, %2
  %439 = sub i64 %438, %5
  %440 = getelementptr i8, i8* %431, i64 %439
  %441 = ptrtoint i8* %440 to i64
  %442 = getelementptr i8, i8* %353, i64 %441
  %443 = icmp ult i8* %356, %431
  %444 = icmp ugt i8* %442, %1
  %445 = and i1 %443, %444
  br i1 %445, label %527, label %446

446:                                              ; preds = %437
  %447 = and i64 %435, -32
  %448 = getelementptr i8, i8* %356, i64 %447
  %449 = getelementptr i8, i8* %1, i64 %447
  %450 = add i64 %447, -32
  %451 = lshr exact i64 %450, 5
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 96
  br i1 %454, label %506, label %455

455:                                              ; preds = %446
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %503, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %504, %457 ]
  %460 = getelementptr i8, i8* %356, i64 %458
  %461 = getelementptr i8, i8* %1, i64 %458
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !44
  %464 = getelementptr i8, i8* %461, i64 16
  %465 = bitcast i8* %464 to <16 x i8>*
  %466 = load <16 x i8>, <16 x i8>* %465, align 1, !alias.scope !44
  %467 = bitcast i8* %460 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %467, align 1, !alias.scope !47, !noalias !44
  %468 = getelementptr i8, i8* %460, i64 16
  %469 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %466, <16 x i8>* %469, align 1, !alias.scope !47, !noalias !44
  %470 = or i64 %458, 32
  %471 = getelementptr i8, i8* %356, i64 %470
  %472 = getelementptr i8, i8* %1, i64 %470
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !44
  %475 = getelementptr i8, i8* %472, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  %477 = load <16 x i8>, <16 x i8>* %476, align 1, !alias.scope !44
  %478 = bitcast i8* %471 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %478, align 1, !alias.scope !47, !noalias !44
  %479 = getelementptr i8, i8* %471, i64 16
  %480 = bitcast i8* %479 to <16 x i8>*
  store <16 x i8> %477, <16 x i8>* %480, align 1, !alias.scope !47, !noalias !44
  %481 = or i64 %458, 64
  %482 = getelementptr i8, i8* %356, i64 %481
  %483 = getelementptr i8, i8* %1, i64 %481
  %484 = bitcast i8* %483 to <16 x i8>*
  %485 = load <16 x i8>, <16 x i8>* %484, align 1, !alias.scope !44
  %486 = getelementptr i8, i8* %483, i64 16
  %487 = bitcast i8* %486 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1, !alias.scope !44
  %489 = bitcast i8* %482 to <16 x i8>*
  store <16 x i8> %485, <16 x i8>* %489, align 1, !alias.scope !47, !noalias !44
  %490 = getelementptr i8, i8* %482, i64 16
  %491 = bitcast i8* %490 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %491, align 1, !alias.scope !47, !noalias !44
  %492 = or i64 %458, 96
  %493 = getelementptr i8, i8* %356, i64 %492
  %494 = getelementptr i8, i8* %1, i64 %492
  %495 = bitcast i8* %494 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1, !alias.scope !44
  %497 = getelementptr i8, i8* %494, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1, !alias.scope !44
  %500 = bitcast i8* %493 to <16 x i8>*
  store <16 x i8> %496, <16 x i8>* %500, align 1, !alias.scope !47, !noalias !44
  %501 = getelementptr i8, i8* %493, i64 16
  %502 = bitcast i8* %501 to <16 x i8>*
  store <16 x i8> %499, <16 x i8>* %502, align 1, !alias.scope !47, !noalias !44
  %503 = add i64 %458, 128
  %504 = add i64 %459, -4
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %457, !llvm.loop !49

506:                                              ; preds = %457, %446
  %507 = phi i64 [ 0, %446 ], [ %503, %457 ]
  %508 = icmp eq i64 %453, 0
  br i1 %508, label %525, label %509

509:                                              ; preds = %506, %509
  %510 = phi i64 [ %522, %509 ], [ %507, %506 ]
  %511 = phi i64 [ %523, %509 ], [ %453, %506 ]
  %512 = getelementptr i8, i8* %356, i64 %510
  %513 = getelementptr i8, i8* %1, i64 %510
  %514 = bitcast i8* %513 to <16 x i8>*
  %515 = load <16 x i8>, <16 x i8>* %514, align 1, !alias.scope !44
  %516 = getelementptr i8, i8* %513, i64 16
  %517 = bitcast i8* %516 to <16 x i8>*
  %518 = load <16 x i8>, <16 x i8>* %517, align 1, !alias.scope !44
  %519 = bitcast i8* %512 to <16 x i8>*
  store <16 x i8> %515, <16 x i8>* %519, align 1, !alias.scope !47, !noalias !44
  %520 = getelementptr i8, i8* %512, i64 16
  %521 = bitcast i8* %520 to <16 x i8>*
  store <16 x i8> %518, <16 x i8>* %521, align 1, !alias.scope !47, !noalias !44
  %522 = add i64 %510, 32
  %523 = add i64 %511, -1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %509, !llvm.loop !50

525:                                              ; preds = %509, %506
  %526 = icmp eq i64 %435, %447
  br i1 %526, label %537, label %527

527:                                              ; preds = %525, %437, %433
  %528 = phi i8* [ %356, %437 ], [ %356, %433 ], [ %448, %525 ]
  %529 = phi i8* [ %1, %437 ], [ %1, %433 ], [ %449, %525 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i8* [ %535, %530 ], [ %528, %527 ]
  %532 = phi i8* [ %534, %530 ], [ %529, %527 ]
  %533 = load i8, i8* %532, align 1
  store i8 %533, i8* %531, align 1
  %534 = getelementptr inbounds i8, i8* %532, i64 1
  %535 = getelementptr inbounds i8, i8* %531, i64 1
  %536 = icmp eq i8* %534, %431
  br i1 %536, label %537, label %530, !llvm.loop !51

537:                                              ; preds = %530, %525, %430
  %538 = phi i8* [ %356, %430 ], [ %448, %525 ], [ %535, %530 ]
  %539 = ptrtoint i8* %538 to i64
  %540 = load i8*, i8** %6, align 8
  store i64 %427, i64* %328, align 8
  store i64 %539, i64* %327, align 8
  store i64 %421, i64* %10, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %543, label %542

542:                                              ; preds = %537
  tail call void @_ZdlPv(i8* nonnull %540) #16
  br label %543

543:                                              ; preds = %301, %305, %284, %542, %537, %91, %4
  %544 = phi i8* [ %1, %4 ], [ %1, %91 ], [ %354, %537 ], [ %354, %542 ], [ %1, %284 ], [ %1, %305 ], [ %1, %301 ]
  ret i8* %544
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #4 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #14
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !52
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !52
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !55, !noalias !52
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !55, !noalias !52
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !52
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !52
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !55, !noalias !52
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !55, !noalias !52
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !52
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !52
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !55, !noalias !52
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !55, !noalias !52
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !52
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !52
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !55, !noalias !52
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !55, !noalias !52
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !57

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !52
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !52
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !55, !noalias !52
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !55, !noalias !52
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !58

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #14
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !59

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #14
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #15
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #16
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !60
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !60
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !63, !noalias !60
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !63, !noalias !60
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !60
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !60
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !63, !noalias !60
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !63, !noalias !60
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !60
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !60
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !63, !noalias !60
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !63, !noalias !60
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !60
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !60
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !63, !noalias !60
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !63, !noalias !60
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !65

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !60
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !60
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !63, !noalias !60
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !63, !noalias !60
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !66

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !67

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #14
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !68
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !68
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !71, !noalias !68
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !71, !noalias !68
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !68
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !68
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !71, !noalias !68
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !71, !noalias !68
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !68
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !68
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !71, !noalias !68
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !71, !noalias !68
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !68
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !68
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !71, !noalias !68
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !71, !noalias !68
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !73

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !68
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !68
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !71, !noalias !68
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !71, !noalias !68
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !74

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !75

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #16
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk6DecodeEtm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture, i16 zeroext, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i16 %1, -1
  br i1 %4, label %5, label %27

5:                                                ; preds = %3
  %6 = and i16 %1, 8191
  %7 = zext i16 %6 to i64
  %8 = icmp ugt i64 %7, %2
  %9 = select i1 %8, i64 %2, i64 %7
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %9, i64* %10, align 8
  %11 = lshr i16 %1, 13
  %12 = trunc i16 %11 to i8
  %13 = and i8 %12, 3
  %14 = icmp ugt i8 %13, 1
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  %16 = zext i1 %14 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 1, i8* %17, align 8
  %18 = icmp eq i64 %9, 0
  br i1 %18, label %71, label %19

19:                                               ; preds = %5, %19
  %20 = phi i64 [ %22, %19 ], [ 0, %5 ]
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %20
  store i8 %13, i8* %21, align 1
  %22 = add nuw i64 %20, 1
  %23 = load i64, i64* %10, align 8
  %24 = icmp ult i64 %23, 14
  %25 = select i1 %24, i64 %23, i64 14
  %26 = icmp ult i64 %22, %25
  br i1 %26, label %19, label %71

27:                                               ; preds = %3
  %28 = and i16 %1, 16384
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %50

30:                                               ; preds = %27
  %31 = icmp ult i64 %2, 14
  %32 = select i1 %31, i64 %2, i64 14
  %33 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 0, i8* %35, align 8
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %30
  %38 = zext i16 %1 to i32
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %47, %39 ]
  %41 = trunc i64 %40 to i32
  %42 = sub i32 13, %41
  %43 = lshr i32 %38, %42
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %40
  store i8 %45, i8* %46, align 1
  %47 = add nuw i64 %40, 1
  %48 = load i64, i64* %33, align 8
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %39, label %71

50:                                               ; preds = %27
  %51 = icmp ult i64 %2, 7
  %52 = select i1 %51, i64 %2, i64 7
  %53 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 0, i8* %55, align 8
  %56 = icmp eq i64 %52, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %50
  %58 = zext i16 %1 to i32
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %68, %59 ]
  %61 = trunc i64 %60 to i32
  %62 = shl i32 %61, 1
  %63 = sub i32 12, %62
  %64 = lshr i32 %58, %63
  %65 = trunc i32 %64 to i8
  %66 = and i8 %65, 3
  %67 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %60
  store i8 %66, i8* %67, align 1
  %68 = add nuw i64 %60, 1
  %69 = load i64, i64* %53, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %59, label %71

71:                                               ; preds = %59, %39, %19, %50, %30, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk15DecodeRunLengthEtm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture, i16 zeroext, i64) local_unnamed_addr #4 align 2 {
  %4 = and i16 %1, 8191
  %5 = zext i16 %4 to i64
  %6 = icmp ugt i64 %5, %2
  %7 = select i1 %6, i64 %2, i64 %5
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %7, i64* %8, align 8
  %9 = lshr i16 %1, 13
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 3
  %12 = icmp ugt i8 %11, 1
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 1, i8* %15, align 8
  %16 = icmp eq i64 %7, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %18, %3
  ret void

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %3 ]
  %20 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %19
  store i8 %11, i8* %20, align 1
  %21 = add nuw i64 %19, 1
  %22 = load i64, i64* %8, align 8
  %23 = icmp ult i64 %22, 14
  %24 = select i1 %23, i64 %22, i64 14
  %25 = icmp ult i64 %21, %24
  br i1 %25, label %18, label %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk12DecodeOneBitEtm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture, i16 zeroext, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp ult i64 %2, 14
  %5 = select i1 %4, i64 %2, i64 14
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i16 %1 to i32
  br label %13

12:                                               ; preds = %13, %3
  ret void

13:                                               ; preds = %10, %13
  %14 = phi i64 [ 0, %10 ], [ %21, %13 ]
  %15 = trunc i64 %14 to i32
  %16 = sub i32 13, %15
  %17 = lshr i32 %11, %16
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %14
  store i8 %19, i8* %20, align 1
  %21 = add nuw i64 %14, 1
  %22 = load i64, i64* %6, align 8
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %13, label %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk12DecodeTwoBitEtm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* nocapture, i16 zeroext, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp ult i64 %2, 7
  %5 = select i1 %4, i64 %2, i64 7
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 2
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 4
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i16 %1 to i32
  br label %13

12:                                               ; preds = %13, %3
  ret void

13:                                               ; preds = %10, %13
  %14 = phi i64 [ 0, %10 ], [ %22, %13 ]
  %15 = trunc i64 %14 to i32
  %16 = shl i32 %15, 1
  %17 = sub i32 12, %16
  %18 = lshr i32 %11, %17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 3
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %0, i64 0, i32 0, i64 %14
  store i8 %20, i8* %21, align 1
  %22 = add nuw i64 %14, 1
  %23 = load i64, i64* %6, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %13, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackC2Ev(%"class.webrtc::rtcp::TransportFeedback"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %4, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  store i16 0, i16* %6, align 2
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  store i16 0, i16* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %14 = bitcast i64* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 80, i1 false) #14
  store i8 1, i8* %13, align 8
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  store i64 20, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackC2Ebb(%"class.webrtc::rtcp::TransportFeedback"* nocapture, i1 zeroext, i1 zeroext) unnamed_addr #4 align 2 {
  %4 = zext i1 %1 to i8
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %8, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  store i8 %5, i8* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  store i16 0, i16* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  store i8 %4, i8* %14, align 1
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %18 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 80, i1 false)
  store i8 1, i8* %17, align 8
  %19 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  store i64 20, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackC2ERKS1_(%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::TransportFeedback"* nocapture readonly dereferenceable(152)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp10RtcpPacketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp5RtpfbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 8
  %14 = bitcast %"class.std::__1::vector.2"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #14
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 8, i32 0, i32 1
  %16 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.2"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 6
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %21, 3074457345618258602
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.2"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %23
  %28 = tail call i8* @_Znwm(i64 %20) #16
  %29 = bitcast i8* %28 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  %30 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %31 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %30 to i8**
  store i8* %28, i8** %31, align 8
  %32 = bitcast %"class.std::__1::vector.2"* %12 to i8**
  store i8* %28, i8** %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %29, i64 %21
  %34 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %33, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %13, i64 0, i32 0, i32 0
  %36 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %35, align 8
  %37 = load i64, i64* %16, align 8
  %38 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %30 to i64*
  %39 = ptrtoint i8* %28 to i64
  %40 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %36 to i64
  %41 = sub i64 %37, %40
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %27
  %44 = udiv exact i64 %41, 6
  %45 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %28, i8* align 2 %45, i64 %41, i1 false) #14
  %46 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %29, i64 %44
  %47 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %46 to i64
  br label %48

48:                                               ; preds = %43, %27
  %49 = phi i64 [ %47, %43 ], [ %39, %27 ]
  store i64 %49, i64* %38, align 8
  br label %50

50:                                               ; preds = %2, %48
  %51 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %52 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 9
  %53 = bitcast %"class.std::__1::vector.2"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #14
  %54 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 9, i32 0, i32 1
  %55 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.2"* %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = sdiv exact i64 %59, 6
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %89, label %62

62:                                               ; preds = %50
  %63 = icmp ugt i64 %60, 3074457345618258602
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::vector.2"* %51 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #15
  unreachable

66:                                               ; preds = %62
  %67 = tail call i8* @_Znwm(i64 %59) #16
  %68 = bitcast i8* %67 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  %69 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %70 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %69 to i8**
  store i8* %67, i8** %70, align 8
  %71 = bitcast %"class.std::__1::vector.2"* %51 to i8**
  store i8* %67, i8** %71, align 8
  %72 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %68, i64 %60
  %73 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %72, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %52, i64 0, i32 0, i32 0
  %75 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %74, align 8
  %76 = load i64, i64* %55, align 8
  %77 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %69 to i64*
  %78 = ptrtoint i8* %67 to i64
  %79 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %75 to i64
  %80 = sub i64 %76, %79
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %66
  %83 = udiv exact i64 %80, 6
  %84 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %67, i8* align 2 %84, i64 %80, i1 false) #14
  %85 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %68, i64 %83
  %86 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %85 to i64
  br label %87

87:                                               ; preds = %82, %66
  %88 = phi i64 [ %86, %82 ], [ %78, %66 ]
  store i64 %88, i64* %77, align 8
  br label %89

89:                                               ; preds = %50, %87
  %90 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10
  %91 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 10
  %92 = bitcast %"class.std::__1::vector.9"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #14
  %93 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 10, i32 0, i32 1
  %94 = bitcast i16** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.9"* %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 1
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %89
  %102 = icmp slt i64 %98, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector.9"* %90 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #15
  unreachable

105:                                              ; preds = %101
  %106 = tail call i8* @_Znwm(i64 %98) #16
  %107 = bitcast i8* %106 to i16*
  %108 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %109 = bitcast i16** %108 to i8**
  store i8* %106, i8** %109, align 8
  %110 = bitcast %"class.std::__1::vector.9"* %90 to i8**
  store i8* %106, i8** %110, align 8
  %111 = getelementptr inbounds i16, i16* %107, i64 %99
  %112 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i16* %111, i16** %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %91, i64 0, i32 0, i32 0
  %114 = load i16*, i16** %113, align 8
  %115 = load i64, i64* %94, align 8
  %116 = bitcast i16** %108 to i64*
  %117 = ptrtoint i8* %106 to i64
  %118 = ptrtoint i16* %114 to i64
  %119 = sub i64 %115, %118
  %120 = icmp sgt i64 %119, 0
  br i1 %120, label %121, label %126

121:                                              ; preds = %105
  %122 = lshr exact i64 %119, 1
  %123 = bitcast i16* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %106, i8* align 2 %123, i64 %119, i1 false) #14
  %124 = getelementptr inbounds i16, i16* %107, i64 %122
  %125 = ptrtoint i16* %124 to i64
  br label %126

126:                                              ; preds = %121, %105
  %127 = phi i64 [ %125, %121 ], [ %117, %105 ]
  store i64 %127, i64* %116, align 8
  br label %128

128:                                              ; preds = %89, %126
  %129 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 0
  %130 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 11, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 40, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackC2EOS1_(%"class.webrtc::rtcp::TransportFeedback"* nocapture, %"class.webrtc::rtcp::TransportFeedback"* dereferenceable(152)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  store i8 %8, i8* %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 2
  %11 = load i16, i16* %10, align 2
  store i16 %11, i16* %9, align 2
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 3
  %14 = load i16, i16* %13, align 4
  store i16 %14, i16* %12, align 4
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 5
  %20 = load i8, i8* %19, align 4
  store i8 %20, i8* %18, align 4
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 6
  %23 = load i8, i8* %22, align 1, !range !2
  store i8 %23, i8* %21, align 1
  %24 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 7
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 8
  %29 = bitcast %"class.std::__1::vector.2"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #14
  %30 = bitcast %"class.std::__1::vector.2"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.2"* %27 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 8, i32 0, i32 1
  %34 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %37 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.std::__1::vector.2"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  %44 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %45 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 9
  %46 = bitcast %"class.std::__1::vector.2"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #14
  %47 = bitcast %"class.std::__1::vector.2"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.2"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 9, i32 0, i32 1
  %51 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %54 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"class.std::__1::vector.2"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #14
  %61 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10
  %62 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 10
  %63 = bitcast %"class.std::__1::vector.9"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #14
  %64 = bitcast %"class.std::__1::vector.9"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.9"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 10, i32 0, i32 1
  %68 = bitcast i16** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %71 = bitcast i16** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast i16** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast i16** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.std::__1::vector.9"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #14
  %78 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 0
  %79 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 11, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 32, i1 false)
  %80 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %81 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 12
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %80, align 8
  store i16 0, i16* %13, align 4
  %83 = load i32, i32* %16, align 8
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %84, 64000
  store i64 %85, i64* %25, align 8
  %86 = load i64, i64* %30, align 8
  store i64 %86, i64* %34, align 8
  %87 = load i64, i64* %47, align 8
  store i64 %87, i64* %51, align 8
  %88 = load i64, i64* %64, align 8
  store i64 %88, i64* %68, align 8
  %89 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 11, i32 2
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 11, i32 3
  store i8 1, i8* %90, align 8
  %91 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %1, i64 0, i32 11, i32 4
  store i8 0, i8* %91, align 1
  store i64 20, i64* %81, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback5ClearEv(%"class.webrtc::rtcp::TransportFeedback"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  store i16 0, i16* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = mul nsw i64 %5, 64000
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  %9 = bitcast %"class.std::__1::vector.2"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %12 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %14 = bitcast %"class.std::__1::vector.2"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %17 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10
  %19 = bitcast %"class.std::__1::vector.9"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %22 = bitcast i16** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  store i64 20, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackD2Ev(%"class.webrtc::rtcp::TransportFeedback"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %12, align 8
  %14 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %18 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %21, align 8
  %23 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22 to i64
  %26 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %27 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedbackD0Ev(%"class.webrtc::rtcp::TransportFeedback"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %12, align 8
  %14 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %18 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %21, align 8
  %23 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22 to i64
  %26 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %27 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %"class.webrtc::rtcp::TransportFeedback"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp17TransportFeedback7SetBaseEtl(%"class.webrtc::rtcp::TransportFeedback"* nocapture, i16 zeroext, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  store i16 %1, i16* %4, align 2
  %5 = srem i64 %2, 1073741824000
  %6 = sdiv i64 %5, 64000
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  store i32 %7, i32* %8, align 8
  %9 = mul nsw i64 %6, 64000
  %10 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback13GetBaseTimeUsEv(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = mul nsw i64 %4, 64000
  ret i64 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4rtcp17TransportFeedback25SetFeedbackSequenceNumberEh(%"class.webrtc::rtcp::TransportFeedback"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  store i8 %1, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback17AddReceivedPacketEtl(%"class.webrtc::rtcp::TransportFeedback"*, i16 zeroext, i64) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %10 = load i64, i64* %9, align 8
  %11 = sub nsw i64 %2, %10
  %12 = srem i64 %11, 1073741824000
  %13 = icmp sgt i64 %12, 536870912000
  %14 = add nsw i64 %12, -1073741824000
  %15 = select i1 %13, i64 %14, i64 %12
  %16 = icmp slt i64 %15, 0
  %17 = select i1 %16, i64 -125, i64 125
  %18 = add nsw i64 %17, %15
  %19 = sdiv i64 %18, 250
  %20 = trunc i64 %19 to i16
  %21 = add nsw i64 %19, 32768
  %22 = icmp ugt i64 %21, 65535
  br i1 %22, label %23, label %28

23:                                               ; preds = %8
  %24 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 328, i32 2, i32 0, i32 0) #14
  %25 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #14
  br label %288

28:                                               ; preds = %8, %3
  %29 = phi i16 [ 0, %3 ], [ %20, %8 ]
  %30 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  %31 = load i16, i16* %30, align 2
  %32 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  %33 = load i16, i16* %32, align 4
  %34 = add i16 %33, %31
  %35 = icmp eq i16 %34, %1
  br i1 %35, label %127, label %36

36:                                               ; preds = %28
  %37 = add i16 %34, -1
  %38 = zext i16 %1 to i32
  %39 = zext i16 %37 to i32
  %40 = sub nsw i32 %38, %39
  %41 = icmp eq i32 %40, 32768
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = icmp ult i16 %37, %1
  br i1 %43, label %49, label %288

44:                                               ; preds = %36
  %45 = icmp ne i16 %37, %1
  %46 = trunc i32 %40 to i16
  %47 = icmp sgt i16 %46, -1
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %288

49:                                               ; preds = %42, %44
  %50 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %52 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %53 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %52 to i64*
  %55 = bitcast %"class.std::__1::vector.2"* %51 to i64*
  %56 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %53 to i64*
  %57 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %51, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %49, %124
  %59 = phi i16 [ %34, %49 ], [ %125, %124 ]
  %60 = tail call zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback12AddDeltaSizeEh(%"class.webrtc::rtcp::TransportFeedback"* %0, i8 zeroext 0)
  br i1 %60, label %61, label %288

61:                                               ; preds = %58
  %62 = load i8, i8* %50, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %124, label %64

64:                                               ; preds = %61
  %65 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %52, align 8
  %66 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %53, align 8
  %67 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %65, %66
  %68 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %66 to i64
  br i1 %67, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %65, i64 0, i32 0
  store i16 %59, i16* %70, align 2
  %71 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %65, i64 0, i32 2
  store i8 0, i8* %71, align 2
  %72 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %65, i64 1
  %73 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %72 to i64
  store i64 %73, i64* %54, align 8
  br label %124

74:                                               ; preds = %64
  %75 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %65 to i64
  %76 = load i64, i64* %55, align 8
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 6
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 3074457345618258602
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = bitcast %"class.std::__1::vector.2"* %51 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #15
  unreachable

83:                                               ; preds = %74
  %84 = sub i64 %68, %76
  %85 = sdiv exact i64 %84, 6
  %86 = icmp ult i64 %85, 1537228672809129301
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = shl nsw i64 %85, 1
  %89 = icmp ult i64 %88, %79
  %90 = select i1 %89, i64 %79, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %87, %83
  %93 = phi i64 [ %90, %87 ], [ 3074457345618258602, %83 ]
  %94 = mul i64 %93, 6
  %95 = tail call i8* @_Znwm(i64 %94) #16
  %96 = bitcast i8* %95 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %97

97:                                               ; preds = %92, %87
  %98 = phi i64 [ %93, %92 ], [ 0, %87 ]
  %99 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %96, %92 ], [ null, %87 ]
  %100 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %99, i64 %78
  %101 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %99, i64 %98
  %102 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %101 to i64
  %103 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %100, i64 0, i32 0
  store i16 %59, i16* %103, align 2
  %104 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %99, i64 %78, i32 2
  store i8 0, i8* %104, align 2
  %105 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %100, i64 1
  %106 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %105 to i64
  %107 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %57, align 8
  %108 = load i64, i64* %54, align 8
  %109 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %107 to i64
  %110 = sub i64 %108, %109
  %111 = sdiv exact i64 %110, -6
  %112 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %100, i64 %111
  %113 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %112 to i64
  %114 = icmp sgt i64 %110, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %97
  %116 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %112 to i8*
  %117 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %116, i8* align 2 %117, i64 %110, i1 false) #14
  %118 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %57, align 8
  br label %119

119:                                              ; preds = %115, %97
  %120 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %107, %97 ], [ %118, %115 ]
  store i64 %113, i64* %55, align 8
  store i64 %106, i64* %54, align 8
  store i64 %102, i64* %56, align 8
  %121 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %120 to i8*
  tail call void @_ZdlPv(i8* %123) #16
  br label %124

124:                                              ; preds = %122, %119, %69, %61
  %125 = add i16 %59, 1
  %126 = icmp eq i16 %125, %1
  br i1 %126, label %127, label %58

127:                                              ; preds = %124, %28
  %128 = icmp ult i16 %29, 256
  %129 = select i1 %128, i8 1, i8 2
  %130 = tail call zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback12AddDeltaSizeEh(%"class.webrtc::rtcp::TransportFeedback"* %0, i8 zeroext %129)
  br i1 %130, label %131, label %288

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  %133 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %134 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %133, align 8
  %135 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %136 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %135, align 8
  %137 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134, %136
  %138 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %136 to i64
  br i1 %137, label %139, label %146

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134, i64 0, i32 0
  store i16 %1, i16* %140, align 2
  %141 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134, i64 0, i32 1
  store i16 %29, i16* %141, align 2
  %142 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134, i64 0, i32 2
  store i8 1, i8* %142, align 2
  %143 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134, i64 1
  %144 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %143 to i64
  %145 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %133 to i64*
  store i64 %144, i64* %145, align 8
  br label %201

146:                                              ; preds = %131
  %147 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %134 to i64
  %148 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %133 to i64*
  %149 = bitcast %"class.std::__1::vector.2"* %132 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %147, %150
  %152 = sdiv exact i64 %151, 6
  %153 = add nsw i64 %152, 1
  %154 = icmp ugt i64 %153, 3074457345618258602
  br i1 %154, label %155, label %157

155:                                              ; preds = %146
  %156 = bitcast %"class.std::__1::vector.2"* %132 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %156) #15
  unreachable

157:                                              ; preds = %146
  %158 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %135 to i64*
  %159 = sub i64 %138, %150
  %160 = sdiv exact i64 %159, 6
  %161 = icmp ult i64 %160, 1537228672809129301
  br i1 %161, label %162, label %167

162:                                              ; preds = %157
  %163 = shl nsw i64 %160, 1
  %164 = icmp ult i64 %163, %153
  %165 = select i1 %164, i64 %153, i64 %163
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %172, label %167

167:                                              ; preds = %162, %157
  %168 = phi i64 [ %165, %162 ], [ 3074457345618258602, %157 ]
  %169 = mul i64 %168, 6
  %170 = tail call i8* @_Znwm(i64 %169) #16
  %171 = bitcast i8* %170 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %172

172:                                              ; preds = %167, %162
  %173 = phi i64 [ %168, %167 ], [ 0, %162 ]
  %174 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %171, %167 ], [ null, %162 ]
  %175 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %174, i64 %152
  %176 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %174, i64 %173
  %177 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %176 to i64
  %178 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %175, i64 0, i32 0
  store i16 %1, i16* %178, align 2
  %179 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %174, i64 %152, i32 1
  store i16 %29, i16* %179, align 2
  %180 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %174, i64 %152, i32 2
  store i8 1, i8* %180, align 2
  %181 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %175, i64 1
  %182 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %181 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %132, i64 0, i32 0, i32 0
  %184 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %183, align 8
  %185 = load i64, i64* %148, align 8
  %186 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %184 to i64
  %187 = sub i64 %185, %186
  %188 = sdiv exact i64 %187, -6
  %189 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %175, i64 %188
  %190 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %189 to i64
  %191 = icmp sgt i64 %187, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %172
  %193 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %189 to i8*
  %194 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %184 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %193, i8* align 2 %194, i64 %187, i1 false) #14
  %195 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %183, align 8
  br label %196

196:                                              ; preds = %192, %172
  %197 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %184, %172 ], [ %195, %192 ]
  store i64 %190, i64* %149, align 8
  store i64 %182, i64* %148, align 8
  store i64 %177, i64* %158, align 8
  %198 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %197 to i8*
  tail call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %139, %196, %199
  %202 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %203 = load i8, i8* %202, align 8, !range !2
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %275, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %207 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %208 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %207, align 8
  %209 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %210 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %209, align 8
  %211 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208, %210
  %212 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %210 to i64
  br i1 %211, label %213, label %220

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208, i64 0, i32 0
  store i16 %1, i16* %214, align 2
  %215 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208, i64 0, i32 1
  store i16 %29, i16* %215, align 2
  %216 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208, i64 0, i32 2
  store i8 1, i8* %216, align 2
  %217 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208, i64 1
  %218 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %217 to i64
  %219 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %207 to i64*
  store i64 %218, i64* %219, align 8
  br label %275

220:                                              ; preds = %205
  %221 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %208 to i64
  %222 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %207 to i64*
  %223 = bitcast %"class.std::__1::vector.2"* %206 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %221, %224
  %226 = sdiv exact i64 %225, 6
  %227 = add nsw i64 %226, 1
  %228 = icmp ugt i64 %227, 3074457345618258602
  br i1 %228, label %229, label %231

229:                                              ; preds = %220
  %230 = bitcast %"class.std::__1::vector.2"* %206 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %230) #15
  unreachable

231:                                              ; preds = %220
  %232 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %209 to i64*
  %233 = sub i64 %212, %224
  %234 = sdiv exact i64 %233, 6
  %235 = icmp ult i64 %234, 1537228672809129301
  br i1 %235, label %236, label %241

236:                                              ; preds = %231
  %237 = shl nsw i64 %234, 1
  %238 = icmp ult i64 %237, %227
  %239 = select i1 %238, i64 %227, i64 %237
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %246, label %241

241:                                              ; preds = %236, %231
  %242 = phi i64 [ %239, %236 ], [ 3074457345618258602, %231 ]
  %243 = mul i64 %242, 6
  %244 = tail call i8* @_Znwm(i64 %243) #16
  %245 = bitcast i8* %244 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %246

246:                                              ; preds = %241, %236
  %247 = phi i64 [ %242, %241 ], [ 0, %236 ]
  %248 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %245, %241 ], [ null, %236 ]
  %249 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %248, i64 %226
  %250 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %248, i64 %247
  %251 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %250 to i64
  %252 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %249, i64 0, i32 0
  store i16 %1, i16* %252, align 2
  %253 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %248, i64 %226, i32 1
  store i16 %29, i16* %253, align 2
  %254 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %248, i64 %226, i32 2
  store i8 1, i8* %254, align 2
  %255 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %249, i64 1
  %256 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %255 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %206, i64 0, i32 0, i32 0
  %258 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %257, align 8
  %259 = load i64, i64* %222, align 8
  %260 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %258 to i64
  %261 = sub i64 %259, %260
  %262 = sdiv exact i64 %261, -6
  %263 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %249, i64 %262
  %264 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %263 to i64
  %265 = icmp sgt i64 %261, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %246
  %267 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %263 to i8*
  %268 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %258 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %267, i8* align 2 %268, i64 %261, i1 false) #14
  %269 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %257, align 8
  br label %270

270:                                              ; preds = %266, %246
  %271 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %258, %246 ], [ %269, %266 ]
  store i64 %264, i64* %223, align 8
  store i64 %256, i64* %222, align 8
  store i64 %251, i64* %232, align 8
  %272 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %271 to i8*
  tail call void @_ZdlPv(i8* %274) #16
  br label %275

275:                                              ; preds = %273, %270, %213, %201
  %276 = sext i16 %29 to i64
  %277 = mul nsw i64 %276, 250
  %278 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %279 = load i64, i64* %278, align 8
  %280 = add nsw i64 %279, %277
  store i64 %280, i64* %278, align 8
  %281 = load i8, i8* %5, align 1, !range !2
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %288, label %283

283:                                              ; preds = %275
  %284 = zext i8 %129 to i64
  %285 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %286 = load i64, i64* %285, align 8
  %287 = add i64 %286, %284
  store i64 %287, i64* %285, align 8
  br label %288

288:                                              ; preds = %58, %283, %275, %127, %44, %42, %23
  %289 = phi i1 [ false, %23 ], [ false, %127 ], [ true, %275 ], [ true, %283 ], [ false, %44 ], [ false, %42 ], [ false, %58 ]
  ret i1 %289
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback12AddDeltaSizeEh(%"class.webrtc::rtcp::TransportFeedback"*, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, -1
  br i1 %5, label %166, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = select i1 %10, i64 2, i64 0
  %12 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %1 to i64
  %15 = add i64 %13, %14
  %16 = add i64 %15, %11
  %17 = icmp ugt i64 %16, 262144
  br i1 %17, label %166, label %18

18:                                               ; preds = %6
  %19 = icmp ult i64 %9, 7
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  %21 = icmp ult i64 %9, 14
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = icmp eq i8 %1, 2
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %38

28:                                               ; preds = %20
  %29 = icmp ult i64 %9, 8191
  br i1 %29, label %30, label %69

30:                                               ; preds = %28, %22
  %31 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %69, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %7, i64 0, i32 0, i64 0
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, %1
  br i1 %37, label %40, label %69

38:                                               ; preds = %18, %22
  %39 = add i64 %11, %13
  store i64 %39, i64* %12, align 8
  br label %45

40:                                               ; preds = %34
  %41 = add i64 %11, %13
  store i64 %41, i64* %12, align 8
  br i1 %21, label %45, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %9, 1
  store i64 %43, i64* %8, align 8
  %44 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  br label %53

45:                                               ; preds = %40, %38
  %46 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %9
  store i8 %1, i8* %46, align 1
  %47 = load i64, i64* %8, align 8
  %48 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = add i64 %47, 1
  store i64 %50, i64* %8, align 8
  %51 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %52 = icmp eq i8 %49, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %42, %45
  %54 = phi i8* [ %44, %42 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %7, i64 0, i32 0, i64 0
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, %1
  %58 = zext i1 %57 to i8
  br label %59

59:                                               ; preds = %45, %53
  %60 = phi i8* [ %51, %45 ], [ %54, %53 ]
  %61 = phi i8 [ 0, %45 ], [ %58, %53 ]
  store i8 %61, i8* %60, align 8
  %62 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %1, 2
  %65 = zext i1 %64 to i8
  %66 = or i8 %63, %65
  store i8 %66, i8* %62, align 1
  %67 = load i16, i16* %3, align 4
  %68 = add i16 %67, 1
  store i16 %68, i16* %3, align 4
  br label %166

69:                                               ; preds = %34, %30, %28
  %70 = add i64 %15, 2
  %71 = icmp ugt i64 %70, 262144
  br i1 %71, label %166, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10
  %74 = tail call zeroext i16 @_ZN6webrtc4rtcp17TransportFeedback9LastChunk4EmitEv(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* %7)
  %75 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %78 = load i16*, i16** %77, align 8
  %79 = icmp ult i16* %76, %78
  %80 = ptrtoint i16* %78 to i64
  br i1 %79, label %81, label %85

81:                                               ; preds = %72
  store i16 %74, i16* %76, align 2
  %82 = getelementptr inbounds i16, i16* %76, i64 1
  %83 = ptrtoint i16* %82 to i64
  %84 = bitcast i16** %75 to i64*
  store i64 %83, i64* %84, align 8
  br label %138

85:                                               ; preds = %72
  %86 = ptrtoint i16* %76 to i64
  %87 = bitcast i16** %75 to i64*
  %88 = bitcast %"class.std::__1::vector.9"* %73 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = ashr exact i64 %90, 1
  %92 = add nsw i64 %91, 1
  %93 = icmp slt i64 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = bitcast %"class.std::__1::vector.9"* %73 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #15
  unreachable

96:                                               ; preds = %85
  %97 = bitcast i16** %77 to i64*
  %98 = sub i64 %80, %89
  %99 = ashr exact i64 %98, 1
  %100 = icmp ult i64 %99, 4611686018427387903
  %101 = icmp ult i64 %98, %92
  %102 = select i1 %101, i64 %92, i64 %98
  %103 = select i1 %100, i64 %102, i64 9223372036854775807
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %112, label %105

105:                                              ; preds = %96
  %106 = icmp slt i64 %103, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @abort() #15
  unreachable

108:                                              ; preds = %105
  %109 = shl i64 %103, 1
  %110 = tail call i8* @_Znwm(i64 %109) #16
  %111 = bitcast i8* %110 to i16*
  br label %112

112:                                              ; preds = %108, %96
  %113 = phi i16* [ %111, %108 ], [ null, %96 ]
  %114 = getelementptr inbounds i16, i16* %113, i64 %91
  %115 = getelementptr inbounds i16, i16* %113, i64 %103
  %116 = ptrtoint i16* %115 to i64
  store i16 %74, i16* %114, align 2
  %117 = getelementptr inbounds i16, i16* %114, i64 1
  %118 = ptrtoint i16* %117 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %73, i64 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = load i64, i64* %87, align 8
  %122 = ptrtoint i16* %120 to i64
  %123 = sub i64 %121, %122
  %124 = ashr exact i64 %123, 1
  %125 = sub nsw i64 0, %124
  %126 = getelementptr inbounds i16, i16* %114, i64 %125
  %127 = ptrtoint i16* %126 to i64
  %128 = icmp sgt i64 %123, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %112
  %130 = bitcast i16* %126 to i8*
  %131 = bitcast i16* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %130, i8* align 2 %131, i64 %123, i1 false) #14
  %132 = load i16*, i16** %119, align 8
  br label %133

133:                                              ; preds = %129, %112
  %134 = phi i16* [ %120, %112 ], [ %132, %129 ]
  store i64 %127, i64* %88, align 8
  store i64 %118, i64* %87, align 8
  store i64 %116, i64* %97, align 8
  %135 = icmp eq i16* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = bitcast i16* %134 to i8*
  tail call void @_ZdlPv(i8* %137) #16
  br label %138

138:                                              ; preds = %81, %133, %136
  %139 = load i64, i64* %12, align 8
  %140 = add i64 %139, 2
  store i64 %140, i64* %12, align 8
  %141 = load i64, i64* %8, align 8
  %142 = icmp ult i64 %141, 14
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %141
  store i8 %1, i8* %144, align 1
  %145 = load i64, i64* %8, align 8
  br label %146

146:                                              ; preds = %143, %138
  %147 = phi i64 [ %145, %143 ], [ %141, %138 ]
  %148 = add i64 %147, 1
  store i64 %148, i64* %8, align 8
  %149 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %7, i64 0, i32 0, i64 0
  %154 = load i8, i8* %153, align 8
  %155 = icmp eq i8 %154, %1
  %156 = zext i1 %155 to i8
  br label %157

157:                                              ; preds = %146, %152
  %158 = phi i8 [ 0, %146 ], [ %156, %152 ]
  store i8 %158, i8* %149, align 8
  %159 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  %160 = load i8, i8* %159, align 1, !range !2
  %161 = icmp eq i8 %1, 2
  %162 = zext i1 %161 to i8
  %163 = or i8 %160, %162
  store i8 %163, i8* %159, align 1
  %164 = load i16, i16* %3, align 4
  %165 = add i16 %164, 1
  store i16 %165, i16* %3, align 4
  br label %166

166:                                              ; preds = %59, %157, %6, %69, %2
  %167 = phi i1 [ false, %2 ], [ true, %59 ], [ true, %157 ], [ false, %6 ], [ false, %69 ]
  ret i1 %167
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.2"* @_ZNK6webrtc4rtcp17TransportFeedback18GetReceivedPacketsEv(%"class.webrtc::rtcp::TransportFeedback"* readnone) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  ret %"class.std::__1::vector.2"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.2"* @_ZNK6webrtc4rtcp17TransportFeedback13GetAllPacketsEv(%"class.webrtc::rtcp::TransportFeedback"* readnone) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  ret %"class.std::__1::vector.2"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc4rtcp17TransportFeedback15GetBaseSequenceEv(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  %3 = load i16, i16* %2, align 2
  ret i16 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback11GetBaseTimeEv(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = mul nsw i64 %4, 64000
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback14GetBaseDeltaUsEl(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = mul nsw i64 %5, 64000
  %7 = sub nsw i64 %6, %1
  %8 = add nsw i64 %7, -1073741824000
  %9 = sub i64 1073741824000, %7
  %10 = icmp slt i64 %8, 0
  %11 = select i1 %10, i64 %9, i64 %8
  %12 = sub nsw i64 0, %7
  %13 = icmp slt i64 %7, 0
  %14 = select i1 %13, i64 %12, i64 %7
  %15 = icmp slt i64 %11, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = add nsw i64 %7, 1073741824000
  %18 = sub i64 -1073741824000, %7
  %19 = icmp slt i64 %17, 0
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = icmp slt i64 %20, %14
  %22 = select i1 %21, i64 %17, i64 %7
  ret i64 %22

23:                                               ; preds = %2
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback12GetBaseDeltaENS_9TimeDeltaE(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = mul nsw i64 %5, 64000
  %7 = sub nsw i64 %6, %1
  %8 = add nsw i64 %7, -1073741824000
  %9 = sub i64 1073741824000, %7
  %10 = icmp slt i64 %8, 0
  %11 = select i1 %10, i64 %9, i64 %8
  %12 = sub nsw i64 0, %7
  %13 = icmp slt i64 %7, 0
  %14 = select i1 %13, i64 %12, i64 %7
  %15 = icmp slt i64 %11, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = add nsw i64 %7, 1073741824000
  %18 = sub i64 -1073741824000, %7
  %19 = icmp slt i64 %17, 0
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = icmp slt i64 %20, %14
  %22 = select i1 %21, i64 %17, i64 %7
  br label %23

23:                                               ; preds = %2, %16
  %24 = phi i64 [ %22, %16 ], [ %8, %2 ]
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderE(%"class.webrtc::rtcp::TransportFeedback"*, %"class.webrtc::rtcp::CommonHeader"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403 to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17, !prof !76

12:                                               ; preds = %2
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #14
  store i8* %16, i8** @_ZZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403) #14
  br label %17

17:                                               ; preds = %12, %15, %2
  %18 = bitcast %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %3, i64 0, i32 1
  %21 = bitcast %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  store %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* null, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"** %19, align 8
  %22 = load i8*, i8** @_ZZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %3, i64 0, i32 1, i32 1
  tail call void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext 66, i8* %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #14
  %27 = load i64, i64* bitcast (i8** @_ZZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderEE31trace_event_unique_catstatic403 to i64*), align 8
  %28 = getelementptr inbounds %"class.webrtc::trace_event_internal::TraceEndOnScopeClose", %"class.webrtc::trace_event_internal::TraceEndOnScopeClose"* %3, i64 0, i32 1
  %29 = bitcast %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %28 to i64*
  store i64 %27, i64* %29, align 8
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8** %26, align 8
  store %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %28, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"** %19, align 8
  br label %30

30:                                               ; preds = %17, %25
  %31 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %32, 18
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %35) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 406, i32 2, i32 0, i32 0) #14
  %36 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %36 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #14
  %39 = load i32, i32* %31, align 4
  %40 = zext i32 %39 to i64
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %38, i64 %40) #14
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i64 48) #14
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %42, i64 18) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %35) #14
  br label %922

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 4
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0
  call void @_ZN6webrtc4rtcp5Rtpfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Rtpfb"* %47, i8* %46) #14
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw i16 %50, 8
  %52 = getelementptr inbounds i8, i8* %46, i64 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = or i16 %51, %54
  %56 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %46, i64 10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = shl nuw i16 %59, 8
  %61 = getelementptr inbounds i8, i8* %46, i64 11
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = or i16 %60, %63
  %65 = getelementptr inbounds i8, i8* %46, i64 12
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = getelementptr inbounds i8, i8* %46, i64 13
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  %74 = getelementptr inbounds i8, i8* %46, i64 14
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = or i32 %73, %76
  %78 = icmp sgt i8 %66, -1
  %79 = or i32 %77, -16777216
  %80 = select i1 %78, i32 %77, i32 %79
  %81 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %46, i64 15
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  store i8 %83, i8* %84, align 4
  %85 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  store i16 0, i16* %85, align 4
  %86 = sext i32 %80 to i64
  %87 = mul nsw i64 %86, 64000
  %88 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8
  %90 = bitcast %"class.std::__1::vector.2"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %93 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9
  %95 = bitcast %"class.std::__1::vector.2"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 1
  %98 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10
  %100 = bitcast %"class.std::__1::vector.9"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %103 = bitcast i16** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  store i8 1, i8* %105, align 8
  %106 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 4
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  store i64 20, i64* %107, align 8
  %108 = load i32, i32* %31, align 4
  %109 = zext i32 %108 to i64
  %110 = icmp eq i16 %64, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %44
  %112 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 425, i32 2, i32 0, i32 0) #14
  %113 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %114 = bitcast %"class.std::__1::basic_ostringstream"* %113 to %"class.std::__1::basic_ostream"*
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i64 36) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #14
  br label %922

116:                                              ; preds = %44
  %117 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #14
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = zext i16 %64 to i64
  %122 = bitcast i8** %120 to i64*
  %123 = bitcast %"class.std::__1::vector"* %6 to i64*
  %124 = bitcast i8** %119 to i64*
  %125 = call i8* @_Znwm(i64 %121) #16
  %126 = ptrtoint i8* %125 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %121
  %128 = ptrtoint i8* %127 to i64
  store i64 %126, i64* %123, align 8
  store i64 %126, i64* %124, align 8
  store i64 %128, i64* %122, align 8
  %129 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %130 = bitcast i16** %129 to i64*
  %131 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %99, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11
  %133 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %132, i64 0, i32 0, i64 0
  br label %134

134:                                              ; preds = %116, %228
  %135 = phi i64 [ 16, %116 ], [ %136, %228 ]
  %136 = add nuw nsw i64 %135, 2
  %137 = icmp ugt i64 %136, %109
  br i1 %137, label %138, label %149

138:                                              ; preds = %134
  %139 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %139) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 433, i32 2, i32 0, i32 0) #14
  %140 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %141 = bitcast %"class.std::__1::basic_ostringstream"* %140 to %"class.std::__1::basic_ostream"*
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %141, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %139) #14
  store i16 0, i16* %85, align 4
  %143 = load i32, i32* %81, align 8
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %144, 64000
  store i64 %145, i64* %88, align 8
  %146 = load i64, i64* %90, align 8
  store i64 %146, i64* %93, align 8
  %147 = load i64, i64* %95, align 8
  store i64 %147, i64* %98, align 8
  %148 = load i64, i64* %100, align 8
  store i64 %148, i64* %103, align 8
  store i64 0, i64* %104, align 8
  store i8 1, i8* %105, align 8
  store i8 0, i8* %106, align 1
  store i64 20, i64* %107, align 8
  br label %915

149:                                              ; preds = %134
  %150 = getelementptr inbounds i8, i8* %46, i64 %135
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  %153 = shl nuw i16 %152, 8
  %154 = getelementptr inbounds i8, i8* %150, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = or i16 %153, %156
  %158 = load i16*, i16** %102, align 8
  %159 = load i16*, i16** %129, align 8
  %160 = icmp eq i16* %158, %159
  %161 = ptrtoint i16* %159 to i64
  br i1 %160, label %165, label %162

162:                                              ; preds = %149
  store i16 %157, i16* %158, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 1
  %164 = ptrtoint i16* %163 to i64
  store i64 %164, i64* %103, align 8
  br label %214

165:                                              ; preds = %149
  %166 = ptrtoint i16* %158 to i64
  %167 = load i64, i64* %100, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 1
  %170 = add nsw i64 %169, 1
  %171 = icmp slt i64 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.9"* %99 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #15
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %161, %167
  %176 = ashr exact i64 %175, 1
  %177 = icmp ult i64 %176, 4611686018427387903
  %178 = icmp ult i64 %175, %170
  %179 = select i1 %178, i64 %170, i64 %175
  %180 = select i1 %177, i64 %179, i64 9223372036854775807
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %174
  %183 = icmp slt i64 %180, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %182
  call void @abort() #15
  unreachable

185:                                              ; preds = %182
  %186 = shl i64 %180, 1
  %187 = call i8* @_Znwm(i64 %186) #16
  %188 = bitcast i8* %187 to i16*
  br label %189

189:                                              ; preds = %185, %174
  %190 = phi i16* [ %188, %185 ], [ null, %174 ]
  %191 = getelementptr inbounds i16, i16* %190, i64 %169
  %192 = getelementptr inbounds i16, i16* %190, i64 %180
  %193 = ptrtoint i16* %192 to i64
  store i16 %157, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %191, i64 1
  %195 = ptrtoint i16* %194 to i64
  %196 = load i16*, i16** %131, align 8
  %197 = load i64, i64* %103, align 8
  %198 = ptrtoint i16* %196 to i64
  %199 = sub i64 %197, %198
  %200 = ashr exact i64 %199, 1
  %201 = sub nsw i64 0, %200
  %202 = getelementptr inbounds i16, i16* %191, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = icmp sgt i64 %199, 0
  br i1 %204, label %205, label %209

205:                                              ; preds = %189
  %206 = bitcast i16* %202 to i8*
  %207 = bitcast i16* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %206, i8* align 2 %207, i64 %199, i1 false) #14
  %208 = load i16*, i16** %131, align 8
  br label %209

209:                                              ; preds = %205, %189
  %210 = phi i16* [ %196, %189 ], [ %208, %205 ]
  store i64 %203, i64* %100, align 8
  store i64 %195, i64* %103, align 8
  store i64 %193, i64* %130, align 8
  %211 = icmp eq i16* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  %213 = bitcast i16* %210 to i8*
  call void @_ZdlPv(i8* %213) #16
  br label %214

214:                                              ; preds = %162, %209, %212
  %215 = load i64, i64* %124, align 8
  %216 = load i64, i64* %123, align 8
  %217 = sub i64 %121, %215
  %218 = add i64 %217, %216
  call void @_ZN6webrtc4rtcp17TransportFeedback9LastChunk6DecodeEtm(%"class.webrtc::rtcp::TransportFeedback::LastChunk"* %132, i16 zeroext %157, i64 %218)
  %219 = load i8, i8* %105, align 8, !range !2
  %220 = icmp eq i8 %219, 0
  %221 = load i8*, i8** %119, align 8
  %222 = load i64, i64* %104, align 8
  br i1 %220, label %225, label %223

223:                                              ; preds = %214
  %224 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* nonnull %6, i8* %221, i64 %222, i8* dereferenceable(1) %133) #14
  br label %228

225:                                              ; preds = %214
  %226 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %222
  %227 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %6, i8* %221, i8* %133, i8* %226) #14
  br label %228

228:                                              ; preds = %223, %225
  %229 = load i64, i64* %124, align 8
  %230 = load i64, i64* %123, align 8
  %231 = sub i64 %229, %230
  %232 = icmp ult i64 %231, %121
  br i1 %232, label %134, label %233

233:                                              ; preds = %228
  %234 = inttoptr i64 %229 to i8*
  %235 = inttoptr i64 %230 to i8*
  %236 = load i16*, i16** %102, align 8
  %237 = load i16, i16* %56, align 2
  %238 = getelementptr inbounds i16, i16* %236, i64 -1
  store i16* %238, i16** %102, align 8
  store i16 %64, i16* %85, align 4
  %239 = icmp eq i8* %235, %234
  br i1 %239, label %313, label %240

240:                                              ; preds = %233
  %241 = sub i64 0, %230
  %242 = getelementptr i8, i8* %234, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = icmp ult i8* %242, inttoptr (i64 4 to i8*)
  br i1 %244, label %245, label %248

245:                                              ; preds = %305, %240
  %246 = phi i64 [ 0, %240 ], [ %311, %305 ]
  %247 = phi i8* [ %235, %240 ], [ %250, %305 ]
  br label %326

248:                                              ; preds = %240
  %249 = and i64 %243, -4
  %250 = getelementptr i8, i8* %235, i64 %249
  %251 = add i64 %249, -4
  %252 = lshr exact i64 %251, 2
  %253 = add nuw nsw i64 %252, 1
  %254 = and i64 %253, 1
  %255 = icmp eq i64 %251, 0
  br i1 %255, label %287, label %256

256:                                              ; preds = %248
  %257 = sub nuw nsw i64 %253, %254
  br label %258

258:                                              ; preds = %258, %256
  %259 = phi i64 [ 0, %256 ], [ %284, %258 ]
  %260 = phi <2 x i64> [ zeroinitializer, %256 ], [ %282, %258 ]
  %261 = phi <2 x i64> [ zeroinitializer, %256 ], [ %283, %258 ]
  %262 = phi i64 [ %257, %256 ], [ %285, %258 ]
  %263 = getelementptr i8, i8* %235, i64 %259
  %264 = bitcast i8* %263 to <2 x i8>*
  %265 = load <2 x i8>, <2 x i8>* %264, align 1
  %266 = getelementptr i8, i8* %263, i64 2
  %267 = bitcast i8* %266 to <2 x i8>*
  %268 = load <2 x i8>, <2 x i8>* %267, align 1
  %269 = zext <2 x i8> %265 to <2 x i64>
  %270 = zext <2 x i8> %268 to <2 x i64>
  %271 = add <2 x i64> %260, %269
  %272 = add <2 x i64> %261, %270
  %273 = or i64 %259, 4
  %274 = getelementptr i8, i8* %235, i64 %273
  %275 = bitcast i8* %274 to <2 x i8>*
  %276 = load <2 x i8>, <2 x i8>* %275, align 1
  %277 = getelementptr i8, i8* %274, i64 2
  %278 = bitcast i8* %277 to <2 x i8>*
  %279 = load <2 x i8>, <2 x i8>* %278, align 1
  %280 = zext <2 x i8> %276 to <2 x i64>
  %281 = zext <2 x i8> %279 to <2 x i64>
  %282 = add <2 x i64> %271, %280
  %283 = add <2 x i64> %272, %281
  %284 = add i64 %259, 8
  %285 = add i64 %262, -2
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %258, !llvm.loop !77

287:                                              ; preds = %258, %248
  %288 = phi <2 x i64> [ undef, %248 ], [ %282, %258 ]
  %289 = phi <2 x i64> [ undef, %248 ], [ %283, %258 ]
  %290 = phi i64 [ 0, %248 ], [ %284, %258 ]
  %291 = phi <2 x i64> [ zeroinitializer, %248 ], [ %282, %258 ]
  %292 = phi <2 x i64> [ zeroinitializer, %248 ], [ %283, %258 ]
  %293 = icmp eq i64 %254, 0
  br i1 %293, label %305, label %294

294:                                              ; preds = %287
  %295 = getelementptr i8, i8* %235, i64 %290
  %296 = getelementptr i8, i8* %295, i64 2
  %297 = bitcast i8* %296 to <2 x i8>*
  %298 = load <2 x i8>, <2 x i8>* %297, align 1
  %299 = zext <2 x i8> %298 to <2 x i64>
  %300 = add <2 x i64> %292, %299
  %301 = bitcast i8* %295 to <2 x i8>*
  %302 = load <2 x i8>, <2 x i8>* %301, align 1
  %303 = zext <2 x i8> %302 to <2 x i64>
  %304 = add <2 x i64> %291, %303
  br label %305

305:                                              ; preds = %287, %294
  %306 = phi <2 x i64> [ %288, %287 ], [ %304, %294 ]
  %307 = phi <2 x i64> [ %289, %287 ], [ %300, %294 ]
  %308 = add <2 x i64> %307, %306
  %309 = shufflevector <2 x i64> %308, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %310 = add <2 x i64> %308, %309
  %311 = extractelement <2 x i64> %310, i32 0
  %312 = icmp eq i64 %249, %243
  br i1 %312, label %313, label %245

313:                                              ; preds = %326, %305, %233
  %314 = phi i64 [ 0, %233 ], [ %311, %305 ], [ %331, %326 ]
  %315 = add i64 %314, %136
  %316 = icmp ugt i64 %315, %109
  br i1 %316, label %709, label %317

317:                                              ; preds = %313
  br i1 %239, label %912, label %318

318:                                              ; preds = %317
  %319 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %320 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %319 to i64*
  %321 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %89, i64 0, i32 0, i32 0
  %322 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %323 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %324 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %94, i64 0, i32 0, i32 0
  br label %334

326:                                              ; preds = %245, %326
  %327 = phi i64 [ %331, %326 ], [ %246, %245 ]
  %328 = phi i8* [ %332, %326 ], [ %247, %245 ]
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i64
  %331 = add i64 %327, %330
  %332 = getelementptr inbounds i8, i8* %328, i64 1
  %333 = icmp eq i8* %332, %234
  br i1 %333, label %313, label %326, !llvm.loop !78

334:                                              ; preds = %318, %704
  %335 = phi i64 [ %136, %318 ], [ %705, %704 ]
  %336 = phi i16 [ %237, %318 ], [ %706, %704 ]
  %337 = phi i8* [ %235, %318 ], [ %707, %704 ]
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i64
  %340 = add i64 %335, %339
  %341 = icmp ugt i64 %340, %109
  br i1 %341, label %342, label %353

342:                                              ; preds = %334
  %343 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %343) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 459, i32 2, i32 0, i32 0) #14
  %344 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %345 = bitcast %"class.std::__1::basic_ostringstream"* %344 to %"class.std::__1::basic_ostream"*
  %346 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %345, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %343) #14
  store i16 0, i16* %85, align 4
  %347 = load i32, i32* %81, align 8
  %348 = sext i32 %347 to i64
  %349 = mul nsw i64 %348, 64000
  store i64 %349, i64* %88, align 8
  %350 = load i64, i64* %90, align 8
  store i64 %350, i64* %93, align 8
  %351 = load i64, i64* %95, align 8
  store i64 %351, i64* %98, align 8
  %352 = load i64, i64* %100, align 8
  store i64 %352, i64* %103, align 8
  store i64 0, i64* %104, align 8
  store i8 1, i8* %105, align 8
  store i8 0, i8* %106, align 1
  store i64 20, i64* %107, align 8
  br label %915

353:                                              ; preds = %334
  switch i8 %338, label %704 [
    i8 0, label %354
    i8 1, label %417
    i8 2, label %552
    i8 3, label %692
  ]

354:                                              ; preds = %353
  %355 = load i8, i8* %322, align 8, !range !2
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %704, label %357

357:                                              ; preds = %354
  %358 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %97, align 8
  %359 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %323, align 8
  %360 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %358, %359
  %361 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %359 to i64
  br i1 %360, label %362, label %367

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %358, i64 0, i32 0
  store i16 %336, i16* %363, align 2
  %364 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %358, i64 0, i32 2
  store i8 0, i8* %364, align 2
  %365 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %358, i64 1
  %366 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %365 to i64
  store i64 %366, i64* %98, align 8
  br label %704

367:                                              ; preds = %357
  %368 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %358 to i64
  %369 = load i64, i64* %95, align 8
  %370 = sub i64 %368, %369
  %371 = sdiv exact i64 %370, 6
  %372 = add nsw i64 %371, 1
  %373 = icmp ugt i64 %372, 3074457345618258602
  br i1 %373, label %374, label %376

374:                                              ; preds = %367
  %375 = bitcast %"class.std::__1::vector.2"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #15
  unreachable

376:                                              ; preds = %367
  %377 = sub i64 %361, %369
  %378 = sdiv exact i64 %377, 6
  %379 = icmp ult i64 %378, 1537228672809129301
  br i1 %379, label %380, label %385

380:                                              ; preds = %376
  %381 = shl nsw i64 %378, 1
  %382 = icmp ult i64 %381, %372
  %383 = select i1 %382, i64 %372, i64 %381
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %390, label %385

385:                                              ; preds = %380, %376
  %386 = phi i64 [ %383, %380 ], [ 3074457345618258602, %376 ]
  %387 = mul i64 %386, 6
  %388 = call i8* @_Znwm(i64 %387) #16
  %389 = bitcast i8* %388 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %390

390:                                              ; preds = %385, %380
  %391 = phi i64 [ %386, %385 ], [ 0, %380 ]
  %392 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %389, %385 ], [ null, %380 ]
  %393 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %392, i64 %371
  %394 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %392, i64 %391
  %395 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %394 to i64
  %396 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %393, i64 0, i32 0
  store i16 %336, i16* %396, align 2
  %397 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %392, i64 %371, i32 2
  store i8 0, i8* %397, align 2
  %398 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %393, i64 1
  %399 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %398 to i64
  %400 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  %401 = load i64, i64* %98, align 8
  %402 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %400 to i64
  %403 = sub i64 %401, %402
  %404 = sdiv exact i64 %403, -6
  %405 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %393, i64 %404
  %406 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %405 to i64
  %407 = icmp sgt i64 %403, 0
  br i1 %407, label %408, label %412

408:                                              ; preds = %390
  %409 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %405 to i8*
  %410 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %400 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %409, i8* align 2 %410, i64 %403, i1 false) #14
  %411 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  br label %412

412:                                              ; preds = %408, %390
  %413 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %400, %390 ], [ %411, %408 ]
  store i64 %406, i64* %95, align 8
  store i64 %399, i64* %98, align 8
  store i64 %395, i64* %324, align 8
  %414 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %413, null
  br i1 %414, label %704, label %415

415:                                              ; preds = %412
  %416 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %413 to i8*
  call void @_ZdlPv(i8* %416) #16
  br label %704

417:                                              ; preds = %353
  %418 = getelementptr inbounds i8, i8* %46, i64 %335
  %419 = load i8, i8* %418, align 1
  %420 = zext i8 %419 to i16
  %421 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %92, align 8
  %422 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %319, align 8
  %423 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421, %422
  %424 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %422 to i64
  br i1 %423, label %425, label %431

425:                                              ; preds = %417
  %426 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421, i64 0, i32 0
  store i16 %336, i16* %426, align 2
  %427 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421, i64 0, i32 1
  store i16 %420, i16* %427, align 2
  %428 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421, i64 0, i32 2
  store i8 1, i8* %428, align 2
  %429 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421, i64 1
  %430 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %429 to i64
  store i64 %430, i64* %93, align 8
  br label %482

431:                                              ; preds = %417
  %432 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %421 to i64
  %433 = load i64, i64* %90, align 8
  %434 = sub i64 %432, %433
  %435 = sdiv exact i64 %434, 6
  %436 = add nsw i64 %435, 1
  %437 = icmp ugt i64 %436, 3074457345618258602
  br i1 %437, label %438, label %440

438:                                              ; preds = %431
  %439 = bitcast %"class.std::__1::vector.2"* %89 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %439) #15
  unreachable

440:                                              ; preds = %431
  %441 = sub i64 %424, %433
  %442 = sdiv exact i64 %441, 6
  %443 = icmp ult i64 %442, 1537228672809129301
  br i1 %443, label %444, label %449

444:                                              ; preds = %440
  %445 = shl nsw i64 %442, 1
  %446 = icmp ult i64 %445, %436
  %447 = select i1 %446, i64 %436, i64 %445
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %454, label %449

449:                                              ; preds = %444, %440
  %450 = phi i64 [ %447, %444 ], [ 3074457345618258602, %440 ]
  %451 = mul i64 %450, 6
  %452 = call i8* @_Znwm(i64 %451) #16
  %453 = bitcast i8* %452 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %454

454:                                              ; preds = %449, %444
  %455 = phi i64 [ %450, %449 ], [ 0, %444 ]
  %456 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %453, %449 ], [ null, %444 ]
  %457 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %456, i64 %435
  %458 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %456, i64 %455
  %459 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %458 to i64
  %460 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %457, i64 0, i32 0
  store i16 %336, i16* %460, align 2
  %461 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %456, i64 %435, i32 1
  store i16 %420, i16* %461, align 2
  %462 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %456, i64 %435, i32 2
  store i8 1, i8* %462, align 2
  %463 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %457, i64 1
  %464 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %463 to i64
  %465 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %321, align 8
  %466 = load i64, i64* %93, align 8
  %467 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %465 to i64
  %468 = sub i64 %466, %467
  %469 = sdiv exact i64 %468, -6
  %470 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %457, i64 %469
  %471 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %470 to i64
  %472 = icmp sgt i64 %468, 0
  br i1 %472, label %473, label %477

473:                                              ; preds = %454
  %474 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %470 to i8*
  %475 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %474, i8* align 2 %475, i64 %468, i1 false) #14
  %476 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %321, align 8
  br label %477

477:                                              ; preds = %473, %454
  %478 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %465, %454 ], [ %476, %473 ]
  store i64 %471, i64* %90, align 8
  store i64 %464, i64* %93, align 8
  store i64 %459, i64* %320, align 8
  %479 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %478, null
  br i1 %479, label %482, label %480

480:                                              ; preds = %477
  %481 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %478 to i8*
  call void @_ZdlPv(i8* %481) #16
  br label %482

482:                                              ; preds = %425, %477, %480
  %483 = load i8, i8* %322, align 8, !range !2
  %484 = icmp eq i8 %483, 0
  br i1 %484, label %547, label %485

485:                                              ; preds = %482
  %486 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %97, align 8
  %487 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %323, align 8
  %488 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486, %487
  %489 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %487 to i64
  br i1 %488, label %490, label %496

490:                                              ; preds = %485
  %491 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486, i64 0, i32 0
  store i16 %336, i16* %491, align 2
  %492 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486, i64 0, i32 1
  store i16 %420, i16* %492, align 2
  %493 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486, i64 0, i32 2
  store i8 1, i8* %493, align 2
  %494 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486, i64 1
  %495 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %494 to i64
  store i64 %495, i64* %98, align 8
  br label %547

496:                                              ; preds = %485
  %497 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %486 to i64
  %498 = load i64, i64* %95, align 8
  %499 = sub i64 %497, %498
  %500 = sdiv exact i64 %499, 6
  %501 = add nsw i64 %500, 1
  %502 = icmp ugt i64 %501, 3074457345618258602
  br i1 %502, label %503, label %505

503:                                              ; preds = %496
  %504 = bitcast %"class.std::__1::vector.2"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %504) #15
  unreachable

505:                                              ; preds = %496
  %506 = sub i64 %489, %498
  %507 = sdiv exact i64 %506, 6
  %508 = icmp ult i64 %507, 1537228672809129301
  br i1 %508, label %509, label %514

509:                                              ; preds = %505
  %510 = shl nsw i64 %507, 1
  %511 = icmp ult i64 %510, %501
  %512 = select i1 %511, i64 %501, i64 %510
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %519, label %514

514:                                              ; preds = %509, %505
  %515 = phi i64 [ %512, %509 ], [ 3074457345618258602, %505 ]
  %516 = mul i64 %515, 6
  %517 = call i8* @_Znwm(i64 %516) #16
  %518 = bitcast i8* %517 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %519

519:                                              ; preds = %514, %509
  %520 = phi i64 [ %515, %514 ], [ 0, %509 ]
  %521 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %518, %514 ], [ null, %509 ]
  %522 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %521, i64 %500
  %523 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %521, i64 %520
  %524 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %523 to i64
  %525 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %522, i64 0, i32 0
  store i16 %336, i16* %525, align 2
  %526 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %521, i64 %500, i32 1
  store i16 %420, i16* %526, align 2
  %527 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %521, i64 %500, i32 2
  store i8 1, i8* %527, align 2
  %528 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %522, i64 1
  %529 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %528 to i64
  %530 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  %531 = load i64, i64* %98, align 8
  %532 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %530 to i64
  %533 = sub i64 %531, %532
  %534 = sdiv exact i64 %533, -6
  %535 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %522, i64 %534
  %536 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %535 to i64
  %537 = icmp sgt i64 %533, 0
  br i1 %537, label %538, label %542

538:                                              ; preds = %519
  %539 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %535 to i8*
  %540 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %530 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %539, i8* align 2 %540, i64 %533, i1 false) #14
  %541 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  br label %542

542:                                              ; preds = %538, %519
  %543 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %530, %519 ], [ %541, %538 ]
  store i64 %536, i64* %95, align 8
  store i64 %529, i64* %98, align 8
  store i64 %524, i64* %324, align 8
  %544 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %543, null
  br i1 %544, label %547, label %545

545:                                              ; preds = %542
  %546 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %543 to i8*
  call void @_ZdlPv(i8* %546) #16
  br label %547

547:                                              ; preds = %545, %542, %490, %482
  %548 = zext i8 %419 to i64
  %549 = mul nuw nsw i64 %548, 250
  %550 = load i64, i64* %88, align 8
  %551 = add nsw i64 %550, %549
  store i64 %551, i64* %88, align 8
  br label %704

552:                                              ; preds = %353
  %553 = getelementptr inbounds i8, i8* %46, i64 %335
  %554 = load i8, i8* %553, align 1
  %555 = zext i8 %554 to i16
  %556 = shl nuw i16 %555, 8
  %557 = getelementptr inbounds i8, i8* %553, i64 1
  %558 = load i8, i8* %557, align 1
  %559 = zext i8 %558 to i16
  %560 = or i16 %556, %559
  %561 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %92, align 8
  %562 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %319, align 8
  %563 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561, %562
  %564 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %562 to i64
  br i1 %563, label %565, label %571

565:                                              ; preds = %552
  %566 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561, i64 0, i32 0
  store i16 %336, i16* %566, align 2
  %567 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561, i64 0, i32 1
  store i16 %560, i16* %567, align 2
  %568 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561, i64 0, i32 2
  store i8 1, i8* %568, align 2
  %569 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561, i64 1
  %570 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %569 to i64
  store i64 %570, i64* %93, align 8
  br label %622

571:                                              ; preds = %552
  %572 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %561 to i64
  %573 = load i64, i64* %90, align 8
  %574 = sub i64 %572, %573
  %575 = sdiv exact i64 %574, 6
  %576 = add nsw i64 %575, 1
  %577 = icmp ugt i64 %576, 3074457345618258602
  br i1 %577, label %578, label %580

578:                                              ; preds = %571
  %579 = bitcast %"class.std::__1::vector.2"* %89 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %579) #15
  unreachable

580:                                              ; preds = %571
  %581 = sub i64 %564, %573
  %582 = sdiv exact i64 %581, 6
  %583 = icmp ult i64 %582, 1537228672809129301
  br i1 %583, label %584, label %589

584:                                              ; preds = %580
  %585 = shl nsw i64 %582, 1
  %586 = icmp ult i64 %585, %576
  %587 = select i1 %586, i64 %576, i64 %585
  %588 = icmp eq i64 %587, 0
  br i1 %588, label %594, label %589

589:                                              ; preds = %584, %580
  %590 = phi i64 [ %587, %584 ], [ 3074457345618258602, %580 ]
  %591 = mul i64 %590, 6
  %592 = call i8* @_Znwm(i64 %591) #16
  %593 = bitcast i8* %592 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %594

594:                                              ; preds = %589, %584
  %595 = phi i64 [ %590, %589 ], [ 0, %584 ]
  %596 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %593, %589 ], [ null, %584 ]
  %597 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %596, i64 %575
  %598 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %596, i64 %595
  %599 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %598 to i64
  %600 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %597, i64 0, i32 0
  store i16 %336, i16* %600, align 2
  %601 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %596, i64 %575, i32 1
  store i16 %560, i16* %601, align 2
  %602 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %596, i64 %575, i32 2
  store i8 1, i8* %602, align 2
  %603 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %597, i64 1
  %604 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %603 to i64
  %605 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %321, align 8
  %606 = load i64, i64* %93, align 8
  %607 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %605 to i64
  %608 = sub i64 %606, %607
  %609 = sdiv exact i64 %608, -6
  %610 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %597, i64 %609
  %611 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %610 to i64
  %612 = icmp sgt i64 %608, 0
  br i1 %612, label %613, label %617

613:                                              ; preds = %594
  %614 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %610 to i8*
  %615 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %605 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %614, i8* align 2 %615, i64 %608, i1 false) #14
  %616 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %321, align 8
  br label %617

617:                                              ; preds = %613, %594
  %618 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %605, %594 ], [ %616, %613 ]
  store i64 %611, i64* %90, align 8
  store i64 %604, i64* %93, align 8
  store i64 %599, i64* %320, align 8
  %619 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %618, null
  br i1 %619, label %622, label %620

620:                                              ; preds = %617
  %621 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %618 to i8*
  call void @_ZdlPv(i8* %621) #16
  br label %622

622:                                              ; preds = %565, %617, %620
  %623 = load i8, i8* %322, align 8, !range !2
  %624 = icmp eq i8 %623, 0
  br i1 %624, label %687, label %625

625:                                              ; preds = %622
  %626 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %97, align 8
  %627 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %323, align 8
  %628 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626, %627
  %629 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %627 to i64
  br i1 %628, label %630, label %636

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626, i64 0, i32 0
  store i16 %336, i16* %631, align 2
  %632 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626, i64 0, i32 1
  store i16 %560, i16* %632, align 2
  %633 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626, i64 0, i32 2
  store i8 1, i8* %633, align 2
  %634 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626, i64 1
  %635 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %634 to i64
  store i64 %635, i64* %98, align 8
  br label %687

636:                                              ; preds = %625
  %637 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %626 to i64
  %638 = load i64, i64* %95, align 8
  %639 = sub i64 %637, %638
  %640 = sdiv exact i64 %639, 6
  %641 = add nsw i64 %640, 1
  %642 = icmp ugt i64 %641, 3074457345618258602
  br i1 %642, label %643, label %645

643:                                              ; preds = %636
  %644 = bitcast %"class.std::__1::vector.2"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %644) #15
  unreachable

645:                                              ; preds = %636
  %646 = sub i64 %629, %638
  %647 = sdiv exact i64 %646, 6
  %648 = icmp ult i64 %647, 1537228672809129301
  br i1 %648, label %649, label %654

649:                                              ; preds = %645
  %650 = shl nsw i64 %647, 1
  %651 = icmp ult i64 %650, %641
  %652 = select i1 %651, i64 %641, i64 %650
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %659, label %654

654:                                              ; preds = %649, %645
  %655 = phi i64 [ %652, %649 ], [ 3074457345618258602, %645 ]
  %656 = mul i64 %655, 6
  %657 = call i8* @_Znwm(i64 %656) #16
  %658 = bitcast i8* %657 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %659

659:                                              ; preds = %654, %649
  %660 = phi i64 [ %655, %654 ], [ 0, %649 ]
  %661 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %658, %654 ], [ null, %649 ]
  %662 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %661, i64 %640
  %663 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %661, i64 %660
  %664 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %663 to i64
  %665 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %662, i64 0, i32 0
  store i16 %336, i16* %665, align 2
  %666 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %661, i64 %640, i32 1
  store i16 %560, i16* %666, align 2
  %667 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %661, i64 %640, i32 2
  store i8 1, i8* %667, align 2
  %668 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %662, i64 1
  %669 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %668 to i64
  %670 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  %671 = load i64, i64* %98, align 8
  %672 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %670 to i64
  %673 = sub i64 %671, %672
  %674 = sdiv exact i64 %673, -6
  %675 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %662, i64 %674
  %676 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %675 to i64
  %677 = icmp sgt i64 %673, 0
  br i1 %677, label %678, label %682

678:                                              ; preds = %659
  %679 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %675 to i8*
  %680 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %679, i8* align 2 %680, i64 %673, i1 false) #14
  %681 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %325, align 8
  br label %682

682:                                              ; preds = %678, %659
  %683 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %670, %659 ], [ %681, %678 ]
  store i64 %676, i64* %95, align 8
  store i64 %669, i64* %98, align 8
  store i64 %664, i64* %324, align 8
  %684 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %683, null
  br i1 %684, label %687, label %685

685:                                              ; preds = %682
  %686 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %683 to i8*
  call void @_ZdlPv(i8* %686) #16
  br label %687

687:                                              ; preds = %685, %682, %630, %622
  %688 = sext i16 %560 to i64
  %689 = mul nsw i64 %688, 250
  %690 = load i64, i64* %88, align 8
  %691 = add nsw i64 %690, %689
  store i64 %691, i64* %88, align 8
  br label %704

692:                                              ; preds = %353
  store i16 0, i16* %85, align 4
  %693 = load i32, i32* %81, align 8
  %694 = sext i32 %693 to i64
  %695 = mul nsw i64 %694, 64000
  store i64 %695, i64* %88, align 8
  %696 = load i64, i64* %90, align 8
  store i64 %696, i64* %93, align 8
  %697 = load i64, i64* %95, align 8
  store i64 %697, i64* %98, align 8
  %698 = load i64, i64* %100, align 8
  store i64 %698, i64* %103, align 8
  store i64 0, i64* %104, align 8
  store i8 1, i8* %105, align 8
  store i8 0, i8* %106, align 1
  store i64 20, i64* %107, align 8
  %699 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %699) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 488, i32 2, i32 0, i32 0) #14
  %700 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %701 = bitcast %"class.std::__1::basic_ostringstream"* %700 to %"class.std::__1::basic_ostream"*
  %702 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %701, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i64 30) #14
  %703 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %702, i16 zeroext %336) #14
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %699) #14
  br label %915

704:                                              ; preds = %415, %412, %362, %354, %353, %687, %547
  %705 = phi i64 [ %335, %353 ], [ %340, %687 ], [ %340, %547 ], [ %335, %354 ], [ %335, %362 ], [ %335, %412 ], [ %335, %415 ]
  %706 = add i16 %336, 1
  %707 = getelementptr inbounds i8, i8* %337, i64 1
  %708 = icmp eq i8* %707, %234
  br i1 %708, label %912, label %334

709:                                              ; preds = %313
  %710 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  store i8 0, i8* %710, align 1
  br i1 %239, label %912, label %711

711:                                              ; preds = %709
  %712 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %713 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %712 to i64*
  %714 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %89, i64 0, i32 0, i32 0
  %715 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 1
  %716 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %717 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %716 to i64*
  %718 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %94, i64 0, i32 0, i32 0
  br label %719

719:                                              ; preds = %711, %908
  %720 = phi i16 [ %237, %711 ], [ %909, %908 ]
  %721 = phi i8* [ %235, %711 ], [ %910, %908 ]
  %722 = load i8, i8* %721, align 1
  %723 = icmp ne i8 %722, 0
  br i1 %723, label %724, label %786

724:                                              ; preds = %719
  %725 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %92, align 8
  %726 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %712, align 8
  %727 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725, %726
  %728 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %726 to i64
  br i1 %727, label %729, label %735

729:                                              ; preds = %724
  %730 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725, i64 0, i32 0
  store i16 %720, i16* %730, align 2
  %731 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725, i64 0, i32 1
  store i16 0, i16* %731, align 2
  %732 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725, i64 0, i32 2
  store i8 1, i8* %732, align 2
  %733 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725, i64 1
  %734 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %733 to i64
  store i64 %734, i64* %93, align 8
  br label %786

735:                                              ; preds = %724
  %736 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %725 to i64
  %737 = load i64, i64* %90, align 8
  %738 = sub i64 %736, %737
  %739 = sdiv exact i64 %738, 6
  %740 = add nsw i64 %739, 1
  %741 = icmp ugt i64 %740, 3074457345618258602
  br i1 %741, label %742, label %744

742:                                              ; preds = %735
  %743 = bitcast %"class.std::__1::vector.2"* %89 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %743) #15
  unreachable

744:                                              ; preds = %735
  %745 = sub i64 %728, %737
  %746 = sdiv exact i64 %745, 6
  %747 = icmp ult i64 %746, 1537228672809129301
  br i1 %747, label %748, label %753

748:                                              ; preds = %744
  %749 = shl nsw i64 %746, 1
  %750 = icmp ult i64 %749, %740
  %751 = select i1 %750, i64 %740, i64 %749
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %758, label %753

753:                                              ; preds = %748, %744
  %754 = phi i64 [ %751, %748 ], [ 3074457345618258602, %744 ]
  %755 = mul i64 %754, 6
  %756 = call i8* @_Znwm(i64 %755) #16
  %757 = bitcast i8* %756 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %758

758:                                              ; preds = %753, %748
  %759 = phi i64 [ %754, %753 ], [ 0, %748 ]
  %760 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %757, %753 ], [ null, %748 ]
  %761 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %760, i64 %739
  %762 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %760, i64 %759
  %763 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %762 to i64
  %764 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %761, i64 0, i32 0
  store i16 %720, i16* %764, align 2
  %765 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %760, i64 %739, i32 1
  store i16 0, i16* %765, align 2
  %766 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %760, i64 %739, i32 2
  store i8 1, i8* %766, align 2
  %767 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %761, i64 1
  %768 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %767 to i64
  %769 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %714, align 8
  %770 = load i64, i64* %93, align 8
  %771 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %769 to i64
  %772 = sub i64 %770, %771
  %773 = sdiv exact i64 %772, -6
  %774 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %761, i64 %773
  %775 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %774 to i64
  %776 = icmp sgt i64 %772, 0
  br i1 %776, label %777, label %781

777:                                              ; preds = %758
  %778 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %774 to i8*
  %779 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %769 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %778, i8* align 2 %779, i64 %772, i1 false) #14
  %780 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %714, align 8
  br label %781

781:                                              ; preds = %777, %758
  %782 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %769, %758 ], [ %780, %777 ]
  store i64 %775, i64* %90, align 8
  store i64 %768, i64* %93, align 8
  store i64 %763, i64* %713, align 8
  %783 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %782, null
  br i1 %783, label %786, label %784

784:                                              ; preds = %781
  %785 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %782 to i8*
  call void @_ZdlPv(i8* %785) #16
  br label %786

786:                                              ; preds = %784, %781, %729, %719
  %787 = load i8, i8* %715, align 8, !range !2
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %908, label %789

789:                                              ; preds = %786
  %790 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %97, align 8
  %791 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %716, align 8
  %792 = icmp ult %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, %791
  %793 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %791 to i64
  br i1 %723, label %794, label %852

794:                                              ; preds = %789
  br i1 %792, label %795, label %801

795:                                              ; preds = %794
  %796 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 0, i32 0
  store i16 %720, i16* %796, align 2
  %797 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 0, i32 1
  store i16 0, i16* %797, align 2
  %798 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 0, i32 2
  store i8 1, i8* %798, align 2
  %799 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 1
  %800 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %799 to i64
  store i64 %800, i64* %98, align 8
  br label %908

801:                                              ; preds = %794
  %802 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790 to i64
  %803 = load i64, i64* %95, align 8
  %804 = sub i64 %802, %803
  %805 = sdiv exact i64 %804, 6
  %806 = add nsw i64 %805, 1
  %807 = icmp ugt i64 %806, 3074457345618258602
  br i1 %807, label %808, label %810

808:                                              ; preds = %801
  %809 = bitcast %"class.std::__1::vector.2"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %809) #15
  unreachable

810:                                              ; preds = %801
  %811 = sub i64 %793, %803
  %812 = sdiv exact i64 %811, 6
  %813 = icmp ult i64 %812, 1537228672809129301
  br i1 %813, label %814, label %819

814:                                              ; preds = %810
  %815 = shl nsw i64 %812, 1
  %816 = icmp ult i64 %815, %806
  %817 = select i1 %816, i64 %806, i64 %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %824, label %819

819:                                              ; preds = %814, %810
  %820 = phi i64 [ %817, %814 ], [ 3074457345618258602, %810 ]
  %821 = mul i64 %820, 6
  %822 = call i8* @_Znwm(i64 %821) #16
  %823 = bitcast i8* %822 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %824

824:                                              ; preds = %819, %814
  %825 = phi i64 [ %820, %819 ], [ 0, %814 ]
  %826 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %823, %819 ], [ null, %814 ]
  %827 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %826, i64 %805
  %828 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %826, i64 %825
  %829 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %828 to i64
  %830 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %827, i64 0, i32 0
  store i16 %720, i16* %830, align 2
  %831 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %826, i64 %805, i32 1
  store i16 0, i16* %831, align 2
  %832 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %826, i64 %805, i32 2
  store i8 1, i8* %832, align 2
  %833 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %827, i64 1
  %834 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %833 to i64
  %835 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %718, align 8
  %836 = load i64, i64* %98, align 8
  %837 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %835 to i64
  %838 = sub i64 %836, %837
  %839 = sdiv exact i64 %838, -6
  %840 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %827, i64 %839
  %841 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %840 to i64
  %842 = icmp sgt i64 %838, 0
  br i1 %842, label %843, label %847

843:                                              ; preds = %824
  %844 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %840 to i8*
  %845 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %835 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %844, i8* align 2 %845, i64 %838, i1 false) #14
  %846 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %718, align 8
  br label %847

847:                                              ; preds = %843, %824
  %848 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %835, %824 ], [ %846, %843 ]
  store i64 %841, i64* %95, align 8
  store i64 %834, i64* %98, align 8
  store i64 %829, i64* %717, align 8
  %849 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %848, null
  br i1 %849, label %908, label %850

850:                                              ; preds = %847
  %851 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %848 to i8*
  call void @_ZdlPv(i8* %851) #16
  br label %908

852:                                              ; preds = %789
  br i1 %792, label %853, label %858

853:                                              ; preds = %852
  %854 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 0, i32 0
  store i16 %720, i16* %854, align 2
  %855 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 0, i32 2
  store i8 0, i8* %855, align 2
  %856 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790, i64 1
  %857 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %856 to i64
  store i64 %857, i64* %98, align 8
  br label %908

858:                                              ; preds = %852
  %859 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %790 to i64
  %860 = load i64, i64* %95, align 8
  %861 = sub i64 %859, %860
  %862 = sdiv exact i64 %861, 6
  %863 = add nsw i64 %862, 1
  %864 = icmp ugt i64 %863, 3074457345618258602
  br i1 %864, label %865, label %867

865:                                              ; preds = %858
  %866 = bitcast %"class.std::__1::vector.2"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %866) #15
  unreachable

867:                                              ; preds = %858
  %868 = sub i64 %793, %860
  %869 = sdiv exact i64 %868, 6
  %870 = icmp ult i64 %869, 1537228672809129301
  br i1 %870, label %871, label %876

871:                                              ; preds = %867
  %872 = shl nsw i64 %869, 1
  %873 = icmp ult i64 %872, %863
  %874 = select i1 %873, i64 %863, i64 %872
  %875 = icmp eq i64 %874, 0
  br i1 %875, label %881, label %876

876:                                              ; preds = %871, %867
  %877 = phi i64 [ %874, %871 ], [ 3074457345618258602, %867 ]
  %878 = mul i64 %877, 6
  %879 = call i8* @_Znwm(i64 %878) #16
  %880 = bitcast i8* %879 to %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*
  br label %881

881:                                              ; preds = %876, %871
  %882 = phi i64 [ %877, %876 ], [ 0, %871 ]
  %883 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %880, %876 ], [ null, %871 ]
  %884 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %883, i64 %862
  %885 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %883, i64 %882
  %886 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %885 to i64
  %887 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %884, i64 0, i32 0
  store i16 %720, i16* %887, align 2
  %888 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %883, i64 %862, i32 2
  store i8 0, i8* %888, align 2
  %889 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %884, i64 1
  %890 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %889 to i64
  %891 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %718, align 8
  %892 = load i64, i64* %98, align 8
  %893 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %891 to i64
  %894 = sub i64 %892, %893
  %895 = sdiv exact i64 %894, -6
  %896 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %884, i64 %895
  %897 = ptrtoint %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %896 to i64
  %898 = icmp sgt i64 %894, 0
  br i1 %898, label %899, label %903

899:                                              ; preds = %881
  %900 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %896 to i8*
  %901 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %891 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %900, i8* align 2 %901, i64 %894, i1 false) #14
  %902 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %718, align 8
  br label %903

903:                                              ; preds = %899, %881
  %904 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %891, %881 ], [ %902, %899 ]
  store i64 %897, i64* %95, align 8
  store i64 %890, i64* %98, align 8
  store i64 %886, i64* %717, align 8
  %905 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %904, null
  br i1 %905, label %908, label %906

906:                                              ; preds = %903
  %907 = bitcast %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %904 to i8*
  call void @_ZdlPv(i8* %907) #16
  br label %908

908:                                              ; preds = %906, %903, %853, %850, %847, %795, %786
  %909 = add i16 %720, 1
  %910 = getelementptr inbounds i8, i8* %721, i64 1
  %911 = icmp eq i8* %910, %234
  br i1 %911, label %912, label %719

912:                                              ; preds = %704, %908, %317, %709
  %913 = phi i64 [ %136, %709 ], [ %136, %317 ], [ %136, %908 ], [ %705, %704 ]
  %914 = add i64 %913, 4
  store i64 %914, i64* %107, align 8
  br label %915

915:                                              ; preds = %912, %342, %692, %138
  %916 = phi i1 [ false, %138 ], [ true, %912 ], [ false, %342 ], [ false, %692 ]
  %917 = load i8*, i8** %118, align 8
  %918 = icmp eq i8* %917, null
  br i1 %918, label %921, label %919

919:                                              ; preds = %915
  %920 = ptrtoint i8* %917 to i64
  store i64 %920, i64* %124, align 8
  call void @_ZdlPv(i8* nonnull %917) #16
  br label %921

921:                                              ; preds = %915, %919
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #14
  br label %922

922:                                              ; preds = %111, %921, %34
  %923 = phi i1 [ false, %34 ], [ false, %111 ], [ %916, %921 ]
  %924 = load %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"*, %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"** %19, align 8
  %925 = icmp eq %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %924, null
  br i1 %925, label %934, label %926

926:                                              ; preds = %922
  %927 = getelementptr inbounds %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data", %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %924, i64 0, i32 0
  %928 = load i8*, i8** %927, align 8
  %929 = load i8, i8* %928, align 1
  %930 = icmp eq i8 %929, 0
  br i1 %930, label %934, label %931

931:                                              ; preds = %926
  %932 = getelementptr inbounds %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data", %"struct.webrtc::trace_event_internal::TraceEndOnScopeClose::Data"* %924, i64 0, i32 1
  %933 = load i8*, i8** %932, align 8
  call void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext 69, i8* %928, i8* %933, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #14
  br label %934

934:                                              ; preds = %922, %926, %931
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  ret i1 %923
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

declare i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #6

declare void @_ZN6webrtc4rtcp5Rtpfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Rtpfb"*, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"*, i16 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::rtcp::TransportFeedback"* @_ZN6webrtc4rtcp17TransportFeedback9ParseFromEPKhm(i8*, i64) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.webrtc::rtcp::CommonHeader", align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %3, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %3, i64 0, i32 2
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %3, i64 0, i32 3
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %3, i64 0, i32 4
  store i8* null, i8** %8, align 8
  %9 = call zeroext i1 @_ZN6webrtc4rtcp12CommonHeader5ParseEPKhm(%"class.webrtc::rtcp::CommonHeader"* nonnull %3, i8* %0, i64 %1) #14
  %10 = load i8, i8* %4, align 8
  %11 = icmp eq i8 %10, -51
  %12 = and i1 %9, %11
  %13 = load i8, i8* %5, align 1
  %14 = icmp eq i8 %13, 15
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %47

16:                                               ; preds = %2
  %17 = call i8* @_Znwm(i64 152) #16
  %18 = bitcast i8* %17 to %"class.webrtc::rtcp::TransportFeedback"*
  %19 = bitcast i8* %17 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp17TransportFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 16
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 18
  %26 = bitcast i8* %25 to i16*
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %17, i64 20
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 4
  %29 = getelementptr inbounds i8, i8* %17, i64 24
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %17, i64 28
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds i8, i8* %17, i64 29
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %17, i64 32
  %34 = getelementptr inbounds i8, i8* %17, i64 128
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %17, i64 136
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 80, i1 false) #14
  store i8 1, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %17, i64 137
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %17, i64 144
  %39 = bitcast i8* %38 to i64*
  store i64 20, i64* %39, align 8
  %40 = ptrtoint i8* %17 to i64
  %41 = call zeroext i1 @_ZN6webrtc4rtcp17TransportFeedback5ParseERKNS0_12CommonHeaderE(%"class.webrtc::rtcp::TransportFeedback"* nonnull %18, %"class.webrtc::rtcp::CommonHeader"* nonnull dereferenceable(16) %3)
  br i1 %41, label %47, label %42

42:                                               ; preds = %16
  %43 = bitcast i8* %17 to void (%"class.webrtc::rtcp::TransportFeedback"*)***
  %44 = load void (%"class.webrtc::rtcp::TransportFeedback"*)**, void (%"class.webrtc::rtcp::TransportFeedback"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.webrtc::rtcp::TransportFeedback"*)*, void (%"class.webrtc::rtcp::TransportFeedback"*)** %44, i64 1
  %46 = load void (%"class.webrtc::rtcp::TransportFeedback"*)*, void (%"class.webrtc::rtcp::TransportFeedback"*)** %45, align 8
  call void %46(%"class.webrtc::rtcp::TransportFeedback"* nonnull %18) #14
  br label %47

47:                                               ; preds = %16, %42, %2
  %48 = phi i64 [ 0, %2 ], [ 0, %42 ], [ %40, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  %49 = inttoptr i64 %48 to %"class.webrtc::rtcp::TransportFeedback"*
  ret %"class.webrtc::rtcp::TransportFeedback"* %49
}

declare zeroext i1 @_ZN6webrtc4rtcp12CommonHeader5ParseEPKhm(%"class.webrtc::rtcp::CommonHeader"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp17TransportFeedback12IsConsistentEv(%"class.webrtc::rtcp::TransportFeedback"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.webrtc::rtcp::TransportFeedback::LastChunk", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %11 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 2
  %16 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 3
  %17 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  store i64 0, i64* %15, align 8
  store i8 1, i8* %16, align 8
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %21 = load i16*, i16** %20, align 8
  %22 = icmp eq i16* %19, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %94, %1
  %24 = phi i64 [ 20, %1 ], [ %95, %94 ]
  %25 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %111, label %98

28:                                               ; preds = %1, %94
  %29 = phi i64 [ %95, %94 ], [ 20, %1 ]
  %30 = phi i16* [ %96, %94 ], [ %19, %1 ]
  %31 = load i16, i16* %30, align 2
  %32 = icmp sgt i16 %31, -1
  br i1 %32, label %33, label %52

33:                                               ; preds = %28
  %34 = and i16 %31, 8191
  %35 = zext i16 %34 to i64
  store i64 %35, i64* %15, align 8
  %36 = lshr i16 %31, 13
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 3
  %39 = icmp ugt i8 %38, 1
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %17, align 1
  store i8 1, i8* %16, align 8
  %41 = icmp eq i16 %34, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = load i8*, i8** %13, align 8
  br label %87

44:                                               ; preds = %33, %44
  %45 = phi i64 [ %47, %44 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 0, i64 %45
  store i8 %38, i8* %46, align 1
  %47 = add nuw i64 %45, 1
  %48 = load i64, i64* %15, align 8
  %49 = icmp ult i64 %48, 14
  %50 = select i1 %49, i64 %48, i64 14
  %51 = icmp ult i64 %47, %50
  br i1 %51, label %44, label %82

52:                                               ; preds = %28
  %53 = and i16 %31, 16384
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %68

55:                                               ; preds = %52
  store i64 14, i64* %15, align 8
  store i8 0, i8* %17, align 1
  store i8 0, i8* %16, align 8
  %56 = zext i16 %31 to i32
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %65, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = sub i32 13, %59
  %61 = lshr i32 %56, %60
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 1
  %64 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 0, i64 %58
  store i8 %63, i8* %64, align 1
  %65 = add nuw i64 %58, 1
  %66 = load i64, i64* %15, align 8
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %57, label %82

68:                                               ; preds = %52
  store i64 7, i64* %15, align 8
  store i8 1, i8* %17, align 1
  store i8 0, i8* %16, align 8
  %69 = zext i16 %31 to i32
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %79, %70 ]
  %72 = trunc i64 %71 to i32
  %73 = shl i32 %72, 1
  %74 = sub i32 12, %73
  %75 = lshr i32 %69, %74
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 3
  %78 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 0, i64 %71
  store i8 %77, i8* %78, align 1
  %79 = add nuw i64 %71, 1
  %80 = load i64, i64* %15, align 8
  %81 = icmp ult i64 %79, %80
  br i1 %81, label %70, label %82

82:                                               ; preds = %70, %57, %44
  %83 = phi i64 [ %48, %44 ], [ %66, %57 ], [ %80, %70 ]
  %84 = load i8, i8* %16, align 8
  %85 = icmp eq i8 %84, 0
  %86 = load i8*, i8** %13, align 8
  br i1 %85, label %91, label %87

87:                                               ; preds = %42, %82
  %88 = phi i64 [ 0, %42 ], [ %83, %82 ]
  %89 = phi i8* [ %43, %42 ], [ %86, %82 ]
  %90 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* nonnull %2, i8* %89, i64 %88, i8* nonnull dereferenceable(1) %14) #14
  br label %94

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::LastChunk", %"class.webrtc::rtcp::TransportFeedback::LastChunk"* %3, i64 0, i32 0, i64 %83
  %93 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %2, i8* %86, i8* nonnull %14, i8* %92) #14
  br label %94

94:                                               ; preds = %87, %91
  %95 = add i64 %29, 2
  %96 = getelementptr inbounds i16, i16* %30, i64 1
  %97 = icmp eq i16* %96, %21
  br i1 %97, label %23, label %28

98:                                               ; preds = %23
  %99 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = load i8*, i8** %13, align 8
  %103 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 0
  br i1 %101, label %106, label %104

104:                                              ; preds = %98
  %105 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* nonnull %2, i8* %102, i64 %26, i8* dereferenceable(1) %103) #14
  br label %109

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %26
  %108 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %2, i8* %102, i8* %103, i8* %107) #14
  br label %109

109:                                              ; preds = %104, %106
  %110 = add i64 %24, 2
  br label %111

111:                                              ; preds = %109, %23
  %112 = phi i64 [ %24, %23 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  %114 = load i16, i16* %113, align 4
  %115 = zext i16 %114 to i64
  %116 = bitcast i8** %13 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::vector"* %2 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = icmp eq i64 %120, %115
  %122 = inttoptr i64 %119 to i8*
  %123 = inttoptr i64 %117 to i8*
  br i1 %121, label %135, label %124

124:                                              ; preds = %111
  %125 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %125) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 548, i32 1, i32 0, i32 0) #14
  %126 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %127 = bitcast %"class.std::__1::basic_ostringstream"* %126 to %"class.std::__1::basic_ostream"*
  %128 = load i64, i64* %116, align 8
  %129 = load i64, i64* %118, align 8
  %130 = sub i64 %128, %129
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %127, i64 %130) #14
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i64 27) #14
  %133 = load i16, i16* %113, align 4
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %132, i16 zeroext %133) #14
  br label %253

135:                                              ; preds = %111
  %136 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = mul nsw i32 %137, 64000
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 0
  %141 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %140, align 8
  %142 = icmp eq i8* %122, %123
  br i1 %142, label %212, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  %145 = load i16, i16* %144, align 2
  %146 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %147 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  br label %148

148:                                              ; preds = %143, %201
  %149 = phi i16 [ %145, %143 ], [ %209, %201 ]
  %150 = phi i64 [ %139, %143 ], [ %203, %201 ]
  %151 = phi i64 [ %112, %143 ], [ %208, %201 ]
  %152 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %141, %143 ], [ %202, %201 ]
  %153 = phi i8* [ %122, %143 ], [ %210, %201 ]
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %201, label %156

156:                                              ; preds = %148
  %157 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %146, align 8
  %158 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, %157
  br i1 %158, label %159, label %165

159:                                              ; preds = %156
  %160 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %160) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 558, i32 1, i32 0, i32 0) #14
  %161 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %162 = bitcast %"class.std::__1::basic_ostringstream"* %161 to %"class.std::__1::basic_ostream"*
  %163 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %162, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i64 32) #14
  %164 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %163, i16 zeroext %149) #14
  br label %253

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, i64 0, i32 0
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, %149
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, i64 0, i32 0
  %171 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %171) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 562, i32 1, i32 0, i32 0) #14
  %172 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %173 = bitcast %"class.std::__1::basic_ostringstream"* %172 to %"class.std::__1::basic_ostream"*
  %174 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %173, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i64 34) #14
  %175 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %174, i16 zeroext %149) #14
  %176 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %175, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i64 20) #14
  %177 = load i16, i16* %170, align 2
  %178 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %176, i16 zeroext %177) #14
  br label %253

179:                                              ; preds = %165
  %180 = icmp eq i8 %154, 1
  %181 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, i64 0, i32 1
  %182 = load i16, i16* %181, align 2
  %183 = icmp ugt i16 %182, 255
  %184 = and i1 %180, %183
  br i1 %184, label %185, label %196

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, i64 0, i32 1
  %187 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %187) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 569, i32 1, i32 0, i32 0) #14
  %188 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %189 = bitcast %"class.std::__1::basic_ostringstream"* %188 to %"class.std::__1::basic_ostream"*
  %190 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %189, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #14
  %191 = load i16, i16* %186, align 2
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"* %190, i16 signext %191) #14
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #14
  %194 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %193, i16 zeroext %149) #14
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %194, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i64 26) #14
  br label %253

196:                                              ; preds = %179
  %197 = sext i16 %182 to i64
  %198 = mul nsw i64 %197, 250
  %199 = add nsw i64 %198, %150
  %200 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %152, i64 1
  br label %201

201:                                              ; preds = %148, %196
  %202 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %152, %148 ], [ %200, %196 ]
  %203 = phi i64 [ %150, %148 ], [ %199, %196 ]
  %204 = load i8, i8* %147, align 1, !range !2
  %205 = icmp eq i8 %204, 0
  %206 = select i1 %205, i8 0, i8 %154
  %207 = zext i8 %206 to i64
  %208 = add i64 %151, %207
  %209 = add i16 %149, 1
  %210 = getelementptr inbounds i8, i8* %153, i64 1
  %211 = icmp eq i8* %210, %123
  br i1 %211, label %212, label %148

212:                                              ; preds = %201, %135
  %213 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %141, %135 ], [ %202, %201 ]
  %214 = phi i64 [ %112, %135 ], [ %208, %201 ]
  %215 = phi i64 [ %139, %135 ], [ %203, %201 ]
  %216 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %217 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %216, align 8
  %218 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %213, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %212
  %220 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %220) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 583, i32 1, i32 0, i32 0) #14
  %221 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %222 = bitcast %"class.std::__1::basic_ostringstream"* %221 to %"class.std::__1::basic_ostream"*
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %222, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i64 27) #14
  %224 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %213, i64 0, i32 0
  %225 = load i16, i16* %224, align 2
  %226 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %223, i16 zeroext %225) #14
  br label %253

227:                                              ; preds = %212
  %228 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 7
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %215, %229
  br i1 %230, label %240, label %231

231:                                              ; preds = %227
  %232 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %232) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 588, i32 1, i32 0, i32 0) #14
  %233 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %234 = bitcast %"class.std::__1::basic_ostringstream"* %233 to %"class.std::__1::basic_ostream"*
  %235 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %234, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i64 37) #14
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %235, i64 %215) #14
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %236, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i64 9) #14
  %238 = load i64, i64* %228, align 8
  %239 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %237, i64 %238) #14
  br label %253

240:                                              ; preds = %227
  %241 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %242 = load i64, i64* %241, align 8
  %243 = icmp eq i64 %242, %214
  br i1 %243, label %256, label %244

244:                                              ; preds = %240
  %245 = bitcast %"class.rtc::DiagnosticLogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %245) #14
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %10, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i32 593, i32 1, i32 0, i32 0) #14
  %246 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %10, i64 0, i32 7
  %247 = bitcast %"class.std::__1::basic_ostringstream"* %246 to %"class.std::__1::basic_ostream"*
  %248 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %247, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i64 39) #14
  %249 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %248, i64 %214) #14
  %250 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %249, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i64 9) #14
  %251 = load i64, i64* %241, align 8
  %252 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %250, i64 %251) #14
  br label %253

253:                                              ; preds = %124, %185, %169, %159, %244, %231, %219
  %254 = phi %"class.rtc::DiagnosticLogMessage"* [ %8, %219 ], [ %9, %231 ], [ %10, %244 ], [ %5, %159 ], [ %6, %169 ], [ %7, %185 ], [ %4, %124 ]
  %255 = phi i8* [ %220, %219 ], [ %232, %231 ], [ %245, %244 ], [ %160, %159 ], [ %171, %169 ], [ %187, %185 ], [ %125, %124 ]
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %254) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %255) #14
  br label %256

256:                                              ; preds = %253, %240
  %257 = phi i1 [ true, %240 ], [ false, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  %258 = load i8*, i8** %12, align 8
  %259 = icmp eq i8* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i8* %258 to i64
  store i64 %261, i64* %116, align 8
  call void @_ZdlPv(i8* nonnull %258) #16
  br label %262

262:                                              ; preds = %256, %260
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  ret i1 %257
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"*, i16 signext) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback11BlockLengthEv(%"class.webrtc::rtcp::TransportFeedback"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = and i64 %4, -4
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp17TransportFeedback13PaddingLengthEv(%"class.webrtc::rtcp::TransportFeedback"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.webrtc::rtcp::TransportFeedback"* %0 to i64 (%"class.webrtc::rtcp::TransportFeedback"*)***
  %3 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)**, i64 (%"class.webrtc::rtcp::TransportFeedback"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %3, i64 2
  %5 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %4, align 8
  %6 = tail call i64 %5(%"class.webrtc::rtcp::TransportFeedback"* %0) #14
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp17TransportFeedback6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::TransportFeedback"*, i8*, i64*, i64, i8*, {}*) unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 3
  %8 = load i16, i16* %7, align 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %283, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.webrtc::rtcp::TransportFeedback"* %0 to i64 (%"class.webrtc::rtcp::TransportFeedback"*)***
  %12 = bitcast %"class.webrtc::rtcp::TransportFeedback"* %0 to %"class.webrtc::rtcp::RtcpPacket"*
  br label %13

13:                                               ; preds = %10, %21
  %14 = load i64, i64* %2, align 8
  %15 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)**, i64 (%"class.webrtc::rtcp::TransportFeedback"*)*** %11, align 8
  %16 = getelementptr inbounds i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %15, i64 2
  %17 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %16, align 8
  %18 = tail call i64 %17(%"class.webrtc::rtcp::TransportFeedback"* %0) #14
  %19 = add i64 %18, %14
  %20 = icmp ugt i64 %19, %3
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = tail call zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"* %12, i8* %1, i64* %2, i8* %4, {}* %5) #14
  br i1 %22, label %13, label %283

23:                                               ; preds = %13
  %24 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)**, i64 (%"class.webrtc::rtcp::TransportFeedback"*)*** %11, align 8
  %25 = getelementptr inbounds i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %24, i64 2
  %26 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %25, align 8
  %27 = tail call i64 %26(%"class.webrtc::rtcp::TransportFeedback"* %0) #14
  %28 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)**, i64 (%"class.webrtc::rtcp::TransportFeedback"*)*** %11, align 8
  %29 = getelementptr inbounds i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %28, i64 2
  %30 = load i64 (%"class.webrtc::rtcp::TransportFeedback"*)*, i64 (%"class.webrtc::rtcp::TransportFeedback"*)** %29, align 8
  %31 = tail call i64 %30(%"class.webrtc::rtcp::TransportFeedback"* %0) #14
  %32 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 12
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = icmp ne i64 %34, 0
  %36 = tail call i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"* %12) #14
  tail call void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmbPhPm(i64 15, i8 zeroext -51, i64 %36, i1 zeroext %35, i8* %1, i64* %2) #14
  %37 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 0
  %38 = load i64, i64* %2, align 8
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  tail call void @_ZNK6webrtc4rtcp5Rtpfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Rtpfb"* %37, i8* %39) #14
  %40 = load i64, i64* %2, align 8
  %41 = add i64 %40, 8
  store i64 %41, i64* %2, align 8
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = lshr i16 %44, 8
  %46 = trunc i16 %45 to i8
  store i8 %46, i8* %42, align 1
  %47 = trunc i16 %44 to i8
  %48 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 %47, i8* %48, align 1
  %49 = load i64, i64* %2, align 8
  %50 = add i64 %49, 2
  store i64 %50, i64* %2, align 8
  %51 = getelementptr inbounds i8, i8* %1, i64 %50
  %52 = load i16, i16* %7, align 4
  %53 = lshr i16 %52, 8
  %54 = trunc i16 %53 to i8
  store i8 %54, i8* %51, align 1
  %55 = trunc i16 %52 to i8
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %55, i8* %56, align 1
  %57 = load i64, i64* %2, align 8
  %58 = add i64 %57, 2
  store i64 %58, i64* %2, align 8
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  %60 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = lshr i32 %61, 16
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %59, align 1
  %64 = lshr i32 %61, 8
  %65 = trunc i32 %64 to i8
  %66 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %65, i8* %66, align 1
  %67 = trunc i32 %61 to i8
  %68 = getelementptr inbounds i8, i8* %59, i64 2
  store i8 %67, i8* %68, align 1
  %69 = load i64, i64* %2, align 8
  %70 = add i64 %69, 3
  store i64 %70, i64* %2, align 8
  %71 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 5
  %72 = load i8, i8* %71, align 4
  %73 = add i64 %69, 4
  store i64 %73, i64* %2, align 8
  %74 = getelementptr inbounds i8, i8* %1, i64 %70
  store i8 %72, i8* %74, align 1
  %75 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 10, i32 0, i32 1
  %78 = load i16*, i16** %77, align 8
  %79 = icmp eq i16* %76, %78
  br i1 %79, label %102, label %80

80:                                               ; preds = %23
  %81 = ptrtoint i16* %76 to i64
  %82 = load i64, i64* %2, align 8
  %83 = getelementptr i16, i16* %78, i64 -1
  %84 = ptrtoint i16* %83 to i64
  %85 = sub i64 %84, %81
  %86 = and i64 %85, 2
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %80
  %89 = load i16, i16* %76, align 2
  %90 = getelementptr inbounds i8, i8* %1, i64 %82
  %91 = lshr i16 %89, 8
  %92 = trunc i16 %91 to i8
  store i8 %92, i8* %90, align 1
  %93 = trunc i16 %89 to i8
  %94 = getelementptr inbounds i8, i8* %90, i64 1
  store i8 %93, i8* %94, align 1
  %95 = load i64, i64* %2, align 8
  %96 = add i64 %95, 2
  store i64 %96, i64* %2, align 8
  %97 = getelementptr inbounds i16, i16* %76, i64 1
  br label %98

98:                                               ; preds = %88, %80
  %99 = phi i64 [ %82, %80 ], [ %96, %88 ]
  %100 = phi i16* [ %76, %80 ], [ %97, %88 ]
  %101 = icmp ult i64 %85, 2
  br i1 %101, label %102, label %106

102:                                              ; preds = %98, %106, %23
  %103 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %210, label %128

106:                                              ; preds = %98, %106
  %107 = phi i64 [ %125, %106 ], [ %99, %98 ]
  %108 = phi i16* [ %126, %106 ], [ %100, %98 ]
  %109 = load i16, i16* %108, align 2
  %110 = getelementptr inbounds i8, i8* %1, i64 %107
  %111 = lshr i16 %109, 8
  %112 = trunc i16 %111 to i8
  store i8 %112, i8* %110, align 1
  %113 = trunc i16 %109 to i8
  %114 = getelementptr inbounds i8, i8* %110, i64 1
  store i8 %113, i8* %114, align 1
  %115 = load i64, i64* %2, align 8
  %116 = add i64 %115, 2
  store i64 %116, i64* %2, align 8
  %117 = getelementptr inbounds i16, i16* %108, i64 1
  %118 = load i16, i16* %117, align 2
  %119 = getelementptr inbounds i8, i8* %1, i64 %116
  %120 = lshr i16 %118, 8
  %121 = trunc i16 %120 to i8
  store i8 %121, i8* %119, align 1
  %122 = trunc i16 %118 to i8
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  store i8 %122, i8* %123, align 1
  %124 = load i64, i64* %2, align 8
  %125 = add i64 %124, 2
  store i64 %125, i64* %2, align 8
  %126 = getelementptr inbounds i16, i16* %108, i64 2
  %127 = icmp eq i16* %126, %78
  br i1 %127, label %102, label %106

128:                                              ; preds = %102
  %129 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 3
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %139, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 0
  %134 = load i8, i8* %133, align 8
  %135 = zext i8 %134 to i16
  %136 = shl i16 %135, 13
  %137 = trunc i64 %104 to i16
  %138 = or i16 %136, %137
  br label %200

139:                                              ; preds = %128
  %140 = icmp ult i64 %104, 8
  br i1 %140, label %173, label %141

141:                                              ; preds = %139
  %142 = and i64 %104, -4
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %164, %143 ]
  %145 = phi <2 x i16> [ <i16 -32768, i16 0>, %141 ], [ %162, %143 ]
  %146 = phi <2 x i16> [ zeroinitializer, %141 ], [ %163, %143 ]
  %147 = phi <2 x i32> [ <i32 0, i32 1>, %141 ], [ %165, %143 ]
  %148 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %144
  %149 = bitcast i8* %148 to <2 x i8>*
  %150 = load <2 x i8>, <2 x i8>* %149, align 1
  %151 = getelementptr inbounds i8, i8* %148, i64 2
  %152 = bitcast i8* %151 to <2 x i8>*
  %153 = load <2 x i8>, <2 x i8>* %152, align 1
  %154 = zext <2 x i8> %150 to <2 x i32>
  %155 = zext <2 x i8> %153 to <2 x i32>
  %156 = sub <2 x i32> <i32 13, i32 13>, %147
  %157 = sub <2 x i32> <i32 11, i32 11>, %147
  %158 = shl <2 x i32> %154, %156
  %159 = shl <2 x i32> %155, %157
  %160 = trunc <2 x i32> %158 to <2 x i16>
  %161 = trunc <2 x i32> %159 to <2 x i16>
  %162 = or <2 x i16> %145, %160
  %163 = or <2 x i16> %146, %161
  %164 = add i64 %144, 4
  %165 = add <2 x i32> %147, <i32 4, i32 4>
  %166 = icmp eq i64 %164, %142
  br i1 %166, label %167, label %143, !llvm.loop !79

167:                                              ; preds = %143
  %168 = or <2 x i16> %163, %162
  %169 = shufflevector <2 x i16> %168, <2 x i16> undef, <2 x i32> <i32 1, i32 undef>
  %170 = or <2 x i16> %168, %169
  %171 = extractelement <2 x i16> %170, i32 0
  %172 = icmp eq i64 %104, %142
  br i1 %172, label %200, label %187

173:                                              ; preds = %139, %173
  %174 = phi i64 [ %185, %173 ], [ 0, %139 ]
  %175 = phi i16 [ %184, %173 ], [ -16384, %139 ]
  %176 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %174
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = trunc i64 %174 to i32
  %180 = shl i32 %179, 1
  %181 = sub i32 12, %180
  %182 = shl i32 %178, %181
  %183 = trunc i32 %182 to i16
  %184 = or i16 %175, %183
  %185 = add nuw i64 %174, 1
  %186 = icmp eq i64 %185, %104
  br i1 %186, label %200, label %173, !llvm.loop !80

187:                                              ; preds = %167, %187
  %188 = phi i64 [ %198, %187 ], [ %142, %167 ]
  %189 = phi i16 [ %197, %187 ], [ %171, %167 ]
  %190 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 11, i32 0, i64 %188
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = trunc i64 %188 to i32
  %194 = sub i32 13, %193
  %195 = shl i32 %192, %194
  %196 = trunc i32 %195 to i16
  %197 = or i16 %189, %196
  %198 = add nuw i64 %188, 1
  %199 = icmp eq i64 %198, %104
  br i1 %199, label %200, label %187, !llvm.loop !81

200:                                              ; preds = %187, %173, %167, %132
  %201 = phi i16 [ %138, %132 ], [ %171, %167 ], [ %184, %173 ], [ %197, %187 ]
  %202 = load i64, i64* %2, align 8
  %203 = getelementptr inbounds i8, i8* %1, i64 %202
  %204 = lshr i16 %201, 8
  %205 = trunc i16 %204 to i8
  store i8 %205, i8* %203, align 1
  %206 = trunc i16 %201 to i8
  %207 = getelementptr inbounds i8, i8* %203, i64 1
  store i8 %206, i8* %207, align 1
  %208 = load i64, i64* %2, align 8
  %209 = add i64 %208, 2
  store i64 %209, i64* %2, align 8
  br label %210

210:                                              ; preds = %200, %102
  %211 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 6
  %212 = load i8, i8* %211, align 1, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %242, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 0
  %216 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %215, align 8
  %217 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback", %"class.webrtc::rtcp::TransportFeedback"* %0, i64 0, i32 8, i32 0, i32 1
  %218 = load %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"*, %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"** %217, align 8
  %219 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %216, %218
  br i1 %219, label %242, label %220

220:                                              ; preds = %214, %239
  %221 = phi %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* [ %240, %239 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %221, i64 0, i32 1
  %223 = load i16, i16* %222, align 2
  %224 = icmp ult i16 %223, 256
  br i1 %224, label %225, label %230

225:                                              ; preds = %220
  %226 = trunc i16 %223 to i8
  %227 = load i64, i64* %2, align 8
  %228 = add i64 %227, 1
  store i64 %228, i64* %2, align 8
  %229 = getelementptr inbounds i8, i8* %1, i64 %227
  store i8 %226, i8* %229, align 1
  br label %239

230:                                              ; preds = %220
  %231 = load i64, i64* %2, align 8
  %232 = getelementptr inbounds i8, i8* %1, i64 %231
  %233 = lshr i16 %223, 8
  %234 = trunc i16 %233 to i8
  store i8 %234, i8* %232, align 1
  %235 = trunc i16 %223 to i8
  %236 = getelementptr inbounds i8, i8* %232, i64 1
  store i8 %235, i8* %236, align 1
  %237 = load i64, i64* %2, align 8
  %238 = add i64 %237, 2
  store i64 %238, i64* %2, align 8
  br label %239

239:                                              ; preds = %230, %225
  %240 = getelementptr inbounds %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket", %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %221, i64 1
  %241 = icmp eq %"class.webrtc::rtcp::TransportFeedback::ReceivedPacket"* %240, %218
  br i1 %241, label %242, label %220

242:                                              ; preds = %239, %214, %210
  br i1 %35, label %243, label %283

243:                                              ; preds = %242
  %244 = add i64 %34, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %262, label %246

246:                                              ; preds = %243
  %247 = add i64 %31, -2
  %248 = sub i64 %247, %33
  %249 = and i64 %244, 3
  %250 = icmp ult i64 %248, 3
  br i1 %250, label %253, label %251

251:                                              ; preds = %246
  %252 = sub i64 %244, %249
  br label %267

253:                                              ; preds = %267, %246
  %254 = icmp eq i64 %249, 0
  br i1 %254, label %262, label %255

255:                                              ; preds = %253, %255
  %256 = phi i64 [ %260, %255 ], [ %249, %253 ]
  %257 = load i64, i64* %2, align 8
  %258 = add i64 %257, 1
  store i64 %258, i64* %2, align 8
  %259 = getelementptr inbounds i8, i8* %1, i64 %257
  store i8 0, i8* %259, align 1
  %260 = add i64 %256, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %255, !llvm.loop !82

262:                                              ; preds = %253, %255, %243
  %263 = trunc i64 %34 to i8
  %264 = load i64, i64* %2, align 8
  %265 = add i64 %264, 1
  store i64 %265, i64* %2, align 8
  %266 = getelementptr inbounds i8, i8* %1, i64 %264
  store i8 %263, i8* %266, align 1
  br label %283

267:                                              ; preds = %267, %251
  %268 = phi i64 [ %252, %251 ], [ %281, %267 ]
  %269 = load i64, i64* %2, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %2, align 8
  %271 = getelementptr inbounds i8, i8* %1, i64 %269
  store i8 0, i8* %271, align 1
  %272 = load i64, i64* %2, align 8
  %273 = add i64 %272, 1
  store i64 %273, i64* %2, align 8
  %274 = getelementptr inbounds i8, i8* %1, i64 %272
  store i8 0, i8* %274, align 1
  %275 = load i64, i64* %2, align 8
  %276 = add i64 %275, 1
  store i64 %276, i64* %2, align 8
  %277 = getelementptr inbounds i8, i8* %1, i64 %275
  store i8 0, i8* %277, align 1
  %278 = load i64, i64* %2, align 8
  %279 = add i64 %278, 1
  store i64 %279, i64* %2, align 8
  %280 = getelementptr inbounds i8, i8* %1, i64 %278
  store i8 0, i8* %280, align 1
  %281 = add i64 %268, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %253, label %267

283:                                              ; preds = %21, %242, %262, %6
  %284 = phi i1 [ false, %6 ], [ true, %262 ], [ true, %242 ], [ false, %21 ]
  ret i1 %284
}

declare zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"*, i8*, i64*, i8*, {}*) local_unnamed_addr #6

declare void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmbPhPm(i64, i8 zeroext, i64, i1 zeroext, i8*, i64*) local_unnamed_addr #6

declare i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"*) local_unnamed_addr #6

declare void @_ZNK6webrtc4rtcp5Rtpfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Rtpfb"*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD2Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp5RtpfbD0Ev(%"class.webrtc::rtcp::Rtpfb"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD0Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #4 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !6, !4}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !6, !4}
!12 = distinct !{!12, !6, !4}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !4}
!19 = distinct !{!19, !4}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !4}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !4}
!35 = distinct !{!35, !27}
!36 = distinct !{!36, !4}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !4}
!43 = distinct !{!43, !4}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !4}
!50 = distinct !{!50, !27}
!51 = distinct !{!51, !4}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !4}
!58 = distinct !{!58, !27}
!59 = distinct !{!59, !4}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !4}
!66 = distinct !{!66, !27}
!67 = distinct !{!67, !4}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !4}
!74 = distinct !{!74, !27}
!75 = distinct !{!75, !4}
!76 = !{!"branch_weights", i32 1, i32 1048575}
!77 = distinct !{!77, !4}
!78 = distinct !{!78, !6, !4}
!79 = distinct !{!79, !4}
!80 = distinct !{!80, !6, !4}
!81 = distinct !{!81, !6, !4}
!82 = distinct !{!82, !27}
