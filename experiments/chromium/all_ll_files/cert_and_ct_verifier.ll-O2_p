; ModuleID = '../../net/cert/cert_and_ct_verifier.cc'
source_filename = "../../net/cert/cert_and_ct_verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::CertAndCTVerifier" = type { %"class.net::CertVerifier", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1" }
%"class.net::CertVerifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::CertVerifier"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::CTVerifier"* }
%"class.net::CTVerifier" = type { i32 (...)** }
%"class.net::CertVerifier::RequestParams" = type { %class.scoped_refptr, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.16", %"class.std::__1::vector.20" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.16"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.35", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.43", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.38" }
%"class.net::HashValue" = type { i32, %union.anon.37 }
%union.anon.37 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.47" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.45, i32, [4 x i8] }>
%class.scoped_refptr.45 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.46", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.69", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.52" = type opaque
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.53" }
%"class.base::time_internal::TimeBase.53" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.54", %"class.std::__1::vector.61" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.56" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.63" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.net::CertVerifier::Config" = type { i8, i8, i8, i8, %class.scoped_refptr.70, %"class.std::__1::vector.71", %"class.std::__1::vector.71" }
%class.scoped_refptr.70 = type { %"class.net::CRLSet"* }
%"class.net::CRLSet" = type opaque
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.scoped_refptr* }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net17CertAndCTVerifierEFvRKNS3_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS3_16CertVerifyResultERKNS3_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS4_EES6_SB_SD_SE_EEESA_E7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net17CertAndCTVerifierEFvRKNS2_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS2_16CertVerifyResultERKNS2_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS3_EES5_SA_SC_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net17CertAndCTVerifierE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::CertAndCTVerifier"*)* @_ZN3net17CertAndCTVerifierD2Ev to i8*), i8* bitcast (void (%"class.net::CertAndCTVerifier"*)* @_ZN3net17CertAndCTVerifierD0Ev to i8*), i8* bitcast (i32 (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)* @_ZN3net17CertAndCTVerifier6VerifyERKNS_12CertVerifier13RequestParamsEPNS_16CertVerifyResultEN4base12OnceCallbackIFviEEEPNSt3__110unique_ptrINS1_7RequestENSB_14default_deleteISD_EEEERKNS_16NetLogWithSourceE to i8*), i8* bitcast (void (%"class.net::CertAndCTVerifier"*, %"struct.net::CertVerifier::Config"*)* @_ZN3net17CertAndCTVerifier9SetConfigERKNS_12CertVerifier6ConfigE to i8*)] }, align 8

@_ZN3net17CertAndCTVerifierC1ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEENS2_INS_10CTVerifierENS4_IS7_EEEE = hidden unnamed_addr alias void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier"*, %"class.net::CTVerifier"*), void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier"*, %"class.net::CTVerifier"*)* @_ZN3net17CertAndCTVerifierC2ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEENS2_INS_10CTVerifierENS4_IS7_EEEE
@_ZN3net17CertAndCTVerifierD1Ev = hidden unnamed_addr alias void (%"class.net::CertAndCTVerifier"*), void (%"class.net::CertAndCTVerifier"*)* @_ZN3net17CertAndCTVerifierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CertAndCTVerifierC2ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEENS2_INS_10CTVerifierENS4_IS7_EEEE(%"class.net::CertAndCTVerifier"* nocapture, %"class.net::CertVerifier"*, %"class.net::CTVerifier"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::CertVerifier"* %1 to i64
  %5 = ptrtoint %"class.net::CTVerifier"* %2 to i64
  %6 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net17CertAndCTVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::unique_ptr.1"* %9 to i64*
  store i64 %5, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CertAndCTVerifierD2Ev(%"class.net::CertAndCTVerifier"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net17CertAndCTVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::CTVerifier"*, %"class.net::CTVerifier"** %3, align 8
  store %"class.net::CTVerifier"* null, %"class.net::CTVerifier"** %3, align 8
  %5 = icmp eq %"class.net::CTVerifier"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::CTVerifier"* %4 to void (%"class.net::CTVerifier"*)***
  %8 = load void (%"class.net::CTVerifier"*)**, void (%"class.net::CTVerifier"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::CTVerifier"*)*, void (%"class.net::CTVerifier"*)** %8, i64 1
  %10 = load void (%"class.net::CTVerifier"*)*, void (%"class.net::CTVerifier"*)** %9, align 8
  tail call void %10(%"class.net::CTVerifier"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %12, align 8
  store %"class.net::CertVerifier"* null, %"class.net::CertVerifier"** %12, align 8
  %14 = icmp eq %"class.net::CertVerifier"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.net::CertVerifier"* %13 to void (%"class.net::CertVerifier"*)***
  %17 = load void (%"class.net::CertVerifier"*)**, void (%"class.net::CertVerifier"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::CertVerifier"*)*, void (%"class.net::CertVerifier"*)** %17, i64 1
  %19 = load void (%"class.net::CertVerifier"*)*, void (%"class.net::CertVerifier"*)** %18, align 8
  tail call void %19(%"class.net::CertVerifier"* nonnull %13) #6
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CertAndCTVerifierD0Ev(%"class.net::CertAndCTVerifier"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net17CertAndCTVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::CTVerifier"*, %"class.net::CTVerifier"** %3, align 8
  store %"class.net::CTVerifier"* null, %"class.net::CTVerifier"** %3, align 8
  %5 = icmp eq %"class.net::CTVerifier"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::CTVerifier"* %4 to void (%"class.net::CTVerifier"*)***
  %8 = load void (%"class.net::CTVerifier"*)**, void (%"class.net::CTVerifier"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::CTVerifier"*)*, void (%"class.net::CTVerifier"*)** %8, i64 1
  %10 = load void (%"class.net::CTVerifier"*)*, void (%"class.net::CTVerifier"*)** %9, align 8
  tail call void %10(%"class.net::CTVerifier"* nonnull %4) #6
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %12, align 8
  store %"class.net::CertVerifier"* null, %"class.net::CertVerifier"** %12, align 8
  %14 = icmp eq %"class.net::CertVerifier"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.net::CertVerifier"* %13 to void (%"class.net::CertVerifier"*)***
  %17 = load void (%"class.net::CertVerifier"*)**, void (%"class.net::CertVerifier"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::CertVerifier"*)*, void (%"class.net::CertVerifier"*)** %17, i64 1
  %19 = load void (%"class.net::CertVerifier"*)*, void (%"class.net::CertVerifier"*)** %18, align 8
  tail call void %19(%"class.net::CertVerifier"* nonnull %13) #6
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.net::CertAndCTVerifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net17CertAndCTVerifier6VerifyERKNS_12CertVerifier13RequestParamsEPNS_16CertVerifyResultEN4base12OnceCallbackIFviEEEPNSt3__110unique_ptrINS1_7RequestENSB_14default_deleteISD_EEEERKNS_16NetLogWithSourceE(%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"* dereferenceable(112), %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"* nocapture, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = ptrtoint %"class.net::CertVerifyResult"* %2 to i64
  %11 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = ptrtoint %"class.net::CertAndCTVerifier"* %0 to i64
  %14 = tail call i8* @_Znwm(i64 208) #7, !noalias !2
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net17CertAndCTVerifierEFvRKNS3_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS3_16CertVerifyResultERKNS3_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS4_EES6_SB_SD_SE_EEESA_E7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net17CertAndCTVerifierEFvRKNS2_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS2_16CertVerifyResultERKNS2_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS3_EES5_SA_SC_SD_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !2
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)* @_ZN3net17CertAndCTVerifier20OnCertVerifyCompleteERKNS_12CertVerifier13RequestParamsEN4base12OnceCallbackIFviEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEi to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %13, i64* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to %"class.net::CertVerifier::RequestParams"*
  tail call void @_ZN3net12CertVerifier13RequestParamsC1ERKS1_(%"class.net::CertVerifier::RequestParams"* %21, %"class.net::CertVerifier::RequestParams"* dereferenceable(112) %1) #6, !noalias !2
  %22 = getelementptr inbounds i8, i8* %14, i64 168
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !2
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8, !noalias !2
  %27 = getelementptr inbounds i8, i8* %14, i64 176
  %28 = bitcast i8* %27 to i64*
  store i64 %10, i64* %28, align 8, !noalias !2
  %29 = getelementptr inbounds i8, i8* %14, i64 184
  %30 = bitcast %"class.net::NetLogWithSource"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #6, !noalias !2
  %31 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %31, align 8
  %33 = ptrtoint i8* %14 to i64
  %34 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %35 = bitcast %"class.net::CertVerifier"* %32 to i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)***
  %36 = load i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)** %36, i64 2
  %38 = load i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::CertVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifyResult"*, %"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.52"*, %"class.net::NetLogWithSource"*)** %37, align 8
  %39 = call i32 %38(%"class.net::CertVerifier"* %32, %"class.net::CertVerifier::RequestParams"* dereferenceable(112) %1, %"class.net::CertVerifyResult"* %2, %"class.base::OnceCallback"* nonnull %8, %"class.std::__1::unique_ptr.52"* %4, %"class.net::NetLogWithSource"* dereferenceable(24) %5) #6
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #6
  switch i32 %39, label %41 [
    i32 -1, label %94
    i32 0, label %43
  ]

41:                                               ; preds = %6
  %42 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %39) #6
  br i1 %42, label %43, label %94

43:                                               ; preds = %6, %41
  %44 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"class.net::CTVerifier"*, %"class.net::CTVerifier"** %44, align 8
  %46 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  %59 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %2, i64 0, i32 2, i32 0
  %60 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %59, align 8
  %61 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %69 = select i1 %65, i8* %67, i8* %68
  %70 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %64 to i64
  %73 = select i1 %65, i64 %71, i64 %72
  %74 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %83 = select i1 %79, i8* %81, i8* %82
  store i8* %83, i8** %75, align 8
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %85 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %78 to i64
  %88 = select i1 %79, i64 %86, i64 %87
  store i64 %88, i64* %84, align 8
  %89 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %2, i64 0, i32 16
  %90 = bitcast %"class.net::CTVerifier"* %45 to void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)***
  %91 = load void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)**, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)** %91, i64 2
  %93 = load void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)** %92, align 8
  call void %93(%"class.net::CTVerifier"* %45, i8* %54, i64 %58, %"class.net::X509Certificate"* %60, i8* %69, i64 %73, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %9, %"class.std::__1::vector.43"* %89, %"class.net::NetLogWithSource"* dereferenceable(24) %5) #6
  br label %94

94:                                               ; preds = %6, %43, %41
  %95 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %95) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CertAndCTVerifier20OnCertVerifyCompleteERKNS_12CertVerifier13RequestParamsEN4base12OnceCallbackIFviEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEi(%"class.net::CertAndCTVerifier"* nocapture readonly, %"class.net::CertVerifier::RequestParams"* dereferenceable(112), %"class.base::OnceCallback"* nocapture, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"* dereferenceable(24), i32) #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %5) #6
  br i1 %11, label %12, label %63

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.net::CTVerifier"*, %"class.net::CTVerifier"** %13, align 8
  %15 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  %28 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %3, i64 0, i32 2, i32 0
  %29 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %28, align 8
  %30 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %38 = select i1 %34, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %33 to i64
  %42 = select i1 %34, i64 %40, i64 %41
  %43 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4
  %44 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %52 = select i1 %48, i8* %50, i8* %51
  store i8* %52, i8** %44, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %54 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %47 to i64
  %57 = select i1 %48, i64 %55, i64 %56
  store i64 %57, i64* %53, align 8
  %58 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %3, i64 0, i32 16
  %59 = bitcast %"class.net::CTVerifier"* %14 to void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)***
  %60 = load void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)**, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)** %60, i64 2
  %62 = load void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)*, void (%"class.net::CTVerifier"*, i8*, i64, %"class.net::X509Certificate"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.std::__1::vector.43"*, %"class.net::NetLogWithSource"*)** %61, align 8
  tail call void %62(%"class.net::CTVerifier"* %14, i8* %23, i64 %27, %"class.net::X509Certificate"* %29, i8* %38, i64 %42, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %8, %"class.std::__1::vector.43"* %58, %"class.net::NetLogWithSource"* dereferenceable(24) %4) #6
  br label %63

63:                                               ; preds = %12, %10
  %64 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #6
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %70 = inttoptr i64 %67 to %"class.base::internal::BindStateBase"*
  %71 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %70, i64 0, i32 1
  %72 = bitcast void ()** %71 to void (%"class.base::internal::BindStateBase"*, i32)**
  %73 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %72, align 8
  tail call void %73(%"class.base::internal::BindStateBase"* %70, i32 %5) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare zeroext i1 @_ZN3net18IsCertificateErrorEi(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CertAndCTVerifier9SetConfigERKNS_12CertVerifier6ConfigE(%"class.net::CertAndCTVerifier"* nocapture readonly, %"struct.net::CertVerifier::Config"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CertAndCTVerifier", %"class.net::CertAndCTVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %3, align 8
  %5 = bitcast %"class.net::CertVerifier"* %4 to void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)***
  %6 = load void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)**, void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)*, void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)** %6, i64 3
  %8 = load void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)*, void (%"class.net::CertVerifier"*, %"struct.net::CertVerifier::Config"*)** %7, align 8
  tail call void %8(%"class.net::CertVerifier"* %4, %"struct.net::CertVerifier::Config"* dereferenceable(64) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net17CertAndCTVerifierEFvRKNS3_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS3_16CertVerifyResultERKNS3_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS4_EES6_SB_SD_SE_EEESA_E7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::CertVerifier::RequestParams"*
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 15
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 16
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::CertVerifyResult"**
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 17
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.net::NetLogWithSource"*
  %15 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  %21 = getelementptr inbounds i8, i8* %7, i64 %19
  %22 = bitcast i8* %21 to %"class.net::CertAndCTVerifier"*
  %23 = and i64 %16, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %2
  %26 = bitcast i8* %21 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %16, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)**
  %31 = load void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)*, void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)** %30, align 8
  br label %34

32:                                               ; preds = %2
  %33 = inttoptr i64 %16 to void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)*
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi void (%"class.net::CertAndCTVerifier"*, %"class.net::CertVerifier::RequestParams"*, %"class.base::OnceCallback"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*, i32)* [ %31, %25 ], [ %33, %32 ]
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.base::internal::BindStateBase"**
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  %40 = load %"class.net::CertVerifyResult"*, %"class.net::CertVerifyResult"** %12, align 8
  call void %35(%"class.net::CertAndCTVerifier"* %22, %"class.net::CertVerifier::RequestParams"* dereferenceable(112) %9, %"class.base::OnceCallback"* nonnull %3, %"class.net::CertVerifyResult"* %40, %"class.net::NetLogWithSource"* dereferenceable(24) %14, i32 %1) #6
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net17CertAndCTVerifierEFvRKNS2_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS2_16CertVerifyResultERKNS2_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS3_EES5_SA_SC_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 5, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.net::NetLogWithSource"*
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %5) #6
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 5, i32 1
  %7 = bitcast void ()** %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #6
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %9 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %8 to %"class.net::CertVerifier::RequestParams"*
  tail call void @_ZN3net12CertVerifier13RequestParamsD1Ev(%"class.net::CertVerifier::RequestParams"* %9) #6
  %10 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net12CertVerifier13RequestParamsD1Ev(%"class.net::CertVerifier::RequestParams"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net12CertVerifier13RequestParamsC1ERKS1_(%"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifier::RequestParams"* dereferenceable(112)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net17CertAndCTVerifierEFvRKNS3_12CertVerifier13RequestParamsENS2_IFviEEEPNS3_16CertVerifyResultERKNS3_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS4_EES8_SA_RSC_SF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net17CertAndCTVerifierEFvRKNS3_12CertVerifier13RequestParamsENS2_IFviEEEPNS3_16CertVerifyResultERKNS3_16NetLogWithSourceEiEJNS0_17UnretainedWrapperIS4_EES8_SA_RSC_SF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net17CertAndCTVerifierEFvRKNS1_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS1_16CertVerifyResultERKNS1_16NetLogWithSourceEiEJNS_8internal17UnretainedWrapperIS2_EES6_S9_RSB_SE_EEENS7_INSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net17CertAndCTVerifierEFvRKNS1_12CertVerifier13RequestParamsENS_12OnceCallbackIFviEEEPNS1_16CertVerifyResultERKNS1_16NetLogWithSourceEiEJNS_8internal17UnretainedWrapperIS2_EES6_S9_RSB_SE_EEENS7_INSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
