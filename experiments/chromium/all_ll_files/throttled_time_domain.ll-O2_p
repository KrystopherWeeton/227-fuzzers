; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/throttling/throttled_time_domain.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/throttling/throttled_time_domain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::ThrottledTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.absl::optional" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.51" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.1, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.2", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.3", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.8, i8, [7 x i8] }>
%class.scoped_refptr.8 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.9", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.15", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.38", %"class.base::RepeatingCallback.39", %"class.absl::optional.40", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.22", %"struct.std::__1::less" }>
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.26" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.24, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.38" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.39" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.45", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.56", i64, [64 x %"class.base::RepeatingCallback.61"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.45", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i64 }
%"class.base::RepeatingCallback.61" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }

@_ZTVN5blink9scheduler19ThrottledTimeDomainE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZN5blink9scheduler19ThrottledTimeDomainD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZN5blink9scheduler19ThrottledTimeDomainD0Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::LazyNow"*, %"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZNK5blink9scheduler19ThrottledTimeDomain13CreateLazyNowEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZNK5blink9scheduler19ThrottledTimeDomain3NowEv to i8*), i8* bitcast ({ i8, i64 } (%"class.blink::scheduler::ThrottledTimeDomain"*, %"class.base::sequence_manager::LazyNow"*)* @_ZN5blink9scheduler19ThrottledTimeDomain17DelayTillNextTaskEPN4base16sequence_manager7LazyNowE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::ThrottledTimeDomain"*, i1)* @_ZN5blink9scheduler19ThrottledTimeDomain26MaybeFastForwardToNextTaskEb to i8*), i8* bitcast (void (%"class.blink::scheduler::ThrottledTimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)* @_ZN5blink9scheduler19ThrottledTimeDomain20SetNextDelayedDoWorkEPN4base16sequence_manager7LazyNowENS2_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv to i8*), i8* bitcast (i8* (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZNK5blink9scheduler19ThrottledTimeDomain7GetNameEv to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*)* @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"ThrottledTimeDomain\00", align 1

@_ZN5blink9scheduler19ThrottledTimeDomainC1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::ThrottledTimeDomain"*), void (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZN5blink9scheduler19ThrottledTimeDomainC2Ev
@_ZN5blink9scheduler19ThrottledTimeDomainD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::ThrottledTimeDomain"*), void (%"class.blink::scheduler::ThrottledTimeDomain"*)* @_ZN5blink9scheduler19ThrottledTimeDomainD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19ThrottledTimeDomainC2Ev(%"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainC2Ev(%"class.base::sequence_manager::TimeDomain"* %2) #6
  %3 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9scheduler19ThrottledTimeDomainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

declare void @_ZN4base16sequence_manager10TimeDomainC2Ev(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19ThrottledTimeDomainD2Ev(%"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19ThrottledTimeDomainD0Ev(%"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"* %2) #6
  %3 = bitcast %"class.blink::scheduler::ThrottledTimeDomain"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler19ThrottledTimeDomain13CreateLazyNowEv(%"class.base::sequence_manager::LazyNow"* noalias sret, %"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %1, i64 0, i32 0
  %4 = tail call %"class.base::sequence_manager::SequenceManager"* @_ZNK4base16sequence_manager10TimeDomain16sequence_managerEv(%"class.base::sequence_manager::TimeDomain"* %3) #6
  %5 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)***
  %6 = load %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)**, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)** %6, i64 11
  %8 = load %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)** %7, align 8
  %9 = tail call %"class.base::TickClock"* %8(%"class.base::sequence_manager::SequenceManager"* %4) #6
  tail call void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"* %0, %"class.base::TickClock"* %9) #6
  ret void
}

declare %"class.base::sequence_manager::SequenceManager"* @_ZNK4base16sequence_manager10TimeDomain16sequence_managerEv(%"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #1

declare void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"*, %"class.base::TickClock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9scheduler19ThrottledTimeDomain3NowEv(%"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0
  %3 = tail call %"class.base::sequence_manager::SequenceManager"* @_ZNK4base16sequence_manager10TimeDomain16sequence_managerEv(%"class.base::sequence_manager::TimeDomain"* %2) #6
  %4 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to i64 (%"class.base::sequence_manager::SequenceManager"*)***
  %5 = load i64 (%"class.base::sequence_manager::SequenceManager"*)**, i64 (%"class.base::sequence_manager::SequenceManager"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::sequence_manager::SequenceManager"*)*, i64 (%"class.base::sequence_manager::SequenceManager"*)** %5, i64 12
  %7 = load i64 (%"class.base::sequence_manager::SequenceManager"*)*, i64 (%"class.base::sequence_manager::SequenceManager"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::sequence_manager::SequenceManager"* %3) #6
  ret i64 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink9scheduler19ThrottledTimeDomain7GetNameEv(%"class.blink::scheduler::ThrottledTimeDomain"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler19ThrottledTimeDomain20SetNextDelayedDoWorkEPN4base16sequence_manager7LazyNowENS2_9TimeTicksE(%"class.blink::scheduler::ThrottledTimeDomain"* nocapture, %"class.base::sequence_manager::LazyNow"* nocapture, i64) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19ThrottledTimeDomain18SetNextTaskRunTimeEN4base9TimeTicksE(%"class.blink::scheduler::ThrottledTimeDomain"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %8

8:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN5blink9scheduler19ThrottledTimeDomain17DelayTillNextTaskEPN4base16sequence_manager7LazyNowE(%"class.blink::scheduler::ThrottledTimeDomain"*, %"class.base::sequence_manager::LazyNow"*) unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %1) #6
  %4 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %3
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = sub nsw i64 %9, %3
  br label %22

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %0, i64 0, i32 0
  %15 = tail call { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* %14) #6
  %16 = extractvalue { i8, i64 } %15, 0
  %17 = extractvalue { i8, i64 } %15, 1
  %18 = icmp ne i8 %16, 0
  %19 = icmp sge i64 %3, %17
  %20 = and i1 %19, %18
  %21 = zext i1 %20 to i8
  br label %22

22:                                               ; preds = %13, %11
  %23 = phi i8 [ 1, %11 ], [ %21, %13 ]
  %24 = phi i64 [ %12, %11 ], [ 0, %13 ]
  %25 = insertvalue { i8, i64 } undef, i8 %23, 0
  %26 = insertvalue { i8, i64 } %25, i64 %24, 1
  ret { i8, i64 } %26
}

declare i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #1

declare { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler19ThrottledTimeDomain26MaybeFastForwardToNextTaskEb(%"class.blink::scheduler::ThrottledTimeDomain"* nocapture readnone, i1 zeroext) unnamed_addr #4 align 2 {
  ret i1 false
}

declare void @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #1

declare void @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
