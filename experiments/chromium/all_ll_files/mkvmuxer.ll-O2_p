; ModuleID = '../../third_party/libwebm/source/mkvmuxer/mkvmuxer.cc'
source_filename = "../../third_party/libwebm/source/mkvmuxer/mkvmuxer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.mkvmuxer::IMkvWriter" = type { i32 (...)** }
%"class.mkvmuxer::Frame" = type <{ i64, i8*, i64, i64, i8, [7 x i8], i8*, i8, [7 x i8], i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.mkvmuxer::CuePoint" = type <{ i64, i64, i64, i64, i8, [7 x i8] }>
%"class.mkvmuxer::Cues" = type <{ i32, i32, %"class.mkvmuxer::CuePoint"**, i8, [7 x i8] }>
%"class.mkvmuxer::ContentEncAESSettings" = type { i64 }
%"class.mkvmuxer::ContentEncoding" = type { i64, i8*, i64, i64, i64, %"class.mkvmuxer::ContentEncAESSettings", i64 }
%"class.mkvmuxer::Track" = type <{ i32 (...)**, i8*, i8*, i8*, i64, i8*, i64, i64, i64, i64, i64, i64, i64, %"class.mkvmuxer::ContentEncoding"**, i32, [4 x i8] }>
%"class.mkvmuxer::VideoTrack" = type { %"class.mkvmuxer::Track.base", i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, i8*, %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Projection"* }
%"class.mkvmuxer::Track.base" = type <{ i32 (...)**, i8*, i8*, i8*, i64, i8*, i64, i64, i64, i64, i64, i64, i64, %"class.mkvmuxer::ContentEncoding"**, i32 }>
%"class.mkvmuxer::Colour" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.mkvmuxer::MasteringMetadata"* }
%"class.mkvmuxer::MasteringMetadata" = type { float, float, %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"* }
%"class.mkvmuxer::PrimaryChromaticity" = type { float, float }
%"class.mkvmuxer::Projection" = type { i32, float, float, float, i8*, i64 }
%"class.mkvmuxer::AudioTrack" = type { %"class.mkvmuxer::Track.base", i64, i64, double }
%"class.mkvmuxer::Tracks" = type <{ %"class.mkvmuxer::Track"**, i32, i8, [3 x i8] }>
%"class.mkvmuxer::Chapter" = type { i8*, i64, i64, i64, %"class.mkvmuxer::Chapter::Display"*, i32, i32 }
%"class.mkvmuxer::Chapter::Display" = type { i8*, i8*, i8* }
%"class.mkvmuxer::Chapters" = type { i32, i32, %"class.mkvmuxer::Chapter"* }
%"class.mkvmuxer::Tag" = type { %"class.mkvmuxer::Tag::SimpleTag"*, i32, i32 }
%"class.mkvmuxer::Tag::SimpleTag" = type { i8*, i8* }
%"class.mkvmuxer::Tags" = type { i32, i32, %"class.mkvmuxer::Tag"* }
%"class.mkvmuxer::Cluster" = type { i32, i8, i8, i8, i64, i64, i64, i64, i64, i8, %"class.std::__1::map", %"class.std::__1::map.25", %"class.mkvmuxer::IMkvWriter"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::map.25" = type { %"class.std::__1::__tree.26" }
%"class.std::__1::__tree.26" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.mkvmuxer::SeekHead" = type { [5 x i32], [5 x i64], i64 }
%"class.mkvmuxer::SegmentInfo" = type { double, i8*, i64, i8*, i64, i64 }
%"class.mkvmuxer::Segment" = type { i32, [4 x i8], %"class.mkvmuxer::Cues", %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Tags", i32, i8*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, i8, i8*, i64, %"class.mkvmuxer::Cluster"**, i32, i32, i32, i64, i8, %"class.mkvmuxer::Frame"**, i32, i32, i8, i8, i64, i64, [126 x i64], [126 x i64], i64, i64, i32, i8, i8, i8, i8, i8, i32, i64, i64, i32, i32, double, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"* }
%"class.mkvmuxer::MkvWriter" = type <{ %"class.mkvmuxer::IMkvWriter", %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.mkvparser::IMkvReader" = type { i32 (...)** }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mkvmuxer::Colour"* }
%"struct.std::__1::default_delete.11" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.mkvmuxer::Frame"* }
%"class.std::__1::__tree_node.48" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.49" }
%"struct.std::__1::__value_type.49" = type { %"struct.std::__1::pair.50" }
%"struct.std::__1::pair.50" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__list_iterator"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNKSt3__114default_deleteIN8mkvmuxer6ColourEEclEPS2_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN8mkvmuxer19PrimaryChromaticity16kChromaticityMinE = hidden local_unnamed_addr constant float 0.000000e+00, align 4
@_ZN8mkvmuxer19PrimaryChromaticity16kChromaticityMaxE = hidden local_unnamed_addr constant float 1.000000e+00, align 4
@_ZN8mkvmuxer17MasteringMetadata13kMinLuminanceE = hidden local_unnamed_addr constant float 0.000000e+00, align 4
@_ZN8mkvmuxer17MasteringMetadata16kMinLuminanceMaxE = hidden local_unnamed_addr constant float 0x408F3FEB80000000, align 4
@_ZN8mkvmuxer17MasteringMetadata16kMaxLuminanceMaxE = hidden local_unnamed_addr constant float 0x40C387FEC0000000, align 4
@_ZN8mkvmuxer17MasteringMetadata16kValueNotPresentE = hidden local_unnamed_addr constant float 0x47EFFFFFE0000000, align 4
@_ZN8mkvmuxer6Colour16kValueNotPresentE = hidden local_unnamed_addr constant i64 -1, align 8
@_ZTVN8mkvmuxer10IMkvWriterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.mkvmuxer::IMkvWriter"*)* @_ZN8mkvmuxer10IMkvWriterD2Ev to i8*), i8* bitcast (void (%"class.mkvmuxer::IMkvWriter"*)* @_ZN8mkvmuxer10IMkvWriterD0Ev to i8*)] }, align 8
@_ZN8mkvmuxer12_GLOBAL__N_112kDocTypeWebmE = internal constant [5 x i8] c"webm\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZTVN8mkvmuxer5TrackE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD2Ev to i8*), i8* bitcast (void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD0Ev to i8*), i8* bitcast (i1 (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5Track18AddContentEncodingEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::Track"*)* @_ZNK8mkvmuxer5Track11PayloadSizeEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::Track"*)* @_ZNK8mkvmuxer5Track4SizeEv to i8*), i8* bitcast (i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)* @_ZNK8mkvmuxer5Track5WriteEPNS_10IMkvWriterE to i8*)] }, align 8
@_ZTVN8mkvmuxer10VideoTrackE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mkvmuxer::VideoTrack"*)* @_ZN8mkvmuxer10VideoTrackD2Ev to i8*), i8* bitcast (void (%"class.mkvmuxer::VideoTrack"*)* @_ZN8mkvmuxer10VideoTrackD0Ev to i8*), i8* bitcast (i1 (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5Track18AddContentEncodingEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::VideoTrack"*)* @_ZNK8mkvmuxer10VideoTrack11PayloadSizeEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::Track"*)* @_ZNK8mkvmuxer5Track4SizeEv to i8*), i8* bitcast (i1 (%"class.mkvmuxer::VideoTrack"*, %"class.mkvmuxer::IMkvWriter"*)* @_ZNK8mkvmuxer10VideoTrack5WriteEPNS_10IMkvWriterE to i8*)] }, align 8
@_ZTVN8mkvmuxer10AudioTrackE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD2Ev to i8*), i8* bitcast (void (%"class.mkvmuxer::AudioTrack"*)* @_ZN8mkvmuxer10AudioTrackD0Ev to i8*), i8* bitcast (i1 (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5Track18AddContentEncodingEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::AudioTrack"*)* @_ZNK8mkvmuxer10AudioTrack11PayloadSizeEv to i8*), i8* bitcast (i64 (%"class.mkvmuxer::Track"*)* @_ZNK8mkvmuxer5Track4SizeEv to i8*), i8* bitcast (i1 (%"class.mkvmuxer::AudioTrack"*, %"class.mkvmuxer::IMkvWriter"*)* @_ZNK8mkvmuxer10AudioTrack5WriteEPNS_10IMkvWriterE to i8*)] }, align 8
@_ZN8mkvmuxer6Tracks12kOpusCodecIdE = hidden constant [7 x i8] c"A_OPUS\00", align 1
@_ZN8mkvmuxer6Tracks14kVorbisCodecIdE = hidden constant [9 x i8] c"A_VORBIS\00", align 1
@_ZN8mkvmuxer6Tracks11kAv1CodecIdE = hidden constant [6 x i8] c"V_AV1\00", align 1
@_ZN8mkvmuxer6Tracks11kVp8CodecIdE = hidden constant [6 x i8] c"V_VP8\00", align 1
@_ZN8mkvmuxer6Tracks11kVp9CodecIdE = hidden constant [6 x i8] c"V_VP9\00", align 1
@_ZN8mkvmuxer6Tracks17kWebVttCaptionsIdE = hidden constant [18 x i8] c"D_WEBVTT/CAPTIONS\00", align 16
@_ZN8mkvmuxer6Tracks21kWebVttDescriptionsIdE = hidden constant [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", align 16
@_ZN8mkvmuxer6Tracks17kWebVttMetadataIdE = hidden constant [18 x i8] c"D_WEBVTT/METADATA\00", align 16
@_ZN8mkvmuxer6Tracks18kWebVttSubtitlesIdE = hidden constant [19 x i8] c"D_WEBVTT/SUBTITLES\00", align 16
@.str = private unnamed_addr constant [20 x i8] c"libwebm-%d.%d.%d.%d\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"cues\00", align 1
@_ZN8mkvmuxer12_GLOBAL__N_116kDocTypeMatroskaE = internal constant [9 x i8] c"matroska\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"chk\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c".hdr\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"_%06d.%s\00", align 1
@__const._ZNK8mkvmuxer7Segment13DocTypeIsWebmEv.kWebmCodecIds = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN8mkvmuxer6Tracks12kOpusCodecIdE, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8mkvmuxer6Tracks14kVorbisCodecIdE, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN8mkvmuxer6Tracks11kAv1CodecIdE, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN8mkvmuxer6Tracks11kVp8CodecIdE, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN8mkvmuxer6Tracks11kVp9CodecIdE, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN8mkvmuxer6Tracks17kWebVttCaptionsIdE, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN8mkvmuxer6Tracks21kWebVttDescriptionsIdE, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN8mkvmuxer6Tracks17kWebVttMetadataIdE, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN8mkvmuxer6Tracks18kWebVttSubtitlesIdE, i32 0, i32 0)], align 16

@_ZN8mkvmuxer10IMkvWriterD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::IMkvWriter"*), void (%"class.mkvmuxer::IMkvWriter"*)* @_ZN8mkvmuxer10IMkvWriterD2Ev
@_ZN8mkvmuxer5FrameC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Frame"*), void (%"class.mkvmuxer::Frame"*)* @_ZN8mkvmuxer5FrameC2Ev
@_ZN8mkvmuxer5FrameD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Frame"*), void (%"class.mkvmuxer::Frame"*)* @_ZN8mkvmuxer5FrameD2Ev
@_ZN8mkvmuxer8CuePointC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::CuePoint"*), void (%"class.mkvmuxer::CuePoint"*)* @_ZN8mkvmuxer8CuePointC2Ev
@_ZN8mkvmuxer8CuePointD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::CuePoint"*), void (%"class.mkvmuxer::CuePoint"*)* @_ZN8mkvmuxer8CuePointD2Ev
@_ZN8mkvmuxer4CuesC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Cues"*), void (%"class.mkvmuxer::Cues"*)* @_ZN8mkvmuxer4CuesC2Ev
@_ZN8mkvmuxer4CuesD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Cues"*), void (%"class.mkvmuxer::Cues"*)* @_ZN8mkvmuxer4CuesD2Ev
@_ZN8mkvmuxer21ContentEncAESSettingsC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::ContentEncAESSettings"*), void (%"class.mkvmuxer::ContentEncAESSettings"*)* @_ZN8mkvmuxer21ContentEncAESSettingsC2Ev
@_ZN8mkvmuxer15ContentEncodingC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::ContentEncoding"*), void (%"class.mkvmuxer::ContentEncoding"*)* @_ZN8mkvmuxer15ContentEncodingC2Ev
@_ZN8mkvmuxer15ContentEncodingD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::ContentEncoding"*), void (%"class.mkvmuxer::ContentEncoding"*)* @_ZN8mkvmuxer15ContentEncodingD2Ev
@_ZN8mkvmuxer5TrackC1EPj = hidden unnamed_addr alias void (%"class.mkvmuxer::Track"*, i32*), void (%"class.mkvmuxer::Track"*, i32*)* @_ZN8mkvmuxer5TrackC2EPj
@_ZN8mkvmuxer5TrackD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Track"*), void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD2Ev
@_ZN8mkvmuxer10VideoTrackC1EPj = hidden unnamed_addr alias void (%"class.mkvmuxer::VideoTrack"*, i32*), void (%"class.mkvmuxer::VideoTrack"*, i32*)* @_ZN8mkvmuxer10VideoTrackC2EPj
@_ZN8mkvmuxer10VideoTrackD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::VideoTrack"*), void (%"class.mkvmuxer::VideoTrack"*)* @_ZN8mkvmuxer10VideoTrackD2Ev
@_ZN8mkvmuxer10AudioTrackC1EPj = hidden unnamed_addr alias void (%"class.mkvmuxer::AudioTrack"*, i32*), void (%"class.mkvmuxer::AudioTrack"*, i32*)* @_ZN8mkvmuxer10AudioTrackC2EPj
@_ZN8mkvmuxer10AudioTrackD2Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::AudioTrack"*), bitcast (void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD2Ev to void (%"class.mkvmuxer::AudioTrack"*)*)
@_ZN8mkvmuxer10AudioTrackD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::AudioTrack"*), bitcast (void (%"class.mkvmuxer::Track"*)* @_ZN8mkvmuxer5TrackD2Ev to void (%"class.mkvmuxer::AudioTrack"*)*)
@_ZN8mkvmuxer6TracksC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tracks"*), void (%"class.mkvmuxer::Tracks"*)* @_ZN8mkvmuxer6TracksC2Ev
@_ZN8mkvmuxer6TracksD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tracks"*), void (%"class.mkvmuxer::Tracks"*)* @_ZN8mkvmuxer6TracksD2Ev
@_ZN8mkvmuxer7ChapterC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Chapter"*), void (%"class.mkvmuxer::Chapter"*)* @_ZN8mkvmuxer7ChapterC2Ev
@_ZN8mkvmuxer7ChapterD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Chapter"*), void (%"class.mkvmuxer::Chapter"*)* @_ZN8mkvmuxer7ChapterD2Ev
@_ZN8mkvmuxer8ChaptersC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Chapters"*), void (%"class.mkvmuxer::Chapters"*)* @_ZN8mkvmuxer8ChaptersC2Ev
@_ZN8mkvmuxer8ChaptersD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Chapters"*), void (%"class.mkvmuxer::Chapters"*)* @_ZN8mkvmuxer8ChaptersD2Ev
@_ZN8mkvmuxer3TagC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tag"*), void (%"class.mkvmuxer::Tag"*)* @_ZN8mkvmuxer3TagC2Ev
@_ZN8mkvmuxer3TagD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tag"*), void (%"class.mkvmuxer::Tag"*)* @_ZN8mkvmuxer3TagD2Ev
@_ZN8mkvmuxer4TagsC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tags"*), void (%"class.mkvmuxer::Tags"*)* @_ZN8mkvmuxer4TagsC2Ev
@_ZN8mkvmuxer4TagsD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Tags"*), void (%"class.mkvmuxer::Tags"*)* @_ZN8mkvmuxer4TagsD2Ev
@_ZN8mkvmuxer7ClusterC1Emlmbb = hidden unnamed_addr alias void (%"class.mkvmuxer::Cluster"*, i64, i64, i64, i1, i1), void (%"class.mkvmuxer::Cluster"*, i64, i64, i64, i1, i1)* @_ZN8mkvmuxer7ClusterC2Emlmbb
@_ZN8mkvmuxer7ClusterD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Cluster"*), void (%"class.mkvmuxer::Cluster"*)* @_ZN8mkvmuxer7ClusterD2Ev
@_ZN8mkvmuxer8SeekHeadC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::SeekHead"*), void (%"class.mkvmuxer::SeekHead"*)* @_ZN8mkvmuxer8SeekHeadC2Ev
@_ZN8mkvmuxer8SeekHeadD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::SeekHead"*), void (%"class.mkvmuxer::SeekHead"*)* @_ZN8mkvmuxer8SeekHeadD2Ev
@_ZN8mkvmuxer11SegmentInfoC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::SegmentInfo"*), void (%"class.mkvmuxer::SegmentInfo"*)* @_ZN8mkvmuxer11SegmentInfoC2Ev
@_ZN8mkvmuxer11SegmentInfoD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::SegmentInfo"*), void (%"class.mkvmuxer::SegmentInfo"*)* @_ZN8mkvmuxer11SegmentInfoD2Ev
@_ZN8mkvmuxer7SegmentC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Segment"*), void (%"class.mkvmuxer::Segment"*)* @_ZN8mkvmuxer7SegmentC2Ev
@_ZN8mkvmuxer7SegmentD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::Segment"*), void (%"class.mkvmuxer::Segment"*)* @_ZN8mkvmuxer7SegmentD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer10IMkvWriterC2Ev(%"class.mkvmuxer::IMkvWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::IMkvWriter", %"class.mkvmuxer::IMkvWriter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8mkvmuxer10IMkvWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer10IMkvWriterD2Ev(%"class.mkvmuxer::IMkvWriter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10IMkvWriterD0Ev(%"class.mkvmuxer::IMkvWriter"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEmPKc(%"class.mkvmuxer::IMkvWriter"*, i64, i8*) local_unnamed_addr #4 {
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17030, i64 1) #20
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17143, i64 1) #20
  %6 = add i64 %5, %4
  %7 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17138, i64 4) #20
  %8 = add i64 %6, %7
  %9 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17139, i64 8) #20
  %10 = add i64 %8, %9
  %11 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17026, i8* %2) #20
  %12 = add i64 %10, %11
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17031, i64 %1) #20
  %14 = add i64 %12, %13
  %15 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 17029, i64 2) #20
  %16 = add i64 %14, %15
  %17 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 440786851, i64 %16) #20
  br i1 %17, label %18, label %32

18:                                               ; preds = %3
  %19 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17030, i64 1) #20
  br i1 %19, label %20, label %32

20:                                               ; preds = %18
  %21 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17143, i64 1) #20
  br i1 %21, label %22, label %32

22:                                               ; preds = %20
  %23 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17138, i64 4) #20
  br i1 %23, label %24, label %32

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17139, i64 8) #20
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* %0, i64 17026, i8* %2) #20
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17031, i64 %1) #20
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %0, i64 17029, i64 2) #20
  br label %32

32:                                               ; preds = %30, %28, %26, %24, %22, %20, %18, %3
  %33 = phi i1 [ false, %3 ], [ false, %18 ], [ false, %20 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %28 ], [ %31, %30 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64, i64) local_unnamed_addr #6

declare i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64, i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"*, i64, i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEm(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #4 {
  %3 = tail call zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEmPKc(%"class.mkvmuxer::IMkvWriter"* %0, i64 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_112kDocTypeWebmE, i64 0, i64 0))
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterE(%"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 {
  %2 = tail call zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEmPKc(%"class.mkvmuxer::IMkvWriter"* %0, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_112kDocTypeWebmE, i64 0, i64 0)) #20
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer11ChunkedCopyEPN9mkvparser10IMkvReaderEPNS_10IMkvWriterEll(%"class.mkvparser::IMkvReader"*, %"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #4 {
  %5 = tail call i8* @_Znam(i64 2048) #21
  %6 = icmp sgt i64 %3, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %4
  %8 = bitcast %"class.mkvparser::IMkvReader"* %0 to i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)***
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  br label %10

10:                                               ; preds = %7, %19
  %11 = phi i64 [ %2, %7 ], [ %24, %19 ]
  %12 = phi i64 [ %3, %7 ], [ %25, %19 ]
  %13 = icmp slt i64 %12, 2048
  %14 = select i1 %13, i64 %12, i64 2048
  %15 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)**, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*** %8, align 8
  %16 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)** %15, align 8
  %17 = tail call i32 %16(%"class.mkvparser::IMkvReader"* %0, i64 %11, i64 %14, i8* nonnull %5) #20
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %10
  %20 = trunc i64 %14 to i32
  %21 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %9, align 8
  %22 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.mkvmuxer::IMkvWriter"* %1, i8* nonnull %5, i32 %20) #20
  %24 = add nsw i64 %14, %11
  %25 = sub nsw i64 %12, %14
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %10, label %27

27:                                               ; preds = %19, %4
  tail call void @_ZdaPv(i8* nonnull %5) #21
  br label %28

28:                                               ; preds = %10, %27
  %29 = phi i1 [ true, %27 ], [ false, %10 ]
  ret i1 %29
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer5FrameC2Ev(%"class.mkvmuxer::Frame"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 6
  store i8* null, i8** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 7
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 9
  %5 = bitcast %"class.mkvmuxer::Frame"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 33, i1 false)
  %6 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 41, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5FrameD2Ev(%"class.mkvmuxer::Frame"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 6
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #21
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer5Frame8CopyFromERKS0_(%"class.mkvmuxer::Frame"* nocapture, %"class.mkvmuxer::Frame"* nocapture readonly dereferenceable(104)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 6
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %4) #21
  br label %7

7:                                                ; preds = %6, %2
  store i8* null, i8** %3, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 9
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 6
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %10, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %18 = icmp eq i8* %17, null
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  store i8* %17, i8** %3, align 8
  store i64 %10, i64* %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* nonnull align 1 %14, i64 %10, i1 false) #20
  br label %20

20:                                               ; preds = %19, %12, %7
  %21 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @_ZdaPv(i8* nonnull %23) #21
  br label %26

26:                                               ; preds = %25, %20
  %27 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 2
  %29 = bitcast i8** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  %30 = load i64, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %30, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %40 = icmp eq i8* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %36
  store i8* %39, i8** %22, align 8
  store i64 %30, i64* %27, align 8
  store i64 %38, i64* %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* nonnull align 1 %34, i64 %30, i1 false) #20
  br label %42

42:                                               ; preds = %41, %32, %26
  %43 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 3
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 4
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 4
  store i8 %47, i8* %48, align 8
  %49 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 7
  store i8 %50, i8* %51, align 8
  %52 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 10
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 11
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 11
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 12
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 12
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 13
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 14
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 14
  store i8 %65, i8* %66, align 8
  br label %67

67:                                               ; preds = %36, %16, %42
  %68 = phi i1 [ true, %42 ], [ false, %16 ], [ false, %36 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer5Frame4InitEPKhm(%"class.mkvmuxer::Frame"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %4 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %5 = icmp eq i8* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 6
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #21
  br label %11

11:                                               ; preds = %10, %6
  store i8* %4, i8** %7, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 9
  store i64 %2, i64* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %1, i64 %2, i1 false)
  br label %13

13:                                               ; preds = %3, %11
  %14 = phi i1 [ true, %11 ], [ false, %3 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer5Frame17AddAdditionalDataEPKhmm(%"class.mkvmuxer::Frame"* nocapture, i8* nocapture readonly, i64, i64) local_unnamed_addr #4 align 2 {
  %5 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %6 = icmp eq i8* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %9) #21
  br label %12

12:                                               ; preds = %11, %7
  store i8* %5, i8** %8, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 2
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 0
  store i64 %3, i64* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %1, i64 %2, i1 false)
  br label %15

15:                                               ; preds = %4, %12
  %16 = phi i1 [ true, %12 ], [ false, %4 ]
  ret i1 %16
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer5Frame7IsValidEv(%"class.mkvmuxer::Frame"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 6
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %12, label %17, label %16

16:                                               ; preds = %9
  br i1 %15, label %44, label %20

17:                                               ; preds = %9
  %18 = xor i1 %12, true
  %19 = or i1 %15, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %16, %17
  %21 = phi i1 [ %15, %17 ], [ false, %16 ]
  %22 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = icmp ugt i64 %24, 125
  br i1 %25, label %44, label %26

26:                                               ; preds = %20
  br i1 %21, label %27, label %35

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 12
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %26, %27, %31
  %36 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 7
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 14
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39, %35, %31
  br label %44

44:                                               ; preds = %17, %39, %20, %16, %1, %5, %43
  %45 = phi i1 [ true, %43 ], [ false, %5 ], [ false, %1 ], [ false, %16 ], [ false, %20 ], [ false, %39 ], [ false, %17 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer5Frame16CanBeSimpleBlockEv(%"class.mkvmuxer::Frame"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 12
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer5Frame12set_durationEm(%"class.mkvmuxer::Frame"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 3
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 4
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer5Frame29set_reference_block_timestampEl(%"class.mkvmuxer::Frame"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 13
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer8CuePointC2Ev(%"class.mkvmuxer::CuePoint"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 3
  %3 = bitcast %"class.mkvmuxer::CuePoint"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  store i64 1, i64* %2, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 4
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer8CuePointD2Ev(%"class.mkvmuxer::CuePoint"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer8CuePoint5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::CuePoint"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %72, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %72, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 241, i64 %10) #20
  %14 = load i64, i64* %5, align 8
  %15 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 247, i64 %14) #20
  %16 = add i64 %15, %13
  %17 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21368, i64 %22) #20
  %26 = add i64 %25, %16
  br label %27

27:                                               ; preds = %12, %24, %20
  %28 = phi i64 [ %26, %24 ], [ %16, %20 ], [ %16, %12 ]
  %29 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 183, i64 %28) #20
  %30 = add i64 %29, %28
  %31 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 179, i64 %32) #20
  %34 = add i64 %30, %33
  %35 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 187, i64 %34) #20
  br i1 %35, label %36, label %72

36:                                               ; preds = %27
  %37 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %38 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %38, i64 1
  %40 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %39, align 8
  %41 = tail call i64 %40(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %72, label %43

43:                                               ; preds = %36
  %44 = load i64, i64* %31, align 8
  %45 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 179, i64 %44) #20
  br i1 %45, label %46, label %72

46:                                               ; preds = %43
  %47 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 183, i64 %28) #20
  br i1 %47, label %48, label %72

48:                                               ; preds = %46
  %49 = load i64, i64* %5, align 8
  %50 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 247, i64 %49) #20
  br i1 %50, label %51, label %72

51:                                               ; preds = %48
  %52 = load i64, i64* %9, align 8
  %53 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 241, i64 %52) #20
  br i1 %53, label %54, label %72

54:                                               ; preds = %51
  %55 = load i8, i8* %17, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 21368, i64 %59) #20
  br i1 %62, label %63, label %72

63:                                               ; preds = %54, %61, %57
  %64 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %37, align 8
  %65 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %64, i64 1
  %66 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %65, align 8
  %67 = tail call i64 %66(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %68 = icmp slt i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = sub nsw i64 %67, %41
  %71 = icmp eq i64 %70, %34
  br label %72

72:                                               ; preds = %27, %63, %69, %61, %51, %48, %46, %43, %36, %4, %8, %2
  %73 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %4 ], [ false, %27 ], [ false, %36 ], [ false, %43 ], [ false, %46 ], [ false, %48 ], [ false, %51 ], [ false, %61 ], [ false, %63 ], [ %71, %69 ]
  ret i1 %73
}

declare i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 241, i64 %3) #20
  %5 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 247, i64 %6) #20
  %8 = add i64 %7, %4
  %9 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21368, i64 %14) #20
  %18 = add i64 %17, %8
  br label %19

19:                                               ; preds = %1, %16, %12
  %20 = phi i64 [ %18, %16 ], [ %8, %12 ], [ %8, %1 ]
  %21 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 183, i64 %20) #20
  %22 = add i64 %21, %20
  %23 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %0, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 179, i64 %24) #20
  %26 = add i64 %22, %25
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer8CuePoint4SizeEv(%"class.mkvmuxer::CuePoint"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* %0)
  %3 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %2) #20
  %4 = add i64 %3, %2
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer4CuesC2Ev(%"class.mkvmuxer::Cues"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 3
  %3 = bitcast %"class.mkvmuxer::Cues"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer4CuesD2Ev(%"class.mkvmuxer::Cues"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  %3 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::CuePoint"** %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %11, label %28

9:                                                ; preds = %22
  %10 = icmp eq %"class.mkvmuxer::CuePoint"** %24, null
  br i1 %10, label %31, label %28

11:                                               ; preds = %5, %22
  %12 = phi i32 [ %23, %22 ], [ %7, %5 ]
  %13 = phi %"class.mkvmuxer::CuePoint"** [ %24, %22 ], [ %3, %5 ]
  %14 = phi i64 [ %25, %22 ], [ 0, %5 ]
  %15 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %13, i64 %14
  %16 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %15, align 8
  %17 = icmp eq %"class.mkvmuxer::CuePoint"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.mkvmuxer::CuePoint"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  %20 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %2, align 8
  %21 = load i32, i32* %6, align 4
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i32 [ %21, %18 ], [ %12, %11 ]
  %24 = phi %"class.mkvmuxer::CuePoint"** [ %20, %18 ], [ %13, %11 ]
  %25 = add nuw nsw i64 %14, 1
  %26 = sext i32 %23 to i64
  %27 = icmp slt i64 %25, %26
  br i1 %27, label %11, label %9

28:                                               ; preds = %5, %9
  %29 = phi %"class.mkvmuxer::CuePoint"** [ %24, %9 ], [ %3, %5 ]
  %30 = bitcast %"class.mkvmuxer::CuePoint"** %29 to i8*
  tail call void @_ZdaPv(i8* %30) #21
  br label %31

31:                                               ; preds = %1, %9, %28
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer4Cues6AddCueEPNS_8CuePointE(%"class.mkvmuxer::Cues"* nocapture, %"class.mkvmuxer::CuePoint"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::CuePoint"* %1, null
  br i1 %3, label %203, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %193, label %10

10:                                               ; preds = %4
  %11 = icmp eq i32 %8, 0
  %12 = shl nsw i32 %8, 1
  %13 = select i1 %11, i32 2, i32 %12
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %203, label %15

15:                                               ; preds = %10
  %16 = sext i32 %13 to i64
  %17 = shl nuw nsw i64 %16, 3
  %18 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %17, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %19 = bitcast i8* %18 to %"class.mkvmuxer::CuePoint"**
  %20 = icmp eq i8* %18, null
  br i1 %20, label %203, label %21

21:                                               ; preds = %15
  %22 = icmp sgt i32 %6, 0
  %23 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  %24 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %23, align 8
  %25 = bitcast %"class.mkvmuxer::CuePoint"** %24 to i8*
  br i1 %22, label %26, label %137

26:                                               ; preds = %21
  %27 = zext i32 %6 to i64
  %28 = icmp ult i32 %6, 4
  br i1 %28, label %29, label %50

29:                                               ; preds = %135, %50, %26
  %30 = phi i64 [ 0, %50 ], [ 0, %26 ], [ %59, %135 ]
  %31 = sub nsw i64 %27, %30
  %32 = xor i64 %30, -1
  %33 = add nsw i64 %32, %27
  %34 = and i64 %31, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %29, %36
  %37 = phi i64 [ %44, %36 ], [ %30, %29 ]
  %38 = phi i64 [ %45, %36 ], [ %34, %29 ]
  %39 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %37
  %40 = bitcast %"class.mkvmuxer::CuePoint"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %37
  %43 = bitcast %"class.mkvmuxer::CuePoint"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = add nuw nsw i64 %37, 1
  %45 = add i64 %38, -1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %36, !llvm.loop !3

47:                                               ; preds = %36, %29
  %48 = phi i64 [ %30, %29 ], [ %44, %36 ]
  %49 = icmp ult i64 %33, 7
  br i1 %49, label %137, label %139

50:                                               ; preds = %26
  %51 = shl nuw nsw i64 %27, 3
  %52 = getelementptr i8, i8* %18, i64 %51
  %53 = getelementptr %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %27
  %54 = bitcast %"class.mkvmuxer::CuePoint"** %53 to i8*
  %55 = icmp ult i8* %18, %54
  %56 = icmp ugt i8* %52, %25
  %57 = and i1 %55, %56
  br i1 %57, label %29, label %58

58:                                               ; preds = %50
  %59 = and i64 %27, 4294967292
  %60 = add nsw i64 %59, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 12
  br i1 %64, label %116, label %65

65:                                               ; preds = %58
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %68
  %71 = bitcast %"class.mkvmuxer::CuePoint"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !5
  %73 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %70, i64 2
  %74 = bitcast %"class.mkvmuxer::CuePoint"** %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !5
  %76 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %68
  %77 = bitcast %"class.mkvmuxer::CuePoint"** %76 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %77, align 8, !alias.scope !8, !noalias !5
  %78 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %76, i64 2
  %79 = bitcast %"class.mkvmuxer::CuePoint"** %78 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !8, !noalias !5
  %80 = or i64 %68, 4
  %81 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %80
  %82 = bitcast %"class.mkvmuxer::CuePoint"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !5
  %84 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %81, i64 2
  %85 = bitcast %"class.mkvmuxer::CuePoint"** %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !5
  %87 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %80
  %88 = bitcast %"class.mkvmuxer::CuePoint"** %87 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %88, align 8, !alias.scope !8, !noalias !5
  %89 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %87, i64 2
  %90 = bitcast %"class.mkvmuxer::CuePoint"** %89 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !8, !noalias !5
  %91 = or i64 %68, 8
  %92 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %91
  %93 = bitcast %"class.mkvmuxer::CuePoint"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !5
  %95 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %92, i64 2
  %96 = bitcast %"class.mkvmuxer::CuePoint"** %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !5
  %98 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %91
  %99 = bitcast %"class.mkvmuxer::CuePoint"** %98 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %99, align 8, !alias.scope !8, !noalias !5
  %100 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %98, i64 2
  %101 = bitcast %"class.mkvmuxer::CuePoint"** %100 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !8, !noalias !5
  %102 = or i64 %68, 12
  %103 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %102
  %104 = bitcast %"class.mkvmuxer::CuePoint"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !5
  %106 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %103, i64 2
  %107 = bitcast %"class.mkvmuxer::CuePoint"** %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !5
  %109 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %102
  %110 = bitcast %"class.mkvmuxer::CuePoint"** %109 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %110, align 8, !alias.scope !8, !noalias !5
  %111 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %109, i64 2
  %112 = bitcast %"class.mkvmuxer::CuePoint"** %111 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !8, !noalias !5
  %113 = add i64 %68, 16
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !10

116:                                              ; preds = %67, %58
  %117 = phi i64 [ 0, %58 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %120
  %123 = bitcast %"class.mkvmuxer::CuePoint"** %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !5
  %125 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %122, i64 2
  %126 = bitcast %"class.mkvmuxer::CuePoint"** %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !5
  %128 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %120
  %129 = bitcast %"class.mkvmuxer::CuePoint"** %128 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %129, align 8, !alias.scope !8, !noalias !5
  %130 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %128, i64 2
  %131 = bitcast %"class.mkvmuxer::CuePoint"** %130 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !8, !noalias !5
  %132 = add i64 %120, 4
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !12

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %59, %27
  br i1 %136, label %137, label %29

137:                                              ; preds = %47, %139, %135, %21
  %138 = icmp eq %"class.mkvmuxer::CuePoint"** %24, null
  br i1 %138, label %191, label %190

139:                                              ; preds = %47, %139
  %140 = phi i64 [ %188, %139 ], [ %48, %47 ]
  %141 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %140
  %142 = bitcast %"class.mkvmuxer::CuePoint"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %140
  %145 = bitcast %"class.mkvmuxer::CuePoint"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = add nuw nsw i64 %140, 1
  %147 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %146
  %148 = bitcast %"class.mkvmuxer::CuePoint"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %146
  %151 = bitcast %"class.mkvmuxer::CuePoint"** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = add nuw nsw i64 %140, 2
  %153 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %152
  %154 = bitcast %"class.mkvmuxer::CuePoint"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %152
  %157 = bitcast %"class.mkvmuxer::CuePoint"** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = add nuw nsw i64 %140, 3
  %159 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %158
  %160 = bitcast %"class.mkvmuxer::CuePoint"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %158
  %163 = bitcast %"class.mkvmuxer::CuePoint"** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = add nuw nsw i64 %140, 4
  %165 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %164
  %166 = bitcast %"class.mkvmuxer::CuePoint"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %164
  %169 = bitcast %"class.mkvmuxer::CuePoint"** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = add nuw nsw i64 %140, 5
  %171 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %170
  %172 = bitcast %"class.mkvmuxer::CuePoint"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %170
  %175 = bitcast %"class.mkvmuxer::CuePoint"** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = add nuw nsw i64 %140, 6
  %177 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %176
  %178 = bitcast %"class.mkvmuxer::CuePoint"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %176
  %181 = bitcast %"class.mkvmuxer::CuePoint"** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = add nuw nsw i64 %140, 7
  %183 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %24, i64 %182
  %184 = bitcast %"class.mkvmuxer::CuePoint"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %19, i64 %182
  %187 = bitcast %"class.mkvmuxer::CuePoint"** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = add nuw nsw i64 %140, 8
  %189 = icmp eq i64 %188, %27
  br i1 %189, label %137, label %139, !llvm.loop !13

190:                                              ; preds = %137
  tail call void @_ZdaPv(i8* %25) #21
  br label %191

191:                                              ; preds = %137, %190
  %192 = bitcast %"class.mkvmuxer::CuePoint"*** %23 to i8**
  store i8* %18, i8** %192, align 8
  store i32 %13, i32* %7, align 8
  br label %193

193:                                              ; preds = %191, %4
  %194 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 3
  %195 = load i8, i8* %194, align 8, !range !2
  %196 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %1, i64 0, i32 4
  store i8 %195, i8* %196, align 8
  %197 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  %198 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %197, align 8
  %199 = load i32, i32* %5, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %5, align 4
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %198, i64 %201
  store %"class.mkvmuxer::CuePoint"* %1, %"class.mkvmuxer::CuePoint"** %202, align 8
  br label %203

203:                                              ; preds = %15, %10, %2, %193
  %204 = phi i1 [ true, %193 ], [ false, %2 ], [ false, %10 ], [ false, %15 ]
  ret i1 %204
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.mkvmuxer::CuePoint"* @_ZNK8mkvmuxer4Cues13GetCueByIndexEi(%"class.mkvmuxer::Cues"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  %4 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %3, align 8
  %5 = icmp eq %"class.mkvmuxer::CuePoint"** %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %4, i64 %11
  %13 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %12, align 8
  br label %14

14:                                               ; preds = %6, %2, %10
  %15 = phi %"class.mkvmuxer::CuePoint"* [ %13, %10 ], [ null, %2 ], [ null, %6 ]
  ret %"class.mkvmuxer::CuePoint"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer4Cues4SizeEv(%"class.mkvmuxer::Cues"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  br label %11

7:                                                ; preds = %19, %1
  %8 = phi i64 [ 0, %1 ], [ %24, %19 ]
  %9 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 475249515, i64 %8) #20
  %10 = add i64 %9, %8
  ret i64 %10

11:                                               ; preds = %5, %19
  %12 = phi i64 [ 0, %5 ], [ %25, %19 ]
  %13 = phi i64 [ 0, %5 ], [ %24, %19 ]
  %14 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %6, align 8
  %15 = icmp eq %"class.mkvmuxer::CuePoint"** %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %14, i64 %12
  %18 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %17, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %"class.mkvmuxer::CuePoint"* [ %18, %16 ], [ null, %11 ]
  %21 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* %20) #20
  %22 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %21) #20
  %23 = add i64 %21, %13
  %24 = add i64 %23, %22
  %25 = add nuw nsw i64 %12, 1
  %26 = load i32, i32* %2, align 4
  %27 = sext i32 %26 to i64
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %11, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer4Cues5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Cues"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %67, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  br label %10

10:                                               ; preds = %8, %19
  %11 = phi i64 [ 0, %8 ], [ %24, %19 ]
  %12 = phi i64 [ 0, %8 ], [ %23, %19 ]
  %13 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %9, align 8
  %14 = icmp eq %"class.mkvmuxer::CuePoint"** %13, null
  br i1 %14, label %67, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %13, i64 %11
  %17 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %16, align 8
  %18 = icmp eq %"class.mkvmuxer::CuePoint"* %17, null
  br i1 %18, label %67, label %19

19:                                               ; preds = %15
  %20 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* nonnull %17) #20
  %21 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %20) #20
  %22 = add i64 %20, %12
  %23 = add i64 %22, %21
  %24 = add nuw nsw i64 %11, 1
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %10, label %28

28:                                               ; preds = %19, %4
  %29 = phi i64 [ 0, %4 ], [ %23, %19 ]
  %30 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 475249515, i64 %29) #20
  br i1 %30, label %31, label %67

31:                                               ; preds = %28
  %32 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %33 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %33, i64 1
  %35 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %34, align 8
  %36 = tail call i64 %35(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %37 = icmp slt i64 %36, 0
  br i1 %37, label %67, label %38

38:                                               ; preds = %31
  %39 = load i32, i32* %5, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %58

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.mkvmuxer::Cues", %"class.mkvmuxer::Cues"* %0, i64 0, i32 2
  br label %47

43:                                               ; preds = %54
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %57, %45
  br i1 %46, label %47, label %58

47:                                               ; preds = %41, %43
  %48 = phi i64 [ 0, %41 ], [ %57, %43 ]
  %49 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %42, align 8
  %50 = icmp eq %"class.mkvmuxer::CuePoint"** %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %49, i64 %48
  %53 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %52, align 8
  br label %54

54:                                               ; preds = %47, %51
  %55 = phi %"class.mkvmuxer::CuePoint"* [ %53, %51 ], [ null, %47 ]
  %56 = tail call zeroext i1 @_ZNK8mkvmuxer8CuePoint5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::CuePoint"* %55, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %57 = add nuw nsw i64 %48, 1
  br i1 %56, label %43, label %67

58:                                               ; preds = %43, %38
  %59 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %60 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %59, i64 1
  %61 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %60, align 8
  %62 = tail call i64 %61(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %63 = icmp slt i64 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = sub nsw i64 %62, %36
  %66 = icmp eq i64 %65, %29
  br label %67

67:                                               ; preds = %10, %15, %54, %28, %58, %64, %31, %2
  %68 = phi i1 [ false, %2 ], [ false, %28 ], [ false, %31 ], [ false, %58 ], [ %66, %64 ], [ false, %54 ], [ false, %15 ], [ false, %10 ]
  ret i1 %68
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer21ContentEncAESSettingsC2Ev(%"class.mkvmuxer::ContentEncAESSettings"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncAESSettings", %"class.mkvmuxer::ContentEncAESSettings"* %0, i64 0, i32 0
  store i64 1, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer21ContentEncAESSettings4SizeEv(%"class.mkvmuxer::ContentEncAESSettings"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncAESSettings", %"class.mkvmuxer::ContentEncAESSettings"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %3) #20
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 18407, i64 %4) #20
  %6 = add i64 %5, %4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer21ContentEncAESSettings11PayloadSizeEv(%"class.mkvmuxer::ContentEncAESSettings"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncAESSettings", %"class.mkvmuxer::ContentEncAESSettings"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %3) #20
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer21ContentEncAESSettings5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::ContentEncAESSettings"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::ContentEncAESSettings", %"class.mkvmuxer::ContentEncAESSettings"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %4) #20
  %6 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18407, i64 %5) #20
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %9 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %9, i64 1
  %11 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, align 8
  %12 = tail call i64 %11(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18408, i64 %15) #20
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %8, align 8
  %19 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %18, i64 1
  %20 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %19, align 8
  %21 = tail call i64 %20(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %22 = icmp sgt i64 %21, -1
  %23 = sub nsw i64 %21, %12
  %24 = icmp eq i64 %23, %5
  %25 = and i1 %22, %24
  ret i1 %25

26:                                               ; preds = %7, %14, %2
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer15ContentEncodingC2Ev(%"class.mkvmuxer::ContentEncoding"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 0
  store i64 5, i64* %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 3
  %5 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  %6 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 5, i32 0
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer15ContentEncodingD2Ev(%"class.mkvmuxer::ContentEncoding"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer15ContentEncoding15SetEncryptionIDEPKhm(%"class.mkvmuxer::ContentEncoding"* nocapture, i8* readonly, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i64 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %9) #21
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %13, i8** %8, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* nonnull align 1 %1, i64 %2, i1 false)
  %16 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 6
  store i64 %2, i64* %16, align 8
  br label %17

17:                                               ; preds = %12, %3, %15
  %18 = phi i1 [ true, %15 ], [ false, %3 ], [ false, %12 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer15ContentEncoding4SizeEv(%"class.mkvmuxer::ContentEncoding"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 5, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %3) #20
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 18407, i64 %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 18402, i8* %7, i64 %9) #20
  %11 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18401, i64 %12) #20
  %14 = add i64 %5, %4
  %15 = add i64 %14, %10
  %16 = add i64 %15, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 20533, i64 %16) #20
  %20 = add i64 %19, %16
  br label %21

21:                                               ; preds = %1, %18
  %22 = phi i64 [ %20, %18 ], [ 0, %1 ]
  %23 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20531, i64 %24) #20
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20530, i64 %28) #20
  %30 = add i64 %26, %29
  %31 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20529, i64 %32) #20
  %34 = add i64 %30, %33
  %35 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 25152, i64 %34) #20
  %36 = add i64 %35, %34
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer15ContentEncoding14EncryptionSizeEv(%"class.mkvmuxer::ContentEncoding"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 5, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %3) #20
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 18407, i64 %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 18402, i8* %7, i64 %9) #20
  %11 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18401, i64 %12) #20
  %14 = add i64 %5, %4
  %15 = add i64 %14, %10
  %16 = add i64 %15, %13
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer15ContentEncoding12EncodingSizeEmm(%"class.mkvmuxer::ContentEncoding"* nocapture readonly, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %3
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 20533, i64 %2) #20
  %9 = add i64 %8, %2
  br label %10

10:                                               ; preds = %5, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %5 ]
  %12 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20531, i64 %13) #20
  %15 = add i64 %14, %11
  %16 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20530, i64 %17) #20
  %19 = add i64 %15, %18
  %20 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20529, i64 %21) #20
  %23 = add i64 %19, %22
  br label %24

24:                                               ; preds = %3, %10
  %25 = phi i64 [ %23, %10 ], [ 0, %3 ]
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer15ContentEncoding5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::ContentEncoding"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 5, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %4) #20
  %6 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 18407, i64 %5) #20
  %7 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 18402, i8* %8, i64 %10) #20
  %12 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18401, i64 %13) #20
  %15 = add i64 %6, %5
  %16 = add i64 %15, %11
  %17 = add i64 %16, %14
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 20533, i64 %17) #20
  %21 = add i64 %20, %17
  br label %22

22:                                               ; preds = %2, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %2 ]
  %24 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20531, i64 %25) #20
  %27 = add i64 %26, %23
  %28 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20530, i64 %29) #20
  %31 = add i64 %27, %30
  %32 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %0, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 20529, i64 %33) #20
  %35 = add i64 %31, %34
  %36 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 25152, i64 %35) #20
  %37 = add i64 %36, %35
  %38 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %39 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %39, i64 1
  %41 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %40, align 8
  %42 = tail call i64 %41(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %95, label %44

44:                                               ; preds = %22
  %45 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 25152, i64 %35) #20
  br i1 %45, label %46, label %95

46:                                               ; preds = %44
  %47 = load i64, i64* %32, align 8
  %48 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 20529, i64 %47) #20
  br i1 %48, label %49, label %95

49:                                               ; preds = %46
  %50 = load i64, i64* %28, align 8
  %51 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 20530, i64 %50) #20
  br i1 %51, label %52, label %95

52:                                               ; preds = %49
  %53 = load i64, i64* %24, align 8
  %54 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 20531, i64 %53) #20
  br i1 %54, label %55, label %95

55:                                               ; preds = %52
  %56 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 20533, i64 %17) #20
  br i1 %56, label %57, label %95

57:                                               ; preds = %55
  %58 = load i64, i64* %12, align 8
  %59 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18401, i64 %58) #20
  br i1 %59, label %60, label %95

60:                                               ; preds = %57
  %61 = load i8*, i8** %7, align 8
  %62 = load i64, i64* %9, align 8
  %63 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18402, i8* %61, i64 %62) #20
  br i1 %63, label %64, label %95

64:                                               ; preds = %60
  %65 = load i64, i64* %3, align 8
  %66 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 18408, i64 %65) #20
  %67 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18407, i64 %66) #20
  br i1 %67, label %68, label %95

68:                                               ; preds = %64
  %69 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %38, align 8
  %70 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %69, i64 1
  %71 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %70, align 8
  %72 = tail call i64 %71(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %95, label %74

74:                                               ; preds = %68
  %75 = load i64, i64* %3, align 8
  %76 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 18408, i64 %75) #20
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %38, align 8
  %79 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %78, i64 1
  %80 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %79, align 8
  %81 = tail call i64 %80(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %82 = icmp sgt i64 %81, -1
  %83 = sub nsw i64 %81, %72
  %84 = icmp eq i64 %83, %66
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %95

86:                                               ; preds = %77
  %87 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %38, align 8
  %88 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %87, i64 1
  %89 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %88, align 8
  %90 = tail call i64 %89(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %91 = icmp sgt i64 %90, -1
  %92 = sub nsw i64 %90, %42
  %93 = icmp eq i64 %92, %37
  %94 = and i1 %91, %93
  ret i1 %94

95:                                               ; preds = %64, %68, %74, %77, %60, %57, %55, %52, %49, %46, %44, %22
  ret i1 false
}

declare zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"*, i64, i8*, i64) local_unnamed_addr #6

declare i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5TrackC2EPj(%"class.mkvmuxer::Track"* nocapture, i32*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer5TrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 8
  %6 = bitcast i8** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false)
  %7 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %1) #20
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 9
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 44, i1 false)
  ret void
}

declare i64 @_ZN8mkvmuxer7MakeUIDEPj(i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5TrackD2Ev(%"class.mkvmuxer::Track"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer5TrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #21
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %9) #21
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZdaPv(i8* nonnull %14) #21
  br label %17

17:                                               ; preds = %16, %12
  %18 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 5
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @_ZdaPv(i8* nonnull %19) #21
  br label %22

22:                                               ; preds = %21, %17
  %23 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  %24 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %23, align 8
  %25 = icmp eq %"class.mkvmuxer::ContentEncoding"** %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 14
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %54, label %32

30:                                               ; preds = %48
  %31 = icmp eq %"class.mkvmuxer::ContentEncoding"** %50, null
  br i1 %31, label %57, label %54

32:                                               ; preds = %26, %48
  %33 = phi i32 [ %49, %48 ], [ %28, %26 ]
  %34 = phi %"class.mkvmuxer::ContentEncoding"** [ %50, %48 ], [ %24, %26 ]
  %35 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %36 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %34, i64 %35
  %37 = load %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %36, align 8
  %38 = icmp eq %"class.mkvmuxer::ContentEncoding"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding", %"class.mkvmuxer::ContentEncoding"* %37, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZdaPv(i8* nonnull %41) #21
  br label %44

44:                                               ; preds = %39, %43
  %45 = bitcast %"class.mkvmuxer::ContentEncoding"* %37 to i8*
  tail call void @_ZdlPv(i8* %45) #21
  %46 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %23, align 8
  %47 = load i32, i32* %27, align 8
  br label %48

48:                                               ; preds = %44, %32
  %49 = phi i32 [ %47, %44 ], [ %33, %32 ]
  %50 = phi %"class.mkvmuxer::ContentEncoding"** [ %46, %44 ], [ %34, %32 ]
  %51 = add nuw nsw i64 %35, 1
  %52 = zext i32 %49 to i64
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %32, label %30

54:                                               ; preds = %26, %30
  %55 = phi %"class.mkvmuxer::ContentEncoding"** [ %50, %30 ], [ %24, %26 ]
  %56 = bitcast %"class.mkvmuxer::ContentEncoding"** %55 to i8*
  tail call void @_ZdaPv(i8* %56) #21
  br label %57

57:                                               ; preds = %22, %30, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5TrackD0Ev(%"class.mkvmuxer::Track"*) unnamed_addr #4 align 2 {
  tail call void @_ZN8mkvmuxer5TrackD2Ev(%"class.mkvmuxer::Track"* %0) #20
  %2 = bitcast %"class.mkvmuxer::Track"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer5Track18AddContentEncodingEv(%"class.mkvmuxer::Track"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 3
  %7 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %8 = bitcast i8* %7 to %"class.mkvmuxer::ContentEncoding"**
  %9 = icmp eq i8* %7, null
  br i1 %9, label %197, label %10

10:                                               ; preds = %1
  %11 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 56, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %12 = icmp eq i8* %11, null
  br i1 %12, label %135, label %13

13:                                               ; preds = %10
  %14 = bitcast i8* %11 to i64*
  store i64 5, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = getelementptr inbounds i8, i8* %11, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #20
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 40
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %19, align 8
  %20 = icmp eq i32 %3, 0
  %21 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  %22 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %21, align 8
  %23 = bitcast %"class.mkvmuxer::ContentEncoding"** %22 to i8*
  br i1 %20, label %136, label %24

24:                                               ; preds = %13
  %25 = zext i32 %3 to i64
  %26 = icmp ult i32 %3, 4
  br i1 %26, label %27, label %48

27:                                               ; preds = %133, %48, %24
  %28 = phi i64 [ 0, %48 ], [ 0, %24 ], [ %57, %133 ]
  %29 = sub nsw i64 %25, %28
  %30 = xor i64 %28, -1
  %31 = add nsw i64 %30, %25
  %32 = and i64 %29, 7
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %27, %34
  %35 = phi i64 [ %42, %34 ], [ %28, %27 ]
  %36 = phi i64 [ %43, %34 ], [ %32, %27 ]
  %37 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %35
  %38 = bitcast %"class.mkvmuxer::ContentEncoding"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %35
  %41 = bitcast %"class.mkvmuxer::ContentEncoding"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = add nuw nsw i64 %35, 1
  %43 = add i64 %36, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %34, !llvm.loop !14

45:                                               ; preds = %34, %27
  %46 = phi i64 [ %28, %27 ], [ %42, %34 ]
  %47 = icmp ult i64 %31, 7
  br i1 %47, label %136, label %138

48:                                               ; preds = %24
  %49 = shl nuw nsw i64 %25, 3
  %50 = getelementptr i8, i8* %7, i64 %49
  %51 = getelementptr %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %25
  %52 = bitcast %"class.mkvmuxer::ContentEncoding"** %51 to i8*
  %53 = icmp ult i8* %7, %52
  %54 = icmp ugt i8* %50, %23
  %55 = and i1 %53, %54
  br i1 %55, label %27, label %56

56:                                               ; preds = %48
  %57 = and i64 %25, 4294967292
  %58 = add nsw i64 %57, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %56
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %66
  %69 = bitcast %"class.mkvmuxer::ContentEncoding"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !15
  %71 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %68, i64 2
  %72 = bitcast %"class.mkvmuxer::ContentEncoding"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !15
  %74 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %66
  %75 = bitcast %"class.mkvmuxer::ContentEncoding"** %74 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %75, align 8, !alias.scope !18, !noalias !15
  %76 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %74, i64 2
  %77 = bitcast %"class.mkvmuxer::ContentEncoding"** %76 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %77, align 8, !alias.scope !18, !noalias !15
  %78 = or i64 %66, 4
  %79 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %78
  %80 = bitcast %"class.mkvmuxer::ContentEncoding"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !15
  %82 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %79, i64 2
  %83 = bitcast %"class.mkvmuxer::ContentEncoding"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !15
  %85 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %78
  %86 = bitcast %"class.mkvmuxer::ContentEncoding"** %85 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %86, align 8, !alias.scope !18, !noalias !15
  %87 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %85, i64 2
  %88 = bitcast %"class.mkvmuxer::ContentEncoding"** %87 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %88, align 8, !alias.scope !18, !noalias !15
  %89 = or i64 %66, 8
  %90 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %89
  %91 = bitcast %"class.mkvmuxer::ContentEncoding"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !15
  %93 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %90, i64 2
  %94 = bitcast %"class.mkvmuxer::ContentEncoding"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !15
  %96 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %89
  %97 = bitcast %"class.mkvmuxer::ContentEncoding"** %96 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %97, align 8, !alias.scope !18, !noalias !15
  %98 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %96, i64 2
  %99 = bitcast %"class.mkvmuxer::ContentEncoding"** %98 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %99, align 8, !alias.scope !18, !noalias !15
  %100 = or i64 %66, 12
  %101 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %100
  %102 = bitcast %"class.mkvmuxer::ContentEncoding"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !15
  %104 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %101, i64 2
  %105 = bitcast %"class.mkvmuxer::ContentEncoding"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !15
  %107 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %100
  %108 = bitcast %"class.mkvmuxer::ContentEncoding"** %107 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %108, align 8, !alias.scope !18, !noalias !15
  %109 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %107, i64 2
  %110 = bitcast %"class.mkvmuxer::ContentEncoding"** %109 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %110, align 8, !alias.scope !18, !noalias !15
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !20

114:                                              ; preds = %65, %56
  %115 = phi i64 [ 0, %56 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %118
  %121 = bitcast %"class.mkvmuxer::ContentEncoding"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !15
  %123 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %120, i64 2
  %124 = bitcast %"class.mkvmuxer::ContentEncoding"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !15
  %126 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %118
  %127 = bitcast %"class.mkvmuxer::ContentEncoding"** %126 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %127, align 8, !alias.scope !18, !noalias !15
  %128 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %126, i64 2
  %129 = bitcast %"class.mkvmuxer::ContentEncoding"** %128 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %129, align 8, !alias.scope !18, !noalias !15
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !21

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %57, %25
  br i1 %134, label %136, label %27

135:                                              ; preds = %10
  tail call void @_ZdaPv(i8* nonnull %7) #21
  br label %197

136:                                              ; preds = %45, %138, %133, %13
  %137 = icmp eq %"class.mkvmuxer::ContentEncoding"** %22, null
  br i1 %137, label %191, label %189

138:                                              ; preds = %45, %138
  %139 = phi i64 [ %187, %138 ], [ %46, %45 ]
  %140 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %139
  %141 = bitcast %"class.mkvmuxer::ContentEncoding"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %139
  %144 = bitcast %"class.mkvmuxer::ContentEncoding"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = add nuw nsw i64 %139, 1
  %146 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %145
  %147 = bitcast %"class.mkvmuxer::ContentEncoding"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %145
  %150 = bitcast %"class.mkvmuxer::ContentEncoding"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = add nuw nsw i64 %139, 2
  %152 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %151
  %153 = bitcast %"class.mkvmuxer::ContentEncoding"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %151
  %156 = bitcast %"class.mkvmuxer::ContentEncoding"** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = add nuw nsw i64 %139, 3
  %158 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %157
  %159 = bitcast %"class.mkvmuxer::ContentEncoding"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %157
  %162 = bitcast %"class.mkvmuxer::ContentEncoding"** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = add nuw nsw i64 %139, 4
  %164 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %163
  %165 = bitcast %"class.mkvmuxer::ContentEncoding"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %163
  %168 = bitcast %"class.mkvmuxer::ContentEncoding"** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = add nuw nsw i64 %139, 5
  %170 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %169
  %171 = bitcast %"class.mkvmuxer::ContentEncoding"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %169
  %174 = bitcast %"class.mkvmuxer::ContentEncoding"** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = add nuw nsw i64 %139, 6
  %176 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %175
  %177 = bitcast %"class.mkvmuxer::ContentEncoding"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %175
  %180 = bitcast %"class.mkvmuxer::ContentEncoding"** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = add nuw nsw i64 %139, 7
  %182 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %22, i64 %181
  %183 = bitcast %"class.mkvmuxer::ContentEncoding"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %181
  %186 = bitcast %"class.mkvmuxer::ContentEncoding"** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = add nuw nsw i64 %139, 8
  %188 = icmp eq i64 %187, %25
  br i1 %188, label %136, label %138, !llvm.loop !22

189:                                              ; preds = %136
  tail call void @_ZdaPv(i8* %23) #21
  %190 = load i32, i32* %2, align 8
  br label %191

191:                                              ; preds = %189, %136
  %192 = phi i32 [ %190, %189 ], [ %3, %136 ]
  %193 = bitcast %"class.mkvmuxer::ContentEncoding"*** %21 to i8**
  store i8* %7, i8** %193, align 8
  %194 = zext i32 %192 to i64
  %195 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %8, i64 %194
  %196 = bitcast %"class.mkvmuxer::ContentEncoding"** %195 to i8**
  store i8* %11, i8** %196, align 8
  store i32 %4, i32* %2, align 8
  br label %197

197:                                              ; preds = %135, %191, %1
  %198 = phi i1 [ false, %1 ], [ true, %191 ], [ false, %135 ]
  ret i1 %198
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.mkvmuxer::ContentEncoding"* @_ZNK8mkvmuxer5Track25GetContentEncodingByIndexEj(%"class.mkvmuxer::Track"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  %4 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %3, align 8
  %5 = icmp eq %"class.mkvmuxer::ContentEncoding"** %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 14
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %4, i64 %11
  %13 = load %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %12, align 8
  br label %14

14:                                               ; preds = %6, %2, %10
  %15 = phi %"class.mkvmuxer::ContentEncoding"* [ %13, %10 ], [ null, %2 ], [ null, %6 ]
  ret %"class.mkvmuxer::ContentEncoding"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer5Track11PayloadSizeEv(%"class.mkvmuxer::Track"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 215, i64 %3) #20
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 8
  %6 = load i64, i64* %5, align 8
  %7 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 29637, i64 %6) #20
  %8 = add i64 %7, %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 7
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 131, i64 %10) #20
  %12 = add i64 %8, %11
  %13 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 134, i8* nonnull %14) #20
  %18 = add i64 %17, %12
  br label %19

19:                                               ; preds = %1, %16
  %20 = phi i64 [ %18, %16 ], [ %12, %1 ]
  %21 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 12
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 25506, i8* nonnull %22, i64 %26) #20
  %28 = add i64 %27, %20
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi i64 [ %28, %24 ], [ %20, %19 ]
  %31 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 2274716, i8* nonnull %32) #20
  %36 = add i64 %35, %30
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi i64 [ %36, %34 ], [ %30, %29 ]
  %39 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 5
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 21358, i8* nonnull %40) #20
  %44 = add i64 %43, %38
  br label %45

45:                                               ; preds = %37, %42
  %46 = phi i64 [ %44, %42 ], [ %38, %37 ]
  %47 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21998, i64 %48) #20
  %52 = add i64 %51, %46
  br label %53

53:                                               ; preds = %45, %50
  %54 = phi i64 [ %52, %50 ], [ %46, %45 ]
  %55 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 9
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 22186, i64 %56) #20
  %60 = add i64 %59, %54
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  %63 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 10
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 22203, i64 %64) #20
  %68 = add i64 %67, %62
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi i64 [ %68, %66 ], [ %62, %61 ]
  %71 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 11
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 2352003, i64 %72) #20
  %76 = add i64 %75, %70
  br label %77

77:                                               ; preds = %69, %74
  %78 = phi i64 [ %76, %74 ], [ %70, %69 ]
  %79 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 14
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %100, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  br label %88

84:                                               ; preds = %88
  %85 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 28032, i64 %95) #20
  %86 = add i64 %95, %78
  %87 = add i64 %86, %85
  br label %100

88:                                               ; preds = %82, %88
  %89 = phi i64 [ 0, %82 ], [ %96, %88 ]
  %90 = phi i64 [ 0, %82 ], [ %95, %88 ]
  %91 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %83, align 8
  %92 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %91, i64 %89
  %93 = load %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %92, align 8
  %94 = tail call i64 @_ZNK8mkvmuxer15ContentEncoding4SizeEv(%"class.mkvmuxer::ContentEncoding"* %93)
  %95 = add i64 %94, %90
  %96 = add nuw nsw i64 %89, 1
  %97 = load i32, i32* %79, align 8
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %96, %98
  br i1 %99, label %88, label %84

100:                                              ; preds = %77, %84
  %101 = phi i64 [ %87, %84 ], [ %78, %77 ]
  ret i64 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer5Track4SizeEv(%"class.mkvmuxer::Track"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.mkvmuxer::Track"* %0 to i64 (%"class.mkvmuxer::Track"*)***
  %3 = load i64 (%"class.mkvmuxer::Track"*)**, i64 (%"class.mkvmuxer::Track"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %3, i64 3
  %5 = load i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %4, align 8
  %6 = tail call i64 %5(%"class.mkvmuxer::Track"* %0) #20
  %7 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 174, i64 %6) #20
  %8 = add i64 %7, %6
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer5Track5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*) unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %210, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %210, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %210, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @strcmp(i8* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN8mkvmuxer6Tracks11kAv1CodecIdE, i64 0, i64 0)) #22
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %210, label %19

19:                                               ; preds = %15, %12
  %20 = bitcast %"class.mkvmuxer::Track"* %0 to i64 (%"class.mkvmuxer::Track"*)***
  %21 = load i64 (%"class.mkvmuxer::Track"*)**, i64 (%"class.mkvmuxer::Track"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %21, i64 3
  %23 = load i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %22, align 8
  %24 = tail call i64 %23(%"class.mkvmuxer::Track"* %0) #20
  %25 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 174, i64 %24) #20
  br i1 %25, label %26, label %210

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 215, i64 %28) #20
  %30 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 8
  %31 = load i64, i64* %30, align 8
  %32 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 29637, i64 %31) #20
  %33 = add i64 %32, %29
  %34 = load i64, i64* %5, align 8
  %35 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 131, i64 %34) #20
  %36 = add i64 %33, %35
  %37 = load i8*, i8** %9, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 134, i8* nonnull %37) #20
  %41 = add i64 %40, %36
  br label %42

42:                                               ; preds = %26, %39
  %43 = phi i64 [ %41, %39 ], [ %36, %26 ]
  %44 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 12
  %49 = load i64, i64* %48, align 8
  %50 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 25506, i8* nonnull %45, i64 %49) #20
  %51 = add i64 %50, %43
  br label %52

52:                                               ; preds = %42, %47
  %53 = phi i64 [ %51, %47 ], [ %43, %42 ]
  %54 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 3
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 2274716, i8* nonnull %55) #20
  %59 = add i64 %58, %53
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i64 [ %59, %57 ], [ %53, %52 ]
  %62 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 5
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 21358, i8* nonnull %63) #20
  %67 = add i64 %66, %61
  br label %68

68:                                               ; preds = %60, %65
  %69 = phi i64 [ %67, %65 ], [ %61, %60 ]
  %70 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21998, i64 %71) #20
  %75 = add i64 %74, %69
  br label %76

76:                                               ; preds = %68, %73
  %77 = phi i64 [ %75, %73 ], [ %69, %68 ]
  %78 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 9
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 22186, i64 %79) #20
  %83 = add i64 %82, %77
  br label %84

84:                                               ; preds = %76, %81
  %85 = phi i64 [ %83, %81 ], [ %77, %76 ]
  %86 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 10
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 22203, i64 %87) #20
  %91 = add i64 %90, %85
  br label %92

92:                                               ; preds = %84, %89
  %93 = phi i64 [ %91, %89 ], [ %85, %84 ]
  %94 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 11
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 2352003, i64 %95) #20
  %99 = add i64 %98, %93
  br label %100

100:                                              ; preds = %92, %97
  %101 = phi i64 [ %99, %97 ], [ %93, %92 ]
  %102 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %103 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %102, align 8
  %104 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %103, i64 1
  %105 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %104, align 8
  %106 = tail call i64 %105(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %107 = icmp slt i64 %106, 0
  br i1 %107, label %210, label %108

108:                                              ; preds = %100
  %109 = load i64, i64* %27, align 8
  %110 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 215, i64 %109) #20
  br i1 %110, label %111, label %210

111:                                              ; preds = %108
  %112 = load i64, i64* %30, align 8
  %113 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 29637, i64 %112) #20
  br i1 %113, label %114, label %210

114:                                              ; preds = %111
  %115 = load i64, i64* %5, align 8
  %116 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 131, i64 %115) #20
  br i1 %116, label %117, label %210

117:                                              ; preds = %114
  %118 = load i64, i64* %70, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 21998, i64 %118) #20
  br i1 %121, label %122, label %210

122:                                              ; preds = %117, %120
  %123 = load i64, i64* %78, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 22186, i64 %123) #20
  br i1 %126, label %127, label %210

127:                                              ; preds = %122, %125
  %128 = load i64, i64* %86, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 22203, i64 %128) #20
  br i1 %131, label %132, label %210

132:                                              ; preds = %127, %130
  %133 = load i64, i64* %94, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 2352003, i64 %133) #20
  br i1 %136, label %137, label %210

137:                                              ; preds = %132, %135
  %138 = load i8*, i8** %9, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 134, i8* nonnull %138) #20
  br i1 %141, label %142, label %210

142:                                              ; preds = %137, %140
  %143 = load i8*, i8** %44, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 12
  %147 = load i64, i64* %146, align 8
  %148 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 25506, i8* nonnull %143, i64 %147) #20
  br i1 %148, label %149, label %210

149:                                              ; preds = %142, %145
  %150 = load i8*, i8** %54, align 8
  %151 = icmp eq i8* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 2274716, i8* nonnull %150) #20
  br i1 %153, label %154, label %210

154:                                              ; preds = %149, %152
  %155 = load i8*, i8** %62, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 21358, i8* nonnull %155) #20
  br i1 %158, label %159, label %210

159:                                              ; preds = %154, %157
  %160 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %102, align 8
  %161 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %160, i64 1
  %162 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %161, align 8
  %163 = tail call i64 %162(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %164 = icmp sgt i64 %163, -1
  %165 = sub nsw i64 %163, %106
  %166 = icmp eq i64 %165, %101
  %167 = and i1 %164, %166
  br i1 %167, label %168, label %210

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 14
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %204, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  br label %181

174:                                              ; preds = %181
  %175 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 28032, i64 %188) #20
  br i1 %175, label %176, label %210

176:                                              ; preds = %174
  %177 = load i32, i32* %169, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %204, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 13
  br label %197

181:                                              ; preds = %172, %181
  %182 = phi i64 [ 0, %172 ], [ %189, %181 ]
  %183 = phi i64 [ 0, %172 ], [ %188, %181 ]
  %184 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %173, align 8
  %185 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %184, i64 %182
  %186 = load %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %185, align 8
  %187 = tail call i64 @_ZNK8mkvmuxer15ContentEncoding4SizeEv(%"class.mkvmuxer::ContentEncoding"* %186)
  %188 = add i64 %187, %183
  %189 = add nuw nsw i64 %182, 1
  %190 = load i32, i32* %169, align 8
  %191 = zext i32 %190 to i64
  %192 = icmp ult i64 %189, %191
  br i1 %192, label %181, label %174

193:                                              ; preds = %197
  %194 = load i32, i32* %169, align 8
  %195 = zext i32 %194 to i64
  %196 = icmp ult i64 %203, %195
  br i1 %196, label %197, label %204

197:                                              ; preds = %179, %193
  %198 = phi i64 [ 0, %179 ], [ %203, %193 ]
  %199 = load %"class.mkvmuxer::ContentEncoding"**, %"class.mkvmuxer::ContentEncoding"*** %180, align 8
  %200 = getelementptr inbounds %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %199, i64 %198
  %201 = load %"class.mkvmuxer::ContentEncoding"*, %"class.mkvmuxer::ContentEncoding"** %200, align 8
  %202 = tail call zeroext i1 @_ZNK8mkvmuxer15ContentEncoding5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::ContentEncoding"* %201, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %203 = add nuw nsw i64 %198, 1
  br i1 %202, label %193, label %210

204:                                              ; preds = %193, %176, %168
  %205 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %102, align 8
  %206 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %205, i64 1
  %207 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %206, align 8
  %208 = tail call i64 %207(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %209 = icmp sgt i64 %208, -1
  br label %210

210:                                              ; preds = %197, %174, %19, %159, %204, %157, %152, %145, %140, %135, %130, %125, %120, %114, %111, %108, %100, %15, %4, %8, %2
  %211 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %4 ], [ false, %15 ], [ false, %19 ], [ false, %100 ], [ false, %108 ], [ false, %111 ], [ false, %114 ], [ false, %120 ], [ false, %125 ], [ false, %130 ], [ false, %135 ], [ false, %140 ], [ false, %145 ], [ false, %152 ], [ false, %157 ], [ false, %159 ], [ %209, %204 ], [ false, %174 ], [ false, %197 ]
  ret i1 %211
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer5Track15SetCodecPrivateEPKhm(%"class.mkvmuxer::Track"* nocapture, i8* readonly, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i64 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %9) #21
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %13, i8** %8, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* nonnull align 1 %1, i64 %2, i1 false)
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 12
  store i64 %2, i64* %16, align 8
  br label %17

17:                                               ; preds = %12, %3, %15
  %18 = phi i1 [ true, %15 ], [ false, %3 ], [ false, %12 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5Track12set_codec_idEPKc(%"class.mkvmuxer::Track"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i64 @strlen(i8* nonnull %1) #22
  %11 = add i64 %10, 1
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %11, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %12, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %12, i1 false, i1 true, i1 false) #20
  %16 = tail call i8* @__strcpy_chk(i8* nonnull %12, i8* nonnull %1, i64 %15) #20
  br label %17

17:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5Track12set_languageEPKc(%"class.mkvmuxer::Track"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i64 @strlen(i8* nonnull %1) #22
  %11 = add i64 %10, 1
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %11, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %12, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %12, i1 false, i1 true, i1 false) #20
  %16 = tail call i8* @__strcpy_chk(i8* nonnull %12, i8* nonnull %1, i64 %15) #20
  br label %17

17:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer5Track8set_nameEPKc(%"class.mkvmuxer::Track"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %0, i64 0, i32 5
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i64 @strlen(i8* nonnull %1) #22
  %11 = add i64 %10, 1
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %11, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %12, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %12, i1 false, i1 true, i1 false) #20
  %16 = tail call i8* @__strcpy_chk(i8* nonnull %12, i8* nonnull %1, i64 %15) #20
  br label %17

17:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer19PrimaryChromaticity23PrimaryChromaticitySizeEN7libwebm5MkvIdES2_(%"class.mkvmuxer::PrimaryChromaticity"* nocapture readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 %4, float %6) #20
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 %8, float %10) #20
  %12 = add i64 %11, %7
  ret i64 %12
}

declare i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64, float) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer19PrimaryChromaticity5WriteEPNS_10IMkvWriterEN7libwebm5MkvIdES4_(%"class.mkvmuxer::PrimaryChromaticity"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ult float %6, 0.000000e+00
  %8 = fcmp ugt float %6, 1.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oge float %12, 0.000000e+00
  %14 = fcmp ole float %12, 1.000000e+00
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = zext i32 %2 to i64
  %18 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 %17, float %6) #20
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = zext i32 %3 to i64
  %21 = load float, float* %11, align 4
  %22 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 %20, float %21) #20
  br label %23

23:                                               ; preds = %10, %4, %16, %19
  %24 = phi i1 [ false, %16 ], [ %22, %19 ], [ false, %10 ], [ false, %4 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer19PrimaryChromaticity5ValidEv(%"class.mkvmuxer::PrimaryChromaticity"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp ult float %3, 0.000000e+00
  %5 = fcmp ugt float %3, 1.000000e+00
  %6 = or i1 %4, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %0, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp ult float %9, 0.000000e+00
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = fcmp ole float %9, 1.000000e+00
  br label %13

13:                                               ; preds = %7, %1, %11
  %14 = phi i1 [ false, %7 ], [ false, %1 ], [ %12, %11 ]
  ret i1 %14
}

declare zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"*, i64, float) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer17MasteringMetadata21MasteringMetadataSizeEv(%"class.mkvmuxer::MasteringMetadata"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZNK8mkvmuxer17MasteringMetadata11PayloadSizeEv(%"class.mkvmuxer::MasteringMetadata"* %0)
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 21968, i64 %2) #20
  %6 = add i64 %5, %2
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer17MasteringMetadata11PayloadSizeEv(%"class.mkvmuxer::MasteringMetadata"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 8
  %4 = fcmp une float %3, 0x47EFFFFFE0000000
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21977, float %3) #20
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fcmp une float %10, 0x47EFFFFFE0000000
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21978, float %10) #20
  %14 = add i64 %13, %8
  br label %15

15:                                               ; preds = %12, %7
  %16 = phi i64 [ %14, %12 ], [ %8, %7 ]
  %17 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 2
  %18 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %17, align 8
  %19 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %18, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21969, float %22) #20
  %24 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %18, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21970, float %25) #20
  %27 = add i64 %23, %16
  %28 = add i64 %27, %26
  br label %29

29:                                               ; preds = %15, %20
  %30 = phi i64 [ %28, %20 ], [ %16, %15 ]
  %31 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 3
  %32 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %31, align 8
  %33 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %32, i64 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21971, float %36) #20
  %38 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %32, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21972, float %39) #20
  %41 = add i64 %37, %30
  %42 = add i64 %41, %40
  br label %43

43:                                               ; preds = %29, %34
  %44 = phi i64 [ %42, %34 ], [ %30, %29 ]
  %45 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 4
  %46 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %45, align 8
  %47 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %46, i64 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21973, float %50) #20
  %52 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %46, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21974, float %53) #20
  %55 = add i64 %51, %44
  %56 = add i64 %55, %54
  br label %57

57:                                               ; preds = %43, %48
  %58 = phi i64 [ %56, %48 ], [ %44, %43 ]
  %59 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 5
  %60 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %59, align 8
  %61 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %60, i64 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21975, float %64) #20
  %66 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %60, i64 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 21976, float %67) #20
  %69 = add i64 %65, %58
  %70 = add i64 %69, %68
  br label %71

71:                                               ; preds = %57, %62
  %72 = phi i64 [ %70, %62 ], [ %58, %57 ]
  ret i64 %72
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer17MasteringMetadata5ValidEv(%"class.mkvmuxer::MasteringMetadata"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fcmp une float %3, 0x47EFFFFFE0000000
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 0
  %7 = load float, float* %6, align 8
  br label %16

8:                                                ; preds = %1
  %9 = fcmp olt float %3, 0.000000e+00
  %10 = fcmp ogt float %3, 0x408F3FEB80000000
  %11 = or i1 %9, %10
  br i1 %11, label %90, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 0
  %14 = load float, float* %13, align 8
  %15 = fcmp ogt float %3, %14
  br i1 %15, label %90, label %16

16:                                               ; preds = %5, %12
  %17 = phi float [ %7, %5 ], [ %14, %12 ]
  %18 = fcmp une float %17, 0x47EFFFFFE0000000
  br i1 %18, label %19, label %25

19:                                               ; preds = %16
  %20 = fcmp olt float %17, 0.000000e+00
  %21 = fcmp ogt float %17, 0x40C387FEC0000000
  %22 = or i1 %20, %21
  %23 = fcmp olt float %17, %3
  %24 = or i1 %23, %22
  br i1 %24, label %90, label %25

25:                                               ; preds = %19, %16
  %26 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 2
  %27 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %26, align 8
  %28 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %27, i64 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fcmp ult float %31, 0.000000e+00
  %33 = fcmp ugt float %31, 1.000000e+00
  %34 = or i1 %32, %33
  br i1 %34, label %90, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %27, i64 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = fcmp oge float %37, 0.000000e+00
  %39 = fcmp ole float %37, 1.000000e+00
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %90

41:                                               ; preds = %35, %25
  %42 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 3
  %43 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %42, align 8
  %44 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %43, i64 0, i32 0
  %47 = load float, float* %46, align 4
  %48 = fcmp ult float %47, 0.000000e+00
  %49 = fcmp ugt float %47, 1.000000e+00
  %50 = or i1 %48, %49
  br i1 %50, label %90, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %43, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oge float %53, 0.000000e+00
  %55 = fcmp ole float %53, 1.000000e+00
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %90

57:                                               ; preds = %51, %41
  %58 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 4
  %59 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %58, align 8
  %60 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %59, i64 0, i32 0
  %63 = load float, float* %62, align 4
  %64 = fcmp ult float %63, 0.000000e+00
  %65 = fcmp ugt float %63, 1.000000e+00
  %66 = or i1 %64, %65
  br i1 %66, label %90, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %59, i64 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fcmp oge float %69, 0.000000e+00
  %71 = fcmp ole float %69, 1.000000e+00
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %90

73:                                               ; preds = %67, %57
  %74 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 5
  %75 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %74, align 8
  %76 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %75, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %75, i64 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp ult float %79, 0.000000e+00
  %81 = fcmp ugt float %79, 1.000000e+00
  %82 = or i1 %80, %81
  br i1 %82, label %90, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %75, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oge float %85, 0.000000e+00
  %87 = fcmp ole float %85, 1.000000e+00
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %83, %73
  br label %90

90:                                               ; preds = %83, %67, %51, %35, %77, %61, %45, %29, %19, %8, %12, %89
  %91 = phi i1 [ true, %89 ], [ false, %12 ], [ false, %8 ], [ false, %19 ], [ false, %35 ], [ false, %29 ], [ false, %51 ], [ false, %45 ], [ false, %67 ], [ false, %61 ], [ false, %83 ], [ false, %77 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer17MasteringMetadata5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::MasteringMetadata"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZNK8mkvmuxer17MasteringMetadata11PayloadSizeEv(%"class.mkvmuxer::MasteringMetadata"* %0)
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %104, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21968, i64 %3) #20
  br i1 %6, label %7, label %104

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 0
  %9 = load float, float* %8, align 8
  %10 = fcmp une float %9, 0x47EFFFFFE0000000
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21977, float %9) #20
  br i1 %12, label %13, label %104

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0x47EFFFFFE0000000
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21978, float %15) #20
  br i1 %18, label %19, label %104

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 2
  %21 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %20, align 8
  %22 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %21, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp ult float %25, 0.000000e+00
  %27 = fcmp ugt float %25, 1.000000e+00
  %28 = or i1 %26, %27
  br i1 %28, label %104, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %21, i64 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp oge float %31, 0.000000e+00
  %33 = fcmp ole float %31, 1.000000e+00
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %104

35:                                               ; preds = %29
  %36 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21969, float %25) #20
  br i1 %36, label %37, label %104

37:                                               ; preds = %35
  %38 = load float, float* %30, align 4
  %39 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21970, float %38) #20
  br i1 %39, label %40, label %104

40:                                               ; preds = %19, %37
  %41 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 3
  %42 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %41, align 8
  %43 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %42, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fcmp ult float %46, 0.000000e+00
  %48 = fcmp ugt float %46, 1.000000e+00
  %49 = or i1 %47, %48
  br i1 %49, label %104, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %42, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp oge float %52, 0.000000e+00
  %54 = fcmp ole float %52, 1.000000e+00
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %104

56:                                               ; preds = %50
  %57 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21971, float %46) #20
  br i1 %57, label %58, label %104

58:                                               ; preds = %56
  %59 = load float, float* %51, align 4
  %60 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21972, float %59) #20
  br i1 %60, label %61, label %104

61:                                               ; preds = %40, %58
  %62 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 4
  %63 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %62, align 8
  %64 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %63, i64 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fcmp ult float %67, 0.000000e+00
  %69 = fcmp ugt float %67, 1.000000e+00
  %70 = or i1 %68, %69
  br i1 %70, label %104, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %63, i64 0, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp oge float %73, 0.000000e+00
  %75 = fcmp ole float %73, 1.000000e+00
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %104

77:                                               ; preds = %71
  %78 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21973, float %67) #20
  br i1 %78, label %79, label %104

79:                                               ; preds = %77
  %80 = load float, float* %72, align 4
  %81 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21974, float %80) #20
  br i1 %81, label %82, label %104

82:                                               ; preds = %61, %79
  %83 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 5
  %84 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %83, align 8
  %85 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %84, i64 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fcmp ult float %88, 0.000000e+00
  %90 = fcmp ugt float %88, 1.000000e+00
  %91 = or i1 %89, %90
  br i1 %91, label %104, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %84, i64 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = fcmp oge float %94, 0.000000e+00
  %96 = fcmp ole float %94, 1.000000e+00
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21975, float %88) #20
  br i1 %99, label %100, label %104

100:                                              ; preds = %98
  %101 = load float, float* %93, align 4
  %102 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 21976, float %101) #20
  br i1 %102, label %103, label %104

103:                                              ; preds = %82, %100
  br label %104

104:                                              ; preds = %86, %92, %98, %65, %71, %77, %44, %50, %56, %23, %29, %35, %100, %79, %58, %37, %17, %11, %5, %2, %103
  %105 = phi i1 [ true, %103 ], [ true, %2 ], [ false, %5 ], [ false, %11 ], [ false, %17 ], [ false, %37 ], [ false, %58 ], [ false, %79 ], [ false, %100 ], [ false, %35 ], [ false, %29 ], [ false, %23 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %77 ], [ false, %71 ], [ false, %65 ], [ false, %98 ], [ false, %92 ], [ false, %86 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer17MasteringMetadata15SetChromaticityEPKNS_19PrimaryChromaticityES3_S3_S3_(%"class.mkvmuxer::MasteringMetadata"* nocapture, %"class.mkvmuxer::PrimaryChromaticity"* readonly, %"class.mkvmuxer::PrimaryChromaticity"* readonly, %"class.mkvmuxer::PrimaryChromaticity"* readonly, %"class.mkvmuxer::PrimaryChromaticity"* readonly) local_unnamed_addr #4 align 2 {
  %6 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %1, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %5
  %8 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %9 = icmp eq i8* %8, null
  br i1 %9, label %89, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %1 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %1, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast i8* %8 to i32*
  store i32 %12, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %8, i64 4
  %18 = bitcast i8* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = ptrtoint i8* %8 to i64
  br label %20

20:                                               ; preds = %10, %5
  %21 = phi i64 [ 0, %5 ], [ %19, %10 ]
  %22 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %2, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %25 = icmp eq i8* %24, null
  br i1 %25, label %85, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %2 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %2, i64 0, i32 1
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast i8* %24 to i32*
  store i32 %28, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %24, i64 4
  %34 = bitcast i8* %33 to i32*
  store i32 %31, i32* %34, align 4
  %35 = ptrtoint i8* %24 to i64
  br label %36

36:                                               ; preds = %26, %20
  %37 = phi i64 [ 0, %20 ], [ %35, %26 ]
  %38 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %3, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %41 = icmp eq i8* %40, null
  br i1 %41, label %81, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %3 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %3, i64 0, i32 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast i8* %40 to i32*
  store i32 %44, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %40, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 %47, i32* %50, align 4
  %51 = ptrtoint i8* %40 to i64
  br label %52

52:                                               ; preds = %42, %36
  %53 = phi i64 [ 0, %36 ], [ %51, %42 ]
  %54 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %4, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %52
  %56 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %57 = icmp eq i8* %56, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %4 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.mkvmuxer::PrimaryChromaticity", %"class.mkvmuxer::PrimaryChromaticity"* %4, i64 0, i32 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast i8* %56 to i32*
  store i32 %60, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %56, i64 4
  %66 = bitcast i8* %65 to i32*
  store i32 %63, i32* %66, align 4
  %67 = bitcast i8* %56 to %"class.mkvmuxer::PrimaryChromaticity"*
  br label %68

68:                                               ; preds = %58, %52
  %69 = phi %"class.mkvmuxer::PrimaryChromaticity"* [ null, %52 ], [ %67, %58 ]
  %70 = inttoptr i64 %21 to %"class.mkvmuxer::PrimaryChromaticity"*
  %71 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 2
  store %"class.mkvmuxer::PrimaryChromaticity"* %70, %"class.mkvmuxer::PrimaryChromaticity"** %71, align 8
  %72 = inttoptr i64 %37 to %"class.mkvmuxer::PrimaryChromaticity"*
  %73 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 3
  store %"class.mkvmuxer::PrimaryChromaticity"* %72, %"class.mkvmuxer::PrimaryChromaticity"** %73, align 8
  %74 = inttoptr i64 %53 to %"class.mkvmuxer::PrimaryChromaticity"*
  %75 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 4
  store %"class.mkvmuxer::PrimaryChromaticity"* %74, %"class.mkvmuxer::PrimaryChromaticity"** %75, align 8
  %76 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %0, i64 0, i32 5
  store %"class.mkvmuxer::PrimaryChromaticity"* %69, %"class.mkvmuxer::PrimaryChromaticity"** %76, align 8
  br label %89

77:                                               ; preds = %55
  %78 = icmp eq i64 %53, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %53 to i8*
  tail call void @_ZdlPv(i8* %80) #21
  br label %81

81:                                               ; preds = %39, %79, %77
  %82 = icmp eq i64 %37, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %37 to i8*
  tail call void @_ZdlPv(i8* %84) #21
  br label %85

85:                                               ; preds = %23, %83, %81
  %86 = icmp eq i64 %21, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = inttoptr i64 %21 to i8*
  tail call void @_ZdlPv(i8* %88) #21
  br label %89

89:                                               ; preds = %68, %7, %85, %87
  %90 = phi i1 [ false, %85 ], [ false, %87 ], [ false, %7 ], [ true, %68 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer6Colour10ColourSizeEv(%"class.mkvmuxer::Colour"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZNK8mkvmuxer6Colour11PayloadSizeEv(%"class.mkvmuxer::Colour"* %0)
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 21936, i64 %2) #20
  %6 = add i64 %5, %2
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer6Colour11PayloadSizeEv(%"class.mkvmuxer::Colour"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21937, i64 %3) #20
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21938, i64 %10) #20
  %14 = add i64 %13, %8
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i64 [ %14, %12 ], [ %8, %7 ]
  %17 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21939, i64 %18) #20
  %22 = add i64 %21, %16
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi i64 [ %22, %20 ], [ %16, %15 ]
  %25 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, -1
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21940, i64 %26) #20
  %30 = add i64 %29, %24
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i64 [ %30, %28 ], [ %24, %23 ]
  %33 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 4
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21941, i64 %34) #20
  %38 = add i64 %37, %32
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi i64 [ %38, %36 ], [ %32, %31 ]
  %41 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 5
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21942, i64 %42) #20
  %46 = add i64 %45, %40
  br label %47

47:                                               ; preds = %39, %44
  %48 = phi i64 [ %46, %44 ], [ %40, %39 ]
  %49 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 6
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, -1
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21943, i64 %50) #20
  %54 = add i64 %53, %48
  br label %55

55:                                               ; preds = %47, %52
  %56 = phi i64 [ %54, %52 ], [ %48, %47 ]
  %57 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 7
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, -1
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21944, i64 %58) #20
  %62 = add i64 %61, %56
  br label %63

63:                                               ; preds = %55, %60
  %64 = phi i64 [ %62, %60 ], [ %56, %55 ]
  %65 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 8
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, -1
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21945, i64 %66) #20
  %70 = add i64 %69, %64
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  %73 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 9
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, -1
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21946, i64 %74) #20
  %78 = add i64 %77, %72
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi i64 [ %78, %76 ], [ %72, %71 ]
  %81 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 10
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21947, i64 %82) #20
  %86 = add i64 %85, %80
  br label %87

87:                                               ; preds = %79, %84
  %88 = phi i64 [ %86, %84 ], [ %80, %79 ]
  %89 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 11
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, -1
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21948, i64 %90) #20
  %94 = add i64 %93, %88
  br label %95

95:                                               ; preds = %87, %92
  %96 = phi i64 [ %94, %92 ], [ %88, %87 ]
  %97 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 12
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, -1
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21949, i64 %98) #20
  %102 = add i64 %101, %96
  br label %103

103:                                              ; preds = %95, %100
  %104 = phi i64 [ %102, %100 ], [ %96, %95 ]
  %105 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 13
  %106 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %105, align 8
  %107 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %106, null
  br i1 %107, label %117, label %108

108:                                              ; preds = %103
  %109 = tail call i64 @_ZNK8mkvmuxer17MasteringMetadata11PayloadSizeEv(%"class.mkvmuxer::MasteringMetadata"* nonnull %106) #20
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 21968, i64 %109) #20
  %113 = add i64 %112, %109
  br label %114

114:                                              ; preds = %108, %111
  %115 = phi i64 [ %113, %111 ], [ 0, %108 ]
  %116 = add i64 %115, %104
  br label %117

117:                                              ; preds = %103, %114
  %118 = phi i64 [ %116, %114 ], [ %104, %103 ]
  ret i64 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer6Colour5ValidEv(%"class.mkvmuxer::Colour"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 13
  %3 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK8mkvmuxer17MasteringMetadata5ValidEv(%"class.mkvmuxer::MasteringMetadata"* nonnull %3)
  br i1 %6, label %7, label %44

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN8mkvmuxer30IsMatrixCoefficientsValueValidEm(i64 %9) #20
  br i1 %12, label %13, label %44

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 6
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZN8mkvmuxer28IsChromaSitingHorzValueValidEm(i64 %15) #20
  br i1 %18, label %19, label %44

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZN8mkvmuxer28IsChromaSitingVertValueValidEm(i64 %21) #20
  br i1 %24, label %25, label %44

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call zeroext i1 @_ZN8mkvmuxer23IsColourRangeValueValidEm(i64 %27) #20
  br i1 %30, label %31, label %44

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 9
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call zeroext i1 @_ZN8mkvmuxer35IsTransferCharacteristicsValueValidEm(i64 %33) #20
  br i1 %36, label %37, label %44

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 10
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, -1
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = tail call zeroext i1 @_ZN8mkvmuxer21IsPrimariesValueValidEm(i64 %39) #20
  br i1 %42, label %43, label %44

43:                                               ; preds = %37, %41
  br label %44

44:                                               ; preds = %41, %35, %29, %23, %17, %11, %5, %43
  %45 = phi i1 [ true, %43 ], [ false, %5 ], [ false, %11 ], [ false, %17 ], [ false, %23 ], [ false, %29 ], [ false, %35 ], [ false, %41 ]
  ret i1 %45
}

declare zeroext i1 @_ZN8mkvmuxer30IsMatrixCoefficientsValueValidEm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer28IsChromaSitingHorzValueValidEm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer28IsChromaSitingVertValueValidEm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer23IsColourRangeValueValidEm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer35IsTransferCharacteristicsValueValidEm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer21IsPrimariesValueValidEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer6Colour5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Colour"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZNK8mkvmuxer6Colour11PayloadSizeEv(%"class.mkvmuxer::Colour"* %0)
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %94, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK8mkvmuxer6Colour5ValidEv(%"class.mkvmuxer::Colour"* %0)
  br i1 %6, label %7, label %94

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21936, i64 %3) #20
  br i1 %8, label %9, label %94

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21937, i64 %11) #20
  br i1 %14, label %15, label %94

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21938, i64 %17) #20
  br i1 %20, label %21, label %94

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21939, i64 %23) #20
  br i1 %26, label %27, label %94

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21940, i64 %29) #20
  br i1 %32, label %33, label %94

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21941, i64 %35) #20
  br i1 %38, label %39, label %94

39:                                               ; preds = %33, %37
  %40 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21942, i64 %41) #20
  br i1 %44, label %45, label %94

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, -1
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21943, i64 %47) #20
  br i1 %50, label %51, label %94

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 7
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, -1
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21944, i64 %53) #20
  br i1 %56, label %57, label %94

57:                                               ; preds = %51, %55
  %58 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 8
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, -1
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21945, i64 %59) #20
  br i1 %62, label %63, label %94

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 9
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, -1
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21946, i64 %65) #20
  br i1 %68, label %69, label %94

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 10
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, -1
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21947, i64 %71) #20
  br i1 %74, label %75, label %94

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 11
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, -1
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21948, i64 %77) #20
  br i1 %80, label %81, label %94

81:                                               ; preds = %75, %79
  %82 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 12
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, -1
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21949, i64 %83) #20
  br i1 %86, label %87, label %94

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 13
  %89 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %88, align 8
  %90 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = tail call zeroext i1 @_ZNK8mkvmuxer17MasteringMetadata5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::MasteringMetadata"* nonnull %89, %"class.mkvmuxer::IMkvWriter"* %1)
  br i1 %92, label %93, label %94

93:                                               ; preds = %87, %91
  br label %94

94:                                               ; preds = %91, %85, %79, %73, %67, %61, %55, %49, %43, %37, %31, %25, %19, %13, %7, %5, %2, %93
  %95 = phi i1 [ true, %93 ], [ true, %2 ], [ false, %5 ], [ false, %7 ], [ false, %13 ], [ false, %19 ], [ false, %25 ], [ false, %31 ], [ false, %37 ], [ false, %43 ], [ false, %49 ], [ false, %55 ], [ false, %61 ], [ false, %67 ], [ false, %73 ], [ false, %79 ], [ false, %85 ], [ false, %91 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer6Colour20SetMasteringMetadataERKNS_17MasteringMetadataE(%"class.mkvmuxer::Colour"* nocapture, %"class.mkvmuxer::MasteringMetadata"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #21
  %4 = bitcast i8* %3 to %"class.mkvmuxer::MasteringMetadata"*
  %5 = getelementptr inbounds i8, i8* %3, i64 4
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #20
  %7 = bitcast %"class.mkvmuxer::MasteringMetadata"* %1 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = bitcast i8* %3 to i32*
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %1, i64 0, i32 1
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast i8* %5 to i32*
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %1, i64 0, i32 2
  %15 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %1, i64 0, i32 3
  %17 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %16, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %1, i64 0, i32 4
  %19 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %18, align 8
  %20 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %1, i64 0, i32 5
  %21 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %20, align 8
  %22 = tail call zeroext i1 @_ZN8mkvmuxer17MasteringMetadata15SetChromaticityEPKNS_19PrimaryChromaticityES3_S3_S3_(%"class.mkvmuxer::MasteringMetadata"* nonnull %4, %"class.mkvmuxer::PrimaryChromaticity"* %15, %"class.mkvmuxer::PrimaryChromaticity"* %17, %"class.mkvmuxer::PrimaryChromaticity"* %19, %"class.mkvmuxer::PrimaryChromaticity"* %21)
  br i1 %22, label %23, label %55

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %0, i64 0, i32 13
  %25 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %24, align 8
  %26 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %25, null
  br i1 %26, label %53, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %25, i64 0, i32 2
  %29 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %28, align 8
  %30 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %25, i64 0, i32 3
  %35 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %34, align 8
  %36 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #21
  br label %39

39:                                               ; preds = %37, %33
  %40 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %25, i64 0, i32 4
  %41 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %40, align 8
  %42 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #21
  br label %45

45:                                               ; preds = %43, %39
  %46 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %25, i64 0, i32 5
  %47 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %46, align 8
  %48 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #21
  br label %51

51:                                               ; preds = %45, %49
  %52 = bitcast %"class.mkvmuxer::MasteringMetadata"* %25 to i8*
  tail call void @_ZdlPv(i8* %52) #21
  br label %53

53:                                               ; preds = %23, %51
  %54 = bitcast %"class.mkvmuxer::MasteringMetadata"** %24 to i8**
  store i8* %3, i8** %54, align 8
  br label %83

55:                                               ; preds = %2
  %56 = bitcast i8* %6 to %"class.mkvmuxer::PrimaryChromaticity"**
  %57 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %56, align 8
  %58 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %57 to i8*
  tail call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds i8, i8* %3, i64 16
  %63 = bitcast i8* %62 to %"class.mkvmuxer::PrimaryChromaticity"**
  %64 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %63, align 8
  %65 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #21
  br label %68

68:                                               ; preds = %66, %61
  %69 = getelementptr inbounds i8, i8* %3, i64 24
  %70 = bitcast i8* %69 to %"class.mkvmuxer::PrimaryChromaticity"**
  %71 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %70, align 8
  %72 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #21
  br label %75

75:                                               ; preds = %73, %68
  %76 = getelementptr inbounds i8, i8* %3, i64 32
  %77 = bitcast i8* %76 to %"class.mkvmuxer::PrimaryChromaticity"**
  %78 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %77, align 8
  %79 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #21
  br label %82

82:                                               ; preds = %80, %75
  tail call void @_ZdlPv(i8* nonnull %3) #21
  br label %83

83:                                               ; preds = %53, %82
  %84 = phi i1 [ true, %53 ], [ false, %82 ]
  ret i1 %84
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer10Projection14ProjectionSizeEv(%"class.mkvmuxer::Projection"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZNK8mkvmuxer10Projection11PayloadSizeEv(%"class.mkvmuxer::Projection"* %0)
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 30320, i64 %2) #20
  %6 = add i64 %5, %2
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer10Projection11PayloadSizeEv(%"class.mkvmuxer::Projection"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 30320, i64 %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKhy(i64 30322, i8* nonnull %11, i64 %7) #20
  %15 = add i64 %14, %5
  br label %16

16:                                               ; preds = %9, %1, %13
  %17 = phi i64 [ %15, %13 ], [ %5, %9 ], [ %5, %1 ]
  %18 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 30323, float %19) #20
  %21 = add i64 %20, %17
  %22 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 2
  %23 = load float, float* %22, align 8
  %24 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 30324, float %23) #20
  %25 = add i64 %21, %24
  %26 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 30325, float %27) #20
  %29 = add i64 %25, %28
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer10Projection5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Projection"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZNK8mkvmuxer10Projection11PayloadSizeEv(%"class.mkvmuxer::Projection"* %0)
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 30320, i64 %3) #20
  br i1 %6, label %7, label %34

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 30321, i64 %10) #20
  br i1 %11, label %12, label %34

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKhy(%"class.mkvmuxer::IMkvWriter"* %1, i64 30322, i8* nonnull %18, i64 %14) #20
  br i1 %21, label %22, label %34

22:                                               ; preds = %16, %12, %20
  %23 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 30323, float %24) #20
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 2
  %28 = load float, float* %27, align 8
  %29 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 30324, float %28) #20
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 3
  %32 = load float, float* %31, align 4
  %33 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 30325, float %32) #20
  br label %34

34:                                               ; preds = %30, %26, %22, %20, %7, %5, %2
  %35 = phi i1 [ true, %2 ], [ false, %5 ], [ false, %7 ], [ false, %20 ], [ false, %22 ], [ false, %26 ], [ %33, %30 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer10Projection20SetProjectionPrivateEPKhm(%"class.mkvmuxer::Projection"* nocapture, i8* readonly, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i64 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %9 = icmp eq i8* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZdaPv(i8* nonnull %12) #21
  br label %15

15:                                               ; preds = %14, %10
  store i8* %8, i8** %11, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %0, i64 0, i32 5
  store i64 %2, i64* %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %17

17:                                               ; preds = %15, %7, %3
  %18 = phi i1 [ false, %3 ], [ true, %15 ], [ false, %7 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10VideoTrackC2EPj(%"class.mkvmuxer::VideoTrack"* nocapture, i32*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer5TrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 0, i32 8
  %6 = bitcast i8** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #20
  %7 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %1) #20
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 0, i32 9
  %9 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 44, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer10VideoTrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 1
  %11 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10VideoTrackD2Ev(%"class.mkvmuxer::VideoTrack"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer10VideoTrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 15
  %4 = load %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Colour"** %3, align 8
  %5 = icmp eq %"class.mkvmuxer::Colour"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %4, i64 0, i32 13
  %8 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %7, align 8
  %9 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %8, i64 0, i32 2
  %12 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %11, align 8
  %13 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #21
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %8, i64 0, i32 3
  %18 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %17, align 8
  %19 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #21
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %8, i64 0, i32 4
  %24 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %23, align 8
  %25 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #21
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %8, i64 0, i32 5
  %30 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %29, align 8
  %31 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #21
  br label %34

34:                                               ; preds = %32, %28
  %35 = bitcast %"class.mkvmuxer::MasteringMetadata"* %8 to i8*
  tail call void @_ZdlPv(i8* %35) #21
  br label %36

36:                                               ; preds = %6, %34
  %37 = bitcast %"class.mkvmuxer::Colour"* %4 to i8*
  tail call void @_ZdlPv(i8* %37) #21
  br label %38

38:                                               ; preds = %36, %1
  %39 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 16
  %40 = load %"class.mkvmuxer::Projection"*, %"class.mkvmuxer::Projection"** %39, align 8
  %41 = icmp eq %"class.mkvmuxer::Projection"* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %40, i64 0, i32 4
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @_ZdaPv(i8* nonnull %44) #21
  br label %47

47:                                               ; preds = %42, %46
  %48 = bitcast %"class.mkvmuxer::Projection"* %40 to i8*
  tail call void @_ZdlPv(i8* %48) #21
  br label %49

49:                                               ; preds = %47, %38
  %50 = bitcast %"class.mkvmuxer::VideoTrack"* %0 to %"class.mkvmuxer::Track"*
  tail call void @_ZN8mkvmuxer5TrackD2Ev(%"class.mkvmuxer::Track"* %50) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10VideoTrackD0Ev(%"class.mkvmuxer::VideoTrack"*) unnamed_addr #4 align 2 {
  tail call void @_ZN8mkvmuxer10VideoTrackD2Ev(%"class.mkvmuxer::VideoTrack"* %0) #20
  %2 = bitcast %"class.mkvmuxer::VideoTrack"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN8mkvmuxer10VideoTrack13SetStereoModeEm(%"class.mkvmuxer::VideoTrack"* nocapture, i64) local_unnamed_addr #0 align 2 {
  switch i64 %1, label %5 [
    i64 11, label %3
    i64 3, label %3
    i64 2, label %3
    i64 1, label %3
    i64 0, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 11
  store i64 %1, i64* %4, align 8
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN8mkvmuxer10VideoTrack12SetAlphaModeEm(%"class.mkvmuxer::VideoTrack"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 1
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 12
  store i64 %1, i64* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer10VideoTrack11PayloadSizeEv(%"class.mkvmuxer::VideoTrack"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.mkvmuxer::VideoTrack"* %0 to %"class.mkvmuxer::Track"*
  %3 = tail call i64 @_ZNK8mkvmuxer5Track11PayloadSizeEv(%"class.mkvmuxer::Track"* %2)
  %4 = tail call i64 @_ZNK8mkvmuxer10VideoTrack16VideoPayloadSizeEv(%"class.mkvmuxer::VideoTrack"* %0)
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 224, i64 %4) #20
  %6 = add i64 %4, %3
  %7 = add i64 %6, %5
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer10VideoTrack16VideoPayloadSizeEv(%"class.mkvmuxer::VideoTrack"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 13
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ %3, %1 ]
  %10 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 176, i64 %9) #20
  %11 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 10
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %12, %8 ]
  %19 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 186, i64 %18) #20
  %20 = add i64 %19, %10
  %21 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21680, i64 %22) #20
  %26 = add i64 %25, %20
  br label %27

27:                                               ; preds = %17, %24
  %28 = phi i64 [ %26, %24 ], [ %20, %17 ]
  %29 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21690, i64 %30) #20
  %34 = add i64 %33, %28
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi i64 [ %34, %32 ], [ %28, %27 ]
  %37 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 5
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21708, i64 %38) #20
  %42 = add i64 %41, %36
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi i64 [ %42, %40 ], [ %36, %35 ]
  %45 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 6
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21725, i64 %46) #20
  %50 = add i64 %49, %44
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi i64 [ %50, %48 ], [ %44, %43 ]
  %53 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 7
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21691, i64 %54) #20
  %58 = add i64 %57, %52
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi i64 [ %58, %56 ], [ %52, %51 ]
  %61 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 8
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21674, i64 %62) #20
  %66 = add i64 %65, %60
  br label %67

67:                                               ; preds = %59, %64
  %68 = phi i64 [ %66, %64 ], [ %60, %59 ]
  %69 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 11
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21432, i64 %70) #20
  %74 = add i64 %73, %68
  br label %75

75:                                               ; preds = %67, %72
  %76 = phi i64 [ %74, %72 ], [ %68, %67 ]
  %77 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 12
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21440, i64 %78) #20
  %82 = add i64 %81, %76
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  %85 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 9
  %86 = load double, double* %85, align 8
  %87 = fcmp ogt double %86, 0.000000e+00
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = fptrunc double %86 to float
  %90 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 2327523, float %89) #20
  %91 = add i64 %90, %84
  br label %92

92:                                               ; preds = %88, %83
  %93 = phi i64 [ %91, %88 ], [ %84, %83 ]
  %94 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 14
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 3061028, i8* nonnull %95) #20
  %99 = add i64 %98, %93
  br label %100

100:                                              ; preds = %92, %97
  %101 = phi i64 [ %99, %97 ], [ %93, %92 ]
  %102 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 15
  %103 = load %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Colour"** %102, align 8
  %104 = icmp eq %"class.mkvmuxer::Colour"* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %100
  %106 = tail call i64 @_ZNK8mkvmuxer6Colour11PayloadSizeEv(%"class.mkvmuxer::Colour"* nonnull %103) #20
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 21936, i64 %106) #20
  %110 = add i64 %109, %106
  br label %111

111:                                              ; preds = %105, %108
  %112 = phi i64 [ %110, %108 ], [ 0, %105 ]
  %113 = add i64 %112, %101
  br label %114

114:                                              ; preds = %100, %111
  %115 = phi i64 [ %113, %111 ], [ %101, %100 ]
  %116 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 16
  %117 = load %"class.mkvmuxer::Projection"*, %"class.mkvmuxer::Projection"** %116, align 8
  %118 = icmp eq %"class.mkvmuxer::Projection"* %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %114
  %120 = tail call i64 @_ZNK8mkvmuxer10Projection11PayloadSizeEv(%"class.mkvmuxer::Projection"* nonnull %117) #20
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 30320, i64 %120) #20
  %124 = add i64 %123, %120
  br label %125

125:                                              ; preds = %119, %122
  %126 = phi i64 [ %124, %122 ], [ 0, %119 ]
  %127 = add i64 %126, %115
  br label %128

128:                                              ; preds = %114, %125
  %129 = phi i64 [ %127, %125 ], [ %115, %114 ]
  ret i64 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer10VideoTrack5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::VideoTrack"*, %"class.mkvmuxer::IMkvWriter"*) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.mkvmuxer::VideoTrack"* %0 to %"class.mkvmuxer::Track"*
  %4 = tail call zeroext i1 @_ZNK8mkvmuxer5Track5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Track"* %3, %"class.mkvmuxer::IMkvWriter"* %1)
  br i1 %4, label %5, label %117

5:                                                ; preds = %2
  %6 = tail call i64 @_ZNK8mkvmuxer10VideoTrack16VideoPayloadSizeEv(%"class.mkvmuxer::VideoTrack"* %0)
  %7 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 224, i64 %6) #20
  br i1 %7, label %8, label %117

8:                                                ; preds = %5
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %10 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %10, i64 1
  %12 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, align 8
  %13 = tail call i64 %12(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %117, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 13
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i64 [ %21, %19 ], [ %17, %15 ]
  %24 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 176, i64 %23) #20
  br i1 %24, label %25, label %117

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 10
  %31 = load i64, i64* %30, align 8
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i64 [ %31, %29 ], [ %27, %25 ]
  %34 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 186, i64 %33) #20
  br i1 %34, label %35, label %117

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21680, i64 %37) #20
  br i1 %40, label %41, label %117

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21690, i64 %43) #20
  br i1 %46, label %47, label %117

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 5
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21708, i64 %49) #20
  br i1 %52, label %53, label %117

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 6
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21725, i64 %55) #20
  br i1 %58, label %59, label %117

59:                                               ; preds = %53, %57
  %60 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 7
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21691, i64 %61) #20
  br i1 %64, label %65, label %117

65:                                               ; preds = %59, %63
  %66 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 8
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21674, i64 %67) #20
  br i1 %70, label %71, label %117

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 11
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21432, i64 %73) #20
  br i1 %76, label %77, label %117

77:                                               ; preds = %71, %75
  %78 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 12
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21440, i64 %79) #20
  br i1 %82, label %83, label %117

83:                                               ; preds = %77, %81
  %84 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 14
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* %1, i64 3061028, i8* nonnull %85) #20
  br i1 %88, label %89, label %117

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 9
  %91 = load double, double* %90, align 8
  %92 = fcmp ogt double %91, 0.000000e+00
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = fptrunc double %91 to float
  %95 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 2327523, float %94) #20
  br i1 %95, label %96, label %117

96:                                               ; preds = %93, %89
  %97 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 15
  %98 = load %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Colour"** %97, align 8
  %99 = icmp eq %"class.mkvmuxer::Colour"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = tail call zeroext i1 @_ZNK8mkvmuxer6Colour5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Colour"* nonnull %98, %"class.mkvmuxer::IMkvWriter"* %1)
  br i1 %101, label %102, label %117

102:                                              ; preds = %96, %100
  %103 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 16
  %104 = load %"class.mkvmuxer::Projection"*, %"class.mkvmuxer::Projection"** %103, align 8
  %105 = icmp eq %"class.mkvmuxer::Projection"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = tail call zeroext i1 @_ZNK8mkvmuxer10Projection5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Projection"* nonnull %104, %"class.mkvmuxer::IMkvWriter"* %1)
  br i1 %107, label %108, label %117

108:                                              ; preds = %102, %106
  %109 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %110 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %109, i64 1
  %111 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %110, align 8
  %112 = tail call i64 %111(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %113 = icmp sgt i64 %112, -1
  %114 = sub nsw i64 %112, %13
  %115 = icmp eq i64 %114, %6
  %116 = and i1 %113, %115
  ret i1 %116

117:                                              ; preds = %5, %106, %100, %93, %87, %81, %75, %69, %63, %57, %51, %45, %39, %32, %22, %8, %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10VideoTrack16set_colour_spaceEPKc(%"class.mkvmuxer::VideoTrack"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 14
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i64 @strlen(i8* nonnull %1) #22
  %11 = add i64 %10, 1
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %11, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %12, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %12, i1 false, i1 true, i1 false) #20
  %16 = tail call i8* @__strcpy_chk(i8* nonnull %12, i8* nonnull %1, i64 %15) #20
  br label %17

17:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer10VideoTrack9SetColourERKNS_6ColourE(%"class.mkvmuxer::VideoTrack"* nocapture, %"class.mkvmuxer::Colour"* nocapture readonly dereferenceable(112)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.7", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.7"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 112) #21
  %7 = getelementptr inbounds i8, i8* %6, i64 104
  %8 = bitcast i8* %7 to %"class.mkvmuxer::MasteringMetadata"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -1, i64 104, i1 false) #20
  store %"class.mkvmuxer::MasteringMetadata"* null, %"class.mkvmuxer::MasteringMetadata"** %8, align 8
  %9 = ptrtoint i8* %6 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.7"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 13
  %12 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %11, align 8
  %13 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %12, null
  %14 = bitcast i8* %6 to %"class.mkvmuxer::Colour"*
  br i1 %13, label %18, label %15

15:                                               ; preds = %2
  %16 = bitcast i8* %6 to %"class.mkvmuxer::Colour"*
  %17 = tail call zeroext i1 @_ZN8mkvmuxer6Colour20SetMasteringMetadataERKNS_17MasteringMetadataE(%"class.mkvmuxer::Colour"* nonnull %16, %"class.mkvmuxer::MasteringMetadata"* nonnull dereferenceable(40) %12)
  br i1 %17, label %18, label %97

18:                                               ; preds = %2, %15
  %19 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8* %6 to i64*
  store i64 %20, i64* %21, align 8
  %22 = load %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Colour"** %5, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 1
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 3
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 4
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 5
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 6
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 6
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 7
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 7
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 8
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 8
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 9
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 9
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 10
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 10
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 11
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 11
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 12
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %22, i64 0, i32 12
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 15
  %60 = load %"class.mkvmuxer::Colour"*, %"class.mkvmuxer::Colour"** %59, align 8
  %61 = icmp eq %"class.mkvmuxer::Colour"* %60, null
  %62 = ptrtoint %"class.mkvmuxer::Colour"* %22 to i64
  br i1 %61, label %95, label %63

63:                                               ; preds = %18
  %64 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %60, i64 0, i32 13
  %65 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %64, align 8
  %66 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %65, null
  br i1 %66, label %93, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %65, i64 0, i32 2
  %69 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %68, align 8
  %70 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #21
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %65, i64 0, i32 3
  %75 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %74, align 8
  %76 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #21
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %65, i64 0, i32 4
  %81 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %80, align 8
  %82 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #21
  br label %85

85:                                               ; preds = %83, %79
  %86 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %65, i64 0, i32 5
  %87 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %86, align 8
  %88 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #21
  br label %91

91:                                               ; preds = %89, %85
  %92 = bitcast %"class.mkvmuxer::MasteringMetadata"* %65 to i8*
  tail call void @_ZdlPv(i8* %92) #21
  br label %93

93:                                               ; preds = %63, %91
  %94 = bitcast %"class.mkvmuxer::Colour"* %60 to i8*
  tail call void @_ZdlPv(i8* %94) #21
  br label %95

95:                                               ; preds = %93, %18
  %96 = bitcast %"class.mkvmuxer::Colour"** %59 to i64*
  store i64 %62, i64* %96, align 8
  store %"class.mkvmuxer::Colour"* null, %"class.mkvmuxer::Colour"** %5, align 8
  br label %99

97:                                               ; preds = %15
  store %"class.mkvmuxer::Colour"* null, %"class.mkvmuxer::Colour"** %5, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.7"* %3 to %"struct.std::__1::default_delete.11"*
  call void @_ZNKSt3__114default_deleteIN8mkvmuxer6ColourEEclEPS2_(%"struct.std::__1::default_delete.11"* nonnull %98, %"class.mkvmuxer::Colour"* nonnull %14) #20
  br label %99

99:                                               ; preds = %95, %97
  %100 = phi i1 [ true, %95 ], [ false, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #20
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer10VideoTrack13SetProjectionERKNS_10ProjectionE(%"class.mkvmuxer::VideoTrack"* nocapture, %"class.mkvmuxer::Projection"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #21
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 32, i1 false) #20
  %4 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %1, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %1, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %9, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %13 = icmp eq i8* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %3, i64 16
  %16 = bitcast i8* %15 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %3, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 %9, i64* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* nonnull align 1 %5, i64 %9, i1 false) #20
  br label %19

19:                                               ; preds = %14, %2
  %20 = bitcast %"class.mkvmuxer::Projection"* %1 to <4 x i32>*
  %21 = load <4 x i32>, <4 x i32>* %20, align 8
  %22 = bitcast i8* %3 to <4 x i32>*
  store <4 x i32> %21, <4 x i32>* %22, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::VideoTrack", %"class.mkvmuxer::VideoTrack"* %0, i64 0, i32 16
  %24 = load %"class.mkvmuxer::Projection"*, %"class.mkvmuxer::Projection"** %23, align 8
  %25 = icmp eq %"class.mkvmuxer::Projection"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.mkvmuxer::Projection", %"class.mkvmuxer::Projection"* %24, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZdaPv(i8* nonnull %28) #21
  br label %31

31:                                               ; preds = %26, %30
  %32 = bitcast %"class.mkvmuxer::Projection"* %24 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  br label %33

33:                                               ; preds = %19, %31
  %34 = bitcast %"class.mkvmuxer::Projection"** %23 to i8**
  store i8* %3, i8** %34, align 8
  br label %36

35:                                               ; preds = %7, %11
  tail call void @_ZdlPv(i8* nonnull %3) #21
  br label %36

36:                                               ; preds = %33, %35
  %37 = phi i1 [ true, %33 ], [ false, %35 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10AudioTrackC2EPj(%"class.mkvmuxer::AudioTrack"* nocapture, i32*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer5TrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 0, i32 8
  %6 = bitcast i8** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #20
  %7 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %1) #20
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 0, i32 9
  %9 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 44, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer10AudioTrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 3
  store double 0.000000e+00, double* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer10AudioTrackD0Ev(%"class.mkvmuxer::AudioTrack"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.mkvmuxer::AudioTrack"* %0 to %"class.mkvmuxer::Track"*
  tail call void @_ZN8mkvmuxer5TrackD2Ev(%"class.mkvmuxer::Track"* %2) #20
  %3 = bitcast %"class.mkvmuxer::AudioTrack"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer10AudioTrack11PayloadSizeEv(%"class.mkvmuxer::AudioTrack"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.mkvmuxer::AudioTrack"* %0 to %"class.mkvmuxer::Track"*
  %3 = tail call i64 @_ZNK8mkvmuxer5Track11PayloadSizeEv(%"class.mkvmuxer::Track"* %2)
  %4 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 3
  %5 = load double, double* %4, align 8
  %6 = fptrunc double %5 to float
  %7 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 181, float %6) #20
  %8 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 159, i64 %9) #20
  %11 = add i64 %10, %7
  %12 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 25188, i64 %13) #20
  %17 = add i64 %16, %11
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi i64 [ %17, %15 ], [ %11, %1 ]
  %20 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 225, i64 %19) #20
  %21 = add i64 %19, %3
  %22 = add i64 %21, %20
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer10AudioTrack5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::AudioTrack"*, %"class.mkvmuxer::IMkvWriter"*) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.mkvmuxer::AudioTrack"* %0 to %"class.mkvmuxer::Track"*
  %4 = tail call zeroext i1 @_ZNK8mkvmuxer5Track5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Track"* %3, %"class.mkvmuxer::IMkvWriter"* %1)
  br i1 %4, label %5, label %51

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 3
  %7 = load double, double* %6, align 8
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 181, float %8) #20
  %10 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 159, i64 %11) #20
  %13 = add i64 %12, %9
  %14 = getelementptr inbounds %"class.mkvmuxer::AudioTrack", %"class.mkvmuxer::AudioTrack"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 25188, i64 %15) #20
  %19 = add i64 %18, %13
  br label %20

20:                                               ; preds = %5, %17
  %21 = phi i64 [ %19, %17 ], [ %13, %5 ]
  %22 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 225, i64 %21) #20
  br i1 %22, label %23, label %51

23:                                               ; preds = %20
  %24 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %25 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %25, i64 1
  %27 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %26, align 8
  %28 = tail call i64 %27(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %23
  %31 = load double, double* %6, align 8
  %32 = fptrunc double %31 to float
  %33 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* %1, i64 181, float %32) #20
  br i1 %33, label %34, label %51

34:                                               ; preds = %30
  %35 = load i64, i64* %10, align 8
  %36 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 159, i64 %35) #20
  br i1 %36, label %37, label %51

37:                                               ; preds = %34
  %38 = load i64, i64* %14, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 25188, i64 %38) #20
  br i1 %41, label %42, label %51

42:                                               ; preds = %37, %40
  %43 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %24, align 8
  %44 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %43, i64 1
  %45 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %44, align 8
  %46 = tail call i64 %45(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %47 = icmp sgt i64 %46, -1
  %48 = sub nsw i64 %46, %28
  %49 = icmp eq i64 %48, %21
  %50 = and i1 %47, %49
  ret i1 %50

51:                                               ; preds = %20, %40, %34, %30, %23, %2
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer6TracksC2Ev(%"class.mkvmuxer::Tracks"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  store %"class.mkvmuxer::Track"** null, %"class.mkvmuxer::Track"*** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer6TracksD2Ev(%"class.mkvmuxer::Tracks"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %3 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::Track"** %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %11

9:                                                ; preds = %25
  %10 = icmp eq %"class.mkvmuxer::Track"** %27, null
  br i1 %10, label %34, label %31

11:                                               ; preds = %5, %25
  %12 = phi i32 [ %26, %25 ], [ %7, %5 ]
  %13 = phi %"class.mkvmuxer::Track"** [ %27, %25 ], [ %3, %5 ]
  %14 = phi i64 [ %28, %25 ], [ 0, %5 ]
  %15 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %13, i64 %14
  %16 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %15, align 8
  %17 = icmp eq %"class.mkvmuxer::Track"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.mkvmuxer::Track"* %16 to void (%"class.mkvmuxer::Track"*)***
  %20 = load void (%"class.mkvmuxer::Track"*)**, void (%"class.mkvmuxer::Track"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %20, i64 1
  %22 = load void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %21, align 8
  tail call void %22(%"class.mkvmuxer::Track"* nonnull %16) #20
  %23 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %2, align 8
  %24 = load i32, i32* %6, align 8
  br label %25

25:                                               ; preds = %18, %11
  %26 = phi i32 [ %24, %18 ], [ %12, %11 ]
  %27 = phi %"class.mkvmuxer::Track"** [ %23, %18 ], [ %13, %11 ]
  %28 = add nuw nsw i64 %14, 1
  %29 = zext i32 %26 to i64
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %11, label %9

31:                                               ; preds = %5, %9
  %32 = phi %"class.mkvmuxer::Track"** [ %27, %9 ], [ %3, %5 ]
  %33 = bitcast %"class.mkvmuxer::Track"** %32 to i8*
  tail call void @_ZdaPv(i8* %33) #21
  br label %34

34:                                               ; preds = %1, %9, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer6Tracks8AddTrackEPNS_5TrackEi(%"class.mkvmuxer::Tracks"* nocapture, %"class.mkvmuxer::Track"*, i32) local_unnamed_addr #4 align 2 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %240, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = icmp sgt i32 %2, 126
  %10 = or i1 %9, %8
  br i1 %10, label %240, label %11

11:                                               ; preds = %5
  %12 = icmp eq i32 %2, 0
  %13 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  br i1 %12, label %32, label %15

15:                                               ; preds = %11
  %16 = icmp eq i32 %14, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %19 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %18, align 8
  %20 = zext i32 %2 to i64
  %21 = zext i32 %14 to i64
  br label %24

22:                                               ; preds = %24
  %23 = icmp ult i64 %31, %21
  br i1 %23, label %24, label %32

24:                                               ; preds = %17, %22
  %25 = phi i64 [ 0, %17 ], [ %31, %22 ]
  %26 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %19, i64 %25
  %27 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %26, align 8
  %28 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %27, i64 0, i32 6
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, %20
  %31 = add nuw nsw i64 %25, 1
  br i1 %30, label %240, label %22

32:                                               ; preds = %22, %11, %15
  %33 = phi i32 [ 0, %15 ], [ %14, %11 ], [ %14, %22 ]
  %34 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %35 = add i32 %33, 1
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 3
  %38 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %37, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %39 = bitcast i8* %38 to %"class.mkvmuxer::Track"**
  %40 = icmp eq i8* %38, null
  br i1 %40, label %240, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %33, 0
  %43 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %44 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %43, align 8
  %45 = bitcast %"class.mkvmuxer::Track"** %44 to i8*
  br i1 %42, label %157, label %46

46:                                               ; preds = %41
  %47 = zext i32 %33 to i64
  %48 = icmp ult i32 %33, 4
  br i1 %48, label %49, label %70

49:                                               ; preds = %155, %70, %46
  %50 = phi i64 [ 0, %70 ], [ 0, %46 ], [ %79, %155 ]
  %51 = sub nsw i64 %47, %50
  %52 = xor i64 %50, -1
  %53 = add nsw i64 %52, %47
  %54 = and i64 %51, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49, %56
  %57 = phi i64 [ %64, %56 ], [ %50, %49 ]
  %58 = phi i64 [ %65, %56 ], [ %54, %49 ]
  %59 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %57
  %60 = bitcast %"class.mkvmuxer::Track"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %57
  %63 = bitcast %"class.mkvmuxer::Track"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = add nuw nsw i64 %57, 1
  %65 = add i64 %58, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %56, !llvm.loop !23

67:                                               ; preds = %56, %49
  %68 = phi i64 [ %50, %49 ], [ %64, %56 ]
  %69 = icmp ult i64 %53, 7
  br i1 %69, label %157, label %159

70:                                               ; preds = %46
  %71 = shl nuw nsw i64 %47, 3
  %72 = getelementptr i8, i8* %38, i64 %71
  %73 = getelementptr %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %47
  %74 = bitcast %"class.mkvmuxer::Track"** %73 to i8*
  %75 = icmp ult i8* %38, %74
  %76 = icmp ugt i8* %72, %45
  %77 = and i1 %75, %76
  br i1 %77, label %49, label %78

78:                                               ; preds = %70
  %79 = and i64 %47, 4294967292
  %80 = add nsw i64 %79, -4
  %81 = lshr exact i64 %80, 2
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 3
  %84 = icmp ult i64 %80, 12
  br i1 %84, label %136, label %85

85:                                               ; preds = %78
  %86 = sub nsw i64 %82, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %133, %87 ]
  %89 = phi i64 [ %86, %85 ], [ %134, %87 ]
  %90 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %88
  %91 = bitcast %"class.mkvmuxer::Track"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !24
  %93 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %90, i64 2
  %94 = bitcast %"class.mkvmuxer::Track"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !24
  %96 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %88
  %97 = bitcast %"class.mkvmuxer::Track"** %96 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %97, align 8, !alias.scope !27, !noalias !24
  %98 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %96, i64 2
  %99 = bitcast %"class.mkvmuxer::Track"** %98 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %99, align 8, !alias.scope !27, !noalias !24
  %100 = or i64 %88, 4
  %101 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %100
  %102 = bitcast %"class.mkvmuxer::Track"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !24
  %104 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %101, i64 2
  %105 = bitcast %"class.mkvmuxer::Track"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !24
  %107 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %100
  %108 = bitcast %"class.mkvmuxer::Track"** %107 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %108, align 8, !alias.scope !27, !noalias !24
  %109 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %107, i64 2
  %110 = bitcast %"class.mkvmuxer::Track"** %109 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %110, align 8, !alias.scope !27, !noalias !24
  %111 = or i64 %88, 8
  %112 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %111
  %113 = bitcast %"class.mkvmuxer::Track"** %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8, !alias.scope !24
  %115 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %112, i64 2
  %116 = bitcast %"class.mkvmuxer::Track"** %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8, !alias.scope !24
  %118 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %111
  %119 = bitcast %"class.mkvmuxer::Track"** %118 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %119, align 8, !alias.scope !27, !noalias !24
  %120 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %118, i64 2
  %121 = bitcast %"class.mkvmuxer::Track"** %120 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %121, align 8, !alias.scope !27, !noalias !24
  %122 = or i64 %88, 12
  %123 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %122
  %124 = bitcast %"class.mkvmuxer::Track"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !24
  %126 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %123, i64 2
  %127 = bitcast %"class.mkvmuxer::Track"** %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !24
  %129 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %122
  %130 = bitcast %"class.mkvmuxer::Track"** %129 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %130, align 8, !alias.scope !27, !noalias !24
  %131 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %129, i64 2
  %132 = bitcast %"class.mkvmuxer::Track"** %131 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %132, align 8, !alias.scope !27, !noalias !24
  %133 = add i64 %88, 16
  %134 = add i64 %89, -4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %87, !llvm.loop !29

136:                                              ; preds = %87, %78
  %137 = phi i64 [ 0, %78 ], [ %133, %87 ]
  %138 = icmp eq i64 %83, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %152, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %153, %139 ], [ %83, %136 ]
  %142 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %140
  %143 = bitcast %"class.mkvmuxer::Track"** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !24
  %145 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %142, i64 2
  %146 = bitcast %"class.mkvmuxer::Track"** %145 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8, !alias.scope !24
  %148 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %140
  %149 = bitcast %"class.mkvmuxer::Track"** %148 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %149, align 8, !alias.scope !27, !noalias !24
  %150 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %148, i64 2
  %151 = bitcast %"class.mkvmuxer::Track"** %150 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %151, align 8, !alias.scope !27, !noalias !24
  %152 = add i64 %140, 4
  %153 = add i64 %141, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %139, !llvm.loop !30

155:                                              ; preds = %139, %136
  %156 = icmp eq i64 %79, %47
  br i1 %156, label %157, label %49

157:                                              ; preds = %67, %159, %155, %41
  %158 = icmp eq %"class.mkvmuxer::Track"** %44, null
  br i1 %158, label %211, label %210

159:                                              ; preds = %67, %159
  %160 = phi i64 [ %208, %159 ], [ %68, %67 ]
  %161 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %160
  %162 = bitcast %"class.mkvmuxer::Track"** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %160
  %165 = bitcast %"class.mkvmuxer::Track"** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = add nuw nsw i64 %160, 1
  %167 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %166
  %168 = bitcast %"class.mkvmuxer::Track"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %166
  %171 = bitcast %"class.mkvmuxer::Track"** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = add nuw nsw i64 %160, 2
  %173 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %172
  %174 = bitcast %"class.mkvmuxer::Track"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %172
  %177 = bitcast %"class.mkvmuxer::Track"** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = add nuw nsw i64 %160, 3
  %179 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %178
  %180 = bitcast %"class.mkvmuxer::Track"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %178
  %183 = bitcast %"class.mkvmuxer::Track"** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = add nuw nsw i64 %160, 4
  %185 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %184
  %186 = bitcast %"class.mkvmuxer::Track"** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %184
  %189 = bitcast %"class.mkvmuxer::Track"** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = add nuw nsw i64 %160, 5
  %191 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %190
  %192 = bitcast %"class.mkvmuxer::Track"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %190
  %195 = bitcast %"class.mkvmuxer::Track"** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = add nuw nsw i64 %160, 6
  %197 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %196
  %198 = bitcast %"class.mkvmuxer::Track"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %196
  %201 = bitcast %"class.mkvmuxer::Track"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = add nuw nsw i64 %160, 7
  %203 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, i64 %202
  %204 = bitcast %"class.mkvmuxer::Track"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %202
  %207 = bitcast %"class.mkvmuxer::Track"** %206 to i64*
  store i64 %205, i64* %207, align 8
  %208 = add nuw nsw i64 %160, 8
  %209 = icmp eq i64 %208, %47
  br i1 %209, label %157, label %159, !llvm.loop !31

210:                                              ; preds = %157
  tail call void @_ZdaPv(i8* %45) #21
  br label %211

211:                                              ; preds = %210, %157
  br i1 %12, label %212, label %232

212:                                              ; preds = %211
  %213 = load i32, i32* %34, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %232, label %215

215:                                              ; preds = %212
  %216 = zext i32 %213 to i64
  br label %217

217:                                              ; preds = %230, %215
  %218 = phi i32 [ %231, %230 ], [ %35, %215 ]
  %219 = zext i32 %218 to i64
  br label %222

220:                                              ; preds = %222
  %221 = icmp ult i64 %229, %216
  br i1 %221, label %222, label %232

222:                                              ; preds = %217, %220
  %223 = phi i64 [ 0, %217 ], [ %229, %220 ]
  %224 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %223
  %225 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %224, align 8
  %226 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %225, i64 0, i32 6
  %227 = load i64, i64* %226, align 8
  %228 = icmp eq i64 %227, %219
  %229 = add nuw nsw i64 %223, 1
  br i1 %228, label %230, label %220

230:                                              ; preds = %222
  %231 = add i32 %218, 1
  br label %217

232:                                              ; preds = %220, %212, %211
  %233 = phi i32 [ %2, %211 ], [ %35, %212 ], [ %218, %220 ]
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %1, i64 0, i32 6
  store i64 %234, i64* %235, align 8
  %236 = bitcast %"class.mkvmuxer::Tracks"* %0 to i8**
  store i8* %38, i8** %236, align 8
  %237 = load i32, i32* %34, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %39, i64 %238
  store %"class.mkvmuxer::Track"* %1, %"class.mkvmuxer::Track"** %239, align 8
  store i32 %35, i32* %34, align 8
  br label %240

240:                                              ; preds = %24, %5, %32, %232, %3
  %241 = phi i1 [ false, %5 ], [ false, %3 ], [ true, %232 ], [ false, %32 ], [ false, %24 ]
  ret i1 %241
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.mkvmuxer::Track"* @_ZNK8mkvmuxer6Tracks15GetTrackByIndexEj(%"class.mkvmuxer::Tracks"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %4 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %3, align 8
  %5 = icmp eq %"class.mkvmuxer::Track"** %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %4, i64 %11
  %13 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %12, align 8
  br label %14

14:                                               ; preds = %6, %2, %10
  %15 = phi %"class.mkvmuxer::Track"* [ %13, %10 ], [ null, %2 ], [ null, %6 ]
  ret %"class.mkvmuxer::Track"* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.mkvmuxer::Track"* @_ZNK8mkvmuxer6Tracks16GetTrackByNumberEm(%"class.mkvmuxer::Tracks"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %8 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %19, %9
  br i1 %11, label %20, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %8, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  %19 = add nuw nsw i64 %13, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %12, %10, %2
  %21 = phi %"class.mkvmuxer::Track"* [ null, %2 ], [ null, %10 ], [ %15, %12 ]
  ret %"class.mkvmuxer::Track"* %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer6Tracks12TrackIsAudioEm(%"class.mkvmuxer::Tracks"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %8 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %19, %9
  br i1 %11, label %20, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %8, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  %19 = add nuw nsw i64 %13, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %10, %12, %2
  %21 = phi %"class.mkvmuxer::Track"* [ null, %2 ], [ %15, %12 ], [ null, %10 ]
  %22 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %21, i64 0, i32 7
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 2
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer6Tracks12TrackIsVideoEm(%"class.mkvmuxer::Tracks"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %8 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %19, %9
  br i1 %11, label %20, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %8, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  %19 = add nuw nsw i64 %13, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %10, %12, %2
  %21 = phi %"class.mkvmuxer::Track"* [ null, %2 ], [ %15, %12 ], [ null, %10 ]
  %22 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %21, i64 0, i32 7
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer6Tracks5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tracks"* nocapture, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %8 = zext i32 %4 to i64
  br label %9

9:                                                ; preds = %22, %6
  %10 = phi i64 [ 0, %6 ], [ %29, %22 ]
  %11 = phi i64 [ 0, %6 ], [ %28, %22 ]
  %12 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %13 = icmp eq %"class.mkvmuxer::Track"** %12, null
  br i1 %13, label %78, label %14

14:                                               ; preds = %9
  %15 = load i32, i32* %3, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %10, %16
  br i1 %17, label %18, label %78

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %12, i64 %10
  %20 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %19, align 8
  %21 = icmp eq %"class.mkvmuxer::Track"* %20, null
  br i1 %21, label %78, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.mkvmuxer::Track"* %20 to i64 (%"class.mkvmuxer::Track"*)***
  %24 = load i64 (%"class.mkvmuxer::Track"*)**, i64 (%"class.mkvmuxer::Track"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %24, i64 4
  %26 = load i64 (%"class.mkvmuxer::Track"*)*, i64 (%"class.mkvmuxer::Track"*)** %25, align 8
  %27 = tail call i64 %26(%"class.mkvmuxer::Track"* nonnull %20) #20
  %28 = add i64 %27, %11
  %29 = add nuw nsw i64 %10, 1
  %30 = icmp eq i64 %29, %8
  br i1 %30, label %31, label %9

31:                                               ; preds = %22, %2
  %32 = phi i64 [ 0, %2 ], [ %28, %22 ]
  %33 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 374648427, i64 %32) #20
  br i1 %33, label %34, label %78

34:                                               ; preds = %31
  %35 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %36 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %36, i64 1
  %38 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %37, align 8
  %39 = tail call i64 %38(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %78, label %41

41:                                               ; preds = %34
  br i1 %5, label %42, label %67

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 0
  %44 = zext i32 %4 to i64
  br label %47

45:                                               ; preds = %59
  %46 = icmp eq i64 %66, %44
  br i1 %46, label %67, label %47

47:                                               ; preds = %45, %42
  %48 = phi i64 [ 0, %42 ], [ %66, %45 ]
  %49 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %43, align 8
  %50 = icmp eq %"class.mkvmuxer::Track"** %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = load i32, i32* %3, align 8
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %48, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %49, i64 %48
  %57 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %56, align 8
  %58 = bitcast %"class.mkvmuxer::Track"* %57 to i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)***
  br label %59

59:                                               ; preds = %47, %51, %55
  %60 = phi i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)*** [ %58, %55 ], [ null, %47 ], [ null, %51 ]
  %61 = phi %"class.mkvmuxer::Track"* [ %57, %55 ], [ null, %47 ], [ null, %51 ]
  %62 = load i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)*** %60, align 8
  %63 = getelementptr inbounds i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)** %62, i64 5
  %64 = load i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::Track"*, %"class.mkvmuxer::IMkvWriter"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.mkvmuxer::Track"* %61, %"class.mkvmuxer::IMkvWriter"* %1) #20
  %66 = add nuw nsw i64 %48, 1
  br i1 %65, label %45, label %78

67:                                               ; preds = %45, %41
  %68 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %35, align 8
  %69 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %68, i64 1
  %70 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %69, align 8
  %71 = tail call i64 %70(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %72 = icmp sgt i64 %71, -1
  %73 = sub nsw i64 %71, %39
  %74 = icmp eq i64 %73, %32
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %0, i64 0, i32 2
  store i8 1, i8* %77, align 4
  br label %78

78:                                               ; preds = %14, %9, %18, %59, %34, %67, %76, %31
  %79 = phi i1 [ false, %31 ], [ false, %34 ], [ true, %76 ], [ false, %67 ], [ false, %59 ], [ false, %18 ], [ false, %9 ], [ false, %14 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter6set_idEPKc(%"class.mkvmuxer::Chapter"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 0
  %4 = icmp eq %"class.mkvmuxer::Chapter"* %0, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Chapter8set_timeERKNS_7SegmentEmm(%"class.mkvmuxer::Chapter"* nocapture, %"class.mkvmuxer::Segment"* nocapture readonly dereferenceable(2448), i64, i64) local_unnamed_addr #14 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %1, i64 0, i32 4, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = udiv i64 %2, %6
  %8 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = udiv i64 %3, %6
  %10 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 2
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter10add_stringEPKcS2_S2_(%"class.mkvmuxer::Chapter"* nocapture, i8*, i8*, i8*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %6, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %12 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %11, align 8
  br label %66

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 0
  %15 = shl nsw i32 %6, 1
  %16 = select i1 %14, i32 1, i32 %15
  %17 = sext i32 %16 to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 24) #20
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %22 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %21, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %23 = bitcast i8* %22 to %"class.mkvmuxer::Chapter::Display"*
  %24 = icmp eq i8* %22, null
  br i1 %24, label %115, label %25

25:                                               ; preds = %13
  %26 = icmp sgt i32 %8, 0
  %27 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %28 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %27, align 8
  br i1 %26, label %29, label %43

29:                                               ; preds = %25
  %30 = zext i32 %8 to i64
  %31 = and i64 %30, 1
  %32 = icmp eq i32 %8, 1
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = sub nsw i64 %30, %31
  br label %45

35:                                               ; preds = %45, %29
  %36 = phi i64 [ 0, %29 ], [ %57, %45 ]
  %37 = icmp eq i64 %31, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %28, i64 %36
  %40 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %23, i64 %36
  %41 = bitcast %"class.mkvmuxer::Chapter::Display"* %40 to i8*
  %42 = bitcast %"class.mkvmuxer::Chapter::Display"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #20
  br label %43

43:                                               ; preds = %38, %35, %25
  %44 = icmp eq %"class.mkvmuxer::Chapter::Display"* %28, null
  br i1 %44, label %63, label %60

45:                                               ; preds = %45, %33
  %46 = phi i64 [ 0, %33 ], [ %57, %45 ]
  %47 = phi i64 [ %34, %33 ], [ %58, %45 ]
  %48 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %28, i64 %46
  %49 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %23, i64 %46
  %50 = bitcast %"class.mkvmuxer::Chapter::Display"* %49 to i8*
  %51 = bitcast %"class.mkvmuxer::Chapter::Display"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #20
  %52 = or i64 %46, 1
  %53 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %28, i64 %52
  %54 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %23, i64 %52
  %55 = bitcast %"class.mkvmuxer::Chapter::Display"* %54 to i8*
  %56 = bitcast %"class.mkvmuxer::Chapter::Display"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #20
  %57 = add nuw nsw i64 %46, 2
  %58 = add i64 %47, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %35, label %45

60:                                               ; preds = %43
  %61 = bitcast %"class.mkvmuxer::Chapter::Display"* %28 to i8*
  tail call void @_ZdaPv(i8* %61) #21
  %62 = load i32, i32* %7, align 4
  br label %63

63:                                               ; preds = %60, %43
  %64 = phi i32 [ %62, %60 ], [ %8, %43 ]
  %65 = bitcast %"class.mkvmuxer::Chapter::Display"** %27 to i8**
  store i8* %22, i8** %65, align 8
  store i32 %16, i32* %5, align 8
  br label %66

66:                                               ; preds = %10, %63
  %67 = phi i32 [ %8, %10 ], [ %64, %63 ]
  %68 = phi %"class.mkvmuxer::Chapter::Display"* [ %12, %10 ], [ %23, %63 ]
  %69 = add nsw i32 %67, 1
  store i32 %69, i32* %7, align 4
  %70 = sext i32 %67 to i64
  %71 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %68, i64 %70
  %72 = bitcast %"class.mkvmuxer::Chapter::Display"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #20
  %73 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %71, i64 0, i32 0
  %74 = icmp eq %"class.mkvmuxer::Chapter::Display"* %71, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %66
  store i8* null, i8** %73, align 8
  %76 = icmp eq i8* %1, null
  br i1 %76, label %85, label %77

77:                                               ; preds = %75
  %78 = tail call i64 @strlen(i8* nonnull %1) #22
  %79 = add i64 %78, 1
  %80 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %79, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %80, i8** %73, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %115, label %82

82:                                               ; preds = %77
  %83 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %80, i1 false, i1 true, i1 false) #20
  %84 = tail call i8* @__strcpy_chk(i8* nonnull %80, i8* nonnull %1, i64 %83) #20
  br label %85

85:                                               ; preds = %75, %82
  %86 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %68, i64 %70, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZdaPv(i8* nonnull %87) #21
  br label %90

90:                                               ; preds = %89, %85
  store i8* null, i8** %86, align 8
  %91 = icmp eq i8* %2, null
  br i1 %91, label %100, label %92

92:                                               ; preds = %90
  %93 = tail call i64 @strlen(i8* nonnull %2) #22
  %94 = add i64 %93, 1
  %95 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %94, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %95, i8** %86, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %115, label %97

97:                                               ; preds = %92
  %98 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %95, i1 false, i1 true, i1 false) #20
  %99 = tail call i8* @__strcpy_chk(i8* nonnull %95, i8* nonnull %2, i64 %98) #20
  br label %100

100:                                              ; preds = %90, %97
  %101 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %68, i64 %70, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  tail call void @_ZdaPv(i8* nonnull %102) #21
  br label %105

105:                                              ; preds = %104, %100
  store i8* null, i8** %101, align 8
  %106 = icmp eq i8* %3, null
  br i1 %106, label %115, label %107

107:                                              ; preds = %105
  %108 = tail call i64 @strlen(i8* nonnull %3) #22
  %109 = add i64 %108, 1
  %110 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %109, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %110, i8** %101, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %110, i1 false, i1 true, i1 false) #20
  %114 = tail call i8* @__strcpy_chk(i8* nonnull %110, i8* nonnull %3, i64 %113) #20
  br label %115

115:                                              ; preds = %107, %105, %112, %92, %77, %66, %13
  %116 = phi i1 [ false, %13 ], [ false, %66 ], [ false, %77 ], [ false, %92 ], [ false, %107 ], [ true, %105 ], [ true, %112 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter19ExpandDisplaysArrayEv(%"class.mkvmuxer::Chapter"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %58, label %7

7:                                                ; preds = %1
  %8 = icmp eq i32 %3, 0
  %9 = shl nsw i32 %3, 1
  %10 = select i1 %8, i32 1, i32 %9
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 24)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %15, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %17 = bitcast i8* %16 to %"class.mkvmuxer::Chapter::Display"*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %58, label %19

19:                                               ; preds = %7
  %20 = icmp sgt i32 %5, 0
  %21 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %22 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %21, align 8
  br i1 %20, label %23, label %37

23:                                               ; preds = %19
  %24 = zext i32 %5 to i64
  %25 = and i64 %24, 1
  %26 = icmp eq i32 %5, 1
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = sub nsw i64 %24, %25
  br label %39

29:                                               ; preds = %39, %23
  %30 = phi i64 [ 0, %23 ], [ %51, %39 ]
  %31 = icmp eq i64 %25, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %22, i64 %30
  %34 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %17, i64 %30
  %35 = bitcast %"class.mkvmuxer::Chapter::Display"* %34 to i8*
  %36 = bitcast %"class.mkvmuxer::Chapter::Display"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  br label %37

37:                                               ; preds = %32, %29, %19
  %38 = icmp eq %"class.mkvmuxer::Chapter::Display"* %22, null
  br i1 %38, label %56, label %54

39:                                               ; preds = %39, %27
  %40 = phi i64 [ 0, %27 ], [ %51, %39 ]
  %41 = phi i64 [ %28, %27 ], [ %52, %39 ]
  %42 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %22, i64 %40
  %43 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %17, i64 %40
  %44 = bitcast %"class.mkvmuxer::Chapter::Display"* %43 to i8*
  %45 = bitcast %"class.mkvmuxer::Chapter::Display"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false)
  %46 = or i64 %40, 1
  %47 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %22, i64 %46
  %48 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %17, i64 %46
  %49 = bitcast %"class.mkvmuxer::Chapter::Display"* %48 to i8*
  %50 = bitcast %"class.mkvmuxer::Chapter::Display"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  %51 = add nuw nsw i64 %40, 2
  %52 = add i64 %41, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %29, label %39

54:                                               ; preds = %37
  %55 = bitcast %"class.mkvmuxer::Chapter::Display"* %22 to i8*
  tail call void @_ZdaPv(i8* %55) #21
  br label %56

56:                                               ; preds = %54, %37
  %57 = bitcast %"class.mkvmuxer::Chapter::Display"** %21 to i8**
  store i8* %16, i8** %57, align 8
  store i32 %10, i32* %2, align 8
  br label %58

58:                                               ; preds = %56, %7, %1
  %59 = phi i1 [ true, %1 ], [ true, %56 ], [ false, %7 ]
  ret i1 %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer7Chapter7Display4InitEv(%"class.mkvmuxer::Chapter::Display"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::Chapter::Display"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter7Display9set_titleEPKc(%"class.mkvmuxer::Chapter::Display"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 0
  %4 = icmp eq %"class.mkvmuxer::Chapter::Display"* %0, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter7Display12set_languageEPKc(%"class.mkvmuxer::Chapter::Display"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 1
  %4 = icmp eq i8** %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Chapter7Display11set_countryEPKc(%"class.mkvmuxer::Chapter::Display"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 2
  %4 = icmp eq i8** %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer7ChapterC2Ev(%"class.mkvmuxer::Chapter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer7ChapterD2Ev(%"class.mkvmuxer::Chapter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Chapter4InitEPj(%"class.mkvmuxer::Chapter"* nocapture, i32*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %4 = bitcast %"class.mkvmuxer::Chapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  %5 = bitcast %"class.mkvmuxer::Chapter::Display"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  %6 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %1) #20
  %7 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 3
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8mkvmuxer7Chapter11ShallowCopyEPS0_(%"class.mkvmuxer::Chapter"* nocapture readonly, %"class.mkvmuxer::Chapter"* nocapture) local_unnamed_addr #14 align 2 {
  %3 = bitcast %"class.mkvmuxer::Chapter"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.mkvmuxer::Chapter"* %1 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 2
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 3
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %16 = bitcast %"class.mkvmuxer::Chapter::Display"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 4
  %19 = bitcast %"class.mkvmuxer::Chapter::Display"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 5
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %1, i64 0, i32 6
  store i32 %24, i32* %25, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Chapter5ClearEv(%"class.mkvmuxer::Chapter"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 0
  %3 = icmp eq %"class.mkvmuxer::Chapter"* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %5) #21
  br label %8

8:                                                ; preds = %7, %4
  store i8* null, i8** %2, align 8
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  %13 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  %14 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %13, align 8
  br i1 %12, label %15, label %42

15:                                               ; preds = %9, %38
  %16 = phi %"class.mkvmuxer::Chapter::Display"* [ %41, %38 ], [ %14, %9 ]
  %17 = phi i32 [ %39, %38 ], [ %11, %9 ]
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %10, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %16, i64 %19
  %21 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %20, i64 0, i32 0
  %22 = icmp eq %"class.mkvmuxer::Chapter::Display"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = load i8*, i8** %21, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @_ZdaPv(i8* nonnull %24) #21
  br label %27

27:                                               ; preds = %26, %23
  store i8* null, i8** %21, align 8
  br label %28

28:                                               ; preds = %27, %15
  %29 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %16, i64 %19, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @_ZdaPv(i8* nonnull %30) #21
  br label %33

33:                                               ; preds = %32, %28
  store i8* null, i8** %29, align 8
  %34 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %16, i64 %19, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZdaPv(i8* nonnull %35) #21
  br label %38

38:                                               ; preds = %33, %37
  store i8* null, i8** %34, align 8
  %39 = load i32, i32* %10, align 4
  %40 = icmp sgt i32 %39, 0
  %41 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %13, align 8
  br i1 %40, label %15, label %42

42:                                               ; preds = %38, %9
  %43 = phi %"class.mkvmuxer::Chapter::Display"* [ %14, %9 ], [ %41, %38 ]
  %44 = icmp eq %"class.mkvmuxer::Chapter::Display"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.mkvmuxer::Chapter::Display"* %43 to i8*
  tail call void @_ZdaPv(i8* %46) #21
  br label %47

47:                                               ; preds = %45, %42
  store %"class.mkvmuxer::Chapter::Display"* null, %"class.mkvmuxer::Chapter::Display"** %13, align 8
  %48 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 5
  store i32 0, i32* %48, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Chapter7Display5ClearEv(%"class.mkvmuxer::Chapter::Display"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 0
  %3 = icmp eq %"class.mkvmuxer::Chapter::Display"* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %5) #21
  br label %8

8:                                                ; preds = %7, %4
  store i8* null, i8** %2, align 8
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 1
  %11 = icmp eq i8** %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = load i8*, i8** %10, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZdaPv(i8* nonnull %13) #21
  br label %16

16:                                               ; preds = %15, %12
  store i8* null, i8** %10, align 8
  br label %17

17:                                               ; preds = %9, %16
  %18 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 2
  %19 = icmp eq i8** %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = load i8*, i8** %18, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @_ZdaPv(i8* nonnull %21) #21
  br label %24

24:                                               ; preds = %23, %20
  store i8* null, i8** %18, align 8
  br label %25

25:                                               ; preds = %17, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer7Chapter9WriteAtomEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 22100, i8* %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 29636, i64 %7) #20
  %9 = add i64 %8, %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 145, i64 %11) #20
  %13 = add i64 %9, %12
  %14 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 146, i64 %15) #20
  %17 = add i64 %13, %16
  %18 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  br label %28

23:                                               ; preds = %49, %2
  %24 = phi i64 [ %17, %2 ], [ %53, %49 ]
  %25 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 182, i64 %24) #20
  %26 = add i64 %25, %24
  %27 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %27, label %103, label %58

28:                                               ; preds = %21, %49
  %29 = phi i64 [ 0, %21 ], [ %54, %49 ]
  %30 = phi i64 [ %17, %21 ], [ %53, %49 ]
  %31 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %22, align 8
  %32 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %31, i64 %29, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 133, i8* %33) #20
  %35 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %31, i64 %29, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %28
  %39 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17276, i8* nonnull %36) #20
  %40 = add i64 %39, %34
  br label %41

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %40, %38 ], [ %34, %28 ]
  %43 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %31, i64 %29, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17278, i8* nonnull %44) #20
  %48 = add i64 %47, %42
  br label %49

49:                                               ; preds = %41, %46
  %50 = phi i64 [ %48, %46 ], [ %42, %41 ]
  %51 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 128, i64 %50) #20
  %52 = add i64 %50, %30
  %53 = add i64 %52, %51
  %54 = add nuw nsw i64 %29, 1
  %55 = load i32, i32* %18, align 4
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %54, %56
  br i1 %57, label %28, label %23

58:                                               ; preds = %23
  %59 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %60 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %60, i64 1
  %62 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %61, align 8
  %63 = tail call i64 %62(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %64 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 182, i64 %24) #20
  br i1 %64, label %65, label %103

65:                                               ; preds = %58
  %66 = load i8*, i8** %3, align 8
  %67 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 22100, i8* %66) #20
  br i1 %67, label %68, label %103

68:                                               ; preds = %65
  %69 = load i64, i64* %6, align 8
  %70 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 29636, i64 %69) #20
  br i1 %70, label %71, label %103

71:                                               ; preds = %68
  %72 = load i64, i64* %10, align 8
  %73 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 145, i64 %72) #20
  br i1 %73, label %74, label %103

74:                                               ; preds = %71
  %75 = load i64, i64* %14, align 8
  %76 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 146, i64 %75) #20
  br i1 %76, label %77, label %103

77:                                               ; preds = %74
  %78 = load i32, i32* %18, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %0, i64 0, i32 4
  br label %86

82:                                               ; preds = %86
  %83 = load i32, i32* %18, align 4
  %84 = sext i32 %83 to i64
  %85 = icmp slt i64 %92, %84
  br i1 %85, label %86, label %93

86:                                               ; preds = %80, %82
  %87 = phi i64 [ 0, %80 ], [ %92, %82 ]
  %88 = load %"class.mkvmuxer::Chapter::Display"*, %"class.mkvmuxer::Chapter::Display"** %81, align 8
  %89 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %88, i64 %87
  %90 = tail call i64 @_ZNK8mkvmuxer7Chapter7Display12WriteDisplayEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter::Display"* %89, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %91 = icmp eq i64 %90, 0
  %92 = add nuw nsw i64 %87, 1
  br i1 %91, label %103, label %82

93:                                               ; preds = %82, %77
  %94 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %59, align 8
  %95 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %94, i64 1
  %96 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %95, align 8
  %97 = tail call i64 %96(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %98 = icmp slt i64 %97, %63
  %99 = sub nsw i64 %97, %63
  %100 = icmp eq i64 %99, %26
  %101 = or i1 %98, %100
  %102 = select i1 %101, i64 %26, i64 0
  br label %103

103:                                              ; preds = %86, %58, %65, %68, %71, %74, %93, %23
  %104 = phi i64 [ %26, %23 ], [ 0, %58 ], [ 0, %65 ], [ 0, %68 ], [ 0, %71 ], [ 0, %74 ], [ %102, %93 ], [ 0, %86 ]
  ret i64 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer7Chapter7Display12WriteDisplayEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter::Display"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 133, i8* %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17276, i8* nonnull %7) #20
  %11 = add i64 %10, %5
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i64 [ %11, %9 ], [ %5, %2 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Chapter::Display", %"class.mkvmuxer::Chapter::Display"* %0, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17278, i8* nonnull %15) #20
  %19 = add i64 %18, %13
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i64 [ %19, %17 ], [ %13, %12 ]
  %22 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 128, i64 %21) #20
  %23 = add i64 %22, %21
  %24 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %24, label %55, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %27 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %27, i64 1
  %29 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %28, align 8
  %30 = tail call i64 %29(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %31 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 128, i64 %21) #20
  br i1 %31, label %32, label %55

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 8
  %34 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 133, i8* %33) #20
  br i1 %34, label %35, label %55

35:                                               ; preds = %32
  %36 = load i8*, i8** %6, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17276, i8* nonnull %36) #20
  br i1 %39, label %40, label %55

40:                                               ; preds = %35, %38
  %41 = load i8*, i8** %14, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17278, i8* nonnull %41) #20
  br i1 %44, label %45, label %55

45:                                               ; preds = %40, %43
  %46 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %26, align 8
  %47 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %46, i64 1
  %48 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %47, align 8
  %49 = tail call i64 %48(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %50 = icmp slt i64 %49, %30
  %51 = sub nsw i64 %49, %30
  %52 = icmp eq i64 %51, %23
  %53 = or i1 %50, %52
  %54 = select i1 %53, i64 %23, i64 0
  br label %55

55:                                               ; preds = %25, %32, %38, %43, %45, %20
  %56 = phi i64 [ %23, %20 ], [ 0, %25 ], [ 0, %32 ], [ 0, %38 ], [ 0, %43 ], [ %54, %45 ]
  ret i64 %56
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer8ChaptersC2Ev(%"class.mkvmuxer::Chapters"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::Chapters"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer8ChaptersD2Ev(%"class.mkvmuxer::Chapters"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  %6 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %5, align 8
  br i1 %4, label %7, label %16

7:                                                ; preds = %1, %7
  %8 = phi %"class.mkvmuxer::Chapter"* [ %15, %7 ], [ %6, %1 ]
  %9 = phi i32 [ %13, %7 ], [ %3, %1 ]
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %8, i64 %11
  tail call void @_ZN8mkvmuxer7Chapter5ClearEv(%"class.mkvmuxer::Chapter"* %12)
  %13 = load i32, i32* %2, align 4
  %14 = icmp sgt i32 %13, 0
  %15 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %5, align 8
  br i1 %14, label %7, label %16

16:                                               ; preds = %7, %1
  %17 = phi %"class.mkvmuxer::Chapter"* [ %6, %1 ], [ %15, %7 ]
  %18 = icmp eq %"class.mkvmuxer::Chapter"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %17, i64 -1, i32 5
  %21 = bitcast i32* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #21
  br label %22

22:                                               ; preds = %19, %16
  store %"class.mkvmuxer::Chapter"* null, %"class.mkvmuxer::Chapter"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8mkvmuxer8Chapters5CountEv(%"class.mkvmuxer::Chapters"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.mkvmuxer::Chapter"* @_ZN8mkvmuxer8Chapters10AddChapterEPj(%"class.mkvmuxer::Chapters"* nocapture, i32*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN8mkvmuxer8Chapters19ExpandChaptersArrayEv(%"class.mkvmuxer::Chapters"* %0)
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  %6 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %5, align 8
  %7 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %6, i64 %10
  %12 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %6, i64 %10, i32 4
  %13 = bitcast %"class.mkvmuxer::Chapter"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #20
  %14 = bitcast %"class.mkvmuxer::Chapter::Display"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #20
  %15 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %1) #20
  %16 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %6, i64 %10, i32 3
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %2, %4
  %18 = phi %"class.mkvmuxer::Chapter"* [ %11, %4 ], [ null, %2 ]
  ret %"class.mkvmuxer::Chapter"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer8Chapters19ExpandChaptersArrayEv(%"class.mkvmuxer::Chapters"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %66, label %7

7:                                                ; preds = %1
  %8 = icmp eq i32 %3, 0
  %9 = shl nsw i32 %3, 1
  %10 = select i1 %8, i32 1, i32 %9
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 48)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = or i64 %14, 8
  %16 = select i1 %13, i64 -1, i64 %15
  %17 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %18 = icmp eq i8* %17, null
  br i1 %18, label %66, label %19

19:                                               ; preds = %7
  %20 = bitcast i8* %17 to i64*
  store i64 %11, i64* %20, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to %"class.mkvmuxer::Chapter"*
  %23 = icmp eq i8* %21, null
  br i1 %23, label %66, label %24

24:                                               ; preds = %19
  %25 = icmp sgt i32 %5, 0
  %26 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  %27 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %26, align 8
  br i1 %25, label %28, label %30

28:                                               ; preds = %24
  %29 = sext i32 %5 to i64
  br label %32

30:                                               ; preds = %32, %24
  %31 = icmp eq %"class.mkvmuxer::Chapter"* %27, null
  br i1 %31, label %64, label %61

32:                                               ; preds = %28, %32
  %33 = phi i64 [ 0, %28 ], [ %59, %32 ]
  %34 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33
  %35 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33
  %36 = bitcast %"class.mkvmuxer::Chapter"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.mkvmuxer::Chapter"* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 1
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 2
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 3
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 4
  %49 = bitcast %"class.mkvmuxer::Chapter::Display"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 4
  %52 = bitcast %"class.mkvmuxer::Chapter::Display"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 5
  store i32 %54, i32* %55, align 8
  %56 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 %33, i32 6
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %22, i64 %33, i32 6
  store i32 %57, i32* %58, align 4
  %59 = add nuw nsw i64 %33, 1
  %60 = icmp slt i64 %59, %29
  br i1 %60, label %32, label %30

61:                                               ; preds = %30
  %62 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %27, i64 -1, i32 5
  %63 = bitcast i32* %62 to i8*
  tail call void @_ZdaPv(i8* %63) #21
  br label %64

64:                                               ; preds = %61, %30
  %65 = bitcast %"class.mkvmuxer::Chapter"** %26 to i8**
  store i8* %21, i8** %65, align 8
  store i32 %10, i32* %2, align 8
  br label %66

66:                                               ; preds = %7, %64, %19, %1
  %67 = phi i1 [ true, %1 ], [ true, %64 ], [ false, %19 ], [ false, %7 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer8Chapters5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapters"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i64 [ 0, %8 ], [ %17, %10 ]
  %12 = phi i64 [ 0, %8 ], [ %16, %10 ]
  %13 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %9, align 8
  %14 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %13, i64 %11
  %15 = tail call i64 @_ZNK8mkvmuxer7Chapter9WriteAtomEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter"* %14, %"class.mkvmuxer::IMkvWriter"* null) #20
  %16 = add i64 %15, %12
  %17 = add nuw nsw i64 %11, 1
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %10, label %21

21:                                               ; preds = %10, %4
  %22 = phi i64 [ 0, %4 ], [ %16, %10 ]
  %23 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 17849, i64 %22) #20
  %24 = add i64 %23, %22
  %25 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 272869232, i64 %24) #20
  br i1 %25, label %26, label %43

26:                                               ; preds = %21
  %27 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %28 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %28, i64 1
  %30 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %29, align 8
  %31 = tail call i64 %30(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %32 = tail call i64 @_ZNK8mkvmuxer8Chapters12WriteEditionEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapters"* %0, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %26
  %35 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %27, align 8
  %36 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %35, i64 1
  %37 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %36, align 8
  %38 = tail call i64 %37(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %39 = icmp slt i64 %38, %31
  %40 = sub nsw i64 %38, %31
  %41 = icmp eq i64 %40, %24
  %42 = or i1 %39, %41
  ret i1 %42

43:                                               ; preds = %21, %26, %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer8Chapters12WriteEditionEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapters"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  br label %13

8:                                                ; preds = %13, %2
  %9 = phi i64 [ 0, %2 ], [ %19, %13 ]
  %10 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 17849, i64 %9) #20
  %11 = add i64 %10, %9
  %12 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %12, label %57, label %24

13:                                               ; preds = %6, %13
  %14 = phi i64 [ 0, %6 ], [ %20, %13 ]
  %15 = phi i64 [ 0, %6 ], [ %19, %13 ]
  %16 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %7, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %16, i64 %14
  %18 = tail call i64 @_ZNK8mkvmuxer7Chapter9WriteAtomEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter"* %17, %"class.mkvmuxer::IMkvWriter"* null)
  %19 = add i64 %18, %15
  %20 = add nuw nsw i64 %14, 1
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %13, label %8

24:                                               ; preds = %8
  %25 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %26 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %26, i64 1
  %28 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %27, align 8
  %29 = tail call i64 %28(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %30 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17849, i64 %9) #20
  br i1 %30, label %31, label %57

31:                                               ; preds = %24
  %32 = load i32, i32* %3, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %47

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Chapters"* %0, i64 0, i32 2
  br label %40

36:                                               ; preds = %40
  %37 = load i32, i32* %3, align 4
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %46, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %34, %36
  %41 = phi i64 [ 0, %34 ], [ %46, %36 ]
  %42 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %35, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %42, i64 %41
  %44 = tail call i64 @_ZNK8mkvmuxer7Chapter9WriteAtomEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapter"* %43, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %45 = icmp eq i64 %44, 0
  %46 = add nuw nsw i64 %41, 1
  br i1 %45, label %57, label %36

47:                                               ; preds = %36, %31
  %48 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %25, align 8
  %49 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %48, i64 1
  %50 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %49, align 8
  %51 = tail call i64 %50(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %52 = icmp slt i64 %51, %29
  %53 = sub nsw i64 %51, %29
  %54 = icmp eq i64 %53, %11
  %55 = or i1 %52, %54
  %56 = select i1 %55, i64 %11, i64 0
  br label %57

57:                                               ; preds = %40, %24, %47, %8
  %58 = phi i64 [ %11, %8 ], [ 0, %24 ], [ %56, %47 ], [ 0, %40 ]
  ret i64 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer3Tag14add_simple_tagEPKcS2_(%"class.mkvmuxer::Tag"* nocapture, i8*, i8*) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %5, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  %11 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %10, align 8
  br label %65

12:                                               ; preds = %3
  %13 = icmp eq i32 %5, 0
  %14 = shl nsw i32 %5, 1
  %15 = select i1 %13, i32 1, i32 %14
  %16 = sext i32 %15 to i64
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 16) #20
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %20, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %22 = bitcast i8* %21 to %"class.mkvmuxer::Tag::SimpleTag"*
  %23 = icmp eq i8* %21, null
  br i1 %23, label %99, label %24

24:                                               ; preds = %12
  %25 = icmp sgt i32 %7, 0
  %26 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  %27 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %26, align 8
  br i1 %25, label %28, label %42

28:                                               ; preds = %24
  %29 = zext i32 %7 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i32 %7, 1
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = sub nsw i64 %29, %30
  br label %44

34:                                               ; preds = %44, %28
  %35 = phi i64 [ 0, %28 ], [ %56, %44 ]
  %36 = icmp eq i64 %30, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %27, i64 %35
  %39 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %35
  %40 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %39 to i8*
  %41 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #20
  br label %42

42:                                               ; preds = %37, %34, %24
  %43 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %27, null
  br i1 %43, label %62, label %59

44:                                               ; preds = %44, %32
  %45 = phi i64 [ 0, %32 ], [ %56, %44 ]
  %46 = phi i64 [ %33, %32 ], [ %57, %44 ]
  %47 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %27, i64 %45
  %48 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %45
  %49 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %48 to i8*
  %50 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #20
  %51 = or i64 %45, 1
  %52 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %27, i64 %51
  %53 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %51
  %54 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %53 to i8*
  %55 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #20
  %56 = add nuw nsw i64 %45, 2
  %57 = add i64 %46, -2
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %34, label %44

59:                                               ; preds = %42
  %60 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %27 to i8*
  tail call void @_ZdaPv(i8* %60) #21
  %61 = load i32, i32* %6, align 4
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i32 [ %61, %59 ], [ %7, %42 ]
  %64 = bitcast %"class.mkvmuxer::Tag"* %0 to i8**
  store i8* %21, i8** %64, align 8
  store i32 %15, i32* %4, align 8
  br label %65

65:                                               ; preds = %9, %62
  %66 = phi i32 [ %7, %9 ], [ %63, %62 ]
  %67 = phi %"class.mkvmuxer::Tag::SimpleTag"* [ %11, %9 ], [ %22, %62 ]
  %68 = add nsw i32 %66, 1
  store i32 %68, i32* %6, align 4
  %69 = sext i32 %66 to i64
  %70 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %67, i64 %69
  %71 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #20
  %72 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %70, i64 0, i32 0
  %73 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %70, null
  br i1 %73, label %99, label %74

74:                                               ; preds = %65
  store i8* null, i8** %72, align 8
  %75 = icmp eq i8* %1, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %74
  %77 = tail call i64 @strlen(i8* nonnull %1) #22
  %78 = add i64 %77, 1
  %79 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %78, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %79, i8** %72, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %99, label %81

81:                                               ; preds = %76
  %82 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %79, i1 false, i1 true, i1 false) #20
  %83 = tail call i8* @__strcpy_chk(i8* nonnull %79, i8* nonnull %1, i64 %82) #20
  br label %84

84:                                               ; preds = %74, %81
  %85 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %67, i64 %69, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZdaPv(i8* nonnull %86) #21
  br label %89

89:                                               ; preds = %88, %84
  store i8* null, i8** %85, align 8
  %90 = icmp eq i8* %2, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %89
  %92 = tail call i64 @strlen(i8* nonnull %2) #22
  %93 = add i64 %92, 1
  %94 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %93, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %94, i8** %85, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  %97 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %94, i1 false, i1 true, i1 false) #20
  %98 = tail call i8* @__strcpy_chk(i8* nonnull %94, i8* nonnull %2, i64 %97) #20
  br label %99

99:                                               ; preds = %91, %89, %96, %76, %65, %12
  %100 = phi i1 [ false, %12 ], [ false, %65 ], [ false, %76 ], [ false, %91 ], [ true, %89 ], [ true, %96 ]
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer3Tag21ExpandSimpleTagsArrayEv(%"class.mkvmuxer::Tag"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %58, label %7

7:                                                ; preds = %1
  %8 = icmp eq i32 %3, 0
  %9 = shl nsw i32 %3, 1
  %10 = select i1 %8, i32 1, i32 %9
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 16)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %15, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %17 = bitcast i8* %16 to %"class.mkvmuxer::Tag::SimpleTag"*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %58, label %19

19:                                               ; preds = %7
  %20 = icmp sgt i32 %5, 0
  %21 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  %22 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %21, align 8
  br i1 %20, label %23, label %37

23:                                               ; preds = %19
  %24 = zext i32 %5 to i64
  %25 = and i64 %24, 1
  %26 = icmp eq i32 %5, 1
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = sub nsw i64 %24, %25
  br label %39

29:                                               ; preds = %39, %23
  %30 = phi i64 [ 0, %23 ], [ %51, %39 ]
  %31 = icmp eq i64 %25, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %30
  %34 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %17, i64 %30
  %35 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %34 to i8*
  %36 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  br label %37

37:                                               ; preds = %32, %29, %19
  %38 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %22, null
  br i1 %38, label %56, label %54

39:                                               ; preds = %39, %27
  %40 = phi i64 [ 0, %27 ], [ %51, %39 ]
  %41 = phi i64 [ %28, %27 ], [ %52, %39 ]
  %42 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %40
  %43 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %17, i64 %40
  %44 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %43 to i8*
  %45 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false)
  %46 = or i64 %40, 1
  %47 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 %46
  %48 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %17, i64 %46
  %49 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %48 to i8*
  %50 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false)
  %51 = add nuw nsw i64 %40, 2
  %52 = add i64 %41, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %29, label %39

54:                                               ; preds = %37
  %55 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %22 to i8*
  tail call void @_ZdaPv(i8* %55) #21
  br label %56

56:                                               ; preds = %54, %37
  %57 = bitcast %"class.mkvmuxer::Tag"* %0 to i8**
  store i8* %16, i8** %57, align 8
  store i32 %10, i32* %2, align 8
  br label %58

58:                                               ; preds = %56, %7, %1
  %59 = phi i1 [ true, %1 ], [ true, %56 ], [ false, %7 ]
  ret i1 %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer3Tag9SimpleTag4InitEv(%"class.mkvmuxer::Tag::SimpleTag"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer3Tag9SimpleTag12set_tag_nameEPKc(%"class.mkvmuxer::Tag::SimpleTag"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 0
  %4 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %0, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer3Tag9SimpleTag14set_tag_stringEPKc(%"class.mkvmuxer::Tag::SimpleTag"*, i8*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 1
  %4 = icmp eq i8** %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %6) #21
  br label %9

9:                                                ; preds = %8, %5
  store i8* null, i8** %3, align 8
  %10 = icmp eq i8* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = tail call i64 @strlen(i8* nonnull %1) #22
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %14, i8** %3, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %14, i1 false, i1 true, i1 false) #20
  %18 = tail call i8* @__strcpy_chk(i8* nonnull %14, i8* nonnull %1, i64 %17) #20
  br label %19

19:                                               ; preds = %2, %9, %11, %16
  %20 = phi i1 [ false, %2 ], [ true, %9 ], [ true, %16 ], [ false, %11 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer3TagC2Ev(%"class.mkvmuxer::Tag"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::Tag"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer3TagD2Ev(%"class.mkvmuxer::Tag"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8mkvmuxer3Tag11ShallowCopyEPS0_(%"class.mkvmuxer::Tag"* nocapture readonly, %"class.mkvmuxer::Tag"* nocapture) local_unnamed_addr #14 align 2 {
  %3 = bitcast %"class.mkvmuxer::Tag"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.mkvmuxer::Tag"* %1 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %1, i64 0, i32 1
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %1, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer3Tag5ClearEv(%"class.mkvmuxer::Tag"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  %6 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %5, align 8
  br i1 %4, label %7, label %29

7:                                                ; preds = %1, %25
  %8 = phi %"class.mkvmuxer::Tag::SimpleTag"* [ %28, %25 ], [ %6, %1 ]
  %9 = phi i32 [ %26, %25 ], [ %3, %1 ]
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %8, i64 %11
  %13 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %12, i64 0, i32 0
  %14 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %12, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %7
  %16 = load i8*, i8** %13, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %16) #21
  br label %19

19:                                               ; preds = %18, %15
  store i8* null, i8** %13, align 8
  br label %20

20:                                               ; preds = %19, %7
  %21 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %8, i64 %11, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZdaPv(i8* nonnull %22) #21
  br label %25

25:                                               ; preds = %20, %24
  store i8* null, i8** %21, align 8
  %26 = load i32, i32* %2, align 4
  %27 = icmp sgt i32 %26, 0
  %28 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %5, align 8
  br i1 %27, label %7, label %29

29:                                               ; preds = %25, %1
  %30 = phi %"class.mkvmuxer::Tag::SimpleTag"* [ %6, %1 ], [ %28, %25 ]
  %31 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %30 to i8*
  tail call void @_ZdaPv(i8* %33) #21
  br label %34

34:                                               ; preds = %32, %29
  store %"class.mkvmuxer::Tag::SimpleTag"* null, %"class.mkvmuxer::Tag::SimpleTag"** %5, align 8
  %35 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 1
  store i32 0, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer3Tag9SimpleTag5ClearEv(%"class.mkvmuxer::Tag::SimpleTag"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 0
  %3 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZdaPv(i8* nonnull %5) #21
  br label %8

8:                                                ; preds = %7, %4
  store i8* null, i8** %2, align 8
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 1
  %11 = icmp eq i8** %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = load i8*, i8** %10, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZdaPv(i8* nonnull %13) #21
  br label %16

16:                                               ; preds = %15, %12
  store i8* null, i8** %10, align 8
  br label %17

17:                                               ; preds = %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer3Tag5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tag"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  br label %13

8:                                                ; preds = %13, %2
  %9 = phi i64 [ 0, %2 ], [ %26, %13 ]
  %10 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 29555, i64 %9) #20
  %11 = add i64 %10, %9
  %12 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %12, label %64, label %31

13:                                               ; preds = %6, %13
  %14 = phi i64 [ 0, %6 ], [ %27, %13 ]
  %15 = phi i64 [ 0, %6 ], [ %26, %13 ]
  %16 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %7, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %16, i64 %14, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17827, i8* %18) #20
  %20 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %16, i64 %14, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17543, i8* %21) #20
  %23 = add i64 %22, %19
  %24 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 26568, i64 %23) #20
  %25 = add i64 %23, %15
  %26 = add i64 %25, %24
  %27 = add nuw nsw i64 %14, 1
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  br i1 %30, label %13, label %8

31:                                               ; preds = %8
  %32 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %33 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %33, i64 1
  %35 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %34, align 8
  %36 = tail call i64 %35(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %37 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 29555, i64 %9) #20
  br i1 %37, label %38, label %64

38:                                               ; preds = %31
  %39 = load i32, i32* %3, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %0, i64 0, i32 0
  br label %47

43:                                               ; preds = %47
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %53, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %41, %43
  %48 = phi i64 [ 0, %41 ], [ %53, %43 ]
  %49 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %42, align 8
  %50 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %49, i64 %48
  %51 = tail call i64 @_ZNK8mkvmuxer3Tag9SimpleTag5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tag::SimpleTag"* %50, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %52 = icmp eq i64 %51, 0
  %53 = add nuw nsw i64 %48, 1
  br i1 %52, label %64, label %43

54:                                               ; preds = %43, %38
  %55 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %56 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %55, i64 1
  %57 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %56, align 8
  %58 = tail call i64 %57(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %59 = icmp slt i64 %58, %36
  %60 = sub nsw i64 %58, %36
  %61 = icmp eq i64 %60, %11
  %62 = or i1 %59, %61
  %63 = select i1 %62, i64 %11, i64 0
  br label %64

64:                                               ; preds = %47, %31, %54, %8
  %65 = phi i64 [ %11, %8 ], [ 0, %31 ], [ %63, %54 ], [ 0, %47 ]
  ret i64 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer3Tag9SimpleTag5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tag::SimpleTag"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17827, i8* %4) #20
  %6 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17543, i8* %7) #20
  %9 = add i64 %8, %5
  %10 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 26568, i64 %9) #20
  %11 = add i64 %10, %9
  %12 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %12, label %36, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %15 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %15, i64 1
  %17 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %16, align 8
  %18 = tail call i64 %17(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %19 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 26568, i64 %9) #20
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = load i8*, i8** %3, align 8
  %22 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17827, i8* %21) #20
  br i1 %22, label %23, label %36

23:                                               ; preds = %20
  %24 = load i8*, i8** %6, align 8
  %25 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17543, i8* %24) #20
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %14, align 8
  %28 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %27, i64 1
  %29 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %28, align 8
  %30 = tail call i64 %29(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %31 = icmp slt i64 %30, %18
  %32 = sub nsw i64 %30, %18
  %33 = icmp eq i64 %32, %11
  %34 = or i1 %31, %33
  %35 = select i1 %34, i64 %11, i64 0
  br label %36

36:                                               ; preds = %13, %20, %23, %26, %2
  %37 = phi i64 [ %11, %2 ], [ 0, %13 ], [ 0, %20 ], [ 0, %23 ], [ %35, %26 ]
  ret i64 %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer4TagsC2Ev(%"class.mkvmuxer::Tags"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::Tags"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer4TagsD2Ev(%"class.mkvmuxer::Tags"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 2
  %6 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %5, align 8
  br i1 %4, label %7, label %49

7:                                                ; preds = %1, %44
  %8 = phi %"class.mkvmuxer::Tag"* [ %48, %44 ], [ %6, %1 ]
  %9 = phi i32 [ %46, %44 ], [ %3, %1 ]
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %8, i64 %11, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %8, i64 %11, i32 0
  %16 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %15, align 8
  br i1 %14, label %17, label %39

17:                                               ; preds = %7, %35
  %18 = phi %"class.mkvmuxer::Tag::SimpleTag"* [ %38, %35 ], [ %16, %7 ]
  %19 = phi i32 [ %36, %35 ], [ %13, %7 ]
  %20 = add nsw i32 %19, -1
  store i32 %20, i32* %12, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %18, i64 %21
  %23 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %22, i64 0, i32 0
  %24 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %22, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = load i8*, i8** %23, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %26) #21
  br label %29

29:                                               ; preds = %28, %25
  store i8* null, i8** %23, align 8
  br label %30

30:                                               ; preds = %29, %17
  %31 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %18, i64 %21, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_ZdaPv(i8* nonnull %32) #21
  br label %35

35:                                               ; preds = %34, %30
  store i8* null, i8** %31, align 8
  %36 = load i32, i32* %12, align 4
  %37 = icmp sgt i32 %36, 0
  %38 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %15, align 8
  br i1 %37, label %17, label %39

39:                                               ; preds = %35, %7
  %40 = phi %"class.mkvmuxer::Tag::SimpleTag"* [ %16, %7 ], [ %38, %35 ]
  %41 = icmp eq %"class.mkvmuxer::Tag::SimpleTag"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.mkvmuxer::Tag::SimpleTag"* %40 to i8*
  tail call void @_ZdaPv(i8* %43) #21
  br label %44

44:                                               ; preds = %39, %42
  store %"class.mkvmuxer::Tag::SimpleTag"* null, %"class.mkvmuxer::Tag::SimpleTag"** %15, align 8
  %45 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %8, i64 %11, i32 1
  store i32 0, i32* %45, align 8
  %46 = load i32, i32* %2, align 4
  %47 = icmp sgt i32 %46, 0
  %48 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %5, align 8
  br i1 %47, label %7, label %49

49:                                               ; preds = %44, %1
  %50 = phi %"class.mkvmuxer::Tag"* [ %6, %1 ], [ %48, %44 ]
  %51 = icmp eq %"class.mkvmuxer::Tag"* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %50, i64 -1, i32 1
  %54 = bitcast i32* %53 to i8*
  tail call void @_ZdaPv(i8* %54) #21
  br label %55

55:                                               ; preds = %52, %49
  store %"class.mkvmuxer::Tag"* null, %"class.mkvmuxer::Tag"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8mkvmuxer4Tags5CountEv(%"class.mkvmuxer::Tags"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.mkvmuxer::Tag"* @_ZN8mkvmuxer4Tags6AddTagEv(%"class.mkvmuxer::Tags"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = tail call zeroext i1 @_ZN8mkvmuxer4Tags15ExpandTagsArrayEv(%"class.mkvmuxer::Tags"* %0)
  br i1 %2, label %3, label %11

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 2
  %5 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %4, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %5, i64 %9
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi %"class.mkvmuxer::Tag"* [ %10, %3 ], [ null, %1 ]
  ret %"class.mkvmuxer::Tag"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer4Tags15ExpandTagsArrayEv(%"class.mkvmuxer::Tags"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %56, label %7

7:                                                ; preds = %1
  %8 = icmp eq i32 %3, 0
  %9 = shl nsw i32 %3, 1
  %10 = select i1 %8, i32 1, i32 %9
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 16)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = or i64 %14, 8
  %16 = select i1 %13, i64 -1, i64 %15
  %17 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %18 = icmp eq i8* %17, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %7
  %20 = bitcast i8* %17 to i64*
  store i64 %11, i64* %20, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to %"class.mkvmuxer::Tag"*
  %23 = icmp eq i32 %10, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = shl nsw i64 %11, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 %25, i1 false)
  br label %26

26:                                               ; preds = %24, %19
  %27 = icmp eq i8* %21, null
  br i1 %27, label %56, label %28

28:                                               ; preds = %26
  %29 = icmp sgt i32 %5, 0
  %30 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 2
  %31 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %30, align 8
  br i1 %29, label %32, label %34

32:                                               ; preds = %28
  %33 = sext i32 %5 to i64
  br label %36

34:                                               ; preds = %36, %28
  %35 = icmp eq %"class.mkvmuxer::Tag"* %31, null
  br i1 %35, label %54, label %51

36:                                               ; preds = %32, %36
  %37 = phi i64 [ 0, %32 ], [ %49, %36 ]
  %38 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %31, i64 %37
  %39 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %22, i64 %37
  %40 = bitcast %"class.mkvmuxer::Tag"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.mkvmuxer::Tag"* %39 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %31, i64 %37, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %22, i64 %37, i32 1
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %31, i64 %37, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %22, i64 %37, i32 2
  store i32 %47, i32* %48, align 4
  %49 = add nuw nsw i64 %37, 1
  %50 = icmp slt i64 %49, %33
  br i1 %50, label %36, label %34

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %31, i64 -1, i32 1
  %53 = bitcast i32* %52 to i8*
  tail call void @_ZdaPv(i8* %53) #21
  br label %54

54:                                               ; preds = %51, %34
  %55 = bitcast %"class.mkvmuxer::Tag"** %30 to i8**
  store i8* %21, i8** %55, align 8
  store i32 %10, i32* %2, align 8
  br label %56

56:                                               ; preds = %7, %54, %26, %1
  %57 = phi i1 [ true, %1 ], [ true, %54 ], [ false, %26 ], [ false, %7 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer4Tags5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tags"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %79, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 2
  br label %13

10:                                               ; preds = %40, %4
  %11 = phi i64 [ 0, %4 ], [ %44, %40 ]
  %12 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 307544935, i64 %11) #20
  br i1 %12, label %49, label %79

13:                                               ; preds = %8, %40
  %14 = phi i64 [ 0, %8 ], [ %45, %40 ]
  %15 = phi i64 [ 0, %8 ], [ %44, %40 ]
  %16 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %9, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %16, i64 %14, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %40

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %16, i64 %14, i32 0
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %36, %22 ]
  %24 = phi i64 [ 0, %20 ], [ %35, %22 ]
  %25 = load %"class.mkvmuxer::Tag::SimpleTag"*, %"class.mkvmuxer::Tag::SimpleTag"** %21, align 8
  %26 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %25, i64 %23, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17827, i8* %27) #20
  %29 = getelementptr inbounds %"class.mkvmuxer::Tag::SimpleTag", %"class.mkvmuxer::Tag::SimpleTag"* %25, i64 %23, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 17543, i8* %30) #20
  %32 = add i64 %31, %28
  %33 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 26568, i64 %32) #20
  %34 = add i64 %32, %24
  %35 = add i64 %34, %33
  %36 = add nuw nsw i64 %23, 1
  %37 = load i32, i32* %17, align 4
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %22, label %40

40:                                               ; preds = %22, %13
  %41 = phi i64 [ 0, %13 ], [ %35, %22 ]
  %42 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 29555, i64 %41) #20
  %43 = add i64 %41, %15
  %44 = add i64 %43, %42
  %45 = add nuw nsw i64 %14, 1
  %46 = load i32, i32* %5, align 4
  %47 = sext i32 %46 to i64
  %48 = icmp slt i64 %45, %47
  br i1 %48, label %13, label %10

49:                                               ; preds = %10
  %50 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %51 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %51, i64 1
  %53 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %52, align 8
  %54 = tail call i64 %53(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %55 = load i32, i32* %5, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %70

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.mkvmuxer::Tags", %"class.mkvmuxer::Tags"* %0, i64 0, i32 2
  br label %63

59:                                               ; preds = %63
  %60 = load i32, i32* %5, align 4
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %69, %61
  br i1 %62, label %63, label %70

63:                                               ; preds = %57, %59
  %64 = phi i64 [ 0, %57 ], [ %69, %59 ]
  %65 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %58, align 8
  %66 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %65, i64 %64
  %67 = tail call i64 @_ZNK8mkvmuxer3Tag5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tag"* %66, %"class.mkvmuxer::IMkvWriter"* nonnull %1)
  %68 = icmp eq i64 %67, 0
  %69 = add nuw nsw i64 %64, 1
  br i1 %68, label %79, label %59

70:                                               ; preds = %59, %49
  %71 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %50, align 8
  %72 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %71, i64 1
  %73 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %72, align 8
  %74 = tail call i64 %73(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %75 = icmp slt i64 %74, %54
  %76 = sub nsw i64 %74, %54
  %77 = icmp eq i64 %76, %11
  %78 = or i1 %75, %77
  ret i1 %78

79:                                               ; preds = %63, %10, %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7ClusterC2Emlmbb(%"class.mkvmuxer::Cluster"*, i64, i64, i64, i1 zeroext, i1 zeroext) unnamed_addr #4 align 2 {
  %7 = zext i1 %4 to i8
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 2
  store i8 %8, i8* %11, align 1
  %12 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 3
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 5
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 6
  store i64 -1, i64* %15, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 7
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 8
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 9
  store i8 %7, i8* %18, align 8
  %19 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node_base"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node_base"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 12
  store %"class.mkvmuxer::IMkvWriter"* null, %"class.mkvmuxer::IMkvWriter"** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7ClusterD2Ev(%"class.mkvmuxer::Cluster"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %95, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::map"* %2 to %"class.std::__1::__tree_node"**
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  br label %11

11:                                               ; preds = %6, %92
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %62, label %16

16:                                               ; preds = %11, %40
  %17 = phi %"class.std::__1::__tree_node"* [ %58, %40 ], [ %12, %11 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to %"struct.std::__1::__list_node"**
  %20 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1
  %22 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %21, align 8
  %23 = icmp eq %"class.mkvmuxer::Frame"* %22, null
  %24 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 0
  br i1 %23, label %40, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %22, i64 0, i32 6
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %27) #21
  br label %30

30:                                               ; preds = %29, %25
  %31 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %22, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_ZdaPv(i8* nonnull %32) #21
  br label %35

35:                                               ; preds = %30, %34
  %36 = bitcast %"class.mkvmuxer::Frame"* %22 to i8*
  tail call void @_ZdlPv(i8* %36) #21
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %38, align 8
  br label %40

40:                                               ; preds = %35, %16
  %41 = phi %"struct.std::__1::__list_node_base"* [ %39, %35 ], [ %24, %16 ]
  %42 = phi %"class.std::__1::__tree_node"* [ %37, %35 ], [ %17, %16 ]
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %41, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %41, i64 0, i32 0
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %47, i64 0, i32 1
  %49 = bitcast %"struct.std::__1::__list_node_base"** %48 to i64*
  store i64 %45, i64* %49, align 8
  %50 = bitcast %"struct.std::__1::__list_node_base"* %41 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64**
  %53 = load i64*, i64** %52, align 8
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = bitcast %"struct.std::__1::__list_node_base"* %41 to i8*
  tail call void @_ZdlPv(i8* %57) #21
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %16

62:                                               ; preds = %40, %11
  %63 = phi %"class.std::__1::__tree_node"* [ %12, %11 ], [ %58, %40 ]
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %65 = icmp eq %"class.std::__1::__tree_node"* %64, null
  br i1 %65, label %92, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %69, %66
  %70 = phi %"class.std::__1::__tree_end_node"* [ %9, %66 ], [ %80, %69 ]
  %71 = phi %"class.std::__1::__tree_node"* [ %64, %66 ], [ %81, %69 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %73, %68
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node"**
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_node"* %71 to %"class.std::__1::__tree_node"**
  %79 = select i1 %74, %"class.std::__1::__tree_node"** %76, %"class.std::__1::__tree_node"** %78
  %80 = select i1 %74, %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"* %77
  %81 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  %82 = icmp eq %"class.std::__1::__tree_node"* %81, null
  br i1 %82, label %83, label %69

83:                                               ; preds = %69
  %84 = icmp eq %"class.std::__1::__tree_end_node"* %80, %9
  br i1 %84, label %92, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 4
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %68, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %8, %"class.std::__1::__tree_end_node"* %80) #20
  br label %92

92:                                               ; preds = %62, %83, %85, %90
  %93 = load i64, i64* %3, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %11

95:                                               ; preds = %92, %1
  %96 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0
  %97 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_node.48"**
  %99 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %98, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.26"* %96, %"class.std::__1::__tree_node.48"* %99) #20
  %100 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %101 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %102 = bitcast %"class.std::__1::__tree_end_node"* %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %100, %"class.std::__1::__tree_node"* %103) #20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster4InitEPNS_10IMkvWriterE(%"class.mkvmuxer::Cluster"* nocapture, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 12
  store %"class.mkvmuxer::IMkvWriter"* %1, %"class.mkvmuxer::IMkvWriter"** %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster8AddFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Frame"*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Frame"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = icmp eq %"class.mkvmuxer::Frame"* %1, null
  br i1 %4, label %548, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %548, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %548, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %16, label %21, label %20

20:                                               ; preds = %13
  br i1 %19, label %548, label %22

21:                                               ; preds = %13
  br i1 %19, label %22, label %548

22:                                               ; preds = %21, %20
  %23 = phi i1 [ true, %21 ], [ false, %20 ]
  %24 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = icmp ugt i64 %26, 125
  br i1 %27, label %548, label %28

28:                                               ; preds = %22
  br i1 %23, label %29, label %37

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 12
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %33, %29, %28
  %38 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 14
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %548, label %45

45:                                               ; preds = %41, %37, %33
  %46 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 9
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster12DoWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* nonnull %1)
  br label %548

51:                                               ; preds = %45
  %52 = tail call i8* @_Znwm(i64 104) #21
  %53 = bitcast i8* %52 to %"class.mkvmuxer::Frame"*
  %54 = getelementptr inbounds i8, i8* %52, i64 40
  %55 = bitcast i8* %54 to i8**
  store i8* null, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %52, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 33, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 41, i1 false) #20
  %58 = ptrtoint i8* %52 to i64
  %59 = tail call zeroext i1 @_ZN8mkvmuxer5Frame8CopyFromERKS0_(%"class.mkvmuxer::Frame"* nonnull %53, %"class.mkvmuxer::Frame"* nonnull dereferenceable(104) %1)
  %60 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10
  %61 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %93, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %67

67:                                               ; preds = %89, %65
  %68 = phi %"class.std::__1::__tree_node"* [ %92, %89 ], [ %63, %65 ]
  %69 = phi %"class.std::__1::__tree_node_base"** [ %91, %89 ], [ %66, %65 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 1, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %25, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %89

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %95

79:                                               ; preds = %67
  %80 = icmp ult i64 %71, %25
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 1
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %95

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %95

89:                                               ; preds = %81, %73
  %90 = phi %"class.std::__1::__tree_node_base"* [ %75, %73 ], [ %83, %81 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %74, %73 ], [ %82, %81 ]
  %92 = bitcast %"class.std::__1::__tree_node_base"* %90 to %"class.std::__1::__tree_node"*
  br label %67

93:                                               ; preds = %51
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  br label %95

95:                                               ; preds = %93, %87, %85, %77
  %96 = phi %"class.std::__1::__tree_end_node"* [ %61, %93 ], [ %78, %77 ], [ %86, %85 ], [ %88, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %94, %93 ], [ %74, %77 ], [ %82, %85 ], [ %69, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"** %97 to %"class.std::__1::__tree_node"**
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node"* %99, null
  br i1 %100, label %101, label %132

101:                                              ; preds = %95
  %102 = tail call i8* @_Znwm(i64 64) #21, !noalias !32
  %103 = getelementptr inbounds i8, i8* %102, i64 32
  %104 = bitcast i8* %103 to i64*
  store i64 %25, i64* %104, align 8, !noalias !32
  %105 = getelementptr inbounds i8, i8* %102, i64 40
  %106 = bitcast i8* %105 to i8**
  store i8* %105, i8** %106, align 8, !noalias !32
  %107 = getelementptr inbounds i8, i8* %102, i64 48
  %108 = bitcast i8* %107 to i8**
  store i8* %105, i8** %108, align 8, !noalias !32
  %109 = getelementptr inbounds i8, i8* %102, i64 56
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 8, !noalias !32
  %111 = bitcast i8* %102 to %"class.std::__1::__tree_node"*
  %112 = bitcast i8* %102 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds i8, i8* %102, i64 16
  %114 = bitcast i8* %113 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %96, %"class.std::__1::__tree_end_node"** %114, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"** %97 to i8**
  store i8* %102, i8** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %60, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %101
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::map"* %60 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  br label %125

125:                                              ; preds = %121, %101
  %126 = phi %"class.std::__1::__tree_node_base"* [ %112, %101 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %126) #20
  %129 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  br label %132

132:                                              ; preds = %95, %125
  %133 = phi %"class.std::__1::__tree_node"* [ %111, %125 ], [ %99, %95 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1, i32 0, i32 1
  %135 = tail call i8* @_Znwm(i64 24) #21, !noalias !35
  %136 = bitcast i8* %135 to %"struct.std::__1::__list_node_base"**
  %137 = getelementptr inbounds i8, i8* %135, i64 16
  %138 = bitcast i8* %137 to i64*
  store i64 %58, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %134, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds i8, i8* %135, i64 8
  %141 = bitcast i8* %140 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %139, %"struct.std::__1::__list_node_base"** %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %134, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %142, align 8
  store %"struct.std::__1::__list_node_base"* %143, %"struct.std::__1::__list_node_base"** %136, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %143, i64 0, i32 1
  %145 = bitcast %"struct.std::__1::__list_node_base"** %144 to i8**
  store i8* %135, i8** %145, align 8
  %146 = bitcast %"class.std::__1::list"* %134 to i8**
  store i8* %135, i8** %146, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %147, align 8
  %150 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #20
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #20
  %154 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %155 = icmp eq %"class.std::__1::__tree_node"* %154, null
  br i1 %155, label %184, label %156

156:                                              ; preds = %132
  %157 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %158

158:                                              ; preds = %180, %156
  %159 = phi %"class.std::__1::__tree_node"* [ %183, %180 ], [ %154, %156 ]
  %160 = phi %"class.std::__1::__tree_node_base"** [ %182, %180 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 1, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp ult i64 %25, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %168, label %180

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 0
  br label %186

170:                                              ; preds = %158
  %171 = icmp ult i64 %162, %25
  br i1 %171, label %172, label %178

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 1
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, null
  br i1 %175, label %176, label %180

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 0
  br label %186

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 0, i32 0
  br label %186

180:                                              ; preds = %172, %164
  %181 = phi %"class.std::__1::__tree_node_base"* [ %166, %164 ], [ %174, %172 ]
  %182 = phi %"class.std::__1::__tree_node_base"** [ %165, %164 ], [ %173, %172 ]
  %183 = bitcast %"class.std::__1::__tree_node_base"* %181 to %"class.std::__1::__tree_node"*
  br label %158

184:                                              ; preds = %132
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  br label %186

186:                                              ; preds = %184, %178, %176, %168
  %187 = phi %"class.std::__1::__tree_end_node"* [ %61, %184 ], [ %169, %168 ], [ %177, %176 ], [ %179, %178 ]
  %188 = phi %"class.std::__1::__tree_node_base"** [ %185, %184 ], [ %165, %168 ], [ %173, %176 ], [ %160, %178 ]
  %189 = bitcast %"class.std::__1::__tree_node_base"** %188 to %"class.std::__1::__tree_node"**
  %190 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %189, align 8
  %191 = icmp eq %"class.std::__1::__tree_node"* %190, null
  br i1 %191, label %192, label %224

192:                                              ; preds = %186
  %193 = tail call i8* @_Znwm(i64 64) #21, !noalias !38
  %194 = getelementptr inbounds i8, i8* %193, i64 32
  %195 = bitcast i8* %194 to i64*
  store i64 %25, i64* %195, align 8, !noalias !38
  %196 = getelementptr inbounds i8, i8* %193, i64 40
  %197 = bitcast i8* %196 to i8**
  store i8* %196, i8** %197, align 8, !noalias !38
  %198 = getelementptr inbounds i8, i8* %193, i64 48
  %199 = bitcast i8* %198 to i8**
  store i8* %196, i8** %199, align 8, !noalias !38
  %200 = getelementptr inbounds i8, i8* %193, i64 56
  %201 = bitcast i8* %200 to i64*
  store i64 0, i64* %201, align 8, !noalias !38
  %202 = bitcast i8* %193 to %"class.std::__1::__tree_node"*
  %203 = bitcast i8* %193 to %"class.std::__1::__tree_node_base"*
  %204 = getelementptr inbounds i8, i8* %193, i64 16
  %205 = bitcast i8* %204 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %193, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %187, %"class.std::__1::__tree_end_node"** %205, align 8
  %206 = bitcast %"class.std::__1::__tree_node_base"** %188 to i8**
  store i8* %193, i8** %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %60, i64 0, i32 0, i32 0
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %192
  %213 = ptrtoint %"class.std::__1::__tree_node_base"* %210 to i64
  %214 = bitcast %"class.std::__1::map"* %60 to i64*
  store i64 %213, i64* %214, align 8
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  br label %216

216:                                              ; preds = %212, %192
  %217 = phi %"class.std::__1::__tree_node_base"* [ %203, %192 ], [ %215, %212 ]
  %218 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %218, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %219, %"class.std::__1::__tree_node_base"* %217) #20
  %220 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %221 = load i64, i64* %220, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %220, align 8
  %223 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  br label %224

224:                                              ; preds = %186, %216
  %225 = phi %"class.std::__1::__tree_node"* [ %223, %216 ], [ %154, %186 ]
  %226 = phi %"class.std::__1::__tree_node"* [ %202, %216 ], [ %190, %186 ]
  %227 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %226, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %228 = bitcast %"struct.std::__1::__list_node_base"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node"* %225, null
  br i1 %230, label %259, label %231

231:                                              ; preds = %224
  %232 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %233

233:                                              ; preds = %255, %231
  %234 = phi %"class.std::__1::__tree_node"* [ %258, %255 ], [ %225, %231 ]
  %235 = phi %"class.std::__1::__tree_node_base"** [ %257, %255 ], [ %232, %231 ]
  %236 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 1, i32 0, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = icmp ult i64 %25, %237
  br i1 %238, label %239, label %245

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  %242 = icmp eq %"class.std::__1::__tree_node_base"* %241, null
  br i1 %242, label %243, label %255

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 0
  br label %261

245:                                              ; preds = %233
  %246 = icmp ult i64 %237, %25
  br i1 %246, label %247, label %253

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 1
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = icmp eq %"class.std::__1::__tree_node_base"* %249, null
  br i1 %250, label %251, label %255

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 0
  br label %261

253:                                              ; preds = %245
  %254 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 0
  br label %261

255:                                              ; preds = %247, %239
  %256 = phi %"class.std::__1::__tree_node_base"* [ %241, %239 ], [ %249, %247 ]
  %257 = phi %"class.std::__1::__tree_node_base"** [ %240, %239 ], [ %248, %247 ]
  %258 = bitcast %"class.std::__1::__tree_node_base"* %256 to %"class.std::__1::__tree_node"*
  br label %233

259:                                              ; preds = %224
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  br label %261

261:                                              ; preds = %259, %253, %251, %243
  %262 = phi %"class.std::__1::__tree_end_node"* [ %61, %259 ], [ %244, %243 ], [ %252, %251 ], [ %254, %253 ]
  %263 = phi %"class.std::__1::__tree_node_base"** [ %260, %259 ], [ %240, %243 ], [ %248, %251 ], [ %235, %253 ]
  %264 = bitcast %"class.std::__1::__tree_node_base"** %263 to %"class.std::__1::__tree_node"**
  %265 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %264, align 8
  %266 = icmp eq %"class.std::__1::__tree_node"* %265, null
  br i1 %266, label %267, label %298

267:                                              ; preds = %261
  %268 = tail call i8* @_Znwm(i64 64) #21, !noalias !41
  %269 = getelementptr inbounds i8, i8* %268, i64 32
  %270 = bitcast i8* %269 to i64*
  store i64 %25, i64* %270, align 8, !noalias !41
  %271 = getelementptr inbounds i8, i8* %268, i64 40
  %272 = bitcast i8* %271 to i8**
  store i8* %271, i8** %272, align 8, !noalias !41
  %273 = getelementptr inbounds i8, i8* %268, i64 48
  %274 = bitcast i8* %273 to i8**
  store i8* %271, i8** %274, align 8, !noalias !41
  %275 = getelementptr inbounds i8, i8* %268, i64 56
  %276 = bitcast i8* %275 to i64*
  store i64 0, i64* %276, align 8, !noalias !41
  %277 = bitcast i8* %268 to %"class.std::__1::__tree_node"*
  %278 = bitcast i8* %268 to %"class.std::__1::__tree_node_base"*
  %279 = getelementptr inbounds i8, i8* %268, i64 16
  %280 = bitcast i8* %279 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %262, %"class.std::__1::__tree_end_node"** %280, align 8
  %281 = bitcast %"class.std::__1::__tree_node_base"** %263 to i8**
  store i8* %268, i8** %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %60, i64 0, i32 0, i32 0
  %283 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %282, align 8
  %284 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 0, i32 0
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, null
  br i1 %286, label %291, label %287

287:                                              ; preds = %267
  %288 = ptrtoint %"class.std::__1::__tree_node_base"* %285 to i64
  %289 = bitcast %"class.std::__1::map"* %60 to i64*
  store i64 %288, i64* %289, align 8
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  br label %291

291:                                              ; preds = %287, %267
  %292 = phi %"class.std::__1::__tree_node_base"* [ %278, %267 ], [ %290, %287 ]
  %293 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %294, %"class.std::__1::__tree_node_base"* %292) #20
  %295 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %296, 1
  store i64 %297, i64* %295, align 8
  br label %298

298:                                              ; preds = %261, %291
  %299 = phi %"class.std::__1::__tree_node"* [ %277, %291 ], [ %265, %261 ]
  %300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %299, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %301 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %300, align 8
  %302 = inttoptr i64 %229 to %"struct.std::__1::__list_node_base"*
  %303 = icmp eq %"struct.std::__1::__list_node_base"* %301, %302
  br i1 %303, label %441, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %60, i64 0, i32 0, i32 0
  %306 = bitcast %"class.std::__1::__list_iterator"** %152 to i64*
  %307 = bitcast %"class.std::__1::vector"* %3 to i64*
  %308 = bitcast %"class.std::__1::__list_iterator"** %153 to i64*
  br label %309

309:                                              ; preds = %304, %435
  %310 = phi %"struct.std::__1::__list_node_base"* [ %302, %304 ], [ %439, %435 ]
  %311 = phi i64 [ %229, %304 ], [ %438, %435 ]
  %312 = inttoptr i64 %311 to %"struct.std::__1::__list_node"*
  %313 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %312, i64 0, i32 1
  %314 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %313, align 8
  %315 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %305, align 8
  %316 = icmp eq %"class.std::__1::__tree_end_node"* %315, %61
  br i1 %316, label %366, label %317

317:                                              ; preds = %309
  %318 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %314, i64 0, i32 11
  br label %319

319:                                              ; preds = %317, %363
  %320 = phi %"class.std::__1::__tree_end_node"* [ %315, %317 ], [ %364, %363 ]
  %321 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %320, i64 4
  %322 = bitcast %"class.std::__1::__tree_end_node"* %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = icmp eq i64 %323, %25
  br i1 %324, label %335, label %325

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %320, i64 6
  %327 = bitcast %"class.std::__1::__tree_end_node"* %326 to %"struct.std::__1::__list_node"**
  %328 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %327, align 8
  %329 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %328, i64 0, i32 1
  %330 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %329, align 8
  %331 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %330, i64 0, i32 11
  %332 = load i64, i64* %331, align 8
  %333 = load i64, i64* %318, align 8
  %334 = icmp ult i64 %332, %333
  br i1 %334, label %441, label %335

335:                                              ; preds = %325, %319
  %336 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %320, i64 1, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %339, label %347

339:                                              ; preds = %335
  %340 = bitcast %"class.std::__1::__tree_end_node"* %320 to %"class.std::__1::__tree_node_base"*
  %341 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %320, i64 2
  %342 = bitcast %"class.std::__1::__tree_end_node"* %341 to %"class.std::__1::__tree_end_node"**
  %343 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %343, i64 0, i32 0
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %344, align 8
  %346 = icmp eq %"class.std::__1::__tree_node_base"* %345, %340
  br i1 %346, label %363, label %354

347:                                              ; preds = %335, %347
  %348 = phi %"class.std::__1::__tree_node_base"* [ %350, %347 ], [ %337, %335 ]
  %349 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %348, i64 0, i32 0, i32 0
  %350 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %349, align 8
  %351 = icmp eq %"class.std::__1::__tree_node_base"* %350, null
  br i1 %351, label %352, label %347

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %348, i64 0, i32 0
  br label %363

354:                                              ; preds = %339, %354
  %355 = phi %"class.std::__1::__tree_end_node"** [ %358, %354 ], [ %342, %339 ]
  %356 = bitcast %"class.std::__1::__tree_end_node"** %355 to %"class.std::__1::__tree_node_base"**
  %357 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %356, align 8
  %358 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %357, i64 0, i32 2
  %359 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %359, i64 0, i32 0
  %361 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %360, align 8
  %362 = icmp eq %"class.std::__1::__tree_node_base"* %361, %357
  br i1 %362, label %363, label %354

363:                                              ; preds = %354, %339, %352
  %364 = phi %"class.std::__1::__tree_end_node"* [ %353, %352 ], [ %343, %339 ], [ %359, %354 ]
  %365 = icmp eq %"class.std::__1::__tree_end_node"* %364, %61
  br i1 %365, label %366, label %319

366:                                              ; preds = %363, %309
  %367 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster12DoWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* %314)
  %368 = icmp eq %"class.mkvmuxer::Frame"* %314, null
  br i1 %368, label %381, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %314, i64 0, i32 6
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %374, label %373

373:                                              ; preds = %369
  tail call void @_ZdaPv(i8* nonnull %371) #21
  br label %374

374:                                              ; preds = %373, %369
  %375 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %314, i64 0, i32 1
  %376 = load i8*, i8** %375, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %379, label %378

378:                                              ; preds = %374
  tail call void @_ZdaPv(i8* nonnull %376) #21
  br label %379

379:                                              ; preds = %374, %378
  %380 = bitcast %"class.mkvmuxer::Frame"* %314 to i8*
  tail call void @_ZdlPv(i8* %380) #21
  br label %381

381:                                              ; preds = %379, %366
  br i1 %367, label %382, label %536

382:                                              ; preds = %381
  %383 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %152, align 8
  %384 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %153, align 8
  %385 = icmp eq %"class.std::__1::__list_iterator"* %383, %384
  %386 = ptrtoint %"class.std::__1::__list_iterator"* %384 to i64
  br i1 %385, label %391, label %387

387:                                              ; preds = %382
  %388 = bitcast %"class.std::__1::__list_iterator"* %383 to i64*
  store i64 %311, i64* %388, align 8
  %389 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %383, i64 1
  %390 = ptrtoint %"class.std::__1::__list_iterator"* %389 to i64
  store i64 %390, i64* %306, align 8
  br label %435

391:                                              ; preds = %382
  %392 = ptrtoint %"class.std::__1::__list_iterator"* %383 to i64
  %393 = load i64, i64* %307, align 8
  %394 = sub i64 %392, %393
  %395 = ashr exact i64 %394, 3
  %396 = add nsw i64 %395, 1
  %397 = icmp ugt i64 %396, 2305843009213693951
  br i1 %397, label %398, label %400

398:                                              ; preds = %391
  %399 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %399) #19
  unreachable

400:                                              ; preds = %391
  %401 = sub i64 %386, %393
  %402 = ashr exact i64 %401, 3
  %403 = icmp ult i64 %402, 1152921504606846975
  br i1 %403, label %404, label %412

404:                                              ; preds = %400
  %405 = ashr exact i64 %401, 2
  %406 = icmp ult i64 %405, %396
  %407 = select i1 %406, i64 %396, i64 %405
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %417, label %409

409:                                              ; preds = %404
  %410 = icmp ugt i64 %407, 2305843009213693951
  br i1 %410, label %411, label %412

411:                                              ; preds = %409
  tail call void @abort() #19
  unreachable

412:                                              ; preds = %409, %400
  %413 = phi i64 [ %407, %409 ], [ 2305843009213693951, %400 ]
  %414 = shl i64 %413, 3
  %415 = tail call i8* @_Znwm(i64 %414) #21
  %416 = bitcast i8* %415 to %"class.std::__1::__list_iterator"*
  br label %417

417:                                              ; preds = %412, %404
  %418 = phi i64 [ %413, %412 ], [ 0, %404 ]
  %419 = phi i8* [ %415, %412 ], [ null, %404 ]
  %420 = phi %"class.std::__1::__list_iterator"* [ %416, %412 ], [ null, %404 ]
  %421 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %420, i64 %395
  %422 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %420, i64 %418
  %423 = ptrtoint %"class.std::__1::__list_iterator"* %422 to i64
  %424 = bitcast %"class.std::__1::__list_iterator"* %421 to i64*
  store i64 %311, i64* %424, align 8
  %425 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %421, i64 1
  %426 = ptrtoint %"class.std::__1::__list_iterator"* %425 to i64
  %427 = ptrtoint %"class.std::__1::__list_iterator"* %420 to i64
  %428 = icmp sgt i64 %394, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %417
  %430 = inttoptr i64 %393 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %419, i8* align 8 %430, i64 %394, i1 false) #20
  br label %431

431:                                              ; preds = %429, %417
  store i64 %427, i64* %307, align 8
  store i64 %426, i64* %306, align 8
  store i64 %423, i64* %308, align 8
  %432 = icmp eq i64 %393, 0
  br i1 %432, label %435, label %433

433:                                              ; preds = %431
  %434 = inttoptr i64 %393 to i8*
  tail call void @_ZdlPv(i8* %434) #21
  br label %435

435:                                              ; preds = %387, %431, %433
  %436 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %310, i64 0, i32 1
  %437 = bitcast %"struct.std::__1::__list_node_base"** %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = inttoptr i64 %438 to %"struct.std::__1::__list_node_base"*
  %440 = icmp eq %"struct.std::__1::__list_node_base"* %301, %439
  br i1 %440, label %441, label %309

441:                                              ; preds = %435, %325, %298
  %442 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %151, align 8
  %443 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %152, align 8
  %444 = icmp eq %"class.std::__1::__list_iterator"* %442, %443
  br i1 %444, label %539, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %448 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %60, i64 0, i32 0, i32 0
  %449 = bitcast %"class.std::__1::map"* %60 to i64*
  %450 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  br label %451

451:                                              ; preds = %445, %514
  %452 = phi %"class.std::__1::__list_iterator"* [ %442, %445 ], [ %533, %514 ]
  %453 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %454 = icmp eq %"class.std::__1::__tree_node"* %453, null
  br i1 %454, label %481, label %455

455:                                              ; preds = %451, %477
  %456 = phi %"class.std::__1::__tree_node"* [ %480, %477 ], [ %453, %451 ]
  %457 = phi %"class.std::__1::__tree_node_base"** [ %479, %477 ], [ %446, %451 ]
  %458 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 1, i32 0, i32 0
  %459 = load i64, i64* %458, align 8
  %460 = icmp ult i64 %25, %459
  br i1 %460, label %461, label %467

461:                                              ; preds = %455
  %462 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 0, i32 0, i32 0
  %463 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %462, align 8
  %464 = icmp eq %"class.std::__1::__tree_node_base"* %463, null
  br i1 %464, label %465, label %477

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 0, i32 0
  br label %481

467:                                              ; preds = %455
  %468 = icmp ult i64 %459, %25
  br i1 %468, label %469, label %475

469:                                              ; preds = %467
  %470 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 0, i32 1
  %471 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %470, align 8
  %472 = icmp eq %"class.std::__1::__tree_node_base"* %471, null
  br i1 %472, label %473, label %477

473:                                              ; preds = %469
  %474 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 0, i32 0
  br label %481

475:                                              ; preds = %467
  %476 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 0, i32 0
  br label %481

477:                                              ; preds = %469, %461
  %478 = phi %"class.std::__1::__tree_node_base"* [ %463, %461 ], [ %471, %469 ]
  %479 = phi %"class.std::__1::__tree_node_base"** [ %462, %461 ], [ %470, %469 ]
  %480 = bitcast %"class.std::__1::__tree_node_base"* %478 to %"class.std::__1::__tree_node"*
  br label %455

481:                                              ; preds = %451, %475, %473, %465
  %482 = phi %"class.std::__1::__tree_end_node"* [ %466, %465 ], [ %474, %473 ], [ %476, %475 ], [ %61, %451 ]
  %483 = phi %"class.std::__1::__tree_node_base"** [ %462, %465 ], [ %470, %473 ], [ %457, %475 ], [ %447, %451 ]
  %484 = bitcast %"class.std::__1::__tree_node_base"** %483 to %"class.std::__1::__tree_node"**
  %485 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %484, align 8
  %486 = icmp eq %"class.std::__1::__tree_node"* %485, null
  br i1 %486, label %487, label %514

487:                                              ; preds = %481
  %488 = tail call i8* @_Znwm(i64 64) #21, !noalias !44
  %489 = getelementptr inbounds i8, i8* %488, i64 32
  %490 = bitcast i8* %489 to i64*
  store i64 %25, i64* %490, align 8, !noalias !44
  %491 = getelementptr inbounds i8, i8* %488, i64 40
  %492 = bitcast i8* %491 to i8**
  store i8* %491, i8** %492, align 8, !noalias !44
  %493 = getelementptr inbounds i8, i8* %488, i64 48
  %494 = bitcast i8* %493 to i8**
  store i8* %491, i8** %494, align 8, !noalias !44
  %495 = getelementptr inbounds i8, i8* %488, i64 56
  %496 = bitcast i8* %495 to i64*
  store i64 0, i64* %496, align 8, !noalias !44
  %497 = bitcast i8* %488 to %"class.std::__1::__tree_node"*
  %498 = bitcast i8* %488 to %"class.std::__1::__tree_node_base"*
  %499 = getelementptr inbounds i8, i8* %488, i64 16
  %500 = bitcast i8* %499 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %482, %"class.std::__1::__tree_end_node"** %500, align 8
  %501 = bitcast %"class.std::__1::__tree_node_base"** %483 to i8**
  store i8* %488, i8** %501, align 8
  %502 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %448, align 8
  %503 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %502, i64 0, i32 0
  %504 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %503, align 8
  %505 = icmp eq %"class.std::__1::__tree_node_base"* %504, null
  br i1 %505, label %509, label %506

506:                                              ; preds = %487
  %507 = ptrtoint %"class.std::__1::__tree_node_base"* %504 to i64
  store i64 %507, i64* %449, align 8
  %508 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %483, align 8
  br label %509

509:                                              ; preds = %506, %487
  %510 = phi %"class.std::__1::__tree_node_base"* [ %498, %487 ], [ %508, %506 ]
  %511 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %446, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %511, %"class.std::__1::__tree_node_base"* %510) #20
  %512 = load i64, i64* %450, align 8
  %513 = add i64 %512, 1
  store i64 %513, i64* %450, align 8
  br label %514

514:                                              ; preds = %481, %509
  %515 = phi %"class.std::__1::__tree_node"* [ %497, %509 ], [ %485, %481 ]
  %516 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %452, i64 0, i32 0
  %517 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %516, align 8
  %518 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %517, i64 0, i32 1
  %519 = bitcast %"struct.std::__1::__list_node_base"** %518 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %517, i64 0, i32 0
  %522 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %521, align 8
  %523 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %522, i64 0, i32 1
  %524 = bitcast %"struct.std::__1::__list_node_base"** %523 to i64*
  store i64 %520, i64* %524, align 8
  %525 = bitcast %"struct.std::__1::__list_node_base"* %517 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"struct.std::__1::__list_node_base"** %518 to i64**
  %528 = load i64*, i64** %527, align 8
  store i64 %526, i64* %528, align 8
  %529 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %515, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %530 = load i64, i64* %529, align 8
  %531 = add i64 %530, -1
  store i64 %531, i64* %529, align 8
  %532 = bitcast %"struct.std::__1::__list_node_base"* %517 to i8*
  tail call void @_ZdlPv(i8* %532) #21
  %533 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %452, i64 1
  %534 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %152, align 8
  %535 = icmp eq %"class.std::__1::__list_iterator"* %533, %534
  br i1 %535, label %536, label %451

536:                                              ; preds = %381, %514
  %537 = phi i1 [ true, %514 ], [ false, %381 ]
  %538 = load %"class.std::__1::__list_iterator"*, %"class.std::__1::__list_iterator"** %151, align 8
  br label %539

539:                                              ; preds = %536, %441
  %540 = phi %"class.std::__1::__list_iterator"* [ %538, %536 ], [ %442, %441 ]
  %541 = phi i1 [ %537, %536 ], [ true, %441 ]
  %542 = icmp eq %"class.std::__1::__list_iterator"* %540, null
  br i1 %542, label %547, label %543

543:                                              ; preds = %539
  %544 = ptrtoint %"class.std::__1::__list_iterator"* %540 to i64
  %545 = bitcast %"class.std::__1::__list_iterator"** %152 to i64*
  store i64 %544, i64* %545, align 8
  %546 = bitcast %"class.std::__1::__list_iterator"* %540 to i8*
  tail call void @_ZdlPv(i8* %546) #21
  br label %547

547:                                              ; preds = %539, %543
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #20
  br label %548

548:                                              ; preds = %21, %41, %22, %20, %5, %9, %2, %547, %49
  %549 = phi i1 [ %541, %547 ], [ %50, %49 ], [ false, %2 ], [ false, %9 ], [ false, %5 ], [ false, %20 ], [ false, %22 ], [ false, %41 ], [ false, %21 ]
  ret i1 %549
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster8AddFrameEPKhmmmb(%"class.mkvmuxer::Cluster"*, i8* nocapture readonly, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.mkvmuxer::Frame", align 8
  %8 = bitcast %"class.mkvmuxer::Frame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 104, i1 false)
  %9 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 6
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 33, i1 false) #20
  %12 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 41, i1 false) #20
  %13 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %14 = icmp eq i8* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %6
  store i8* %13, i8** %9, align 8
  store i64 %2, i64* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %1, i64 %2, i1 false) #20
  %16 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 10
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 11
  store i64 %4, i64* %17, align 8
  %18 = zext i1 %5 to i8
  store i8 %18, i8* %10, align 8
  %19 = call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* nonnull %7)
  %20 = load i8*, i8** %9, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %15
  call void @_ZdaPv(i8* nonnull %20) #21
  br label %23

23:                                               ; preds = %6, %22, %15
  %24 = phi i1 [ %19, %22 ], [ %19, %15 ], [ false, %6 ]
  %25 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @_ZdaPv(i8* nonnull %26) #21
  br label %29

29:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #20
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster22AddFrameWithAdditionalEPKhmS2_mmmmb(%"class.mkvmuxer::Cluster"*, i8* nocapture readonly, i64, i8* readonly, i64, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %10 = alloca %"class.mkvmuxer::Frame", align 8
  %11 = icmp eq i8* %3, null
  %12 = icmp eq i64 %4, 0
  %13 = or i1 %11, %12
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.mkvmuxer::Frame"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %15) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 104, i1 false)
  %16 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 6
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 7
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 33, i1 false) #20
  %19 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 41, i1 false) #20
  %20 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %21 = icmp eq i8* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %14
  store i8* %20, i8** %16, align 8
  store i64 %2, i64* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %1, i64 %2, i1 false) #20
  %23 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %4, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %24 = icmp eq i8* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 1
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 2
  store i64 %4, i64* %27, align 8
  %28 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 0
  store i64 %5, i64* %28, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* nonnull align 1 %3, i64 %4, i1 false) #20
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 10
  store i64 %6, i64* %29, align 8
  %30 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 11
  store i64 %7, i64* %30, align 8
  %31 = zext i1 %8 to i8
  store i8 %31, i8* %17, align 8
  %32 = call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* nonnull %10)
  %33 = load i8*, i8** %16, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %22, %25
  %36 = phi i1 [ %32, %25 ], [ false, %22 ]
  %37 = phi i8* [ %33, %25 ], [ %20, %22 ]
  call void @_ZdaPv(i8* nonnull %37) #21
  br label %38

38:                                               ; preds = %14, %35, %25
  %39 = phi i1 [ %36, %35 ], [ %32, %25 ], [ false, %14 ]
  %40 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @_ZdaPv(i8* nonnull %41) #21
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %15) #20
  br label %45

45:                                               ; preds = %9, %44
  %46 = phi i1 [ %39, %44 ], [ false, %9 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster26AddFrameWithDiscardPaddingEPKhmlmmb(%"class.mkvmuxer::Cluster"*, i8* nocapture readonly, i64, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %8 = alloca %"class.mkvmuxer::Frame", align 8
  %9 = bitcast %"class.mkvmuxer::Frame"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 104, i1 false)
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 6
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 7
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 33, i1 false) #20
  %13 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 41, i1 false) #20
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %15 = icmp eq i8* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %7
  store i8* %14, i8** %10, align 8
  store i64 %2, i64* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 %1, i64 %2, i1 false) #20
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 12
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 10
  store i64 %4, i64* %18, align 8
  %19 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 11
  store i64 %5, i64* %19, align 8
  %20 = zext i1 %6 to i8
  store i8 %20, i8* %11, align 8
  %21 = call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* nonnull %8)
  %22 = load i8*, i8** %10, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %16
  call void @_ZdaPv(i8* nonnull %22) #21
  br label %25

25:                                               ; preds = %7, %24, %16
  %26 = phi i1 [ %21, %24 ], [ %21, %16 ], [ false, %7 ]
  %27 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZdaPv(i8* nonnull %28) #21
  br label %31

31:                                               ; preds = %25, %30
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #20
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster11AddMetadataEPKhmmmm(%"class.mkvmuxer::Cluster"*, i8* nocapture readonly, i64, i64, i64, i64) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.mkvmuxer::Frame", align 8
  %8 = bitcast %"class.mkvmuxer::Frame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 104, i1 false)
  %9 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 6
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 33, i1 false) #20
  %12 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 41, i1 false) #20
  %13 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %14 = icmp eq i8* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %6
  store i8* %13, i8** %9, align 8
  store i64 %2, i64* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %1, i64 %2, i1 false) #20
  %16 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 10
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 11
  store i64 %4, i64* %17, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 3
  store i64 %5, i64* %18, align 8
  %19 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 4
  store i8 1, i8* %19, align 8
  store i8 1, i8* %10, align 8
  %20 = call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* nonnull %7)
  %21 = load i8*, i8** %9, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %15
  call void @_ZdaPv(i8* nonnull %21) #21
  br label %24

24:                                               ; preds = %6, %23, %15
  %25 = phi i1 [ %20, %23 ], [ %20, %15 ], [ false, %6 ]
  %26 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  call void @_ZdaPv(i8* nonnull %27) #21
  br label %30

30:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #20
  ret i1 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Cluster14AddPayloadSizeEm(%"class.mkvmuxer::Cluster"* nocapture, i64) local_unnamed_addr #14 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster8FinalizeEv(%"class.mkvmuxer::Cluster"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster8FinalizeEbm(%"class.mkvmuxer::Cluster"* %0, i1 zeroext false, i64 0)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster8FinalizeEbm(%"class.mkvmuxer::Cluster"*, i1 zeroext, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 12
  %5 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %6 = icmp eq %"class.mkvmuxer::IMkvWriter"* %5, null
  br i1 %6, label %510, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %510

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %469, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10
  %17 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::map"* %16 to i64*
  %22 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11
  %23 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node.48"**
  %25 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::map.25", %"class.std::__1::map.25"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::map.25"* %22 to i64*
  %29 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %32 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  br label %36

36:                                               ; preds = %15, %468
  %37 = load i64, i64* %17, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %469, label %39

39:                                               ; preds = %36
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 6
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"struct.std::__1::__list_node"**
  %43 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %43, i64 0, i32 1
  %45 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %44, align 8
  %46 = bitcast %"class.mkvmuxer::Frame"* %45 to i8*
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 1, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %58

50:                                               ; preds = %39
  %51 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_end_node"**
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %51
  br i1 %57, label %74, label %65

58:                                               ; preds = %39, %58
  %59 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %48, %39 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %58

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0
  br label %74

65:                                               ; preds = %50, %65
  %66 = phi %"class.std::__1::__tree_end_node"** [ %69, %65 ], [ %53, %50 ]
  %67 = bitcast %"class.std::__1::__tree_end_node"** %66 to %"class.std::__1::__tree_node_base"**
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 2
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %68
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %50, %63
  %75 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %54, %50 ], [ %70, %65 ]
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %75, %19
  br i1 %76, label %77, label %80

77:                                               ; preds = %124, %74
  %78 = phi i8* [ %46, %74 ], [ %95, %124 ]
  %79 = phi %"class.mkvmuxer::Frame"* [ %45, %74 ], [ %96, %124 ]
  br i1 %1, label %127, label %276

80:                                               ; preds = %74, %124
  %81 = phi %"class.mkvmuxer::Frame"* [ %96, %124 ], [ %45, %74 ]
  %82 = phi i8* [ %95, %124 ], [ %46, %74 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %125, %124 ], [ %75, %74 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 6
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"struct.std::__1::__list_node"**
  %86 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %86, i64 0, i32 1
  %88 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %87, align 8
  %89 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %88, i64 0, i32 11
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %81, i64 0, i32 11
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %90, %92
  %94 = bitcast %"class.mkvmuxer::Frame"* %88 to i8*
  %95 = select i1 %93, i8* %94, i8* %82
  %96 = select i1 %93, %"class.mkvmuxer::Frame"* %88, %"class.mkvmuxer::Frame"* %81
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 1, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %108

100:                                              ; preds = %80
  %101 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node_base"*
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 2
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_end_node"**
  %104 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, %101
  br i1 %107, label %124, label %115

108:                                              ; preds = %80, %108
  %109 = phi %"class.std::__1::__tree_node_base"* [ %111, %108 ], [ %98, %80 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %108

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 0
  br label %124

115:                                              ; preds = %100, %115
  %116 = phi %"class.std::__1::__tree_end_node"** [ %119, %115 ], [ %103, %100 ]
  %117 = bitcast %"class.std::__1::__tree_end_node"** %116 to %"class.std::__1::__tree_node_base"**
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 0, i32 2
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, %118
  br i1 %123, label %124, label %115

124:                                              ; preds = %115, %100, %113
  %125 = phi %"class.std::__1::__tree_end_node"* [ %114, %113 ], [ %104, %100 ], [ %120, %115 ]
  %126 = icmp eq %"class.std::__1::__tree_end_node"* %125, %19
  br i1 %126, label %77, label %80

127:                                              ; preds = %77
  %128 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 10
  %129 = load i64, i64* %128, align 8
  %130 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %131 = icmp eq %"class.std::__1::__tree_node"* %130, null
  br i1 %131, label %158, label %132

132:                                              ; preds = %127, %154
  %133 = phi %"class.std::__1::__tree_node"* [ %157, %154 ], [ %130, %127 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %156, %154 ], [ %20, %127 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = icmp ult i64 %129, %136
  br i1 %137, label %138, label %144

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

144:                                              ; preds = %132
  %145 = icmp ult i64 %136, %129
  br i1 %145, label %146, label %152

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 1
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  br label %158

154:                                              ; preds = %146, %138
  %155 = phi %"class.std::__1::__tree_node_base"* [ %140, %138 ], [ %148, %146 ]
  %156 = phi %"class.std::__1::__tree_node_base"** [ %139, %138 ], [ %147, %146 ]
  %157 = bitcast %"class.std::__1::__tree_node_base"* %155 to %"class.std::__1::__tree_node"*
  br label %132

158:                                              ; preds = %127, %152, %150, %142
  %159 = phi %"class.std::__1::__tree_end_node"* [ %143, %142 ], [ %151, %150 ], [ %153, %152 ], [ %19, %127 ]
  %160 = phi %"class.std::__1::__tree_node_base"** [ %139, %142 ], [ %147, %150 ], [ %134, %152 ], [ %33, %127 ]
  %161 = bitcast %"class.std::__1::__tree_node_base"** %160 to %"class.std::__1::__tree_node"**
  %162 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node"* %162, null
  br i1 %163, label %164, label %191

164:                                              ; preds = %158
  %165 = tail call i8* @_Znwm(i64 64) #21, !noalias !47
  %166 = getelementptr inbounds i8, i8* %165, i64 32
  %167 = bitcast i8* %166 to i64*
  store i64 %129, i64* %167, align 8, !noalias !47
  %168 = getelementptr inbounds i8, i8* %165, i64 40
  %169 = bitcast i8* %168 to i8**
  store i8* %168, i8** %169, align 8, !noalias !47
  %170 = getelementptr inbounds i8, i8* %165, i64 48
  %171 = bitcast i8* %170 to i8**
  store i8* %168, i8** %171, align 8, !noalias !47
  %172 = getelementptr inbounds i8, i8* %165, i64 56
  %173 = bitcast i8* %172 to i64*
  store i64 0, i64* %173, align 8, !noalias !47
  %174 = bitcast i8* %165 to %"class.std::__1::__tree_node"*
  %175 = bitcast i8* %165 to %"class.std::__1::__tree_node_base"*
  %176 = getelementptr inbounds i8, i8* %165, i64 16
  %177 = bitcast i8* %176 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %159, %"class.std::__1::__tree_end_node"** %177, align 8
  %178 = bitcast %"class.std::__1::__tree_node_base"** %160 to i8**
  store i8* %165, i8** %178, align 8
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %164
  %184 = ptrtoint %"class.std::__1::__tree_node_base"* %181 to i64
  store i64 %184, i64* %21, align 8
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  br label %186

186:                                              ; preds = %183, %164
  %187 = phi %"class.std::__1::__tree_node_base"* [ %175, %164 ], [ %185, %183 ]
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %188, %"class.std::__1::__tree_node_base"* %187) #20
  %189 = load i64, i64* %17, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %17, align 8
  br label %191

191:                                              ; preds = %158, %186
  %192 = phi %"class.std::__1::__tree_node"* [ %174, %186 ], [ %162, %158 ]
  %193 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %192, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %194, 1
  br i1 %195, label %196, label %276

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 4
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %276

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 11
  %202 = load i64, i64* %201, align 8
  %203 = sub i64 %2, %202
  %204 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 3
  store i64 %203, i64* %204, align 8
  store i8 1, i8* %197, align 8
  %205 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 7
  %206 = load i8, i8* %205, align 8, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %276

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 14
  %210 = load i8, i8* %209, align 8, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %276

212:                                              ; preds = %208
  %213 = load i64, i64* %128, align 8
  %214 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %24, align 8
  %215 = icmp eq %"class.std::__1::__tree_node.48"* %214, null
  br i1 %215, label %242, label %216

216:                                              ; preds = %212, %238
  %217 = phi %"class.std::__1::__tree_node.48"* [ %241, %238 ], [ %214, %212 ]
  %218 = phi %"class.std::__1::__tree_node_base"** [ %240, %238 ], [ %25, %212 ]
  %219 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 1, i32 0, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = icmp ult i64 %213, %220
  br i1 %221, label %222, label %228

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %226, label %238

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 0, i32 0
  br label %242

228:                                              ; preds = %216
  %229 = icmp ult i64 %220, %213
  br i1 %229, label %230, label %236

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 0, i32 1
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %231, align 8
  %233 = icmp eq %"class.std::__1::__tree_node_base"* %232, null
  br i1 %233, label %234, label %238

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 0, i32 0
  br label %242

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %217, i64 0, i32 0, i32 0
  br label %242

238:                                              ; preds = %230, %222
  %239 = phi %"class.std::__1::__tree_node_base"* [ %224, %222 ], [ %232, %230 ]
  %240 = phi %"class.std::__1::__tree_node_base"** [ %223, %222 ], [ %231, %230 ]
  %241 = bitcast %"class.std::__1::__tree_node_base"* %239 to %"class.std::__1::__tree_node.48"*
  br label %216

242:                                              ; preds = %212, %236, %234, %226
  %243 = phi %"class.std::__1::__tree_end_node"* [ %227, %226 ], [ %235, %234 ], [ %237, %236 ], [ %23, %212 ]
  %244 = phi %"class.std::__1::__tree_node_base"** [ %223, %226 ], [ %231, %234 ], [ %218, %236 ], [ %26, %212 ]
  %245 = bitcast %"class.std::__1::__tree_node_base"** %244 to %"class.std::__1::__tree_node.48"**
  %246 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_node.48"* %246, null
  br i1 %247, label %248, label %271

248:                                              ; preds = %242
  %249 = tail call i8* @_Znwm(i64 48) #21, !noalias !50
  %250 = getelementptr inbounds i8, i8* %249, i64 32
  %251 = bitcast i8* %250 to i64*
  store i64 %213, i64* %251, align 8, !noalias !50
  %252 = getelementptr inbounds i8, i8* %249, i64 40
  %253 = bitcast i8* %252 to i64*
  store i64 0, i64* %253, align 8, !noalias !50
  %254 = bitcast i8* %249 to %"class.std::__1::__tree_node.48"*
  %255 = bitcast i8* %249 to %"class.std::__1::__tree_node_base"*
  %256 = getelementptr inbounds i8, i8* %249, i64 16
  %257 = bitcast i8* %256 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %243, %"class.std::__1::__tree_end_node"** %257, align 8
  %258 = bitcast %"class.std::__1::__tree_node_base"** %244 to i8**
  store i8* %249, i8** %258, align 8
  %259 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 0, i32 0
  %261 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %260, align 8
  %262 = icmp eq %"class.std::__1::__tree_node_base"* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %248
  %264 = ptrtoint %"class.std::__1::__tree_node_base"* %261 to i64
  store i64 %264, i64* %28, align 8
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  br label %266

266:                                              ; preds = %263, %248
  %267 = phi %"class.std::__1::__tree_node_base"* [ %255, %248 ], [ %265, %263 ]
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %268, %"class.std::__1::__tree_node_base"* %267) #20
  %269 = load i64, i64* %29, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %29, align 8
  br label %271

271:                                              ; preds = %242, %266
  %272 = phi %"class.std::__1::__tree_node.48"* [ %254, %266 ], [ %246, %242 ]
  %273 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %272, i64 0, i32 1, i32 0, i32 1
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 13
  store i64 %274, i64* %275, align 8
  store i8 1, i8* %209, align 8
  br label %276

276:                                              ; preds = %77, %208, %200, %196, %191, %271
  %277 = phi %"class.std::__1::__tree_node"** [ %32, %208 ], [ %32, %200 ], [ %32, %196 ], [ %32, %191 ], [ %32, %271 ], [ %31, %77 ]
  %278 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster12DoWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* %0, %"class.mkvmuxer::Frame"* %79)
  %279 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 10
  %280 = load i64, i64* %279, align 8
  %281 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %277, align 8
  %282 = icmp eq %"class.std::__1::__tree_node"* %281, null
  br i1 %282, label %309, label %283

283:                                              ; preds = %276, %305
  %284 = phi %"class.std::__1::__tree_node"* [ %308, %305 ], [ %281, %276 ]
  %285 = phi %"class.std::__1::__tree_node_base"** [ %307, %305 ], [ %20, %276 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 1, i32 0, i32 0
  %287 = load i64, i64* %286, align 8
  %288 = icmp ult i64 %280, %287
  br i1 %288, label %289, label %295

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %293, label %305

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0
  br label %309

295:                                              ; preds = %283
  %296 = icmp ult i64 %287, %280
  br i1 %296, label %297, label %303

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 1
  %299 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %298, align 8
  %300 = icmp eq %"class.std::__1::__tree_node_base"* %299, null
  br i1 %300, label %301, label %305

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0
  br label %309

303:                                              ; preds = %295
  %304 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %284, i64 0, i32 0, i32 0
  br label %309

305:                                              ; preds = %297, %289
  %306 = phi %"class.std::__1::__tree_node_base"* [ %291, %289 ], [ %299, %297 ]
  %307 = phi %"class.std::__1::__tree_node_base"** [ %290, %289 ], [ %298, %297 ]
  %308 = bitcast %"class.std::__1::__tree_node_base"* %306 to %"class.std::__1::__tree_node"*
  br label %283

309:                                              ; preds = %276, %303, %301, %293
  %310 = phi %"class.std::__1::__tree_end_node"* [ %294, %293 ], [ %302, %301 ], [ %304, %303 ], [ %19, %276 ]
  %311 = phi %"class.std::__1::__tree_node_base"** [ %290, %293 ], [ %298, %301 ], [ %285, %303 ], [ %34, %276 ]
  %312 = bitcast %"class.std::__1::__tree_node_base"** %311 to %"class.std::__1::__tree_node"**
  %313 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node"* %313, null
  br i1 %314, label %315, label %342

315:                                              ; preds = %309
  %316 = tail call i8* @_Znwm(i64 64) #21, !noalias !53
  %317 = getelementptr inbounds i8, i8* %316, i64 32
  %318 = bitcast i8* %317 to i64*
  store i64 %280, i64* %318, align 8, !noalias !53
  %319 = getelementptr inbounds i8, i8* %316, i64 40
  %320 = bitcast i8* %319 to i8**
  store i8* %319, i8** %320, align 8, !noalias !53
  %321 = getelementptr inbounds i8, i8* %316, i64 48
  %322 = bitcast i8* %321 to i8**
  store i8* %319, i8** %322, align 8, !noalias !53
  %323 = getelementptr inbounds i8, i8* %316, i64 56
  %324 = bitcast i8* %323 to i64*
  store i64 0, i64* %324, align 8, !noalias !53
  %325 = bitcast i8* %316 to %"class.std::__1::__tree_node"*
  %326 = bitcast i8* %316 to %"class.std::__1::__tree_node_base"*
  %327 = getelementptr inbounds i8, i8* %316, i64 16
  %328 = bitcast i8* %327 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %310, %"class.std::__1::__tree_end_node"** %328, align 8
  %329 = bitcast %"class.std::__1::__tree_node_base"** %311 to i8**
  store i8* %316, i8** %329, align 8
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, null
  br i1 %333, label %337, label %334

334:                                              ; preds = %315
  %335 = ptrtoint %"class.std::__1::__tree_node_base"* %332 to i64
  store i64 %335, i64* %21, align 8
  %336 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %337

337:                                              ; preds = %334, %315
  %338 = phi %"class.std::__1::__tree_node_base"* [ %326, %315 ], [ %336, %334 ]
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %339, %"class.std::__1::__tree_node_base"* %338) #20
  %340 = load i64, i64* %17, align 8
  %341 = add i64 %340, 1
  store i64 %341, i64* %17, align 8
  br label %342

342:                                              ; preds = %309, %337
  %343 = phi %"class.std::__1::__tree_node"* [ %325, %337 ], [ %313, %309 ]
  %344 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %343, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %345 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %345, i64 0, i32 1
  %347 = bitcast %"struct.std::__1::__list_node_base"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %345, i64 0, i32 0
  %350 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %349, align 8
  %351 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %350, i64 0, i32 1
  %352 = bitcast %"struct.std::__1::__list_node_base"** %351 to i64*
  store i64 %348, i64* %352, align 8
  %353 = bitcast %"struct.std::__1::__list_node_base"* %345 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"struct.std::__1::__list_node_base"** %346 to i64**
  %356 = load i64*, i64** %355, align 8
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %343, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %358 = load i64, i64* %357, align 8
  %359 = add i64 %358, -1
  store i64 %359, i64* %357, align 8
  %360 = bitcast %"struct.std::__1::__list_node_base"* %345 to i8*
  tail call void @_ZdlPv(i8* %360) #21
  %361 = load i64, i64* %279, align 8
  %362 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %277, align 8
  %363 = icmp eq %"class.std::__1::__tree_node"* %362, null
  br i1 %363, label %390, label %364

364:                                              ; preds = %342, %386
  %365 = phi %"class.std::__1::__tree_node"* [ %389, %386 ], [ %362, %342 ]
  %366 = phi %"class.std::__1::__tree_node_base"** [ %388, %386 ], [ %20, %342 ]
  %367 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 1, i32 0, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = icmp ult i64 %361, %368
  br i1 %369, label %370, label %376

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0, i32 0
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node_base"* %372, null
  br i1 %373, label %374, label %386

374:                                              ; preds = %370
  %375 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

376:                                              ; preds = %364
  %377 = icmp ult i64 %368, %361
  br i1 %377, label %378, label %384

378:                                              ; preds = %376
  %379 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 1
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

384:                                              ; preds = %376
  %385 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

386:                                              ; preds = %378, %370
  %387 = phi %"class.std::__1::__tree_node_base"* [ %372, %370 ], [ %380, %378 ]
  %388 = phi %"class.std::__1::__tree_node_base"** [ %371, %370 ], [ %379, %378 ]
  %389 = bitcast %"class.std::__1::__tree_node_base"* %387 to %"class.std::__1::__tree_node"*
  br label %364

390:                                              ; preds = %342, %384, %382, %374
  %391 = phi %"class.std::__1::__tree_end_node"* [ %375, %374 ], [ %383, %382 ], [ %385, %384 ], [ %19, %342 ]
  %392 = phi %"class.std::__1::__tree_node_base"** [ %371, %374 ], [ %379, %382 ], [ %366, %384 ], [ %35, %342 ]
  %393 = bitcast %"class.std::__1::__tree_node_base"** %392 to %"class.std::__1::__tree_node"**
  %394 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %393, align 8
  %395 = icmp eq %"class.std::__1::__tree_node"* %394, null
  br i1 %395, label %396, label %423

396:                                              ; preds = %390
  %397 = tail call i8* @_Znwm(i64 64) #21, !noalias !56
  %398 = getelementptr inbounds i8, i8* %397, i64 32
  %399 = bitcast i8* %398 to i64*
  store i64 %361, i64* %399, align 8, !noalias !56
  %400 = getelementptr inbounds i8, i8* %397, i64 40
  %401 = bitcast i8* %400 to i8**
  store i8* %400, i8** %401, align 8, !noalias !56
  %402 = getelementptr inbounds i8, i8* %397, i64 48
  %403 = bitcast i8* %402 to i8**
  store i8* %400, i8** %403, align 8, !noalias !56
  %404 = getelementptr inbounds i8, i8* %397, i64 56
  %405 = bitcast i8* %404 to i64*
  store i64 0, i64* %405, align 8, !noalias !56
  %406 = bitcast i8* %397 to %"class.std::__1::__tree_node"*
  %407 = bitcast i8* %397 to %"class.std::__1::__tree_node_base"*
  %408 = getelementptr inbounds i8, i8* %397, i64 16
  %409 = bitcast i8* %408 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %397, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %391, %"class.std::__1::__tree_end_node"** %409, align 8
  %410 = bitcast %"class.std::__1::__tree_node_base"** %392 to i8**
  store i8* %397, i8** %410, align 8
  %411 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %412 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %411, i64 0, i32 0
  %413 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %412, align 8
  %414 = icmp eq %"class.std::__1::__tree_node_base"* %413, null
  br i1 %414, label %418, label %415

415:                                              ; preds = %396
  %416 = ptrtoint %"class.std::__1::__tree_node_base"* %413 to i64
  store i64 %416, i64* %21, align 8
  %417 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  br label %418

418:                                              ; preds = %415, %396
  %419 = phi %"class.std::__1::__tree_node_base"* [ %407, %396 ], [ %417, %415 ]
  %420 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %420, %"class.std::__1::__tree_node_base"* %419) #20
  %421 = load i64, i64* %17, align 8
  %422 = add i64 %421, 1
  store i64 %422, i64* %17, align 8
  br label %423

423:                                              ; preds = %390, %418
  %424 = phi %"class.std::__1::__tree_node"* [ %406, %418 ], [ %394, %390 ]
  %425 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %424, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %426 = load i64, i64* %425, align 8
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %455

428:                                              ; preds = %423
  %429 = load i64, i64* %279, align 8
  %430 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %277, align 8
  %431 = icmp eq %"class.std::__1::__tree_node"* %430, null
  br i1 %431, label %455, label %432

432:                                              ; preds = %428, %432
  %433 = phi %"class.std::__1::__tree_end_node"* [ %443, %432 ], [ %19, %428 ]
  %434 = phi %"class.std::__1::__tree_node"* [ %444, %432 ], [ %430, %428 ]
  %435 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %434, i64 0, i32 1, i32 0, i32 0
  %436 = load i64, i64* %435, align 8
  %437 = icmp ult i64 %436, %429
  %438 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %434, i64 0, i32 0, i32 1
  %439 = bitcast %"class.std::__1::__tree_node_base"** %438 to %"class.std::__1::__tree_node"**
  %440 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %434, i64 0, i32 0, i32 0
  %441 = bitcast %"class.std::__1::__tree_node"* %434 to %"class.std::__1::__tree_node"**
  %442 = select i1 %437, %"class.std::__1::__tree_node"** %439, %"class.std::__1::__tree_node"** %441
  %443 = select i1 %437, %"class.std::__1::__tree_end_node"* %433, %"class.std::__1::__tree_end_node"* %440
  %444 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %442, align 8
  %445 = icmp eq %"class.std::__1::__tree_node"* %444, null
  br i1 %445, label %446, label %432

446:                                              ; preds = %432
  %447 = icmp eq %"class.std::__1::__tree_end_node"* %443, %19
  br i1 %447, label %455, label %448

448:                                              ; preds = %446
  %449 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %443, i64 4
  %450 = bitcast %"class.std::__1::__tree_end_node"* %449 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = icmp ult i64 %429, %451
  br i1 %452, label %455, label %453

453:                                              ; preds = %448
  %454 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %30, %"class.std::__1::__tree_end_node"* %443) #20
  br label %455

455:                                              ; preds = %453, %448, %446, %428, %423
  %456 = icmp eq %"class.mkvmuxer::Frame"* %79, null
  br i1 %456, label %468, label %457

457:                                              ; preds = %455
  %458 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 6
  %459 = load i8*, i8** %458, align 8
  %460 = icmp eq i8* %459, null
  br i1 %460, label %462, label %461

461:                                              ; preds = %457
  tail call void @_ZdaPv(i8* nonnull %459) #21
  br label %462

462:                                              ; preds = %461, %457
  %463 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %79, i64 0, i32 1
  %464 = load i8*, i8** %463, align 8
  %465 = icmp eq i8* %464, null
  br i1 %465, label %467, label %466

466:                                              ; preds = %462
  tail call void @_ZdaPv(i8* nonnull %464) #21
  br label %467

467:                                              ; preds = %462, %466
  tail call void @_ZdlPv(i8* %78) #21
  br label %468

468:                                              ; preds = %467, %455
  br i1 %278, label %36, label %510

469:                                              ; preds = %36, %11
  %470 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 6
  %471 = load i64, i64* %470, align 8
  %472 = icmp eq i64 %471, -1
  br i1 %472, label %510, label %473

473:                                              ; preds = %469
  %474 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %475 = bitcast %"class.mkvmuxer::IMkvWriter"* %474 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %476 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %475, align 8
  %477 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %476, i64 3
  %478 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %477, align 8
  %479 = tail call zeroext i1 %478(%"class.mkvmuxer::IMkvWriter"* %474) #20
  br i1 %479, label %480, label %509

480:                                              ; preds = %473
  %481 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %482 = bitcast %"class.mkvmuxer::IMkvWriter"* %481 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %483 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %482, align 8
  %484 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %483, i64 1
  %485 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %484, align 8
  %486 = tail call i64 %485(%"class.mkvmuxer::IMkvWriter"* %481) #20
  %487 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %488 = load i64, i64* %470, align 8
  %489 = bitcast %"class.mkvmuxer::IMkvWriter"* %487 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %490 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %489, align 8
  %491 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %490, i64 2
  %492 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %491, align 8
  %493 = tail call i32 %492(%"class.mkvmuxer::IMkvWriter"* %487, i64 %488) #20
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %510

495:                                              ; preds = %480
  %496 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %497 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %498 = load i64, i64* %497, align 8
  %499 = tail call i32 @_ZN8mkvmuxer13WriteUIntSizeEPNS_10IMkvWriterEyi(%"class.mkvmuxer::IMkvWriter"* %496, i64 %498, i32 8) #20
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %510

501:                                              ; preds = %495
  %502 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %4, align 8
  %503 = bitcast %"class.mkvmuxer::IMkvWriter"* %502 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %504 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %503, align 8
  %505 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %504, i64 2
  %506 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %505, align 8
  %507 = tail call i32 %506(%"class.mkvmuxer::IMkvWriter"* %502, i64 %486) #20
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %510

509:                                              ; preds = %501, %473
  store i8 1, i8* %8, align 4
  br label %510

510:                                              ; preds = %468, %495, %480, %469, %3, %7, %501, %509
  %511 = phi i1 [ true, %509 ], [ false, %501 ], [ false, %7 ], [ false, %3 ], [ false, %469 ], [ false, %480 ], [ false, %495 ], [ false, %468 ]
  ret i1 %511
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster12DoWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Frame"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::Frame"* %1, null
  br i1 %3, label %140, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 9
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %140, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %140, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %15, label %20, label %19

19:                                               ; preds = %12
  br i1 %18, label %140, label %21

20:                                               ; preds = %12
  br i1 %18, label %21, label %140

21:                                               ; preds = %20, %19
  %22 = phi i1 [ true, %20 ], [ false, %19 ]
  %23 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, -1
  %26 = icmp ugt i64 %25, 125
  br i1 %26, label %140, label %27

27:                                               ; preds = %21
  br i1 %22, label %28, label %36

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 12
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %32, %28, %27
  %37 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 14
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %140, label %44

44:                                               ; preds = %40, %36, %32
  %45 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 1
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %140

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 3
  %50 = load i8, i8* %49, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster18WriteClusterHeaderEv(%"class.mkvmuxer::Cluster"* %0) #20
  br i1 %53, label %54, label %140

54:                                               ; preds = %52, %48
  %55 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 12
  %56 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %55, align 8
  %57 = tail call i64 @_ZN8mkvmuxer10WriteFrameEPNS_10IMkvWriterEPKNS_5FrameEPNS_7ClusterE(%"class.mkvmuxer::IMkvWriter"* %56, %"class.mkvmuxer::Frame"* nonnull %1, %"class.mkvmuxer::Cluster"* %0) #20
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %140, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %57
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 11
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11
  %69 = load i64, i64* %23, align 8
  %70 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node.48"**
  %72 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node.48"* %72, null
  br i1 %73, label %102, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %98, %74
  %77 = phi %"class.std::__1::__tree_node.48"* [ %101, %98 ], [ %72, %74 ]
  %78 = phi %"class.std::__1::__tree_node_base"** [ %100, %98 ], [ %75, %74 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 1, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %69, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %98

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 0, i32 0
  br label %104

88:                                               ; preds = %76
  %89 = icmp ult i64 %80, %69
  br i1 %89, label %90, label %96

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 0, i32 1
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 0, i32 0
  br label %104

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %77, i64 0, i32 0, i32 0
  br label %104

98:                                               ; preds = %90, %82
  %99 = phi %"class.std::__1::__tree_node_base"* [ %84, %82 ], [ %92, %90 ]
  %100 = phi %"class.std::__1::__tree_node_base"** [ %83, %82 ], [ %91, %90 ]
  %101 = bitcast %"class.std::__1::__tree_node_base"* %99 to %"class.std::__1::__tree_node.48"*
  br label %76

102:                                              ; preds = %59
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  br label %104

104:                                              ; preds = %102, %96, %94, %86
  %105 = phi %"class.std::__1::__tree_end_node"* [ %70, %102 ], [ %87, %86 ], [ %95, %94 ], [ %97, %96 ]
  %106 = phi %"class.std::__1::__tree_node_base"** [ %103, %102 ], [ %83, %86 ], [ %91, %94 ], [ %78, %96 ]
  %107 = bitcast %"class.std::__1::__tree_node_base"** %106 to %"class.std::__1::__tree_node.48"**
  %108 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node.48"* %108, null
  br i1 %109, label %110, label %137

110:                                              ; preds = %104
  %111 = tail call i8* @_Znwm(i64 48) #21, !noalias !59
  %112 = getelementptr inbounds i8, i8* %111, i64 32
  %113 = bitcast i8* %112 to i64*
  store i64 %69, i64* %113, align 8, !noalias !59
  %114 = getelementptr inbounds i8, i8* %111, i64 40
  %115 = bitcast i8* %114 to i64*
  store i64 0, i64* %115, align 8, !noalias !59
  %116 = bitcast i8* %111 to %"class.std::__1::__tree_node.48"*
  %117 = bitcast i8* %111 to %"class.std::__1::__tree_node_base"*
  %118 = getelementptr inbounds i8, i8* %111, i64 16
  %119 = bitcast i8* %118 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %105, %"class.std::__1::__tree_end_node"** %119, align 8
  %120 = bitcast %"class.std::__1::__tree_node_base"** %106 to i8**
  store i8* %111, i8** %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::map.25", %"class.std::__1::map.25"* %68, i64 0, i32 0, i32 0
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %110
  %127 = ptrtoint %"class.std::__1::__tree_node_base"* %124 to i64
  %128 = bitcast %"class.std::__1::map.25"* %68 to i64*
  store i64 %127, i64* %128, align 8
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  br label %130

130:                                              ; preds = %126, %110
  %131 = phi %"class.std::__1::__tree_node_base"* [ %117, %110 ], [ %129, %126 ]
  %132 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %133, %"class.std::__1::__tree_node_base"* %131) #20
  %134 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %134, align 8
  br label %137

137:                                              ; preds = %104, %130
  %138 = phi %"class.std::__1::__tree_node.48"* [ %116, %130 ], [ %108, %104 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %138, i64 0, i32 1, i32 0, i32 1
  store i64 %67, i64* %139, align 8
  br label %140

140:                                              ; preds = %52, %44, %20, %40, %21, %19, %4, %8, %137, %54, %2
  %141 = phi i1 [ false, %2 ], [ true, %137 ], [ false, %54 ], [ false, %8 ], [ false, %4 ], [ false, %19 ], [ false, %21 ], [ false, %40 ], [ false, %20 ], [ false, %44 ], [ false, %52 ]
  ret i1 %141
}

declare i32 @_ZN8mkvmuxer13WriteUIntSizeEPNS_10IMkvWriterEyi(%"class.mkvmuxer::IMkvWriter"*, i64, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer7Cluster4SizeEv(%"class.mkvmuxer::Cluster"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %3 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %2
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster13PreWriteBlockEv(%"class.mkvmuxer::Cluster"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster18WriteClusterHeaderEv(%"class.mkvmuxer::Cluster"* %0)
  br i1 %10, label %11, label %12

11:                                               ; preds = %5, %9
  br label %12

12:                                               ; preds = %9, %1, %11
  %13 = phi i1 [ true, %11 ], [ false, %1 ], [ false, %9 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Cluster18WriteClusterHeaderEv(%"class.mkvmuxer::Cluster"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 12
  %7 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %6, align 8
  %8 = tail call i32 @_ZN8mkvmuxer7WriteIDEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"* %7, i64 524531317) #20
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %6, align 8
  %12 = bitcast %"class.mkvmuxer::IMkvWriter"* %11 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %13 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %13, i64 1
  %15 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %14, align 8
  %16 = tail call i64 %15(%"class.mkvmuxer::IMkvWriter"* %11) #20
  %17 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 6
  store i64 %16, i64* %17, align 8
  %18 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %6, align 8
  %19 = tail call i32 @_ZN8mkvmuxer12SerializeIntEPNS_10IMkvWriterExi(%"class.mkvmuxer::IMkvWriter"* %18, i64 144115188075855871, i32 8) #20
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %40

21:                                               ; preds = %10
  %22 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %6, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 7
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 2
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i64 0, i64 8
  %29 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"* %22, i64 231, i64 %24, i64 %28) #20
  br i1 %29, label %30, label %40

30:                                               ; preds = %21
  %31 = load i64, i64* %23, align 8
  %32 = load i8, i8* %25, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i64 0, i64 8
  %35 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyyy(i64 231, i64 %31, i64 %34) #20
  %36 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 3
  store i8 1, i8* %39, align 2
  br label %40

40:                                               ; preds = %21, %10, %5, %1, %30
  %41 = phi i1 [ true, %30 ], [ false, %1 ], [ false, %5 ], [ false, %10 ], [ false, %21 ]
  ret i1 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Cluster14PostWriteBlockEm(%"class.mkvmuxer::Cluster"* nocapture, i64) local_unnamed_addr #14 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8mkvmuxer7Cluster19GetRelativeTimecodeEl(%"class.mkvmuxer::Cluster"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = sub nsw i64 %1, %4
  %6 = icmp ugt i64 %5, 32767
  %7 = select i1 %6, i64 -1, i64 %5
  ret i64 %7
}

declare i64 @_ZN8mkvmuxer10WriteFrameEPNS_10IMkvWriterEPKNS_5FrameEPNS_7ClusterE(%"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Cluster"*) local_unnamed_addr #6

declare i32 @_ZN8mkvmuxer7WriteIDEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #6

declare i32 @_ZN8mkvmuxer12SerializeIntEPNS_10IMkvWriterExi(%"class.mkvmuxer::IMkvWriter"*, i64, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyyy(%"class.mkvmuxer::IMkvWriter"*, i64, i64, i64) local_unnamed_addr #6

declare i64 @_ZN8mkvmuxer15EbmlElementSizeEyyy(i64, i64, i64) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer8SeekHeadC2Ev(%"class.mkvmuxer::SeekHead"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.mkvmuxer::SeekHead"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 20, i1 false)
  %3 = getelementptr %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer8SeekHeadD2Ev(%"class.mkvmuxer::SeekHead"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer8SeekHead8FinalizeEPNS_10IMkvWriterE(%"class.mkvmuxer::SeekHead"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %4 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %4, i64 3
  %6 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.mkvmuxer::IMkvWriter"* %1) #20
  br i1 %7, label %8, label %68

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %68, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = zext i32 %14 to i64
  %18 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 %17) #20
  %19 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 %20) #20
  %22 = add i64 %21, %18
  %23 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %22) #20
  %24 = add i64 %22, %23
  br label %25

25:                                               ; preds = %12, %16
  %26 = phi i64 [ %22, %16 ], [ -6148914691236517206, %12 ]
  %27 = phi i64 [ %24, %16 ], [ 0, %12 ]
  %28 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %147, label %137

31:                                               ; preds = %195
  %32 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %33 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %33, i64 1
  %35 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %34, align 8
  %36 = tail call i64 %35(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %37 = load i64, i64* %9, align 8
  %38 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %39 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %39, i64 2
  %41 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %40, align 8
  %42 = tail call i32 %41(%"class.mkvmuxer::IMkvWriter"* %1, i64 %37) #20
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %68

44:                                               ; preds = %31
  %45 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 290298740, i64 %197) #20
  br i1 %45, label %46, label %68

46:                                               ; preds = %44
  %47 = load i32, i32* %13, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %46
  %50 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 19899, i64 %26) #20
  br i1 %50, label %51, label %68

51:                                               ; preds = %49
  %52 = load i32, i32* %13, align 4
  %53 = zext i32 %52 to i64
  %54 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21419, i64 %53) #20
  br i1 %54, label %55, label %68

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 0
  %57 = load i64, i64* %56, align 8
  %58 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21420, i64 %57) #20
  br i1 %58, label %59, label %68

59:                                               ; preds = %46, %55
  %60 = load i32, i32* %28, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %80, label %70

62:                                               ; preds = %119
  %63 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %38, align 8
  %64 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %63, i64 2
  %65 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %64, align 8
  %66 = tail call i32 %65(%"class.mkvmuxer::IMkvWriter"* %1, i64 %36) #20
  %67 = icmp eq i32 %66, 0
  ret i1 %67

68:                                               ; preds = %119, %44, %31, %195, %115, %111, %109, %102, %98, %96, %89, %85, %83, %76, %72, %70, %55, %51, %49, %2, %8
  %69 = phi i1 [ false, %8 ], [ true, %2 ], [ false, %31 ], [ false, %44 ], [ false, %119 ], [ true, %195 ], [ false, %115 ], [ false, %111 ], [ false, %109 ], [ false, %102 ], [ false, %98 ], [ false, %96 ], [ false, %89 ], [ false, %85 ], [ false, %83 ], [ false, %76 ], [ false, %72 ], [ false, %70 ], [ false, %55 ], [ false, %51 ], [ false, %49 ]
  ret i1 %69

70:                                               ; preds = %59
  %71 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 19899, i64 %148) #20
  br i1 %71, label %72, label %68

72:                                               ; preds = %70
  %73 = load i32, i32* %28, align 4
  %74 = zext i32 %73 to i64
  %75 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21419, i64 %74) #20
  br i1 %75, label %76, label %68

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 1
  %78 = load i64, i64* %77, align 8
  %79 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21420, i64 %78) #20
  br i1 %79, label %80, label %68

80:                                               ; preds = %76, %59
  %81 = load i32, i32* %150, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80
  %84 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 19899, i64 %164) #20
  br i1 %84, label %85, label %68

85:                                               ; preds = %83
  %86 = load i32, i32* %150, align 4
  %87 = zext i32 %86 to i64
  %88 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21419, i64 %87) #20
  br i1 %88, label %89, label %68

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 2
  %91 = load i64, i64* %90, align 8
  %92 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21420, i64 %91) #20
  br i1 %92, label %93, label %68

93:                                               ; preds = %89, %80
  %94 = load i32, i32* %166, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 19899, i64 %180) #20
  br i1 %97, label %98, label %68

98:                                               ; preds = %96
  %99 = load i32, i32* %166, align 4
  %100 = zext i32 %99 to i64
  %101 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21419, i64 %100) #20
  br i1 %101, label %102, label %68

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 3
  %104 = load i64, i64* %103, align 8
  %105 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21420, i64 %104) #20
  br i1 %105, label %106, label %68

106:                                              ; preds = %102, %93
  %107 = load i32, i32* %182, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %119, label %109

109:                                              ; preds = %106
  %110 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 19899, i64 %196) #20
  br i1 %110, label %111, label %68

111:                                              ; preds = %109
  %112 = load i32, i32* %182, align 4
  %113 = zext i32 %112 to i64
  %114 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21419, i64 %113) #20
  br i1 %114, label %115, label %68

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 4
  %117 = load i64, i64* %116, align 8
  %118 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* %1, i64 21420, i64 %117) #20
  br i1 %118, label %119, label %68

119:                                              ; preds = %115, %106
  %120 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 4294967295) #20
  %121 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 -1) #20
  %122 = add i64 %121, %120
  %123 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %122) #20
  %124 = add i64 %123, %122
  %125 = mul i64 %124, 5
  %126 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 290298740, i64 %125) #20
  %127 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %32, align 8
  %128 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %127, i64 1
  %129 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %128, align 8
  %130 = tail call i64 %129(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %131 = load i64, i64* %9, align 8
  %132 = add i64 %125, %126
  %133 = sub i64 %132, %130
  %134 = add i64 %133, %131
  %135 = tail call i64 @_ZN8mkvmuxer16WriteVoidElementEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"* %1, i64 %134) #20
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %68, label %62

137:                                              ; preds = %25
  %138 = zext i32 %29 to i64
  %139 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 %138) #20
  %140 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 %141) #20
  %143 = add i64 %142, %139
  %144 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %143) #20
  %145 = add i64 %143, %27
  %146 = add i64 %145, %144
  br label %147

147:                                              ; preds = %137, %25
  %148 = phi i64 [ %143, %137 ], [ -6148914691236517206, %25 ]
  %149 = phi i64 [ %146, %137 ], [ %27, %25 ]
  %150 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %163, label %153

153:                                              ; preds = %147
  %154 = zext i32 %151 to i64
  %155 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 %154) #20
  %156 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 2
  %157 = load i64, i64* %156, align 8
  %158 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 %157) #20
  %159 = add i64 %158, %155
  %160 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %159) #20
  %161 = add i64 %159, %149
  %162 = add i64 %161, %160
  br label %163

163:                                              ; preds = %153, %147
  %164 = phi i64 [ %159, %153 ], [ -6148914691236517206, %147 ]
  %165 = phi i64 [ %162, %153 ], [ %149, %147 ]
  %166 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 3
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %179, label %169

169:                                              ; preds = %163
  %170 = zext i32 %167 to i64
  %171 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 %170) #20
  %172 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 3
  %173 = load i64, i64* %172, align 8
  %174 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 %173) #20
  %175 = add i64 %174, %171
  %176 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %175) #20
  %177 = add i64 %175, %165
  %178 = add i64 %177, %176
  br label %179

179:                                              ; preds = %169, %163
  %180 = phi i64 [ %175, %169 ], [ -6148914691236517206, %163 ]
  %181 = phi i64 [ %178, %169 ], [ %165, %163 ]
  %182 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 4
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %179
  %186 = zext i32 %183 to i64
  %187 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 %186) #20
  %188 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 4
  %189 = load i64, i64* %188, align 8
  %190 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 %189) #20
  %191 = add i64 %190, %187
  %192 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %191) #20
  %193 = add i64 %191, %181
  %194 = add i64 %193, %192
  br label %195

195:                                              ; preds = %185, %179
  %196 = phi i64 [ %191, %185 ], [ -6148914691236517206, %179 ]
  %197 = phi i64 [ %194, %185 ], [ %181, %179 ]
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %68, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer8SeekHead12MaxEntrySizeEv(%"class.mkvmuxer::SeekHead"* nocapture readnone) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 4294967295) #20
  %3 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 -1) #20
  %4 = add i64 %3, %2
  %5 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %4) #20
  %6 = add i64 %5, %4
  ret i64 %6
}

declare i64 @_ZN8mkvmuxer16WriteVoidElementEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer8SeekHead5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::SeekHead"* nocapture, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 4294967295) #20
  %4 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 -1) #20
  %5 = add i64 %4, %3
  %6 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %5) #20
  %7 = add i64 %6, %5
  %8 = mul i64 %7, 5
  %9 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 290298740, i64 %8) #20
  %10 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %11 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %11, i64 1
  %13 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.mkvmuxer::IMkvWriter"* %1) #20
  %15 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = add i64 %8, %9
  %17 = tail call i64 @_ZN8mkvmuxer16WriteVoidElementEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"* %1, i64 %16) #20
  %18 = icmp ne i64 %17, 0
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer8SeekHead12AddSeekEntryEjm(%"class.mkvmuxer::SeekHead"* nocapture, i32, i64) local_unnamed_addr #14 align 2 {
  %4 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %25, %21, %17, %7, %3
  %12 = phi i64 [ 0, %3 ], [ 1, %7 ], [ 2, %17 ], [ 3, %21 ], [ 4, %25 ]
  %13 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 %12
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 %12
  store i64 %2, i64* %14, align 8
  br label %15

15:                                               ; preds = %25, %11
  %16 = phi i1 [ true, %11 ], [ false, %25 ]
  ret i1 %16

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %11, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %11, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 4
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %11, label %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8mkvmuxer8SeekHead5GetIdEi(%"class.mkvmuxer::SeekHead"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = icmp ugt i32 %1, 4
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 %5
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %2 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8mkvmuxer8SeekHead11GetPositionEi(%"class.mkvmuxer::SeekHead"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = icmp ugt i32 %1, 4
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 %5
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i64 [ %7, %4 ], [ -1, %2 ]
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN8mkvmuxer8SeekHead12SetSeekEntryEijm(%"class.mkvmuxer::SeekHead"* nocapture, i32, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp ugt i32 %1, 4
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 0, i64 %7
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SeekHead"* %0, i64 0, i32 1, i64 %7
  store i64 %3, i64* %9, align 8
  br label %10

10:                                               ; preds = %4, %6
  %11 = phi i1 [ true, %6 ], [ false, %4 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer11SegmentInfoC2Ev(%"class.mkvmuxer::SegmentInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 0
  store double -1.000000e+00, double* %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 1
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 2
  store i64 1000000, i64* %4, align 8
  %5 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 4
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -1>, <2 x i64>* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer11SegmentInfoD2Ev(%"class.mkvmuxer::SegmentInfo"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #21
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer11SegmentInfo4InitEv(%"class.mkvmuxer::SegmentInfo"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [256 x i8], align 16
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20
  store i32 -1431655766, i32* %2, align 4
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #20
  store i32 -1431655766, i32* %3, align 4
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #20
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #20
  store i32 -1431655766, i32* %5, align 4
  call void @_ZN8mkvmuxer10GetVersionEPiS0_S0_S0_(i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5) #20
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 256, i1 false)
  %12 = load i32, i32* %2, align 4
  %13 = load i32, i32* %3, align 4
  %14 = load i32, i32* %4, align 4
  %15 = load i32, i32* %5, align 4
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %11, i64 256, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 %12, i32 %13, i32 %14, i32 %15) #20
  %17 = call i64 @strlen(i8* nonnull %11) #22
  %18 = add i64 %17, 1
  %19 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %1
  call void @_ZdaPv(i8* nonnull %20) #21
  br label %23

23:                                               ; preds = %22, %1
  %24 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %18, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %24, i8** %19, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %23
  %27 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %24, i1 false, i1 true, i1 false) #20
  %28 = call i8* @__strcpy_chk(i8* nonnull %24, i8* nonnull %11, i64 %27) #20
  %29 = call i64 @strlen(i8* nonnull %11) #22
  %30 = add i64 %29, 1
  %31 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %30, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  %35 = load i8*, i8** %34, align 8
  br label %44

36:                                               ; preds = %26
  %37 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %31, i1 false, i1 true, i1 false) #20
  %38 = call i8* @__strcpy_chk(i8* nonnull %31, i8* nonnull %11, i64 %37) #20
  %39 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %36
  call void @_ZdaPv(i8* nonnull %40) #21
  br label %43

43:                                               ; preds = %42, %36
  store i8* %31, i8** %39, align 8
  br label %44

44:                                               ; preds = %33, %43
  %45 = phi i8* [ %35, %33 ], [ %31, %43 ]
  %46 = icmp ne i8* %45, null
  br label %47

47:                                               ; preds = %44, %23
  %48 = phi i1 [ false, %23 ], [ %46, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20
  ret i1 %48
}

declare void @_ZN8mkvmuxer10GetVersionEPiS0_S0_S0_(i32*, i32*, i32*, i32*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer11SegmentInfo15set_writing_appEPKc(%"class.mkvmuxer::SegmentInfo"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #22
  %6 = add i64 %5, 1
  %7 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %8 = icmp eq i8* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %7, i1 false, i1 true, i1 false) #20
  %11 = tail call i8* @__strcpy_chk(i8* nonnull %7, i8* nonnull %1, i64 %10) #20
  %12 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @_ZdaPv(i8* nonnull %13) #21
  br label %16

16:                                               ; preds = %15, %9
  store i8* %7, i8** %12, align 8
  br label %17

17:                                               ; preds = %4, %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer11SegmentInfo8FinalizeEPNS_10IMkvWriterE(%"class.mkvmuxer::SegmentInfo"* nocapture readonly, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp ogt double %6, 0.000000e+00
  br i1 %7, label %8, label %41

8:                                                ; preds = %4
  %9 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %10 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %10, i64 3
  %12 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  br i1 %13, label %14, label %41

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, -1
  br i1 %17, label %42, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %20 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %20, i64 1
  %22 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %21, align 8
  %23 = tail call i64 %22(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %24 = load i64, i64* %15, align 8
  %25 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %26 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %26, i64 2
  %28 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %27, align 8
  %29 = tail call i32 %28(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 %24) #20
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %42

31:                                               ; preds = %18
  %32 = load double, double* %5, align 8
  %33 = fptrunc double %32 to float
  %34 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17545, float %33) #20
  br i1 %34, label %35, label %42

35:                                               ; preds = %31
  %36 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %25, align 8
  %37 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %36, i64 2
  %38 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %37, align 8
  %39 = tail call i32 %38(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 %23) #20
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %8, %35, %4
  br label %42

42:                                               ; preds = %31, %18, %14, %2, %35, %41
  %43 = phi i1 [ true, %41 ], [ false, %35 ], [ false, %2 ], [ false, %14 ], [ false, %18 ], [ false, %31 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer11SegmentInfo5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::SegmentInfo"* nocapture, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %82, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 2807729, i64 %14) #20
  %16 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 0
  %17 = load double, double* %16, align 8
  %18 = fcmp ogt double %17, 0.000000e+00
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = fptrunc double %17 to float
  %21 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyf(i64 17545, float %20) #20
  %22 = add i64 %21, %15
  br label %23

23:                                               ; preds = %19, %12
  %24 = phi i64 [ %22, %19 ], [ %15, %12 ]
  %25 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, -9223372036854775808
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = tail call i64 @_ZN8mkvmuxer19EbmlDateElementSizeEy(i64 17505) #20
  %30 = add i64 %29, %24
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i64 [ %30, %28 ], [ %24, %23 ]
  %33 = load i8*, i8** %5, align 8
  %34 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 19840, i8* %33) #20
  %35 = add i64 %34, %32
  %36 = load i8*, i8** %9, align 8
  %37 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyPKc(i64 22337, i8* %36) #20
  %38 = add i64 %35, %37
  %39 = tail call zeroext i1 @_ZN8mkvmuxer22WriteEbmlMasterElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 357149030, i64 %38) #20
  br i1 %39, label %40, label %82

40:                                               ; preds = %31
  %41 = bitcast %"class.mkvmuxer::IMkvWriter"* %1 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %42 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %42, i64 1
  %44 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %43, align 8
  %45 = tail call i64 %44(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %82, label %47

47:                                               ; preds = %40
  %48 = load i64, i64* %13, align 8
  %49 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyy(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 2807729, i64 %48) #20
  br i1 %49, label %50, label %82

50:                                               ; preds = %47
  %51 = load double, double* %16, align 8
  %52 = fcmp ogt double %51, 0.000000e+00
  br i1 %52, label %53, label %62

53:                                               ; preds = %50
  %54 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %41, align 8
  %55 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %54, i64 1
  %56 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %55, align 8
  %57 = tail call i64 %56(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %58 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 5
  store i64 %57, i64* %58, align 8
  %59 = load double, double* %16, align 8
  %60 = fptrunc double %59 to float
  %61 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17545, float %60) #20
  br i1 %61, label %62, label %82

62:                                               ; preds = %53, %50
  %63 = load i64, i64* %25, align 8
  %64 = icmp eq i64 %63, -9223372036854775808
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = tail call zeroext i1 @_ZN8mkvmuxer20WriteEbmlDateElementEPNS_10IMkvWriterEyx(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 17505, i64 %63) #20
  br label %67

67:                                               ; preds = %62, %65
  %68 = load i8*, i8** %5, align 8
  %69 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 19840, i8* %68) #20
  br i1 %69, label %70, label %82

70:                                               ; preds = %67
  %71 = load i8*, i8** %9, align 8
  %72 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyPKc(%"class.mkvmuxer::IMkvWriter"* nonnull %1, i64 22337, i8* %71) #20
  br i1 %72, label %73, label %82

73:                                               ; preds = %70
  %74 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %41, align 8
  %75 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %74, i64 1
  %76 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %75, align 8
  %77 = tail call i64 %76(%"class.mkvmuxer::IMkvWriter"* nonnull %1) #20
  %78 = icmp sgt i64 %77, -1
  %79 = sub nsw i64 %77, %45
  %80 = icmp eq i64 %79, %38
  %81 = and i1 %78, %80
  ret i1 %81

82:                                               ; preds = %31, %70, %67, %53, %47, %40, %2, %4, %8
  ret i1 false
}

declare i64 @_ZN8mkvmuxer19EbmlDateElementSizeEy(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN8mkvmuxer20WriteEbmlDateElementEPNS_10IMkvWriterEyx(%"class.mkvmuxer::IMkvWriter"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer11SegmentInfo14set_muxing_appEPKc(%"class.mkvmuxer::SegmentInfo"* nocapture, i8*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #22
  %6 = add i64 %5, 1
  %7 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %8 = icmp eq i8* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %7, i1 false, i1 true, i1 false) #20
  %11 = tail call i8* @__strcpy_chk(i8* nonnull %7, i8* nonnull %1, i64 %10) #20
  %12 = getelementptr inbounds %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::SegmentInfo"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @_ZdaPv(i8* nonnull %13) #21
  br label %16

16:                                               ; preds = %15, %9
  store i8* %7, i8** %12, align 8
  br label %17

17:                                               ; preds = %4, %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7SegmentC2Ev(%"class.mkvmuxer::Segment"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 3
  %4 = bitcast %"class.mkvmuxer::Cues"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #20
  store i8 1, i8* %3, align 8
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3
  %6 = bitcast %"class.mkvmuxer::SeekHead"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #20
  %7 = getelementptr %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 0
  %8 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #20
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 0
  store double -1.000000e+00, double* %9, align 8
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 1
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  store i64 1000000, i64* %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 3
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 4
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -1>, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  store %"class.mkvmuxer::Track"** null, %"class.mkvmuxer::Track"*** %15, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 2
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 9
  %20 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 14
  store i8* null, i8** %20, align 8
  %21 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %22 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %25 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 27
  %26 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 31
  %27 = bitcast %"class.mkvmuxer::Chapters"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 36, i1 false)
  %28 = bitcast i8** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 33, i1 false)
  %29 = bitcast %"class.mkvmuxer::Cluster"*** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 20, i1 false)
  %30 = bitcast %"class.mkvmuxer::Frame"*** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 18, i1 false)
  %31 = bitcast i64* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  %32 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 30000000000, i64 0>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 33
  store i32 2, i32* %33, align 8
  %34 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 35
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 36
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 37
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 38
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %40 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  %41 = bitcast i64* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  store i32 4, i32* %40, align 8
  %42 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 43
  %43 = bitcast i32* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 36, i1 false)
  %44 = tail call i64 @time(i64* null) #20
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 0
  store i32 %45, i32* %46, align 8
  ret void
}

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7SegmentD2Ev(%"class.mkvmuxer::Segment"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %3 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::Cluster"** %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %11, label %28

9:                                                ; preds = %22
  %10 = icmp eq %"class.mkvmuxer::Cluster"** %24, null
  br i1 %10, label %31, label %28

11:                                               ; preds = %5, %22
  %12 = phi i32 [ %23, %22 ], [ %7, %5 ]
  %13 = phi %"class.mkvmuxer::Cluster"** [ %24, %22 ], [ %3, %5 ]
  %14 = phi i64 [ %25, %22 ], [ 0, %5 ]
  %15 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %13, i64 %14
  %16 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %15, align 8
  %17 = icmp eq %"class.mkvmuxer::Cluster"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  tail call void @_ZN8mkvmuxer7ClusterD2Ev(%"class.mkvmuxer::Cluster"* nonnull %16) #20
  %19 = bitcast %"class.mkvmuxer::Cluster"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  %20 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %2, align 8
  %21 = load i32, i32* %6, align 4
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i32 [ %21, %18 ], [ %12, %11 ]
  %24 = phi %"class.mkvmuxer::Cluster"** [ %20, %18 ], [ %13, %11 ]
  %25 = add nuw nsw i64 %14, 1
  %26 = sext i32 %23 to i64
  %27 = icmp slt i64 %25, %26
  br i1 %27, label %11, label %9

28:                                               ; preds = %5, %9
  %29 = phi %"class.mkvmuxer::Cluster"** [ %24, %9 ], [ %3, %5 ]
  %30 = bitcast %"class.mkvmuxer::Cluster"** %29 to i8*
  tail call void @_ZdaPv(i8* %30) #21
  br label %31

31:                                               ; preds = %1, %9, %28
  %32 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %33 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %32, align 8
  %34 = icmp eq %"class.mkvmuxer::Frame"** %33, null
  br i1 %34, label %71, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %41, label %68

39:                                               ; preds = %62
  %40 = icmp eq %"class.mkvmuxer::Frame"** %64, null
  br i1 %40, label %71, label %68

41:                                               ; preds = %35, %62
  %42 = phi i32 [ %63, %62 ], [ %37, %35 ]
  %43 = phi %"class.mkvmuxer::Frame"** [ %64, %62 ], [ %33, %35 ]
  %44 = phi i64 [ %65, %62 ], [ 0, %35 ]
  %45 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %43, i64 %44
  %46 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %45, align 8
  %47 = icmp eq %"class.mkvmuxer::Frame"* %46, null
  br i1 %47, label %62, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %46, i64 0, i32 6
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @_ZdaPv(i8* nonnull %50) #21
  br label %53

53:                                               ; preds = %52, %48
  %54 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %46, i64 0, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void @_ZdaPv(i8* nonnull %55) #21
  br label %58

58:                                               ; preds = %53, %57
  %59 = bitcast %"class.mkvmuxer::Frame"* %46 to i8*
  tail call void @_ZdlPv(i8* %59) #21
  %60 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %32, align 8
  %61 = load i32, i32* %36, align 4
  br label %62

62:                                               ; preds = %58, %41
  %63 = phi i32 [ %61, %58 ], [ %42, %41 ]
  %64 = phi %"class.mkvmuxer::Frame"** [ %60, %58 ], [ %43, %41 ]
  %65 = add nuw nsw i64 %44, 1
  %66 = sext i32 %63 to i64
  %67 = icmp slt i64 %65, %66
  br i1 %67, label %41, label %39

68:                                               ; preds = %35, %39
  %69 = phi %"class.mkvmuxer::Frame"** [ %64, %39 ], [ %33, %35 ]
  %70 = bitcast %"class.mkvmuxer::Frame"** %69 to i8*
  tail call void @_ZdaPv(i8* %70) #21
  br label %71

71:                                               ; preds = %31, %39, %68
  %72 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 9
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZdaPv(i8* nonnull %73) #21
  br label %76

76:                                               ; preds = %75, %71
  %77 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 14
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @_ZdaPv(i8* nonnull %78) #21
  br label %81

81:                                               ; preds = %80, %76
  %82 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 10
  %83 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %82, align 8
  %84 = icmp eq %"class.mkvmuxer::MkvWriter"* %83, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %83) #20
  %86 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %82, align 8
  %87 = icmp eq %"class.mkvmuxer::MkvWriter"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.mkvmuxer::MkvWriter"* %86 to void (%"class.mkvmuxer::MkvWriter"*)***
  %90 = load void (%"class.mkvmuxer::MkvWriter"*)**, void (%"class.mkvmuxer::MkvWriter"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %90, i64 6
  %92 = load void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %91, align 8
  tail call void %92(%"class.mkvmuxer::MkvWriter"* nonnull %86) #20
  br label %93

93:                                               ; preds = %81, %85, %88
  %94 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 11
  %95 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %94, align 8
  %96 = icmp eq %"class.mkvmuxer::MkvWriter"* %95, null
  br i1 %96, label %105, label %97

97:                                               ; preds = %93
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %95) #20
  %98 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %94, align 8
  %99 = icmp eq %"class.mkvmuxer::MkvWriter"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.mkvmuxer::MkvWriter"* %98 to void (%"class.mkvmuxer::MkvWriter"*)***
  %102 = load void (%"class.mkvmuxer::MkvWriter"*)**, void (%"class.mkvmuxer::MkvWriter"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %102, i64 6
  %104 = load void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %103, align 8
  tail call void %104(%"class.mkvmuxer::MkvWriter"* nonnull %98) #20
  br label %105

105:                                              ; preds = %93, %97, %100
  %106 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 12
  %107 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %106, align 8
  %108 = icmp eq %"class.mkvmuxer::MkvWriter"* %107, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %105
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %107) #20
  %110 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %106, align 8
  %111 = icmp eq %"class.mkvmuxer::MkvWriter"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.mkvmuxer::MkvWriter"* %110 to void (%"class.mkvmuxer::MkvWriter"*)***
  %114 = load void (%"class.mkvmuxer::MkvWriter"*)**, void (%"class.mkvmuxer::MkvWriter"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %114, i64 6
  %116 = load void (%"class.mkvmuxer::MkvWriter"*)*, void (%"class.mkvmuxer::MkvWriter"*)** %115, align 8
  tail call void %116(%"class.mkvmuxer::MkvWriter"* nonnull %110) #20
  br label %117

117:                                              ; preds = %105, %109, %112
  %118 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7
  tail call void @_ZN8mkvmuxer4TagsD2Ev(%"class.mkvmuxer::Tags"* %118) #20
  %119 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6, i32 2
  %123 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %122, align 8
  br i1 %121, label %124, label %133

124:                                              ; preds = %117, %124
  %125 = phi %"class.mkvmuxer::Chapter"* [ %132, %124 ], [ %123, %117 ]
  %126 = phi i32 [ %130, %124 ], [ %120, %117 ]
  %127 = add nsw i32 %126, -1
  store i32 %127, i32* %119, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %125, i64 %128
  tail call void @_ZN8mkvmuxer7Chapter5ClearEv(%"class.mkvmuxer::Chapter"* %129) #20
  %130 = load i32, i32* %119, align 4
  %131 = icmp sgt i32 %130, 0
  %132 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %122, align 8
  br i1 %131, label %124, label %133

133:                                              ; preds = %124, %117
  %134 = phi %"class.mkvmuxer::Chapter"* [ %123, %117 ], [ %132, %124 ]
  %135 = icmp eq %"class.mkvmuxer::Chapter"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %134, i64 -1, i32 5
  %138 = bitcast i32* %137 to i8*
  tail call void @_ZdaPv(i8* %138) #21
  br label %139

139:                                              ; preds = %133, %136
  store %"class.mkvmuxer::Chapter"* null, %"class.mkvmuxer::Chapter"** %122, align 8
  %140 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %141 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %140, align 8
  %142 = icmp eq %"class.mkvmuxer::Track"** %141, null
  br i1 %142, label %172, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %169, label %149

147:                                              ; preds = %163
  %148 = icmp eq %"class.mkvmuxer::Track"** %165, null
  br i1 %148, label %172, label %169

149:                                              ; preds = %143, %163
  %150 = phi i32 [ %164, %163 ], [ %145, %143 ]
  %151 = phi %"class.mkvmuxer::Track"** [ %165, %163 ], [ %141, %143 ]
  %152 = phi i64 [ %166, %163 ], [ 0, %143 ]
  %153 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %151, i64 %152
  %154 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %153, align 8
  %155 = icmp eq %"class.mkvmuxer::Track"* %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %149
  %157 = bitcast %"class.mkvmuxer::Track"* %154 to void (%"class.mkvmuxer::Track"*)***
  %158 = load void (%"class.mkvmuxer::Track"*)**, void (%"class.mkvmuxer::Track"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %158, i64 1
  %160 = load void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %159, align 8
  tail call void %160(%"class.mkvmuxer::Track"* nonnull %154) #20
  %161 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %140, align 8
  %162 = load i32, i32* %144, align 8
  br label %163

163:                                              ; preds = %156, %149
  %164 = phi i32 [ %162, %156 ], [ %150, %149 ]
  %165 = phi %"class.mkvmuxer::Track"** [ %161, %156 ], [ %151, %149 ]
  %166 = add nuw nsw i64 %152, 1
  %167 = zext i32 %164 to i64
  %168 = icmp ult i64 %166, %167
  br i1 %168, label %149, label %147

169:                                              ; preds = %147, %143
  %170 = phi %"class.mkvmuxer::Track"** [ %165, %147 ], [ %141, %143 ]
  %171 = bitcast %"class.mkvmuxer::Track"** %170 to i8*
  tail call void @_ZdaPv(i8* %171) #21
  br label %172

172:                                              ; preds = %139, %147, %169
  %173 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 1
  %174 = load i8*, i8** %173, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %172
  tail call void @_ZdaPv(i8* nonnull %174) #21
  br label %177

177:                                              ; preds = %176, %172
  %178 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 3
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %182, label %181

181:                                              ; preds = %177
  tail call void @_ZdaPv(i8* nonnull %179) #21
  br label %182

182:                                              ; preds = %177, %181
  %183 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  %184 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %183, align 8
  %185 = icmp eq %"class.mkvmuxer::CuePoint"** %184, null
  br i1 %185, label %212, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, 0
  br i1 %189, label %192, label %209

190:                                              ; preds = %203
  %191 = icmp eq %"class.mkvmuxer::CuePoint"** %205, null
  br i1 %191, label %212, label %209

192:                                              ; preds = %186, %203
  %193 = phi i32 [ %204, %203 ], [ %188, %186 ]
  %194 = phi %"class.mkvmuxer::CuePoint"** [ %205, %203 ], [ %184, %186 ]
  %195 = phi i64 [ %206, %203 ], [ 0, %186 ]
  %196 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %194, i64 %195
  %197 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %196, align 8
  %198 = icmp eq %"class.mkvmuxer::CuePoint"* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %192
  %200 = bitcast %"class.mkvmuxer::CuePoint"* %197 to i8*
  tail call void @_ZdlPv(i8* %200) #21
  %201 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %183, align 8
  %202 = load i32, i32* %187, align 4
  br label %203

203:                                              ; preds = %199, %192
  %204 = phi i32 [ %202, %199 ], [ %193, %192 ]
  %205 = phi %"class.mkvmuxer::CuePoint"** [ %201, %199 ], [ %194, %192 ]
  %206 = add nuw nsw i64 %195, 1
  %207 = sext i32 %204 to i64
  %208 = icmp slt i64 %206, %207
  br i1 %208, label %192, label %190

209:                                              ; preds = %190, %186
  %210 = phi %"class.mkvmuxer::CuePoint"** [ %205, %190 ], [ %184, %186 ]
  %211 = bitcast %"class.mkvmuxer::CuePoint"** %210 to i8*
  tail call void @_ZdaPv(i8* %211) #21
  br label %212

212:                                              ; preds = %182, %190, %209
  ret void
}

declare void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Segment28MoveCuesBeforeClustersHelperEmiPm(%"class.mkvmuxer::Segment"* nocapture readonly, i64, i32, i64* nocapture) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  %6 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %5, align 8
  %7 = icmp eq %"class.mkvmuxer::CuePoint"** %6, null
  br i1 %7, label %47, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %12, label %47

12:                                               ; preds = %8
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %6, i64 %13
  %15 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %14, align 8
  %16 = icmp eq %"class.mkvmuxer::CuePoint"* %15, null
  br i1 %16, label %47, label %17

17:                                               ; preds = %12
  %18 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* nonnull %15) #20
  %19 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %18) #20
  %20 = getelementptr inbounds %"class.mkvmuxer::CuePoint", %"class.mkvmuxer::CuePoint"* %15, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %1
  store i64 %22, i64* %20, align 8
  %23 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* nonnull %15) #20
  %24 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %23) #20
  %25 = add i64 %19, %18
  %26 = sub i64 %23, %25
  %27 = add i64 %26, %24
  %28 = load i64, i64* %3, align 8
  %29 = add i64 %28, %27
  %30 = tail call i32 @_ZN8mkvmuxer16GetCodedUIntSizeEy(i64 %29) #20
  %31 = load i64, i64* %3, align 8
  %32 = tail call i32 @_ZN8mkvmuxer16GetCodedUIntSizeEy(i64 %31) #20
  %33 = sub nsw i32 %30, %32
  %34 = sext i32 %33 to i64
  %35 = load i64, i64* %3, align 8
  %36 = add i64 %35, %27
  store i64 %36, i64* %3, align 8
  %37 = add i64 %27, %34
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %17
  %40 = load i32, i32* %9, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39, %42
  %43 = phi i32 [ %44, %42 ], [ 0, %39 ]
  tail call void @_ZN8mkvmuxer7Segment28MoveCuesBeforeClustersHelperEmiPm(%"class.mkvmuxer::Segment"* %0, i64 %37, i32 %43, i64* %3)
  %44 = add nuw nsw i32 %43, 1
  %45 = load i32, i32* %9, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %42, label %47

47:                                               ; preds = %42, %39, %8, %4, %17, %12
  ret void
}

declare i32 @_ZN8mkvmuxer16GetCodedUIntSizeEy(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Segment22MoveCuesBeforeClustersEv(%"class.mkvmuxer::Segment"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %26

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  br label %8

8:                                                ; preds = %16, %6
  %9 = phi i64 [ 0, %6 ], [ %22, %16 ]
  %10 = phi i64 [ 0, %6 ], [ %21, %16 ]
  %11 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %7, align 8
  %12 = icmp eq %"class.mkvmuxer::CuePoint"** %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %11, i64 %9
  %15 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %14, align 8
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi %"class.mkvmuxer::CuePoint"* [ %15, %13 ], [ null, %8 ]
  %18 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* %17) #20
  %19 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %18) #20
  %20 = add i64 %18, %10
  %21 = add i64 %20, %19
  %22 = add nuw nsw i64 %9, 1
  %23 = load i32, i32* %3, align 4
  %24 = sext i32 %23 to i64
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %8, label %26

26:                                               ; preds = %16, %1
  %27 = phi i64 [ 0, %1 ], [ %21, %16 ]
  %28 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 475249515, i64 %27) #20
  %29 = add i64 %28, %27
  %30 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #20
  store i64 0, i64* %2, align 8
  %31 = load i32, i32* %3, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %60

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  br label %37

35:                                               ; preds = %45
  store i64 %50, i64* %2, align 8
  %36 = icmp sgt i32 %52, 0
  br i1 %36, label %55, label %60

37:                                               ; preds = %33, %45
  %38 = phi i64 [ 0, %33 ], [ %51, %45 ]
  %39 = phi i64 [ 0, %33 ], [ %50, %45 ]
  %40 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %34, align 8
  %41 = icmp eq %"class.mkvmuxer::CuePoint"** %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %40, i64 %38
  %44 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %43, align 8
  br label %45

45:                                               ; preds = %37, %42
  %46 = phi %"class.mkvmuxer::CuePoint"* [ %44, %42 ], [ null, %37 ]
  %47 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* %46) #20
  %48 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %47) #20
  %49 = add i64 %48, %47
  %50 = add i64 %49, %39
  %51 = add nuw nsw i64 %38, 1
  %52 = load i32, i32* %3, align 4
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %37, label %35

55:                                               ; preds = %35, %55
  %56 = phi i32 [ %57, %55 ], [ 0, %35 ]
  call void @_ZN8mkvmuxer7Segment28MoveCuesBeforeClustersHelperEmiPm(%"class.mkvmuxer::Segment"* %0, i64 %29, i32 %56, i64* nonnull %2)
  %57 = add nuw nsw i32 %56, 1
  %58 = load i32, i32* %3, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %55, label %60

60:                                               ; preds = %55, %26, %35
  %61 = phi i32 [ %52, %35 ], [ %31, %26 ], [ %58, %55 ]
  %62 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 524531317
  %65 = zext i1 %64 to i32
  %66 = icmp eq i32 %63, 475249515
  %67 = zext i1 %66 to i32
  %68 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 524531317
  %71 = select i1 %70, i32 2, i32 %65
  %72 = icmp eq i32 %69, 475249515
  %73 = select i1 %72, i32 2, i32 %67
  %74 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 524531317
  %77 = select i1 %76, i32 3, i32 %71
  %78 = icmp eq i32 %75, 475249515
  %79 = select i1 %78, i32 3, i32 %73
  %80 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 524531317
  %83 = select i1 %82, i32 4, i32 %77
  %84 = icmp eq i32 %81, 475249515
  %85 = select i1 %84, i32 4, i32 %79
  %86 = zext i32 %83 to i64
  %87 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %86
  %88 = load i64, i64* %87, align 8
  %89 = zext i32 %85 to i64
  %90 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %89
  store i32 475249515, i32* %90, align 4
  %91 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %89
  store i64 %88, i64* %91, align 8
  %92 = icmp sgt i32 %61, 0
  br i1 %92, label %93, label %113

93:                                               ; preds = %60
  %94 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  br label %95

95:                                               ; preds = %103, %93
  %96 = phi i64 [ 0, %93 ], [ %109, %103 ]
  %97 = phi i64 [ 0, %93 ], [ %108, %103 ]
  %98 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %94, align 8
  %99 = icmp eq %"class.mkvmuxer::CuePoint"** %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %98, i64 %96
  %102 = load %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %101, align 8
  br label %103

103:                                              ; preds = %100, %95
  %104 = phi %"class.mkvmuxer::CuePoint"* [ %102, %100 ], [ null, %95 ]
  %105 = tail call i64 @_ZNK8mkvmuxer8CuePoint11PayloadSizeEv(%"class.mkvmuxer::CuePoint"* %104) #20
  %106 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 187, i64 %105) #20
  %107 = add i64 %105, %97
  %108 = add i64 %107, %106
  %109 = add nuw nsw i64 %96, 1
  %110 = load i32, i32* %3, align 4
  %111 = sext i32 %110 to i64
  %112 = icmp slt i64 %109, %111
  br i1 %112, label %95, label %113

113:                                              ; preds = %103, %60
  %114 = phi i64 [ 0, %60 ], [ %108, %103 ]
  %115 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 475249515, i64 %114) #20
  %116 = add i64 %115, %114
  %117 = zext i32 %85 to i64
  %118 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %117
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %116, %119
  %121 = zext i32 %83 to i64
  %122 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %121
  store i32 524531317, i32* %122, align 4
  %123 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %121
  store i64 %120, i64* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment4InitEPNS_10IMkvWriterE(%"class.mkvmuxer::Segment"* nocapture, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::IMkvWriter"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 45
  store %"class.mkvmuxer::IMkvWriter"* %1, %"class.mkvmuxer::IMkvWriter"** %5, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  store %"class.mkvmuxer::IMkvWriter"* %1, %"class.mkvmuxer::IMkvWriter"** %6, align 8
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  store %"class.mkvmuxer::IMkvWriter"* %1, %"class.mkvmuxer::IMkvWriter"** %7, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4
  %10 = bitcast [126 x i64]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 2016, i1 false)
  %11 = tail call zeroext i1 @_ZN8mkvmuxer11SegmentInfo4InitEv(%"class.mkvmuxer::SegmentInfo"* %9)
  br label %12

12:                                               ; preds = %2, %4
  %13 = phi i1 [ %11, %4 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment29CopyAndMoveCuesBeforeClustersEPN9mkvparser10IMkvReaderEPNS_10IMkvWriterE(%"class.mkvmuxer::Segment"* nocapture, %"class.mkvparser::IMkvReader"*, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #4 align 2 {
  %4 = bitcast %"class.mkvmuxer::IMkvWriter"* %2 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %5 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %5, i64 3
  %7 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.mkvmuxer::IMkvWriter"* %2) #20
  br i1 %8, label %9, label %106

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %106

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %15 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %14, align 8
  %16 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %15, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %16, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = tail call i32 @_ZN8mkvmuxer11GetUIntSizeEy(i64 524531317) #20
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %18, %20
  %22 = tail call i8* @_Znam(i64 2048) #21
  %23 = icmp sgt i64 %21, 0
  br i1 %23, label %24, label %44

24:                                               ; preds = %13
  %25 = bitcast %"class.mkvparser::IMkvReader"* %1 to i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)***
  %26 = bitcast %"class.mkvmuxer::IMkvWriter"* %2 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  br label %27

27:                                               ; preds = %36, %24
  %28 = phi i64 [ 0, %24 ], [ %41, %36 ]
  %29 = phi i64 [ %21, %24 ], [ %42, %36 ]
  %30 = icmp slt i64 %29, 2048
  %31 = select i1 %30, i64 %29, i64 2048
  %32 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)**, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*** %25, align 8
  %33 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)** %32, align 8
  %34 = tail call i32 %33(%"class.mkvparser::IMkvReader"* %1, i64 %28, i64 %31, i8* nonnull %22) #20
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %106

36:                                               ; preds = %27
  %37 = trunc i64 %31 to i32
  %38 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %26, align 8
  %39 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %38, align 8
  %40 = tail call i32 %39(%"class.mkvmuxer::IMkvWriter"* %2, i8* nonnull %22, i32 %37) #20
  %41 = add nsw i64 %31, %28
  %42 = sub nsw i64 %29, %31
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %27, label %44

44:                                               ; preds = %36, %13
  tail call void @_ZdaPv(i8* nonnull %22) #21
  tail call void @_ZN8mkvmuxer7Segment22MoveCuesBeforeClustersEv(%"class.mkvmuxer::Segment"* %0)
  %45 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2
  %46 = tail call zeroext i1 @_ZNK8mkvmuxer4Cues5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Cues"* %45, %"class.mkvmuxer::IMkvWriter"* %2)
  br i1 %46, label %47, label %106

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3
  %49 = tail call zeroext i1 @_ZNK8mkvmuxer8SeekHead8FinalizeEPNS_10IMkvWriterE(%"class.mkvmuxer::SeekHead"* %48, %"class.mkvmuxer::IMkvWriter"* %2)
  br i1 %49, label %50, label %106

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 15
  %52 = load i64, i64* %51, align 8
  %53 = sub nsw i64 %52, %21
  %54 = tail call i8* @_Znam(i64 2048) #21
  %55 = icmp sgt i64 %53, 0
  br i1 %55, label %56, label %76

56:                                               ; preds = %50
  %57 = bitcast %"class.mkvparser::IMkvReader"* %1 to i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)***
  %58 = bitcast %"class.mkvmuxer::IMkvWriter"* %2 to i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)***
  br label %59

59:                                               ; preds = %68, %56
  %60 = phi i64 [ %21, %56 ], [ %73, %68 ]
  %61 = phi i64 [ %53, %56 ], [ %74, %68 ]
  %62 = icmp slt i64 %61, 2048
  %63 = select i1 %62, i64 %61, i64 2048
  %64 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)**, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*** %57, align 8
  %65 = load i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)*, i32 (%"class.mkvparser::IMkvReader"*, i64, i64, i8*)** %64, align 8
  %66 = tail call i32 %65(%"class.mkvparser::IMkvReader"* %1, i64 %60, i64 %63, i8* nonnull %54) #20
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %106

68:                                               ; preds = %59
  %69 = trunc i64 %63 to i32
  %70 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*** %58, align 8
  %71 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i8*, i32)** %70, align 8
  %72 = tail call i32 %71(%"class.mkvmuxer::IMkvWriter"* %2, i8* nonnull %54, i32 %69) #20
  %73 = add nsw i64 %63, %60
  %74 = sub nsw i64 %61, %63
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %59, label %76

76:                                               ; preds = %68, %50
  tail call void @_ZdaPv(i8* nonnull %54) #21
  %77 = bitcast %"class.mkvmuxer::IMkvWriter"* %2 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %78 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %77, align 8
  %79 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %78, i64 1
  %80 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %79, align 8
  %81 = tail call i64 %80(%"class.mkvmuxer::IMkvWriter"* %2) #20
  %82 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %77, align 8
  %83 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %82, i64 1
  %84 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %83, align 8
  %85 = tail call i64 %84(%"class.mkvmuxer::IMkvWriter"* %2) #20
  %86 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 41
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.mkvmuxer::IMkvWriter"* %2 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %91 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %91, i64 2
  %93 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %92, align 8
  %94 = tail call i32 %93(%"class.mkvmuxer::IMkvWriter"* %2, i64 %89) #20
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %106

96:                                               ; preds = %76
  %97 = sub nsw i64 %85, %87
  %98 = tail call i32 @_ZN8mkvmuxer13WriteUIntSizeEPNS_10IMkvWriterEyi(%"class.mkvmuxer::IMkvWriter"* %2, i64 %97, i32 8) #20
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %90, align 8
  %102 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %101, i64 2
  %103 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %102, align 8
  %104 = tail call i32 %103(%"class.mkvmuxer::IMkvWriter"* %2, i64 %81) #20
  %105 = icmp eq i32 %104, 0
  ret i1 %105

106:                                              ; preds = %27, %59, %47, %44, %76, %96, %3, %9
  ret i1 false
}

declare i32 @_ZN8mkvmuxer11GetUIntSizeEy(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment8FinalizeEv(%"class.mkvmuxer::Segment"*) local_unnamed_addr #4 align 2 {
  %2 = alloca i8*, align 8
  %3 = tail call i32 @_ZN8mkvmuxer7Segment14WriteFramesAllEv(%"class.mkvmuxer::Segment"* %0)
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %415, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 33
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 36
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %415, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %19 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %18, align 8
  %20 = add nsw i32 %15, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %21
  %23 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %22, align 8
  %24 = icmp eq %"class.mkvmuxer::Cluster"* %23, null
  br i1 %24, label %415, label %25

25:                                               ; preds = %17
  %26 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster8FinalizeEbm(%"class.mkvmuxer::Cluster"* nonnull %23, i1 zeroext false, i64 0)
  br i1 %26, label %27, label %415

27:                                               ; preds = %25
  %28 = load i32, i32* %6, align 8
  br label %29

29:                                               ; preds = %27, %13
  %30 = phi i32 [ %28, %27 ], [ %7, %13 ]
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %415

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 10
  %38 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %37, align 8
  %39 = icmp eq %"class.mkvmuxer::MkvWriter"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %38) #20
  %41 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 8
  br label %44

44:                                               ; preds = %36, %32, %40
  %45 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 28
  %46 = load i64, i64* %45, align 8
  %47 = uitofp i64 %46 to double
  %48 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 27
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to double
  %51 = fadd double %47, %50
  %52 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = uitofp i64 %53 to double
  %55 = fdiv double %51, %54
  %56 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 44
  %57 = load double, double* %56, align 8
  %58 = fcmp ogt double %57, 0.000000e+00
  br i1 %58, label %92, label %59

59:                                               ; preds = %44
  %60 = icmp eq i64 %49, 0
  br i1 %60, label %61, label %92

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 38
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %92

69:                                               ; preds = %65
  %70 = zext i32 %67 to i64
  br label %71

71:                                               ; preds = %88, %69
  %72 = phi i64 [ 0, %69 ], [ %90, %88 ]
  %73 = phi double [ %55, %69 ], [ %89, %88 ]
  %74 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 30, i64 %72
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %88, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29, i64 %72
  %79 = load i64, i64* %78, align 8
  %80 = uitofp i64 %79 to double
  %81 = add i64 %75, -1
  %82 = uitofp i64 %81 to double
  %83 = fdiv double %80, %82
  %84 = fadd double %83, %80
  %85 = fdiv double %84, %54
  %86 = fcmp ogt double %85, %73
  %87 = select i1 %86, double %85, double %73
  br label %88

88:                                               ; preds = %77, %71
  %89 = phi double [ %73, %71 ], [ %87, %77 ]
  %90 = add nuw nsw i64 %72, 1
  %91 = icmp eq i64 %90, %70
  br i1 %91, label %92, label %71

92:                                               ; preds = %88, %65, %44, %61, %59
  %93 = phi double [ %55, %61 ], [ %55, %59 ], [ %57, %44 ], [ %55, %65 ], [ %89, %88 ]
  %94 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 0
  store double %93, double* %94, align 8
  %95 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %96 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %97 = icmp eq %"class.mkvmuxer::IMkvWriter"* %96, null
  br i1 %97, label %415, label %98

98:                                               ; preds = %92
  %99 = fcmp ogt double %93, 0.000000e+00
  br i1 %99, label %100, label %133

100:                                              ; preds = %98
  %101 = bitcast %"class.mkvmuxer::IMkvWriter"* %96 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %102 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %102, i64 3
  %104 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.mkvmuxer::IMkvWriter"* nonnull %96) #20
  br i1 %105, label %106, label %133

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, -1
  br i1 %109, label %415, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.mkvmuxer::IMkvWriter"* %96 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %112 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %112, i64 1
  %114 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %113, align 8
  %115 = tail call i64 %114(%"class.mkvmuxer::IMkvWriter"* nonnull %96) #20
  %116 = load i64, i64* %107, align 8
  %117 = bitcast %"class.mkvmuxer::IMkvWriter"* %96 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %118 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %118, i64 2
  %120 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %119, align 8
  %121 = tail call i32 %120(%"class.mkvmuxer::IMkvWriter"* nonnull %96, i64 %116) #20
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %415

123:                                              ; preds = %110
  %124 = load double, double* %94, align 8
  %125 = fptrunc double %124 to float
  %126 = tail call zeroext i1 @_ZN8mkvmuxer16WriteEbmlElementEPNS_10IMkvWriterEyf(%"class.mkvmuxer::IMkvWriter"* nonnull %96, i64 17545, float %125) #20
  br i1 %126, label %127, label %415

127:                                              ; preds = %123
  %128 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %117, align 8
  %129 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %128, i64 2
  %130 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %129, align 8
  %131 = tail call i32 %130(%"class.mkvmuxer::IMkvWriter"* nonnull %96, i64 %115) #20
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %415

133:                                              ; preds = %127, %100, %98
  %134 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 35
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %209, label %137

137:                                              ; preds = %133
  %138 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %139 = icmp eq %"class.mkvmuxer::IMkvWriter"* %138, null
  br i1 %139, label %184, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.mkvmuxer::IMkvWriter"* %138 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %142 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %141, align 8
  %143 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %142, i64 1
  %144 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %143, align 8
  %145 = tail call i64 %144(%"class.mkvmuxer::IMkvWriter"* nonnull %138) #20
  %146 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %147 = load i64, i64* %146, align 8
  %148 = sub nsw i64 %145, %147
  %149 = load i8, i8* %33, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %184, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %153 = load i32, i32* %152, align 4
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %162

157:                                              ; preds = %162, %151
  %158 = phi i64 [ %148, %151 ], [ %172, %162 ]
  %159 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %160 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %159, align 8
  %161 = icmp eq %"class.mkvmuxer::IMkvWriter"* %160, null
  br i1 %161, label %184, label %177

162:                                              ; preds = %162, %155
  %163 = phi i64 [ 0, %155 ], [ %173, %162 ]
  %164 = phi i64 [ %148, %155 ], [ %172, %162 ]
  %165 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %156, align 8
  %166 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %165, i64 %163
  %167 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %166, align 8
  %168 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %169 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %167, i64 0, i32 4
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %168, %164
  %172 = add i64 %171, %170
  %173 = add nuw nsw i64 %163, 1
  %174 = load i32, i32* %152, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %162, label %157

177:                                              ; preds = %157
  %178 = bitcast %"class.mkvmuxer::IMkvWriter"* %160 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %179 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %178, align 8
  %180 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %179, i64 1
  %181 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %180, align 8
  %182 = tail call i64 %181(%"class.mkvmuxer::IMkvWriter"* nonnull %160) #20
  %183 = add nsw i64 %182, %158
  br label %184

184:                                              ; preds = %137, %140, %157, %177
  %185 = phi i64 [ -1, %137 ], [ %183, %177 ], [ %158, %157 ], [ %148, %140 ]
  %186 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %193, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %197

193:                                              ; preds = %184, %189, %197, %201, %205
  %194 = phi i64 [ 0, %184 ], [ 1, %189 ], [ 2, %197 ], [ 3, %201 ], [ 4, %205 ]
  %195 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %194
  store i32 475249515, i32* %195, align 4
  %196 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %194
  store i64 %185, i64* %196, align 8
  br label %209

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %193, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %193, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %193, label %415

209:                                              ; preds = %193, %133
  %210 = load i8, i8* %33, align 8, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %229, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 11
  %214 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %213, align 8
  %215 = icmp eq %"class.mkvmuxer::MkvWriter"* %214, null
  br i1 %215, label %415, label %216

216:                                              ; preds = %212
  %217 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #20
  store i8* null, i8** %2, align 8
  %218 = call zeroext i1 @_ZNK8mkvmuxer7Segment15UpdateChunkNameEPKcPPc(%"class.mkvmuxer::Segment"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** nonnull %2)
  br i1 %218, label %219, label %227

219:                                              ; preds = %216
  %220 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %213, align 8
  %221 = load i8*, i8** %2, align 8
  %222 = call zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"* %220, i8* %221) #20
  %223 = load i8*, i8** %2, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %226, label %225

225:                                              ; preds = %219
  call void @_ZdaPv(i8* nonnull %223) #21
  br label %226

226:                                              ; preds = %225, %219
  br i1 %222, label %228, label %227

227:                                              ; preds = %226, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #20
  br label %415

228:                                              ; preds = %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #20
  br label %229

229:                                              ; preds = %228, %209
  %230 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 45
  %231 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %230, align 8
  %232 = bitcast %"class.mkvmuxer::IMkvWriter"* %231 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %233 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %232, align 8
  %234 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %233, i64 1
  %235 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %234, align 8
  %236 = call i64 %235(%"class.mkvmuxer::IMkvWriter"* %231) #20
  %237 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 15
  store i64 %236, i64* %237, align 8
  %238 = load i8, i8* %134, align 1, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %229
  %241 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2
  %242 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %243 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %242, align 8
  %244 = call zeroext i1 @_ZNK8mkvmuxer4Cues5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Cues"* %241, %"class.mkvmuxer::IMkvWriter"* %243)
  br i1 %244, label %245, label %415

245:                                              ; preds = %229, %240
  %246 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3
  %247 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %248 = call zeroext i1 @_ZNK8mkvmuxer8SeekHead8FinalizeEPNS_10IMkvWriterE(%"class.mkvmuxer::SeekHead"* %246, %"class.mkvmuxer::IMkvWriter"* %247)
  br i1 %248, label %249, label %415

249:                                              ; preds = %245
  %250 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %251 = bitcast %"class.mkvmuxer::IMkvWriter"* %250 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %252 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %251, align 8
  %253 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %252, i64 3
  %254 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %253, align 8
  %255 = call zeroext i1 %254(%"class.mkvmuxer::IMkvWriter"* %250) #20
  br i1 %255, label %256, label %402

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 41
  %258 = load i64, i64* %257, align 8
  %259 = icmp eq i64 %258, -1
  br i1 %259, label %415, label %260

260:                                              ; preds = %256
  %261 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %262 = icmp eq %"class.mkvmuxer::IMkvWriter"* %261, null
  br i1 %262, label %415, label %263

263:                                              ; preds = %260
  %264 = bitcast %"class.mkvmuxer::IMkvWriter"* %261 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %265 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %264, align 8
  %266 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %265, i64 1
  %267 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %266, align 8
  %268 = call i64 %267(%"class.mkvmuxer::IMkvWriter"* nonnull %261) #20
  %269 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %270 = load i64, i64* %269, align 8
  %271 = sub nsw i64 %268, %270
  %272 = load i8, i8* %33, align 8, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %307, label %274

274:                                              ; preds = %263
  %275 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %276 = load i32, i32* %275, align 4
  %277 = icmp sgt i32 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %285

280:                                              ; preds = %285, %274
  %281 = phi i64 [ %271, %274 ], [ %295, %285 ]
  %282 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %283 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %282, align 8
  %284 = icmp eq %"class.mkvmuxer::IMkvWriter"* %283, null
  br i1 %284, label %307, label %300

285:                                              ; preds = %285, %278
  %286 = phi i64 [ 0, %278 ], [ %296, %285 ]
  %287 = phi i64 [ %271, %278 ], [ %295, %285 ]
  %288 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %279, align 8
  %289 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %288, i64 %286
  %290 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %289, align 8
  %291 = call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %292 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %290, i64 0, i32 4
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %291, %287
  %295 = add i64 %294, %293
  %296 = add nuw nsw i64 %286, 1
  %297 = load i32, i32* %275, align 4
  %298 = sext i32 %297 to i64
  %299 = icmp slt i64 %296, %298
  br i1 %299, label %285, label %280

300:                                              ; preds = %280
  %301 = bitcast %"class.mkvmuxer::IMkvWriter"* %283 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %302 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %301, align 8
  %303 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %302, i64 1
  %304 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %303, align 8
  %305 = call i64 %304(%"class.mkvmuxer::IMkvWriter"* nonnull %283) #20
  %306 = add nsw i64 %305, %281
  br label %307

307:                                              ; preds = %263, %280, %300
  %308 = phi i64 [ %306, %300 ], [ %281, %280 ], [ %271, %263 ]
  %309 = icmp slt i64 %308, 1
  br i1 %309, label %415, label %310

310:                                              ; preds = %307
  %311 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %312 = bitcast %"class.mkvmuxer::IMkvWriter"* %311 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %313 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %312, align 8
  %314 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %313, i64 1
  %315 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %314, align 8
  %316 = call i64 %315(%"class.mkvmuxer::IMkvWriter"* %311) #20
  %317 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %347, label %320

320:                                              ; preds = %310
  %321 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %322 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %321, align 8
  %323 = icmp eq %"class.mkvmuxer::Track"** %322, null
  %324 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  br i1 %323, label %347, label %325

325:                                              ; preds = %320
  %326 = zext i32 %318 to i64
  br label %327

327:                                              ; preds = %344, %325
  %328 = phi i64 [ 0, %325 ], [ %345, %344 ]
  %329 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %322, i64 %328
  %330 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %329, align 8
  %331 = icmp eq %"class.mkvmuxer::Track"* %330, null
  br i1 %331, label %347, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %330, i64 0, i32 9
  %334 = load i64, i64* %333, align 8
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %340

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %330, i64 0, i32 10
  %338 = load i64, i64* %337, align 8
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %344, label %340

340:                                              ; preds = %336, %332
  %341 = load i32, i32* %324, align 8
  %342 = icmp ult i32 %341, 4
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  store i32 4, i32* %324, align 8
  br label %347

344:                                              ; preds = %340, %336
  %345 = add nuw nsw i64 %328, 1
  %346 = icmp eq i64 %345, %326
  br i1 %346, label %347, label %327

347:                                              ; preds = %327, %344, %310, %320, %343
  %348 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  %349 = load i32, i32* %348, align 8
  %350 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 43
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %349, %351
  br i1 %352, label %381, label %353

353:                                              ; preds = %347
  %354 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %355 = bitcast %"class.mkvmuxer::IMkvWriter"* %354 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %356 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %355, align 8
  %357 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %356, i64 2
  %358 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %357, align 8
  %359 = call i32 %358(%"class.mkvmuxer::IMkvWriter"* %354, i64 0) #20
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %415

361:                                              ; preds = %353
  %362 = call zeroext i1 @_ZNK8mkvmuxer7Segment13DocTypeIsWebmEv(%"class.mkvmuxer::Segment"* %0)
  %363 = select i1 %362, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_112kDocTypeWebmE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_116kDocTypeMatroskaE, i64 0, i64 0)
  %364 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %365 = load i32, i32* %348, align 8
  %366 = zext i32 %365 to i64
  %367 = call zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEmPKc(%"class.mkvmuxer::IMkvWriter"* %364, i64 %366, i8* %363)
  br i1 %367, label %368, label %415

368:                                              ; preds = %361
  %369 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %370 = bitcast %"class.mkvmuxer::IMkvWriter"* %369 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %371 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %370, align 8
  %372 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %371, i64 1
  %373 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %372, align 8
  %374 = call i64 %373(%"class.mkvmuxer::IMkvWriter"* %369) #20
  %375 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 39
  %376 = load i32, i32* %375, align 4
  %377 = sext i32 %376 to i64
  %378 = icmp eq i64 %374, %377
  br i1 %378, label %379, label %415

379:                                              ; preds = %368
  %380 = load i32, i32* %348, align 8
  store i32 %380, i32* %350, align 4
  br label %381

381:                                              ; preds = %379, %347
  %382 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %383 = load i64, i64* %257, align 8
  %384 = bitcast %"class.mkvmuxer::IMkvWriter"* %382 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %385 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %384, align 8
  %386 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %385, i64 2
  %387 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %386, align 8
  %388 = call i32 %387(%"class.mkvmuxer::IMkvWriter"* %382, i64 %383) #20
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %415

390:                                              ; preds = %381
  %391 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %392 = call i32 @_ZN8mkvmuxer13WriteUIntSizeEPNS_10IMkvWriterEyi(%"class.mkvmuxer::IMkvWriter"* %391, i64 %308, i32 8) #20
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %415

394:                                              ; preds = %390
  %395 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %95, align 8
  %396 = bitcast %"class.mkvmuxer::IMkvWriter"* %395 to i32 (%"class.mkvmuxer::IMkvWriter"*, i64)***
  %397 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)**, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*** %396, align 8
  %398 = getelementptr inbounds i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %397, i64 2
  %399 = load i32 (%"class.mkvmuxer::IMkvWriter"*, i64)*, i32 (%"class.mkvmuxer::IMkvWriter"*, i64)** %398, align 8
  %400 = call i32 %399(%"class.mkvmuxer::IMkvWriter"* %395, i64 %316) #20
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %415

402:                                              ; preds = %394, %249
  %403 = load i8, i8* %33, align 8, !range !2
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %415, label %405

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 11
  %407 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %406, align 8
  %408 = icmp eq %"class.mkvmuxer::MkvWriter"* %407, null
  br i1 %408, label %415, label %409

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 12
  %411 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %410, align 8
  %412 = icmp eq %"class.mkvmuxer::MkvWriter"* %411, null
  br i1 %412, label %415, label %413

413:                                              ; preds = %409
  call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %407) #20
  %414 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %410, align 8
  call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* %414) #20
  br label %415

415:                                              ; preds = %9, %368, %361, %260, %394, %390, %381, %353, %307, %123, %110, %106, %92, %127, %227, %205, %405, %409, %256, %245, %240, %212, %29, %413, %402, %17, %25, %1
  %416 = phi i1 [ false, %1 ], [ false, %25 ], [ false, %17 ], [ true, %402 ], [ true, %413 ], [ true, %29 ], [ false, %212 ], [ false, %240 ], [ false, %245 ], [ false, %256 ], [ false, %409 ], [ false, %405 ], [ false, %205 ], [ false, %227 ], [ false, %127 ], [ false, %92 ], [ false, %106 ], [ false, %110 ], [ false, %123 ], [ false, %307 ], [ false, %353 ], [ false, %381 ], [ false, %390 ], [ false, %394 ], [ false, %260 ], [ false, %361 ], [ false, %368 ], [ true, %9 ]
  ret i1 %416
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer7Segment14WriteFramesAllEv(%"class.mkvmuxer::Segment"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %3 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::Frame"** %3, null
  br i1 %4, label %91, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %91, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %11 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %10, align 8
  %12 = add nsw i32 %7, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %11, i64 %13
  %15 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %14, align 8
  %16 = icmp eq %"class.mkvmuxer::Cluster"* %15, null
  br i1 %16, label %91, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %89

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  %23 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  %24 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  %25 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 28
  br label %26

26:                                               ; preds = %87, %21
  %27 = phi %"class.mkvmuxer::Frame"** [ %3, %21 ], [ %88, %87 ]
  %28 = phi i64 [ 0, %21 ], [ %83, %87 ]
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %27, i64 %28
  %30 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  %31 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %30, i64 0, i32 12
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  store i32 4, i32* %22, align 8
  %35 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  br label %36

36:                                               ; preds = %26, %34
  %37 = phi %"class.mkvmuxer::Frame"* [ %30, %26 ], [ %35, %34 ]
  %38 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* nonnull %15, %"class.mkvmuxer::Frame"* %37) #20
  br i1 %38, label %39, label %91

39:                                               ; preds = %36
  %40 = load i8, i8* %23, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = load i64, i64* %24, align 8
  %44 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  %45 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %44, i64 0, i32 10
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %43, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %44, i64 0, i32 11
  %50 = load i64, i64* %49, align 8
  %51 = tail call zeroext i1 @_ZN8mkvmuxer7Segment11AddCuePointEmm(%"class.mkvmuxer::Segment"* %0, i64 %50, i64 %43)
  br i1 %51, label %52, label %91

52:                                               ; preds = %39, %48, %42
  %53 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  %54 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %53, i64 0, i32 11
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %25, align 8
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %67

58:                                               ; preds = %52
  store i64 %55, i64* %25, align 8
  %59 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  %60 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %59, i64 0, i32 11
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %59, i64 0, i32 10
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29, i64 %64
  store i64 %61, i64* %65, align 8
  %66 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  br label %67

67:                                               ; preds = %58, %52
  %68 = phi %"class.mkvmuxer::Frame"* [ %66, %58 ], [ %53, %52 ]
  %69 = icmp eq %"class.mkvmuxer::Frame"* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %68, i64 0, i32 6
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void @_ZdaPv(i8* nonnull %72) #21
  br label %75

75:                                               ; preds = %74, %70
  %76 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %68, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_ZdaPv(i8* nonnull %77) #21
  br label %80

80:                                               ; preds = %75, %79
  %81 = bitcast %"class.mkvmuxer::Frame"* %68 to i8*
  tail call void @_ZdlPv(i8* %81) #21
  br label %82

82:                                               ; preds = %80, %67
  store %"class.mkvmuxer::Frame"* null, %"class.mkvmuxer::Frame"** %29, align 8
  %83 = add nuw nsw i64 %28, 1
  %84 = load i32, i32* %18, align 4
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %2, align 8
  br label %26

89:                                               ; preds = %82, %17
  %90 = phi i32 [ %19, %17 ], [ %84, %82 ]
  store i32 0, i32* %18, align 4
  br label %91

91:                                               ; preds = %48, %36, %89, %9, %5, %1
  %92 = phi i32 [ 0, %1 ], [ -1, %5 ], [ %90, %89 ], [ -1, %9 ], [ -1, %36 ], [ -1, %48 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer7Segment9MaxOffsetEv(%"class.mkvmuxer::Segment"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %3 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %2, align 8
  %4 = icmp eq %"class.mkvmuxer::IMkvWriter"* %3, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.mkvmuxer::IMkvWriter"* %3 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %7 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %7, i64 1
  %9 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %8, align 8
  %10 = tail call i64 %9(%"class.mkvmuxer::IMkvWriter"* nonnull %3) #20
  %11 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %12 = load i64, i64* %11, align 8
  %13 = sub nsw i64 %10, %12
  %14 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %28

23:                                               ; preds = %28, %17
  %24 = phi i64 [ %13, %17 ], [ %38, %28 ]
  %25 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %26 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %25, align 8
  %27 = icmp eq %"class.mkvmuxer::IMkvWriter"* %26, null
  br i1 %27, label %50, label %43

28:                                               ; preds = %21, %28
  %29 = phi i64 [ 0, %21 ], [ %39, %28 ]
  %30 = phi i64 [ %13, %21 ], [ %38, %28 ]
  %31 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %22, align 8
  %32 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %31, i64 %29
  %33 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %32, align 8
  %34 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %35 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %33, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, %30
  %38 = add i64 %37, %36
  %39 = add nuw nsw i64 %29, 1
  %40 = load i32, i32* %18, align 4
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  br i1 %42, label %28, label %23

43:                                               ; preds = %23
  %44 = bitcast %"class.mkvmuxer::IMkvWriter"* %26 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %45 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %45, i64 1
  %47 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %46, align 8
  %48 = tail call i64 %47(%"class.mkvmuxer::IMkvWriter"* nonnull %26) #20
  %49 = add nsw i64 %48, %24
  br label %50

50:                                               ; preds = %43, %5, %23, %1
  %51 = phi i64 [ -1, %1 ], [ %49, %43 ], [ %24, %23 ], [ %13, %5 ]
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer7Segment15UpdateChunkNameEPKcPPc(%"class.mkvmuxer::Segment"* nocapture readonly, i8*, i8**) local_unnamed_addr #4 align 2 {
  %4 = alloca [64 x i8], align 16
  %5 = icmp ne i8** %2, null
  %6 = icmp ne i8* %1, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i32 %11, i8* nonnull %1) #20
  %13 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 14
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i64 @strlen(i8* %14) #22
  %16 = call i64 @strlen(i8* nonnull %9) #22
  %17 = add i64 %15, 1
  %18 = add i64 %17, %16
  %19 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %18, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %20 = icmp eq i8* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %8
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %19, i1 false, i1 true, i1 false) #20
  %23 = tail call i8* @__strcpy_chk(i8* nonnull %19, i8* %14, i64 %22) #20
  %24 = call i8* @__strcat_chk(i8* nonnull %19, i8* nonnull %9, i64 %22) #20
  %25 = load i8*, i8** %2, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  call void @_ZdaPv(i8* nonnull %25) #21
  br label %28

28:                                               ; preds = %27, %21
  store i8* %19, i8** %2, align 8
  br label %29

29:                                               ; preds = %8, %28
  %30 = phi i1 [ true, %28 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #20
  br label %31

31:                                               ; preds = %3, %29
  %32 = phi i1 [ %30, %29 ], [ false, %3 ]
  ret i1 %32
}

declare zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"*, i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer7Segment20UpdateDocTypeVersionEv(%"class.mkvmuxer::Segment"* nocapture) local_unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %6, align 8
  %8 = icmp eq %"class.mkvmuxer::Track"** %7, null
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  br i1 %8, label %32, label %10

10:                                               ; preds = %5
  %11 = zext i32 %3 to i64
  br label %12

12:                                               ; preds = %10, %29
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %7, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = icmp eq %"class.mkvmuxer::Track"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21, %17
  %26 = load i32, i32* %9, align 8
  %27 = icmp ult i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 4, i32* %9, align 8
  br label %32

29:                                               ; preds = %21, %25
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp ult i64 %30, %11
  br i1 %31, label %12, label %32

32:                                               ; preds = %29, %12, %1, %5, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer7Segment13DocTypeIsWebmEv(%"class.mkvmuxer::Segment"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %77

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = zext i32 %4 to i64
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %18

16:                                               ; preds = %75
  %17 = icmp eq i64 %76, %14
  br i1 %17, label %77, label %18

18:                                               ; preds = %16, %6
  %19 = phi i64 [ 0, %6 ], [ %76, %16 ]
  %20 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %21 = icmp eq %"class.mkvmuxer::Track"** %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %3, align 8
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %19, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %20, i64 %19
  %28 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %27, align 8
  br label %29

29:                                               ; preds = %18, %22, %26
  %30 = phi %"class.mkvmuxer::Track"* [ %28, %26 ], [ null, %18 ], [ null, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #20
  %31 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %30, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) #20
  %34 = icmp ugt i64 %33, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #19
  unreachable

37:                                               ; preds = %29
  %38 = icmp ult i64 %33, 23
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = add nuw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = call i8* @_Znwm(i64 %41) #21
  store i8* %42, i8** %9, align 8
  %43 = or i64 %41, -9223372036854775808
  store i64 %43, i64* %11, align 8
  store i64 %33, i64* %10, align 8
  br label %47

44:                                               ; preds = %37
  %45 = trunc i64 %33 to i8
  store i8 %45, i8* %13, align 1
  %46 = icmp eq i64 %33, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %44, %39
  %48 = phi i8* [ %42, %39 ], [ %8, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 %32, i64 %33, i1 false) #20
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %8, %44 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %33
  store i8 0, i8* %51, align 1
  br label %52

52:                                               ; preds = %66, %49
  %53 = phi i64 [ 0, %49 ], [ %67, %66 ]
  %54 = getelementptr inbounds [9 x i8*], [9 x i8*]* @__const._ZNK8mkvmuxer7Segment13DocTypeIsWebmEv.kWebmCodecIds, i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call i64 @strlen(i8* %55) #20
  %57 = load i8, i8* %13, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %10, align 8
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = icmp eq i64 %56, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %52
  %64 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %55, i64 %56) #20
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %52, %63
  %67 = add nuw nsw i64 %53, 1
  %68 = icmp eq i64 %67, 9
  br i1 %68, label %69, label %52

69:                                               ; preds = %66, %63
  %70 = phi i1 [ false, %66 ], [ true, %63 ]
  %71 = load i8, i8* %13, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %74) #21
  br label %75

75:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #20
  %76 = add nuw nsw i64 %19, 1
  br i1 %70, label %16, label %77

77:                                               ; preds = %75, %16, %1
  %78 = phi i1 [ true, %1 ], [ true, %16 ], [ false, %75 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.mkvmuxer::Track"* @_ZN8mkvmuxer7Segment8AddTrackEi(%"class.mkvmuxer::Segment"*, i32) local_unnamed_addr #4 align 2 {
  %3 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 120, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %4 = icmp eq i8* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %"class.mkvmuxer::Track"*
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 0
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer5TrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 8
  %10 = getelementptr inbounds i8, i8* %3, i64 64
  %11 = bitcast i8* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false) #20
  %12 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %7) #20
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 44, i1 false) #20
  %14 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5
  %15 = tail call zeroext i1 @_ZN8mkvmuxer6Tracks8AddTrackEPNS_5TrackEi(%"class.mkvmuxer::Tracks"* %14, %"class.mkvmuxer::Track"* nonnull %6, i32 %1)
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = bitcast i8* %3 to void (%"class.mkvmuxer::Track"*)***
  %18 = load void (%"class.mkvmuxer::Track"*)**, void (%"class.mkvmuxer::Track"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %18, i64 1
  %20 = load void (%"class.mkvmuxer::Track"*)*, void (%"class.mkvmuxer::Track"*)** %19, align 8
  tail call void %20(%"class.mkvmuxer::Track"* nonnull %6) #20
  br label %21

21:                                               ; preds = %2, %5, %16
  %22 = phi %"class.mkvmuxer::Track"* [ null, %16 ], [ %6, %5 ], [ null, %2 ]
  ret %"class.mkvmuxer::Track"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.mkvmuxer::Chapter"* @_ZN8mkvmuxer7Segment10AddChapterEv(%"class.mkvmuxer::Segment"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6
  %3 = tail call zeroext i1 @_ZN8mkvmuxer8Chapters19ExpandChaptersArrayEv(%"class.mkvmuxer::Chapters"* %2) #20
  br i1 %3, label %4, label %18

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6, i32 2
  %7 = load %"class.mkvmuxer::Chapter"*, %"class.mkvmuxer::Chapter"** %6, align 8
  %8 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 4
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %7, i64 %11
  %13 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %7, i64 %11, i32 4
  %14 = bitcast %"class.mkvmuxer::Chapter"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #20
  %15 = bitcast %"class.mkvmuxer::Chapter::Display"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #20
  %16 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %5) #20
  %17 = getelementptr inbounds %"class.mkvmuxer::Chapter", %"class.mkvmuxer::Chapter"* %7, i64 %11, i32 3
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %1, %4
  %19 = phi %"class.mkvmuxer::Chapter"* [ %12, %4 ], [ null, %1 ]
  ret %"class.mkvmuxer::Chapter"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.mkvmuxer::Tag"* @_ZN8mkvmuxer7Segment6AddTagEv(%"class.mkvmuxer::Segment"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZN8mkvmuxer4Tags15ExpandTagsArrayEv(%"class.mkvmuxer::Tags"* %2) #20
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7, i32 2
  %6 = load %"class.mkvmuxer::Tag"*, %"class.mkvmuxer::Tag"** %5, align 8
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds %"class.mkvmuxer::Tag", %"class.mkvmuxer::Tag"* %6, i64 %10
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi %"class.mkvmuxer::Tag"* [ %11, %4 ], [ null, %1 ]
  ret %"class.mkvmuxer::Tag"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer7Segment13AddVideoTrackEiii(%"class.mkvmuxer::Segment"*, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 248, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %6 = icmp eq i8* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %"class.mkvmuxer::VideoTrack"*
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 0
  %10 = bitcast i8* %5 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = getelementptr inbounds i8, i8* %5, i64 64
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #20
  %15 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %9) #20
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer10VideoTrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 128, i1 false) #20
  %18 = bitcast i8* %5 to %"class.mkvmuxer::Track"*
  %19 = getelementptr inbounds i8, i8* %5, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 1, i64* %20, align 8
  %21 = bitcast i8* %11 to i8**
  %22 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %22, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN8mkvmuxer6Tracks11kVp8CodecIdE, i64 0, i64 0), i64 6, i1 false)
  br label %25

25:                                               ; preds = %7, %24
  %26 = sext i32 %1 to i64
  %27 = getelementptr inbounds i8, i8* %5, i64 216
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = sext i32 %2 to i64
  %30 = getelementptr inbounds i8, i8* %5, i64 192
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5
  %33 = tail call zeroext i1 @_ZN8mkvmuxer6Tracks8AddTrackEPNS_5TrackEi(%"class.mkvmuxer::Tracks"* %32, %"class.mkvmuxer::Track"* nonnull %18, i32 %3)
  br i1 %33, label %39, label %34

34:                                               ; preds = %25
  %35 = bitcast i8* %5 to void (%"class.mkvmuxer::VideoTrack"*)***
  %36 = load void (%"class.mkvmuxer::VideoTrack"*)**, void (%"class.mkvmuxer::VideoTrack"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.mkvmuxer::VideoTrack"*)*, void (%"class.mkvmuxer::VideoTrack"*)** %36, i64 1
  %38 = load void (%"class.mkvmuxer::VideoTrack"*)*, void (%"class.mkvmuxer::VideoTrack"*)** %37, align 8
  tail call void %38(%"class.mkvmuxer::VideoTrack"* nonnull %8) #20
  br label %44

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 25
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds i8, i8* %5, i64 48
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %4, %39, %34
  %45 = phi i64 [ %43, %39 ], [ 0, %34 ], [ 0, %4 ]
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment11AddCuePointEmm(%"class.mkvmuxer::Segment"* nocapture, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %240, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %9 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %8, align 8
  %10 = add nsw i32 %5, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %9, i64 %11
  %13 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %12, align 8
  %14 = icmp eq %"class.mkvmuxer::Cluster"* %13, null
  br i1 %14, label %240, label %15

15:                                               ; preds = %7
  %16 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 40, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %17 = icmp eq i8* %16, null
  br i1 %17, label %240, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %16, i64 24
  %20 = bitcast i8* %19 to i64*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #20
  store i64 1, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 32
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = udiv i64 %1, %24
  %26 = bitcast i8* %16 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %13, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  store i64 %29, i64* %20, align 8
  %30 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %13, i64 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %16, i64 16
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %16, i64 8
  %35 = bitcast i8* %34 to i64*
  store i64 %2, i64* %35, align 8
  %36 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %37, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %18
  %42 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  %43 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %42, align 8
  br label %230

44:                                               ; preds = %18
  %45 = icmp eq i32 %39, 0
  %46 = shl nsw i32 %39, 1
  %47 = select i1 %45, i32 2, i32 %46
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %229, label %49

49:                                               ; preds = %44
  %50 = sext i32 %47 to i64
  %51 = shl nuw nsw i64 %50, 3
  %52 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %51, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %53 = bitcast i8* %52 to %"class.mkvmuxer::CuePoint"**
  %54 = icmp eq i8* %52, null
  br i1 %54, label %229, label %55

55:                                               ; preds = %49
  %56 = icmp sgt i32 %37, 0
  %57 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 2
  %58 = load %"class.mkvmuxer::CuePoint"**, %"class.mkvmuxer::CuePoint"*** %57, align 8
  %59 = bitcast %"class.mkvmuxer::CuePoint"** %58 to i8*
  br i1 %56, label %60, label %171

60:                                               ; preds = %55
  %61 = zext i32 %37 to i64
  %62 = icmp ult i32 %37, 4
  br i1 %62, label %63, label %84

63:                                               ; preds = %169, %84, %60
  %64 = phi i64 [ 0, %84 ], [ 0, %60 ], [ %93, %169 ]
  %65 = sub nsw i64 %61, %64
  %66 = xor i64 %64, -1
  %67 = add nsw i64 %66, %61
  %68 = and i64 %65, 7
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %63, %70
  %71 = phi i64 [ %78, %70 ], [ %64, %63 ]
  %72 = phi i64 [ %79, %70 ], [ %68, %63 ]
  %73 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %71
  %74 = bitcast %"class.mkvmuxer::CuePoint"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %71
  %77 = bitcast %"class.mkvmuxer::CuePoint"** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = add nuw nsw i64 %71, 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %70, !llvm.loop !62

81:                                               ; preds = %70, %63
  %82 = phi i64 [ %64, %63 ], [ %78, %70 ]
  %83 = icmp ult i64 %67, 7
  br i1 %83, label %171, label %173

84:                                               ; preds = %60
  %85 = shl nuw nsw i64 %61, 3
  %86 = getelementptr i8, i8* %52, i64 %85
  %87 = getelementptr %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %61
  %88 = bitcast %"class.mkvmuxer::CuePoint"** %87 to i8*
  %89 = icmp ult i8* %52, %88
  %90 = icmp ugt i8* %86, %59
  %91 = and i1 %89, %90
  br i1 %91, label %63, label %92

92:                                               ; preds = %84
  %93 = and i64 %61, 4294967292
  %94 = add nsw i64 %93, -4
  %95 = lshr exact i64 %94, 2
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 12
  br i1 %98, label %150, label %99

99:                                               ; preds = %92
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %147, %101 ]
  %103 = phi i64 [ %100, %99 ], [ %148, %101 ]
  %104 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %102
  %105 = bitcast %"class.mkvmuxer::CuePoint"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !63
  %107 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %104, i64 2
  %108 = bitcast %"class.mkvmuxer::CuePoint"** %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !63
  %110 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %102
  %111 = bitcast %"class.mkvmuxer::CuePoint"** %110 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %111, align 8, !alias.scope !66, !noalias !63
  %112 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %110, i64 2
  %113 = bitcast %"class.mkvmuxer::CuePoint"** %112 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %113, align 8, !alias.scope !66, !noalias !63
  %114 = or i64 %102, 4
  %115 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %114
  %116 = bitcast %"class.mkvmuxer::CuePoint"** %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8, !alias.scope !63
  %118 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %115, i64 2
  %119 = bitcast %"class.mkvmuxer::CuePoint"** %118 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !alias.scope !63
  %121 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %114
  %122 = bitcast %"class.mkvmuxer::CuePoint"** %121 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %122, align 8, !alias.scope !66, !noalias !63
  %123 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %121, i64 2
  %124 = bitcast %"class.mkvmuxer::CuePoint"** %123 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %124, align 8, !alias.scope !66, !noalias !63
  %125 = or i64 %102, 8
  %126 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %125
  %127 = bitcast %"class.mkvmuxer::CuePoint"** %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !63
  %129 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %126, i64 2
  %130 = bitcast %"class.mkvmuxer::CuePoint"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !63
  %132 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %125
  %133 = bitcast %"class.mkvmuxer::CuePoint"** %132 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %133, align 8, !alias.scope !66, !noalias !63
  %134 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %132, i64 2
  %135 = bitcast %"class.mkvmuxer::CuePoint"** %134 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !66, !noalias !63
  %136 = or i64 %102, 12
  %137 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %136
  %138 = bitcast %"class.mkvmuxer::CuePoint"** %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 8, !alias.scope !63
  %140 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %137, i64 2
  %141 = bitcast %"class.mkvmuxer::CuePoint"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !63
  %143 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %136
  %144 = bitcast %"class.mkvmuxer::CuePoint"** %143 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %144, align 8, !alias.scope !66, !noalias !63
  %145 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %143, i64 2
  %146 = bitcast %"class.mkvmuxer::CuePoint"** %145 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !66, !noalias !63
  %147 = add i64 %102, 16
  %148 = add i64 %103, -4
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %101, !llvm.loop !68

150:                                              ; preds = %101, %92
  %151 = phi i64 [ 0, %92 ], [ %147, %101 ]
  %152 = icmp eq i64 %97, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %166, %153 ], [ %151, %150 ]
  %155 = phi i64 [ %167, %153 ], [ %97, %150 ]
  %156 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %154
  %157 = bitcast %"class.mkvmuxer::CuePoint"** %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !63
  %159 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %156, i64 2
  %160 = bitcast %"class.mkvmuxer::CuePoint"** %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !alias.scope !63
  %162 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %154
  %163 = bitcast %"class.mkvmuxer::CuePoint"** %162 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %163, align 8, !alias.scope !66, !noalias !63
  %164 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %162, i64 2
  %165 = bitcast %"class.mkvmuxer::CuePoint"** %164 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %165, align 8, !alias.scope !66, !noalias !63
  %166 = add i64 %154, 4
  %167 = add i64 %155, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !69

169:                                              ; preds = %153, %150
  %170 = icmp eq i64 %93, %61
  br i1 %170, label %171, label %63

171:                                              ; preds = %81, %173, %169, %55
  %172 = icmp eq %"class.mkvmuxer::CuePoint"** %58, null
  br i1 %172, label %226, label %224

173:                                              ; preds = %81, %173
  %174 = phi i64 [ %222, %173 ], [ %82, %81 ]
  %175 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %174
  %176 = bitcast %"class.mkvmuxer::CuePoint"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %174
  %179 = bitcast %"class.mkvmuxer::CuePoint"** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = add nuw nsw i64 %174, 1
  %181 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %180
  %182 = bitcast %"class.mkvmuxer::CuePoint"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %180
  %185 = bitcast %"class.mkvmuxer::CuePoint"** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = add nuw nsw i64 %174, 2
  %187 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %186
  %188 = bitcast %"class.mkvmuxer::CuePoint"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %186
  %191 = bitcast %"class.mkvmuxer::CuePoint"** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = add nuw nsw i64 %174, 3
  %193 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %192
  %194 = bitcast %"class.mkvmuxer::CuePoint"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %192
  %197 = bitcast %"class.mkvmuxer::CuePoint"** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = add nuw nsw i64 %174, 4
  %199 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %198
  %200 = bitcast %"class.mkvmuxer::CuePoint"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %198
  %203 = bitcast %"class.mkvmuxer::CuePoint"** %202 to i64*
  store i64 %201, i64* %203, align 8
  %204 = add nuw nsw i64 %174, 5
  %205 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %204
  %206 = bitcast %"class.mkvmuxer::CuePoint"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %204
  %209 = bitcast %"class.mkvmuxer::CuePoint"** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = add nuw nsw i64 %174, 6
  %211 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %210
  %212 = bitcast %"class.mkvmuxer::CuePoint"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %210
  %215 = bitcast %"class.mkvmuxer::CuePoint"** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = add nuw nsw i64 %174, 7
  %217 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %58, i64 %216
  %218 = bitcast %"class.mkvmuxer::CuePoint"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %53, i64 %216
  %221 = bitcast %"class.mkvmuxer::CuePoint"** %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = add nuw nsw i64 %174, 8
  %223 = icmp eq i64 %222, %61
  br i1 %223, label %171, label %173, !llvm.loop !70

224:                                              ; preds = %171
  tail call void @_ZdaPv(i8* %59) #21
  %225 = load i32, i32* %36, align 4
  br label %226

226:                                              ; preds = %224, %171
  %227 = phi i32 [ %225, %224 ], [ %37, %171 ]
  %228 = bitcast %"class.mkvmuxer::CuePoint"*** %57 to i8**
  store i8* %52, i8** %228, align 8
  store i32 %47, i32* %38, align 8
  br label %230

229:                                              ; preds = %44, %49
  tail call void @_ZdlPv(i8* nonnull %16) #21
  br label %240

230:                                              ; preds = %41, %226
  %231 = phi i32 [ %37, %41 ], [ %227, %226 ]
  %232 = phi %"class.mkvmuxer::CuePoint"** [ %43, %41 ], [ %53, %226 ]
  %233 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 2, i32 3
  %234 = load i8, i8* %233, align 8, !range !2
  store i8 %234, i8* %22, align 8
  %235 = add nsw i32 %231, 1
  store i32 %235, i32* %36, align 4
  %236 = sext i32 %231 to i64
  %237 = getelementptr inbounds %"class.mkvmuxer::CuePoint"*, %"class.mkvmuxer::CuePoint"** %232, i64 %236
  %238 = bitcast %"class.mkvmuxer::CuePoint"** %237 to i8**
  store i8* %16, i8** %238, align 8
  %239 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  store i8 0, i8* %239, align 4
  br label %240

240:                                              ; preds = %15, %7, %230, %229, %3
  %241 = phi i1 [ false, %3 ], [ false, %7 ], [ true, %230 ], [ false, %229 ], [ false, %15 ]
  ret i1 %241
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8mkvmuxer7Segment13AddAudioTrackEiii(%"class.mkvmuxer::Segment"*, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 144, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %6 = icmp eq i8* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %"class.mkvmuxer::AudioTrack"*
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 0
  %10 = bitcast i8* %5 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = getelementptr inbounds i8, i8* %5, i64 64
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #20
  %15 = tail call i64 @_ZN8mkvmuxer7MakeUIDEPj(i32* %9) #20
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8mkvmuxer10AudioTrackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 120
  %18 = getelementptr inbounds i8, i8* %5, i64 128
  %19 = bitcast i8* %18 to i64*
  %20 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 136
  %22 = bitcast i8* %21 to double*
  store double 0.000000e+00, double* %22, align 8
  %23 = bitcast i8* %5 to %"class.mkvmuxer::Track"*
  %24 = getelementptr inbounds i8, i8* %5, i64 56
  %25 = bitcast i8* %24 to i64*
  store i64 2, i64* %25, align 8
  %26 = bitcast i8* %11 to i8**
  %27 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 9, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  store i8* %27, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8mkvmuxer6Tracks14kVorbisCodecIdE, i64 0, i64 0), i64 9, i1 false)
  br label %30

30:                                               ; preds = %7, %29
  %31 = sitofp i32 %1 to double
  store double %31, double* %22, align 8
  %32 = sext i32 %2 to i64
  store i64 %32, i64* %19, align 8
  %33 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5
  %34 = tail call zeroext i1 @_ZN8mkvmuxer6Tracks8AddTrackEPNS_5TrackEi(%"class.mkvmuxer::Tracks"* %33, %"class.mkvmuxer::Track"* nonnull %23, i32 %3)
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = bitcast i8* %5 to void (%"class.mkvmuxer::AudioTrack"*)***
  %37 = load void (%"class.mkvmuxer::AudioTrack"*)**, void (%"class.mkvmuxer::AudioTrack"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.mkvmuxer::AudioTrack"*)*, void (%"class.mkvmuxer::AudioTrack"*)** %37, i64 1
  %39 = load void (%"class.mkvmuxer::AudioTrack"*)*, void (%"class.mkvmuxer::AudioTrack"*)** %38, align 8
  tail call void %39(%"class.mkvmuxer::AudioTrack"* nonnull %8) #20
  br label %44

40:                                               ; preds = %30
  %41 = getelementptr inbounds i8, i8* %5, i64 48
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %4, %40, %35
  %45 = phi i64 [ %43, %40 ], [ 0, %35 ], [ 0, %4 ]
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment8AddFrameEPKhmmmb(%"class.mkvmuxer::Segment"*, i8* readonly, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.mkvmuxer::Frame", align 8
  %8 = icmp eq i8* %1, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.mkvmuxer::Frame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 104, i1 false)
  %11 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 6
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 7
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 33, i1 false) #20
  %14 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 41, i1 false) #20
  %15 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %16 = icmp eq i8* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %9
  store i8* %15, i8** %11, align 8
  store i64 %2, i64* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* nonnull align 1 %1, i64 %2, i1 false) #20
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 10
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 11
  store i64 %4, i64* %19, align 8
  %20 = zext i1 %5 to i8
  store i8 %20, i8* %12, align 8
  %21 = call zeroext i1 @_ZN8mkvmuxer7Segment15AddGenericFrameEPKNS_5FrameE(%"class.mkvmuxer::Segment"* %0, %"class.mkvmuxer::Frame"* nonnull %7)
  %22 = load i8*, i8** %11, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @_ZdaPv(i8* nonnull %22) #21
  br label %25

25:                                               ; preds = %9, %24, %17
  %26 = phi i1 [ %21, %24 ], [ %21, %17 ], [ false, %9 ]
  %27 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZdaPv(i8* nonnull %28) #21
  br label %31

31:                                               ; preds = %25, %30
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #20
  br label %32

32:                                               ; preds = %6, %31
  %33 = phi i1 [ %26, %31 ], [ false, %6 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment15AddGenericFrameEPKNS_5FrameE(%"class.mkvmuxer::Segment"*, %"class.mkvmuxer::Frame"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.mkvmuxer::Frame"* %1, null
  br i1 %3, label %441, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN8mkvmuxer7Segment15CheckHeaderInfoEv(%"class.mkvmuxer::Segment"* %0)
  br i1 %5, label %6, label %441

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 11
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 28
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %441, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 10
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %441

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %19, align 8
  %21 = zext i32 %16 to i64
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq i64 %31, %21
  br i1 %23, label %441, label %24

24:                                               ; preds = %22, %18
  %25 = phi i64 [ 0, %18 ], [ %31, %22 ]
  %26 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %20, i64 %25
  %27 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %26, align 8
  %28 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %27, i64 0, i32 6
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, %14
  %31 = add nuw nsw i64 %25, 1
  br i1 %30, label %32, label %22

32:                                               ; preds = %24
  %33 = icmp eq %"class.mkvmuxer::Track"* %27, null
  br i1 %33, label %441, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 12
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  store i32 4, i32* %39, align 8
  br label %40

40:                                               ; preds = %34, %38
  %41 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = load i64, i64* %7, align 8
  %48 = udiv i64 %47, %46
  %49 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %50 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %49, align 8
  %51 = add nsw i32 %42, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %50, i64 %52
  %54 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %53, align 8
  %55 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %54, i64 0, i32 7
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %48, %56
  %58 = icmp ugt i64 %57, 32767
  br i1 %58, label %59, label %61

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  store i8 1, i8* %60, align 8
  br label %61

61:                                               ; preds = %44, %59, %40
  %62 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 25
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  %65 = load i64, i64* %13, align 8
  br i1 %64, label %327, label %68

66:                                               ; preds = %68
  %67 = icmp eq i64 %75, %21
  br i1 %67, label %76, label %68

68:                                               ; preds = %61, %66
  %69 = phi i64 [ %75, %66 ], [ 0, %61 ]
  %70 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %20, i64 %69
  %71 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %70, align 8
  %72 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %71, i64 0, i32 6
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %65
  %75 = add nuw nsw i64 %69, 1
  br i1 %74, label %76, label %66

76:                                               ; preds = %66, %68
  %77 = phi %"class.mkvmuxer::Track"* [ %71, %68 ], [ null, %66 ]
  %78 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %77, i64 0, i32 7
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 2
  br i1 %80, label %81, label %327

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %327

85:                                               ; preds = %81
  %86 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 104, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %87 = icmp eq i8* %86, null
  br i1 %87, label %441, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds i8, i8* %86, i64 40
  %90 = bitcast i8* %89 to i8**
  store i8* null, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %86, i64 48
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds i8, i8* %86, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 33, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 41, i1 false) #20
  %93 = bitcast i8* %86 to %"class.mkvmuxer::Frame"*
  %94 = tail call zeroext i1 @_ZN8mkvmuxer5Frame8CopyFromERKS0_(%"class.mkvmuxer::Frame"* nonnull %93, %"class.mkvmuxer::Frame"* nonnull dereferenceable(104) %1)
  br i1 %94, label %108, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds i8, i8* %86, i64 40
  %97 = bitcast i8* %96 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %95
  tail call void @_ZdaPv(i8* nonnull %98) #21
  br label %101

101:                                              ; preds = %100, %95
  %102 = getelementptr inbounds i8, i8* %86, i64 8
  %103 = bitcast i8* %102 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  tail call void @_ZdaPv(i8* nonnull %104) #21
  br label %107

107:                                              ; preds = %101, %106
  tail call void @_ZdlPv(i8* nonnull %86) #21
  br label %441

108:                                              ; preds = %88
  %109 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 23
  %112 = load i32, i32* %111, align 8
  %113 = icmp slt i32 %110, %112
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %116 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %115, align 8
  br label %315

117:                                              ; preds = %108
  %118 = icmp eq i32 %112, 0
  %119 = shl nsw i32 %112, 1
  %120 = select i1 %118, i32 2, i32 %119
  %121 = icmp slt i32 %120, 1
  br i1 %121, label %302, label %122

122:                                              ; preds = %117
  %123 = sext i32 %120 to i64
  %124 = shl nuw nsw i64 %123, 3
  %125 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %124, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %126 = bitcast i8* %125 to %"class.mkvmuxer::Frame"**
  %127 = icmp eq i8* %125, null
  br i1 %127, label %302, label %128

128:                                              ; preds = %122
  %129 = icmp sgt i32 %110, 0
  %130 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %131 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %130, align 8
  %132 = bitcast %"class.mkvmuxer::Frame"** %131 to i8*
  br i1 %129, label %133, label %244

133:                                              ; preds = %128
  %134 = zext i32 %110 to i64
  %135 = icmp ult i32 %110, 4
  br i1 %135, label %136, label %157

136:                                              ; preds = %242, %157, %133
  %137 = phi i64 [ 0, %157 ], [ 0, %133 ], [ %166, %242 ]
  %138 = sub nsw i64 %134, %137
  %139 = xor i64 %137, -1
  %140 = add nsw i64 %139, %134
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %151, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %146 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %144
  %147 = bitcast %"class.mkvmuxer::Frame"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %144
  %150 = bitcast %"class.mkvmuxer::Frame"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = add nuw nsw i64 %144, 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !71

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %151, %143 ]
  %156 = icmp ult i64 %140, 7
  br i1 %156, label %244, label %246

157:                                              ; preds = %133
  %158 = shl nuw nsw i64 %134, 3
  %159 = getelementptr i8, i8* %125, i64 %158
  %160 = getelementptr %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %134
  %161 = bitcast %"class.mkvmuxer::Frame"** %160 to i8*
  %162 = icmp ult i8* %125, %161
  %163 = icmp ugt i8* %159, %132
  %164 = and i1 %162, %163
  br i1 %164, label %136, label %165

165:                                              ; preds = %157
  %166 = and i64 %134, 4294967292
  %167 = add nsw i64 %166, -4
  %168 = lshr exact i64 %167, 2
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp ult i64 %167, 12
  br i1 %171, label %223, label %172

172:                                              ; preds = %165
  %173 = sub nsw i64 %169, %170
  br label %174

174:                                              ; preds = %174, %172
  %175 = phi i64 [ 0, %172 ], [ %220, %174 ]
  %176 = phi i64 [ %173, %172 ], [ %221, %174 ]
  %177 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %175
  %178 = bitcast %"class.mkvmuxer::Frame"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !72
  %180 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %177, i64 2
  %181 = bitcast %"class.mkvmuxer::Frame"** %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !72
  %183 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %175
  %184 = bitcast %"class.mkvmuxer::Frame"** %183 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %184, align 8, !alias.scope !75, !noalias !72
  %185 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %183, i64 2
  %186 = bitcast %"class.mkvmuxer::Frame"** %185 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %186, align 8, !alias.scope !75, !noalias !72
  %187 = or i64 %175, 4
  %188 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %187
  %189 = bitcast %"class.mkvmuxer::Frame"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !72
  %191 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %188, i64 2
  %192 = bitcast %"class.mkvmuxer::Frame"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !72
  %194 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %187
  %195 = bitcast %"class.mkvmuxer::Frame"** %194 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %195, align 8, !alias.scope !75, !noalias !72
  %196 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %194, i64 2
  %197 = bitcast %"class.mkvmuxer::Frame"** %196 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %197, align 8, !alias.scope !75, !noalias !72
  %198 = or i64 %175, 8
  %199 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %198
  %200 = bitcast %"class.mkvmuxer::Frame"** %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !72
  %202 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %199, i64 2
  %203 = bitcast %"class.mkvmuxer::Frame"** %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !72
  %205 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %198
  %206 = bitcast %"class.mkvmuxer::Frame"** %205 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %206, align 8, !alias.scope !75, !noalias !72
  %207 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %205, i64 2
  %208 = bitcast %"class.mkvmuxer::Frame"** %207 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %208, align 8, !alias.scope !75, !noalias !72
  %209 = or i64 %175, 12
  %210 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %209
  %211 = bitcast %"class.mkvmuxer::Frame"** %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !72
  %213 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %210, i64 2
  %214 = bitcast %"class.mkvmuxer::Frame"** %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !72
  %216 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %209
  %217 = bitcast %"class.mkvmuxer::Frame"** %216 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !75, !noalias !72
  %218 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %216, i64 2
  %219 = bitcast %"class.mkvmuxer::Frame"** %218 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %219, align 8, !alias.scope !75, !noalias !72
  %220 = add i64 %175, 16
  %221 = add i64 %176, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %174, !llvm.loop !77

223:                                              ; preds = %174, %165
  %224 = phi i64 [ 0, %165 ], [ %220, %174 ]
  %225 = icmp eq i64 %170, 0
  br i1 %225, label %242, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %239, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %240, %226 ], [ %170, %223 ]
  %229 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %227
  %230 = bitcast %"class.mkvmuxer::Frame"** %229 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 8, !alias.scope !72
  %232 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %229, i64 2
  %233 = bitcast %"class.mkvmuxer::Frame"** %232 to <2 x i64>*
  %234 = load <2 x i64>, <2 x i64>* %233, align 8, !alias.scope !72
  %235 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %227
  %236 = bitcast %"class.mkvmuxer::Frame"** %235 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %236, align 8, !alias.scope !75, !noalias !72
  %237 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %235, i64 2
  %238 = bitcast %"class.mkvmuxer::Frame"** %237 to <2 x i64>*
  store <2 x i64> %234, <2 x i64>* %238, align 8, !alias.scope !75, !noalias !72
  %239 = add i64 %227, 4
  %240 = add i64 %228, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %226, !llvm.loop !78

242:                                              ; preds = %226, %223
  %243 = icmp eq i64 %166, %134
  br i1 %243, label %244, label %136

244:                                              ; preds = %154, %246, %242, %128
  %245 = icmp eq %"class.mkvmuxer::Frame"** %131, null
  br i1 %245, label %299, label %297

246:                                              ; preds = %154, %246
  %247 = phi i64 [ %295, %246 ], [ %155, %154 ]
  %248 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %247
  %249 = bitcast %"class.mkvmuxer::Frame"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %247
  %252 = bitcast %"class.mkvmuxer::Frame"** %251 to i64*
  store i64 %250, i64* %252, align 8
  %253 = add nuw nsw i64 %247, 1
  %254 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %253
  %255 = bitcast %"class.mkvmuxer::Frame"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %253
  %258 = bitcast %"class.mkvmuxer::Frame"** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = add nuw nsw i64 %247, 2
  %260 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %259
  %261 = bitcast %"class.mkvmuxer::Frame"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %259
  %264 = bitcast %"class.mkvmuxer::Frame"** %263 to i64*
  store i64 %262, i64* %264, align 8
  %265 = add nuw nsw i64 %247, 3
  %266 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %265
  %267 = bitcast %"class.mkvmuxer::Frame"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %265
  %270 = bitcast %"class.mkvmuxer::Frame"** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = add nuw nsw i64 %247, 4
  %272 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %271
  %273 = bitcast %"class.mkvmuxer::Frame"** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %271
  %276 = bitcast %"class.mkvmuxer::Frame"** %275 to i64*
  store i64 %274, i64* %276, align 8
  %277 = add nuw nsw i64 %247, 5
  %278 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %277
  %279 = bitcast %"class.mkvmuxer::Frame"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %277
  %282 = bitcast %"class.mkvmuxer::Frame"** %281 to i64*
  store i64 %280, i64* %282, align 8
  %283 = add nuw nsw i64 %247, 6
  %284 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %283
  %285 = bitcast %"class.mkvmuxer::Frame"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %283
  %288 = bitcast %"class.mkvmuxer::Frame"** %287 to i64*
  store i64 %286, i64* %288, align 8
  %289 = add nuw nsw i64 %247, 7
  %290 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %131, i64 %289
  %291 = bitcast %"class.mkvmuxer::Frame"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %126, i64 %289
  %294 = bitcast %"class.mkvmuxer::Frame"** %293 to i64*
  store i64 %292, i64* %294, align 8
  %295 = add nuw nsw i64 %247, 8
  %296 = icmp eq i64 %295, %134
  br i1 %296, label %244, label %246, !llvm.loop !79

297:                                              ; preds = %244
  tail call void @_ZdaPv(i8* %132) #21
  %298 = load i32, i32* %109, align 4
  br label %299

299:                                              ; preds = %297, %244
  %300 = phi i32 [ %110, %244 ], [ %298, %297 ]
  %301 = bitcast %"class.mkvmuxer::Frame"*** %130 to i8**
  store i8* %125, i8** %301, align 8
  store i32 %120, i32* %111, align 8
  br label %315

302:                                              ; preds = %117, %122
  %303 = getelementptr inbounds i8, i8* %86, i64 40
  %304 = bitcast i8* %303 to i8**
  %305 = load i8*, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %302
  tail call void @_ZdaPv(i8* nonnull %305) #21
  br label %308

308:                                              ; preds = %307, %302
  %309 = getelementptr inbounds i8, i8* %86, i64 8
  %310 = bitcast i8* %309 to i8**
  %311 = load i8*, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %314, label %313

313:                                              ; preds = %308
  tail call void @_ZdaPv(i8* nonnull %311) #21
  br label %314

314:                                              ; preds = %308, %313
  tail call void @_ZdlPv(i8* nonnull %86) #21
  br label %441

315:                                              ; preds = %299, %114
  %316 = phi i32 [ %110, %114 ], [ %300, %299 ]
  %317 = phi %"class.mkvmuxer::Frame"** [ %116, %114 ], [ %126, %299 ]
  %318 = add nsw i32 %316, 1
  store i32 %318, i32* %109, align 4
  %319 = sext i32 %316 to i64
  %320 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %317, i64 %319
  %321 = bitcast %"class.mkvmuxer::Frame"** %320 to i8**
  store i8* %86, i8** %321, align 8
  %322 = load i64, i64* %13, align 8
  %323 = add i64 %322, -1
  %324 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 30, i64 %323
  %325 = load i64, i64* %324, align 8
  %326 = add i64 %325, 1
  store i64 %326, i64* %324, align 8
  br label %441

327:                                              ; preds = %61, %81, %76
  %328 = load i64, i64* %7, align 8
  %329 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 7
  %330 = load i8, i8* %329, align 8, !range !2
  %331 = icmp ne i8 %330, 0
  %332 = tail call zeroext i1 @_ZN8mkvmuxer7Segment22DoNewClusterProcessingEmmb(%"class.mkvmuxer::Segment"* %0, i64 %65, i64 %328, i1 zeroext %331)
  br i1 %332, label %333, label %441

333:                                              ; preds = %327
  %334 = load i32, i32* %41, align 4
  %335 = icmp slt i32 %334, 1
  br i1 %335, label %441, label %336

336:                                              ; preds = %333
  %337 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %338 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %337, align 8
  %339 = add nsw i32 %334, -1
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %338, i64 %340
  %342 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %341, align 8
  %343 = icmp eq %"class.mkvmuxer::Cluster"* %342, null
  br i1 %343, label %441, label %344

344:                                              ; preds = %336
  %345 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 1
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %348, label %355

348:                                              ; preds = %344
  %349 = load i64, i64* %35, align 8
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %355

351:                                              ; preds = %348
  %352 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 3
  %353 = load i64, i64* %352, align 8
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %393, label %355

355:                                              ; preds = %344, %348, %351
  %356 = load i8, i8* %329, align 8, !range !2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %358, label %393

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %1, i64 0, i32 14
  %360 = load i8, i8* %359, align 8, !range !2
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %393

362:                                              ; preds = %358
  %363 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 104, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %364 = icmp eq i8* %363, null
  br i1 %364, label %441, label %365

365:                                              ; preds = %362
  %366 = bitcast i8* %363 to %"class.mkvmuxer::Frame"*
  %367 = getelementptr inbounds i8, i8* %363, i64 40
  %368 = bitcast i8* %367 to i8**
  store i8* null, i8** %368, align 8
  %369 = getelementptr inbounds i8, i8* %363, i64 48
  store i8 0, i8* %369, align 8
  %370 = getelementptr inbounds i8, i8* %363, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 0, i64 33, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %370, i8 0, i64 41, i1 false) #20
  %371 = tail call zeroext i1 @_ZN8mkvmuxer5Frame8CopyFromERKS0_(%"class.mkvmuxer::Frame"* nonnull %366, %"class.mkvmuxer::Frame"* nonnull dereferenceable(104) %1)
  br i1 %371, label %385, label %372

372:                                              ; preds = %365
  %373 = getelementptr inbounds i8, i8* %363, i64 40
  %374 = bitcast i8* %373 to i8**
  %375 = load i8*, i8** %374, align 8
  %376 = icmp eq i8* %375, null
  br i1 %376, label %378, label %377

377:                                              ; preds = %372
  tail call void @_ZdaPv(i8* nonnull %375) #21
  br label %378

378:                                              ; preds = %377, %372
  %379 = getelementptr inbounds i8, i8* %363, i64 8
  %380 = bitcast i8* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %384, label %383

383:                                              ; preds = %378
  tail call void @_ZdaPv(i8* nonnull %381) #21
  br label %384

384:                                              ; preds = %378, %383
  tail call void @_ZdlPv(i8* nonnull %363) #21
  br label %441

385:                                              ; preds = %365
  %386 = load i64, i64* %13, align 8
  %387 = add i64 %386, -1
  %388 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29, i64 %387
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds i8, i8* %363, i64 88
  %391 = bitcast i8* %390 to i64*
  store i64 %389, i64* %391, align 8
  %392 = getelementptr inbounds i8, i8* %363, i64 96
  store i8 1, i8* %392, align 8
  br label %393

393:                                              ; preds = %358, %355, %385, %351
  %394 = phi %"class.mkvmuxer::Frame"* [ %1, %351 ], [ %1, %355 ], [ %1, %358 ], [ %366, %385 ]
  %395 = phi i1 [ true, %351 ], [ true, %355 ], [ true, %358 ], [ false, %385 ]
  %396 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* nonnull %342, %"class.mkvmuxer::Frame"* %394) #20
  br i1 %396, label %397, label %441

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  %399 = load i8, i8* %398, align 4, !range !2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %411, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  %403 = load i64, i64* %402, align 8
  %404 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 10
  %405 = load i64, i64* %404, align 8
  %406 = icmp eq i64 %403, %405
  br i1 %406, label %407, label %411

407:                                              ; preds = %401
  %408 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 11
  %409 = load i64, i64* %408, align 8
  %410 = tail call zeroext i1 @_ZN8mkvmuxer7Segment11AddCuePointEmm(%"class.mkvmuxer::Segment"* %0, i64 %409, i64 %403)
  br i1 %410, label %411, label %441

411:                                              ; preds = %397, %407, %401
  %412 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 11
  %413 = load i64, i64* %412, align 8
  store i64 %413, i64* %9, align 8
  %414 = load i64, i64* %412, align 8
  %415 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 10
  %416 = load i64, i64* %415, align 8
  %417 = add i64 %416, -1
  %418 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29, i64 %417
  store i64 %414, i64* %418, align 8
  %419 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 3
  %420 = load i64, i64* %419, align 8
  %421 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 27
  store i64 %420, i64* %421, align 8
  %422 = load i64, i64* %415, align 8
  %423 = add i64 %422, -1
  %424 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 30, i64 %423
  %425 = load i64, i64* %424, align 8
  %426 = add i64 %425, 1
  store i64 %426, i64* %424, align 8
  %427 = icmp eq %"class.mkvmuxer::Frame"* %394, null
  %428 = or i1 %395, %427
  br i1 %428, label %441, label %429

429:                                              ; preds = %411
  %430 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 6
  %431 = load i8*, i8** %430, align 8
  %432 = icmp eq i8* %431, null
  br i1 %432, label %434, label %433

433:                                              ; preds = %429
  tail call void @_ZdaPv(i8* nonnull %431) #21
  br label %434

434:                                              ; preds = %433, %429
  %435 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %394, i64 0, i32 1
  %436 = load i8*, i8** %435, align 8
  %437 = icmp eq i8* %436, null
  br i1 %437, label %439, label %438

438:                                              ; preds = %434
  tail call void @_ZdaPv(i8* nonnull %436) #21
  br label %439

439:                                              ; preds = %434, %438
  %440 = bitcast %"class.mkvmuxer::Frame"* %394 to i8*
  tail call void @_ZdlPv(i8* %440) #21
  br label %441

441:                                              ; preds = %22, %362, %85, %384, %12, %336, %439, %411, %407, %393, %333, %327, %314, %315, %107, %32, %6, %4, %2
  %442 = phi i1 [ false, %2 ], [ false, %4 ], [ false, %6 ], [ false, %32 ], [ true, %315 ], [ false, %314 ], [ false, %107 ], [ false, %327 ], [ false, %333 ], [ false, %336 ], [ false, %393 ], [ false, %407 ], [ true, %411 ], [ true, %439 ], [ false, %12 ], [ false, %384 ], [ false, %85 ], [ false, %362 ], [ false, %22 ]
  ret i1 %442
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment22AddFrameWithAdditionalEPKhmS2_mmmmb(%"class.mkvmuxer::Segment"*, i8* readonly, i64, i8* readonly, i64, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %10 = alloca %"class.mkvmuxer::Frame", align 8
  %11 = icmp ne i8* %1, null
  %12 = icmp ne i8* %3, null
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %45

14:                                               ; preds = %9
  %15 = bitcast %"class.mkvmuxer::Frame"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %15) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 104, i1 false)
  %16 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 6
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 7
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 33, i1 false) #20
  %19 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 41, i1 false) #20
  %20 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %21 = icmp eq i8* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %14
  store i8* %20, i8** %16, align 8
  store i64 %2, i64* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* nonnull align 1 %1, i64 %2, i1 false) #20
  %23 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %4, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %24 = icmp eq i8* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 1
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 2
  store i64 %4, i64* %27, align 8
  %28 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 0
  store i64 %5, i64* %28, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* nonnull align 1 %3, i64 %4, i1 false) #20
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 10
  store i64 %6, i64* %29, align 8
  %30 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 11
  store i64 %7, i64* %30, align 8
  %31 = zext i1 %8 to i8
  store i8 %31, i8* %17, align 8
  %32 = call zeroext i1 @_ZN8mkvmuxer7Segment15AddGenericFrameEPKNS_5FrameE(%"class.mkvmuxer::Segment"* %0, %"class.mkvmuxer::Frame"* nonnull %10)
  %33 = load i8*, i8** %16, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %22, %25
  %36 = phi i1 [ %32, %25 ], [ false, %22 ]
  %37 = phi i8* [ %33, %25 ], [ %20, %22 ]
  call void @_ZdaPv(i8* nonnull %37) #21
  br label %38

38:                                               ; preds = %14, %35, %25
  %39 = phi i1 [ %36, %35 ], [ %32, %25 ], [ false, %14 ]
  %40 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %10, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @_ZdaPv(i8* nonnull %41) #21
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %15) #20
  br label %45

45:                                               ; preds = %9, %44
  %46 = phi i1 [ %39, %44 ], [ false, %9 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment26AddFrameWithDiscardPaddingEPKhmlmmb(%"class.mkvmuxer::Segment"*, i8* readonly, i64, i64, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %8 = alloca %"class.mkvmuxer::Frame", align 8
  %9 = icmp eq i8* %1, null
  br i1 %9, label %34, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.mkvmuxer::Frame"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %11) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 104, i1 false)
  %12 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 6
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 7
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 33, i1 false) #20
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 41, i1 false) #20
  %16 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %17 = icmp eq i8* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %10
  store i8* %16, i8** %12, align 8
  store i64 %2, i64* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* nonnull align 1 %1, i64 %2, i1 false) #20
  %19 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 12
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 10
  store i64 %4, i64* %20, align 8
  %21 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 11
  store i64 %5, i64* %21, align 8
  %22 = zext i1 %6 to i8
  store i8 %22, i8* %13, align 8
  %23 = call zeroext i1 @_ZN8mkvmuxer7Segment15AddGenericFrameEPKNS_5FrameE(%"class.mkvmuxer::Segment"* %0, %"class.mkvmuxer::Frame"* nonnull %8)
  %24 = load i8*, i8** %12, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  call void @_ZdaPv(i8* nonnull %24) #21
  br label %27

27:                                               ; preds = %10, %26, %18
  %28 = phi i1 [ %23, %26 ], [ %23, %18 ], [ false, %10 ]
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %8, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @_ZdaPv(i8* nonnull %30) #21
  br label %33

33:                                               ; preds = %27, %32
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %11) #20
  br label %34

34:                                               ; preds = %7, %33
  %35 = phi i1 [ %28, %33 ], [ false, %7 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment11AddMetadataEPKhmmmm(%"class.mkvmuxer::Segment"*, i8* readonly, i64, i64, i64, i64) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.mkvmuxer::Frame", align 8
  %8 = icmp eq i8* %1, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.mkvmuxer::Frame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 104, i1 false)
  %11 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 6
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 7
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 33, i1 false) #20
  %14 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 41, i1 false) #20
  %15 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %16 = icmp eq i8* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %9
  store i8* %15, i8** %11, align 8
  store i64 %2, i64* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* nonnull align 1 %1, i64 %2, i1 false) #20
  %18 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 10
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 11
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 3
  store i64 %5, i64* %20, align 8
  %21 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 4
  store i8 1, i8* %21, align 8
  store i8 1, i8* %12, align 8
  %22 = call zeroext i1 @_ZN8mkvmuxer7Segment15AddGenericFrameEPKNS_5FrameE(%"class.mkvmuxer::Segment"* %0, %"class.mkvmuxer::Frame"* nonnull %7)
  %23 = load i8*, i8** %11, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  call void @_ZdaPv(i8* nonnull %23) #21
  br label %26

26:                                               ; preds = %9, %25, %17
  %27 = phi i1 [ %22, %25 ], [ %22, %17 ], [ false, %9 ]
  %28 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %7, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @_ZdaPv(i8* nonnull %29) #21
  br label %32

32:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #20
  br label %33

33:                                               ; preds = %6, %32
  %34 = phi i1 [ %27, %32 ], [ false, %6 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment15CheckHeaderInfoEv(%"class.mkvmuxer::Segment"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %141

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN8mkvmuxer7Segment18WriteSegmentHeaderEv(%"class.mkvmuxer::Segment"* %0)
  br i1 %6, label %7, label %141

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %9 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %8, align 8
  %10 = icmp eq %"class.mkvmuxer::IMkvWriter"* %9, null
  br i1 %10, label %56, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.mkvmuxer::IMkvWriter"* %9 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %13 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %13, i64 1
  %15 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %14, align 8
  %16 = tail call i64 %15(%"class.mkvmuxer::IMkvWriter"* nonnull %9) #20
  %17 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %18 = load i64, i64* %17, align 8
  %19 = sub nsw i64 %16, %18
  %20 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %34

29:                                               ; preds = %34, %23
  %30 = phi i64 [ %19, %23 ], [ %44, %34 ]
  %31 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %32 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %31, align 8
  %33 = icmp eq %"class.mkvmuxer::IMkvWriter"* %32, null
  br i1 %33, label %56, label %49

34:                                               ; preds = %34, %27
  %35 = phi i64 [ 0, %27 ], [ %45, %34 ]
  %36 = phi i64 [ %19, %27 ], [ %44, %34 ]
  %37 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %28, align 8
  %38 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %37, i64 %35
  %39 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %38, align 8
  %40 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %41 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %39, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %40, %36
  %44 = add i64 %43, %42
  %45 = add nuw nsw i64 %35, 1
  %46 = load i32, i32* %24, align 4
  %47 = sext i32 %46 to i64
  %48 = icmp slt i64 %45, %47
  br i1 %48, label %34, label %29

49:                                               ; preds = %29
  %50 = bitcast %"class.mkvmuxer::IMkvWriter"* %32 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %51 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %51, i64 1
  %53 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %52, align 8
  %54 = tail call i64 %53(%"class.mkvmuxer::IMkvWriter"* nonnull %32) #20
  %55 = add nsw i64 %54, %30
  br label %56

56:                                               ; preds = %7, %11, %29, %49
  %57 = phi i64 [ -1, %7 ], [ %55, %49 ], [ %30, %29 ], [ %19, %11 ]
  %58 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %77, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %141

77:                                               ; preds = %56, %61, %65, %69, %73
  %78 = phi i64 [ 0, %56 ], [ 1, %61 ], [ 2, %65 ], [ 3, %69 ], [ 4, %73 ]
  %79 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %78
  store i32 524531317, i32* %79, align 4
  %80 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %78
  store i64 %57, i64* %80, align 8
  %81 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 35
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %141, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %141

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5
  %90 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %141, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %89, i64 0, i32 0
  %95 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %94, align 8
  %96 = icmp eq %"class.mkvmuxer::Track"** %95, null
  br i1 %96, label %141, label %97

97:                                               ; preds = %93
  %98 = icmp sgt i32 %91, 0
  %99 = zext i32 %91 to i64
  br label %102

100:                                              ; preds = %121
  %101 = icmp ult i32 %126, %91
  br i1 %101, label %102, label %129

102:                                              ; preds = %97, %100
  %103 = phi i32 [ %126, %100 ], [ 0, %97 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %95, i64 %104
  %106 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %105, align 8
  %107 = icmp eq %"class.mkvmuxer::Track"* %106, null
  br i1 %107, label %141, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %106, i64 0, i32 6
  %110 = load i64, i64* %109, align 8
  br i1 %98, label %113, label %121

111:                                              ; preds = %113
  %112 = icmp eq i64 %120, %99
  br i1 %112, label %121, label %113

113:                                              ; preds = %108, %111
  %114 = phi i64 [ %120, %111 ], [ 0, %108 ]
  %115 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %95, i64 %114
  %116 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %115, align 8
  %117 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %116, i64 0, i32 6
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, %110
  %120 = add nuw nsw i64 %114, 1
  br i1 %119, label %121, label %111

121:                                              ; preds = %111, %113, %108
  %122 = phi %"class.mkvmuxer::Track"* [ null, %108 ], [ null, %111 ], [ %116, %113 ]
  %123 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %122, i64 0, i32 7
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 1
  %126 = add i32 %103, 1
  br i1 %125, label %127, label %100

127:                                              ; preds = %121
  store i64 %110, i64* %85, align 8
  %128 = icmp eq i64 %110, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %100, %127
  %130 = getelementptr inbounds %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Tracks"* %89, i64 0, i32 0
  %131 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %130, align 8
  %132 = icmp ne %"class.mkvmuxer::Track"** %131, null
  %133 = icmp ne i32 %91, 0
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %141

135:                                              ; preds = %129
  %136 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %131, align 8
  %137 = icmp eq %"class.mkvmuxer::Track"* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %136, i64 0, i32 6
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %85, align 8
  br label %141

141:                                              ; preds = %102, %88, %93, %129, %73, %127, %84, %1, %77, %138, %135, %5
  %142 = phi i1 [ false, %5 ], [ false, %135 ], [ true, %138 ], [ true, %77 ], [ true, %1 ], [ true, %84 ], [ true, %127 ], [ false, %73 ], [ false, %129 ], [ false, %93 ], [ false, %88 ], [ false, %102 ]
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment10QueueFrameEPNS_5FrameE(%"class.mkvmuxer::Segment"* nocapture, %"class.mkvmuxer::Frame"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 23
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %10 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %9, align 8
  br label %196

11:                                               ; preds = %2
  %12 = icmp eq i32 %6, 0
  %13 = shl nsw i32 %6, 1
  %14 = select i1 %12, i32 2, i32 %13
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %202, label %16

16:                                               ; preds = %11
  %17 = sext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %18, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %20 = bitcast i8* %19 to %"class.mkvmuxer::Frame"**
  %21 = icmp eq i8* %19, null
  br i1 %21, label %202, label %22

22:                                               ; preds = %16
  %23 = icmp sgt i32 %4, 0
  %24 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %25 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %24, align 8
  %26 = bitcast %"class.mkvmuxer::Frame"** %25 to i8*
  br i1 %23, label %27, label %138

27:                                               ; preds = %22
  %28 = zext i32 %4 to i64
  %29 = icmp ult i32 %4, 4
  br i1 %29, label %30, label %51

30:                                               ; preds = %136, %51, %27
  %31 = phi i64 [ 0, %51 ], [ 0, %27 ], [ %60, %136 ]
  %32 = sub nsw i64 %28, %31
  %33 = xor i64 %31, -1
  %34 = add nsw i64 %33, %28
  %35 = and i64 %32, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %30, %37
  %38 = phi i64 [ %45, %37 ], [ %31, %30 ]
  %39 = phi i64 [ %46, %37 ], [ %35, %30 ]
  %40 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %38
  %41 = bitcast %"class.mkvmuxer::Frame"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %38
  %44 = bitcast %"class.mkvmuxer::Frame"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = add nuw nsw i64 %38, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %37, !llvm.loop !80

48:                                               ; preds = %37, %30
  %49 = phi i64 [ %31, %30 ], [ %45, %37 ]
  %50 = icmp ult i64 %34, 7
  br i1 %50, label %138, label %140

51:                                               ; preds = %27
  %52 = shl nuw nsw i64 %28, 3
  %53 = getelementptr i8, i8* %19, i64 %52
  %54 = getelementptr %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %28
  %55 = bitcast %"class.mkvmuxer::Frame"** %54 to i8*
  %56 = icmp ult i8* %19, %55
  %57 = icmp ugt i8* %53, %26
  %58 = and i1 %56, %57
  br i1 %58, label %30, label %59

59:                                               ; preds = %51
  %60 = and i64 %28, 4294967292
  %61 = add nsw i64 %60, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 12
  br i1 %65, label %117, label %66

66:                                               ; preds = %59
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %69
  %72 = bitcast %"class.mkvmuxer::Frame"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !81
  %74 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %71, i64 2
  %75 = bitcast %"class.mkvmuxer::Frame"** %74 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8, !alias.scope !81
  %77 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %69
  %78 = bitcast %"class.mkvmuxer::Frame"** %77 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %78, align 8, !alias.scope !84, !noalias !81
  %79 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %77, i64 2
  %80 = bitcast %"class.mkvmuxer::Frame"** %79 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %80, align 8, !alias.scope !84, !noalias !81
  %81 = or i64 %69, 4
  %82 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %81
  %83 = bitcast %"class.mkvmuxer::Frame"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !81
  %85 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %82, i64 2
  %86 = bitcast %"class.mkvmuxer::Frame"** %85 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8, !alias.scope !81
  %88 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %81
  %89 = bitcast %"class.mkvmuxer::Frame"** %88 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %89, align 8, !alias.scope !84, !noalias !81
  %90 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %88, i64 2
  %91 = bitcast %"class.mkvmuxer::Frame"** %90 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %91, align 8, !alias.scope !84, !noalias !81
  %92 = or i64 %69, 8
  %93 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %92
  %94 = bitcast %"class.mkvmuxer::Frame"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !81
  %96 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %93, i64 2
  %97 = bitcast %"class.mkvmuxer::Frame"** %96 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8, !alias.scope !81
  %99 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %92
  %100 = bitcast %"class.mkvmuxer::Frame"** %99 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %100, align 8, !alias.scope !84, !noalias !81
  %101 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %99, i64 2
  %102 = bitcast %"class.mkvmuxer::Frame"** %101 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %102, align 8, !alias.scope !84, !noalias !81
  %103 = or i64 %69, 12
  %104 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %103
  %105 = bitcast %"class.mkvmuxer::Frame"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !81
  %107 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %104, i64 2
  %108 = bitcast %"class.mkvmuxer::Frame"** %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !81
  %110 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %103
  %111 = bitcast %"class.mkvmuxer::Frame"** %110 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %111, align 8, !alias.scope !84, !noalias !81
  %112 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %110, i64 2
  %113 = bitcast %"class.mkvmuxer::Frame"** %112 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %113, align 8, !alias.scope !84, !noalias !81
  %114 = add i64 %69, 16
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !86

117:                                              ; preds = %68, %59
  %118 = phi i64 [ 0, %59 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %121
  %124 = bitcast %"class.mkvmuxer::Frame"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !81
  %126 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %123, i64 2
  %127 = bitcast %"class.mkvmuxer::Frame"** %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !81
  %129 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %121
  %130 = bitcast %"class.mkvmuxer::Frame"** %129 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %130, align 8, !alias.scope !84, !noalias !81
  %131 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %129, i64 2
  %132 = bitcast %"class.mkvmuxer::Frame"** %131 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %132, align 8, !alias.scope !84, !noalias !81
  %133 = add i64 %121, 4
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !87

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %60, %28
  br i1 %137, label %138, label %30

138:                                              ; preds = %48, %140, %136, %22
  %139 = icmp eq %"class.mkvmuxer::Frame"** %25, null
  br i1 %139, label %193, label %191

140:                                              ; preds = %48, %140
  %141 = phi i64 [ %189, %140 ], [ %49, %48 ]
  %142 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %141
  %143 = bitcast %"class.mkvmuxer::Frame"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %141
  %146 = bitcast %"class.mkvmuxer::Frame"** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = add nuw nsw i64 %141, 1
  %148 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %147
  %149 = bitcast %"class.mkvmuxer::Frame"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %147
  %152 = bitcast %"class.mkvmuxer::Frame"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = add nuw nsw i64 %141, 2
  %154 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %153
  %155 = bitcast %"class.mkvmuxer::Frame"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %153
  %158 = bitcast %"class.mkvmuxer::Frame"** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = add nuw nsw i64 %141, 3
  %160 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %159
  %161 = bitcast %"class.mkvmuxer::Frame"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %159
  %164 = bitcast %"class.mkvmuxer::Frame"** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = add nuw nsw i64 %141, 4
  %166 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %165
  %167 = bitcast %"class.mkvmuxer::Frame"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %165
  %170 = bitcast %"class.mkvmuxer::Frame"** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = add nuw nsw i64 %141, 5
  %172 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %171
  %173 = bitcast %"class.mkvmuxer::Frame"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %171
  %176 = bitcast %"class.mkvmuxer::Frame"** %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = add nuw nsw i64 %141, 6
  %178 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %177
  %179 = bitcast %"class.mkvmuxer::Frame"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %177
  %182 = bitcast %"class.mkvmuxer::Frame"** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = add nuw nsw i64 %141, 7
  %184 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %25, i64 %183
  %185 = bitcast %"class.mkvmuxer::Frame"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %20, i64 %183
  %188 = bitcast %"class.mkvmuxer::Frame"** %187 to i64*
  store i64 %186, i64* %188, align 8
  %189 = add nuw nsw i64 %141, 8
  %190 = icmp eq i64 %189, %28
  br i1 %190, label %138, label %140, !llvm.loop !88

191:                                              ; preds = %138
  tail call void @_ZdaPv(i8* %26) #21
  %192 = load i32, i32* %3, align 4
  br label %193

193:                                              ; preds = %138, %191
  %194 = phi i32 [ %4, %138 ], [ %192, %191 ]
  %195 = bitcast %"class.mkvmuxer::Frame"*** %24 to i8**
  store i8* %19, i8** %195, align 8
  store i32 %14, i32* %5, align 8
  br label %196

196:                                              ; preds = %8, %193
  %197 = phi i32 [ %4, %8 ], [ %194, %193 ]
  %198 = phi %"class.mkvmuxer::Frame"** [ %10, %8 ], [ %20, %193 ]
  %199 = add nsw i32 %197, 1
  store i32 %199, i32* %3, align 4
  %200 = sext i32 %197 to i64
  %201 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %198, i64 %200
  store %"class.mkvmuxer::Frame"* %1, %"class.mkvmuxer::Frame"** %201, align 8
  br label %202

202:                                              ; preds = %16, %11, %196
  %203 = phi i1 [ true, %196 ], [ false, %11 ], [ false, %16 ]
  ret i1 %203
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment22DoNewClusterProcessingEmmb(%"class.mkvmuxer::Segment"*, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %8 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %10 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %11 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 31
  %12 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 32
  br label %13

13:                                               ; preds = %75, %4
  %14 = load i8, i8* %6, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %60

16:                                               ; preds = %13
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %60, label %19

19:                                               ; preds = %16
  %20 = load i64, i64* %5, align 8
  %21 = udiv i64 %2, %20
  %22 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %8, align 8
  %23 = add nsw i32 %17, -1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %22, i64 %24
  %26 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %25, align 8
  %27 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %26, i64 0, i32 7
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %21, %28
  br i1 %29, label %77, label %30

30:                                               ; preds = %19
  %31 = sub i64 %21, %28
  %32 = icmp sgt i64 %31, 32767
  br i1 %32, label %60, label %33

33:                                               ; preds = %30
  br i1 %3, label %34, label %55

34:                                               ; preds = %33
  %35 = load i32, i32* %9, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %34
  %38 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %10, align 8
  %39 = zext i32 %35 to i64
  br label %42

40:                                               ; preds = %42
  %41 = icmp eq i64 %49, %39
  br i1 %41, label %50, label %42

42:                                               ; preds = %40, %37
  %43 = phi i64 [ 0, %37 ], [ %49, %40 ]
  %44 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %38, i64 %43
  %45 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %44, align 8
  %46 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %45, i64 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %1
  %49 = add nuw nsw i64 %43, 1
  br i1 %48, label %50, label %40

50:                                               ; preds = %42, %40, %34
  %51 = phi %"class.mkvmuxer::Track"* [ null, %34 ], [ %45, %42 ], [ null, %40 ]
  %52 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %51, i64 0, i32 7
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %60, label %55

55:                                               ; preds = %50, %33
  %56 = load i64, i64* %11, align 8
  %57 = mul i64 %31, %20
  %58 = add i64 %56, -1
  %59 = icmp ult i64 %58, %57
  br i1 %59, label %60, label %62

60:                                               ; preds = %55, %50, %30, %16, %13
  %61 = phi i32 [ 1, %13 ], [ 1, %16 ], [ 2, %30 ], [ 1, %50 ], [ 1, %55 ]
  store i8 0, i8* %6, align 8
  br label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %26, i64 0, i32 4
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %12, align 8
  %66 = add i64 %65, -1
  %67 = icmp ult i64 %66, %64
  store i8 0, i8* %6, align 8
  br i1 %67, label %68, label %71

68:                                               ; preds = %62, %60
  %69 = phi i32 [ %61, %60 ], [ 1, %62 ]
  %70 = tail call zeroext i1 @_ZN8mkvmuxer7Segment14MakeNewClusterEm(%"class.mkvmuxer::Segment"* %0, i64 %2)
  br i1 %70, label %71, label %77

71:                                               ; preds = %62, %68
  %72 = phi i32 [ 0, %62 ], [ %69, %68 ]
  %73 = tail call i32 @_ZN8mkvmuxer7Segment14WriteFramesAllEv(%"class.mkvmuxer::Segment"* %0)
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = icmp slt i32 %72, 2
  br i1 %76, label %77, label %13

77:                                               ; preds = %75, %68, %71, %19
  %78 = phi i1 [ false, %19 ], [ false, %71 ], [ false, %68 ], [ true, %75 ]
  ret i1 %78
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer7Segment10OutputCuesEb(%"class.mkvmuxer::Segment"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 35
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer7Segment23AccurateClusterDurationEb(%"class.mkvmuxer::Segment"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 36
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer7Segment27UseFixedSizeClusterTimecodeEb(%"class.mkvmuxer::Segment"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 37
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment11SetChunkingEbPKc(%"class.mkvmuxer::Segment"*, i1 zeroext, i8*) local_unnamed_addr #4 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %97, label %8

8:                                                ; preds = %3
  br i1 %1, label %9, label %95

9:                                                ; preds = %8
  %10 = icmp eq i8* %2, null
  br i1 %10, label %97, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 14
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @strcmp(i8* nonnull %2, i8* %17) #22
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %97, label %20

20:                                               ; preds = %15, %11
  %21 = tail call i64 @strlen(i8* nonnull %2) #22
  %22 = add i64 %21, 1
  %23 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %22, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %24 = icmp eq i8* %23, null
  br i1 %24, label %97, label %25

25:                                               ; preds = %20
  %26 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %23, i1 false, i1 true, i1 false) #20
  %27 = tail call i8* @__strcpy_chk(i8* nonnull %23, i8* nonnull %2, i64 %26) #20
  %28 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 14
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %29) #21
  br label %32

32:                                               ; preds = %31, %25
  store i8* %23, i8** %28, align 8
  %33 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 9
  %34 = tail call zeroext i1 @_ZNK8mkvmuxer7Segment15UpdateChunkNameEPKcPPc(%"class.mkvmuxer::Segment"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %33)
  br i1 %34, label %35, label %97

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 10
  %37 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %36, align 8
  %38 = icmp eq %"class.mkvmuxer::MkvWriter"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35
  %40 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 24, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  store %"class.mkvmuxer::MkvWriter"* null, %"class.mkvmuxer::MkvWriter"** %36, align 8
  br label %97

43:                                               ; preds = %39
  %44 = bitcast i8* %40 to %"class.mkvmuxer::MkvWriter"*
  tail call void @_ZN8mkvmuxer9MkvWriterC1Ev(%"class.mkvmuxer::MkvWriter"* nonnull %44) #20
  %45 = bitcast %"class.mkvmuxer::MkvWriter"** %36 to i8**
  store i8* %40, i8** %45, align 8
  br label %46

46:                                               ; preds = %43, %35
  %47 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 11
  %48 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %47, align 8
  %49 = icmp eq %"class.mkvmuxer::MkvWriter"* %48, null
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 24, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  store %"class.mkvmuxer::MkvWriter"* null, %"class.mkvmuxer::MkvWriter"** %47, align 8
  br label %97

54:                                               ; preds = %50
  %55 = bitcast i8* %51 to %"class.mkvmuxer::MkvWriter"*
  tail call void @_ZN8mkvmuxer9MkvWriterC1Ev(%"class.mkvmuxer::MkvWriter"* nonnull %55) #20
  %56 = bitcast %"class.mkvmuxer::MkvWriter"** %47 to i8**
  store i8* %51, i8** %56, align 8
  br label %57

57:                                               ; preds = %54, %46
  %58 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 12
  %59 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %58, align 8
  %60 = icmp eq %"class.mkvmuxer::MkvWriter"* %59, null
  br i1 %60, label %61, label %68

61:                                               ; preds = %57
  %62 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 24, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  store %"class.mkvmuxer::MkvWriter"* null, %"class.mkvmuxer::MkvWriter"** %58, align 8
  br label %97

65:                                               ; preds = %61
  %66 = bitcast i8* %62 to %"class.mkvmuxer::MkvWriter"*
  tail call void @_ZN8mkvmuxer9MkvWriterC1Ev(%"class.mkvmuxer::MkvWriter"* nonnull %66) #20
  %67 = bitcast %"class.mkvmuxer::MkvWriter"** %58 to i8**
  store i8* %62, i8** %67, align 8
  br label %68

68:                                               ; preds = %65, %57
  %69 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %36, align 8
  %70 = load i8*, i8** %33, align 8
  %71 = tail call zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"* %69, i8* %70) #20
  br i1 %71, label %72, label %97

72:                                               ; preds = %68
  %73 = tail call i64 @strlen(i8* nonnull %2) #22
  %74 = add i64 %73, 5
  %75 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %74, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %76 = icmp eq i8* %75, null
  br i1 %76, label %97, label %77

77:                                               ; preds = %72
  %78 = load i8*, i8** %28, align 8
  %79 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %75, i1 false, i1 true, i1 false) #20
  %80 = tail call i8* @__strcpy_chk(i8* nonnull %75, i8* %78, i64 %79) #20
  %81 = tail call i64 @strlen(i8* nonnull %75)
  %82 = getelementptr i8, i8* %75, i64 %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false)
  %83 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %58, align 8
  %84 = tail call zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"* %83, i8* nonnull %75) #20
  br i1 %84, label %86, label %85

85:                                               ; preds = %77
  tail call void @_ZdaPv(i8* nonnull %75) #21
  br label %97

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 45
  %88 = bitcast %"class.mkvmuxer::MkvWriter"** %36 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = bitcast %"class.mkvmuxer::IMkvWriter"** %87 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8
  %91 = bitcast %"class.mkvmuxer::MkvWriter"** %58 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %94 = bitcast %"class.mkvmuxer::IMkvWriter"** %93 to i64*
  store i64 %92, i64* %94, align 8
  tail call void @_ZdaPv(i8* nonnull %75) #21
  br label %95

95:                                               ; preds = %86, %8
  %96 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  store i8 %4, i8* %96, align 8
  br label %97

97:                                               ; preds = %64, %53, %42, %72, %85, %68, %32, %20, %15, %9, %3, %95
  %98 = phi i1 [ true, %95 ], [ false, %3 ], [ false, %9 ], [ true, %15 ], [ false, %20 ], [ false, %32 ], [ false, %68 ], [ false, %85 ], [ false, %72 ], [ false, %42 ], [ false, %53 ], [ false, %64 ]
  ret i1 %98
}

declare void @_ZN8mkvmuxer9MkvWriterC1Ev(%"class.mkvmuxer::MkvWriter"*) unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment9CuesTrackEm(%"class.mkvmuxer::Segment"* nocapture, i64) local_unnamed_addr #14 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %19, %9
  br i1 %11, label %24, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %8, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  %19 = add nuw nsw i64 %13, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %12
  %21 = icmp eq %"class.mkvmuxer::Track"* %15, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  store i64 %1, i64* %23, align 8
  br label %24

24:                                               ; preds = %10, %2, %20, %22
  %25 = phi i1 [ true, %22 ], [ false, %20 ], [ false, %2 ], [ false, %10 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.mkvmuxer::Track"* @_ZNK8mkvmuxer7Segment16GetTrackByNumberEm(%"class.mkvmuxer::Segment"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %19, %9
  br i1 %11, label %20, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %8, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  %19 = add nuw nsw i64 %13, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %10, %12, %2
  %21 = phi %"class.mkvmuxer::Track"* [ null, %2 ], [ %15, %12 ], [ null, %10 ]
  ret %"class.mkvmuxer::Track"* %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8mkvmuxer7Segment26ForceNewClusterOnNextFrameEv(%"class.mkvmuxer::Segment"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment18WriteSegmentHeaderEv(%"class.mkvmuxer::Segment"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %6, align 8
  %8 = icmp eq %"class.mkvmuxer::Track"** %7, null
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  br i1 %8, label %32, label %10

10:                                               ; preds = %5
  %11 = zext i32 %3 to i64
  br label %12

12:                                               ; preds = %29, %10
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %7, i64 %13
  %15 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %14, align 8
  %16 = icmp eq %"class.mkvmuxer::Track"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %15, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21, %17
  %26 = load i32, i32* %9, align 8
  %27 = icmp ult i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 4, i32* %9, align 8
  br label %32

29:                                               ; preds = %25, %21
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp eq i64 %30, %11
  br i1 %31, label %32, label %12

32:                                               ; preds = %12, %29, %1, %5, %28
  %33 = tail call zeroext i1 @_ZNK8mkvmuxer7Segment13DocTypeIsWebmEv(%"class.mkvmuxer::Segment"* %0)
  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_112kDocTypeWebmE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8mkvmuxer12_GLOBAL__N_116kDocTypeMatroskaE, i64 0, i64 0)
  %35 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %36 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %37 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = tail call zeroext i1 @_ZN8mkvmuxer15WriteEbmlHeaderEPNS_10IMkvWriterEmPKc(%"class.mkvmuxer::IMkvWriter"* %36, i64 %39, i8* %34)
  br i1 %40, label %41, label %429

41:                                               ; preds = %32
  %42 = load i32, i32* %37, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 43
  store i32 %42, i32* %43, align 4
  %44 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %45 = bitcast %"class.mkvmuxer::IMkvWriter"* %44 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %46 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %46, i64 1
  %48 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %47, align 8
  %49 = tail call i64 %48(%"class.mkvmuxer::IMkvWriter"* %44) #20
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 39
  store i32 %50, i32* %51, align 4
  %52 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %53 = tail call i32 @_ZN8mkvmuxer7WriteIDEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"* %52, i64 408125543) #20
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %429

55:                                               ; preds = %41
  %56 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %57 = bitcast %"class.mkvmuxer::IMkvWriter"* %56 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %58 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %58, i64 1
  %60 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %59, align 8
  %61 = tail call i64 %60(%"class.mkvmuxer::IMkvWriter"* %56) #20
  %62 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 41
  store i64 %61, i64* %62, align 8
  %63 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %64 = tail call i32 @_ZN8mkvmuxer12SerializeIntEPNS_10IMkvWriterExi(%"class.mkvmuxer::IMkvWriter"* %63, i64 144115188075855871, i32 8) #20
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %429

66:                                               ; preds = %55
  %67 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %68 = bitcast %"class.mkvmuxer::IMkvWriter"* %67 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %69 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %69, i64 1
  %71 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %70, align 8
  %72 = tail call i64 %71(%"class.mkvmuxer::IMkvWriter"* %67) #20
  %73 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 33
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 2
  br i1 %76, label %77, label %103

77:                                               ; preds = %66
  %78 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %79 = bitcast %"class.mkvmuxer::IMkvWriter"* %78 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %80 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %79, align 8
  %81 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %80, i64 3
  %82 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.mkvmuxer::IMkvWriter"* %78) #20
  br i1 %83, label %84, label %103

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 0
  store double 1.000000e+00, double* %85, align 8
  %86 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %87 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21419, i64 4294967295) #20
  %88 = tail call i64 @_ZN8mkvmuxer15EbmlElementSizeEyy(i64 21420, i64 -1) #20
  %89 = add i64 %88, %87
  %90 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 19899, i64 %89) #20
  %91 = add i64 %90, %89
  %92 = mul i64 %91, 5
  %93 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 290298740, i64 %92) #20
  %94 = bitcast %"class.mkvmuxer::IMkvWriter"* %86 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %95 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %94, align 8
  %96 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %95, i64 1
  %97 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %96, align 8
  %98 = tail call i64 %97(%"class.mkvmuxer::IMkvWriter"* %86) #20
  %99 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 2
  store i64 %98, i64* %99, align 8
  %100 = add i64 %92, %93
  %101 = tail call i64 @_ZN8mkvmuxer16WriteVoidElementEPNS_10IMkvWriterEy(%"class.mkvmuxer::IMkvWriter"* %86, i64 %100) #20
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %429, label %103

103:                                              ; preds = %84, %77, %66
  %104 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %105 = icmp eq %"class.mkvmuxer::IMkvWriter"* %104, null
  br i1 %105, label %150, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.mkvmuxer::IMkvWriter"* %104 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %108 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %107, align 8
  %109 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %108, i64 1
  %110 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %109, align 8
  %111 = tail call i64 %110(%"class.mkvmuxer::IMkvWriter"* nonnull %104) #20
  %112 = load i64, i64* %73, align 8
  %113 = sub nsw i64 %111, %112
  %114 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %115 = load i8, i8* %114, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %150, label %117

117:                                              ; preds = %106
  %118 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %128

123:                                              ; preds = %128, %117
  %124 = phi i64 [ %113, %117 ], [ %138, %128 ]
  %125 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %126 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %125, align 8
  %127 = icmp eq %"class.mkvmuxer::IMkvWriter"* %126, null
  br i1 %127, label %150, label %143

128:                                              ; preds = %128, %121
  %129 = phi i64 [ 0, %121 ], [ %139, %128 ]
  %130 = phi i64 [ %113, %121 ], [ %138, %128 ]
  %131 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %122, align 8
  %132 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %131, i64 %129
  %133 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %132, align 8
  %134 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %135 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %133, i64 0, i32 4
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %134, %130
  %138 = add i64 %137, %136
  %139 = add nuw nsw i64 %129, 1
  %140 = load i32, i32* %118, align 4
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %139, %141
  br i1 %142, label %128, label %123

143:                                              ; preds = %123
  %144 = bitcast %"class.mkvmuxer::IMkvWriter"* %126 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %145 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %144, align 8
  %146 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %145, i64 1
  %147 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %146, align 8
  %148 = tail call i64 %147(%"class.mkvmuxer::IMkvWriter"* nonnull %126) #20
  %149 = add nsw i64 %148, %124
  br label %150

150:                                              ; preds = %103, %106, %123, %143
  %151 = phi i64 [ -1, %103 ], [ %149, %143 ], [ %124, %123 ], [ %113, %106 ]
  %152 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %171, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %171, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %429

171:                                              ; preds = %150, %155, %159, %163, %167
  %172 = phi i64 [ 0, %150 ], [ 1, %155 ], [ 2, %159 ], [ 3, %163 ], [ 4, %167 ]
  %173 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %172
  store i32 357149030, i32* %173, align 4
  %174 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %172
  store i64 %151, i64* %174, align 8
  %175 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4
  %176 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %177 = tail call zeroext i1 @_ZN8mkvmuxer11SegmentInfo5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::SegmentInfo"* %175, %"class.mkvmuxer::IMkvWriter"* %176)
  br i1 %177, label %178, label %429

178:                                              ; preds = %171
  %179 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %180 = icmp eq %"class.mkvmuxer::IMkvWriter"* %179, null
  br i1 %180, label %225, label %181

181:                                              ; preds = %178
  %182 = bitcast %"class.mkvmuxer::IMkvWriter"* %179 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %183 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %182, align 8
  %184 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %183, i64 1
  %185 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %184, align 8
  %186 = tail call i64 %185(%"class.mkvmuxer::IMkvWriter"* nonnull %179) #20
  %187 = load i64, i64* %73, align 8
  %188 = sub nsw i64 %186, %187
  %189 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %225, label %192

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %194 = load i32, i32* %193, align 4
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %203

198:                                              ; preds = %203, %192
  %199 = phi i64 [ %188, %192 ], [ %213, %203 ]
  %200 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %201 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %200, align 8
  %202 = icmp eq %"class.mkvmuxer::IMkvWriter"* %201, null
  br i1 %202, label %225, label %218

203:                                              ; preds = %203, %196
  %204 = phi i64 [ 0, %196 ], [ %214, %203 ]
  %205 = phi i64 [ %188, %196 ], [ %213, %203 ]
  %206 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %197, align 8
  %207 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %206, i64 %204
  %208 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %207, align 8
  %209 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %210 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %208, i64 0, i32 4
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %209, %205
  %213 = add i64 %212, %211
  %214 = add nuw nsw i64 %204, 1
  %215 = load i32, i32* %193, align 4
  %216 = sext i32 %215 to i64
  %217 = icmp slt i64 %214, %216
  br i1 %217, label %203, label %198

218:                                              ; preds = %198
  %219 = bitcast %"class.mkvmuxer::IMkvWriter"* %201 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %220 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %219, align 8
  %221 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %220, i64 1
  %222 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %221, align 8
  %223 = tail call i64 %222(%"class.mkvmuxer::IMkvWriter"* nonnull %201) #20
  %224 = add nsw i64 %223, %199
  br label %225

225:                                              ; preds = %178, %181, %198, %218
  %226 = phi i64 [ -1, %178 ], [ %224, %218 ], [ %199, %198 ], [ %188, %181 ]
  %227 = load i32, i32* %152, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %245, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %429

245:                                              ; preds = %225, %229, %233, %237, %241
  %246 = phi i64 [ 0, %225 ], [ 1, %229 ], [ 2, %233 ], [ 3, %237 ], [ 4, %241 ]
  %247 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %246
  store i32 374648427, i32* %247, align 4
  %248 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %246
  store i64 %226, i64* %248, align 8
  %249 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5
  %250 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %251 = tail call zeroext i1 @_ZNK8mkvmuxer6Tracks5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tracks"* %249, %"class.mkvmuxer::IMkvWriter"* %250)
  br i1 %251, label %252, label %429

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6
  %254 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 6, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %257, label %330

257:                                              ; preds = %252
  %258 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %259 = icmp eq %"class.mkvmuxer::IMkvWriter"* %258, null
  br i1 %259, label %304, label %260

260:                                              ; preds = %257
  %261 = bitcast %"class.mkvmuxer::IMkvWriter"* %258 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %262 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %261, align 8
  %263 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %262, i64 1
  %264 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %263, align 8
  %265 = tail call i64 %264(%"class.mkvmuxer::IMkvWriter"* nonnull %258) #20
  %266 = load i64, i64* %73, align 8
  %267 = sub nsw i64 %265, %266
  %268 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %269 = load i8, i8* %268, align 8, !range !2
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %304, label %271

271:                                              ; preds = %260
  %272 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %273 = load i32, i32* %272, align 4
  %274 = icmp sgt i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %282

277:                                              ; preds = %282, %271
  %278 = phi i64 [ %267, %271 ], [ %292, %282 ]
  %279 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %280 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %279, align 8
  %281 = icmp eq %"class.mkvmuxer::IMkvWriter"* %280, null
  br i1 %281, label %304, label %297

282:                                              ; preds = %282, %275
  %283 = phi i64 [ 0, %275 ], [ %293, %282 ]
  %284 = phi i64 [ %267, %275 ], [ %292, %282 ]
  %285 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %276, align 8
  %286 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %285, i64 %283
  %287 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %286, align 8
  %288 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %289 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %287, i64 0, i32 4
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %288, %284
  %292 = add i64 %291, %290
  %293 = add nuw nsw i64 %283, 1
  %294 = load i32, i32* %272, align 4
  %295 = sext i32 %294 to i64
  %296 = icmp slt i64 %293, %295
  br i1 %296, label %282, label %277

297:                                              ; preds = %277
  %298 = bitcast %"class.mkvmuxer::IMkvWriter"* %280 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %299 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %298, align 8
  %300 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %299, i64 1
  %301 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %300, align 8
  %302 = tail call i64 %301(%"class.mkvmuxer::IMkvWriter"* nonnull %280) #20
  %303 = add nsw i64 %302, %278
  br label %304

304:                                              ; preds = %257, %260, %277, %297
  %305 = phi i64 [ -1, %257 ], [ %303, %297 ], [ %278, %277 ], [ %267, %260 ]
  %306 = load i32, i32* %152, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %324, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %324, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %324, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %429

324:                                              ; preds = %304, %308, %312, %316, %320
  %325 = phi i64 [ 0, %304 ], [ 1, %308 ], [ 2, %312 ], [ 3, %316 ], [ 4, %320 ]
  %326 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %325
  store i32 272869232, i32* %326, align 4
  %327 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %325
  store i64 %305, i64* %327, align 8
  %328 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %329 = tail call zeroext i1 @_ZNK8mkvmuxer8Chapters5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Chapters"* %253, %"class.mkvmuxer::IMkvWriter"* %328)
  br i1 %329, label %330, label %429

330:                                              ; preds = %324, %252
  %331 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7
  %332 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 7, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %335, label %408

335:                                              ; preds = %330
  %336 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %337 = icmp eq %"class.mkvmuxer::IMkvWriter"* %336, null
  br i1 %337, label %382, label %338

338:                                              ; preds = %335
  %339 = bitcast %"class.mkvmuxer::IMkvWriter"* %336 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %340 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %339, align 8
  %341 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %340, i64 1
  %342 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %341, align 8
  %343 = tail call i64 %342(%"class.mkvmuxer::IMkvWriter"* nonnull %336) #20
  %344 = load i64, i64* %73, align 8
  %345 = sub nsw i64 %343, %344
  %346 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %347 = load i8, i8* %346, align 8, !range !2
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %382, label %349

349:                                              ; preds = %338
  %350 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %351 = load i32, i32* %350, align 4
  %352 = icmp sgt i32 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  br label %360

355:                                              ; preds = %360, %349
  %356 = phi i64 [ %345, %349 ], [ %370, %360 ]
  %357 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %358 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %357, align 8
  %359 = icmp eq %"class.mkvmuxer::IMkvWriter"* %358, null
  br i1 %359, label %382, label %375

360:                                              ; preds = %360, %353
  %361 = phi i64 [ 0, %353 ], [ %371, %360 ]
  %362 = phi i64 [ %345, %353 ], [ %370, %360 ]
  %363 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %354, align 8
  %364 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %363, i64 %361
  %365 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %364, align 8
  %366 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %367 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %365, i64 0, i32 4
  %368 = load i64, i64* %367, align 8
  %369 = add i64 %366, %362
  %370 = add i64 %369, %368
  %371 = add nuw nsw i64 %361, 1
  %372 = load i32, i32* %350, align 4
  %373 = sext i32 %372 to i64
  %374 = icmp slt i64 %371, %373
  br i1 %374, label %360, label %355

375:                                              ; preds = %355
  %376 = bitcast %"class.mkvmuxer::IMkvWriter"* %358 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %377 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %376, align 8
  %378 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %377, i64 1
  %379 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %378, align 8
  %380 = tail call i64 %379(%"class.mkvmuxer::IMkvWriter"* nonnull %358) #20
  %381 = add nsw i64 %380, %356
  br label %382

382:                                              ; preds = %335, %338, %355, %375
  %383 = phi i64 [ -1, %335 ], [ %381, %375 ], [ %356, %355 ], [ %345, %338 ]
  %384 = load i32, i32* %152, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %402, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %402, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 2
  %392 = load i32, i32* %391, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %402, label %394

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 3
  %396 = load i32, i32* %395, align 4
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 4
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %429

402:                                              ; preds = %382, %386, %390, %394, %398
  %403 = phi i64 [ 0, %382 ], [ 1, %386 ], [ 2, %390 ], [ 3, %394 ], [ 4, %398 ]
  %404 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 0, i64 %403
  store i32 307544935, i32* %404, align 4
  %405 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 3, i32 1, i64 %403
  store i64 %383, i64* %405, align 8
  %406 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %407 = tail call zeroext i1 @_ZNK8mkvmuxer4Tags5WriteEPNS_10IMkvWriterE(%"class.mkvmuxer::Tags"* %331, %"class.mkvmuxer::IMkvWriter"* %406)
  br i1 %407, label %408, label %429

408:                                              ; preds = %402, %330
  %409 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %410 = load i8, i8* %409, align 8, !range !2
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %427, label %412

412:                                              ; preds = %408
  %413 = load i32, i32* %74, align 8
  %414 = icmp eq i32 %413, 1
  br i1 %414, label %422, label %415

415:                                              ; preds = %412
  %416 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %35, align 8
  %417 = bitcast %"class.mkvmuxer::IMkvWriter"* %416 to i1 (%"class.mkvmuxer::IMkvWriter"*)***
  %418 = load i1 (%"class.mkvmuxer::IMkvWriter"*)**, i1 (%"class.mkvmuxer::IMkvWriter"*)*** %417, align 8
  %419 = getelementptr inbounds i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %418, i64 3
  %420 = load i1 (%"class.mkvmuxer::IMkvWriter"*)*, i1 (%"class.mkvmuxer::IMkvWriter"*)** %419, align 8
  %421 = tail call zeroext i1 %420(%"class.mkvmuxer::IMkvWriter"* %416) #20
  br i1 %421, label %427, label %422

422:                                              ; preds = %415, %412
  %423 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 12
  %424 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %423, align 8
  %425 = icmp eq %"class.mkvmuxer::MkvWriter"* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %422
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nonnull %424) #20
  br label %427

427:                                              ; preds = %408, %426, %415
  %428 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 26
  store i8 1, i8* %428, align 1
  br label %429

429:                                              ; preds = %84, %398, %320, %241, %167, %422, %402, %324, %245, %171, %55, %41, %32, %427
  %430 = phi i1 [ true, %427 ], [ false, %32 ], [ false, %41 ], [ false, %55 ], [ false, %84 ], [ false, %171 ], [ false, %245 ], [ false, %324 ], [ false, %402 ], [ false, %422 ], [ false, %167 ], [ false, %241 ], [ false, %320 ], [ false, %398 ]
  ret i1 %430
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8mkvmuxer7Segment9TestFrameEmmb(%"class.mkvmuxer::Segment"* nocapture readonly, i64, i64, i1 zeroext) local_unnamed_addr #10 align 2 {
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 21
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %66, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = udiv i64 %2, %14
  %16 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %17 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %16, align 8
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %17, i64 %19
  %21 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %20, align 8
  %22 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %21, i64 0, i32 7
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %15, %23
  br i1 %24, label %66, label %25

25:                                               ; preds = %12
  %26 = sub i64 %15, %23
  %27 = icmp sgt i64 %26, 32767
  br i1 %27, label %66, label %28

28:                                               ; preds = %25
  br i1 %3, label %29, label %52

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 5, i32 0
  %35 = load %"class.mkvmuxer::Track"**, %"class.mkvmuxer::Track"*** %34, align 8
  %36 = zext i32 %31 to i64
  br label %39

37:                                               ; preds = %39
  %38 = icmp eq i64 %46, %36
  br i1 %38, label %47, label %39

39:                                               ; preds = %37, %33
  %40 = phi i64 [ 0, %33 ], [ %46, %37 ]
  %41 = getelementptr inbounds %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %35, i64 %40
  %42 = load %"class.mkvmuxer::Track"*, %"class.mkvmuxer::Track"** %41, align 8
  %43 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %42, i64 0, i32 6
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %1
  %46 = add nuw nsw i64 %40, 1
  br i1 %45, label %47, label %37

47:                                               ; preds = %37, %39, %29
  %48 = phi %"class.mkvmuxer::Track"* [ null, %29 ], [ null, %37 ], [ %42, %39 ]
  %49 = getelementptr inbounds %"class.mkvmuxer::Track", %"class.mkvmuxer::Track"* %48, i64 0, i32 7
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %66, label %52

52:                                               ; preds = %47, %28
  %53 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 31
  %54 = load i64, i64* %53, align 8
  %55 = mul i64 %26, %14
  %56 = add i64 %54, -1
  %57 = icmp ult i64 %56, %55
  br i1 %57, label %66, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %21, i64 0, i32 4
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 32
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, -1
  %64 = icmp ult i64 %63, %60
  %65 = zext i1 %64 to i32
  br label %66

66:                                               ; preds = %52, %12, %58, %47, %25, %8, %4
  %67 = phi i32 [ 1, %4 ], [ 1, %8 ], [ -1, %12 ], [ 2, %25 ], [ 1, %47 ], [ 1, %52 ], [ %65, %58 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment14MakeNewClusterEm(%"class.mkvmuxer::Segment"*, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  %6 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %193, label %9

9:                                                ; preds = %2
  %10 = icmp slt i32 %7, 1
  %11 = shl nsw i32 %7, 1
  %12 = select i1 %10, i32 1, i32 %11
  %13 = sext i32 %12 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %17, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %19 = bitcast i8* %18 to %"class.mkvmuxer::Cluster"**
  %20 = icmp eq i8* %18, null
  br i1 %20, label %339, label %21

21:                                               ; preds = %9
  %22 = icmp sgt i32 %4, 0
  %23 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %24 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %23, align 8
  %25 = bitcast %"class.mkvmuxer::Cluster"** %24 to i8*
  br i1 %22, label %26, label %137

26:                                               ; preds = %21
  %27 = zext i32 %4 to i64
  %28 = icmp ult i32 %4, 4
  br i1 %28, label %29, label %50

29:                                               ; preds = %135, %50, %26
  %30 = phi i64 [ 0, %50 ], [ 0, %26 ], [ %59, %135 ]
  %31 = sub nsw i64 %27, %30
  %32 = xor i64 %30, -1
  %33 = add nsw i64 %32, %27
  %34 = and i64 %31, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %29, %36
  %37 = phi i64 [ %44, %36 ], [ %30, %29 ]
  %38 = phi i64 [ %45, %36 ], [ %34, %29 ]
  %39 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %37
  %40 = bitcast %"class.mkvmuxer::Cluster"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %37
  %43 = bitcast %"class.mkvmuxer::Cluster"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = add nuw nsw i64 %37, 1
  %45 = add i64 %38, -1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %36, !llvm.loop !89

47:                                               ; preds = %36, %29
  %48 = phi i64 [ %30, %29 ], [ %44, %36 ]
  %49 = icmp ult i64 %33, 7
  br i1 %49, label %137, label %139

50:                                               ; preds = %26
  %51 = shl nuw nsw i64 %27, 3
  %52 = getelementptr i8, i8* %18, i64 %51
  %53 = getelementptr %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %27
  %54 = bitcast %"class.mkvmuxer::Cluster"** %53 to i8*
  %55 = icmp ult i8* %18, %54
  %56 = icmp ugt i8* %52, %25
  %57 = and i1 %55, %56
  br i1 %57, label %29, label %58

58:                                               ; preds = %50
  %59 = and i64 %27, 4294967292
  %60 = add nsw i64 %59, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 12
  br i1 %64, label %116, label %65

65:                                               ; preds = %58
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %68
  %71 = bitcast %"class.mkvmuxer::Cluster"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !90
  %73 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %70, i64 2
  %74 = bitcast %"class.mkvmuxer::Cluster"** %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !90
  %76 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %68
  %77 = bitcast %"class.mkvmuxer::Cluster"** %76 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %77, align 8, !alias.scope !93, !noalias !90
  %78 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %76, i64 2
  %79 = bitcast %"class.mkvmuxer::Cluster"** %78 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !93, !noalias !90
  %80 = or i64 %68, 4
  %81 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %80
  %82 = bitcast %"class.mkvmuxer::Cluster"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !90
  %84 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %81, i64 2
  %85 = bitcast %"class.mkvmuxer::Cluster"** %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !90
  %87 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %80
  %88 = bitcast %"class.mkvmuxer::Cluster"** %87 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %88, align 8, !alias.scope !93, !noalias !90
  %89 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %87, i64 2
  %90 = bitcast %"class.mkvmuxer::Cluster"** %89 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !93, !noalias !90
  %91 = or i64 %68, 8
  %92 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %91
  %93 = bitcast %"class.mkvmuxer::Cluster"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !90
  %95 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %92, i64 2
  %96 = bitcast %"class.mkvmuxer::Cluster"** %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !90
  %98 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %91
  %99 = bitcast %"class.mkvmuxer::Cluster"** %98 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %99, align 8, !alias.scope !93, !noalias !90
  %100 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %98, i64 2
  %101 = bitcast %"class.mkvmuxer::Cluster"** %100 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !93, !noalias !90
  %102 = or i64 %68, 12
  %103 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %102
  %104 = bitcast %"class.mkvmuxer::Cluster"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !90
  %106 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %103, i64 2
  %107 = bitcast %"class.mkvmuxer::Cluster"** %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !90
  %109 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %102
  %110 = bitcast %"class.mkvmuxer::Cluster"** %109 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %110, align 8, !alias.scope !93, !noalias !90
  %111 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %109, i64 2
  %112 = bitcast %"class.mkvmuxer::Cluster"** %111 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !93, !noalias !90
  %113 = add i64 %68, 16
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !95

116:                                              ; preds = %67, %58
  %117 = phi i64 [ 0, %58 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %120
  %123 = bitcast %"class.mkvmuxer::Cluster"** %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !90
  %125 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %122, i64 2
  %126 = bitcast %"class.mkvmuxer::Cluster"** %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !90
  %128 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %120
  %129 = bitcast %"class.mkvmuxer::Cluster"** %128 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %129, align 8, !alias.scope !93, !noalias !90
  %130 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %128, i64 2
  %131 = bitcast %"class.mkvmuxer::Cluster"** %130 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !93, !noalias !90
  %132 = add i64 %120, 4
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !96

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %59, %27
  br i1 %136, label %137, label %29

137:                                              ; preds = %47, %139, %135, %21
  %138 = icmp eq %"class.mkvmuxer::Cluster"** %24, null
  br i1 %138, label %191, label %190

139:                                              ; preds = %47, %139
  %140 = phi i64 [ %188, %139 ], [ %48, %47 ]
  %141 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %140
  %142 = bitcast %"class.mkvmuxer::Cluster"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %140
  %145 = bitcast %"class.mkvmuxer::Cluster"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = add nuw nsw i64 %140, 1
  %147 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %146
  %148 = bitcast %"class.mkvmuxer::Cluster"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %146
  %151 = bitcast %"class.mkvmuxer::Cluster"** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = add nuw nsw i64 %140, 2
  %153 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %152
  %154 = bitcast %"class.mkvmuxer::Cluster"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %152
  %157 = bitcast %"class.mkvmuxer::Cluster"** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = add nuw nsw i64 %140, 3
  %159 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %158
  %160 = bitcast %"class.mkvmuxer::Cluster"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %158
  %163 = bitcast %"class.mkvmuxer::Cluster"** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = add nuw nsw i64 %140, 4
  %165 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %164
  %166 = bitcast %"class.mkvmuxer::Cluster"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %164
  %169 = bitcast %"class.mkvmuxer::Cluster"** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = add nuw nsw i64 %140, 5
  %171 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %170
  %172 = bitcast %"class.mkvmuxer::Cluster"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %170
  %175 = bitcast %"class.mkvmuxer::Cluster"** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = add nuw nsw i64 %140, 6
  %177 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %176
  %178 = bitcast %"class.mkvmuxer::Cluster"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %176
  %181 = bitcast %"class.mkvmuxer::Cluster"** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = add nuw nsw i64 %140, 7
  %183 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %24, i64 %182
  %184 = bitcast %"class.mkvmuxer::Cluster"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, i64 %182
  %187 = bitcast %"class.mkvmuxer::Cluster"** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = add nuw nsw i64 %140, 8
  %189 = icmp eq i64 %188, %27
  br i1 %189, label %137, label %139, !llvm.loop !97

190:                                              ; preds = %137
  tail call void @_ZdaPv(i8* %25) #21
  br label %191

191:                                              ; preds = %190, %137
  %192 = bitcast %"class.mkvmuxer::Cluster"*** %23 to i8**
  store i8* %18, i8** %192, align 8
  store i32 %12, i32* %6, align 8
  br label %193

193:                                              ; preds = %191, %2
  %194 = tail call zeroext i1 @_ZN8mkvmuxer7Segment19WriteFramesLessThanEm(%"class.mkvmuxer::Segment"* %0, i64 %1)
  br i1 %194, label %195, label %339

195:                                              ; preds = %193
  %196 = load i32, i32* %3, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %208

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %200 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %199, align 8
  %201 = add nsw i32 %196, -1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %200, i64 %202
  %204 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %203, align 8
  %205 = icmp eq %"class.mkvmuxer::Cluster"* %204, null
  br i1 %205, label %339, label %206

206:                                              ; preds = %198
  %207 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster8FinalizeEbm(%"class.mkvmuxer::Cluster"* nonnull %204, i1 zeroext true, i64 %1)
  br i1 %207, label %208, label %339

208:                                              ; preds = %206, %195
  %209 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 35
  %210 = load i8, i8* %209, align 1, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  store i8 1, i8* %213, align 4
  br label %214

214:                                              ; preds = %208, %212
  %215 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 13
  %216 = load i8, i8* %215, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %233, label %218

218:                                              ; preds = %214
  %219 = load i32, i32* %3, align 4
  %220 = icmp sgt i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 10
  %223 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %222, align 8
  tail call void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* %223) #20
  %224 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 8
  %225 = load i32, i32* %224, align 8
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %224, align 8
  %227 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 9
  %228 = tail call zeroext i1 @_ZNK8mkvmuxer7Segment15UpdateChunkNameEPKcPPc(%"class.mkvmuxer::Segment"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %227)
  br i1 %228, label %229, label %339

229:                                              ; preds = %221
  %230 = load %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"** %222, align 8
  %231 = load i8*, i8** %227, align 8
  %232 = tail call zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"* %230, i8* %231) #20
  br i1 %232, label %233, label %339

233:                                              ; preds = %214, %229, %218
  %234 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 4, i32 2
  %235 = load i64, i64* %234, align 8
  %236 = udiv i64 %1, %235
  %237 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %238 = load i32, i32* %237, align 4
  %239 = icmp sgt i32 %238, 0
  br i1 %239, label %240, label %249

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %242 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %241, align 8
  %243 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %242, align 8
  %244 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %243, i64 0, i32 11
  %245 = load i64, i64* %244, align 8
  %246 = udiv i64 %245, %235
  %247 = icmp ult i64 %246, %236
  %248 = select i1 %247, i64 %246, i64 %236
  br label %249

249:                                              ; preds = %240, %233
  %250 = phi i64 [ %248, %240 ], [ %236, %233 ]
  %251 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %252 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %251, align 8
  %253 = load i32, i32* %3, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %252, i64 %254
  %256 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 47
  %257 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %256, align 8
  %258 = icmp eq %"class.mkvmuxer::IMkvWriter"* %257, null
  br i1 %258, label %300, label %259

259:                                              ; preds = %249
  %260 = bitcast %"class.mkvmuxer::IMkvWriter"* %257 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %261 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %260, align 8
  %262 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %261, i64 1
  %263 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %262, align 8
  %264 = tail call i64 %263(%"class.mkvmuxer::IMkvWriter"* nonnull %257) #20
  %265 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 40
  %266 = load i64, i64* %265, align 8
  %267 = sub nsw i64 %264, %266
  %268 = load i8, i8* %215, align 8, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %300, label %270

270:                                              ; preds = %259
  %271 = load i32, i32* %3, align 4
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %278, label %273

273:                                              ; preds = %278, %270
  %274 = phi i64 [ %267, %270 ], [ %288, %278 ]
  %275 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 46
  %276 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %275, align 8
  %277 = icmp eq %"class.mkvmuxer::IMkvWriter"* %276, null
  br i1 %277, label %300, label %293

278:                                              ; preds = %270, %278
  %279 = phi i64 [ %289, %278 ], [ 0, %270 ]
  %280 = phi i64 [ %288, %278 ], [ %267, %270 ]
  %281 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %251, align 8
  %282 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %281, i64 %279
  %283 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %282, align 8
  %284 = tail call i64 @_ZN8mkvmuxer21EbmlMasterElementSizeEyy(i64 524531317, i64 -1) #20
  %285 = getelementptr inbounds %"class.mkvmuxer::Cluster", %"class.mkvmuxer::Cluster"* %283, i64 0, i32 4
  %286 = load i64, i64* %285, align 8
  %287 = add i64 %284, %280
  %288 = add i64 %287, %286
  %289 = add nuw nsw i64 %279, 1
  %290 = load i32, i32* %3, align 4
  %291 = sext i32 %290 to i64
  %292 = icmp slt i64 %289, %291
  br i1 %292, label %278, label %273

293:                                              ; preds = %273
  %294 = bitcast %"class.mkvmuxer::IMkvWriter"* %276 to i64 (%"class.mkvmuxer::IMkvWriter"*)***
  %295 = load i64 (%"class.mkvmuxer::IMkvWriter"*)**, i64 (%"class.mkvmuxer::IMkvWriter"*)*** %294, align 8
  %296 = getelementptr inbounds i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %295, i64 1
  %297 = load i64 (%"class.mkvmuxer::IMkvWriter"*)*, i64 (%"class.mkvmuxer::IMkvWriter"*)** %296, align 8
  %298 = tail call i64 %297(%"class.mkvmuxer::IMkvWriter"* nonnull %276) #20
  %299 = add nsw i64 %298, %274
  br label %300

300:                                              ; preds = %249, %259, %273, %293
  %301 = phi i64 [ -1, %249 ], [ %299, %293 ], [ %274, %273 ], [ %267, %259 ]
  %302 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 112, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %303 = icmp eq i8* %302, null
  br i1 %303, label %304, label %305

304:                                              ; preds = %300
  store %"class.mkvmuxer::Cluster"* null, %"class.mkvmuxer::Cluster"** %255, align 8
  br label %339

305:                                              ; preds = %300
  %306 = load i64, i64* %234, align 8
  %307 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 36
  %308 = load i8, i8* %307, align 2, !range !2
  %309 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 37
  %310 = load i8, i8* %309, align 1, !range !2
  %311 = bitcast i8* %302 to i32*
  store i32 0, i32* %311, align 8
  %312 = getelementptr inbounds i8, i8* %302, i64 4
  store i8 0, i8* %312, align 4
  %313 = getelementptr inbounds i8, i8* %302, i64 5
  store i8 %310, i8* %313, align 1
  %314 = getelementptr inbounds i8, i8* %302, i64 6
  store i8 0, i8* %314, align 2
  %315 = getelementptr inbounds i8, i8* %302, i64 8
  %316 = bitcast i8* %315 to i64*
  store i64 0, i64* %316, align 8
  %317 = getelementptr inbounds i8, i8* %302, i64 16
  %318 = bitcast i8* %317 to i64*
  store i64 %301, i64* %318, align 8
  %319 = getelementptr inbounds i8, i8* %302, i64 24
  %320 = bitcast i8* %319 to i64*
  store i64 -1, i64* %320, align 8
  %321 = getelementptr inbounds i8, i8* %302, i64 32
  %322 = bitcast i8* %321 to i64*
  store i64 %250, i64* %322, align 8
  %323 = getelementptr inbounds i8, i8* %302, i64 40
  %324 = bitcast i8* %323 to i64*
  store i64 %306, i64* %324, align 8
  %325 = getelementptr inbounds i8, i8* %302, i64 48
  store i8 %308, i8* %325, align 8
  %326 = getelementptr inbounds i8, i8* %302, i64 64
  %327 = getelementptr inbounds i8, i8* %302, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 16, i1 false) #20
  %328 = bitcast i8* %327 to i8**
  store i8* %326, i8** %328, align 8
  %329 = getelementptr inbounds i8, i8* %302, i64 88
  %330 = getelementptr inbounds i8, i8* %302, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %329, i8 0, i64 16, i1 false) #20
  %331 = bitcast i8* %330 to i8**
  store i8* %329, i8** %331, align 8
  %332 = getelementptr inbounds i8, i8* %302, i64 104
  %333 = bitcast i8* %332 to %"class.mkvmuxer::IMkvWriter"**
  store %"class.mkvmuxer::IMkvWriter"* null, %"class.mkvmuxer::IMkvWriter"** %333, align 8
  %334 = bitcast %"class.mkvmuxer::Cluster"** %255 to i8**
  store i8* %302, i8** %334, align 8
  %335 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 45
  %336 = load %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"** %335, align 8
  %337 = icmp eq %"class.mkvmuxer::IMkvWriter"* %336, null
  br i1 %337, label %339, label %338

338:                                              ; preds = %305
  store %"class.mkvmuxer::IMkvWriter"* %336, %"class.mkvmuxer::IMkvWriter"** %333, align 8
  store i32 %5, i32* %3, align 4
  br label %339

339:                                              ; preds = %305, %304, %338, %229, %221, %198, %206, %193, %9
  %340 = phi i1 [ false, %9 ], [ false, %193 ], [ false, %206 ], [ false, %198 ], [ false, %221 ], [ false, %229 ], [ true, %338 ], [ false, %304 ], [ false, %305 ]
  ret i1 %340
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer7Segment19WriteFramesLessThanEm(%"class.mkvmuxer::Segment"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 24
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %170

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 18
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %170

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 22
  %12 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %13 = icmp eq %"class.mkvmuxer::Frame"** %12, null
  br i1 %13, label %170, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 16
  %16 = load %"class.mkvmuxer::Cluster"**, %"class.mkvmuxer::Cluster"*** %15, align 8
  %17 = add nsw i32 %8, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %16, i64 %18
  %20 = load %"class.mkvmuxer::Cluster"*, %"class.mkvmuxer::Cluster"** %19, align 8
  %21 = icmp eq %"class.mkvmuxer::Cluster"* %20, null
  br i1 %21, label %170, label %22

22:                                               ; preds = %14
  %23 = icmp sgt i32 %4, 1
  br i1 %23, label %24, label %170

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 42
  %26 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 34
  %27 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 20
  %28 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 28
  %29 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %12, i64 1
  %30 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %29, align 8
  %31 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %30, i64 0, i32 11
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %1
  br i1 %33, label %97, label %34

34:                                               ; preds = %24, %90
  %35 = phi i32 [ %60, %90 ], [ 0, %24 ]
  %36 = phi i64 [ %86, %90 ], [ 1, %24 ]
  %37 = phi %"class.mkvmuxer::Frame"** [ %91, %90 ], [ %12, %24 ]
  %38 = add nsw i64 %36, -1
  %39 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %37, i64 %38
  %40 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %39, align 8
  %41 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 12
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %34
  store i32 4, i32* %25, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = tail call zeroext i1 @_ZN8mkvmuxer7Cluster17QueueOrWriteFrameEPKNS_5FrameE(%"class.mkvmuxer::Cluster"* nonnull %20, %"class.mkvmuxer::Frame"* %40) #20
  br i1 %46, label %47, label %170

47:                                               ; preds = %45
  %48 = load i8, i8* %26, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %27, align 8
  %52 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 10
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 11
  %57 = load i64, i64* %56, align 8
  %58 = tail call zeroext i1 @_ZN8mkvmuxer7Segment11AddCuePointEmm(%"class.mkvmuxer::Segment"* %0, i64 %57, i64 %51)
  br i1 %58, label %59, label %170

59:                                               ; preds = %47, %55, %50
  %60 = add nuw nsw i32 %35, 1
  %61 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 11
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %28, align 8
  %64 = icmp ugt i64 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %59
  store i64 %62, i64* %28, align 8
  %66 = load i64, i64* %61, align 8
  %67 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 10
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %0, i64 0, i32 29, i64 %69
  store i64 %66, i64* %70, align 8
  br label %71

71:                                               ; preds = %65, %59
  %72 = icmp eq %"class.mkvmuxer::Frame"* %40, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 6
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  tail call void @_ZdaPv(i8* nonnull %75) #21
  br label %78

78:                                               ; preds = %77, %73
  %79 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %40, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  tail call void @_ZdaPv(i8* nonnull %80) #21
  br label %83

83:                                               ; preds = %78, %82
  %84 = bitcast %"class.mkvmuxer::Frame"* %40 to i8*
  tail call void @_ZdlPv(i8* %84) #21
  br label %85

85:                                               ; preds = %71, %83
  %86 = add nuw nsw i64 %36, 1
  %87 = load i32, i32* %3, align 4
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %90, label %101

90:                                               ; preds = %85
  %91 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %92 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %91, i64 %86
  %93 = load %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %92, align 8
  %94 = getelementptr inbounds %"class.mkvmuxer::Frame", %"class.mkvmuxer::Frame"* %93, i64 0, i32 11
  %95 = load i64, i64* %94, align 8
  %96 = icmp ugt i64 %95, %1
  br i1 %96, label %97, label %34

97:                                               ; preds = %90, %24
  %98 = phi i32 [ %4, %24 ], [ %87, %90 ]
  %99 = phi i32 [ 0, %24 ], [ %60, %90 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %170, label %101

101:                                              ; preds = %85, %97
  %102 = phi i32 [ %99, %97 ], [ %60, %85 ]
  %103 = phi i32 [ %98, %97 ], [ %87, %85 ]
  %104 = icmp sgt i32 %103, %102
  br i1 %104, label %105, label %170

105:                                              ; preds = %101
  %106 = sub i32 %103, %102
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %132

108:                                              ; preds = %105
  %109 = zext i32 %102 to i64
  %110 = zext i32 %106 to i64
  %111 = add nsw i64 %110, -1
  %112 = and i64 %110, 3
  %113 = icmp ult i64 %111, 3
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  %115 = sub nsw i64 %110, %112
  br label %133

116:                                              ; preds = %133, %108
  %117 = phi i64 [ 0, %108 ], [ %167, %133 ]
  %118 = icmp eq i64 %112, 0
  br i1 %118, label %132, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %129, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %130, %119 ], [ %112, %116 ]
  %122 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %123 = add nuw nsw i64 %120, %109
  %124 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %122, i64 %123
  %125 = bitcast %"class.mkvmuxer::Frame"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %122, i64 %120
  %128 = bitcast %"class.mkvmuxer::Frame"** %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = add nuw nsw i64 %120, 1
  %130 = add i64 %121, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %119, !llvm.loop !98

132:                                              ; preds = %116, %119, %105
  store i32 %106, i32* %3, align 4
  br label %170

133:                                              ; preds = %133, %114
  %134 = phi i64 [ 0, %114 ], [ %167, %133 ]
  %135 = phi i64 [ %115, %114 ], [ %168, %133 ]
  %136 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %137 = add nuw nsw i64 %134, %109
  %138 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %136, i64 %137
  %139 = bitcast %"class.mkvmuxer::Frame"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %136, i64 %134
  %142 = bitcast %"class.mkvmuxer::Frame"** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = or i64 %134, 1
  %144 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %145 = add nuw nsw i64 %143, %109
  %146 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %144, i64 %145
  %147 = bitcast %"class.mkvmuxer::Frame"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %144, i64 %143
  %150 = bitcast %"class.mkvmuxer::Frame"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = or i64 %134, 2
  %152 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %153 = add nuw nsw i64 %151, %109
  %154 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %152, i64 %153
  %155 = bitcast %"class.mkvmuxer::Frame"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %152, i64 %151
  %158 = bitcast %"class.mkvmuxer::Frame"** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = or i64 %134, 3
  %160 = load %"class.mkvmuxer::Frame"**, %"class.mkvmuxer::Frame"*** %11, align 8
  %161 = add nuw nsw i64 %159, %109
  %162 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %160, i64 %161
  %163 = bitcast %"class.mkvmuxer::Frame"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.mkvmuxer::Frame"*, %"class.mkvmuxer::Frame"** %160, i64 %159
  %166 = bitcast %"class.mkvmuxer::Frame"** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = add nuw nsw i64 %134, 4
  %168 = add i64 %135, -4
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %116, label %133

170:                                              ; preds = %45, %55, %22, %97, %101, %14, %2, %6, %132, %10
  %171 = phi i1 [ false, %10 ], [ true, %97 ], [ true, %132 ], [ true, %6 ], [ true, %2 ], [ false, %14 ], [ false, %101 ], [ true, %22 ], [ false, %55 ], [ false, %45 ]
  ret i1 %171
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nofree nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #11

; Function Attrs: nofree nounwind
declare i8* @__strcat_chk(i8*, i8*, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8mkvmuxer6ColourEEclEPS2_(%"struct.std::__1::default_delete.11"*, %"class.mkvmuxer::Colour"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.mkvmuxer::Colour"* %1, null
  br i1 %3, label %36, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::Colour", %"class.mkvmuxer::Colour"* %1, i64 0, i32 13
  %6 = load %"class.mkvmuxer::MasteringMetadata"*, %"class.mkvmuxer::MasteringMetadata"** %5, align 8
  %7 = icmp eq %"class.mkvmuxer::MasteringMetadata"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %6, i64 0, i32 2
  %10 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %9, align 8
  %11 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #21
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %6, i64 0, i32 3
  %16 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %15, align 8
  %17 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #21
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %6, i64 0, i32 4
  %22 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %21, align 8
  %23 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #21
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %"class.mkvmuxer::MasteringMetadata", %"class.mkvmuxer::MasteringMetadata"* %6, i64 0, i32 5
  %28 = load %"class.mkvmuxer::PrimaryChromaticity"*, %"class.mkvmuxer::PrimaryChromaticity"** %27, align 8
  %29 = icmp eq %"class.mkvmuxer::PrimaryChromaticity"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.mkvmuxer::PrimaryChromaticity"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #21
  br label %32

32:                                               ; preds = %30, %26
  %33 = bitcast %"class.mkvmuxer::MasteringMetadata"* %6 to i8*
  tail call void @_ZdlPv(i8* %33) #21
  br label %34

34:                                               ; preds = %4, %32
  %35 = bitcast %"class.mkvmuxer::Colour"* %1 to i8*
  tail call void @_ZdlPv(i8* %35) #21
  br label %36

36:                                               ; preds = %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #20
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #20
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %10, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %10, i64 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %16 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  store i64 0, i64* %11, align 8
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %16, %17
  br i1 %31, label %38, label %32

32:                                               ; preds = %14, %32
  %33 = phi %"struct.std::__1::__list_node_base"* [ %35, %32 ], [ %16, %14 ]
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = bitcast %"struct.std::__1::__list_node_base"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #21
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %35, %17
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %4, %14
  %39 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %39) #21
  br label %40

40:                                               ; preds = %2, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.26"*, %"class.std::__1::__tree_node.48"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.48"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.48"* %1 to %"class.std::__1::__tree_node.48"**
  %6 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.26"* %0, %"class.std::__1::__tree_node.48"* %6) #20
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.48", %"class.std::__1::__tree_node.48"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.48"**
  %9 = load %"class.std::__1::__tree_node.48"*, %"class.std::__1::__tree_node.48"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.26"* %0, %"class.std::__1::__tree_node.48"* %9) #20
  %10 = bitcast %"class.std::__1::__tree_node.48"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #20
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %75, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 6
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"struct.std::__1::__list_node_base"**
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::__list_node_base"*
  %55 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::__list_node_base"**
  %56 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %56, i64 0, i32 1
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 0
  %61 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 0, i32 1
  %63 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64*
  store i64 %59, i64* %63, align 8
  %64 = bitcast %"struct.std::__1::__list_node_base"* %53 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64**
  %67 = load i64*, i64** %66, align 8
  store i64 %65, i64* %67, align 8
  store i64 0, i64* %47, align 8
  %68 = icmp eq %"struct.std::__1::__list_node_base"* %53, %54
  br i1 %68, label %75, label %69

69:                                               ; preds = %50, %69
  %70 = phi %"struct.std::__1::__list_node_base"* [ %72, %69 ], [ %53, %50 ]
  %71 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %70, i64 0, i32 1
  %72 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %71, align 8
  %73 = bitcast %"struct.std::__1::__list_node_base"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #21
  %74 = icmp eq %"struct.std::__1::__list_node_base"* %72, %54
  br i1 %74, label %75, label %69

75:                                               ; preds = %69, %38, %50
  %76 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %76) #21
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #4 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #18

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #18

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind }
attributes #21 = { builtin nounwind }
attributes #22 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !4}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !4}
!22 = distinct !{!22, !11}
!23 = distinct !{!23, !4}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !4}
!31 = distinct !{!31, !11}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__14listIPN8mkvmuxer5FrameENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__14listIPN8mkvmuxer5FrameENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__16__treeINS_12__value_typeImNS_4listIPN8mkvmuxer5FrameENS_9allocatorIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISR_EEEEEEDpOT_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!62 = distinct !{!62, !4}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !11}
!69 = distinct !{!69, !4}
!70 = distinct !{!70, !11}
!71 = distinct !{!71, !4}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !11}
!78 = distinct !{!78, !4}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !4}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !11}
!87 = distinct !{!87, !4}
!88 = distinct !{!88, !11}
!89 = distinct !{!89, !4}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !11}
!96 = distinct !{!96, !4}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !4}
