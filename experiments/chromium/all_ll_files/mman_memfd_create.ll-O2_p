; ModuleID = '../../third_party/crashpad/crashpad/compat/linux/sys/mman_memfd_create.cc'
source_filename = "../../third_party/crashpad/crashpad/compat/linux/sys/mman_memfd_create.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.crashpad::NoCfiIcall" = type { i32 (i8*, i32)* }

@_ZZ12memfd_createE17next_memfd_create = internal global %"class.crashpad::NoCfiIcall" zeroinitializer, align 8
@_ZGVZ12memfd_createE17next_memfd_create = internal global i64 0, align 8
@.str = private unnamed_addr constant [13 x i8] c"memfd_create\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @memfd_create(i8*, i32) local_unnamed_addr #0 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZ12memfd_createE17next_memfd_create to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ12memfd_createE17next_memfd_create) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @dlsym(i8* nonnull inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #4
  store i8* %9, i8** bitcast (%"class.crashpad::NoCfiIcall"* @_ZZ12memfd_createE17next_memfd_create to i8**), align 8
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.crashpad::NoCfiIcall"* @_ZZ12memfd_createE17next_memfd_create to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ12memfd_createE17next_memfd_create) #4
  br label %11

11:                                               ; preds = %5, %8, %2
  %12 = load i32 (i8*, i32)*, i32 (i8*, i32)** getelementptr inbounds (%"class.crashpad::NoCfiIcall", %"class.crashpad::NoCfiIcall"* @_ZZ12memfd_createE17next_memfd_create, i64 0, i32 0), align 8
  %13 = icmp eq i32 (i8*, i32)* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call i32 %12(i8* %0, i32 %1) #4
  %16 = sext i32 %15 to i64
  br label %19

17:                                               ; preds = %11
  %18 = tail call i64 (i64, ...) @syscall(i64 319, i8* %0, i32 %1) #4
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = trunc i64 %20 to i32
  ret i32 %21
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
