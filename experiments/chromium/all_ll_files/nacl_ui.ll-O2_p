; ModuleID = '../../chrome/browser/ui/webui/nacl_ui.cc'
source_filename = "../../chrome/browser/ui/webui/nacl_ui.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%class.NaClUI = type { %"class.content::WebUIController" }
%"class.content::WebUIController" = type { i32 (...)**, %"class.content::WebUI"* }
%"class.content::WebUI" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.base::UserMetricsAction" = type { i8* }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.content::WebUIMessageHandler" = type { i32 (...)**, i8, %"class.content::WebUI"* }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.30", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.42" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.24" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.37" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::WebUIDataSource" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.48" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GURL* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"class.std::__1::basic_string" }
%"class.content::RenderFrameHost" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.(anonymous namespace)::NaClDomHandler" = type { %"class.content::WebUIMessageHandler", %"class.std::__1::basic_string", i8, i8, i8, %"class.std::__1::basic_string", %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.84", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.87" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::Value"* }
%"class.content::PluginService" = type { i32 (...)** }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"*, %"class.std::__1::__compressed_pair.120" }
%"struct.content::WebPluginInfo" = type <{ %"class.std::__1::basic_string.90", %"class.base::FilePath", %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90", %"class.std::__1::vector.99", i32, i32, i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.93 }
%union.anon.93 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*, %"class.std::__1::__compressed_pair.115" }
%"struct.content::WebPluginMimeType" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.101", %"class.std::__1::basic_string.90", %"class.std::__1::vector.108" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"*, %"class.std::__1::__compressed_pair.110" }
%"struct.content::WebPluginMimeType::Param" = type { %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.content::WebPluginMimeType::Param"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.content::WebPluginMimeType"* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.content::WebPluginInfo"* }
%"class.base::OnceCallback.145" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.132" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.133" = type { %"class.base::internal::CallbackBase" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.94 }
%struct.anon.94 = type { %"struct.std::__1::__padding.95", i8 }
%"struct.std::__1::__padding.95" = type { [1 x i8] }
%"class.base::CommandLine" = type { %"class.std::__1::vector.101", %"class.std::__1::map.259", i64 }
%"class.std::__1::map.259" = type { %"class.std::__1::__tree.260" }
%"class.std::__1::__tree.260" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%class.JSONFileValueDeserializer = type { %"class.base::ValueDeserializer", %"class.base::FilePath", i32, i64 }
%"class.base::ValueDeserializer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i8* }
%class.PluginPrefs = type { %class.RefcountedKeyedService, i8, %class.Profile*, %class.PrefService*, %class.PrefChangeRegistrar }
%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe.194", %class.scoped_refptr.195 }
%"class.base::RefCountedThreadSafe.194" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.195 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.196" }>
%"class.base::RefCountedThreadSafe.196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %class.scoped_refptr.228, %"class.base::RepeatingCallback.229", %class.scoped_refptr.230, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback.207", %class.PrefNotifier*, %"class.std::__1::map.208", i8, %"class.std::__1::unique_ptr.219" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.206, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.206 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback.207" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.228 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.229" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.230 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.246", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { float }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.249", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.249" = type { %"class.std::__1::__tree.250" }
%"class.std::__1::__tree.250" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.22" }

$_ZN7content15WebUIControllerD2Ev = comdat any

$_ZN6NaClUID0Ev = comdat any

$_ZN7content15WebUIController18RenderFrameCreatedEPNS_15RenderFrameHostE = comdat any

$_ZN7content19WebUIMessageHandler19OnJavascriptAllowedEv = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSA_EEEFbvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZTV6NaClUI = comdat any

@_ZTV6NaClUI = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::WebUIController"*)* @_ZN7content15WebUIControllerD2Ev to i8*), i8* bitcast (void (%class.NaClUI*)* @_ZN6NaClUID0Ev to i8*), i8* bitcast (i1 (%"class.content::WebUIController"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.base::ListValue"*)* @_ZN7content15WebUIController26OverrideHandleWebUIMessageERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKN4base9ListValueE to i8*), i8* bitcast (void (%"class.content::WebUIController"*, %"class.content::RenderFrameHost"*)* @_ZN7content15WebUIController18RenderFrameCreatedEPNS_15RenderFrameHostE to i8*), i8* bitcast (i1 (%"class.content::WebUIController"*)* @_ZN7content15WebUIController33IsJavascriptErrorReportingEnabledEv to i8*), i8* bitcast (i8* (%"class.content::WebUIController"*)* @_ZN7content15WebUIController7GetTypeEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [14 x i8] c"ViewAboutNaCl\00", align 1
@_ZN6chrome17kChromeUINaClHostE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"script-src chrome://resources 'self' 'unsafe-eval';\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"trusted-types jstemplate;\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"about_nacl.css\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"about_nacl.js\00", align 1
@_ZTVN12_GLOBAL__N_114NaClDomHandlerE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::NaClDomHandler"*)* @_ZN12_GLOBAL__N_114NaClDomHandlerD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NaClDomHandler"*)* @_ZN12_GLOBAL__N_114NaClDomHandlerD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NaClDomHandler"*)* @_ZN12_GLOBAL__N_114NaClDomHandler16RegisterMessagesEv to i8*), i8* bitcast (void (%"class.content::WebUIMessageHandler"*)* @_ZN7content19WebUIMessageHandler19OnJavascriptAllowedEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NaClDomHandler"*)* @_ZN12_GLOBAL__N_114NaClDomHandler22OnJavascriptDisallowedEv to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"requestNaClInfo\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"../../chrome/browser/ui/webui/nacl_ui.cc\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"callback_id_.empty()\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"1U == args->GetSize()\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"MaybeRespondToPage\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"pnacl_public_pnacl_json\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"pnacl-version\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"naclInfo\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"application/x-nacl\00", align 1
@.str.32 = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@.str.33 = private unnamed_addr constant [29 x i16] [i16 32, i16 40, i16 68, i16 105, i16 115, i16 97, i16 98, i16 108, i16 101, i16 100, i16 32, i16 105, i16 110, i16 32, i16 112, i16 114, i16 111, i16 102, i16 105, i16 108, i16 101, i16 32, i16 112, i16 114, i16 101, i16 102, i16 115, i16 41, i16 0], align 2
@.str.34 = private unnamed_addr constant [12 x i16] [i16 32, i16 40, i16 110, i16 111, i16 116, i16 32, i16 117, i16 115, i16 101, i16 100, i16 41, i16 0], align 2
@.str.36 = private unnamed_addr constant [26 x i16] [i16 68, i16 105, i16 115, i16 97, i16 98, i16 108, i16 101, i16 100, i16 32, i16 105, i16 110, i16 32, i16 112, i16 114, i16 111, i16 102, i16 105, i16 108, i16 101, i16 32, i16 112, i16 114, i16 101, i16 102, i16 115, i16 0], align 2
@_ZN8switches11kEnableNaClE = external constant [0 x i8], align 1
@.str.42 = private unnamed_addr constant [32 x i16] [i16 69, i16 110, i16 97, i16 98, i16 108, i16 101, i16 100, i16 32, i16 98, i16 121, i16 32, i16 102, i16 108, i16 97, i16 103, i16 32, i16 39, i16 45, i16 45, i16 101, i16 110, i16 97, i16 98, i16 108, i16 101, i16 45, i16 110, i16 97, i16 99, i16 108, i16 39, i16 0], align 2

@_ZN6NaClUIC1EPN7content5WebUIE = hidden unnamed_addr alias void (%class.NaClUI*, %"class.content::WebUI"*), void (%class.NaClUI*, %"class.content::WebUI"*)* @_ZN6NaClUIC2EPN7content5WebUIE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6NaClUIC2EPN7content5WebUIE(%class.NaClUI* nocapture, %"class.content::WebUI"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.base::UserMetricsAction", align 8
  %7 = getelementptr inbounds %class.NaClUI, %class.NaClUI* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.NaClUI, %class.NaClUI* %0, i64 0, i32 0, i32 1
  store %"class.content::WebUI"* %1, %"class.content::WebUI"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV6NaClUI, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = bitcast %"struct.base::UserMetricsAction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %11 = call i8* @_Znwm(i64 96) #13
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 16
  %15 = bitcast i8* %14 to %"class.content::WebUI"**
  store %"class.content::WebUI"* null, %"class.content::WebUI"** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_114NaClDomHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 24
  %17 = getelementptr inbounds i8, i8* %11, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds i8, i8* %11, i64 80
  %19 = bitcast i8* %18 to %"class.base::internal::WeakPtrFactoryBase"*
  %20 = ptrtoint i8* %11 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 27, i1 false) #12
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %19, i64 %20) #12
  %21 = bitcast i8* %11 to %"class.content::WebUIMessageHandler"*
  %22 = bitcast %"class.content::WebUI"* %1 to void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)***
  %23 = load void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)**, void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)*, void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)** %23, i64 12
  %25 = load void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)*, void (%"class.content::WebUI"*, %"class.content::WebUIMessageHandler"*)** %24, align 8
  call void %25(%"class.content::WebUI"* %1, %"class.content::WebUIMessageHandler"* nonnull %21) #12
  %26 = call %class.Profile* @_ZN7Profile9FromWebUIEPN7content5WebUIE(%"class.content::WebUI"* %1) #12
  %27 = getelementptr inbounds %class.Profile, %class.Profile* %26, i64 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUINaClHostE, i64 0, i64 0)) #12
  %30 = icmp ugt i64 %29, -17
  br i1 %30, label %31, label %33

31:                                               ; preds = %2
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #14
  unreachable

33:                                               ; preds = %2
  %34 = icmp ult i64 %29, 23
  br i1 %34, label %44, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %29, 16
  %37 = and i64 %36, -16
  %38 = call i8* @_Znwm(i64 %37) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = or i64 %37, -9223372036854775808
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %42, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %49

44:                                               ; preds = %33
  %45 = trunc i64 %29 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 %45, i8* %47, align 1
  %48 = icmp eq i64 %29, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %35
  %50 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %43, %35 ]
  %51 = phi i8* [ %28, %44 ], [ %38, %35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUINaClHostE, i64 0, i64 0), i64 %29, i1 false) #12
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %50, %49 ]
  %54 = phi i8* [ %28, %44 ], [ %51, %49 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %29
  store i8 0, i8* %55, align 1
  %56 = call %"class.content::WebUIDataSource"* @_ZN7content15WebUIDataSource6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %60, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  %64 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = call i8* @_Znwm(i64 64) #13
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %68, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i64 51, i1 false) #12
  %69 = getelementptr inbounds i8, i8* %65, i64 51
  store i8 0, i8* %69, align 1
  %70 = bitcast %"class.content::WebUIDataSource"* %56 to void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)***
  %71 = load void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)** %71, i64 17
  %73 = load void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)** %72, align 8
  call void %73(%"class.content::WebUIDataSource"* %56, i32 20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %63
  %79 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %78, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  %81 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = call i8* @_Znwm(i64 32) #13
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25, i1 false) #12
  %86 = getelementptr inbounds i8, i8* %82, i64 25
  store i8 0, i8* %86, align 1
  %87 = load void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*** %70, align 8
  %88 = getelementptr inbounds void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)** %87, i64 17
  %89 = load void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::WebUIDataSource"*, i32, %"class.std::__1::basic_string"*)** %88, align 8
  call void %89(%"class.content::WebUIDataSource"* %56, i32 27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %90 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %80
  %95 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %80, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  %97 = bitcast %"class.content::WebUIDataSource"* %56 to void (%"class.content::WebUIDataSource"*)***
  %98 = load void (%"class.content::WebUIDataSource"*)**, void (%"class.content::WebUIDataSource"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.content::WebUIDataSource"*)*, void (%"class.content::WebUIDataSource"*)** %98, i64 10
  %100 = load void (%"class.content::WebUIDataSource"*)*, void (%"class.content::WebUIDataSource"*)** %99, align 8
  call void %100(%"class.content::WebUIDataSource"* %56) #12
  %101 = bitcast %"class.content::WebUIDataSource"* %56 to void (%"class.content::WebUIDataSource"*, i8*, i64, i32)***
  %102 = load void (%"class.content::WebUIDataSource"*, i8*, i64, i32)**, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)** %102, i64 11
  %104 = load void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)** %103, align 8
  call void %104(%"class.content::WebUIDataSource"* %56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14, i32 11578) #12
  %105 = load void (%"class.content::WebUIDataSource"*, i8*, i64, i32)**, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*** %101, align 8
  %106 = getelementptr inbounds void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)** %105, i64 11
  %107 = load void (%"class.content::WebUIDataSource"*, i8*, i64, i32)*, void (%"class.content::WebUIDataSource"*, i8*, i64, i32)** %106, align 8
  call void %107(%"class.content::WebUIDataSource"* %56, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13, i32 11579) #12
  %108 = bitcast %"class.content::WebUIDataSource"* %56 to void (%"class.content::WebUIDataSource"*, i32)***
  %109 = load void (%"class.content::WebUIDataSource"*, i32)**, void (%"class.content::WebUIDataSource"*, i32)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.content::WebUIDataSource"*, i32)*, void (%"class.content::WebUIDataSource"*, i32)** %109, i64 13
  %111 = load void (%"class.content::WebUIDataSource"*, i32)*, void (%"class.content::WebUIDataSource"*, i32)** %110, align 8
  call void %111(%"class.content::WebUIDataSource"* %56, i32 11577) #12
  call void @_ZN7content15WebUIDataSource3AddEPNS_14BrowserContextEPS0_(%"class.content::BrowserContext"* %27, %"class.content::WebUIDataSource"* %56) #12
  ret void
}

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.Profile* @_ZN7Profile9FromWebUIEPN7content5WebUIE(%"class.content::WebUI"*) local_unnamed_addr #1

declare void @_ZN7content15WebUIDataSource3AddEPNS_14BrowserContextEPS0_(%"class.content::BrowserContext"*, %"class.content::WebUIDataSource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content15WebUIControllerD2Ev(%"class.content::WebUIController"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6NaClUID0Ev(%class.NaClUI*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.NaClUI* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare zeroext i1 @_ZN7content15WebUIController26OverrideHandleWebUIMessageERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKN4base9ListValueE(%"class.content::WebUIController"*, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::ListValue"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content15WebUIController18RenderFrameCreatedEPNS_15RenderFrameHostE(%"class.content::WebUIController"*, %"class.content::RenderFrameHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN7content15WebUIController33IsJavascriptErrorReportingEnabledEv(%"class.content::WebUIController"*) unnamed_addr #1

declare i8* @_ZN7content15WebUIController7GetTypeEv(%"class.content::WebUIController"*) unnamed_addr #1

declare %"class.content::WebUIDataSource"* @_ZN7content15WebUIDataSource6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandlerD2Ev(%"class.(anonymous namespace)::NaClDomHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_114NaClDomHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %12, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandlerD0Ev(%"class.(anonymous namespace)::NaClDomHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_114NaClDomHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %9, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %12, %18
  %22 = bitcast %"class.(anonymous namespace)::NaClDomHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandler16RegisterMessagesEv(%"class.(anonymous namespace)::NaClDomHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.content::WebUI"*, %"class.content::WebUI"** %3, align 8
  %5 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = ptrtoint %"class.(anonymous namespace)::NaClDomHandler"* %0 to i64
  %7 = tail call i8* @_Znwm(i64 56) #13, !noalias !2
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::ListValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS4_EEEEEFvS7_EE3RunEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)* @_ZN12_GLOBAL__N_114NaClDomHandler21HandleRequestNaClInfoEPKN4base9ListValueE to i64), i64 0>, <2 x i64>* %10, align 8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %6, i64* %12, align 8, !noalias !2
  %13 = bitcast %"class.base::RepeatingCallback"* %2 to i8**
  store i8* %7, i8** %13, align 8, !alias.scope !2
  %14 = bitcast %"class.content::WebUI"* %4 to void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)***
  %15 = load void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)**, void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)** %15, i64 13
  %17 = load void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.content::WebUI"*, i8*, i64, %"class.base::RepeatingCallback"*)** %16, align 8
  call void %17(%"class.content::WebUI"* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %2) #12
  %18 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19WebUIMessageHandler19OnJavascriptAllowedEv(%"class.content::WebUIMessageHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandler22OnJavascriptDisallowedEv(%"class.(anonymous namespace)::NaClDomHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %2) #12
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandler21HandleRequestNaClInfoEPKN4base9ListValueE(%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*) #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::WeakPtr.87", align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %2
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0)) #12
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %28

28:                                               ; preds = %22, %25
  %29 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %30, align 8
  %31 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 7
  br i1 %33, label %36, label %34, !prof !7

34:                                               ; preds = %28
  %35 = call dereferenceable(24) %"class.std::__1::vector.75"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #14
  unreachable

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ListValue"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp eq i64 %41, 32
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %30, align 8
  br label %55

45:                                               ; preds = %36
  %46 = ashr exact i64 %41, 5
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  %48 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %46) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i8* %47, i8* %48) #12
  %49 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %50, i8** %30, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0), i32 298, %"class.logging::CheckOpResult"* nonnull %8) #12
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  br label %55

55:                                               ; preds = %44, %45, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %56 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %1, i64 0, i32 0
  %57 = call %"class.std::__1::vector.75"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %56) #12
  %58 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  %59 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = icmp eq %"class.std::__1::vector.75"* %57, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %57, i64 0, i32 0, i32 0
  %63 = load %"class.base::Value"*, %"class.base::Value"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %57, i64 0, i32 0, i32 1
  %65 = bitcast %"class.base::Value"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = ptrtoint %"class.base::Value"* %63 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 5
  br label %70

70:                                               ; preds = %55, %61
  %71 = phi %"class.base::Value"* [ %63, %61 ], [ null, %55 ]
  %72 = phi i64 [ %69, %61 ], [ 0, %55 ]
  %73 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %71, i64 %72
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %71, %"class.base::Value"* %71, %"class.base::Value"* %73) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %59, i64 24, i1 false) #12
  %74 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %4, i64 0) #12
  %75 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* %75) #12
  %77 = icmp eq %"class.std::__1::basic_string"* %12, %76
  br i1 %77, label %105, label %78

78:                                               ; preds = %70
  %79 = load i8, i8* %14, align 1
  %80 = icmp slt i8 %79, 0
  %81 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %80, label %95, label %85

85:                                               ; preds = %78
  br i1 %84, label %89, label %86

86:                                               ; preds = %85
  %87 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #12
  br label %105

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %91, i64 %93) #12
  br label %105

95:                                               ; preds = %78
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %101 = zext i8 %83 to i64
  %102 = select i1 %84, i8* %97, i8* %100
  %103 = select i1 %84, i64 %99, i64 %101
  %104 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %102, i64 %103) #12
  br label %105

105:                                              ; preds = %70, %86, %89, %95
  %106 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 2
  %107 = load i8, i8* %106, align 8, !range !8
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %134

109:                                              ; preds = %105
  %110 = call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #12
  %111 = bitcast %"class.base::WeakPtr.87"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #12
  %112 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #12, !noalias !9
  %113 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %113) #12, !noalias !9
  %114 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !9
  %116 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %116, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %115) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #12, !noalias !9
  %117 = call i8* @_Znwm(i64 64) #13, !noalias !12
  %118 = bitcast i8* %117 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %118, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.88"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS4_9allocatorIS7_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE) #12, !noalias !12
  %119 = getelementptr inbounds i8, i8* %117, i64 32
  %120 = bitcast i8* %119 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)* @_ZN12_GLOBAL__N_114NaClDomHandler12OnGotPluginsERKNSt3__16vectorIN7content13WebPluginInfoENS1_9allocatorIS4_EEEE to i64), i64 0>, <2 x i64>* %120, align 8, !noalias !12
  %121 = getelementptr inbounds i8, i8* %117, i64 48
  %122 = bitcast i8* %121 to %"class.base::internal::WeakReference"*
  %123 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %122, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %123) #12, !noalias !12
  %124 = getelementptr inbounds i8, i8* %117, i64 56
  %125 = bitcast i8* %124 to i64*
  %126 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %11, i64 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !12
  store i64 %127, i64* %125, align 8, !noalias !12
  %128 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %117, i8** %128, align 8, !alias.scope !12
  %129 = bitcast %"class.content::PluginService"* %110 to void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)***
  %130 = load void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)**, void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)*, void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)** %130, i64 7
  %132 = load void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)*, void (%"class.content::PluginService"*, %"class.base::OnceCallback"*)** %131, align 8
  call void %132(%"class.content::PluginService"* %110, %"class.base::OnceCallback"* nonnull %10) #12
  %133 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %116) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #12
  br label %134

134:                                              ; preds = %105, %109
  %135 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 3
  store i8 0, i8* %135, align 1
  %136 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0
  call void @_ZN7content19WebUIMessageHandler15AllowJavascriptEv(%"class.content::WebUIMessageHandler"* %136) #12
  call fastcc void @_ZN12_GLOBAL__N_114NaClDomHandler18MaybeRespondToPageEv(%"class.(anonymous namespace)::NaClDomHandler"* %0)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS4_EEEEEFvS7_EE3RunEPNS0_13BindStateBaseES7_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.base::ListValue"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.(anonymous namespace)::NaClDomHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)**
  %22 = load void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)*, void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.base::ListValue"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.(anonymous namespace)::NaClDomHandler"* %13, %"class.base::ListValue"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare %"class.std::__1::vector.75"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #1

declare %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandler12OnGotPluginsERKNSt3__16vectorIN7content13WebPluginInfoENS1_9allocatorIS4_EEEE(%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"* nocapture readnone dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_114NaClDomHandler18MaybeRespondToPageEv(%"class.(anonymous namespace)::NaClDomHandler"* %0)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #9

declare void @_ZN7content19WebUIMessageHandler15AllowJavascriptEv(%"class.content::WebUIMessageHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114NaClDomHandler18MaybeRespondToPageEv(%"class.(anonymous namespace)::NaClDomHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.145", align 8
  %3 = alloca %"class.base::OnceCallback.145", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.std::__1::basic_string.90", align 8
  %6 = alloca %"class.std::__1::basic_string.90", align 8
  %7 = alloca %"class.std::__1::basic_string.90", align 16
  %8 = alloca %"class.std::__1::basic_string.90", align 8
  %9 = alloca %"class.std::__1::basic_string.90", align 8
  %10 = alloca %"class.std::__1::basic_string.90", align 8
  %11 = alloca %"class.std::__1::basic_string.90", align 16
  %12 = alloca %"class.std::__1::basic_string.90", align 8
  %13 = alloca %"class.base::FilePath", align 8
  %14 = alloca %"class.std::__1::basic_string.90", align 8
  %15 = alloca %"class.std::__1::basic_string.90", align 8
  %16 = alloca %"class.std::__1::basic_string.90", align 8
  %17 = alloca %"class.std::__1::basic_string.90", align 8
  %18 = alloca %"class.std::__1::basic_string.90", align 8
  %19 = alloca %"class.std::__1::basic_string.90", align 8
  %20 = alloca %"class.std::__1::basic_string.90", align 8
  %21 = alloca %"class.std::__1::basic_string.90", align 8
  %22 = alloca %"class.std::__1::vector.88", align 8
  %23 = alloca %class.GURL, align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string.90", align 8
  %26 = alloca %"class.std::__1::basic_string.90", align 8
  %27 = alloca %"class.std::__1::basic_string.90", align 16
  %28 = alloca [15 x i8], align 8
  %29 = alloca %"class.std::__1::basic_string.90", align 8
  %30 = alloca %"class.std::__1::basic_string.90", align 8
  %31 = alloca [15 x i8], align 8
  %32 = alloca %"class.std::__1::basic_string.90", align 8
  %33 = alloca %"class.std::__1::basic_string.90", align 8
  %34 = alloca %"class.std::__1::basic_string.90", align 8
  %35 = alloca %"class.std::__1::basic_string.90", align 8
  %36 = alloca %"class.std::__1::basic_string.90", align 8
  %37 = alloca %"class.std::__1::basic_string.90", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.std::__1::basic_string", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.std::__1::basic_string.90", align 8
  %45 = alloca %"class.std::__1::basic_string.90", align 8
  %46 = alloca %"class.base::Location", align 8
  %47 = alloca %"class.base::OnceCallback.132", align 8
  %48 = alloca %"class.base::OnceCallback.133", align 8
  %49 = alloca %"class.base::WeakPtr.87", align 8
  %50 = alloca %"class.base::DictionaryValue", align 8
  %51 = alloca %"class.base::Value", align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %1
  %58 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  br label %62

60:                                               ; preds = %1
  %61 = zext i8 %55 to i64
  br label %62

62:                                               ; preds = %57, %60
  %63 = phi i64 [ %59, %57 ], [ %61, %60 ]
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %1219, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 2
  %67 = load i8, i8* %66, align 8, !range !8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %1219, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 3
  %71 = load i8, i8* %70, align 1, !range !8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %134

73:                                               ; preds = %69
  %74 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #12
  %75 = ptrtoint i8* %74 to i64
  %76 = bitcast %"class.base::Location"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %46, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0), i32 379) #12
  %77 = call i8* @_Znwm(i64 48) #13, !noalias !17
  %78 = bitcast i8* %77 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %78, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSA_EEEFbvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !17
  %79 = getelementptr inbounds i8, i8* %77, i64 32
  %80 = bitcast i8* %79 to i64*
  store i64 ptrtoint (i1 (%"class.std::__1::basic_string"*)* @_ZN12_GLOBAL__N_119CheckPathAndVersionEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i64), i64* %80, align 8, !noalias !17
  %81 = getelementptr inbounds i8, i8* %77, i64 40
  %82 = bitcast i8* %81 to i64*
  store i64 %75, i64* %82, align 8, !noalias !17
  %83 = bitcast %"class.base::WeakPtr.87"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12, !noalias !22
  %85 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %85) #12, !noalias !22
  %86 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 6, i32 0, i32 1
  %87 = load i64, i64* %86, align 8, !noalias !22
  %88 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %49, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %88, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %87) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12, !noalias !22
  %89 = call i8* @_Znwm(i64 72) #13, !noalias !25
  %90 = bitcast i8* %89 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %90, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperISA_NS4_14default_deleteISA_EEEEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEEEbPKNS0_13BindStateBaseENSN_21CancellationQueryModeE) #12, !noalias !25
  %91 = getelementptr inbounds i8, i8* %89, i64 32
  %92 = bitcast i8* %91 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)* @_ZN12_GLOBAL__N_114NaClDomHandler22DidCheckPathAndVersionEPKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb to i64), i64 0>, <2 x i64>* %92, align 8, !noalias !25
  %93 = getelementptr inbounds i8, i8* %89, i64 48
  %94 = bitcast i8* %93 to %"class.base::internal::WeakReference"*
  %95 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %49, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %94, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %95) #12, !noalias !25
  %96 = getelementptr inbounds i8, i8* %89, i64 56
  %97 = bitcast i8* %96 to i64*
  %98 = getelementptr inbounds %"class.base::WeakPtr.87", %"class.base::WeakPtr.87"* %49, i64 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8, !noalias !25
  store i64 %99, i64* %97, align 8, !noalias !25
  %100 = getelementptr inbounds i8, i8* %89, i64 64
  %101 = bitcast i8* %100 to i64*
  store i64 %75, i64* %101, align 8, !noalias !25
  %102 = bitcast %"class.base::OnceCallback.145"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  %103 = bitcast %"class.base::OnceCallback.145"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  %104 = call i8* @_Znwm(i64 8) #13
  %105 = bitcast i8* %104 to i64*
  store i64 0, i64* %105, align 8
  %106 = ptrtoint i8* %104 to i64
  %107 = call i8* @_Znwm(i64 56) #13, !noalias !30
  %108 = bitcast i8* %107 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %108, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !30
  %109 = getelementptr inbounds i8, i8* %107, i64 32
  %110 = bitcast i8* %109 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.132"*, %"class.std::__1::unique_ptr.139"*)* @_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE to i64), i64* %110, align 8, !noalias !30
  %111 = getelementptr inbounds i8, i8* %107, i64 40
  %112 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %47, i64 0, i32 0, i32 0, i32 0
  %113 = ptrtoint i8* %77 to i64
  %114 = bitcast i8* %111 to i64*
  store i64 %113, i64* %114, align 8, !noalias !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %112, align 8, !noalias !30
  %115 = getelementptr inbounds i8, i8* %107, i64 48
  %116 = bitcast i8* %115 to i64*
  store i64 %106, i64* %116, align 8, !noalias !30
  %117 = bitcast %"class.base::OnceCallback.145"* %2 to i8**
  store i8* %107, i8** %117, align 8, !alias.scope !30
  %118 = call i8* @_Znwm(i64 56) #13, !noalias !35
  %119 = bitcast i8* %118 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %119, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !35
  %120 = getelementptr inbounds i8, i8* %118, i64 32
  %121 = bitcast i8* %120 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.133"*, %"class.std::__1::unique_ptr.139"*)* @_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE to i64), i64* %121, align 8, !noalias !35
  %122 = getelementptr inbounds i8, i8* %118, i64 40
  %123 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %48, i64 0, i32 0, i32 0, i32 0
  %124 = ptrtoint i8* %89 to i64
  %125 = bitcast i8* %122 to i64*
  store i64 %124, i64* %125, align 8, !noalias !35
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8, !noalias !35
  %126 = getelementptr inbounds i8, i8* %118, i64 48
  %127 = bitcast i8* %126 to i64*
  store i64 %106, i64* %127, align 8, !noalias !35
  %128 = bitcast %"class.base::OnceCallback.145"* %3 to i8**
  store i8* %118, i8** %128, align 8, !alias.scope !35
  %129 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %46, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp, %"class.base::OnceCallback.145"* nonnull %2, %"class.base::OnceCallback.145"* nonnull %3) #12
  %130 = getelementptr inbounds %"class.base::OnceCallback.145", %"class.base::OnceCallback.145"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %130) #12
  %131 = getelementptr inbounds %"class.base::OnceCallback.145", %"class.base::OnceCallback.145"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %131) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %132 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %48, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %132) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %88) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  %133 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %47, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #12
  br label %1219

134:                                              ; preds = %69
  %135 = bitcast %"class.base::DictionaryValue"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #12
  %136 = bitcast %"class.base::DictionaryValue"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %50) #12
  %137 = call i8* @_Znwm(i64 32) #13
  %138 = bitcast i8* %137 to %"class.base::ListValue"*
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %138) #12
  %139 = bitcast %"class.std::__1::basic_string.90"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.90"* nonnull sret %36, i32 453) #12
  %140 = bitcast %"class.std::__1::basic_string.90"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #12
  %141 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #12
  %142 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #12
  %143 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #12
  %144 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #12
  call void @_ZN12version_info16GetVersionNumberEv(%"class.std::__1::basic_string"* nonnull sret %41) #12
  %145 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !40
  %146 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %143, i8* align 8 %146, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #12, !noalias !40
  %147 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #12
  call void @_ZN6chrome14GetChannelNameEN4base11StrongAliasINS_21WithExtendedStableTagEbEE(%"class.std::__1::basic_string"* nonnull sret %42, i8 1) #12
  %148 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1, !noalias !43
  %151 = icmp slt i8 %150, 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8, !noalias !43
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8, !noalias !43
  %156 = zext i8 %150 to i64
  %157 = select i1 %151, i8* %153, i8* %147
  %158 = select i1 %151, i64 %155, i64 %156
  %159 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %40, i8* %157, i64 %158) #12, !noalias !43
  %160 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 %160, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 24, i1 false) #12, !noalias !43
  %161 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #12, !noalias !46
  %162 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %162, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #12, !noalias !46
  %163 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = select i1 %166, i8* %168, i8* %141
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = zext i8 %165 to i64
  %173 = select i1 %166, i64 %171, i64 %172
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.90"* nonnull sret %37, i8* %169, i64 %173) #12
  %174 = call i8* @_Znwm(i64 32) #13
  %175 = bitcast i8* %174 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %175) #12
  %176 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %175, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %36) #12
  %177 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %175, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %37) #12
  %178 = bitcast i8* %174 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %178) #12
  %179 = bitcast %"class.std::__1::basic_string.90"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %179, i64 0, i32 1, i32 1
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %134
  %184 = bitcast %"class.std::__1::basic_string.90"* %37 to i8**
  %185 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %183, %134
  %187 = load i8, i8* %164, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %190) #13
  br label %191

191:                                              ; preds = %189, %186
  %192 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #13
  br label %199

199:                                              ; preds = %196, %191
  %200 = load i8, i8* %149, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %199
  %203 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %203) #13
  br label %204

204:                                              ; preds = %202, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #12
  %205 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %209, %204
  %213 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %217, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #12
  %221 = bitcast %"class.std::__1::basic_string.90"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %221, i64 0, i32 1, i32 1
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %220
  %226 = bitcast %"class.std::__1::basic_string.90"* %36 to i8**
  %227 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %225, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #12
  %229 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #12
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %229, i8 -86, i64 24, i1 false) #12
  call void @_ZN12version_info9GetOSTypeEv(%"class.std::__1::basic_string"* nonnull sret %43) #12
  %232 = bitcast %"class.std::__1::basic_string.90"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.90"* nonnull sret %44, i32 21145) #12
  %233 = bitcast %"class.std::__1::basic_string.90"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #12
  %234 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = load i8*, i8** %230, align 8
  %239 = select i1 %237, i8* %238, i8* %229
  %240 = load i64, i64* %231, align 8
  %241 = zext i8 %236 to i64
  %242 = select i1 %237, i64 %240, i64 %241
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.90"* nonnull sret %45, i8* %239, i64 %242) #12
  %243 = call i8* @_Znwm(i64 32) #13
  %244 = bitcast i8* %243 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %244) #12
  %245 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %244, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %44) #12
  %246 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %244, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %45) #12
  %247 = bitcast i8* %243 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %247) #12
  %248 = bitcast %"class.std::__1::basic_string.90"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %248, i64 0, i32 1, i32 1
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %228
  %253 = bitcast %"class.std::__1::basic_string.90"* %45 to i8**
  %254 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %254) #13
  br label %255

255:                                              ; preds = %252, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #12
  %256 = bitcast %"class.std::__1::basic_string.90"* %44 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %256, i64 0, i32 1, i32 1
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %255
  %261 = bitcast %"class.std::__1::basic_string.90"* %44 to i8**
  %262 = load i8*, i8** %261, align 8
  call void @_ZdlPv(i8* %262) #13
  br label %263

263:                                              ; preds = %260, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #12
  %264 = bitcast %"class.std::__1::basic_string.90"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #12
  %265 = bitcast %"class.std::__1::basic_string.90"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %265, i64 0, i32 1, i32 1
  store i8 0, i8* %266, align 1
  %267 = bitcast %"class.std::__1::basic_string.90"* %34 to i16*
  store i16 0, i16* %267, align 8
  %268 = bitcast %"class.std::__1::basic_string.90"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #12
  %269 = bitcast %"class.std::__1::basic_string.90"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %269, i64 0, i32 1, i32 1
  store i8 0, i8* %270, align 1
  %271 = bitcast %"class.std::__1::basic_string.90"* %35 to i16*
  store i16 0, i16* %271, align 8
  %272 = call i8* @_Znwm(i64 32) #13
  %273 = bitcast i8* %272 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %273) #12
  %274 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %273, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %34) #12
  %275 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %273, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %35) #12
  %276 = bitcast i8* %272 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %276) #12
  %277 = load i8, i8* %270, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %263
  %280 = bitcast %"class.std::__1::basic_string.90"* %35 to i8**
  %281 = load i8*, i8** %280, align 8
  call void @_ZdlPv(i8* %281) #13
  br label %282

282:                                              ; preds = %279, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #12
  %283 = load i8, i8* %266, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %282
  %286 = bitcast %"class.std::__1::basic_string.90"* %34 to i8**
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %285, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #12
  %289 = load i8, i8* %235, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %292) #13
  br label %293

293:                                              ; preds = %291, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #12
  %294 = bitcast %"class.std::__1::vector.88"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #12
  %295 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %22, i64 0, i32 0, i32 0
  %296 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %22, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 0, i64 24, i1 false) #12
  %297 = call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #12
  %298 = bitcast %class.GURL* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %298) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %23) #12
  %299 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #12
  %300 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  store i8 18, i8* %301, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %299, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 18, i1 false) #12
  %302 = getelementptr inbounds i8, i8* %299, i64 18
  store i8 0, i8* %302, align 2
  %303 = bitcast %"class.content::PluginService"* %297 to i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)***
  %304 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)**, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*** %303, align 8
  %305 = getelementptr inbounds i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)** %304, i64 3
  %306 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)** %305, align 8
  %307 = call zeroext i1 %306(%"class.content::PluginService"* %297, %class.GURL* nonnull dereferenceable(120) %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24, i1 zeroext false, %"class.std::__1::vector.88"* nonnull %22, %"class.std::__1::vector.101"* null) #12
  %308 = load i8, i8* %301, align 1
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %310, label %313

310:                                              ; preds = %293
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  call void @_ZdlPv(i8* %312) #13
  br label %313

313:                                              ; preds = %310, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %298) #12
  %314 = bitcast %"class.std::__1::basic_string.90"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #12
  %315 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 0, i64 24, i1 false) #12
  %316 = bitcast %"class.std::__1::basic_string.90"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %316) #12
  %317 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %318 = call i8* @_Znwm(i64 32) #13
  %319 = bitcast %"class.std::__1::basic_string.90"* %26 to i8**
  store i8* %318, i8** %319, align 8
  %320 = bitcast i64* %317 to <2 x i64>*
  store <2 x i64> <i64 11, i64 -9223372036854775792>, <2 x i64>* %320, align 8
  %321 = bitcast i8* %318 to <8 x i16>*
  store <8 x i16> <i16 78, i16 97, i16 67, i16 108, i16 32, i16 112, i16 108, i16 117>, <8 x i16>* %321, align 2
  %322 = getelementptr inbounds i8, i8* %318, i64 16
  %323 = bitcast i8* %322 to i16*
  store i16 103, i16* %323, align 2
  %324 = getelementptr inbounds i8, i8* %318, i64 18
  %325 = bitcast i8* %324 to i16*
  store i16 105, i16* %325, align 2
  %326 = getelementptr inbounds i8, i8* %318, i64 20
  %327 = bitcast i8* %326 to i16*
  store i16 110, i16* %327, align 2
  %328 = getelementptr inbounds i8, i8* %318, i64 22
  %329 = bitcast i8* %328 to i16*
  store i16 0, i16* %329, align 2
  %330 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %295, align 8
  %331 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %296, align 8
  %332 = icmp eq %"struct.content::WebPluginInfo"* %330, %331
  br i1 %332, label %333, label %351

333:                                              ; preds = %313
  %334 = bitcast %"class.std::__1::basic_string.90"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #12
  %335 = bitcast %"class.std::__1::basic_string.90"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %336 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %335, i64 0, i32 1, i32 1
  store i8 8, i8* %336, align 1
  %337 = bitcast %"class.std::__1::basic_string.90"* %27 to <8 x i16>*
  store <8 x i16> <i16 68, i16 105, i16 115, i16 97, i16 98, i16 108, i16 101, i16 100>, <8 x i16>* %337, align 16
  %338 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %339 = bitcast i64* %338 to i16*
  store i16 0, i16* %339, align 16
  %340 = call i8* @_Znwm(i64 32) #13
  %341 = bitcast i8* %340 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %341) #12
  %342 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %341, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %26) #12
  %343 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %341, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %27) #12
  %344 = bitcast i8* %340 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %344) #12
  %345 = load i8, i8* %336, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %333
  %348 = bitcast %"class.std::__1::basic_string.90"* %27 to i8**
  %349 = load i8*, i8** %348, align 16
  call void @_ZdlPv(i8* %349) #13
  br label %350

350:                                              ; preds = %347, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #12
  br label %841

351:                                              ; preds = %313
  %352 = getelementptr inbounds [15 x i8], [15 x i8]* %28, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %352)
  %353 = bitcast %"class.std::__1::basic_string.90"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %353) #12
  %354 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %330, i64 0, i32 2
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string.90"* nonnull sret %29, %"class.std::__1::basic_string.90"* dereferenceable(24) %354, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.32, i64 0, i64 0)) #12
  %355 = bitcast %"class.std::__1::basic_string.90"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %355) #12
  %356 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %295, align 8
  %357 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %356, i64 0, i32 1
  call void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.90"* nonnull sret %30, %"class.base::FilePath"* %357) #12
  %358 = bitcast %"class.std::__1::basic_string.90"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %359 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %358, i64 0, i32 1, i32 1
  %360 = load i8, i8* %359, align 1, !noalias !49
  %361 = icmp slt i8 %360, 0
  %362 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load i16*, i16** %362, align 8, !noalias !49
  %364 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %365 = load i64, i64* %364, align 8, !noalias !49
  %366 = bitcast %"class.std::__1::basic_string.90"* %30 to i16*
  %367 = zext i8 %360 to i64
  %368 = select i1 %361, i16* %363, i16* %366
  %369 = select i1 %361, i64 %365, i64 %367
  %370 = bitcast %"class.std::__1::basic_string.90"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %371 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %370, i64 0, i32 1, i32 1
  %372 = load i8, i8* %371, align 1, !noalias !49
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %381

374:                                              ; preds = %351
  %375 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %376 = load i64, i64* %375, align 8, !noalias !49
  %377 = and i64 %376, 9223372036854775807
  %378 = add nsw i64 %377, -1
  %379 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %380 = load i64, i64* %379, align 8, !noalias !49
  br label %383

381:                                              ; preds = %351
  %382 = zext i8 %372 to i64
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i64 [ %378, %374 ], [ 10, %381 ]
  %385 = phi i64 [ %380, %374 ], [ %382, %381 ]
  %386 = sub i64 %384, %385
  %387 = icmp ult i64 %386, %369
  br i1 %387, label %549, label %388

388:                                              ; preds = %383
  %389 = icmp eq i64 %369, 0
  br i1 %389, label %552, label %390

390:                                              ; preds = %388
  %391 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load i16*, i16** %391, align 8, !noalias !49
  %393 = bitcast %"class.std::__1::basic_string.90"* %29 to i16*
  %394 = select i1 %373, i16* %392, i16* %393
  %395 = getelementptr inbounds i16, i16* %394, i64 %385
  %396 = icmp ult i64 %369, 16
  br i1 %396, label %486, label %397

397:                                              ; preds = %390
  %398 = add i64 %369, %385
  %399 = getelementptr i16, i16* %394, i64 %398
  %400 = getelementptr i16, i16* %368, i64 %369
  %401 = icmp ult i16* %395, %400
  %402 = icmp ult i16* %368, %399
  %403 = and i1 %401, %402
  br i1 %403, label %486, label %404

404:                                              ; preds = %397
  %405 = and i64 %369, -16
  %406 = sub i64 %369, %405
  %407 = getelementptr i16, i16* %368, i64 %405
  %408 = getelementptr i16, i16* %395, i64 %405
  %409 = add i64 %405, -16
  %410 = lshr exact i64 %409, 4
  %411 = add nuw nsw i64 %410, 1
  %412 = and i64 %411, 3
  %413 = icmp ult i64 %409, 48
  br i1 %413, label %465, label %414

414:                                              ; preds = %404
  %415 = sub nsw i64 %411, %412
  br label %416

416:                                              ; preds = %416, %414
  %417 = phi i64 [ 0, %414 ], [ %462, %416 ]
  %418 = phi i64 [ %415, %414 ], [ %463, %416 ]
  %419 = getelementptr i16, i16* %368, i64 %417
  %420 = getelementptr i16, i16* %395, i64 %417
  %421 = bitcast i16* %419 to <8 x i16>*
  %422 = load <8 x i16>, <8 x i16>* %421, align 2, !alias.scope !52, !noalias !49
  %423 = getelementptr i16, i16* %419, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !52, !noalias !49
  %426 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %422, <8 x i16>* %426, align 2, !alias.scope !55, !noalias !57
  %427 = getelementptr i16, i16* %420, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  store <8 x i16> %425, <8 x i16>* %428, align 2, !alias.scope !55, !noalias !57
  %429 = or i64 %417, 16
  %430 = getelementptr i16, i16* %368, i64 %429
  %431 = getelementptr i16, i16* %395, i64 %429
  %432 = bitcast i16* %430 to <8 x i16>*
  %433 = load <8 x i16>, <8 x i16>* %432, align 2, !alias.scope !52, !noalias !49
  %434 = getelementptr i16, i16* %430, i64 8
  %435 = bitcast i16* %434 to <8 x i16>*
  %436 = load <8 x i16>, <8 x i16>* %435, align 2, !alias.scope !52, !noalias !49
  %437 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %433, <8 x i16>* %437, align 2, !alias.scope !55, !noalias !57
  %438 = getelementptr i16, i16* %431, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %436, <8 x i16>* %439, align 2, !alias.scope !55, !noalias !57
  %440 = or i64 %417, 32
  %441 = getelementptr i16, i16* %368, i64 %440
  %442 = getelementptr i16, i16* %395, i64 %440
  %443 = bitcast i16* %441 to <8 x i16>*
  %444 = load <8 x i16>, <8 x i16>* %443, align 2, !alias.scope !52, !noalias !49
  %445 = getelementptr i16, i16* %441, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !52, !noalias !49
  %448 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %444, <8 x i16>* %448, align 2, !alias.scope !55, !noalias !57
  %449 = getelementptr i16, i16* %442, i64 8
  %450 = bitcast i16* %449 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %450, align 2, !alias.scope !55, !noalias !57
  %451 = or i64 %417, 48
  %452 = getelementptr i16, i16* %368, i64 %451
  %453 = getelementptr i16, i16* %395, i64 %451
  %454 = bitcast i16* %452 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !52, !noalias !49
  %456 = getelementptr i16, i16* %452, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !52, !noalias !49
  %459 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %459, align 2, !alias.scope !55, !noalias !57
  %460 = getelementptr i16, i16* %453, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %461, align 2, !alias.scope !55, !noalias !57
  %462 = add i64 %417, 64
  %463 = add i64 %418, -4
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %416, !llvm.loop !58

465:                                              ; preds = %416, %404
  %466 = phi i64 [ 0, %404 ], [ %462, %416 ]
  %467 = icmp eq i64 %412, 0
  br i1 %467, label %484, label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %481, %468 ], [ %466, %465 ]
  %470 = phi i64 [ %482, %468 ], [ %412, %465 ]
  %471 = getelementptr i16, i16* %368, i64 %469
  %472 = getelementptr i16, i16* %395, i64 %469
  %473 = bitcast i16* %471 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !52, !noalias !49
  %475 = getelementptr i16, i16* %471, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !52, !noalias !49
  %478 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %478, align 2, !alias.scope !55, !noalias !57
  %479 = getelementptr i16, i16* %472, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %480, align 2, !alias.scope !55, !noalias !57
  %481 = add i64 %469, 16
  %482 = add i64 %470, -1
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %468, !llvm.loop !60

484:                                              ; preds = %468, %465
  %485 = icmp eq i64 %369, %405
  br i1 %485, label %539, label %486

486:                                              ; preds = %484, %397, %390
  %487 = phi i64 [ %369, %397 ], [ %369, %390 ], [ %406, %484 ]
  %488 = phi i16* [ %368, %397 ], [ %368, %390 ], [ %407, %484 ]
  %489 = phi i16* [ %395, %397 ], [ %395, %390 ], [ %408, %484 ]
  %490 = add i64 %487, -1
  %491 = and i64 %487, 7
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %504, label %493

493:                                              ; preds = %486, %493
  %494 = phi i64 [ %499, %493 ], [ %487, %486 ]
  %495 = phi i16* [ %501, %493 ], [ %488, %486 ]
  %496 = phi i16* [ %500, %493 ], [ %489, %486 ]
  %497 = phi i64 [ %502, %493 ], [ %491, %486 ]
  %498 = load i16, i16* %495, align 2, !noalias !49
  store i16 %498, i16* %496, align 2, !noalias !49
  %499 = add i64 %494, -1
  %500 = getelementptr inbounds i16, i16* %496, i64 1
  %501 = getelementptr inbounds i16, i16* %495, i64 1
  %502 = add i64 %497, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %493, !llvm.loop !62

504:                                              ; preds = %493, %486
  %505 = phi i64 [ %487, %486 ], [ %499, %493 ]
  %506 = phi i16* [ %488, %486 ], [ %501, %493 ]
  %507 = phi i16* [ %489, %486 ], [ %500, %493 ]
  %508 = icmp ult i64 %490, 7
  br i1 %508, label %539, label %509

509:                                              ; preds = %504, %509
  %510 = phi i64 [ %535, %509 ], [ %505, %504 ]
  %511 = phi i16* [ %537, %509 ], [ %506, %504 ]
  %512 = phi i16* [ %536, %509 ], [ %507, %504 ]
  %513 = load i16, i16* %511, align 2, !noalias !49
  store i16 %513, i16* %512, align 2, !noalias !49
  %514 = getelementptr inbounds i16, i16* %512, i64 1
  %515 = getelementptr inbounds i16, i16* %511, i64 1
  %516 = load i16, i16* %515, align 2, !noalias !49
  store i16 %516, i16* %514, align 2, !noalias !49
  %517 = getelementptr inbounds i16, i16* %512, i64 2
  %518 = getelementptr inbounds i16, i16* %511, i64 2
  %519 = load i16, i16* %518, align 2, !noalias !49
  store i16 %519, i16* %517, align 2, !noalias !49
  %520 = getelementptr inbounds i16, i16* %512, i64 3
  %521 = getelementptr inbounds i16, i16* %511, i64 3
  %522 = load i16, i16* %521, align 2, !noalias !49
  store i16 %522, i16* %520, align 2, !noalias !49
  %523 = getelementptr inbounds i16, i16* %512, i64 4
  %524 = getelementptr inbounds i16, i16* %511, i64 4
  %525 = load i16, i16* %524, align 2, !noalias !49
  store i16 %525, i16* %523, align 2, !noalias !49
  %526 = getelementptr inbounds i16, i16* %512, i64 5
  %527 = getelementptr inbounds i16, i16* %511, i64 5
  %528 = load i16, i16* %527, align 2, !noalias !49
  store i16 %528, i16* %526, align 2, !noalias !49
  %529 = getelementptr inbounds i16, i16* %512, i64 6
  %530 = getelementptr inbounds i16, i16* %511, i64 6
  %531 = load i16, i16* %530, align 2, !noalias !49
  store i16 %531, i16* %529, align 2, !noalias !49
  %532 = getelementptr inbounds i16, i16* %512, i64 7
  %533 = getelementptr inbounds i16, i16* %511, i64 7
  %534 = load i16, i16* %533, align 2, !noalias !49
  store i16 %534, i16* %532, align 2, !noalias !49
  %535 = add i64 %510, -8
  %536 = getelementptr inbounds i16, i16* %512, i64 8
  %537 = getelementptr inbounds i16, i16* %511, i64 8
  %538 = icmp eq i64 %535, 0
  br i1 %538, label %539, label %509, !llvm.loop !63

539:                                              ; preds = %504, %509, %484
  %540 = add i64 %385, %369
  %541 = load i8, i8* %371, align 1, !noalias !49
  %542 = icmp slt i8 %541, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %539
  %544 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %540, i64* %544, align 8, !noalias !49
  br label %547

545:                                              ; preds = %539
  %546 = trunc i64 %540 to i8
  store i8 %546, i8* %371, align 1, !noalias !49
  br label %547

547:                                              ; preds = %545, %543
  %548 = getelementptr inbounds i16, i16* %394, i64 %540
  store i16 0, i16* %548, align 2, !noalias !49
  br label %552

549:                                              ; preds = %383
  %550 = add i64 %385, %369
  %551 = sub i64 %550, %384
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* nonnull %29, i64 %384, i64 %551, i64 %385, i64 %385, i64 0, i64 %369, i16* %368) #12, !noalias !49
  br label %552

552:                                              ; preds = %549, %547, %388
  %553 = bitcast %"class.std::__1::basic_string.90"* %29 to i8**
  %554 = bitcast %"class.std::__1::basic_string.90"* %29 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %557 = bitcast i64* %556 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %352, i8* align 8 %557, i64 15, i1 false) #12
  %558 = getelementptr inbounds i8, i8* %353, i64 23
  %559 = load i8, i8* %558, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %353, i8 0, i64 24, i1 false) #12, !noalias !49
  %560 = bitcast %"class.std::__1::basic_string.90"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %561 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %560, i64 0, i32 1, i32 1
  %562 = load i8, i8* %561, align 1
  %563 = icmp slt i8 %562, 0
  %564 = bitcast %"class.std::__1::basic_string.90"* %25 to i8**
  br i1 %563, label %565, label %567

565:                                              ; preds = %552
  %566 = load i8*, i8** %564, align 8
  call void @_ZdlPv(i8* %566) #13
  br label %567

567:                                              ; preds = %565, %552
  %568 = bitcast %"class.std::__1::basic_string.90"* %25 to i64*
  store i64 %555, i64* %568, align 8
  %569 = bitcast i64* %315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %569, i8* nonnull align 8 %352, i64 15, i1 false) #12
  %570 = getelementptr inbounds i8, i8* %314, i64 23
  store i8 %559, i8* %570, align 1
  %571 = load i8, i8* %359, align 1
  %572 = icmp slt i8 %571, 0
  br i1 %572, label %573, label %576

573:                                              ; preds = %567
  %574 = bitcast %"class.std::__1::basic_string.90"* %30 to i8**
  %575 = load i8*, i8** %574, align 8
  call void @_ZdlPv(i8* %575) #13
  br label %576

576:                                              ; preds = %573, %567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %355) #12
  %577 = load i8, i8* %371, align 1
  %578 = icmp slt i8 %577, 0
  br i1 %578, label %579, label %581

579:                                              ; preds = %576
  %580 = load i8*, i8** %553, align 8
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %579, %576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %353) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %352)
  %582 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114NaClDomHandler15isPluginEnabledEm(%"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0) #12
  br i1 %582, label %585, label %583

583:                                              ; preds = %581
  %584 = call dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string.90"* nonnull %25, i16* getelementptr inbounds ([29 x i16], [29 x i16]* @.str.33, i64 0, i64 0)) #12
  br label %585

585:                                              ; preds = %583, %581
  %586 = call i8* @_Znwm(i64 32) #13
  %587 = bitcast i8* %586 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %587) #12
  %588 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %587, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %26) #12
  %589 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %587, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %25) #12
  %590 = bitcast i8* %586 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %590) #12
  %591 = bitcast %"struct.content::WebPluginInfo"** %296 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.std::__1::vector.88"* %22 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = sub i64 %592, %594
  %596 = sdiv exact i64 %595, 136
  %597 = icmp ugt i64 %596, 1
  br i1 %597, label %598, label %841

598:                                              ; preds = %585
  %599 = getelementptr inbounds [15 x i8], [15 x i8]* %31, i64 0, i64 0
  %600 = bitcast %"class.std::__1::basic_string.90"* %32 to i8*
  %601 = bitcast %"class.std::__1::basic_string.90"* %33 to i8*
  %602 = bitcast %"class.std::__1::basic_string.90"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %603 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %602, i64 0, i32 1, i32 1
  %604 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %606 = bitcast %"class.std::__1::basic_string.90"* %33 to i16*
  %607 = bitcast %"class.std::__1::basic_string.90"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %608 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %607, i64 0, i32 1, i32 1
  %609 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %610 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %611 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = bitcast %"class.std::__1::basic_string.90"* %32 to i16*
  %613 = bitcast %"class.std::__1::basic_string.90"* %32 to i8**
  %614 = bitcast %"class.std::__1::basic_string.90"* %32 to i64*
  %615 = bitcast i64* %610 to i8*
  %616 = getelementptr inbounds i8, i8* %600, i64 23
  %617 = bitcast %"class.std::__1::basic_string.90"* %33 to i8**
  br label %618

618:                                              ; preds = %829, %598
  %619 = phi i64 [ %594, %598 ], [ %837, %829 ]
  %620 = phi i64 [ 1, %598 ], [ %835, %829 ]
  %621 = inttoptr i64 %619 to %"struct.content::WebPluginInfo"*
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %599)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %600) #12
  %622 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %621, i64 %620, i32 2
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string.90"* nonnull sret %32, %"class.std::__1::basic_string.90"* dereferenceable(24) %622, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.32, i64 0, i64 0)) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %601) #12
  %623 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %295, align 8
  %624 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %623, i64 %620, i32 1
  call void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.90"* nonnull sret %33, %"class.base::FilePath"* %624) #12
  %625 = load i8, i8* %603, align 1, !noalias !64
  %626 = icmp slt i8 %625, 0
  %627 = load i16*, i16** %604, align 8, !noalias !64
  %628 = load i64, i64* %605, align 8, !noalias !64
  %629 = zext i8 %625 to i64
  %630 = select i1 %626, i16* %627, i16* %606
  %631 = select i1 %626, i64 %628, i64 %629
  %632 = load i8, i8* %608, align 1, !noalias !64
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %639

634:                                              ; preds = %618
  %635 = load i64, i64* %609, align 8, !noalias !64
  %636 = and i64 %635, 9223372036854775807
  %637 = add nsw i64 %636, -1
  %638 = load i64, i64* %610, align 8, !noalias !64
  br label %641

639:                                              ; preds = %618
  %640 = zext i8 %632 to i64
  br label %641

641:                                              ; preds = %639, %634
  %642 = phi i64 [ %637, %634 ], [ 10, %639 ]
  %643 = phi i64 [ %638, %634 ], [ %640, %639 ]
  %644 = sub i64 %642, %643
  %645 = icmp ult i64 %644, %631
  br i1 %645, label %804, label %646

646:                                              ; preds = %641
  %647 = icmp eq i64 %631, 0
  br i1 %647, label %807, label %648

648:                                              ; preds = %646
  %649 = load i16*, i16** %611, align 8, !noalias !64
  %650 = select i1 %633, i16* %649, i16* %612
  %651 = getelementptr inbounds i16, i16* %650, i64 %643
  %652 = icmp ult i64 %631, 16
  br i1 %652, label %742, label %653

653:                                              ; preds = %648
  %654 = add i64 %631, %643
  %655 = getelementptr i16, i16* %650, i64 %654
  %656 = getelementptr i16, i16* %630, i64 %631
  %657 = icmp ult i16* %651, %656
  %658 = icmp ult i16* %630, %655
  %659 = and i1 %657, %658
  br i1 %659, label %742, label %660

660:                                              ; preds = %653
  %661 = and i64 %631, -16
  %662 = sub i64 %631, %661
  %663 = getelementptr i16, i16* %630, i64 %661
  %664 = getelementptr i16, i16* %651, i64 %661
  %665 = add i64 %661, -16
  %666 = lshr exact i64 %665, 4
  %667 = add nuw nsw i64 %666, 1
  %668 = and i64 %667, 3
  %669 = icmp ult i64 %665, 48
  br i1 %669, label %721, label %670

670:                                              ; preds = %660
  %671 = sub nsw i64 %667, %668
  br label %672

672:                                              ; preds = %672, %670
  %673 = phi i64 [ 0, %670 ], [ %718, %672 ]
  %674 = phi i64 [ %671, %670 ], [ %719, %672 ]
  %675 = getelementptr i16, i16* %630, i64 %673
  %676 = getelementptr i16, i16* %651, i64 %673
  %677 = bitcast i16* %675 to <8 x i16>*
  %678 = load <8 x i16>, <8 x i16>* %677, align 2, !alias.scope !67, !noalias !64
  %679 = getelementptr i16, i16* %675, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  %681 = load <8 x i16>, <8 x i16>* %680, align 2, !alias.scope !67, !noalias !64
  %682 = bitcast i16* %676 to <8 x i16>*
  store <8 x i16> %678, <8 x i16>* %682, align 2, !alias.scope !70, !noalias !72
  %683 = getelementptr i16, i16* %676, i64 8
  %684 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %681, <8 x i16>* %684, align 2, !alias.scope !70, !noalias !72
  %685 = or i64 %673, 16
  %686 = getelementptr i16, i16* %630, i64 %685
  %687 = getelementptr i16, i16* %651, i64 %685
  %688 = bitcast i16* %686 to <8 x i16>*
  %689 = load <8 x i16>, <8 x i16>* %688, align 2, !alias.scope !67, !noalias !64
  %690 = getelementptr i16, i16* %686, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !67, !noalias !64
  %693 = bitcast i16* %687 to <8 x i16>*
  store <8 x i16> %689, <8 x i16>* %693, align 2, !alias.scope !70, !noalias !72
  %694 = getelementptr i16, i16* %687, i64 8
  %695 = bitcast i16* %694 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %695, align 2, !alias.scope !70, !noalias !72
  %696 = or i64 %673, 32
  %697 = getelementptr i16, i16* %630, i64 %696
  %698 = getelementptr i16, i16* %651, i64 %696
  %699 = bitcast i16* %697 to <8 x i16>*
  %700 = load <8 x i16>, <8 x i16>* %699, align 2, !alias.scope !67, !noalias !64
  %701 = getelementptr i16, i16* %697, i64 8
  %702 = bitcast i16* %701 to <8 x i16>*
  %703 = load <8 x i16>, <8 x i16>* %702, align 2, !alias.scope !67, !noalias !64
  %704 = bitcast i16* %698 to <8 x i16>*
  store <8 x i16> %700, <8 x i16>* %704, align 2, !alias.scope !70, !noalias !72
  %705 = getelementptr i16, i16* %698, i64 8
  %706 = bitcast i16* %705 to <8 x i16>*
  store <8 x i16> %703, <8 x i16>* %706, align 2, !alias.scope !70, !noalias !72
  %707 = or i64 %673, 48
  %708 = getelementptr i16, i16* %630, i64 %707
  %709 = getelementptr i16, i16* %651, i64 %707
  %710 = bitcast i16* %708 to <8 x i16>*
  %711 = load <8 x i16>, <8 x i16>* %710, align 2, !alias.scope !67, !noalias !64
  %712 = getelementptr i16, i16* %708, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !67, !noalias !64
  %715 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> %711, <8 x i16>* %715, align 2, !alias.scope !70, !noalias !72
  %716 = getelementptr i16, i16* %709, i64 8
  %717 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %717, align 2, !alias.scope !70, !noalias !72
  %718 = add i64 %673, 64
  %719 = add i64 %674, -4
  %720 = icmp eq i64 %719, 0
  br i1 %720, label %721, label %672, !llvm.loop !73

721:                                              ; preds = %672, %660
  %722 = phi i64 [ 0, %660 ], [ %718, %672 ]
  %723 = icmp eq i64 %668, 0
  br i1 %723, label %740, label %724

724:                                              ; preds = %721, %724
  %725 = phi i64 [ %737, %724 ], [ %722, %721 ]
  %726 = phi i64 [ %738, %724 ], [ %668, %721 ]
  %727 = getelementptr i16, i16* %630, i64 %725
  %728 = getelementptr i16, i16* %651, i64 %725
  %729 = bitcast i16* %727 to <8 x i16>*
  %730 = load <8 x i16>, <8 x i16>* %729, align 2, !alias.scope !67, !noalias !64
  %731 = getelementptr i16, i16* %727, i64 8
  %732 = bitcast i16* %731 to <8 x i16>*
  %733 = load <8 x i16>, <8 x i16>* %732, align 2, !alias.scope !67, !noalias !64
  %734 = bitcast i16* %728 to <8 x i16>*
  store <8 x i16> %730, <8 x i16>* %734, align 2, !alias.scope !70, !noalias !72
  %735 = getelementptr i16, i16* %728, i64 8
  %736 = bitcast i16* %735 to <8 x i16>*
  store <8 x i16> %733, <8 x i16>* %736, align 2, !alias.scope !70, !noalias !72
  %737 = add i64 %725, 16
  %738 = add i64 %726, -1
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %740, label %724, !llvm.loop !74

740:                                              ; preds = %724, %721
  %741 = icmp eq i64 %631, %661
  br i1 %741, label %795, label %742

742:                                              ; preds = %740, %653, %648
  %743 = phi i64 [ %631, %653 ], [ %631, %648 ], [ %662, %740 ]
  %744 = phi i16* [ %630, %653 ], [ %630, %648 ], [ %663, %740 ]
  %745 = phi i16* [ %651, %653 ], [ %651, %648 ], [ %664, %740 ]
  %746 = add i64 %743, -1
  %747 = and i64 %743, 7
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %760, label %749

749:                                              ; preds = %742, %749
  %750 = phi i64 [ %755, %749 ], [ %743, %742 ]
  %751 = phi i16* [ %757, %749 ], [ %744, %742 ]
  %752 = phi i16* [ %756, %749 ], [ %745, %742 ]
  %753 = phi i64 [ %758, %749 ], [ %747, %742 ]
  %754 = load i16, i16* %751, align 2, !noalias !64
  store i16 %754, i16* %752, align 2, !noalias !64
  %755 = add i64 %750, -1
  %756 = getelementptr inbounds i16, i16* %752, i64 1
  %757 = getelementptr inbounds i16, i16* %751, i64 1
  %758 = add i64 %753, -1
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %760, label %749, !llvm.loop !75

760:                                              ; preds = %749, %742
  %761 = phi i64 [ %743, %742 ], [ %755, %749 ]
  %762 = phi i16* [ %744, %742 ], [ %757, %749 ]
  %763 = phi i16* [ %745, %742 ], [ %756, %749 ]
  %764 = icmp ult i64 %746, 7
  br i1 %764, label %795, label %765

765:                                              ; preds = %760, %765
  %766 = phi i64 [ %791, %765 ], [ %761, %760 ]
  %767 = phi i16* [ %793, %765 ], [ %762, %760 ]
  %768 = phi i16* [ %792, %765 ], [ %763, %760 ]
  %769 = load i16, i16* %767, align 2, !noalias !64
  store i16 %769, i16* %768, align 2, !noalias !64
  %770 = getelementptr inbounds i16, i16* %768, i64 1
  %771 = getelementptr inbounds i16, i16* %767, i64 1
  %772 = load i16, i16* %771, align 2, !noalias !64
  store i16 %772, i16* %770, align 2, !noalias !64
  %773 = getelementptr inbounds i16, i16* %768, i64 2
  %774 = getelementptr inbounds i16, i16* %767, i64 2
  %775 = load i16, i16* %774, align 2, !noalias !64
  store i16 %775, i16* %773, align 2, !noalias !64
  %776 = getelementptr inbounds i16, i16* %768, i64 3
  %777 = getelementptr inbounds i16, i16* %767, i64 3
  %778 = load i16, i16* %777, align 2, !noalias !64
  store i16 %778, i16* %776, align 2, !noalias !64
  %779 = getelementptr inbounds i16, i16* %768, i64 4
  %780 = getelementptr inbounds i16, i16* %767, i64 4
  %781 = load i16, i16* %780, align 2, !noalias !64
  store i16 %781, i16* %779, align 2, !noalias !64
  %782 = getelementptr inbounds i16, i16* %768, i64 5
  %783 = getelementptr inbounds i16, i16* %767, i64 5
  %784 = load i16, i16* %783, align 2, !noalias !64
  store i16 %784, i16* %782, align 2, !noalias !64
  %785 = getelementptr inbounds i16, i16* %768, i64 6
  %786 = getelementptr inbounds i16, i16* %767, i64 6
  %787 = load i16, i16* %786, align 2, !noalias !64
  store i16 %787, i16* %785, align 2, !noalias !64
  %788 = getelementptr inbounds i16, i16* %768, i64 7
  %789 = getelementptr inbounds i16, i16* %767, i64 7
  %790 = load i16, i16* %789, align 2, !noalias !64
  store i16 %790, i16* %788, align 2, !noalias !64
  %791 = add i64 %766, -8
  %792 = getelementptr inbounds i16, i16* %768, i64 8
  %793 = getelementptr inbounds i16, i16* %767, i64 8
  %794 = icmp eq i64 %791, 0
  br i1 %794, label %795, label %765, !llvm.loop !76

795:                                              ; preds = %760, %765, %740
  %796 = add i64 %643, %631
  %797 = load i8, i8* %608, align 1, !noalias !64
  %798 = icmp slt i8 %797, 0
  br i1 %798, label %799, label %800

799:                                              ; preds = %795
  store i64 %796, i64* %610, align 8, !noalias !64
  br label %802

800:                                              ; preds = %795
  %801 = trunc i64 %796 to i8
  store i8 %801, i8* %608, align 1, !noalias !64
  br label %802

802:                                              ; preds = %800, %799
  %803 = getelementptr inbounds i16, i16* %650, i64 %796
  store i16 0, i16* %803, align 2, !noalias !64
  br label %807

804:                                              ; preds = %641
  %805 = add i64 %643, %631
  %806 = sub i64 %805, %642
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* nonnull %32, i64 %642, i64 %806, i64 %643, i64 %643, i64 0, i64 %631, i16* %630) #12, !noalias !64
  br label %807

807:                                              ; preds = %804, %802, %646
  %808 = load i64, i64* %614, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %599, i8* align 8 %615, i64 15, i1 false) #12
  %809 = load i8, i8* %616, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %600, i8 0, i64 24, i1 false) #12, !noalias !64
  %810 = load i8, i8* %561, align 1
  %811 = icmp slt i8 %810, 0
  br i1 %811, label %812, label %814

812:                                              ; preds = %807
  %813 = load i8*, i8** %564, align 8
  call void @_ZdlPv(i8* %813) #13
  br label %814

814:                                              ; preds = %812, %807
  store i64 %808, i64* %568, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %569, i8* nonnull align 8 %599, i64 15, i1 false) #12
  store i8 %809, i8* %570, align 1
  %815 = load i8, i8* %603, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %819

817:                                              ; preds = %814
  %818 = load i8*, i8** %617, align 8
  call void @_ZdlPv(i8* %818) #13
  br label %819

819:                                              ; preds = %817, %814
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %601) #12
  %820 = load i8, i8* %608, align 1
  %821 = icmp slt i8 %820, 0
  br i1 %821, label %822, label %824

822:                                              ; preds = %819
  %823 = load i8*, i8** %613, align 8
  call void @_ZdlPv(i8* %823) #13
  br label %824

824:                                              ; preds = %822, %819
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %600) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %599)
  %825 = call dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string.90"* nonnull %25, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @.str.34, i64 0, i64 0)) #12
  %826 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114NaClDomHandler15isPluginEnabledEm(%"class.(anonymous namespace)::NaClDomHandler"* %0, i64 %620) #12
  br i1 %826, label %829, label %827

827:                                              ; preds = %824
  %828 = call dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string.90"* nonnull %25, i16* getelementptr inbounds ([29 x i16], [29 x i16]* @.str.33, i64 0, i64 0)) #12
  br label %829

829:                                              ; preds = %827, %824
  %830 = call i8* @_Znwm(i64 32) #13
  %831 = bitcast i8* %830 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %831) #12
  %832 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %831, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %26) #12
  %833 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %831, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %25) #12
  %834 = bitcast i8* %830 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %834) #12
  %835 = add nuw i64 %620, 1
  %836 = load i64, i64* %591, align 8
  %837 = load i64, i64* %593, align 8
  %838 = sub i64 %836, %837
  %839 = sdiv exact i64 %838, 136
  %840 = icmp ult i64 %835, %839
  br i1 %840, label %618, label %841

841:                                              ; preds = %829, %585, %350
  %842 = bitcast %"class.std::__1::basic_string.90"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %842) #12
  %843 = bitcast %"class.std::__1::basic_string.90"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %844 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %843, i64 0, i32 1, i32 1
  store i8 0, i8* %844, align 1
  %845 = bitcast %"class.std::__1::basic_string.90"* %20 to i16*
  store i16 0, i16* %845, align 8
  %846 = bitcast %"class.std::__1::basic_string.90"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %846) #12
  %847 = bitcast %"class.std::__1::basic_string.90"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %848 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %847, i64 0, i32 1, i32 1
  store i8 0, i8* %848, align 1
  %849 = bitcast %"class.std::__1::basic_string.90"* %21 to i16*
  store i16 0, i16* %849, align 8
  %850 = call i8* @_Znwm(i64 32) #13
  %851 = bitcast i8* %850 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %851) #12
  %852 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %851, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %20) #12
  %853 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %851, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %21) #12
  %854 = bitcast i8* %850 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %854) #12
  %855 = load i8, i8* %848, align 1
  %856 = icmp slt i8 %855, 0
  br i1 %856, label %857, label %860

857:                                              ; preds = %841
  %858 = bitcast %"class.std::__1::basic_string.90"* %21 to i8**
  %859 = load i8*, i8** %858, align 8
  call void @_ZdlPv(i8* %859) #13
  br label %860

860:                                              ; preds = %857, %841
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %846) #12
  %861 = load i8, i8* %844, align 1
  %862 = icmp slt i8 %861, 0
  br i1 %862, label %863, label %866

863:                                              ; preds = %860
  %864 = bitcast %"class.std::__1::basic_string.90"* %20 to i8**
  %865 = load i8*, i8** %864, align 8
  call void @_ZdlPv(i8* %865) #13
  br label %866

866:                                              ; preds = %863, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %842) #12
  %867 = bitcast %"class.std::__1::basic_string.90"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %868 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %867, i64 0, i32 1, i32 1
  %869 = load i8, i8* %868, align 1
  %870 = icmp slt i8 %869, 0
  br i1 %870, label %871, label %873

871:                                              ; preds = %866
  %872 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %872) #13
  br label %873

873:                                              ; preds = %871, %866
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %316) #12
  %874 = bitcast %"class.std::__1::basic_string.90"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %875 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %874, i64 0, i32 1, i32 1
  %876 = load i8, i8* %875, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %881

878:                                              ; preds = %873
  %879 = bitcast %"class.std::__1::basic_string.90"* %25 to i8**
  %880 = load i8*, i8** %879, align 8
  call void @_ZdlPv(i8* %880) #13
  br label %881

881:                                              ; preds = %878, %873
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #12
  %882 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %295, align 8
  %883 = icmp eq %"struct.content::WebPluginInfo"* %882, null
  br i1 %883, label %897, label %884

884:                                              ; preds = %881
  %885 = bitcast %"struct.content::WebPluginInfo"* %882 to i8*
  %886 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %296, align 8
  %887 = icmp eq %"struct.content::WebPluginInfo"* %886, %882
  br i1 %887, label %895, label %888

888:                                              ; preds = %884, %888
  %889 = phi %"struct.content::WebPluginInfo"* [ %890, %888 ], [ %886, %884 ]
  %890 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %889, i64 -1
  call void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"* %890) #12
  %891 = icmp eq %"struct.content::WebPluginInfo"* %890, %882
  br i1 %891, label %892, label %888

892:                                              ; preds = %888
  %893 = bitcast %"class.std::__1::vector.88"* %22 to i8**
  %894 = load i8*, i8** %893, align 8
  br label %895

895:                                              ; preds = %892, %884
  %896 = phi i8* [ %894, %892 ], [ %885, %884 ]
  store %"struct.content::WebPluginInfo"* %882, %"struct.content::WebPluginInfo"** %296, align 8
  call void @_ZdlPv(i8* %896) #13
  br label %897

897:                                              ; preds = %895, %881
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #12
  %898 = bitcast %"class.std::__1::basic_string.90"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %898) #12
  %899 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 552441554290780842, i64* %899, align 16
  %900 = bitcast %"class.std::__1::basic_string.90"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %901 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %900, i64 0, i32 1, i32 1
  %902 = bitcast %"class.std::__1::basic_string.90"* %11 to <8 x i16>*
  store <8 x i16> <i16 69, i16 110, i16 97, i16 98, i16 108, i16 101, i16 100, i16 0>, <8 x i16>* %902, align 16
  %903 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114NaClDomHandler15isPluginEnabledEm(%"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0) #12
  br i1 %903, label %906, label %904

904:                                              ; preds = %897
  %905 = call dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.90"* nonnull %11, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @.str.36, i64 0, i64 0)) #12
  br label %906

906:                                              ; preds = %904, %897
  %907 = bitcast %"class.std::__1::basic_string.90"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %907) #12
  %908 = call i8* @_Znwm(i64 64) #13
  %909 = bitcast %"class.std::__1::basic_string.90"* %12 to i8**
  store i8* %908, i8** %909, align 8
  %910 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %911 = bitcast i64* %910 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %911, align 8
  %912 = bitcast %"class.std::__1::basic_string.90"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %913 = bitcast i8* %908 to <8 x i16>*
  store <8 x i16> <i16 80, i16 111, i16 114, i16 116, i16 97, i16 98, i16 108, i16 101>, <8 x i16>* %913, align 2
  %914 = getelementptr inbounds i8, i8* %908, i64 16
  %915 = bitcast i8* %914 to <8 x i16>*
  store <8 x i16> <i16 32, i16 78, i16 97, i16 116, i16 105, i16 118, i16 101, i16 32>, <8 x i16>* %915, align 2
  %916 = getelementptr inbounds i8, i8* %908, i64 32
  %917 = bitcast i8* %916 to <8 x i16>*
  store <8 x i16> <i16 67, i16 108, i16 105, i16 101, i16 110, i16 116, i16 32, i16 40>, <8 x i16>* %917, align 2
  %918 = getelementptr inbounds i8, i8* %908, i64 48
  %919 = bitcast i8* %918 to i16*
  store i16 80, i16* %919, align 2
  %920 = getelementptr inbounds i8, i8* %908, i64 50
  %921 = bitcast i8* %920 to i16*
  store i16 78, i16* %921, align 2
  %922 = getelementptr inbounds i8, i8* %908, i64 52
  %923 = bitcast i8* %922 to i16*
  store i16 97, i16* %923, align 2
  %924 = getelementptr inbounds i8, i8* %908, i64 54
  %925 = bitcast i8* %924 to i16*
  store i16 67, i16* %925, align 2
  %926 = getelementptr inbounds i8, i8* %908, i64 56
  %927 = bitcast i8* %926 to i16*
  store i16 108, i16* %927, align 2
  %928 = getelementptr inbounds i8, i8* %908, i64 58
  %929 = bitcast i8* %928 to i16*
  store i16 41, i16* %929, align 2
  %930 = getelementptr inbounds i8, i8* %908, i64 60
  %931 = bitcast i8* %930 to i16*
  store i16 0, i16* %931, align 2
  %932 = call i8* @_Znwm(i64 32) #13
  %933 = bitcast i8* %932 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %933) #12
  %934 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %933, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %12) #12
  %935 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %933, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %11) #12
  %936 = bitcast i8* %932 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %936) #12
  %937 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %912, i64 0, i32 1, i32 1
  %938 = load i8, i8* %937, align 1
  %939 = icmp slt i8 %938, 0
  br i1 %939, label %940, label %942

940:                                              ; preds = %906
  %941 = load i8*, i8** %909, align 8
  call void @_ZdlPv(i8* %941) #13
  br label %942

942:                                              ; preds = %940, %906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %907) #12
  %943 = bitcast %"class.base::FilePath"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %943) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %943, i8 -86, i64 24, i1 false) #12
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %13) #12
  %944 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 1023, %"class.base::FilePath"* nonnull %13) #12
  br i1 %944, label %945, label %959

945:                                              ; preds = %942
  %946 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %947 = bitcast %"class.base::FilePath"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %948 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %947, i64 0, i32 1, i32 0
  %949 = load i8, i8* %948, align 1
  %950 = icmp slt i8 %949, 0
  %951 = load i64, i64* %946, align 8
  %952 = zext i8 %949 to i64
  %953 = select i1 %950, i64 %951, i64 %952
  %954 = icmp eq i64 %953, 0
  br i1 %954, label %959, label %955

955:                                              ; preds = %945
  %956 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 4
  %957 = load i8, i8* %956, align 2, !range !8
  %958 = icmp eq i8 %957, 0
  br i1 %958, label %959, label %1006

959:                                              ; preds = %955, %945, %942
  %960 = bitcast %"class.std::__1::basic_string.90"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %960) #12
  %961 = call i8* @_Znwm(i64 48) #13
  %962 = bitcast %"class.std::__1::basic_string.90"* %14 to i8**
  store i8* %961, i8** %962, align 8
  %963 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %964 = bitcast i64* %963 to <2 x i64>*
  store <2 x i64> <i64 16, i64 -9223372036854775784>, <2 x i64>* %964, align 8
  %965 = bitcast i8* %961 to <8 x i16>*
  store <8 x i16> <i16 80, i16 78, i16 97, i16 67, i16 108, i16 32, i16 116, i16 114>, <8 x i16>* %965, align 2
  %966 = getelementptr inbounds i8, i8* %961, i64 16
  %967 = bitcast i8* %966 to <8 x i16>*
  store <8 x i16> <i16 97, i16 110, i16 115, i16 108, i16 97, i16 116, i16 111, i16 114>, <8 x i16>* %967, align 2
  %968 = getelementptr inbounds i8, i8* %961, i64 32
  %969 = bitcast i8* %968 to i16*
  store i16 0, i16* %969, align 2
  %970 = bitcast %"class.std::__1::basic_string.90"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %970) #12
  %971 = call i8* @_Znwm(i64 32) #13
  %972 = bitcast %"class.std::__1::basic_string.90"* %15 to i8**
  store i8* %971, i8** %972, align 8
  %973 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %974 = bitcast i64* %973 to <2 x i64>*
  store <2 x i64> <i64 13, i64 -9223372036854775792>, <2 x i64>* %974, align 8
  %975 = bitcast %"class.std::__1::basic_string.90"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %976 = bitcast i8* %971 to <8 x i16>*
  store <8 x i16> <i16 78, i16 111, i16 116, i16 32, i16 105, i16 110, i16 115, i16 116>, <8 x i16>* %976, align 2
  %977 = getelementptr inbounds i8, i8* %971, i64 16
  %978 = bitcast i8* %977 to i16*
  store i16 97, i16* %978, align 2
  %979 = getelementptr inbounds i8, i8* %971, i64 18
  %980 = bitcast i8* %979 to i16*
  store i16 108, i16* %980, align 2
  %981 = getelementptr inbounds i8, i8* %971, i64 20
  %982 = bitcast i8* %981 to i16*
  store i16 108, i16* %982, align 2
  %983 = getelementptr inbounds i8, i8* %971, i64 22
  %984 = bitcast i8* %983 to i16*
  store i16 101, i16* %984, align 2
  %985 = getelementptr inbounds i8, i8* %971, i64 24
  %986 = bitcast i8* %985 to i16*
  store i16 100, i16* %986, align 2
  %987 = getelementptr inbounds i8, i8* %971, i64 26
  %988 = bitcast i8* %987 to i16*
  store i16 0, i16* %988, align 2
  %989 = call i8* @_Znwm(i64 32) #13
  %990 = bitcast i8* %989 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %990) #12
  %991 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %990, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %14) #12
  %992 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %990, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %15) #12
  %993 = bitcast i8* %989 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %993) #12
  %994 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %975, i64 0, i32 1, i32 1
  %995 = load i8, i8* %994, align 1
  %996 = icmp slt i8 %995, 0
  br i1 %996, label %997, label %999

997:                                              ; preds = %959
  %998 = load i8*, i8** %972, align 8
  call void @_ZdlPv(i8* %998) #13
  br label %999

999:                                              ; preds = %997, %959
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %970) #12
  %1000 = bitcast %"class.std::__1::basic_string.90"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1001 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1000, i64 0, i32 1, i32 1
  %1002 = load i8, i8* %1001, align 1
  %1003 = icmp slt i8 %1002, 0
  br i1 %1003, label %1004, label %1093

1004:                                             ; preds = %999
  %1005 = load i8*, i8** %962, align 8
  call void @_ZdlPv(i8* %1005) #13
  br label %1093

1006:                                             ; preds = %955
  %1007 = bitcast %"class.std::__1::basic_string.90"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1007) #12
  %1008 = call i8* @_Znwm(i64 48) #13
  %1009 = bitcast %"class.std::__1::basic_string.90"* %16 to i8**
  store i8* %1008, i8** %1009, align 8
  %1010 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1011 = bitcast i64* %1010 to <2 x i64>*
  store <2 x i64> <i64 21, i64 -9223372036854775784>, <2 x i64>* %1011, align 8
  %1012 = bitcast i8* %1008 to <8 x i16>*
  store <8 x i16> <i16 80, i16 78, i16 97, i16 67, i16 108, i16 32, i16 116, i16 114>, <8 x i16>* %1012, align 2
  %1013 = getelementptr inbounds i8, i8* %1008, i64 16
  %1014 = bitcast i8* %1013 to <8 x i16>*
  store <8 x i16> <i16 97, i16 110, i16 115, i16 108, i16 97, i16 116, i16 111, i16 114>, <8 x i16>* %1014, align 2
  %1015 = getelementptr inbounds i8, i8* %1008, i64 32
  %1016 = bitcast i8* %1015 to i16*
  store i16 32, i16* %1016, align 2
  %1017 = getelementptr inbounds i8, i8* %1008, i64 34
  %1018 = bitcast i8* %1017 to i16*
  store i16 112, i16* %1018, align 2
  %1019 = getelementptr inbounds i8, i8* %1008, i64 36
  %1020 = bitcast i8* %1019 to i16*
  store i16 97, i16* %1020, align 2
  %1021 = getelementptr inbounds i8, i8* %1008, i64 38
  %1022 = bitcast i8* %1021 to i16*
  store i16 116, i16* %1022, align 2
  %1023 = getelementptr inbounds i8, i8* %1008, i64 40
  %1024 = bitcast i8* %1023 to i16*
  store i16 104, i16* %1024, align 2
  %1025 = getelementptr inbounds i8, i8* %1008, i64 42
  %1026 = bitcast i8* %1025 to i16*
  store i16 0, i16* %1026, align 2
  %1027 = bitcast %"class.std::__1::basic_string.90"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1027) #12
  call void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.90"* nonnull sret %17, %"class.base::FilePath"* nonnull %13) #12
  %1028 = call i8* @_Znwm(i64 32) #13
  %1029 = bitcast i8* %1028 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %1029) #12
  %1030 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1029, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %16) #12
  %1031 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1029, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %17) #12
  %1032 = bitcast i8* %1028 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %1032) #12
  %1033 = bitcast %"class.std::__1::basic_string.90"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1034 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1033, i64 0, i32 1, i32 1
  %1035 = load i8, i8* %1034, align 1
  %1036 = icmp slt i8 %1035, 0
  br i1 %1036, label %1037, label %1040

1037:                                             ; preds = %1006
  %1038 = bitcast %"class.std::__1::basic_string.90"* %17 to i8**
  %1039 = load i8*, i8** %1038, align 8
  call void @_ZdlPv(i8* %1039) #13
  br label %1040

1040:                                             ; preds = %1037, %1006
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1027) #12
  %1041 = bitcast %"class.std::__1::basic_string.90"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1042 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1041, i64 0, i32 1, i32 1
  %1043 = load i8, i8* %1042, align 1
  %1044 = icmp slt i8 %1043, 0
  br i1 %1044, label %1045, label %1047

1045:                                             ; preds = %1040
  %1046 = load i8*, i8** %1009, align 8
  call void @_ZdlPv(i8* %1046) #13
  br label %1047

1047:                                             ; preds = %1045, %1040
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1007) #12
  %1048 = bitcast %"class.std::__1::basic_string.90"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1048) #12
  %1049 = call i8* @_Znwm(i64 64) #13
  %1050 = bitcast %"class.std::__1::basic_string.90"* %18 to i8**
  store i8* %1049, i8** %1050, align 8
  %1051 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1052 = bitcast i64* %1051 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %1052, align 8
  %1053 = bitcast i8* %1049 to <8 x i16>*
  store <8 x i16> <i16 80, i16 78, i16 97, i16 67, i16 108, i16 32, i16 116, i16 114>, <8 x i16>* %1053, align 2
  %1054 = getelementptr inbounds i8, i8* %1049, i64 16
  %1055 = bitcast i8* %1054 to <8 x i16>*
  store <8 x i16> <i16 97, i16 110, i16 115, i16 108, i16 97, i16 116, i16 111, i16 114>, <8 x i16>* %1055, align 2
  %1056 = getelementptr inbounds i8, i8* %1049, i64 32
  %1057 = bitcast i8* %1056 to <8 x i16>*
  store <8 x i16> <i16 32, i16 118, i16 101, i16 114, i16 115, i16 105, i16 111, i16 110>, <8 x i16>* %1057, align 2
  %1058 = getelementptr inbounds i8, i8* %1049, i64 48
  %1059 = bitcast i8* %1058 to i16*
  store i16 0, i16* %1059, align 2
  %1060 = bitcast %"class.std::__1::basic_string.90"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1060) #12
  %1061 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 5
  %1062 = bitcast %"class.std::__1::basic_string"* %1061 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1063 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1062, i64 0, i32 1, i32 0
  %1064 = load i8, i8* %1063, align 1
  %1065 = icmp slt i8 %1064, 0
  %1066 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1061, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = load i8*, i8** %1066, align 8
  %1068 = bitcast %"class.std::__1::basic_string"* %1061 to i8*
  %1069 = select i1 %1065, i8* %1067, i8* %1068
  %1070 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1071 = load i64, i64* %1070, align 8
  %1072 = zext i8 %1064 to i64
  %1073 = select i1 %1065, i64 %1071, i64 %1072
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.90"* nonnull sret %19, i8* %1069, i64 %1073) #12
  %1074 = call i8* @_Znwm(i64 32) #13
  %1075 = bitcast i8* %1074 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %1075) #12
  %1076 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1075, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %18) #12
  %1077 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1075, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %19) #12
  %1078 = bitcast i8* %1074 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %1078) #12
  %1079 = bitcast %"class.std::__1::basic_string.90"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1080 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1079, i64 0, i32 1, i32 1
  %1081 = load i8, i8* %1080, align 1
  %1082 = icmp slt i8 %1081, 0
  br i1 %1082, label %1083, label %1086

1083:                                             ; preds = %1047
  %1084 = bitcast %"class.std::__1::basic_string.90"* %19 to i8**
  %1085 = load i8*, i8** %1084, align 8
  call void @_ZdlPv(i8* %1085) #13
  br label %1086

1086:                                             ; preds = %1083, %1047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1060) #12
  %1087 = bitcast %"class.std::__1::basic_string.90"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1088 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1087, i64 0, i32 1, i32 1
  %1089 = load i8, i8* %1088, align 1
  %1090 = icmp slt i8 %1089, 0
  br i1 %1090, label %1091, label %1093

1091:                                             ; preds = %1086
  %1092 = load i8*, i8** %1050, align 8
  call void @_ZdlPv(i8* %1092) #13
  br label %1093

1093:                                             ; preds = %1086, %1091, %999, %1004
  %1094 = phi i8* [ %960, %1004 ], [ %960, %999 ], [ %1048, %1091 ], [ %1048, %1086 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1094) #12
  %1095 = bitcast %"class.std::__1::basic_string.90"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1095) #12
  %1096 = bitcast %"class.std::__1::basic_string.90"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1097 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1096, i64 0, i32 1, i32 1
  store i8 0, i8* %1097, align 1
  %1098 = bitcast %"class.std::__1::basic_string.90"* %9 to i16*
  store i16 0, i16* %1098, align 8
  %1099 = bitcast %"class.std::__1::basic_string.90"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1099) #12
  %1100 = bitcast %"class.std::__1::basic_string.90"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1100, i64 0, i32 1, i32 1
  store i8 0, i8* %1101, align 1
  %1102 = bitcast %"class.std::__1::basic_string.90"* %10 to i16*
  store i16 0, i16* %1102, align 8
  %1103 = call i8* @_Znwm(i64 32) #13
  %1104 = bitcast i8* %1103 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %1104) #12
  %1105 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1104, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %9) #12
  %1106 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %10) #12
  %1107 = bitcast i8* %1103 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %1107) #12
  %1108 = load i8, i8* %1101, align 1
  %1109 = icmp slt i8 %1108, 0
  br i1 %1109, label %1110, label %1113

1110:                                             ; preds = %1093
  %1111 = bitcast %"class.std::__1::basic_string.90"* %10 to i8**
  %1112 = load i8*, i8** %1111, align 8
  call void @_ZdlPv(i8* %1112) #13
  br label %1113

1113:                                             ; preds = %1110, %1093
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1099) #12
  %1114 = load i8, i8* %1097, align 1
  %1115 = icmp slt i8 %1114, 0
  br i1 %1115, label %1116, label %1119

1116:                                             ; preds = %1113
  %1117 = bitcast %"class.std::__1::basic_string.90"* %9 to i8**
  %1118 = load i8*, i8** %1117, align 8
  call void @_ZdlPv(i8* %1118) #13
  br label %1119

1119:                                             ; preds = %1116, %1113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1095) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %943) #12
  %1120 = load i8, i8* %901, align 1
  %1121 = icmp slt i8 %1120, 0
  br i1 %1121, label %1122, label %1125

1122:                                             ; preds = %1119
  %1123 = bitcast %"class.std::__1::basic_string.90"* %11 to i8**
  %1124 = load i8*, i8** %1123, align 16
  call void @_ZdlPv(i8* %1124) #13
  br label %1125

1125:                                             ; preds = %1122, %1119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %898) #12
  %1126 = bitcast %"class.std::__1::basic_string.90"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1126) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1126, i8 -86, i64 24, i1 false) #12
  %1127 = bitcast %"class.std::__1::basic_string.90"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1127, i64 0, i32 1, i32 1
  store i8 8, i8* %1128, align 1
  %1129 = bitcast %"class.std::__1::basic_string.90"* %7 to <8 x i16>*
  store <8 x i16> <i16 68, i16 105, i16 115, i16 97, i16 98, i16 108, i16 101, i16 100>, <8 x i16>* %1129, align 16
  %1130 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1131 = bitcast i64* %1130 to i16*
  store i16 0, i16* %1131, align 16
  %1132 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114NaClDomHandler15isPluginEnabledEm(%"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0) #12
  br i1 %1132, label %1133, label %1138

1133:                                             ; preds = %1125
  %1134 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %1135 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1134, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches11kEnableNaClE, i64 0, i64 0)) #12
  br i1 %1135, label %1136, label %1138

1136:                                             ; preds = %1133
  %1137 = call dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.90"* nonnull %7, i16* getelementptr inbounds ([32 x i16], [32 x i16]* @.str.42, i64 0, i64 0)) #12
  br label %1138

1138:                                             ; preds = %1136, %1133, %1125
  %1139 = bitcast %"class.std::__1::basic_string.90"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1139) #12
  %1140 = call i8* @_Znwm(i64 96) #13
  %1141 = bitcast %"class.std::__1::basic_string.90"* %8 to i8**
  store i8* %1140, i8** %1141, align 8
  %1142 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1143 = bitcast i64* %1142 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %1143, align 8
  %1144 = bitcast %"class.std::__1::basic_string.90"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1145 = bitcast i8* %1140 to <8 x i16>*
  store <8 x i16> <i16 78, i16 97, i16 116, i16 105, i16 118, i16 101, i16 32, i16 67>, <8 x i16>* %1145, align 2
  %1146 = getelementptr inbounds i8, i8* %1140, i64 16
  %1147 = bitcast i8* %1146 to <8 x i16>*
  store <8 x i16> <i16 108, i16 105, i16 101, i16 110, i16 116, i16 32, i16 40, i16 110>, <8 x i16>* %1147, align 2
  %1148 = getelementptr inbounds i8, i8* %1140, i64 32
  %1149 = bitcast i8* %1148 to <8 x i16>*
  store <8 x i16> <i16 111, i16 110, i16 45, i16 112, i16 111, i16 114, i16 116, i16 97>, <8 x i16>* %1149, align 2
  %1150 = getelementptr inbounds i8, i8* %1140, i64 48
  %1151 = bitcast i8* %1150 to <8 x i16>*
  store <8 x i16> <i16 98, i16 108, i16 101, i16 44, i16 32, i16 111, i16 117, i16 116>, <8 x i16>* %1151, align 2
  %1152 = getelementptr inbounds i8, i8* %1140, i64 64
  %1153 = bitcast i8* %1152 to <8 x i16>*
  store <8 x i16> <i16 115, i16 105, i16 100, i16 101, i16 32, i16 119, i16 101, i16 98>, <8 x i16>* %1153, align 2
  %1154 = getelementptr inbounds i8, i8* %1140, i64 80
  %1155 = bitcast i8* %1154 to <8 x i16>*
  store <8 x i16> <i16 32, i16 115, i16 116, i16 111, i16 114, i16 101, i16 41, i16 0>, <8 x i16>* %1155, align 2
  %1156 = call i8* @_Znwm(i64 32) #13
  %1157 = bitcast i8* %1156 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %1157) #12
  %1158 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1157, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %8) #12
  %1159 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1157, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %7) #12
  %1160 = bitcast i8* %1156 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %1160) #12
  %1161 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1144, i64 0, i32 1, i32 1
  %1162 = load i8, i8* %1161, align 1
  %1163 = icmp slt i8 %1162, 0
  br i1 %1163, label %1164, label %1166

1164:                                             ; preds = %1138
  %1165 = load i8*, i8** %1141, align 8
  call void @_ZdlPv(i8* %1165) #13
  br label %1166

1166:                                             ; preds = %1164, %1138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1139) #12
  %1167 = bitcast %"class.std::__1::basic_string.90"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1167) #12
  %1168 = bitcast %"class.std::__1::basic_string.90"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1168, i64 0, i32 1, i32 1
  store i8 0, i8* %1169, align 1
  %1170 = bitcast %"class.std::__1::basic_string.90"* %5 to i16*
  store i16 0, i16* %1170, align 8
  %1171 = bitcast %"class.std::__1::basic_string.90"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1171) #12
  %1172 = bitcast %"class.std::__1::basic_string.90"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1173 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1172, i64 0, i32 1, i32 1
  store i8 0, i8* %1173, align 1
  %1174 = bitcast %"class.std::__1::basic_string.90"* %6 to i16*
  store i16 0, i16* %1174, align 8
  %1175 = call i8* @_Znwm(i64 32) #13
  %1176 = bitcast i8* %1175 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %1176) #12
  %1177 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1176, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %5) #12
  %1178 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* nonnull %1176, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, %"class.std::__1::basic_string.90"* nonnull dereferenceable(24) %6) #12
  %1179 = bitcast i8* %1175 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %138, %"class.base::Value"* nonnull %1179) #12
  %1180 = load i8, i8* %1173, align 1
  %1181 = icmp slt i8 %1180, 0
  br i1 %1181, label %1182, label %1185

1182:                                             ; preds = %1166
  %1183 = bitcast %"class.std::__1::basic_string.90"* %6 to i8**
  %1184 = load i8*, i8** %1183, align 8
  call void @_ZdlPv(i8* %1184) #13
  br label %1185

1185:                                             ; preds = %1182, %1166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1171) #12
  %1186 = load i8, i8* %1169, align 1
  %1187 = icmp slt i8 %1186, 0
  br i1 %1187, label %1188, label %1191

1188:                                             ; preds = %1185
  %1189 = bitcast %"class.std::__1::basic_string.90"* %5 to i8**
  %1190 = load i8*, i8** %1189, align 8
  call void @_ZdlPv(i8* %1190) #13
  br label %1191

1191:                                             ; preds = %1188, %1185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1167) #12
  %1192 = load i8, i8* %1128, align 1
  %1193 = icmp slt i8 %1192, 0
  br i1 %1193, label %1194, label %1197

1194:                                             ; preds = %1191
  %1195 = bitcast %"class.std::__1::basic_string.90"* %7 to i8**
  %1196 = load i8*, i8** %1195, align 16
  call void @_ZdlPv(i8* %1196) #13
  br label %1197

1197:                                             ; preds = %1191, %1194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1126) #12
  %1198 = bitcast i8* %137 to %"class.base::Value"*
  %1199 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i64 8, %"class.base::Value"* nonnull %1198) #12
  %1200 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0
  %1201 = bitcast %"class.base::Value"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1201) #12
  %1202 = load i8, i8* %54, align 1
  %1203 = icmp slt i8 %1202, 0
  %1204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1205 = load i8*, i8** %1204, align 8
  %1206 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %1207 = select i1 %1203, i8* %1205, i8* %1206
  %1208 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1209 = load i64, i64* %1208, align 8
  %1210 = zext i8 %1202 to i64
  %1211 = select i1 %1203, i64 %1209, i64 %1210
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %51, i8* %1207, i64 %1211) #12
  %1212 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %50, i64 0, i32 0
  call void @_ZN7content19WebUIMessageHandler25ResolveJavascriptCallbackERKN4base5ValueES4_(%"class.content::WebUIMessageHandler"* %1200, %"class.base::Value"* nonnull dereferenceable(32) %51, %"class.base::Value"* nonnull dereferenceable(32) %1212) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1201) #12
  %1213 = load i8, i8* %54, align 1
  %1214 = icmp slt i8 %1213, 0
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1197
  %1216 = load i8*, i8** %1204, align 8
  store i8 0, i8* %1216, align 1
  store i64 0, i64* %1208, align 8
  br label %1218

1217:                                             ; preds = %1197
  store i8 0, i8* %1206, align 1
  store i8 0, i8* %54, align 1
  br label %1218

1218:                                             ; preds = %1215, %1217
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %1212) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #12
  br label %1219

1219:                                             ; preds = %65, %62, %1218, %73
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.75"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #10 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #14
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast %"class.base::Value"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp slt i64 %20, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %56

33:                                               ; preds = %2
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = sub nsw i64 0, %1
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i64 %43, %36
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %36) #12
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %43) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i8* %48, i8* %49) #12
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #12
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %1
  store %"class.base::Value"* %60, %"class.base::Value"** %58, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.88"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.(anonymous namespace)::NaClDomHandler"**
  %11 = load %"class.(anonymous namespace)::NaClDomHandler"*, %"class.(anonymous namespace)::NaClDomHandler"** %10, align 8
  %12 = icmp eq %"class.(anonymous namespace)::NaClDomHandler"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.(anonymous namespace)::NaClDomHandler"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)**
  %38 = load void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)*, void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::vector.88"*)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.(anonymous namespace)::NaClDomHandler"* %29, %"class.std::__1::vector.88"* dereferenceable(24) %1) #12
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS4_9allocatorIS7_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.(anonymous namespace)::NaClDomHandler"**
  %9 = load %"class.(anonymous namespace)::NaClDomHandler"*, %"class.(anonymous namespace)::NaClDomHandler"** %8, align 8
  %10 = icmp ne %"class.(anonymous namespace)::NaClDomHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #9

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #9

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_119CheckPathAndVersionEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) #0 {
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %class.JSONFileValueDeserializer, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %5) #12
  %8 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 1023, %"class.base::FilePath"* nonnull %5) #12
  br i1 %8, label %9, label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::FilePath"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %10, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %9
  %20 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %5) #12
  br i1 %20, label %21, label %46

21:                                               ; preds = %19
  %22 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #12
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %2, %"class.base::FilePath"* nonnull %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i64 23) #12
  %23 = bitcast %class.JSONFileValueDeserializer* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 48, i1 false) #12
  call void @_ZN25JSONFileValueDeserializerC1ERKN4base8FilePathEi(%class.JSONFileValueDeserializer* nonnull %3, %"class.base::FilePath"* nonnull dereferenceable(24) %2, i32 0) #12
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %26 = call %"class.base::Value"* @_ZN25JSONFileValueDeserializer11DeserializeEPiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%class.JSONFileValueDeserializer* nonnull %3, i32* null, %"class.std::__1::basic_string"* nonnull %4) #12
  %27 = icmp eq %"class.base::Value"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i8
  %32 = icmp eq i8 %31, 6
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %"class.base::Value"* %26 to %"class.base::DictionaryValue"*
  %35 = call zeroext i1 @_ZNK4base15DictionaryValue14GetStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* nonnull %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i64 13, %"class.std::__1::basic_string"* %0) #12
  br label %36

36:                                               ; preds = %33, %28
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %26) #12
  %37 = bitcast %"class.base::Value"* %26 to i8*
  call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %36, %21
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  call void @_ZN25JSONFileValueDeserializerD1Ev(%class.JSONFileValueDeserializer* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br label %46

46:                                               ; preds = %1, %9, %19, %45
  %47 = phi i1 [ true, %45 ], [ false, %19 ], [ false, %9 ], [ false, %1 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NaClDomHandler22DidCheckPathAndVersionEPKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1 zeroext) #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 4
  store i8 %4, i8* %6, align 2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 5
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %24, i64 %26) #12
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %35, i64 %36) #12
  br label %38

38:                                               ; preds = %3, %19, %22, %28
  tail call fastcc void @_ZN12_GLOBAL__N_114NaClDomHandler18MaybeRespondToPageEv(%"class.(anonymous namespace)::NaClDomHandler"* %0)
  ret void
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare void @_ZN7content19WebUIMessageHandler25ResolveJavascriptCallbackERKN4base5ValueES4_(%"class.content::WebUIMessageHandler"*, %"class.base::Value"* dereferenceable(32), %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #9

declare zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback.145"*, %"class.base::OnceCallback.145"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE(%"class.base::OnceCallback.132"*, %"class.std::__1::unique_ptr.139"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.132", align 8
  %4 = tail call i8* @_Znwm(i64 1) #13
  %5 = bitcast %"class.base::OnceCallback.132"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.132"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.132"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to i1 (%"class.base::internal::BindStateBase"*)**
  %14 = load i1 (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::BindStateBase"* %11) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %4, align 1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* %4, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %2
  call void @_ZdlPv(i8* nonnull %18) #13
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE(%"class.base::OnceCallback.133"*, %"class.std::__1::unique_ptr.139"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.133", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1, !range !8
  %7 = icmp ne i8 %6, 0
  %8 = bitcast %"class.base::OnceCallback.133"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.133"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.133"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %3, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i1)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i1 zeroext %7) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.132", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.132"*, %"class.std::__1::unique_ptr.139"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.139"**
  %8 = bitcast %"class.base::OnceCallback.132"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = load void (%"class.base::OnceCallback.132"*, %"class.std::__1::unique_ptr.139"*)*, void (%"class.base::OnceCallback.132"*, %"class.std::__1::unique_ptr.139"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.132"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %7, align 8
  call void %9(%"class.base::OnceCallback.132"* nonnull %2, %"class.std::__1::unique_ptr.139"* %14) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.133", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.133"*, %"class.std::__1::unique_ptr.139"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.139"**
  %8 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.133"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = load void (%"class.base::OnceCallback.133"*, %"class.std::__1::unique_ptr.139"*)*, void (%"class.base::OnceCallback.133"*, %"class.std::__1::unique_ptr.139"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.133"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.133"* nonnull %2, %"class.std::__1::unique_ptr.139"* %8) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.139"**
  %6 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %5, align 8
  store %"class.std::__1::unique_ptr.139"* null, %"class.std::__1::unique_ptr.139"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.139"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZdlPv(i8* nonnull %10) #13
  br label %13

13:                                               ; preds = %12, %8
  %14 = bitcast %"class.std::__1::unique_ptr.139"* %6 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %3, %13
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #12
  %18 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSA_EEEFbvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to i1 (%"class.std::__1::basic_string"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::basic_string"**
  %6 = load i1 (%"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*)** %3, align 8
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %8 = tail call zeroext i1 %6(%"class.std::__1::basic_string"* %7) #12
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32, %"class.base::FilePath"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #9

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN25JSONFileValueDeserializerC1ERKN4base8FilePathEi(%class.JSONFileValueDeserializer*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare %"class.base::Value"* @_ZN25JSONFileValueDeserializer11DeserializeEPiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%class.JSONFileValueDeserializer*, i32*, %"class.std::__1::basic_string"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue14GetStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN25JSONFileValueDeserializerD1Ev(%class.JSONFileValueDeserializer*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::basic_string"**
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %10, label %11, label %46

11:                                               ; preds = %2
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.(anonymous namespace)::NaClDomHandler"**
  %14 = load %"class.(anonymous namespace)::NaClDomHandler"*, %"class.(anonymous namespace)::NaClDomHandler"** %13, align 8
  %15 = icmp eq %"class.(anonymous namespace)::NaClDomHandler"* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %23, %16
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %21
  %32 = bitcast i8* %31 to %"class.(anonymous namespace)::NaClDomHandler"*
  %33 = and i64 %18, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %18, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)**
  %41 = load void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %18 to void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%"class.(anonymous namespace)::NaClDomHandler"*, %"class.std::__1::basic_string"*, i1)* [ %41, %35 ], [ %43, %42 ]
  call void %45(%"class.(anonymous namespace)::NaClDomHandler"* %32, %"class.std::__1::basic_string"* %8, i1 zeroext %1) #12
  br label %46

46:                                               ; preds = %2, %11, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperISA_NS4_14default_deleteISA_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.std::__1::basic_string"**
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %13, %8
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %3, %16
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %20 = bitcast void (%"class.base::internal::BindStateBase"*)** %19 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %20) #12
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEEEbPKNS0_13BindStateBaseENSN_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.(anonymous namespace)::NaClDomHandler"**
  %9 = load %"class.(anonymous namespace)::NaClDomHandler"*, %"class.(anonymous namespace)::NaClDomHandler"** %8, align 8
  %10 = icmp ne %"class.(anonymous namespace)::NaClDomHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.90"* sret, i32) local_unnamed_addr #1

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.90"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN12version_info16GetVersionNumberEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

declare void @_ZN6chrome14GetChannelNameEN4base11StrongAliasINS_21WithExtendedStableTagEbEE(%"class.std::__1::basic_string"* sret, i8) local_unnamed_addr #1

declare void @_ZN12version_info9GetOSTypeEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string.90"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string.90"* noalias sret, %"class.std::__1::basic_string.90"* dereferenceable(24), i16*) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.90"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::basic_string.90"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = load i16, i16* %2, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %3 ]
  %20 = phi i16* [ %22, %18 ], [ %2, %3 ]
  %21 = add i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %20, i64 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %3
  %26 = phi i64 [ 0, %3 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string.90"* %1 to i16*
  %30 = select i1 %11, i16* %28, i16* %29
  %31 = add i64 %26, %15
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = bitcast %"class.std::__1::basic_string.90"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %25
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %35
  %38 = trunc i64 %15 to i8
  %39 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %53

42:                                               ; preds = %35
  %43 = add nuw nsw i64 %31, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @abort() #14
  unreachable

47:                                               ; preds = %42
  %48 = shl i64 %44, 1
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string.90"* %0 to i8**
  store i8* %49, i8** %51, align 8
  %52 = or i64 %44, -9223372036854775808
  store i64 %52, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %53

53:                                               ; preds = %47, %37
  %54 = phi i16* [ %41, %37 ], [ %50, %47 ]
  %55 = icmp eq i64 %15, 0
  br i1 %55, label %199, label %56

56:                                               ; preds = %53
  %57 = icmp ult i64 %15, 16
  br i1 %57, label %146, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %54, i64 %15
  %60 = getelementptr i16, i16* %30, i64 %15
  %61 = icmp ult i16* %54, %60
  %62 = icmp ult i16* %30, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %58
  %65 = and i64 %15, -16
  %66 = sub i64 %15, %65
  %67 = getelementptr i16, i16* %30, i64 %65
  %68 = getelementptr i16, i16* %54, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %30, i64 %77
  %80 = getelementptr i16, i16* %54, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !77
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !77
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !80, !noalias !77
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !80, !noalias !77
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %30, i64 %89
  %91 = getelementptr i16, i16* %54, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !77
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !77
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !80, !noalias !77
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !80, !noalias !77
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %30, i64 %100
  %102 = getelementptr i16, i16* %54, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !77
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !77
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !80, !noalias !77
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !80, !noalias !77
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %30, i64 %111
  %113 = getelementptr i16, i16* %54, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !77
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !77
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !80, !noalias !77
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !80, !noalias !77
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !82

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %30, i64 %129
  %132 = getelementptr i16, i16* %54, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !77
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !77
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !80, !noalias !77
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !80, !noalias !77
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !83

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %15, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %58, %56
  %147 = phi i64 [ %15, %58 ], [ %15, %56 ], [ %66, %144 ]
  %148 = phi i16* [ %30, %58 ], [ %30, %56 ], [ %67, %144 ]
  %149 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !84

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !85

199:                                              ; preds = %164, %169, %144, %53
  %200 = getelementptr inbounds i16, i16* %54, i64 %15
  store i16 0, i16* %200, align 2
  %201 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %210

205:                                              ; preds = %199
  %206 = load i64, i64* %6, align 8
  %207 = and i64 %206, 9223372036854775807
  %208 = add nsw i64 %207, -1
  %209 = load i64, i64* %5, align 8
  br label %212

210:                                              ; preds = %199
  %211 = zext i8 %203 to i64
  br label %212

212:                                              ; preds = %210, %205
  %213 = phi i64 [ %208, %205 ], [ 10, %210 ]
  %214 = phi i64 [ %209, %205 ], [ %211, %210 ]
  %215 = sub i64 %213, %214
  %216 = icmp ult i64 %215, %26
  br i1 %216, label %376, label %217

217:                                              ; preds = %212
  %218 = icmp eq i64 %26, 0
  br i1 %218, label %379, label %219

219:                                              ; preds = %217
  %220 = load i16*, i16** %4, align 8
  %221 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  %222 = select i1 %204, i16* %220, i16* %221
  %223 = getelementptr inbounds i16, i16* %222, i64 %214
  %224 = icmp ult i64 %26, 16
  br i1 %224, label %314, label %225

225:                                              ; preds = %219
  %226 = add i64 %214, %26
  %227 = getelementptr i16, i16* %222, i64 %226
  %228 = getelementptr i16, i16* %2, i64 %26
  %229 = icmp ult i16* %223, %228
  %230 = icmp ugt i16* %227, %2
  %231 = and i1 %229, %230
  br i1 %231, label %314, label %232

232:                                              ; preds = %225
  %233 = and i64 %26, -16
  %234 = sub i64 %26, %233
  %235 = getelementptr i16, i16* %2, i64 %233
  %236 = getelementptr i16, i16* %223, i64 %233
  %237 = add i64 %233, -16
  %238 = lshr exact i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp ult i64 %237, 48
  br i1 %241, label %293, label %242

242:                                              ; preds = %232
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %290, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %291, %244 ]
  %247 = getelementptr i16, i16* %2, i64 %245
  %248 = getelementptr i16, i16* %223, i64 %245
  %249 = bitcast i16* %247 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !86
  %251 = getelementptr i16, i16* %247, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !86
  %254 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %254, align 2, !alias.scope !89, !noalias !86
  %255 = getelementptr i16, i16* %248, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %256, align 2, !alias.scope !89, !noalias !86
  %257 = or i64 %245, 16
  %258 = getelementptr i16, i16* %2, i64 %257
  %259 = getelementptr i16, i16* %223, i64 %257
  %260 = bitcast i16* %258 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !86
  %262 = getelementptr i16, i16* %258, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !86
  %265 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !89, !noalias !86
  %266 = getelementptr i16, i16* %259, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !89, !noalias !86
  %268 = or i64 %245, 32
  %269 = getelementptr i16, i16* %2, i64 %268
  %270 = getelementptr i16, i16* %223, i64 %268
  %271 = bitcast i16* %269 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !86
  %273 = getelementptr i16, i16* %269, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !86
  %276 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !89, !noalias !86
  %277 = getelementptr i16, i16* %270, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !89, !noalias !86
  %279 = or i64 %245, 48
  %280 = getelementptr i16, i16* %2, i64 %279
  %281 = getelementptr i16, i16* %223, i64 %279
  %282 = bitcast i16* %280 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !86
  %284 = getelementptr i16, i16* %280, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !86
  %287 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !89, !noalias !86
  %288 = getelementptr i16, i16* %281, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !89, !noalias !86
  %290 = add i64 %245, 64
  %291 = add i64 %246, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %244, !llvm.loop !91

293:                                              ; preds = %244, %232
  %294 = phi i64 [ 0, %232 ], [ %290, %244 ]
  %295 = icmp eq i64 %240, 0
  br i1 %295, label %312, label %296

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %309, %296 ], [ %294, %293 ]
  %298 = phi i64 [ %310, %296 ], [ %240, %293 ]
  %299 = getelementptr i16, i16* %2, i64 %297
  %300 = getelementptr i16, i16* %223, i64 %297
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !86
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !86
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !89, !noalias !86
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !89, !noalias !86
  %309 = add i64 %297, 16
  %310 = add i64 %298, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %296, !llvm.loop !92

312:                                              ; preds = %296, %293
  %313 = icmp eq i64 %26, %233
  br i1 %313, label %367, label %314

314:                                              ; preds = %312, %225, %219
  %315 = phi i64 [ %26, %225 ], [ %26, %219 ], [ %234, %312 ]
  %316 = phi i16* [ %2, %225 ], [ %2, %219 ], [ %235, %312 ]
  %317 = phi i16* [ %223, %225 ], [ %223, %219 ], [ %236, %312 ]
  %318 = add i64 %315, -1
  %319 = and i64 %315, 7
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %332, label %321

321:                                              ; preds = %314, %321
  %322 = phi i64 [ %327, %321 ], [ %315, %314 ]
  %323 = phi i16* [ %329, %321 ], [ %316, %314 ]
  %324 = phi i16* [ %328, %321 ], [ %317, %314 ]
  %325 = phi i64 [ %330, %321 ], [ %319, %314 ]
  %326 = load i16, i16* %323, align 2
  store i16 %326, i16* %324, align 2
  %327 = add i64 %322, -1
  %328 = getelementptr inbounds i16, i16* %324, i64 1
  %329 = getelementptr inbounds i16, i16* %323, i64 1
  %330 = add i64 %325, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %321, !llvm.loop !93

332:                                              ; preds = %321, %314
  %333 = phi i64 [ %315, %314 ], [ %327, %321 ]
  %334 = phi i16* [ %316, %314 ], [ %329, %321 ]
  %335 = phi i16* [ %317, %314 ], [ %328, %321 ]
  %336 = icmp ult i64 %318, 7
  br i1 %336, label %367, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %363, %337 ], [ %333, %332 ]
  %339 = phi i16* [ %365, %337 ], [ %334, %332 ]
  %340 = phi i16* [ %364, %337 ], [ %335, %332 ]
  %341 = load i16, i16* %339, align 2
  store i16 %341, i16* %340, align 2
  %342 = getelementptr inbounds i16, i16* %340, i64 1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %340, i64 2
  %346 = getelementptr inbounds i16, i16* %339, i64 2
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %340, i64 3
  %349 = getelementptr inbounds i16, i16* %339, i64 3
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %340, i64 4
  %352 = getelementptr inbounds i16, i16* %339, i64 4
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %340, i64 5
  %355 = getelementptr inbounds i16, i16* %339, i64 5
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %340, i64 6
  %358 = getelementptr inbounds i16, i16* %339, i64 6
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %340, i64 7
  %361 = getelementptr inbounds i16, i16* %339, i64 7
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = add i64 %338, -8
  %364 = getelementptr inbounds i16, i16* %340, i64 8
  %365 = getelementptr inbounds i16, i16* %339, i64 8
  %366 = icmp eq i64 %363, 0
  br i1 %366, label %367, label %337, !llvm.loop !94

367:                                              ; preds = %332, %337, %312
  %368 = add i64 %214, %26
  %369 = load i8, i8* %202, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  store i64 %368, i64* %5, align 8
  br label %374

372:                                              ; preds = %367
  %373 = trunc i64 %368 to i8
  store i8 %373, i8* %202, align 1
  br label %374

374:                                              ; preds = %372, %371
  %375 = getelementptr inbounds i16, i16* %222, i64 %368
  store i16 0, i16* %375, align 2
  br label %379

376:                                              ; preds = %212
  %377 = add i64 %214, %26
  %378 = sub i64 %377, %213
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* %0, i64 %213, i64 %378, i64 %214, i64 %214, i64 0, i64 %26, i16* %2) #12
  br label %379

379:                                              ; preds = %217, %374, %376
  ret void
}

declare void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.90"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114NaClDomHandler15isPluginEnabledEm(%"class.(anonymous namespace)::NaClDomHandler"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.88", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector.88"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %9 = tail call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #12
  %10 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %4) #12
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 18, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 18, i1 false) #12
  %14 = getelementptr inbounds i8, i8* %11, i64 18
  store i8 0, i8* %14, align 2
  %15 = bitcast %"class.content::PluginService"* %9 to i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)***
  %16 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)**, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)** %16, i64 3
  %18 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.88"*, %"class.std::__1::vector.101"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.content::PluginService"* %9, %class.GURL* nonnull dereferenceable(120) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i1 zeroext false, %"class.std::__1::vector.88"* nonnull %3, %"class.std::__1::vector.101"* null) #12
  %20 = load i8, i8* %13, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #12
  %26 = getelementptr inbounds %"class.(anonymous namespace)::NaClDomHandler", %"class.(anonymous namespace)::NaClDomHandler"* %0, i64 0, i32 0, i32 2
  %27 = load %"class.content::WebUI"*, %"class.content::WebUI"** %26, align 8
  %28 = call %class.Profile* @_ZN7Profile9FromWebUIEPN7content5WebUIE(%"class.content::WebUI"* %27) #12
  %29 = call %class.PluginPrefs* @_ZN11PluginPrefs13GetForProfileEP7Profile(%class.Profile* %28) #12
  %30 = icmp eq %class.PluginPrefs* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.PluginPrefs, %class.PluginPrefs* %29, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.194", %"class.base::RefCountedThreadSafe.194"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.194", %"class.base::RefCountedThreadSafe.194"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.194"* %37 to %class.RefcountedKeyedService*
  call void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService* %38) #12
  br label %39

39:                                               ; preds = %25, %31, %36
  %40 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %7, align 8
  %41 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %8, align 8
  %42 = icmp eq %"struct.content::WebPluginInfo"* %40, %41
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %40, i64 %1
  %45 = call zeroext i1 @_ZNK11PluginPrefs15IsPluginEnabledERKN7content13WebPluginInfoE(%class.PluginPrefs* %29, %"struct.content::WebPluginInfo"* dereferenceable(136) %44) #12
  %46 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %7, align 8
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi %"struct.content::WebPluginInfo"* [ %46, %43 ], [ %40, %39 ]
  %49 = phi i1 [ %45, %43 ], [ false, %39 ]
  %50 = icmp eq %"struct.content::WebPluginInfo"* %48, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.content::WebPluginInfo"* %48 to i8*
  %53 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %8, align 8
  %54 = icmp eq %"struct.content::WebPluginInfo"* %53, %48
  br i1 %54, label %62, label %55

55:                                               ; preds = %51, %55
  %56 = phi %"struct.content::WebPluginInfo"* [ %57, %55 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %56, i64 -1
  call void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"* %57) #12
  %58 = icmp eq %"struct.content::WebPluginInfo"* %57, %48
  br i1 %58, label %59, label %55

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::vector.88"* %3 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i8* [ %61, %59 ], [ %52, %51 ]
  store %"struct.content::WebPluginInfo"* %48, %"struct.content::WebPluginInfo"** %8, align 8
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %47, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string.90"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2, %5
  %6 = phi i64 [ %8, %5 ], [ 0, %2 ]
  %7 = phi i16* [ %9, %5 ], [ %1, %2 ]
  %8 = add i64 %6, 1
  %9 = getelementptr inbounds i16, i16* %7, i64 1
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %2
  %13 = phi i64 [ 0, %2 ], [ %8, %5 ]
  %14 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 9223372036854775807
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %12
  %26 = zext i8 %16 to i64
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i64 [ %22, %18 ], [ 10, %25 ]
  %29 = phi i64 [ %24, %18 ], [ %26, %25 ]
  %30 = sub i64 %28, %29
  %31 = icmp ult i64 %30, %13
  br i1 %31, label %213, label %32

32:                                               ; preds = %27
  %33 = icmp eq i64 %13, 0
  br i1 %33, label %216, label %34

34:                                               ; preds = %32
  br i1 %17, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i16* [ %37, %35 ], [ %39, %38 ]
  %42 = getelementptr inbounds i16, i16* %41, i64 %29
  store i16 %3, i16* %42, align 2
  %43 = add i64 %13, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %203, label %45

45:                                               ; preds = %40
  %46 = icmp ult i64 %43, 16
  br i1 %46, label %150, label %47

47:                                               ; preds = %45
  %48 = add i64 %29, 1
  %49 = getelementptr i16, i16* %41, i64 %48
  %50 = add i64 %29, %13
  %51 = getelementptr i16, i16* %41, i64 %50
  %52 = getelementptr i16, i16* %1, i64 1
  %53 = getelementptr i16, i16* %1, i64 %13
  %54 = icmp ult i16* %49, %53
  %55 = icmp ult i16* %52, %51
  %56 = and i1 %54, %55
  br i1 %56, label %150, label %57

57:                                               ; preds = %47
  %58 = and i64 %43, -16
  %59 = getelementptr i16, i16* %1, i64 %58
  %60 = sub i64 %43, %58
  %61 = getelementptr i16, i16* %42, i64 %58
  %62 = add i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %126, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  %69 = getelementptr i16, i16* %1, i64 1
  %70 = getelementptr i16, i16* %42, i64 1
  %71 = getelementptr i16, i16* %1, i64 1
  %72 = getelementptr i16, i16* %42, i64 1
  %73 = getelementptr i16, i16* %1, i64 1
  %74 = getelementptr i16, i16* %42, i64 1
  %75 = getelementptr i16, i16* %1, i64 1
  %76 = getelementptr i16, i16* %42, i64 1
  br label %77

77:                                               ; preds = %77, %67
  %78 = phi i64 [ 0, %67 ], [ %123, %77 ]
  %79 = phi i64 [ %68, %67 ], [ %124, %77 ]
  %80 = getelementptr inbounds i16, i16* %69, i64 %78
  %81 = getelementptr inbounds i16, i16* %70, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !95
  %84 = getelementptr inbounds i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !95
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !98, !noalias !95
  %88 = getelementptr inbounds i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !98, !noalias !95
  %90 = or i64 %78, 16
  %91 = getelementptr inbounds i16, i16* %71, i64 %90
  %92 = getelementptr inbounds i16, i16* %72, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !95
  %95 = getelementptr inbounds i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !95
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !98, !noalias !95
  %99 = getelementptr inbounds i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !98, !noalias !95
  %101 = or i64 %78, 32
  %102 = getelementptr inbounds i16, i16* %73, i64 %101
  %103 = getelementptr inbounds i16, i16* %74, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !95
  %106 = getelementptr inbounds i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !95
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !98, !noalias !95
  %110 = getelementptr inbounds i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !98, !noalias !95
  %112 = or i64 %78, 48
  %113 = getelementptr inbounds i16, i16* %75, i64 %112
  %114 = getelementptr inbounds i16, i16* %76, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !95
  %117 = getelementptr inbounds i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !95
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !98, !noalias !95
  %121 = getelementptr inbounds i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !98, !noalias !95
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !100

126:                                              ; preds = %77, %57
  %127 = phi i64 [ 0, %57 ], [ %123, %77 ]
  %128 = icmp eq i64 %65, 0
  br i1 %128, label %148, label %129

129:                                              ; preds = %126
  %130 = getelementptr i16, i16* %1, i64 1
  %131 = getelementptr i16, i16* %42, i64 1
  br label %132

132:                                              ; preds = %132, %129
  %133 = phi i64 [ %127, %129 ], [ %145, %132 ]
  %134 = phi i64 [ %65, %129 ], [ %146, %132 ]
  %135 = getelementptr inbounds i16, i16* %130, i64 %133
  %136 = getelementptr inbounds i16, i16* %131, i64 %133
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !95
  %139 = getelementptr inbounds i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !95
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !98, !noalias !95
  %143 = getelementptr inbounds i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !98, !noalias !95
  %145 = add i64 %133, 16
  %146 = add i64 %134, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %132, !llvm.loop !101

148:                                              ; preds = %132, %126
  %149 = icmp eq i64 %43, %58
  br i1 %149, label %203, label %150

150:                                              ; preds = %148, %47, %45
  %151 = phi i16* [ %1, %47 ], [ %1, %45 ], [ %59, %148 ]
  %152 = phi i64 [ %43, %47 ], [ %43, %45 ], [ %60, %148 ]
  %153 = phi i16* [ %42, %47 ], [ %42, %45 ], [ %61, %148 ]
  %154 = add i64 %152, -1
  %155 = and i64 %152, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %150, %157
  %158 = phi i16* [ %162, %157 ], [ %151, %150 ]
  %159 = phi i64 [ %165, %157 ], [ %152, %150 ]
  %160 = phi i16* [ %163, %157 ], [ %153, %150 ]
  %161 = phi i64 [ %166, %157 ], [ %155, %150 ]
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %160, i64 1
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = add i64 %159, -1
  %166 = add i64 %161, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !102

168:                                              ; preds = %157, %150
  %169 = phi i16* [ %151, %150 ], [ %162, %157 ]
  %170 = phi i64 [ %152, %150 ], [ %165, %157 ]
  %171 = phi i16* [ %153, %150 ], [ %163, %157 ]
  %172 = icmp ult i64 %154, 7
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %173
  %174 = phi i16* [ %198, %173 ], [ %169, %168 ]
  %175 = phi i64 [ %201, %173 ], [ %170, %168 ]
  %176 = phi i16* [ %199, %173 ], [ %171, %168 ]
  %177 = getelementptr inbounds i16, i16* %174, i64 1
  %178 = getelementptr inbounds i16, i16* %176, i64 1
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %174, i64 2
  %181 = getelementptr inbounds i16, i16* %176, i64 2
  %182 = load i16, i16* %180, align 2
  store i16 %182, i16* %181, align 2
  %183 = getelementptr inbounds i16, i16* %174, i64 3
  %184 = getelementptr inbounds i16, i16* %176, i64 3
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %174, i64 4
  %187 = getelementptr inbounds i16, i16* %176, i64 4
  %188 = load i16, i16* %186, align 2
  store i16 %188, i16* %187, align 2
  %189 = getelementptr inbounds i16, i16* %174, i64 5
  %190 = getelementptr inbounds i16, i16* %176, i64 5
  %191 = load i16, i16* %189, align 2
  store i16 %191, i16* %190, align 2
  %192 = getelementptr inbounds i16, i16* %174, i64 6
  %193 = getelementptr inbounds i16, i16* %176, i64 6
  %194 = load i16, i16* %192, align 2
  store i16 %194, i16* %193, align 2
  %195 = getelementptr inbounds i16, i16* %174, i64 7
  %196 = getelementptr inbounds i16, i16* %176, i64 7
  %197 = load i16, i16* %195, align 2
  store i16 %197, i16* %196, align 2
  %198 = getelementptr inbounds i16, i16* %174, i64 8
  %199 = getelementptr inbounds i16, i16* %176, i64 8
  %200 = load i16, i16* %198, align 2
  store i16 %200, i16* %199, align 2
  %201 = add i64 %175, -8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %173, !llvm.loop !103

203:                                              ; preds = %168, %173, %148, %40
  %204 = add i64 %29, %13
  %205 = load i8, i8* %15, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %208, align 8
  br label %211

209:                                              ; preds = %203
  %210 = trunc i64 %204 to i8
  store i8 %210, i8* %15, align 1
  br label %211

211:                                              ; preds = %209, %207
  %212 = getelementptr inbounds i16, i16* %41, i64 %204
  store i16 0, i16* %212, align 2
  br label %216

213:                                              ; preds = %27
  %214 = add i64 %29, %13
  %215 = sub i64 %214, %28
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* %0, i64 %28, i64 %215, i64 %29, i64 %29, i64 0, i64 %13, i16* %1) #12
  br label %216

216:                                              ; preds = %32, %211, %213
  ret %"class.std::__1::basic_string.90"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.90"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !104
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !104
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !107, !noalias !104
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !107, !noalias !104
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !104
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !104
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !107, !noalias !104
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !107, !noalias !104
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !104
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !104
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !107, !noalias !104
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !107, !noalias !104
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !104
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !104
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !107, !noalias !104
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !107, !noalias !104
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !109

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !104
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !104
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !107, !noalias !104
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !107, !noalias !104
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !110

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !111

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !112

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !113

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !114

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !115

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !117
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !117
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !120, !noalias !117
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !120, !noalias !117
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !117
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !117
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !120, !noalias !117
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !120, !noalias !117
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !117
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !117
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !120, !noalias !117
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !120, !noalias !117
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !117
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !117
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !120, !noalias !117
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !120, !noalias !117
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !122

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !117
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !117
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !120, !noalias !117
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !120, !noalias !117
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !123

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !124

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !125

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.90"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare %class.PluginPrefs* @_ZN11PluginPrefs13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11PluginPrefs15IsPluginEnabledERKN7content13WebPluginInfoE(%class.PluginPrefs*, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.90"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.90"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !126
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !126
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !129, !noalias !126
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !129, !noalias !126
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !126
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !126
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !129, !noalias !126
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !129, !noalias !126
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !126
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !126
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !129, !noalias !126
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !129, !noalias !126
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !126
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !126
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !129, !noalias !126
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !129, !noalias !126
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !131

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !126
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !126
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !129, !noalias !126
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !129, !noalias !126
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !132

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !133

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !134

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !135
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !135
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !138, !noalias !135
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !138, !noalias !135
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !135
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !135
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !138, !noalias !135
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !138, !noalias !135
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !140

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !135
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !135
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !138, !noalias !135
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !138, !noalias !135
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !141

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !142

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !143
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !143
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !146, !noalias !143
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !146, !noalias !143
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !143
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !143
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !146, !noalias !143
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !146, !noalias !143
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !143
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !143
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !146, !noalias !143
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !146, !noalias !143
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !143
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !143
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !146, !noalias !143
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !146, !noalias !143
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !148

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !143
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !143
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !146, !noalias !143
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !146, !noalias !143
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !149

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !150

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !151

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !152
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !152
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !155, !noalias !152
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !155, !noalias !152
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !152
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !152
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !155, !noalias !152
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !155, !noalias !152
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !157

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !152
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !152
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !155, !noalias !152
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !155, !noalias !152
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !158

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !159

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #12
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.90"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.90"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !160
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !160
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !163, !noalias !160
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !163, !noalias !160
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !160
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !160
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !163, !noalias !160
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !163, !noalias !160
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !160
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !160
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !163, !noalias !160
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !163, !noalias !160
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !160
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !160
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !163, !noalias !160
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !163, !noalias !160
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !165

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !160
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !160
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !163, !noalias !160
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !163, !noalias !160
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !166

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !167

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !168

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !169
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !169
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !172, !noalias !169
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !172, !noalias !169
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !169
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !169
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !172, !noalias !169
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !172, !noalias !169
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !174

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !169
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !169
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !172, !noalias !169
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !172, !noalias !169
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !175

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !176

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.90", %"class.std::__1::basic_string.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.90"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #12
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.90"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #11

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #9

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNS_9ListValueEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base14WeakPtrFactoryIN12_GLOBAL__N_114NaClDomHandlerEE10GetWeakPtrEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base14WeakPtrFactoryIN12_GLOBAL__N_114NaClDomHandlerEE10GetWeakPtrEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS3_9allocatorIS6_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN12_GLOBAL__N_114NaClDomHandlerEFvRKNSt3__16vectorIN7content13WebPluginInfoENS3_9allocatorIS6_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJRSA_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJRSA_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIPFbPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJRS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIPFbPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJRS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base14WeakPtrFactoryIN12_GLOBAL__N_114NaClDomHandlerEE10GetWeakPtrEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base14WeakPtrFactoryIN12_GLOBAL__N_114NaClDomHandlerEE10GetWeakPtrEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJNS_7WeakPtrIS4_EENS0_12OwnedWrapperISB_NS5_14default_deleteISB_EEEEEEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base8BindOnceIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbEJNS_7WeakPtrIS2_EENS_8internal12OwnedWrapperIS9_NS3_14default_deleteIS9_EEEEEEENS_12OnceCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8BindOnceIMN12_GLOBAL__N_114NaClDomHandlerEFvPKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbEJNS_7WeakPtrIS2_EENS_8internal12OwnedWrapperIS9_NS3_14default_deleteIS9_EEEEEEENS_12OnceCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_RSA_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_RSA_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = !{!50, !53}
!58 = distinct !{!58, !59}
!59 = !{!"llvm.loop.isvectorized", i32 1}
!60 = distinct !{!60, !61}
!61 = !{!"llvm.loop.unroll.disable"}
!62 = distinct !{!62, !61}
!63 = distinct !{!63, !59}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = !{!65, !68}
!73 = distinct !{!73, !59}
!74 = distinct !{!74, !61}
!75 = distinct !{!75, !61}
!76 = distinct !{!76, !59}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !59}
!83 = distinct !{!83, !61}
!84 = distinct !{!84, !61}
!85 = distinct !{!85, !59}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !59}
!92 = distinct !{!92, !61}
!93 = distinct !{!93, !61}
!94 = distinct !{!94, !59}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !59}
!101 = distinct !{!101, !61}
!102 = distinct !{!102, !61}
!103 = distinct !{!103, !59}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !59}
!110 = distinct !{!110, !61}
!111 = distinct !{!111, !61}
!112 = distinct !{!112, !59}
!113 = distinct !{!113, !59}
!114 = distinct !{!114, !61}
!115 = distinct !{!115, !116, !59}
!116 = !{!"llvm.loop.unroll.runtime.disable"}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !59}
!123 = distinct !{!123, !61}
!124 = distinct !{!124, !61}
!125 = distinct !{!125, !59}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !59}
!132 = distinct !{!132, !61}
!133 = distinct !{!133, !61}
!134 = distinct !{!134, !59}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !59}
!141 = distinct !{!141, !61}
!142 = distinct !{!142, !59}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !59}
!149 = distinct !{!149, !61}
!150 = distinct !{!150, !61}
!151 = distinct !{!151, !59}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !59}
!158 = distinct !{!158, !61}
!159 = distinct !{!159, !59}
!160 = !{!161}
!161 = distinct !{!161, !162}
!162 = distinct !{!162, !"LVerDomain"}
!163 = !{!164}
!164 = distinct !{!164, !162}
!165 = distinct !{!165, !59}
!166 = distinct !{!166, !61}
!167 = distinct !{!167, !61}
!168 = distinct !{!168, !59}
!169 = !{!170}
!170 = distinct !{!170, !171}
!171 = distinct !{!171, !"LVerDomain"}
!172 = !{!173}
!173 = distinct !{!173, !171}
!174 = distinct !{!174, !59}
!175 = distinct !{!175, !61}
!176 = distinct !{!176, !59}
